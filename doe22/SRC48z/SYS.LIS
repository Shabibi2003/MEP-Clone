      SUBROUTINE SYSTEM                                                         SYSTEM   2
C                                                                               SYSTEM   3
C                                                                               SYSTEM   4
C              ***************************************************              SYSTEM   5
C              *                                                 *              SYSTEM   6
C              *                SYSTEMS PROGRAM                  *              SYSTEM   7
C              *                                                 *              SYSTEM   8
C              ***************************************************              SYSTEM   9
C                                                                               SYSTEM  10
C              DOE PROGRAM FOR BUILDING ENERGY ANALYSIS                         SYSTEM  11
C                                                                               SYSTEM  12
C                                                                               SYSTEM  13
C                                                                               SYSTEM  14
C                                                                               SYSTEM  15
C              DEVELOPED BY                                                     COPYR96  1
C                            J. J. Hirsch & S. D. Gates                         COPYR96  2
C                            James J. Hirsch & Associates                       COPYR96  3
C                            Camarillo, California                              COPYR96  4
C              BASED UPON CODE DEVELOPED BY                                     COPYR96  5
C                            James J. Hirsch                                    COPYR96  6
C                            W. F. Buhl                                         COPYR96  7
C                            A. E. Erdem                                        COPYR96  8
C                            Lawrence Berkeley National Laboratory              COPYR96  9
C                            University of California                           COPYR96 10
Copyright (c) 1997 by James J. Hirsch. All Rights Reserved. Unpublished         COPYR96 11
c rights reserved under the Copyright Laws of the United States.                COPYR96 12
c RESTRICTED RIGHTS NOTICE: Government use, reproduction or disclosure          COPYR96 13
c is subject to restrictions as set forth in Rights in Data (g)(3) in           COPYR96 14
c UC/LBNL purchase order 4607010 with J.J. Hirsch & Associates.                 COPYR96 15
      COMMON /RUNTIM/IDAYBG,IMONBG,IYRBG,IDAYND,IMONND,IYRND                    /RUNTIM/ 2
      COMMON /SUMBUF/ IBUFSL,IBUFSB,IBUFSE                                      /SUMBUF/ 2
      COMMON /HRPSTA/ ISTUF(20)                                                 /HRPSTA/ 2
C                                                                               SYSTEM  31
C                                                                               SYSTEM  32
      COMMON  /BEPS  /  BGAREA, BNAREA, PctSysOvrld, PctPltOvrld,               HVAC6    1
     $                  SiteEnergy, SourceEnergy                                HVAC6    2
      DIMENSION         BEPS(6)                                                 HVAC6    3
      EQUIVALENCE       (BEPS(1),BGAREA)                                        HVAC6    4
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON  /BUF   / DBUF(52,9999), IZREF(9999),                              -048a    8
     &                 DAYMTR(61,24), ElecPeaks5(13,25,24)                      Time     2
      DIMENSION        IDBUF(52,9999), OBUF(42,24,4), IOBUF(42,24,4)            -048a    9
      EQUIVALENCE      (DBUF(1,1),IDBUF(1,1)),                                  /BUF/    5
     1                 (OBUF(1,1,1),DBUF(1,1)),                                 /BUF/    6
     2                 (OBUF(1,1,1),IOBUF(1,1,1))                               /BUF/    7
      COMMON  /CTRL  / VERS(2),IRPFLG(4),IOVRLL(7),IWRTFL,IPROG,                /CTRL/   2
     1                 IFATAL,NAMPRG(3,7),MTRICR                                /CTRL/   3
      COMMON  /DESHRQ/ NDESDY, IDDTYP(2), DESHRQ(360)                           Time     3
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                 IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                        /FILES/  3
     2               , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                   /FILES/  4
     3                 IHRREP(3), IHRPAS(2)                                     /FILES/  5
      COMMON /HOLALT/ NHOLA(2),IHOLTY(2),IHOLDY(60,2),IHOLMN(60,2)              HOLID1   1
      COMMON  /HRCNT/   IHOURM, IHOURY,   IDAY1, IDAY2, IMON1,  IMON2           /HRCNT/  2
      COMMON  /HRREP / Irb, Ihrp, Lrb, Lhrp, Nrb, Nhrp, IVTLIM(3,50),           HR       5
     &                 IGRPtr, IBRPtr, IRSch, IRSchT(5),                        HR       6
     &                 NHRTyp(3), ITBUF(3), ITBUFB(3), ITBUFE(3),               HR       7
     &                 IHREOF, ICDFLG                                           HR       8
      COMMON  /IAX   / IAX, IADIM, IADIMV, IAXMAX, KORE, IAXlds, IAXsys         HR       9
      COMMON /INTS  /  IZERO,IONE,ITWO,ITHREE,IFOUR,IFIVE,ISIX,                 RemPA    9
     $                 ISEVEN,IEIGHT,ININE,ITEN,                                RemPA   10
     $                 I11,I12,I13,I14,I15,I16,I17,I18,I19,I20,                 RemPA   11
     $                 I21,I22,I23,I24,I25,I26,I27,I28,I29,I30,                 RemPA   12
     $                 I31,I32,I33,I34,I35,I36,I37,I38,I39,I40,                 RemPA   13
     $                 I41,I42,I43,I44,I45,I46,I47,I48,I49,I50,                 RemPA   14
     $                 I51,I52,I53,I54,I55,I56,I57,I58,I59,I60,                 HVAC6    6
     $                 I61,I62,I63,I64,I65,I66,I67,I68,I69,I70,                 HVAC6    7
     $                 I71,I72,I73,I74,I75,I76,I77,I78,I79,I80,                 HVAC6    8
     $                 I81,I82,I83,I84,I85,I86,I87,I88,I89,I90,                 HVAC6    9
     $                 I91,I92,I93,I94,I95,I96,I97,I98,I99,I100                 HVAC6   10
      INTEGER          INTS(101)                                                HVAC6   11
      EQUIVALENCE      (INTS(1),IZERO)                                          /INTS/   7
      COMMON  /LOCALD/ STALAT, STALON, ITIMZ, BAZIM, BALTIT,                    /LOCALD/ 2
     1                 SSTALA, CSTALA, TSTALA, SBAZIM, CBAZIM                   /LOCALD/ 3
     +                ,BXORG,BYORG,SHCOEF,TP1,TP2,WSTP1,WSTP2,                  /LOCALD/ 4
     +                 WSHGT,WSHGTL(12),ISREFL,IHOLX                            HOLID1   2
      DIMENSION        LOCALD(32)                                               HOLID1   3
      EQUIVALENCE      (LOCALD(1),STALAT)                                       /LOCALD/ 7
      COMMON  /MISCD / TEMPS(4,9999),CONS(5),TEMPSL(9999),                      -048a   10
     1                 BLDGQH,BLDGQC,BLDGQL,BLDGP,BPMULT,                       /MISCD/  3
     $                 DBTMIN,DBTMAX,WMIN,WMAX,NSPZ(9999),                      -048a   11
     3                 DQ, DTP, DTR, DTS, FPI, PLRCC , POM, TC2, TDM,           /MISCD/  5
     4                 TRA,WCOL,WCOLM,WMM,YPI,KWBTU,BTUKW,UNFILD,Unusedm        RemPA   45
      REAL             KWBTU                                                    /MISCD/  7
      COMMON  /NHRSHR/ NHRSHR(128), IHRCTR(5,128), NHRITM,FILEHR,ICECHS         -048j    1
      INTEGER          FILEHR                                                   /NHRSHR/ 3
      COMMON  /PLANTD/ QHMP,TMP,CFMP,QHPP,CFMPP,                                /PLANTD/ 2
     1                 QHZP,TZP,DHWPKW,DHWPLF,DHWQRP                            RemPA   46
      REAL             PLANTD(10)                                               RemPA   47
      EQUIVALENCE      (PLANTD(1), QHMP)                                        RemPA   48
      COMMON  /IRUNPD/ NRUNPD, JRUNPD, IRUNPD(6,15)                             /IRUNPD/ 2
      COMMON  /PtrSch/ Isched, Nsched, Lsched, NVECT                            HR      11
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      COMMON  /PTRPLT/ Ipm,Ilp,Ich,Ibl,Idw,Itw,Ipv,Ign,Itk,Ihx,                 PV       1
     &                 Iec,Ilm,Iem,Ifm,Ism,Icm,Imm,Imc,Igl,Isp2,                XFC2     1
     &                 Ispare(5),  Ipe,                                         HVAC19   3
     &                 Npm,Nlp,Nch,Nbl,Ndw,Ntw,Npv,Ngn,Ntk,Nhx,                 PV       2
     &                 Nec,Nlm,Nem,Nfm,Nsm,Ncm,Nmm,Nmc,Ngl,Nsp2,                XFC2     2
     &                 Nspare(5),  Npe,                                         HVAC19   6
     &                 Lpm,Llp,Lch,Lbl,Ldw,Ltw,Lpv,Lgn,Ltk,Lhx,                 PV       3
     &                 Lec,Llm,Lem,Lfm,Lsm,Lcm,Lmm,Lmc,Lgl,Lsp2,                XFC2     3
     &                 Lspare(5),  Lpe,                                         HVAC19   9
     &                 Jpm,Jlp,Jch,Jbl,Jdw,Jtw,Jpv,Jgn,Jtk,Jhx,                 PV       4
     &                 Jec,Jlm,Jem,Jfm,Jsm,Jcm,    Jmc,Jgl,                     HVAC19  11
     &                 Jpe, kpr, NumMeters, NumIntHX                            XFC1     1
      COMMON  /REPORT/ IREPRT(4,37),IPRG,IUNIQV(100),IUNIQS(100),IUNIQL         HVAC14   4
      COMMON  /SimCtl/ SimCtrl                                                  /SimCtl/ 2
      INTEGER          SimCtrl                                                  /SimCtl/ 3
      COMMON  /SYSTD / TH,TC,TM,TR,QH,QC,QHZ,QCZ,QHB,QHP,QHUM,                  /SYSTD/  2
     1                 QDHUM,TCMIN,THMAX,QLSUM,QPSUM,CFM,CFMH,CFMC,             /SYSTD/  3
     2                 RCFM,ECFM,CINF,FON,HON,CON,BON,SCONS(3),PH,PC,           /SYSTD/  4
     3                 SKW,FANKW,unused1,WR,WM,WCOIL,WW,PO,D,                   -046f    1
     4                 FTEMP,TCR,QHR,RfanPumpKW,SGAS,SKWQH,SKWQC,QCLAT,         -131    23
     5                 SFKW,RFKW,FONNGT,WSURF,RWalkinQ,TSURF,TRh,               -131    24
     6                 CBF,CBF1,CBF2,EON,PLRCFM,PLRC,PLRH,QCM1,                 /SYSTD/  8
     7                 QCM2,QHM1,EIRM1,EIRM2,EIR,OFKW,QCT,QCS,                  /SYSTD/  9
     8                 WRMAX,WRMIN,CFMRAT,QdistG,QdistL,RON,QHT,                /SYSTD/ 10
     9                 TPOMIN,POMIN,QHSUP,QRSENS,QRLAT,QRREC,QRREJ,             /SYSTD/ 11
     1                 RCOMKW,RDEFKW,RAUXKW,ECFMP,CFMIN,CINFP,DT,DW,            /SYSTD/ 12
     2                 EWB,IC,NATTSP,Q,RETR,SLOAD,QLSUMP,T,TCHUM,TEND,          /SYSTD/ 13
     3                 TS,hgbmin,HPDefE,EconoOnly,TDuctEnv,                     -044e1   1
     4                 QCUNMT,CapRh,CapRph,CapRc                                HVAC25   3
      REAL             SYSTD(113)                                               HVAC19  13
      EQUIVALENCE      (SYSTD(1),TH)                                            RemPA   65
      COMMON  /TIME  / IDOY, IYR, IMO, IDAY, IHR,                               Time     4
     &                 ISCMO, ISCDAY, ISCHR, IDOW, ISCDOW, iDSdates(6),         -044e5   1
     &                 iTimeFlg, iDSFlg, iDDFlg, InitialFlg, LeapYr,            Time     6
     &                 CLOCK(10), MONDSC(13), MONLEN(12), MONSDA(12)            HR      12
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
      COMMON  /ZONED / EXCFM,FH,FC,CFMZ,QHBZ,QOVER,THZ,TCZ,ERMAX,ERMIN,         /ZONED/  2
     1                 TRY,FTD,CORINT,G0,G1,G2,G3,SIGMAG,TL,ZQHR,TAVE,          /ZONED/  3
     2                 ZQH,ZQC,FCHPS(15),ACFM,ZKW,TCMINZ,THMAXZ,                /ZONED/  4
     3                 ERMAXM,ERMINM,THR,CSSCND,CSSVEC,HENOW,QGWIN,             /ZONED/  5
     4                 QSNABT,QGOPWL,QGVEC,CFMCVT,SSFPT,CFMVNT,ZFANKW,          /ZONED/  6
     5                 ZKWCBT,ZKWHBT,ZCapRbbrd, XC,ZC,XH,ZH                     -044e2   7
      REAL ZONED(63)                                                            -044e2   8
      EQUIVALENCE (ZONED(1),EXCFM)                                              /ZONED/  9
      COMMON /SHP   / QCRUN,QCLOAD,QCGAS,QCAUX,QCGSLD,QCGSUP,                   /SHP/    2
     1                QCWAS,QCWASU,QCGSAV,QCFAN,                                /SHP/    3
     2                QHRUN,QHLOAD,QHGAS,QHAUX,QHGSLD,QHGSUP,                   /SHP/    4
     3                QHWAS,QHWASU,QHGDFR,QHFAN,          CUR(25),              /SHP/    5
     4                GSAV1,GASV2,PCH,ISZCZ,GCAP(2),GEDB,QHDFRG,                -044c1   1
     5                GRPM,PLRSUP,CFMCYC,CLPLR,CFMVVT,QHZHP,PCCEDB,             /SHP/    7
     6                IHPREP,IHPOUT,IHPHRR,IHPHRN,IRST,IREN                     /SHP/    8
      COMMON /SHPZ  / QCRUNZ,QCLOADZ,QCGASZ,QCAUXZ,QCGSLDZ,QCGSUPZ,             /SHP/    9
     1                QCWASZ,QCWASUZ,QCGSAVZ,QCFANZ,                            /SHP/   10
     2                QHRUNZ,QHLOADZ,QHGASZ,QHAUXZ,QHGSLDZ,QHGSUPZ,             /SHP/   11
     3                QHWASZ,QHWASUZ,QHGDFRZ,QHFANZ                             /SHP/   12
      DIMENSION       SHP(60),SHPZ(20)                                          /SHP/   13
      EQUIVALENCE     (SHP,QCRUN),(SHPZ,QCRUNZ)                                 /SHP/   14
     1               ,(DFM1,CUR(18)),(DFM2,CUR(19)),(DFM3,CUR(20))              /SHP/   15
      COMMON /WCTRL/   IwinReturn, Imsgflg                                      /WCTRL/  2
#ifndef _DLL                                                                 /* -048     1 */ 
      COMMON /WIN_MB/ MB_OK,MB_ICONSTOP,MB_ICONEXCLAMATION,MB_TASKMODAL,        -048     2
     &                MB_ICONINFORMATION                                        -048     3
#else                                                                        /* -048     4 */ 
      include 'msgbox.fi'                                                       -048     5
#endif                                                                       /* -048     6 */ 
c                                                                               Time    10
c              Initialize the zero level stuff                                  Time    11
      CALL INIT0(IA,1024)                                                       Time    12
      IF( IwinReturn .ne. 0 ) GOTO 4000                                         WinRet   2
c              Initialize all SYSTEM and PLANT common blocks                    Time    13
      CALL InitialSYS                                                           Time    14
      CALL InitialPLT                                                           Time    15
      CALL InitialXface                                                         Time    16
c                                                                               Time    17
c              Read standard and design files, and do design calcs              Time    18
      CALL READSS                                                               Time    19
      IF( IwinReturn .ne. 0 ) GOTO 4000                                         WinRet   3
c              Check to see if verification reports requested                   Time    20
      IF (IREPRT(2,1) .EQ. 1)  CALL SVA                                         Time    21
      IF (IREPRT(2,2) .GT. 0)  CALL SVB                                         Time    22
c              Check for REPORT-ONLY option in verification                     Time    23
      IF(IREPRT(2,15) .EQ. 1)  GO TO 3000                                       Time    24
c              Set outside pressure to STDP for altitute                        Time    46
      PATM   = BLDGP                                                            Time    47
c                                                                               Time    48
c              Loop thru the run periods                                        Time    49
      DO 1000  JRUNPD=1,NRUNPD                                                  Time    50
c              Start of run period initialization                               Time    51
        IF (JRUNPD .EQ. 1) THEN                                                 Time    52
          CALL ZERO(3)                                                          Time    53
          IHOURY = 0                                                            Time    54
        ELSEIF (JRUNPD .EQ. NDESDY+1)  THEN                                     Time    55
          CALL ZERO(4)                                                          Time    56
          IHOURY = 0                                                            Time    57
        ELSE                                                                    Time    58
          CALL ZERO(2)                                                          Time    59
        ENDIF                                                                   Time    60
c              Initialize time                                                  Time    61
        CALL TimeInitial                                                        Time    62
C              Design-day flag                                                  Time    63
        IF (JRUNPD .LE. NDESDY)  THEN                                           Time    64
          iDDFlg = JRUNPD                                                       Time    65
        ELSE                                                                    Time    66
          iDDFlg = 0                                                            Time    67
        ENDIF                                                                   Time    68
c              Set flag for 7 days of initialization                            Time    69
        InitialFlg = 7                                                          Time    70
c              Initialize the hourly reports                                    HR      13
        IF (Nhrp .GT. 0)  CALL HourlyReports(0)                                 HR      14
c                                                                               Time    82
c              Loop through the years                                           Time    83
        DO 800, While(.True.) ! While iTimeFlg .lt. 5                           -047k    1
c              Loop through the months                                          Time    85
          DO 600, While(.True.)  ! While iTimeFlg .lt. 4                        -047k    2
c              Initialize the monthly hour counter                              Time    87
            IHOURM = 0                                                          Time    88
c              Initialize interpolated weather                                  Time    89
            IF (iDDFlg .EQ. 0  .AND.  InitialFlg .GT. 0)  CALL WTHIN0           Time    90
c              Loop through the days                                            Time    91
            DO 400, While(.True.)  ! While iTimeFlg .lt. 3                      -047k    3
c                 Simulate a days worth                                         Time    93
  300         CALL DAYCLS                                                       Time    94
              IF( IwinReturn .ne. 0 ) EXIT                                      WinRet   4
c                 Repeat day if in initialization mode, otherwise stop          Time    95
c                 using interpolated weather                                    Time    96
              IF (InitialFlg .GT. 0)  THEN                                      Time    97
                iTimeFlg   = 0                                                  Time    98
                InitialFlg = InitialFlg - 1                                     Time    99
                IF (InitialFlg .EQ. 0)  CALL WTHINS                             Time   100
                GO TO 300                                                       Time   101
              ENDIF                                                             Time   102
c                 Write a days information to the output file if not a          Time   103
c                 design day and the file will be used                          Time   104
              IF (iDDFlg .EQ. 0  .AND.  IWRTFL .EQ. 1)                          Time   105
     &          WRITE (IPLTO)                                                   Time   106
     &           ((DAYMTR(IM,IIHR),IM=1,NumMeters),IIHR=1,24),                  Time   107
     &           (((ElecPeaks5(IP,IM,IIHR),IP=1,13),IM=1,Nem),IIHR=1,24)        Time   108
c                 End of daily loop                                             Time   109
              IF (iTimeFlg .GT. 2)  EXIT                                        Time   110
  400       CONTINUE                                                            Time   111
c              Write monthly report records                                     Time   112
            IF (iDDFlg .EQ. 0) THEN                                             Time   113
              CALL REPOUT(0,0)                                                  Time   114
            ELSE                                                                Time   115
              CALL REPOUT(0,1)                                                  Time   116
            ENDIF                                                               Time   117
c              zero the monthly report statistics and other info                Time   118
            CALL ZERO(1)                                                        Time   119
c              transfer monthly plant variables to yearly, and                  Time   120
c              zero monthly                                                     Time   121
            IF (iDDFlg .EQ. 0)  THEN                                            Time   122
              SimCtrl = 29                                                      Time   123
              CALL Xface_Statistics                                             Time   124
              CALL PlantStatistics                                              Time   125
              CALL Xface_Reports                                                Time   126
              SimCtrl = 20                                                      Time   127
              CALL Xface_Statistics                                             Time   128
            ENDIF                                                               Time   129
c              End of monthly loop                                              Time   130
            IF (iTimeFlg .GT. 3)  EXIT                                          Time   131
            IF( IwinReturn .ne. 0 ) EXIT                                        WinRet   5
  600     CONTINUE                                                              Time   132
c              End of yearly loop                                               Time   133
          IF (iTimeFlg .GT. 4)  EXIT                                            Time   134
          IF( IwinReturn .ne. 0 ) EXIT                                          WinRet   6
  800   CONTINUE                                                                Time   135
        IF (JRUNPD .EQ. NDESDY) CALL REPOUT(1,1)                                Time   136
c              End of run period loop                                           Time   137
 1000 CONTINUE                                                                  Time   138
C              REPORT WILL NOW WRITE LAST RECORD                                SYSTEM 189
      CALL REPOUT(1,0)                                                          SYSTEM 190
c              Central Plant - end of year statistics and report records        HVAC4    2
      SimCtrl = 39                                                              XFC1    13
      CALL Xface_Statistics                                                     XFC1    14
      CALL PlantStatistics                                                      XFC1    15
      CALL Xface_Reports                                                        XFC1    16
      SimCtrl = 30                                                              XFC1    17
      CALL Xface_Statistics                                                     XFC1    18
c              Close out hourly reports                                         HR      15
      IF (Nhrp .GT. 0)  CALL HourlyReports(6)                                   HR      16
c                                                                               HVAC7    4
c              write design information to economics program                    HVAC7    5
      WRITE (IDSNFL) NEM, NFM, NSM, NCM, NMC,                                   HVAC7    6
     $               SiteEnergy, SourceEnergy,                                  HVAC7    7
     $               NDESDY, NRUNPD, IRUNPD, BGAREA, BNAREA,                    Time   139
     $               NHOLA,IHOLTY,IHOLDY,IHOLMN,iDSFlg,iDSdates                 -044e5   2
c              electric meters                                                  HVAC18   1
      DO  IM=1,NEM                                                              HVAC18   2
        JEM = IEM + (IM-1)*LEM                                                  HVAC18   3
        IF (<em:TYPE> .NE. 4)  THEN                                             HVAC27   2
          WRITE (IDSNFL) (<em:NAME>,II=1,8), ITHREE,                            HVAC27   3
     $      KWBTU, <em:UNIT-INDEX>,<em:DEM-INDEX>,<em;PARENT>                   HVAC27   4
        ELSE                                                                    HVAC27   5
          WRITE (IDSNFL) (<em:NAME>,II=1,8), I13,                               HVAC27   6
     $      KWBTU, <em:UNIT-INDEX>,<em:DEM-INDEX>,<em;PARENT>                   HVAC27   7
        ENDIF                                                                   HVAC27   8
      ENDDO                                                                     HVAC18   6
c              fuel meters                                                      HVAC18   7
      DO  IM=1,NFM                                                              HVAC18   8
        JFM = IFM + (IM-1)*LFM                                                  HVAC18   9
        WRITE (IDSNFL) (<fm:NAME>,II=1,8), <fm:TYPE>+ITHREE,                    HVAC18  10
     $    <fm:BTU/UNIT>,<fm:UNIT-INDEX>,<fm:DEM-INDEX>,IZERO                    HVAC18  11
      ENDDO                                                                     HVAC18  12
c              steam meters                                                     HVAC18  13
      DO  IM=1,NSM                                                              HVAC18  14
        JSM = ISM + (IM-1)*LSM                                                  HVAC18  15
        WRITE (IDSNFL) (<sm:NAME>,II=1,8), IONE,                                HVAC18  16
     $    <sm:BTU/UNIT>,<sm:UNIT-INDEX>,<sm:DEM-INDEX>,IZERO                    HVAC18  17
      ENDDO                                                                     HVAC18  18
c              chilled-water meters                                             HVAC18  19
      DO  IM=1,NCM                                                              HVAC18  20
        JCM = ICM + (IM-1)*LCM                                                  HVAC18  21
        WRITE (IDSNFL) (<cm:NAME>,II=1,8), ITWO,                                HVAC18  22
     $    <cm:BTU/UNIT>,<cm:UNIT-INDEX>,<cm:DEM-INDEX>,IZERO                    HVAC18  23
      ENDDO                                                                     HVAC18  24
c              materials-cost data - note that the equipment run hours          HVAC7   34
c              were stored in this data in PlantStatistics                      HVAC7   35
      DO  IM=1,NMC                                                              HVAC7   36
        JMC = IMC + (IM-1)*LMC                                                  HVAC7   37
        WRITE (IDSNFL) (<MC-NAME>,II=1,34)                                      HVAC7   38
      ENDDO                                                                     HVAC7   39
C              WRITE LAST RECORD FOR REPORT FILE                                SYSTEM 253
      IF(IWRTFL .NE. 0)  CALL REWUNL(ISYSO)                                     SYSTEM 254
      CALL REWUNL(ILDSO)                                                        SYSTEM 255
C              SET REPORT FLAGS TO CALL REPORT GENERATORS                       SYSTEM 256
C              IF ANY ARE TO BE PRINTED                                         SYSTEM 257
 3000 CONTINUE                                                                  SYSTEM 262
      IRPFLG(1) = IRPSUM                                                        SYSTEM 263
C              THATS ALL FOLKS                                                  SYSTEM 264
      RETURN                                                                    SYSTEM 265
 4000 CONTINUE                                                                  WinRet   7
      call MessageBox( NULL, 'Errors during HVAC simulation setup -'            WinRet   8
     &  //' ABORTING'//char(0),'HVAC Errors'//char(0), MB_OK                    WinRet   9
     &  + MB_ICONINFORMATION+MB_TASKMODAL )                                     WinRet  10
      RETURN                                                                    WinRet  11
      END                                                                       SYSTEM 266
      SUBROUTINE CONCHN(TWOUT,TGIN,PATM,HEIGHT,CWIDTH,UCHANC)                   CONCHN   2
C                                                                               CONCHN   3
C              THIS ROUTINE CALCULATES THE CONVECTIVE U-VALUE                   CONCHN   4
C              OF THE TROMBE WALL CHANNEL.  IT USES A CORRELATION               CONCHN   5
C              FROM KREITH PAGE 402 AND CURVE FITS TO TABLE A-3.                CONCHN   6
C              THIS ROUTINE IS FOR THE UNVENTED CASE ONLY.                      CONCHN   7
C                                                                               CONCHN   8
C              TAV IS IN DEGREES FAHRENHEIT                                     CONCHN   9
C              CON IS THE CONDUCTIVITY OF AIR                                   CONCHN  10
      common  /FNSYS/  ISKIPS, MSYSF(120)                                       /FNSYS/  2
      COMMON  /FZZZ1/   CAPXXX, CORINX, CWIDTX, ERMNXX, ERMXXX, FTDEVX          /FZZZ1/  2
     1                , FXXXXX, HEIGHX, HEXXXX, HPCAPX, HPKWXX, IFLGXX          /FZZZ1/  3
     2, IFUELX, ISHXXX, LSR2XX, LSR3XX, PATMXX, PLRXXX, PLSXXX, POMXXX          /FZZZ1/  4
     3, QHFXXX, QMULTX, QNOWXX, SLOADX, TAPPXX, TGINXX, TLOADX, TNOWXX          /FZZZ1/  5
     4, TSETXX, TWOUTX, UCHANX, ICALLX                                          /FZZZ1/  6
      REAL              LSR2XX, LSR3XX                                          /FZZZ1/  7
      TAV    = (TWOUT + TGIN) / 2.                                              CONCHN  13
      CON    = 1.33071E-2 + 2.14617E-5*TAV - 4.96027E-9*TAV*TAV                 CONCHN  14
C              CALCULATE EFFECTIVE CONDUCTANCE.  GR IS THE GRASHOFF             CONCHN  15
C              NUMBER BASED ON THE AVERAGE TEMPERATURE.                         CONCHN  16
      GB     = 4.19174 - 3.57423E-2*TAV + 1.30881E-4*TAV*TAV                    CONCHN  17
     1     -1.77975E-7*TAV*TAV*TAV                                              CONCHN  18
C              PRESSURE AND MAGNITUDE CORRECTION                                CONCHN  19
      GB     = 1.E6 * GB * PATM /29.921 * PATM /29.921                          CONCHN  20
      DT     = ABS(TWOUT-TGIN)                                                  CONCHN  21
      GR     = GB * DT * CWIDTH **3                                             CONCHN  22
      IF(GR.LT.20000) GO TO 3                                                   CONCHN  23
      UCHANC = (CON/CWIDTH)*(.065*GR**.333)*                                    CONCHN  24
     1         (HEIGHT/CWIDTH)**(-.111)                                         CONCHN  25
      GO TO 5                                                                   CONCHN  26
    3 IF(GR.LT.2000) GO TO 4                                                    CONCHN  27
      UCHANC = (CON/CWIDTH)*(.18*GR**.25)*(HEIGHT/CWIDTH)**(-.111)              CONCHN  28
      GO TO 5                                                                   CONCHN  29
    4 UCHANC = (CON/CWIDTH)                                                     CONCHN  30
    5 CONTINUE                                                                  CONCHN  31
      IF( MSYSF(4) .EQ. 0 )   RETURN                                            CONCHN  32
C******************* run function : CONCHN-1 ***************************        CONCHN  33
          TWOUTX  = TWOUT                                                       CONCHN  34
          TGINXX  = TGIN                                                        CONCHN  35
          PATMXX  = PATM                                                        CONCHN  36
          HEIGHX  = HEIGHT                                                      CONCHN  37
          CWIDTX  = CWIDTH                                                      CONCHN  38
          UCHANX  = UCHANC                                                      CONCHN  39
           CALL  FINTS( MSYSF(4), 2. )                                          CONCHN  40
          UCHANC  = UCHANX                                                      CONCHN  41
C*******************************************************************            CONCHN  42
      RETURN                                                                    CONCHN  43
      END                                                                       CONCHN  44
      SUBROUTINE BERNOU                                                         BERNOU   2
C                                                                               BERNOU   3
C              THIS ROUTINE USES THE BERNOULLI EQUATION TO CALCULATE            BERNOU   4
C              THE AIR FLOW RATE AND THE CONVECTION FOR A VENTED                BERNOU   5
C              TROMBE WALL.  ENGLISH UNITS ARE USED.                            BERNOU   6
C                                                                               BERNOU   7
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                 IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                        /FILES/  3
     2               , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                   /FILES/  4
     3                 IHRREP(3), IHRPAS(2)                                     /FILES/  5
      common  /FNSYS/  ISKIPS, MSYSF(120)                                       /FNSYS/  2
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      COMMON  /TIME  / IDOY, IYR, IMO, IDAY, IHR,                               Time     4
     &                 ISCMO, ISCDAY, ISCHR, IDOW, ISCDOW, iDSdates(6),         -044e5   1
     &                 iTimeFlg, iDSFlg, iDDFlg, InitialFlg, LeapYr,            Time     6
     &                 CLOCK(10), MONDSC(13), MONLEN(12), MONSDA(12)            HR      12
      COMMON  /TROMWL/ SUMDTX,SUMDTY,QCTOT,QLC0,QGK0,QCGUES,QVNTBG,             /TROMWL/ 2
     1                 VOLVNT,AMF,UCHAN,UCHANC,HRGW,TAIRIN,TZONE,               /TROMWL/ 3
     2                 TGOUT,QCVG,QCVW,IVMODE,TFO,RHO,MWH,FILMU,MRX,CTRM        /TROMWL/ 4
     1    , TAVR, TGLASS, TUNDER, UNIN1                                         /TROMWL/ 5
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
C                                                                               BERNOU  15
      DIMENSION AAA(2),BB(2)                                                    BERNOU  16
      REAL KU,KL                                                                BERNOU  17
      DATA AAA(1),AAA(2),BB(1),BB(2) /64.0,0.0,0.0,0.05/                        BERNOU  18
C              CONVERT TEMPERATURES TO RANKINE SCALE                            BERNOU  19
      TIR    = TAIRIN+460.                                                      BERNOU  20
      ITU    = 1                                                                BERNOU  21
C              CALCULATE SOME CONSTANTS                                         BERNOU  22
      WIDTH  = <GLASS-AREA> / <WALL-HEIGHT>                                     BERNOU  23
      DE     = 2.*<CHAN-WIDTH>                                                  BERNOU  24
      HV     = <VENT-SEP>                                                       BERNOU  25
      CC     = PATM/29.921*2116.8/53.3                                          BERNOU  26
      AGAP   = WIDTH*<CHAN-WIDTH>                                               BERNOU  27
      KU     = 2.5*AGAP*AGAP/<UP-VENT-AREA>/<UP-VENT-AREA>                      BERNOU  28
      KL     = 2.5*AGAP*AGAP/<LOW-VENT-AREA>/<LOW-VENT-AREA>                    BERNOU  29
      ALDE   = <VENT-SEP>/DE                                                    BERNOU  30
      S      = 14.3*ALOG10(ALDE)-7.9                                            BERNOU  31
      IF(ALDE.GT.60.)S=17.5                                                     BERNOU  32
      SFAC   = 1.+S/ALDE                                                        BERNOU  33
      IF(IVMODE.GT.0)GO TO 15                                                   BERNOU  34
      TBAR   = .5*(AA(MWH+1)+<TGLASSIN>)                                        BERNOU  35
      TBAR2  = TBAR*TBAR                                                        BERNOU  36
      TBAR3  = TBAR*TBAR2                                                       BERNOU  37
      CON    = 1.33071E-2+2.14617E-5*TBAR-4.96027E-9*TBAR2                      BERNOU  38
      GB     = 4.19174-3.57423E-2*TBAR+1.30881E-4*TBAR2-1.77975E-7*TBAR3        BERNOU  39
      GB     = 1.E6*GB*PATM/29.921*PATM/29.921                                  BERNOU  40
      GRPR   = GB*ABS(AA(MWH+1)-<TGLASSIN>)*<CHAN-WIDTH>**3 *.72                BERNOU  41
      HGW    = (.0965*GRPR**.29)*CON/<CHAN-WIDTH>                               BERNOU  42
      HWE    = 0.                                                               BERNOU  43
      HGE    = 0.                                                               BERNOU  44
      VOLVNT = 0.                                                               BERNOU  45
      QCTOT  = 0.                                                               BERNOU  46
      AMF    = 0.                                                               BERNOU  47
      TFO    = TAIRIN                                                           BERNOU  48
          GOTO  900                                                             BERNOU  49
   15 CONTINUE                                                                  BERNOU  50
      ITRY   = 0                                                                BERNOU  51
      TOTRY  = .5*(AA(MWH+1)+<TGLASSIN>)                                        BERNOU  52
   11 CONTINUE                                                                  BERNOU  53
      ITRY   = ITRY+1                                                           BERNOU  54
      ICHG   = 0                                                                BERNOU  55
      TOTRYR = TOTRY+460.                                                       BERNOU  56
    3 CONTINUE                                                                  BERNOU  57
C              CALCULATION OF MASS FLOW RATE                                    BERNOU  58
      A      = KU/<UP-VENT-AREA>/<UP-VENT-AREA>*TOTRYR                          BERNOU  59
     1  + KL/<LOW-VENT-AREA>/<LOW-VENT-AREA>*TIR                                BERNOU  60
     2  + BB(ITU)*HV*.5/DE/AGAP/AGAP*(TOTRYR+TIR)                               BERNOU  61
      TBARR  = .5*(TOTRYR+TIR)                                                  BERNOU  62
      TBAR   = TBARR-460.                                                       BERNOU  63
C              DETERMINATION OF AIR PROPERTIES                                  BERNOU  64
      TBAR2  = TBAR*TBAR                                                        BERNOU  65
      VNU    = 0.129913+4.59699E-4*TBAR+4.24793E-7*TBAR2                        BERNOU  66
      VNU    = VNU/PATM*29.921*.001                                             BERNOU  67
      CON    = 1.33071E-2+2.14617E-5*TBAR-4.96027E-9*TBAR2                      BERNOU  68
      B      = AAA(ITU)*VNU*HV*CC/DE/DE/AGAP                                    BERNOU  69
      C      = 32.2*HV*CC*CC*(TIR-TOTRYR)/TIR/TOTRYR                            BERNOU  70
      AMF    = (-B+SQRT(B*B-4.*A*C))*.5/A                                       BERNOU  71
      RHO    = CC/TBARR                                                         BERNOU  72
      VG     = AMF/RHO/AGAP                                                     BERNOU  73
      REY    = VG*DE/VNU                                                        BERNOU  74
      ITU2   = 1                                                                BERNOU  75
      IF(REY.GT.3000.)ITU2=2                                                    BERNOU  76
      IF(ITU2.EQ.ITU)GO TO 2                                                    BERNOU  77
      ITU    = ITU2                                                             BERNOU  78
      ICHG   = ICHG+1                                                           BERNOU  79
      IF(ICHG.LE.10)GO TO 3                                                     BERNOU  80
    2 CONTINUE                                                                  BERNOU  81
C              CALCULATION OF FILM COEFFICIENT                                  BERNOU  82
      IF(ITU.EQ.2)GO TO 4                                                       BERNOU  83
C              THE LAMINAR EQUATION                                             BERNOU  84
      XSTAR  = HV/REY/.72/DE                                                    BERNOU  85
      HC     = .0606/XSTAR**1.2/(1.0+.0856/XSTAR**.7)                           BERNOU  86
      HC     = (4.9+HC)*CON/<CHAN-WIDTH>                                        BERNOU  87
      GO TO 5                                                                   BERNOU  88
    4 CONTINUE                                                                  BERNOU  89
C              THE TURBULENT EQUATION                                           BERNOU  90
      HC     = (.0158*REY**.8)*CON/<CHAN-WIDTH>*SFAC                            BERNOU  91
    5 CONTINUE                                                                  BERNOU  92
C              CALCULATE THE OUTLET AIR TEMPERATURE                             BERNOU  93
      XX     = 2.*HC*<GLASS-AREA>/AMF/.24/3600.                                 BERNOU  94
      TFO    = TAIRIN+(2.*TAIRIN-AA(MWH+1)-<TGLASSIN>)*.5*(EXP(-XX)-1.)         BERNOU  95
      DIF    = ABS(TFO-TOTRY)                                                   BERNOU  96
      IF(DIF.LT..1)GO TO 10                                                     BERNOU  97
      TOTRY  = TFO                                                              BERNOU  98
      IF(ITRY.LT.15) GO TO 11                                                   BERNOU  99
      WRITE(IOUTPT,31)  IHR, IDAY, IMO                                          BERNOU 100
   31 FORMAT(1X, 35HBERNOU DID NOT CONVERGE FOR HOUR = ,I2,4X,                  BERNOU 101
     1       6HDAY = ,I2,4X,8HMONTH = ,I2)                                      BERNOU 102
   10 CONTINUE                                                                  BERNOU 103
      QCTOT  = AMF*.24*(TFO-TAIRIN)*3600./<GLASS-AREA>                          BERNOU 104
      VOLVNT = AMF*3600./RHO/<GLASS-AREA>                                       BERNOU 105
      AMF    = AMF*3600.0                                                       BERNOU 106
C********************* run function : BERNOU-1 *********************            BERNOU 107
900   CONTINUE                                                                  BERNOU 108
      IF( MSYSF(1) .NE. 0 )   CALL  FINTS( MSYSF(1), 1. )                       BERNOU 109
C*******************************************************************            BERNOU 110
      RETURN                                                                    BERNOU 111
      END                                                                       BERNOU 112
      SUBROUTINE CFMINF                                                         CFMINF   2
C                                                                               CFMINF   3
C              RECALCULATE CFMINF ALLOWING FOR VARIABLE ZONE TEMP               CFMINF   4
C                                                                               CFMINF   5
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON  /PTRBGN/ IWFB, IWPB, ICONSB, IGTB, IWLB, IGEOB, ISHADB,           /PTRBGN/ 2
     &                 IWINB, IDRB, IEWB, IUGB, ISPB, IIWPB, IIWB,              /PTRBGN/ 3
     &                 IFLB, ISPCDB, IOTHB, ILHB, IZQCMB, ISSHDB,               /PTRBGN/ 4
     &                 IOHFIB, IZLSK, IZLSL, ISTFB, ILSSH                       PV2      1
      COMMON  /LENS/   MWFLEN, MRLEN, MSHLEN, MWNLEN, MDRLEN, MXLEN,            /LENS/   2
     1                 MULEN, MZLEN, MIWLEN, MFLLEN,                            /LENS/   3
     2                 LMTB, LLDSOU, MSTLEN, LSTFT, MWLLEN                      /LENS/   4
      common  /FNSYS/  ISKIPS, MSYSF(120)                                       /FNSYS/  2
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
C                                                                               CFMINF  10
C********************* run function : CFMINF-0 *********************            CFMINF  12
      IF( MSYSF(2) .NE. 0 )   CALL  FINTS( MSYSF(2), 0. )                       CFMINF  13
C*******************************************************************            CFMINF  14
      IF( ISKIPS .NE. 0 )   GOTO  2000                                          CFMINF  15
                                                                                -046     3
      IM = 1  ! LOADS space temperature index                                   -046     4
                                                                                -046     5
      DO  NZ=1,NSZ                                                              -046     6
        ZP1    = ISZ + (NZ-1)*NZD                                               -046     7
        ZP2    = <ZP2>                                                          -046     8
        MZ     = ISPB + (<NZSPACE>-1)*MZLEN                                     -046     9
        CFMlds = <CFMINF>            ! infiltration calc'd by LOADS             -046    10
        SELECT CASE (<IZINFC>)                                                  -046    11
        CASE (3)  ! Residential                                                 -046    12
          SchInf   = SchVal(<KZINF>, 1.)                                        -046    13
c              convert cfm to air-changes/hour; adjust dT component             -046    14
          ACPH     = CFMlds / (<ZVOL>*.0166667 * SchInf)                        -046    15
          ACHdT    = <INF-COEF-DTEMP> * Abs(<ZTEMP>-DBT)  ! in LOADS            -046    16
          ACHwind  = Dim(ACPH, ACHdT)                                           -046    17
          ACHdT    = <INF-COEF-DTEMP> * Abs(<TNOW>-DBT)   ! adjusted            -046    18
          <CFMINF> = (ACHwind+ACHdT) * <ZVOL>*.0166667 * SchInf                 -046    19
        CASE (4)  ! S-G                                                         -046    20
          IF (<LEAK-AREA> .ne. 0.) THEN                                         -048k    1
            SchInf   = SchVal(<KZINF>, 1.)                                      -047k    5
            CFMinfil = <CFMINF> / SchInf                                        -047k    6
            Cinf     = CFMinfil / <LEAK-AREA>                                   -047k    7
            Cinf2    = Cinf * Cinf                                              -047k    8
            CdT      = <STACKCOEF>*<STACKCOEF> * Abs(<ZTEMP>-DBT)               -047k    9
            Cwind    = Dim(Cinf2, CdT)                                          -047k   10
            CdT      = <STACKCOEF>*<STACKCOEF> * Abs(<TNOW>-DBT)                -047k   11
            <CFMINF> = <LEAK-AREA> * SqRt(Cwind + CdT) * SchInf                 -047k   12
          ENDIF                                                                 -047k   13
        CASE (5)  ! ASHRAE Enhanced                                             -046    29
          SchInf   = SchVal(<KZINF>, 1.)                                        -046    30
          CFMinfil = <CFMINF> / SchInf                                          -046    31
          Cinf2    = CFMinfil * CFMinfil                                        -046    32
          CFMstack = <FLOW-COEF> * <STACK-COEF>                                 -046    33
     &             * (Abs(<ZTEMP>-DBT)**<PRESSURE-EXP>)  ! per LOADS            -046    34
          Cwind2   = Dim(Cinf2, CFMstack*CFMstack)                              -046    35
          CFMstack = <FLOW-COEF> * <STACK-COEF>                                 -046    36
     &             * (Abs(<TNOW>-DBT)**<PRESSURE-EXP>)   ! adjusted             -046    37
          <CFMINF> = SqRt(CFMstack*CFMstack + Cwind2) * SchInf                  -046    38
        END SELECT                                                              -046    39
                                                                                -046    40
c              Adjust infiltration for unbalanced exhaust                       -046    41
        IF (<EXHAUST-SOURCE> .eq. 2  .or.  ! infiltration                       -047b    1
     &      <EXHAUST-SOURCE> .eq. 3) THEN  ! balanced infiltration              -047b    2
          Call ZoneExhaust(2, xx)          ! get exh flow                       -047b    3
          IF (<zn.ExhCFM> .gt. 0.) THEN                                         -047b    4
            IF (<EXHAUST-SOURCE> .eq. 2) THEN  ! add in quadrature              -047b    5
              <CFMINF> = SqRt(<CFMINF>*<CFMINF>                                 -047b    6
     &                            + <zn.ExhCFM>*<zn.ExhCFM>)                    -047b    7
            ELSE                               ! balanced                       -047b    8
              <CFMINF> = <CFMINF> + <zn.ExhCFM>                                 -047b    9
            ENDIF                                                               -047b   10
          ENDIF                                                                 -047b   11
        ENDIF                                                                   -046    46
                                                                                -046    47
c              Adjust LOADS sensible for change in infiltration                 -046    48
        IF (CFMlds .ne. <CFMINF>) THEN                                          -046    49
          TldsR = <ZTEMP> + 460.                                                -046    50
          <QS>  = <QS> + 14.4*(PATM/(0.754*TldsR))                              -046    51
     &          * (DBTR-TldsR) * (<CFMINF>-CFMlds)                              -046    52
        ENDIF                                                                   -046    53
      ENDDO                                                                     -046    54
C********************* run function : CFMINF-1 *********************            CFMINF  33
2000  IF( MSYSF(3) .NE. 0 )   CALL  FINTS( MSYSF(3), 1. )                       CFMINF  34
C*******************************************************************            CFMINF  35
      RETURN                                                                    CFMINF  36
      END                                                                       CFMINF  37
      SUBROUTINE CURINV( CURVE, ITYPE, ISOLVE, X, Y, Z, VLIMS, IERR)            CURINV   2
C                                                                               CURINV   3
C              This routine inverts the input curve to sovle                    CURINV   4
C              for the value of an independant variable (X or Y)                CURINV   5
C              given the other independent and the curve value,                 CURINV   6
C              coefficients, and type                                           CURINV   7
C                                                                               CURINV   8
C             CURVE(6) is the curve in the form:                                CURINV   9
C             Z = A + B*X + C*X*X + D*Y + E*Y*Y + F*X*Y                         CURINV  10
C                                                                               CURINV  11
C             X,Y,Z are as defined in above equation                            CURINV  12
C             ITYPE is 1 for linear (in X or Y)                                 CURINV  13
C                      2 for bi-linear (in X AND Y)                             CURINV  14
C                      3 for quadratic (in X or Y)                              CURINV  15
C                      4 for bi-quadratic (in X AND Y)                          CURINV  16
C                      5 for cubic (in X only)  <= not currently supported      CURINV  17
C                                                                               CURINV  18
C             ISOLVE is 1 for return value for X given CURVE, Y, and Z          CURINV  19
C                       2 for return value for Y given CURVE, X, and Z          CURINV  20
C             VLIMS are the output limits (1) is upper (2) is lower             CURINV  21
C             IERR   is error return flag                                       CURINV  22
C                       1 for ITYPE not legal                                   CURINV  23
C                       2 for quadratic has no real root (1.0 returned)         CURINV  24
C                       -3 for quad curve has no quad term (linear solved)      CURINV  25
C                       -4 for linear has no linear term (1.0 returned)         CURINV  26
C                       5 for ISOLVE not legal                                  CURINV  27
C                       -6 for solution not in legal range                      CURINV  28
C                                                                               CURINV  29
C              DEVELOPED BY                                                     -130     1
C                            J. J. Hirsch & S. D. Gates                         -130     2
C                            James J. Hirsch & Associates                       -130     3
C                            Camarillo, California                              -130     4
C              BASED UPON CODE DEVELOPED BY J. J. Hirsch and                    -130     5
C                            W. F. Buhl                                         -130     6
C                            A. E. Erdem                                        -130     7
C                            Lawrence Berkeley National Laboratory              -130     8
C                            University of California                           -130     9
Copyright (c) 1997 by James J. Hirsch. All Rights Reserved. Unpublished         -130    10
c rights reserved under the Copyright Laws of the United States.                -130    11
c RESTRICTED RIGHTS NOTICE: Government use, reproduction or disclosure          -130    12
c is subject to restrictions as set forth in Rights in Data (g)(3) in           -130    13
c UC/LBL purchase order 4607010 with J.J. Hirsch & Associates.                  -130    14
C                                                                               CURINV  31
      COMMON /WCTRL/   IwinReturn, Imsgflg                                      /WCTRL/  2
#ifndef _DLL                                                                 /* -048     1 */ 
      COMMON /WIN_MB/ MB_OK,MB_ICONSTOP,MB_ICONEXCLAMATION,MB_TASKMODAL,        -048     2
     &                MB_ICONINFORMATION                                        -048     3
#else                                                                        /* -048     4 */ 
      include 'msgbox.fi'                                                       -048     5
#endif                                                                       /* -048     6 */ 
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                 IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                        /FILES/  3
     2               , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                   /FILES/  4
     3                 IHRREP(3), IHRPAS(2)                                     /FILES/  5
      COMMON  /TIME  / IDOY, IYR, IMO, IDAY, IHR,                               Time     4
     &                 ISCMO, ISCDAY, ISCHR, IDOW, ISCDOW, iDSdates(6),         -044e5   1
     &                 iTimeFlg, iDSFlg, iDDFlg, InitialFlg, LeapYr,            Time     6
     &                 CLOCK(10), MONDSC(13), MONLEN(12), MONSDA(12)            HR      12
      DIMENSION CURVE(6),VLIMS(2)                                               CURINV  33
      IERR = 0                                                                  CURINV  34
c                                                                               CURINV  35
C             CHECK for legal type of curve                                     CURINV  36
      IF((ITYPE .GE. 5) .or. (ITYPE .LE. 0))  THEN                              CURINV  37
        IERR = 1                                                                CURINV  38
        WRITE(IOUTPT,'('' CURINV: ITYPE for CURVE not legal: ''/I3,             -031a    2
     $           6F10.6)') ITYPE,(CURVE(i),i=1,6)                               -031a    3
        call MessageBox( NULL, 'Error in a CURVE-FIT inverse call -'            WinRet  13
     &  //' TYPE is 0'//char(10)//char(13)//char(10)//char(13)//                WinRet  14
     &  'Contact DOE-2 Support'//char(0),'CURINV Errors'//char(0),              WinRet  15
     &  MB_OK+MB_ICONSTOP+MB_TASKMODAL )                                        WinRet  16
        IwinReturn = 1                                                          WinRet  17
        RETURN                                                                  WinRet  18
      ENDIF                                                                     CURINV  42
C             CHECK for legal valiable to solve for                             CURINV  43
      IF((ISOLVE .ne. 1).and.(ISOLVE .ne. 2)) THEN                              CURINV  44
        IERR = 5                                                                CURINV  45
        WRITE(IOUTPT,'('' CURINV: ISOLVE for CURVE not legal: ''/I3,            -031a    4
     $           6F10.6)') ISOLVE,(CURVE(i),i=1,6)                              -031a    5
        call MessageBox( NULL, 'Error in CURVE-FIT inverse call -'              WinRet  19
     &  //' ISOLVE is 0'//char(10)//char(13)//char(10)//char(13)//              WinRet  20
     &  'Contact DOE-2 Support'//char(0),'CURINV Errors'//char(0),              WinRet  21
     &  MB_OK+MB_ICONSTOP+MB_TASKMODAL )                                        WinRet  22
        IwinReturn = 1                                                          WinRet  23
        RETURN                                                                  WinRet  24
      ENDIF                                                                     CURINV  49
C             QUADRATIC or BI-QUADRATIC CURVES TYPES                            CURINV  50
      IF((ITYPE.eq.3) .OR. (ITYPE.eq.4)) THEN                                   CURINV  51
        IF(ISOLVE .eq. 1) THEN                                                  CURINV  52
          A1 = CURVE(3)                                                         CURINV  53
          B1 = CURVE(2) + CURVE(6)*Y                                            CURINV  54
          C1 = CURVE(1) + (CURVE(4) + CURVE(5)*Y)*Y - Z                         CURINV  55
          OTHER = Y                                                             CURINV  56
        ELSE                                                                    CURINV  57
          A1 = CURVE(5)                                                         CURINV  58
          B1 = CURVE(4) + CURVE(6)*X                                            CURINV  59
          C1 = CURVE(1) + (CURVE(2) + CURVE(3)*X)*X - Z                         CURINV  60
          OTHER = X                                                             CURINV  61
        ENDIF                                                                   CURINV  62
        IF( A1 .eq. 0.)  THEN                                                   CURINV  63
c                    no quad term - assume linear                               CURINV  64
          IERR = -3                                                             CURINV  65
          GOTO 100                                                              CURINV  66
        ENDIF                                                                   CURINV  67
        SQ= B1*B1 - 4.0*A1*C1                                                   CURINV  68
        IF( SQ .LT. 0.0 ) THEN                                                  CURINV  69
          IERR = 2                                                              CURINV  70
          WRITE(IOUTPT,'('' CURINV: No real root for CURVE: ''/I3,              -031a    6
     $           6F10.6)') ISOLVE,(CURVE(i),i=1,6)                              -031a    7
          R1 = Z                                                                CURINV  73
          GOTO 200                                                              CURINV  74
        ENDIF                                                                   CURINV  75
        SQ = SQRT( SQ )                                                         CURINV  76
        R1   = (-B1+SQ)/(2.0*A1)                                                CURINV  77
        R2   = (-B1-SQ)/(2.0*A1)                                                CURINV  78
        IF((R1 .ge. VLIMS(2)) .and. (R1 .le. VLIMS(1))) THEN                    CURINV  79
          GOTO 200                                                              CURINV  80
        ELSEIF((R2 .ge. VLIMS(2)) .and. (R2 .le. VLIMS(1))) THEN                CURINV  81
          R1 = R2                                                               CURINV  82
        ELSE                                                                    CURINV  83
          IERR = -6                                                             CURINV  84
          WRITE(IOUTPT,'('' CURINV: Result out of limits for CURVE: ''/         -031a    8
     $    8F10.6/'' X, Y, and Z:'',3F10.6,'' MMDDHH:'',3I4)') R1,R2,            -031a    9
     $    (CURVE(i),i=1,6),X,Y,Z,IMO,IDAY,IHR                                   -031a   10
        ENDIF                                                                   CURINV  88
        GOTO 200                                                                CURINV  89
      ENDIF                                                                     CURINV  90
C             LINEAR or BI-LINEAR CURVES TYPES                                  CURINV  91
  100 CONTINUE                                                                  CURINV  92
      IF(ISOLVE .eq. 1) THEN                                                    CURINV  93
        B1 = CURVE(2)                                                           CURINV  94
        C1 = CURVE(1) + CURVE(4)*Y - Z                                          CURINV  95
      ELSE                                                                      CURINV  96
        B1 = CURVE(4)                                                           CURINV  97
        C1 = CURVE(1) + CURVE(2)*X - Z                                          CURINV  98
      ENDIF                                                                     CURINV  99
      IF( B1 .eq. 0.)  THEN                                                     CURINV 100
c                    no quad term - assume linear                               CURINV 101
        IERR = -4                                                               CURINV 102
        WRITE(IOUTPT,'('' CURINV: No linear coeff for CURVE: ''/                -031a   11
     $         6F10.6)') (CURVE(i),i=1,6)                                       -031a   12
        R1 = Z                                                                  CURINV 105
        GOTO 200                                                                CURINV 106
      ENDIF                                                                     CURINV 107
      R1 = -C1/B1                                                               CURINV 108
      IF((R1 .lt. VLIMS(2)) .or. (R1 .gt. VLIMS(1))) THEN                       CURINV 109
        IERR = -6                                                               CURINV 110
        WRITE(IOUTPT,'('' CURINV: Result out of limits for CURVE: ''/           -031a   13
     $    7F10.6/'' X, Y, and Z:'',3F10.6,'' MMDDHH: '',3I4)') R1,              -031a   14
     $    (CURVE(i),i=1,6),X,Y,Z,IMO,IDAY,IHR                                   -031a   15
      ENDIF                                                                     CURINV 114
  200 SOLVE = AMAX1(AMIN1(VLIMS(1),R1),VLIMS(2))                                CURINV 115
      IF(ISOLVE .eq. 1) X = SOLVE                                               CURINV 116
      IF(ISOLVE .eq. 2) Y = SOLVE                                               CURINV 117
      RETURN                                                                    CURINV 118
      END                                                                       CURINV 119
      FUNCTION CVAL(Jcv, X, Y)                                                  -045b    2
C                                                                               CVAL     3
C                                                                               CVAL     4
C                            THIS ROUTINE EVALUATES A CURVE STORED IN           CVAL     5
C                            THE CURVE BLOCK.  THE PASSED VALUES ARE            CVAL     6
C                            THE POINTER TO THE CURVE DATA, AND UP TO           CVAL     7
C                            TWO INDEPENDENT VARIABLES (V1 AND V2)              CVAL     8
C                                                                               CVAL     9
C                                                                               CVAL    10
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                 IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                        /FILES/  3
     2               , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                   /FILES/  4
     3                 IHRREP(3), IHRPAS(2)                                     /FILES/  5
      COMMON  /TIME  / IDOY, IYR, IMO, IDAY, IHR,                               Time     4
     &                 ISCMO, ISCDAY, ISCHR, IDOW, ISCDOW, iDSdates(6),         -044e5   1
     &                 iTimeFlg, iDSFlg, iDDFlg, InitialFlg, LeapYr,            Time     6
     &                 CLOCK(10), MONDSC(13), MONLEN(12), MONSDA(12)            HR      12
                                                                                -045b    5
      IF (Jcv .eq. 0) THEN  ! curve not defined                                 -045b    6
        CVAL = 1.0                                                              -045b    7
        RETURN                                                                  -045b    8
      ENDIF                                                                     -045b    9
                                                                                -045b   10
      SELECT CASE (<cv:TYPE>)                                                   -045b   11
      CASE (1)  ! Linear                                                        -045b   12
        Z = <cv:COEF-1> + <cv:COEF-2>*X                                         -045b   13
      CASE (2)  ! Bi-Linear                                                     -045b   14
        Z = <cv:COEF-1> + <cv:COEF-2>*X + <cv:COEF-4>*Y                         -045b   15
      CASE (3)  ! Quadratic                                                     -045b   16
        Z = <cv:COEF-1> + (<cv:COEF-2> + <cv:COEF-3>*X)*X                       -045b   17
      CASE (4)  ! Bi-Quadratic                                                  -045b   18
        Z = <cv:COEF-1> + (<cv:COEF-2> + <cv:COEF-3>*X)*X                       -045b   19
     &    + (<cv:COEF-4> + <cv:COEF-5>*Y)*Y + <cv:COEF-6>*X*Y                   -045b   20
      CASE (5)  ! Cubic                                                         -045b   21
        Z = <cv:COEF-1>                                                         -045b   22
     &    + (<cv:COEF-2> + (<cv:COEF-3> + <cv:COEF-4>*X)*X)*X                   -045b   23
      END SELECT                                                                -045b   24
                                                                                -045b   25
c              Check if output within range                                     -045b   26
      IF (Z .lt. <cv:OUTPUT-MIN>  .or.  Z .gt. <cv:OUTPUT-MAX>) THEN            -045b   27
        IF (<cv;NumLimitOut> .eq. 0)  THEN                                      -045b   28
          CALL MSGSIM(-3,II,II,II,II)                                           -045b   29
          WRITE(IOUTPT,9103)  (<cv:NAME>,II=1,8),                               -045b   30
     &                        Z, <cv:OUTPUT-MIN>, <cv:OUTPUT-MAX>,              -045b   31
     &                        IMO,IDAY,IHR                                      -045b   32
        ENDIF                                                                   -045b   33
        <cv;NumLimitOut> = <cv;NumLimitOut> + 1                                 -045b   34
        Z = Max(<cv:OUTPUT-MIN>, Min(Z, <cv:OUTPUT-MAX>))                       -045b   35
      ENDIF                                                                     -045b   36
                                                                                -045b   37
      CVAL = Z                                                                  -045b   38
                                                                                -045b   39
      RETURN                                                                    -045b   40
                                                                                -045b   41
c              Message formats                                                  -045b   42
 9101 FORMAT(14x,'In: ',8A4,' the 1st independent value in'            /        -045b   43
     &       14x,'curve: ',8A4,' is exceeding the limits.'             /        -045b   44
     &       14x,'Value/Min/Max/First time:',3F15.3,I4,'/',I2,'/',I2   )        -045b   45
 9102 FORMAT(14x,'In: ',8A4,' the 2nd independent value'               /        -045b   46
     &       14x,'in curve: ',8A4,' is exceeding the limits.'          /        -045b   47
     &       14x,'Value/Min/Max/First time:',3F15.3,I4,'/',I2,'/',I2   )        -045b   48
c9103 FORMAT(14x,'In: ',8A4,' the dependent value'                     /        -045b   49
c    &       14x,'in curve: ',8A4,' is exceeding the limits.'          /        -045b   50
c    &       14x,'Value/Min/Max/First time:',3F15.3,I4,'/',I2,'/',I2   )        -045b   51
 9103 FORMAT(14x,'In curve: ',8A4,' the dependent value'               /        -045b   52
     &       14x,'is exceeding the limits.'                            /        -045b   53
     &       14x,'Value/Min/Max/First time:',3F15.3,I4,'/',I2,'/',I2   )        -045b   54
      END                                                                       CVAL    36
      BLOCK DATA DATSYS                                                         DATSYS   2
C                                                                               DATSYS   3
C                                                                               DATSYS   4
C                                                SYSTEMS COMMON DATA            DATSYS   5
C                                                                               DATSYS   6
C                                                                               DATSYS   7
      COMMON  /ENDKY / LightEndUse,  TaskEndUse, MiscEndUse, HeatEndUse,        /ENDKY/  2
     &                 CoolEndUse , HtRejEndUse,  AuxEndUse, VentEndUse,        /ENDKY/  3
     &                 RefgEndUse ,  SuppEndUse,  DHWEndUse, ExtEndUse          /ENDKY/  4
      INTEGER          LightEndUse,  TaskEndUse, MiscEndUse, HeatEndUse,        /ENDKY/  5
     &                 CoolEndUse , HtRejEndUse,  AuxEndUse, VentEndUse,        /ENDKY/  6
     &                 RefgEndUse ,  SuppEndUse,  DHWEndUse,  ExtEndUse         /ENDKY/  7
      COMMON  /BUFERS/  MRLEN1, MRLEN2, IBLDSB,IELDSB,LLDSB,N3,IBRPB1,          HVACi    1
     1                  IERPB1,LRPB1,IBRPB2,IERPB2,LRPB2                        HVACi    2
      common  /FNSYS/  ISKIPS, MSYSF(120)                                       /FNSYS/  2
      COMMON  /IST/    IST(4,32)                                                /IST/    2
      COMMON  /PPWVMS/ PPWVMS(200)                                              /PPWVMS/ 2
C                                                                               DATSYS  12
      DATA MRLEN1 /13/                                                          DATSYS  13
      DATA MRLEN2 /343/                                                         DATSYS  14
c              /endky/                                                          HVAC22   4
      DATA  LightEndUse,  TaskEndUse, MiscEndUse, HeatEndUse,                   HVAC22   5
     &       CoolEndUse, HtRejEndUse,  AuxEndUse, VentEndUse,                   HVAC22   6
     &       RefgEndUse,  SuppEndUse,  DHWEndUse, ExtEndUse                     HVAC22   7
     &                                      /1,2,3,4,5,6,7,8,9,10,11,12/        HVAC22   8
C                                                                               DATSYS  15
      DATA IST /4HSUM ,4H    ,4H    ,4H    ,4HSZRH,4H    ,4H    ,4H    ,        DATSYS  16
     1          4HMZS ,4H    ,4H    ,4H    ,4HDDS ,4H    ,4H    ,4H    ,        DATSYS  17
     2          4HSZCI,4H    ,4H    ,4H    ,4HUVT ,4H    ,4H    ,4H    ,        DATSYS  18
     3          4HUHT ,4H    ,4H    ,4H    ,4HFPH ,4H    ,4H    ,4H    ,        DATSYS  19
     4          4HFC  ,4H    ,4H    ,4H    ,4H    ,4H    ,4H    ,4H    ,        -034     1
     5          4HIU  ,4H    ,4H    ,4H    ,4H    ,4H    ,4H    ,4H    ,        -034     2
     6          4HVAVS,4H    ,4H    ,4H    ,4HRHFS,4H    ,4H    ,4H    ,        DATSYS  22
     7          4HHP  ,4H    ,4H    ,4H    ,4HHVSY,4HS   ,4H    ,4H    ,        DATSYS  23
     8          4HRESY,4HS   ,4H    ,4H    ,4HCBVA,4HV   ,4H    ,4H    ,        DATSYS  24
     9          4HPSZ ,4H    ,4H    ,4H    ,4HPMZS,4H    ,4H    ,4H    ,        DATSYS  25
     1          4HPVAV,4HS   ,4H    ,4H    ,4HPTAC,4H    ,4H    ,4H    ,        DATSYS  26
     2          4HPIU ,4H    ,4H    ,4H    ,4HFNSY,4HS1  ,4H    ,4H    ,        DATSYS  27
     3          4HPTSG,4HD   ,4H    ,4H    ,4HEVAP,4H-COO,4HL   ,4H    ,        DATSYS  28
     4          4HRESV,4HVT  ,4H    ,4H    ,4HPVVT,4H    ,4H    ,4H    ,        DATSYS  29
     5          4HRESY,4HS2  ,4H    ,4H    ,4HSYS-,4H30  ,4H    ,4H    ,        DATSYS  30
     6          4HSYS-,4H31  ,4H    ,4H    ,4HSYS-,4H32  ,4H    ,4H    /        DATSYS  31
      DIMENSION DUM1(40),DUM2(40),DUM3(40),DUM4(40),DUM5(40)                    DATSYS  32
      EQUIVALENCE (PPWVMS(  1),DUM1(1)),(PPWVMS( 41),DUM2(1)),                  DATSYS  33
     1            (PPWVMS( 81),DUM3(1)),(PPWVMS(121),DUM4(1)),                  DATSYS  34
     2            (PPWVMS(161),DUM5(1))                                         DATSYS  35
C        The following are the saturation vapor pressures of water              DATSYS  36
C        at standard pressure (29.921) and temps of -50 to 149 Deg F            DATSYS  37
      DATA DUM1                                                                 DATSYS  38
     1/  0.00199181, 0.00212727, 0.00227122, 0.00242415,                        DATSYS  39
     2   0.00258657, 0.00275901, 0.00294203, 0.00313623,                        DATSYS  40
     3   0.00334222, 0.00356067, 0.00379226, 0.00403769,                        DATSYS  41
     4   0.00429774, 0.00457319, 0.00486487, 0.00517364,                        DATSYS  42
     5   0.00550043, 0.00584619, 0.00621190, 0.00659863,                        DATSYS  43
     6   0.00700746, 0.00743955, 0.00789610, 0.00837836,                        DATSYS  44
     7   0.00888765, 0.00942533, 0.00999285, 0.01059170,                        DATSYS  45
     8   0.01122345, 0.01188972, 0.01259226, 0.01333283,                        DATSYS  46
     9   0.01411331, 0.01493562, 0.01580181, 0.01671399,                        DATSYS  47
     $   0.01767436, 0.01868523, 0.01974898, 0.02086815/                        DATSYS  48
      DATA DUM2                                                                 DATSYS  49
     1/  0.02204533, 0.02328322, 0.02458466, 0.02595259,                        DATSYS  50
     2   0.02739009, 0.02890031, 0.03048661, 0.03215238,                        DATSYS  51
     3   0.03390130, 0.03573707, 0.03766357, 0.03968484,                        DATSYS  52
     4   0.04180500, 0.04402861, 0.04635995, 0.04880398,                        DATSYS  53
     5   0.05136532, 0.05404932, 0.05686094, 0.05980600,                        DATSYS  54
     6   0.06288979, 0.06611839, 0.06949807, 0.07303481,                        DATSYS  55
     7   0.07673555, 0.08060668, 0.08465567, 0.08888943,                        DATSYS  56
     8   0.09331594, 0.09794258, 0.10277772, 0.10783005,                        DATSYS  57
     9   0.11310771, 0.11862030, 0.12437658, 0.13038678,                        DATSYS  58
     $   0.13666025, 0.14320804, 0.15004009, 0.15716781/                        DATSYS  59
      DATA DUM3                                                                 DATSYS  60
     1/  0.16460305, 0.17235680, 0.18045002, 0.18786548,                        DATSYS  61
     2   0.19555017, 0.20351164, 0.21175928, 0.22030097,                        DATSYS  62
     3   0.22914617, 0.23830466, 0.24778466, 0.25759721,                        DATSYS  63
     4   0.26775107, 0.27825734, 0.28912541, 0.30036730,                        DATSYS  64
     5   0.31199241, 0.32401264, 0.33644006, 0.34928504,                        DATSYS  65
     6   0.36256102, 0.37627867, 0.39045215, 0.40509275,                        DATSYS  66
     7   0.42021483, 0.43583047, 0.45195436, 0.46860099,                        DATSYS  67
     8   0.48578316, 0.50351703, 0.52181602, 0.54069704,                        DATSYS  68
     9   0.56017357, 0.58026427, 0.60098273, 0.62234646,                        DATSYS  69
     $   0.64437419, 0.66708070, 0.69048530, 0.71460426/                        DATSYS  70
      DATA DUM4                                                                 DATSYS  71
     1/  0.73945874, 0.76506430, 0.79144305, 0.81861198,                        DATSYS  72
     2   0.84659207, 0.87540478, 0.90506887, 0.93560767,                        DATSYS  73
     3   0.96703935, 0.99938995, 1.03267860, 1.06693041,                        DATSYS  74
     4   1.10216558, 1.13840950, 1.17568862, 1.21402299,                        DATSYS  75
     5   1.25344241, 1.29396737, 1.33562779, 1.37844706,                        DATSYS  76
     6   1.42245519, 1.46767569, 1.51413858, 1.56187427,                        DATSYS  77
     7   1.61090624, 1.66127038, 1.71299016, 1.76610160,                        DATSYS  78
     8   1.82062936, 1.87661111, 1.93407309, 1.99305022,                        DATSYS  79
     9   2.05357909, 2.11568570, 2.17941236, 2.24478674,                        DATSYS  80
     $   2.31184888, 2.38062906, 2.45117211, 2.52350450/                        DATSYS  81
      DATA DUM5                                                                 DATSYS  82
     1/  2.59766960, 2.67370844, 2.75165272, 2.83155012,                        DATSYS  83
     2   2.91342998, 2.99734402, 3.08332157, 3.17141581,                        DATSYS  84
     3   3.26165891, 3.35410428, 3.44878364, 3.54574871,                        DATSYS  85
     4   3.64504814, 3.74671745, 3.85081220, 3.95737052,                        DATSYS  86
     5   4.06645203, 4.17808962, 4.29234505, 4.40925932,                        DATSYS  87
     6   4.52888489, 4.65128136, 4.77648497, 4.90456390,                        DATSYS  88
     7   5.03555822, 5.16953278, 5.30653191, 5.44662142,                        DATSYS  89
     8   5.58984137, 5.73626184, 5.88594294, 6.03893232,                        DATSYS  90
     9   6.19529867, 6.35508871, 6.51838112, 6.68521452,                        DATSYS  91
     $   6.85567570, 7.02980804, 7.20767975, 7.38936567/                        DATSYS  92
      END                                                                       DATSYS  93
      SUBROUTINE DAYCLS                                                         DAYCLS   2
C                                                                               DAYCLS   3
C              ONE DAY OF SYSTEM SIMULATIONS                                    DAYCLS   4
C                                                                               DAYCLS   5
C              DEVELOPED BY                                                     -130     1
C                            J. J. Hirsch & S. D. Gates                         -130     2
C                            James J. Hirsch & Associates                       -130     3
C                            Camarillo, California                              -130     4
C              BASED UPON CODE DEVELOPED BY J. J. Hirsch and                    -130     5
C                            W. F. Buhl                                         -130     6
C                            A. E. Erdem                                        -130     7
C                            Lawrence Berkeley National Laboratory              -130     8
C                            University of California                           -130     9
Copyright (c) 1997 by James J. Hirsch. All Rights Reserved. Unpublished         -130    10
c rights reserved under the Copyright Laws of the United States.                -130    11
c RESTRICTED RIGHTS NOTICE: Government use, reproduction or disclosure          -130    12
c is subject to restrictions as set forth in Rights in Data (g)(3) in           -130    13
c UC/LBL purchase order 4607010 with J.J. Hirsch & Associates.                  -130    14
C                                                                               DAYCLS   7
      COMMON  /LOCALD/ STALAT, STALON, ITIMZ, BAZIM, BALTIT,                    /LOCALD/ 2
     1                 SSTALA, CSTALA, TSTALA, SBAZIM, CBAZIM                   /LOCALD/ 3
     +                ,BXORG,BYORG,SHCOEF,TP1,TP2,WSTP1,WSTP2,                  /LOCALD/ 4
     +                 WSHGT,WSHGTL(12),ISREFL,IHOLX                            HOLID1   2
      DIMENSION        LOCALD(32)                                               HOLID1   3
      EQUIVALENCE      (LOCALD(1),STALAT)                                       /LOCALD/ 7
      COMMON /RUNTIM/IDAYBG,IMONBG,IYRBG,IDAYND,IMONND,IYRND                    /RUNTIM/ 2
      COMMON  /NHRSHR/ NHRSHR(128), IHRCTR(5,128), NHRITM,FILEHR,ICECHS         -048j    1
      INTEGER          FILEHR                                                   /NHRSHR/ 3
      COMMON /SUMBUF/ IBUFSL,IBUFSB,IBUFSE                                      /SUMBUF/ 2
      COMMON /HRPSTA/ ISTUF(20)                                                 /HRPSTA/ 2
      COMMON /DDSDAT/ FONh, SFKWh, DTSh, CFMRATh, FONNGTh, RCFMmix,             /DDSDAT/ 2
     1                RfanCFM, EXFIL, DTDUCT, DTDUCTh, TCDFSR, THDFSR,          /DDSDAT/ 3
     2                CFMINh, CFMINc, CFMINhm, CFMINcm, CFMINt,                 /DDSDAT/ 4
     3                TCMINcoil, THMAXcoil, IWarmestZ, IColdestZ                /DDSDAT/ 5
      DIMENSION       DDSDAT(21)                                                /DDSDAT/ 6
      EQUIVALENCE     (DDSDAT(1), FONh)                                         /DDSDAT/ 7
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
C              IMODE IS THE OPERATING MODE OF THE PTGSD SYSTEM                  /DSCTRL/ 2
      COMMON  /DSCTRL/  IMODE                                                   /DSCTRL/ 3
C              SYSTEM LEVEL VARIABLES FOR DESICCANT SYSTEMS, BOTH TOTAL         /DSYSTD/ 2
C              AND INTEGRATED                                                   /DSYSTD/ 3
      COMMON  /DSYSTD/  SCGAS, QREG, WBR, WB8, T8, W8, WB9, T9, W9, EFF,        /DSYSTD/ 4
     1                  DTON, DMODE(7), ERMAX4, ERMAX5, ERMAX6, OPMODE,         /DSYSTD/ 5
     2                  DBOA,WOA,DGAS,DKW,TCONDd,QCDTOT,QCDS,QCDL,              /DSYSTD/ 6
     3                  POA,DFANKW,RFANKW,DMOTKW,EVKW,QCEVT,QCEVS,              /DSYSTD/ 7
     4                  QCEVL,TCMNEV                                            /DSYSTD/ 8
      REAL DSYSTD(39)                                                           /DSYSTD/ 9
      EQUIVALENCE (DSYSTD(1), SCGAS)                                            /DSYSTD/10
      COMMON  /BIN5  / Bin5Cool(12), Bin5Heat(12), Bin5CFM(12),                 /BIN5/   2
     &                 Bin5PLR(12), TCstart, TCend, THstart, THend              /BIN5/   3
      DIMENSION        Bin5Bins(52)                                             /BIN5/   4
      EQUIVALENCE      (Bin5Bins(1), Bin5Cool(1))                               /BIN5/   5
      COMMON  /BUFERS/  MRLEN1, MRLEN2, IBLDSB,IELDSB,LLDSB,N3,IBRPB1,          HVACi    1
     1                  IERPB1,LRPB1,IBRPB2,IERPB2,LRPB2                        HVACi    2
      COMMON  /BUF   / DBUF(52,9999), IZREF(9999),                              -048a    8
     &                 DAYMTR(61,24), ElecPeaks5(13,25,24)                      Time     2
      DIMENSION        IDBUF(52,9999), OBUF(42,24,4), IOBUF(42,24,4)            -048a    9
      EQUIVALENCE      (DBUF(1,1),IDBUF(1,1)),                                  /BUF/    5
     1                 (OBUF(1,1,1),DBUF(1,1)),                                 /BUF/    6
     2                 (OBUF(1,1,1),IOBUF(1,1,1))                               /BUF/    7
      COMMON  /DESHRQ/ NDESDY, IDDTYP(2), DESHRQ(360)                           Time     3
      COMMON  /DPLTD /  DPLTDisUnused                                           HVAC15   1
      COMMON  /ENDUSE/ SUPPKW, HEATKW                                           HVAC27   1
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                 IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                        /FILES/  3
     2               , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                   /FILES/  4
     3                 IHRREP(3), IHRPAS(2)                                     /FILES/  5
      COMMON  /ENDKY / LightEndUse,  TaskEndUse, MiscEndUse, HeatEndUse,        /ENDKY/  2
     &                 CoolEndUse , HtRejEndUse,  AuxEndUse, VentEndUse,        /ENDKY/  3
     &                 RefgEndUse ,  SuppEndUse,  DHWEndUse, ExtEndUse          /ENDKY/  4
      INTEGER          LightEndUse,  TaskEndUse, MiscEndUse, HeatEndUse,        /ENDKY/  5
     &                 CoolEndUse , HtRejEndUse,  AuxEndUse, VentEndUse,        /ENDKY/  6
     &                 RefgEndUse ,  SuppEndUse,  DHWEndUse,  ExtEndUse         /ENDKY/  7
      common  /FNSYS/  ISKIPS, MSYSF(120)                                       /FNSYS/  2
      COMMON  /HRCNT/   IHOURM, IHOURY,   IDAY1, IDAY2, IMON1,  IMON2           /HRCNT/  2
      COMMON /NVNDAT/ VENTF,VNTCFM,NDH,IVENTG,QCVZ,VNTfrac                      -44c6    1
      COMMON  /SSRESY/  IVENTF, XRAN                                            /SSRESY/ 2
     1  , CFMCV1, CFMCV2, DEL   , DQGVC1, DQGVNT, DTMIN , FANHTM, FLWMUL        /SSRESY/ 3
     2  , IAFTYP, ISSV  , IVDONE, IZP1RM, IZP1SS, MINH  , MOUH  , MRRFSV        /SSRESY/ 4
     3  , MRRVSF, MRY   , MRZ   , MSRFSV, MSRVSF, NADJ  , NCWCON, NDELT         /SSRESY/ 5
     4  , Q10   , QGVEC1, QGVEC2, QGVNT , QGWAL , QHBZNX, QIN   , QINXS         /SSRESY/ 6
     5  , QLWAL , QOUT  , QOUTXS, QPNX  , QSUNIN, QW    , SSVFP , T1T           /SSRESY/ 7
     6  , T1TB  , T2MAX , T2T   , T2TB  , T2TFV , TINNEW, TNEXT , TOTNEW        /SSRESY/ 8
     7  , UOT   , UVRMG , UVT   , VNTRM , ZDELMN, ZDELMX, ZMNEXT                /SSRESY/ 9
     1  , ECPLR(3), ERMXEC(4), TCMNEC(3), QCV, TVZ, NVCFMS, TNVCFMS             -045d    1
      COMMON  /HRREP / Irb, Ihrp, Lrb, Lhrp, Nrb, Nhrp, IVTLIM(3,50),           HR       5
     &                 IGRPtr, IBRPtr, IRSch, IRSchT(5),                        HR       6
     &                 NHRTyp(3), ITBUF(3), ITBUFB(3), ITBUFE(3),               HR       7
     &                 IHREOF, ICDFLG                                           HR       8
      COMMON  /MISCD / TEMPS(4,9999),CONS(5),TEMPSL(9999),                      -048a   10
     1                 BLDGQH,BLDGQC,BLDGQL,BLDGP,BPMULT,                       /MISCD/  3
     $                 DBTMIN,DBTMAX,WMIN,WMAX,NSPZ(9999),                      -048a   11
     3                 DQ, DTP, DTR, DTS, FPI, PLRCC , POM, TC2, TDM,           /MISCD/  5
     4                 TRA,WCOL,WCOLM,WMM,YPI,KWBTU,BTUKW,UNFILD,Unusedm        RemPA   45
      REAL             KWBTU                                                    /MISCD/  7
      COMMON  /PIUDAT/ ERFON,ERFOFF,TFZ,ZFONLY,IBF,BBR,MSTEMP,F,                -044e2   1
     &                 CFMIND,CFMI,FRACIAZ,HONS,RCFMI,RCFMMI,RCFMTX,            -044e2   2
     &                 TIAZ,TIC,TIH,ZCFMT,ZQHSMN,TEND1,TEND2,TRY2,F2,           -044e2   3
     &                 FNSZHP,MAXSTZ                                            -044e2   4
      DIMENSION        ZDPIU(8)                                                 -044e2   5
      EQUIVALENCE     (ZDPIU(1),ERFON)                                          -044e2   6
      COMMON  /PLANTD/ QHMP,TMP,CFMP,QHPP,CFMPP,                                /PLANTD/ 2
     1                 QHZP,TZP,DHWPKW,DHWPLF,DHWQRP                            RemPA   46
      REAL             PLANTD(10)                                               RemPA   47
      EQUIVALENCE      (PLANTD(1), QHMP)                                        RemPA   48
      COMMON  /PTRPLT/ Ipm,Ilp,Ich,Ibl,Idw,Itw,Ipv,Ign,Itk,Ihx,                 PV       1
     &                 Iec,Ilm,Iem,Ifm,Ism,Icm,Imm,Imc,Igl,Isp2,                XFC2     1
     &                 Ispare(5),  Ipe,                                         HVAC19   3
     &                 Npm,Nlp,Nch,Nbl,Ndw,Ntw,Npv,Ngn,Ntk,Nhx,                 PV       2
     &                 Nec,Nlm,Nem,Nfm,Nsm,Ncm,Nmm,Nmc,Ngl,Nsp2,                XFC2     2
     &                 Nspare(5),  Npe,                                         HVAC19   6
     &                 Lpm,Llp,Lch,Lbl,Ldw,Ltw,Lpv,Lgn,Ltk,Lhx,                 PV       3
     &                 Lec,Llm,Lem,Lfm,Lsm,Lcm,Lmm,Lmc,Lgl,Lsp2,                XFC2     3
     &                 Lspare(5),  Lpe,                                         HVAC19   9
     &                 Jpm,Jlp,Jch,Jbl,Jdw,Jtw,Jpv,Jgn,Jtk,Jhx,                 PV       4
     &                 Jec,Jlm,Jem,Jfm,Jsm,Jcm,    Jmc,Jgl,                     HVAC19  11
     &                 Jpe, kpr, NumMeters, NumIntHX                            XFC1     1
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      COMMON  /REPORT/ IREPRT(4,37),IPRG,IUNIQV(100),IUNIQS(100),IUNIQL         HVAC14   4
      COMMON  /SYSTD / TH,TC,TM,TR,QH,QC,QHZ,QCZ,QHB,QHP,QHUM,                  /SYSTD/  2
     1                 QDHUM,TCMIN,THMAX,QLSUM,QPSUM,CFM,CFMH,CFMC,             /SYSTD/  3
     2                 RCFM,ECFM,CINF,FON,HON,CON,BON,SCONS(3),PH,PC,           /SYSTD/  4
     3                 SKW,FANKW,unused1,WR,WM,WCOIL,WW,PO,D,                   -046f    1
     4                 FTEMP,TCR,QHR,RfanPumpKW,SGAS,SKWQH,SKWQC,QCLAT,         -131    23
     5                 SFKW,RFKW,FONNGT,WSURF,RWalkinQ,TSURF,TRh,               -131    24
     6                 CBF,CBF1,CBF2,EON,PLRCFM,PLRC,PLRH,QCM1,                 /SYSTD/  8
     7                 QCM2,QHM1,EIRM1,EIRM2,EIR,OFKW,QCT,QCS,                  /SYSTD/  9
     8                 WRMAX,WRMIN,CFMRAT,QdistG,QdistL,RON,QHT,                /SYSTD/ 10
     9                 TPOMIN,POMIN,QHSUP,QRSENS,QRLAT,QRREC,QRREJ,             /SYSTD/ 11
     1                 RCOMKW,RDEFKW,RAUXKW,ECFMP,CFMIN,CINFP,DT,DW,            /SYSTD/ 12
     2                 EWB,IC,NATTSP,Q,RETR,SLOAD,QLSUMP,T,TCHUM,TEND,          /SYSTD/ 13
     3                 TS,hgbmin,HPDefE,EconoOnly,TDuctEnv,                     -044e1   1
     4                 QCUNMT,CapRh,CapRph,CapRc                                HVAC25   3
      REAL             SYSTD(113)                                               HVAC19  13
      EQUIVALENCE      (SYSTD(1),TH)                                            RemPA   65
      COMMON  /REFGD / QRNOW, CRNOW, QR(3), RQSSCH(3), AUXSCH(3),               /REFGD/  2
     &                 QSENS(3), QLAT(3), QDEF(3),SWEATKW(3),                   /REFGD/  3
     &                 COMPKW1(3), COMPKW2(3), QREC1(3), QREC2(3),              /REFGD/  4
     &                 QREJ1(3), QREJ2(3), TcondR, PLR(3), TREJ1, TREJ2,        /REFGD/  5
     &                 TREC1, TREC2, EIR1(3), EIR1r(3),EIR2(3), GPMcw,          /REFGD/  6
     &                 FRAC1, FRAC2, CONDcap, CONDplr, TcondFloat, EIR3         /REFGD/  7
      REAL             REFGDAT(65)                                              /REFGD/  8
      EQUIVALENCE      (REFGDAT(1), QRNOW)                                      /REFGD/  9
      COMMON  /TIME  / IDOY, IYR, IMO, IDAY, IHR,                               Time     4
     &                 ISCMO, ISCDAY, ISCHR, IDOW, ISCDOW, iDSdates(6),         -044e5   1
     &                 iTimeFlg, iDSFlg, iDDFlg, InitialFlg, LeapYr,            Time     6
     &                 CLOCK(10), MONDSC(13), MONLEN(12), MONSDA(12)            HR      12
      COMMON  /SimCtl/ SimCtrl                                                  /SimCtl/ 2
      INTEGER          SimCtrl                                                  /SimCtl/ 3
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
      COMMON  /ZONED / EXCFM,FH,FC,CFMZ,QHBZ,QOVER,THZ,TCZ,ERMAX,ERMIN,         /ZONED/  2
     1                 TRY,FTD,CORINT,G0,G1,G2,G3,SIGMAG,TL,ZQHR,TAVE,          /ZONED/  3
     2                 ZQH,ZQC,FCHPS(15),ACFM,ZKW,TCMINZ,THMAXZ,                /ZONED/  4
     3                 ERMAXM,ERMINM,THR,CSSCND,CSSVEC,HENOW,QGWIN,             /ZONED/  5
     4                 QSNABT,QGOPWL,QGVEC,CFMCVT,SSFPT,CFMVNT,ZFANKW,          /ZONED/  6
     5                 ZKWCBT,ZKWHBT,ZCapRbbrd, XC,ZC,XH,ZH                     -044e2   7
      REAL ZONED(63)                                                            -044e2   8
      EQUIVALENCE (ZONED(1),EXCFM)                                              /ZONED/  9
      COMMON  /FZZZ2/   ILDCTL, ILDMAS, ISUB  , ITYP  , OLDCRT, OLDMIN          /FZZZ2/  2
     2                , OLDMOA, OLDRDT, OLDRET, OLDRKW, OLDSCH, OLDSDT          /FZZZ2/  3
     3                , OLDSKW, OLDSUP, TAV                                     RemPA    7
      COMMON /RSVVTD/ CONFRC,HONFRC,NOWFRC,THMXNS                               /RSVVTD/ 2
      REAL NOWFRC                                                               /RSVVTD/ 3
      COMMON /SSPDAT/  PLRCS,QCCKWS,QCCMPS,PLRHS,QHCKWS,QHCMPS                  /SSPDAT/ 2
     $                ,PLRFS,PLRFCS,PLRFHS,sspss                                /SSPDAT/ 3
     $                ,PLRCZ,QCCKWZ,QCCMPZ,PLRHZ,QHCKWZ,QHCMPZ                  /SSPDAT/ 4
     $                ,PLRFZ,PLRFCZ,PLRFHZ,sspsz                                /SSPDAT/ 5
     $                ,ISSPF,IWCCF,IPCCF,SSPSAV                                 /SSPDAT/ 6
      DIMENSION        SSPD(24)                                                 JJHfix   1
      EQUIVALENCE      (SSPD(1),PLRCS)                                          /SSPDAT/ 8
      COMMON /WSEDAT/  WSESAV(15)                                               /WSEDA2/ 2
      COMMON /SHP   / QCRUN,QCLOAD,QCGAS,QCAUX,QCGSLD,QCGSUP,                   /SHP/    2
     1                QCWAS,QCWASU,QCGSAV,QCFAN,                                /SHP/    3
     2                QHRUN,QHLOAD,QHGAS,QHAUX,QHGSLD,QHGSUP,                   /SHP/    4
     3                QHWAS,QHWASU,QHGDFR,QHFAN,          CUR(25),              /SHP/    5
     4                GSAV1,GASV2,PCH,ISZCZ,GCAP(2),GEDB,QHDFRG,                -044c1   1
     5                GRPM,PLRSUP,CFMCYC,CLPLR,CFMVVT,QHZHP,PCCEDB,             /SHP/    7
     6                IHPREP,IHPOUT,IHPHRR,IHPHRN,IRST,IREN                     /SHP/    8
      COMMON /SHPZ  / QCRUNZ,QCLOADZ,QCGASZ,QCAUXZ,QCGSLDZ,QCGSUPZ,             /SHP/    9
     1                QCWASZ,QCWASUZ,QCGSAVZ,QCFANZ,                            /SHP/   10
     2                QHRUNZ,QHLOADZ,QHGASZ,QHAUXZ,QHGSLDZ,QHGSUPZ,             /SHP/   11
     3                QHWASZ,QHWASUZ,QHGDFRZ,QHFANZ                             /SHP/   12
      DIMENSION       SHP(60),SHPZ(20)                                          /SHP/   13
      EQUIVALENCE     (SHP,QCRUN),(SHPZ,QCRUNZ)                                 /SHP/   14
     1               ,(DFM1,CUR(18)),(DFM2,CUR(19)),(DFM3,CUR(20))              /SHP/   15
      COMMON /FFUEL/ FFUEL, FurnAuxFuel, FurnAuxkW, PLRF                        /FFUEL/  2
      DIMENSION       ISYSP(15),SYSD(15),WEATH(24)                              -130    26
      EQUIVALENCE     (WEATH(1),CLRNES)                                         -130    27
      INTEGER PLTFLG(10)                                                        DAYCLS  48
      COMMON  /LENS/   MWFLEN, MRLEN, MSHLEN, MWNLEN, MDRLEN, MXLEN,            /LENS/   2
     1                 MULEN, MZLEN, MIWLEN, MFLLEN,                            /LENS/   3
     2                 LMTB, LLDSOU, MSTLEN, LSTFT, MWLLEN                      /LENS/   4
      COMMON  /PTRBGN/ IWFB, IWPB, ICONSB, IGTB, IWLB, IGEOB, ISHADB,           /PTRBGN/ 2
     &                 IWINB, IDRB, IEWB, IUGB, ISPB, IIWPB, IIWB,              /PTRBGN/ 3
     &                 IFLB, ISPCDB, IOTHB, ILHB, IZQCMB, ISSHDB,               /PTRBGN/ 4
     &                 IOHFIB, IZLSK, IZLSL, ISTFB, ILSSH                       PV2      1
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     /PNTRS/  3
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        /PNTRS/  4
      COMMON  /SIZE/   LENGTH,NWF,NWPAR,NCONS,NGT,NWL,NGEO,                     /SIZE/   2
     1                 NGSHAD, NWIN, NDOOR, NEW, NUG, NSPl, NIWP, NIW,          /SIZE/   3
     &                 NFL, NBR, NOTH, NITH, NOPSRF,                            /SIZE/   4
     &                 NSURF, NSSHD, NSHTOT, NEWshade                           /SIZE/   5
      COMMON /WCTRL/   IwinReturn, Imsgflg                                      /WCTRL/  2
#ifndef _DLL                                                                 /* -048     1 */ 
      COMMON /WIN_MB/ MB_OK,MB_ICONSTOP,MB_ICONEXCLAMATION,MB_TASKMODAL,        -048     2
     &                MB_ICONINFORMATION                                        -048     3
#else                                                                        /* -048     4 */ 
      include 'msgbox.fi'                                                       -048     5
#endif                                                                       /* -048     6 */ 
      REAL OLDCFM(9999),OLDRAT(9999),OLDCFH(9999),OLDVEN(9999),                 -048a   13
     $     OLDEXH(9999),OLDEKW(9999),                                           -048a   14
     $     OLDSUP,OLDSKW,OLDSDT,OLDRET,OLDRKW,OLDRDT                            HVAC23  16
      DATA            ISYSP/0,0,0,9,10,33,8,7,45,46,47,48,0,0,0/                -131    25
      DATA IRSERR /0/                                                           DAYCLS  52
      V(DB,W,P) = 0.754*(DB+459.7)*(1.0+1.605*W)/P                              V        2
C              READ IN LOADS BUFFER FOR THE DAY                                 DAYCLS  62
      READ (ILDSO,END=104) (AA(I), I=IBLDSB,IELDSB)                             DAYCLS  63
C$     write (ioutpt,7564) ibldsb, ieldsb, lldsb                                DAYCLS  64
C$7564 format(8h ibldsb=,i10,8h ieldsb=,i10,7h lldsb=,i10)                      DAYCLS  65
C$     number = ieldsb - ibldsb + 1                                             DAYCLS  66
C$     call dumpit(20hinput from loads    , ia(ibldsb), number)                 DAYCLS  67
      GO TO 103                                                                 DAYCLS  68
  104 CALL MSGSIM(-1,I,I,I,I)                                                   DAYCLS  69
      WRITE(IOUTPT,102)                                                         DAYCLS  70
  102 FORMAT(43H ****** EOF ON LOADS FILE IN SYSTEMS ******   )                 DAYCLS  71
      call MessageBox( NULL, 'Errors reading LOADS results -'                   WinRet  26
     &  //' ABORTING'//char(0),'DAYCLS Errors'//char(0), MB_OK                  WinRet  27
     &  + MB_ICONSTOP+MB_TASKMODAL )                                            WinRet  28
      IwinReturn = 1                                                            WinRet  29
      RETURN                                                                    WinRet  30
  103 CONTINUE                                                                  DAYCLS  73
C                                                                               DAYCLS  79
C              LOOP THROUGH THE 24 HOURS                                        DAYCLS  80
      DO 599, While(.True.)  ! While iTimeFlg .lt. 2                            -047k   14
c              Increment clock time and schedules                               Time   141
      CALL TimeIncrement                                                        Time   142
      IF( IwinReturn .ne. 0 ) RETURN                                            WinRet  31
c              Increment count of hours for month and year                      Time   143
      IF (InitialFlg .EQ. 0)  THEN                                              Time   144
        IHOURM = IHOURM + 1                                                     Time   145
        IHOURY = IHOURY + 1                                                     Time   146
      ENDIF                                                                     Time   147
C              CALL ROUTINE TO UNPACK AN HOUR OF THE LOADS DATA                 DAYCLS 102
C              AND WEATHER DATA FOR THIS HOUR                                   DAYCLS 103
      CALL HOURIN                                                               DAYCLS 104
      IF( IwinReturn .ne. 0 ) RETURN                                            WinRet  32
      IDAYHR = IDAY*32 + ISCHR                                                  DAYCLS 105
      IDBWBT = INT(DBT+128.1)*256 + INT(WBT+128.1)                              DAYCLS 106
c              Set flags if hourly-reports active this hour                     HR      17
      IF (Nhrp .GT. 0)  CALL HourlyReports(1)                                   HR      18
C************************* run function : DAYCLS-1 *****************            DAYCLS 132
          IF( MSYSF(5) .NE. 0 )   CALL  FINTS( MSYSF(5), 1. )                   DAYCLS 133
C*******************************************************************            DAYCLS 134
C                                                                               DAYCLS 135
C              Update space temp history for all spaces in this run             RemPA   74
C              TEMPS(1,S) = TEMP OF SPACE LAST HOUR                             RemPA   75
C              TEMPS(2,S) = TEMP HOUR BEFORE LAST HOUR                          RemPA   76
C              TEMPS(3,S) = TEMP TWO HOURS AGO                                  RemPA   77
C              TEMPS(4,S) = THIS IS WHERE TEMP THIS HOUR IS PLACED              RemPA   78
C                             AS IT IS CALCULATED BY TEMDEV                     RemPA   79
C              WHERE S=SPACE NUMBER                                             RemPA   80
      DO  I=1,NSPACE                                                            RemPA   81
        TEMPS(3,I) = TEMPS(2,I)                                                 RemPA   82
        TEMPS(2,I) = TEMPS(1,I)                                                 RemPA   83
        TEMPS(1,I) = TEMPS(4,I)                                                 RemPA   84
      ENDDO                                                                     RemPA   85
c              zero the plant data common block                                 RemPA   86
      DO  II=1,10                                                               RemPA   87
        <PLTD>     = 0.0                                                        RemPA   88
        PLTFLG(II) = 0                                                          RemPA   89
        PLANTD(II) = 0.0                                                        RemPA   90
      ENDDO                                                                     RemPA   91
      <IHROVERP> = 0                                                            RemPA   96
      <IHRONP> = 0                                                              RemPA   97
      <pr.OvrldCl> = 0                                                          -047e    1
      <pr.OvrldHt> = 0                                                          -047e    2
      PHON = 0.0                                                                RemPA   98
      PCON = 0.0                                                                RemPA   99
      IF (IHR .EQ. 1)  <PQCDAYSUM> = 0.                                         RemPA  100
c                                                                               RemPA  101
c              loop thru all systems and set up operation schedules             RemPA  102
c              and zone thermostat setpoints                                    RemPA  103
      DO  NS=1,NSYS                                                             RemPA  104
        NSP   = IS + (NS-1)*NSS                                                 RemPA  105
        ISZ = <ISZONES>                                                         HVAC15   3
        NSZ = <NZONES>                                                          HVAC15   4
c              Heating schedule, check for heating cutoff upper limit           -044b3   1
        HON = Max(0., SchSnap(-1, <HEATING-SCHEDULE>, DBT, 1.))                 -044b3   2
c              Cooling schedule, check for cooling cutoff lower limit           -044b3   3
        CON = Max(0., SchSnap( 1, <COOLING-SCHEDULE>, DBT, 1.))                 -044b3   4
c              Fan schedule                                                     -044b3   5
        FON = SchSnap( 1, <FAN-SCHEDULE>, 0., 1.)                               -044b3   6
        IF (FON .EQ. 1.)  THEN                                                  -044b3   7
          <START-FLAG> = 0                                                      -044b3   8
        ELSEIF (FON .EQ. -999.)  THEN                                           -044b3   9
c              Optimum start - look ahead for fan start                         -044b3  10
          iSave = ISCHR                                                         -044b3  11
          DO  ISH=1,6                                                           -044b3  12
            ISCHR = ISCHR + 1                                                   -044b3  13
            IF (ISCHR .GE. 24)  EXIT                                            -044b3  14
            IF (SchVal(<FAN-SCHEDULE>, 1.) .GT. 0.)  THEN                       -044b3  15
              ISCHR = iSave                                                     -044b3  16
              CALL OPSTRT(ISH)                                                  -044b3  17
              EXIT                                                              -044b3  18
            ENDIF                                                               -044b3  19
          ENDDO                                                                 -044b3  20
          ISCHR = iSave                                                         -044b3  21
          FON   = Max(0., FON)                                                  -044b3  22
        ENDIF                                                                   -044b3  23
c                                                                               Time   176
c              Fan control for hot deck fan of dual-fan dual-duct system        Time   177
        IF ((<DDS-TYPE> .NE. 2) .OR. (<HFAN-SCHEDULE> .EQ. 0))  THEN            Time   178
c              all single-fan systems, or if no hot fan schedule                Time   179
          FONh = FON                                                            Time   180
        ELSE                                                                    Time   181
c              dual-fan hot-deck fan                                            Time   182
          FONh = SchSnap(-1, <HFAN-SCHEDULE>, DBT, 1.)                          Time   183
          IF (FONh .EQ. -999.)  THEN                                            Time   184
c              optimum start - start heating fan if cooling fan on              Time   185
            IF (SchSnap(1, <FAN-SCHEDULE>, 0., 1.) .EQ. -999.  .AND.            Time   186
     &                                                FON .EQ. 1.)  THEN        Time   187
              FONh = 1.                                                         Time   188
            ELSE                                                                Time   189
              FONh = 0.                                                         Time   190
            ENDIF                                                               Time   191
          ENDIF                                                                 Time   192
c              end of hot deck fan control                                      Time   193
        ENDIF                                                                   Time   194
c                                                                               RemPA  179
c              initialize zone data                                             RemPA  180
c              get hourly values for zone thermostat settings                   RemPA  181
        DO  NZ=1,NSZ                                                            RemPA  182
          ZP1 = ISZ + (NZ-1)*NZD                                                RemPA  183
          ZP2 = <ZP2>                                                           RemPA  184
c              hourly zone thermostat settings                                  RemPA  185
          THR    = <THROTTLING-RANGE>                                           RemPA  186
c              heating setpoint                                                 RemPA  187
          THZ = SchVal(<HEAT-TEMP-SCH>, -999.)                                  Time   195
c              cooling setpoint                                                 Time   196
          TCZ = SchVal(<COOL-TEMP-SCH>,  999.)                                  Time   197
          IF(<START-FLAG> .NE. 0) THZ = <START-HT> + THR                        RemPA  201
          IF(<START-FLAG> .NE. 0) TCZ = <START-CT> - THR                        RemPA  202
c              When the two setpoints are not separated by at least one         RemPA  203
c              throttling-range calc new setpoints                              RemPA  204
          IF(THZ+THR .GT. TCZ-THR)  THEN                                        RemPA  205
            THZ = (THZ+TCZ)*0.5 - THR                                           RemPA  206
            TCZ = THZ + THR + THR                                               RemPA  207
          ENDIF                                                                 RemPA  208
c              store for further use this hour                                  RemPA  209
          <THZ> = THZ                                                           RemPA  210
          <TCZ> = TCZ                                                           RemPA  211
c              end of zone loop                                                 RemPA  212
        ENDDO                                                                   RemPA  213
c                                                                               RemPA  214
c              night cycle control of fans                                      RemPA  215
        FONNGT  = 0.                                                            RemPA  216
        FONNGTh = 0.                                                            RemPA  217
        IF ((FON .LE. 0.) .AND. (FONh .LE. 0.) .AND.                            -130    32
     1     ((<NIGHT-CYCLE-CTRL> .EQ. 1)                                         RemPA  219
     2          .OR. (<NIGHT-CYCLE-CTRL> .EQ. 2)) )  THEN                       RemPA  220
          BON = 0.                                                              -131    26
          IF((<BASEBOARD-SCH>.GT.0).and.(HON.NE.0.))                            -131    27
     $      BON = DRSVAL(<BASEBOARD-SCH>)                                       -131    28
          IE     = 1                                                            RemPA  221
c              First zone only or all zones                                     RemPA  222
          IF(<NIGHT-CYCLE-CTRL> .EQ. 1)  IE = NSZ                               RemPA  223
          DO NZ=1,IE                                                            RemPA  224
            ZP1 = ISZ + (NZ-1)*NZD                                              RemPA  225
            ZP2    = <ZP2>                                                      RemPA  226
            IF (<ZONE-TYPE> .EQ. 1)  THEN                                       -131    29
C               See where ZONE temperature goes if fans stay off                -131    30
              JJ     = 1                                                        -131    31
              P2     = <NZSPACE>                                                -131    32
C              INTERNAL WALLS                                                   -131    33
              IE     = <NATTCH>                                                 -131    34
              CORINT = 0.                                                       -131    35
              QHBZ   = 0.                                                       -131    36
              IF(IE .GT. 0) THEN                                                -131    37
                X      = 0.                                                     -131    38
                Y      = 0.                                                     -131    39
                Z      = 0.                                                     -131    40
                DO J = 1,IE                                                     -131    41
                  I1 = <IATTCH> + (J-1)*3                                       -131    42
                  NATTSP = IA(I1)                                               -131    43
                  X = X + AA(I1+1)*(TEMPS(1,NATTSP)-TEMPSL(NATTSP))             -131    44
                  Y = Y + AA(I1+1)*(TEMPS(2,NATTSP)-TEMPSL(NATTSP))             -131    45
                  Z = Z + AA(I1+1)*(TEMPS(3,NATTSP)-TEMPSL(NATTSP))             -131    46
                ENDDO                                                           -131    47
                CORINT = X + <P1>*Y + <P2>*Z                                    -131    48
              ENDIF                                                             -131    49
              G0 = <G0> * <AREA>                                                XFC2     4
     &           +        (<CONDUCHR>      + CONS(1)*<CFMINF>)                  XFC2     5
              G1 = <G1> * <AREA>                                                XFC2     6
     &           + <P1> * (<CONDUCHRPAST>  + CONS(1)*<VIPAST>)                  XFC2     7
              G2 = <G2> * <AREA>                                                XFC2     8
     &           + <P2> * (<CONDUCHRPAST2> + CONS(1)*<VIPAST2>)                 XFC2     9
              SIGMAG = G0 + G1 + G2 + <G3>*<AREA>                               -131    55
C              BASEBOARD CALCULATION                                            -131    56
              ZCapRbbrd = 0.0                                                   -131    57
              IF(<BASEBOARD-RATING> .LT. 0.) THEN                               -131    58
                IF (<BBRD-LOOPZ> .NE. 0)  THEN                                  -131    59
                  JLP    = <BBRD-LOOPZ>                                         -131    60
                  ZCapRbbrd = <lp;HCAP_RATIO>                                   -131    61
                ELSE                                                            -131    62
                  ZCapRbbrd = 1.0                                               -131    63
                ENDIF                                                           -131    64
                IF((<BASEBOARD-CTRL> .EQ. 2).and.                               -131    65
     $             (BON*ZCapRbbrd.GT.0.01))  THEN                               -131    66
                  QHBZ   = <BASEBOARD-RATING> * BON*ZCapRbbrd                   -131    67
                ENDIF                                                           -131    68
              ENDIF                                                             -131    69
              F = <TLOADS>*SIGMAG                                               XFC2    10
     &          +        (<QS> + <QP> - QHBZ - <zn;QMechLossNow>)               XFC2    11
     &          + <P1> * (<QSPAST> + <QPNOW> - <QNOW> - <QBPAST>                XFC2    12
     &                                       - <zn;QMechLossPast>)              XFC2    13
     &          -  G1  * <TNOW>                                                 XFC2    14
     &          + <P2> * (<QSPAST2> + <QPPAST> - <QPAST> - <QBPAST2>            XFC2    15
     &                                         - <zn;QMechLossPas2>)            XFC2    16
     &          -  G2  * <TPAST>                                                XFC2    17
              F = F - G3*<TPAST2> + <FCOR>*CORINT                               -131    75
C              CONTRIBUTION ACROSS SUNSPACE INTERIOR WALLS                      -131    76
              IF (<ISUNSP>.NE.0) THEN                                           -131    77
                CSSCND = 0.                                                     -131    78
                CSSVEC = 0.                                                     -131    79
                CALL SSFCOR(2)                                                  -036     1
                IF(ABS(CSSCND+CSSVEC) .lt. G0*20.0)  THEN                       -036     2
                  F = F + CSSCND + CSSVEC                                       -036     3
                ENDIF                                                           -036     4
              ENDIF                                                             -131    82
              TRY    = (F+<TNOW>)/G0                                            -131    83
              IF(TRY .GT. <TCZ>+<THROTTLING-RANGE>)  THEN                       -131    84
                FONNGT  = +1.0                                                  -131    85
              ELSE                                                              -131    86
                IF((<BASEBOARD-CTRL> .EQ. 1).and.                               -131    87
     $             (HON*ZCapRbbrd.GT.0.0))  THEN                                -131    88
                  QHBZ   = <BASEBOARD-RATING> * ZCapRbbrd                       -131    89
                  TRY    = (F-QHBZ+<TNOW>)/G0                                   -131    90
                ENDIF                                                           -131    91
                IF(TRY .LT. <THZ>-<THROTTLING-RANGE>)  THEN                     -131    92
                  FONNGTh = -1.0                                                -131    93
                ENDIF                                                           -131    94
              ENDIF                                                             -131    95
            ENDIF                                                               -131    96
          ENDDO                                                                 RemPA  231
          IF (FON  .EQ. -1.)  FONNGT  = 0.                                      -130    33
          IF (FONh .EQ. -1.)  FONNGTh = 0.                                      -130    34
          IF ((<DDS-TYPE> .NE. 2) .OR. (<NIGHT-CYCLE-FANS> .EQ. 2)) THEN        RemPA  232
c              all systems except dual-fan dual-duct, or dual duct              RemPA  233
c              cycling fans together                                            RemPA  234
            IF ((FONNGT .NE. 0.) .OR. (FONNGTh .NE. 0.))  FON = 1.0             -131    97
            FONh = FON                                                          RemPA  236
          ELSE                                                                  RemPA  237
c              dual-fan dual-duct with separate night cycle control             RemPA  238
            IF (FONNGTh .LT. 0.0)  FONh = 1.0                                   -131    98
            IF (FONNGT  .GT. 0.0)  FON  = 1.0                                   -131    99
          ENDIF                                                                 RemPA  241
c              combine heat and cool night cycle flags for reporting            CCIG7    1
        IF (FONNGT .EQ. 0.)  FONNGT = FONNGTh                                   CCIG7    2
c              end of night-cycle control                                       RemPA  242
        ENDIF                                                                   RemPA  243
        IF (FON  .EQ. -1.)  FON  = 0.                                           -130    35
        IF (FONh .EQ. -1.)  FONh = 0.                                           -130    36
c              store schedule flags for further use this hour                   RemPA  244
        <HON>  = HON                                                            RemPA  245
        <CON>  = CON                                                            RemPA  246
        <FON>  = FON                                                            RemPA  247
        <FONh> = FONh                                                           RemPA  248
        <FONNGT>  = FONNGT                                                      -131   100
        <FONNGTh> = FONNGTh                                                     -131   101
c              end of system loop and setup of operation                        RemPA  249
      ENDDO                                                                     RemPA  250
c                                                                               RemPA  251
C******************* run function : plant-before-function **************        RemPA  252
C     IF( <MPLANT-FUNC0> .NE. 0 )    CALL  FINTS( <MPLANT-FUNC0>, 0. )          RemPA  253
C***********************************************************************        RemPA  254
C                                                                               RemPA  255
c              Hourly initialization of circulation loops and central           XFC1    20
c              plant equipment                                                  XFC1    21
      SimCtrl = 10                                                              XFC1    22
      CALL Xface_Statistics                                                     XFC1    23
      CALL PLANTi                                                               HVAC4    8
      IF( IwinReturn .ne. 0 ) RETURN                                            WinRet  33
c                                                                               RemPA  258
C***************************** run function : DAYCLS-2 *************            DAYCLS 203
              IF( MSYSF(6) .NE. 0 )   CALL  FINTS( MSYSF(6), 2. )               DAYCLS 204
C*******************************************************************            DAYCLS 205
c              Loop thru all systems                                            RemPA  259
      DO 299  NS=1,NSYS                                                         RemPA  260
c              base pointer to this system's data                               RemPA  261
      NSP = IS + (NS-1)*NSS                                                     RemPA  262
C              ISZ IS WHERE THE ZONE LIST START FOR THE SYSTEM                  DAYCLS 212
      ISZ    = <ISZONES>                                                        DAYCLS 213
C              NSZ IS THE NUMBER OF ZONES SERVED BY THIS SYSTEM                 DAYCLS 214
      NSZ    = <NZONES>                                                         DAYCLS 215
C              ICODE IS TYPE SYSTEM-TYPE CODE                                   DAYCLS 216
      ICODE  = <SYSTEM-TYPE>                                                    DAYCLS 217
C              RESYS2 IS JUST PSZ WITH DIFFERENT DEFAULTS                       DAYCLS 218
      IF (<SYSTEM-TYPE>.EQ.29)  ICODE=19                                        DAYCLS 219
C              CALC THE VALUES OF THE CONS() VARIABLES                          DAYCLS 220
      IF (<sy.FanOnPast> .gt. 0.)  THEN  ! fan ran last hour                    -044c2   1
        CONS(4) = 60. / V(<sy.Tmix1>,<sy.Wmix1>,PATM)                           -044c2   2
        CONS(1) = (.24+.44*<sy.Wmix1>) * CONS(4)                                -044c2   3
      ELSE  ! use value from last start-up hour                                 -044c2   4
        CONS(4) = 60. / V(<sy.TmixStart>,<sy.WmixStart>,PATM)                   -044c2   5
        CONS(1) = (.24+.44*<sy.WmixStart>) * CONS(4)                            -044c2   6
      ENDIF                                                                     -044c2   7
      CONS(2) = 1061.0 * CONS(4)                                                -044c2   8
      CONS(3) = 0.3996 / CONS(1)                                                -044c2   9
C******************* run function : zone-before-function  **************        DAYCLS 224
      ZP1 = ISZ                                                                 DAYCLS 225
      DO  129  I = 1 , NSZ                                                      DAYCLS 226
          ZP2 = <ZP2>                                                           DAYCLS 227
          IF( <MZONE-FUNC0> .NE. 0 )    CALL  FINTS( <MZONE-FUNC0>, 0. )        DAYCLS 228
          ZP1 = ZP1 + NZD                                                       DAYCLS 229
129   CONTINUE                                                                  DAYCLS 230
C***********************************************************************        DAYCLS 231
C              ZERO THE SYSTEM DATA COMMON BLOCK                                DAYCLS 232
C              ZERO THE GAS HEAT PUMP BLOCK                                     DAYCLS 233
C              INITIALIZE THE DESICCANT DATA BLOCK                              DAYCLS 234
C              ZERO VARIOUS COMMON BLOCK ARRAYS                                 DAYCLS 235
      II     = 120                                                              DAYCLS 236
      DO I=1,II                                                                 DAYCLS 237
        IF(I .LT. 111)  SYSTD(I)  = 0.                                          DAYCLS 238
        IF(I .LT. 22)   DDSDAT(I) = 0.                                          DAYCLS 239
        IF(I .LE. 39)   DSYSTD(I) = 0.                                          HVAC22  11
        IF(I .LT. 53) Bin5Bins(I) = 0.                                          HVAC22  12
        IF(I .LE.  60)    SHP(I) = 0.                                           DAYCLS 241
        IF(I .LE.  20)   SHPZ(I) = 0.                                           DAYCLS 242
        IF(I .LE.  24)   SSPD(I) = 0.                                           DAYCLS 243
        IF(I .LE.  15) WSESAV(I) = 0.                                           DAYCLS 244
      ENDDO                                                                     DAYCLS 245
      IF (<REFG-ZONE-ZP1> .GT. 0)  CALL FILLN(0., REFGDAT(1), 65)               HVAC16   2
      DO II=1,5                                                                 -048z    1
        <PIPE&DUCTLOSSES> = 0.                                                  -048z    2
      ENDDO                                                                     -048z    3
C              Initialize fraction of hour fans run to full hour                DAYCLS 246
      CFMCYC = 1.0                                                              DAYCLS 247
      CFMVVT = 1.0                                                              DAYCLS 249
      NOWFRC = 1.0                                                              DAYCLS 250
c              hourly fan max capacity ratios                                   DAYCLS 251
      CFMRAT  = 1.0                                                             DAYCLS 252
      CFMRATh = 1.0                                                             DAYCLS 253
      DBOA = DBT                                                                DAYCLS 254
      WOA = HUMRAT                                                              DAYCLS 255
C              ZERO SOME NAT VENT VARIABLES                                     DAYCLS 256
      TVZ = 0.0                                                                 DAYCLS 257
      VENTF = 0.0                                                               DAYCLS 258
      VNTCFM = 0.0                                                              DAYCLS 259
      QCV = 0.0                                                                 DAYCLS 260
      IVENTF = 0                                                                DAYCLS 261
      IVENTG = 0                                                                -42j     2
      VNTfrac= 0.0                                                              -44c6    2
      NDH = 0                                                                   DAYCLS 262
c              Initialize exhaust-air heat recovery                             ERV      1
      IF (<sy:RECOVER-EXH> .EQ. 1)                                              Bug40    1
     &  CALL ERVentilator(10, <sy;ERVentilator>, xx,xx,xx,xx,xx,xx)             ERV      3
C              SET THE MIXED AIR TEMP WHEN EVAP COOLER RUNS                     DAYCLS 263
      TCMNEV = 199.                                                             DAYCLS 264
C********************************* run function : DAYCLS-3 *********            DAYCLS 265
                  IF( MSYSF(7) .NE. 0 )   CALL  FINTS( MSYSF(7), 3. )           DAYCLS 266
C*******************************************************************            DAYCLS 267
C              RECALCULATE CFMINF ALLOWING FOR VARIABLE ZONE TEMP               DAYCLS 268
      CALL CFMINF                                                               DAYCLS 269
c              cooling, heating, and fan schedules.  Note that                  RemPA  263
c              baseboard schedule defaults to off                               RemPA  264
      HON  = <HON>                                                              RemPA  265
      CON  = <CON>                                                              RemPA  266
      FON  = ABS(<FON>)                                                         RemPA  267
      FONh = ABS(<FONh>)                                                        RemPA  268
      EON  = FON                                                                RemPA  269
      FONNGT  = <FONNGT>                                                        -131   102
      FONNGTh = <FONNGTh>                                                       -131   103
C              Check for MIN-SUPPLY-SCH and sub value for MIN-SUPPLY-T          DAYCLS 277
      <MIN-SUPPLY-T> = SchVal(<MIN-SUPPLY-SCH>, <MIN-SUPPLY-T>)                 Time   198
C              Check for evaporative condenser types and set flag               -045h    1
      IPCCF  = 0                                                                DAYCLS 282
      IF (<CONDENSER-TYPE> .eq. 2) THEN  ! evap precooled                       -045h    2
        TV1   = <COOL-FT-MIN> + 2.0                                             DAYCLS 284
        TV2   =  999.                                                           DAYCLS 285
        IPCCF = 1                                                               DAYCLS 286
        PCCEDB = AMAX1(DBT,<COOL-FT-MIN>)                                       DAYCLS 287
        IF(<EVAP-PCC-SCH> .NE. 0)  THEN                                         DAYCLS 288
          IPCCF = 0                                                             DAYCLS 289
          SchV  = SchVal(<EVAP-PCC-SCH>, 1.)                                    Time   199
          IF (SchV .NE. 0.)  THEN                                               Time   200
            IPCCF = 1                                                           Time   201
            IF(SchV .LT. 0.)  TV1 = SchV                                        Time   202
            IF(SchV .GT. 1.)  TV2 = SchV                                        Time   203
          ENDIF                                                                 Time   204
        ENDIF                                                                   DAYCLS 296
        IF(IPCCF .EQ. 1)  THEN                                                  DAYCLS 297
          IPCCF = 0                                                             DAYCLS 298
          IF((DBT.GE.TV1).AND.(DBT.LE.TV2))  THEN                               DAYCLS 299
            IPCCF = 1                                                           DAYCLS 300
            PCCEDB = AMAX1(2.,(1.0-<EVAP-PCC-EFF>)*(DBT-WBT))                   DAYCLS 301
            PCCEDB = AMIN1( DBT, WBT+PCCEDB )                                   DAYCLS 302
            PCCEDB = AMAX1( <COOL-FT-MIN>, PCCEDB )                             DAYCLS 303
          ENDIF                                                                 DAYCLS 304
        ENDIF                                                                   DAYCLS 305
        TV1   = 0.                                                              DAYCLS 306
        TV2   = 0.                                                              DAYCLS 307
      ELSEIF (<CONDENSER-TYPE> .eq. 3) THEN  ! evaporative condenser            -045h    3
        IPCCF  = <CONDENSER-TYPE>                                               -045h    4
        PCCEDB = Max(WBT, <COOL-FT-MIN>)                                        -045h    5
      ENDIF                                                                     DAYCLS 308
      IF( (<EXHAUST-FAN-SCH>.NE.0) .and.                                        DAYCLS 441
     $   ((ICODE.eq. 2).or.(ICODE.eq. 9).or.(ICODE.eq.10).or.                   DAYCLS 442
     $    (ICODE.eq.13).or.(ICODE.eq.14).or.(ICODE.eq.19).or.                   DAYCLS 443
     $    (ICODE.eq.21).or.(ICODE.eq.28)) )  THEN                               DAYCLS 444
        IF (FON .NE. 0. AND. SchVal(<EXHAUST-FAN-SCH>, 1.) .NE. 0.) THEN        Time   205
          EON = 1.0                                                             Time   206
        ELSE                                                                    Time   207
          EON = 0.                                                              Time   208
        ENDIF                                                                   Time   209
      ELSE                                                                      Time   210
        EON = FON                                                               Time   211
      ENDIF                                                                     DAYCLS 451
C              CHECK IF NIGHT VENTILATION IS TO BE USED THIS HOUR.  THIS        DAYCLS 452
C              HAPPENS ONLY WHEN THE FAN-SCHEDULE IS OFF AND THE NIGHT          DAYCLS 453
C              VENT KEYWORDS ALLOW VENTING                                      DAYCLS 454
C                                                                               DAYCLS 455
C              SKIP IF WRONG TYPE OF SYSTEM, THE FANS ARE ON OR NO VENTING      DAYCLS 456
      ISUB   = 0                                                                DAYCLS 457
      IF(FON .NE. 0.0)  GOTO 9052                                               DAYCLS 458
      IF ((ICODE .EQ. 1) .OR. (ICODE .EQ. 8) .OR. (ICODE .EQ. 17) .OR.          DAYCLS 459
     1    (ICODE .EQ. 25)) GO TO 9054                                           DAYCLS 460
      IF(<NIGHT-VENT-CTRL> .EQ. 0)  GOTO 9052                                   DAYCLS 461
C              IF NIGHT-FAN WE ALWAYS VENT                                      DAYCLS 462
      IF(<NIGHT-VENT-CTRL> .EQ. 3)  GOTO 9050                                   DAYCLS 463
C              IF NIGHT FANS CAN REVERT TO NORMAL OPERATION                     DAYCLS 464
      IF(<NIGHT-VENT-CTRL> .EQ. 4)  GOTO 9040                                   DAYCLS 465
C              IF VENTING NOT SCHEDULED SKIP                                    DAYCLS 466
      IF (SchVal(<NIGHT-VENT-SCH>, 1.) .EQ. 0.0)  GOTO 9054                     Time   212
C              CHECK INSIDE-OUTSIDE TEMP DIFFERENCE                             DAYCLS 468
      ZP1    = ISZ                                                              DAYCLS 469
      IF(<TNOW>-DBT .LT. <NIGHT-VENT-DT>)  GOTO 9054                            DAYCLS 470
C              IF ONLY SCHEDULED SKIP                                           DAYCLS 471
      IF(<NIGHT-VENT-CTRL> .EQ. 1)  GOTO 9050                                   DAYCLS 472
C              CHECK SPACE DEMAND                                               DAYCLS 473
 9040 ZP1    = ISZ                                                              DAYCLS 474
      ITYP   = 0                                                                DAYCLS 475
      TV1    = 0.0                                                              DAYCLS 476
      IF (<VENT-TEMP-SCH> .NE. 0)  TV1 = SchVal(<VENT-TEMP-SCH>, 1.)            Time   213
      DO 9042 NZ=1,NSZ                                                          DAYCLS 478
      ZP2    = <ZP2>                                                            DAYCLS 479
      IF(<ZONE-TYPE> .NE. 1)  GOTO 9042                                         DAYCLS 480
      THR    = <THROTTLING-RANGE>                                               DAYCLS 481
      IF(<NIGHT-VENT-CTRL> .EQ. 4)  GOTO 9041                                   DAYCLS 482
C              USE VENT-TEMP-SCH IF SPECIFIED                                   DAYCLS 483
      TV2    = TV1                                                              DAYCLS 484
C              OTHERWISE USE TOP OF ZONE HEAT THROTTLING RANGE                  DAYCLS 485
      IF((TV2.EQ.0.0).AND.(<HEAT-TEMP-SCH>.NE.0))                               DAYCLS 486
     1         TV2 = <THZ> + THR                                                DAYCLS 487
C              IF ZONE TEMP IS ABOVE VENT TEMP TURN ON VENTING                  DAYCLS 488
      IF((TV2 .NE. 0.0).AND.(<TNOW> .GT. TV2))  GOTO 9050                       DAYCLS 489
      GOTO 9042                                                                 DAYCLS 490
C              FOR NIGHT FANS THAT CAN REVERT CHECK IF ZONE IS BELOW            DAYCLS 491
C              THE HEATING THR RANGE OR ABOVE THE COOLING THR RANGE             DAYCLS 492
 9041 SH     = <THZ> - THR                                                      DAYCLS 493
      IF((<HEAT-TEMP-SCH> .NE. 0) .AND. (<TNOW> .LT. SH))  ITYP = 1             DAYCLS 494
      SH     = <TCZ> + THR                                                      DAYCLS 495
      IF((<COOL-TEMP-SCH> .NE. 0) .AND. (<TNOW> .GT. SH))  ITYP = 1             DAYCLS 496
      IF(ITYP .EQ. 0)  GOTO 9042                                                DAYCLS 497
      FON    = 1.0                                                              DAYCLS 498
      GOTO 9052                                                                 DAYCLS 499
 9042 ZP1    = ZP1 + NZD                                                        DAYCLS 500
C              IF NOT NIGHT FANS NO VENTING                                     DAYCLS 501
      IF(<NIGHT-VENT-CTRL> .EQ. 2)  GOTO 9054                                   DAYCLS 502
C              SET FLAG THAT WE ARE CHANGING ALL THE VALUES                     DAYCLS 503
 9050 ISUB   = 1                                                                DAYCLS 504
C              SAVE OLD FLOWS,KWS AND DELTA-TS                                  DAYCLS 505
      OLDSKW = <SUPPLY-KW>                                                      DAYCLS 506
      OLDSUP = <SUPPLY-CFM>                                                     DAYCLS 507
      OLDSDT = <SUPPLY-DELTA-T>                                                 DAYCLS 508
      OLDRKW = <RETURN-KW>                                                      DAYCLS 509
      OLDRET = <RETURN-CFM>                                                     DAYCLS 510
      OLDRDT = <RETURN-DELTA-T>                                                 DAYCLS 511
      OLDMIN = <MIN-CFM-RATIO>                                                  DAYCLS 512
      ILDCTL = <FAN-CONTROL>                                                    DAYCLS 513
      ILDCTLr = <RETURN-FAN-CONTR>                                              CCIG12   2
      ILDMAS = <MIN-AIR-SCH>                                                    DAYCLS 514
      OLDMOA = <MIN-OUTSIDE-AIR>                                                DAYCLS 515
      OLDCRT = <CFMRATIO>                                                       DAYCLS 516
      OLDSCH = <CFMH>                                                           DAYCLS 517
C              CALC NEW VALUES                                                  DAYCLS 518
C              IF THIS IS A ZONAL SYSTEM THE <SUPPLY-KW> IS ONLY THE            DAYCLS 519
C              KW/CFM SO WE ONLY NEED TO MULTIPLY BY THE KW-RATIO.              DAYCLS 520
      ITYP   = 0                                                                DAYCLS 521
C              IF THIS IS A CENTRAL AIR-HANDLER SYSTEM THE <SUPPLY-KW>          DAYCLS 522
C              IS THE TOTAL KW OF FAN SO WE NEED TO MULTIPLY BY BOTH            DAYCLS 523
C              THE KW AND CFM RATIOS.                                           DAYCLS 524
      IF(((ICODE.GE. 2) .AND. (ICODE.LE. 5)) .OR.                               DAYCLS 525
     1   ((ICODE.GE.11) .AND. (ICODE.LE.14)) .OR.                               DAYCLS 526
     2   ((ICODE.GE.16) .AND. (ICODE.LE.21)) .OR.                               DAYCLS 527
     3   ((ICODE.GE.23) .AND. (ICODE.LE.24)))       ITYP = 1                    DAYCLS 528
      <SUPPLY-CFM> = <SUPPLY-CFM>*AMAX1(.01,<NIGHT-SUPPLY-CFM>)                 -086     1
      <RETURN-CFM> = <RETURN-CFM>*<NIGHT-RETURN-CFM>                            DAYCLS 530
      <SUPPLY-KW>  = <SUPPLY-KW>*<NIGHT-SUPPLY-KW>                              DAYCLS 531
      IF(ITYP .EQ. 1)  <SUPPLY-KW> = <SUPPLY-KW>*<NIGHT-SUPPLY-CFM>             DAYCLS 532
      <SUPPLY-DELTA-T> = <SUPPLY-DELTA-T>*<NIGHT-SUPPLY-DT>                     DAYCLS 533
      <RETURN-KW>  = <RETURN-KW>*<NIGHT-RETURN-KW>                              DAYCLS 534
      IF(ITYP .EQ. 1)  <RETURN-KW> = <RETURN-KW>*<NIGHT-RETURN-CFM>             DAYCLS 535
      <RETURN-DELTA-T> = <RETURN-DELTA-T>*<NIGHT-RETURN-DT>                     DAYCLS 536
      <MIN-CFM-RATIO> = 1.0                                                     DAYCLS 537
      <FAN-CONTROL> = 0                                                         DAYCLS 538
      <RETURN-FAN-CONTR> = 0                                                    CCIG12   3
      <MIN-AIR-SCH> = 0                                                         DAYCLS 539
      <MIN-OUTSIDE-AIR> = 1.0                                                   DAYCLS 540
      <CFMRATIO> = 1.0                                                          DAYCLS 541
      IF (<DDS-TYPE> .NE. 2)  <CFMH> = <SUPPLY-CFM>                             DAYCLS 542
C              IF NIGHT-FAN ALLOW NORMAL OA OPERATION                           DAYCLS 543
      IF((<NIGHT-VENT-CTRL>.NE.3).AND.(<NIGHT-VENT-CTRL>.NE.4))                 DAYCLS 544
     1                       GOTO 9048                                          DAYCLS 545
      <MIN-OUTSIDE-AIR> = OLDMOA                                                DAYCLS 546
      SH = SchVal(ILDMAS, -999.)                                                Time   214
      IF (SH .NE. -999.0)  <MIN-OUTSIDE-AIR> = SH                               Time   215
C              SCALE BY THE FLOW RATIO OF NIGHT TO DAY FOR CONS RATIO           DAYCLS 551
      <MIN-OUTSIDE-AIR> = AMIN1(1.0,<MIN-OUTSIDE-AIR> /                         DAYCLS 552
     1            AMAX1(0.01,<NIGHT-SUPPLY-CFM>))                               -086     2
 9048 FON    = 1.0                                                              DAYCLS 554
      ZP1    = ISZ                                                              DAYCLS 555
      DO 9051 NZ=1,NSZ                                                          DAYCLS 556
      ZP2    = <ZP2>                                                            DAYCLS 557
      IF(<ZONE-TYPE> .NE. 1)  GOTO 9051                                         DAYCLS 558
      OLDCFM(NZ) = <CFMAX>                                                      DAYCLS 559
      <CFMAX> = <CFMAX>*AMAX1(.01,<NIGHT-SUPPLY-CFM>)*<SUPPLY/ZONE-CFM>         -086     3
      OLDRAT(NZ) = <MINCFMR>                                                    DAYCLS 561
      <MINCFMR>  = 1.0                                                          DAYCLS 562
      OLDCFH(NZ) = <CFMAXH>                                                     DAYCLS 563
      <CFMAXH>   = <CFMAX>                                                      DAYCLS 564
      OLDVEN(NZ) = <VENTMIN>                                                    DAYCLS 565
      <VENTMIN>  = <CFMAX>                                                      DAYCLS 566
C              IF NIGHT FANS ALLOW NORMAL OA OPERATION                          DAYCLS 567
      IF((<NIGHT-VENT-CTRL>.NE.3).AND.(<NIGHT-VENT-CTRL>.NE.4))                 DAYCLS 568
     1                                           GOTO 9049                      DAYCLS 569
      <VENTMIN>  = AMIN1(<CFMAX>,<VENTMIN>)                                     DAYCLS 570
      IF((ILDMAS .NE. 0) .AND. (SH .NE. -999.0))                                DAYCLS 571
     1<VENTMIN> = <CFMAX>*AMIN1(1.0,AMAX1(0.0,SH)                               DAYCLS 572
     2           /AMAX1(0.01,<NIGHT-SUPPLY-CFM>))                               -086     4
 9049 IF (<EXHAUST-SOURCE> .eq. 1) THEN  ! system-oa                            -046    55
        OLDEXH(NZ)    = <EXHAUST-CFM>                                           -046    56
        <EXHAUST-CFM> = AMIN1(<EXHAUST-CFM>,<CFMAX>)                            -046    57
        OLDEKW(NZ)    = <EXHAUST-KW>                                            -046    58
        <EXHAUST-KW>  = <EXHAUST-KW> * (<EXHAUST-CFM>/OLDEXH(NZ))               -046    59
      ENDIF                                                                     -046    60
 9051 ZP1    = ZP1 + NZD                                                        DAYCLS 578
      GOTO 9054                                                                 DAYCLS 579
 9052 IF(<MINCFMSCHS> .EQ. 0)  GOTO 9054                                        DAYCLS 580
      ISUB   = 2                                                                DAYCLS 581
      ZP1    = ISZ                                                              DAYCLS 582
      DO NZ=1,NSZ                                                               DAYCLS 583
        ZP2    = <ZP2>                                                          DAYCLS 584
        IF (<ZONE-TYPE> .EQ. 1)  THEN                                           DAYCLS 585
c              Save original min box flow and box max heat flow                 -044c    5
          OLDRAT(NZ) = <MINCFMR>                                                -044c    6
          OLDCFH(NZ) = <CFMAXH>                                                 -044c    7
c              min CFM schedule for cooling or outlet of DDS box                -044c    8
          SH = -999.                                                            -044c    9
          IF(<MIN-CFM-SCH> .NE. 0)                                              -044c   10
     $      SH = SchVal(<MIN-CFM-SCH>, -999.)                                   -044c   11
          IF (SH .NE. -999.0)   <MINCFMR> = AMAX1(0.01,AMIN1(1.0,SH))           -044c   12
c              Pick up minimum Demand Controlled Ventilation box minimum        -044c   13
          IF(<MIN-FLOW-CTRL> .NE. 0)  THEN                                      -044c   14
            MZ = ISPB + (<NZSPACE>-1)*MZLEN                                     -044c   15
            DCVOAcfmZ = SchVal(<PEOPLE-SCHEDULE>, 1.)                           -045b   55
     &                * <ZPPLNO> * <OA-CFM/PER>                                 -045b   56
            XX = <OUTSIDE-AIR-CFM>                                              -044c   17
            IF(XX .EQ. 0.)                                                      -044c   18
     $        XX = AMAX1(<OA-FLOW/AREA>*<AREA>,                                 -044c   19
     $                   <OA-CHANGES>*<VOLUME>/60.)                             -044c   20
            DCVOAcfmZ = AMAX1(DCVOAcfmZ,XX)                                     -044c   21
          ELSE                                                                  -044c   22
            DCVOAcfmZ = 0.                                                      -044c   23
          ENDIF                                                                 -044c   24
c              Use minimum Demand Controlled Ventilation box minimum            -044c   25
c              if it was specified and not shchedule over-ride was used         -044c   26
          IF((<MIN-FLOW-CTRL> .NE. 0) .AND. (SH .EQ. -999.))  THEN              -044c   27
            IF( ((DCVOAcfmZ .GT. <CFMAX>*<MINCFMR>) .AND.                       -044c   28
     $           (<MIN-FLOW-CTRL> .LE. 2))                                      -044c   29
     $         .OR.                                                             -044c   30
     $          ((DCVOAcfmZ .LT. <CFMAX>*<MINCFMR>) .AND.                       -044c   31
     $           (<MIN-FLOW-CTRL> .GE. 2)) )                                    -044c   32
     $      <MINCFMR> = AMAX1(AMIN1(0.01,<MINCFMR>),                            -044c   33
     $                        AMIN1(1.0,DCVOAcfmZ/<CFMAX>))                     -044c   34
          ENDIF                                                                 -044c   35
c              min CFM schedule dual-duct hot-deck,                             -044c   36
c              or heating mode of single-duct system                            -044c   37
          <MINCFMRH> = <HMIN-CFM-RATIOZ>                                        -044c   38
c              default to cooling min-cfm-ratio for non-dual-duct               -044c   39
          IF((<DDS-TYPE> .EQ. 0) .AND. (<MINCFMRH> .EQ. 0.))                    -044c   40
     $      <MINCFMRH> = <MINCFMR>                                              -044c   41
C              if there is a schedule use it                                    -044c   42
          SH = -999.                                                            -044c   43
          IF (<HMIN-CFM-SCH> .NE. 0)  SH = SchVal(<HMIN-CFM-SCH>,-999.)         -044c   44
          IF (SH .NE. -999.0) <MINCFMRH> = AMAX1(0.01,AMIN1(1.0,SH))            -044c   45
c              if this is not a dual fan DD system (thus heating mode           -044c   46
c              gets correct ventilation minimum)                                -044c   47
          IF ((<MIN-FLOW-CTRL> .NE. 0) .AND. (SH .EQ. -999.) .AND.              -044c   48
     $        (<DDS-TYPE> .GT. 0))  THEN                                        -044c   49
c              Use minimum Demand Controlled Ventilation box hot minimum        -044c   50
c              if it was specified and no shchedule over-ride was used          -044c   51
            IF( ((DCVOAcfmZ .GT. <CFMAX>*<MINCFMRH>) .AND.                      -044c   52
     $           (<MIN-FLOW-CTRL> .LE. 2))                                      -044c   53
     $         .OR.                                                             -044c   54
     $          ((DCVOAcfmZ .LT. <CFMAX>*<MINCFMRH>) .AND.                      -044c   55
     $           (<MIN-FLOW-CTRL> .GE. 2)) )                                    -044c   56
     $      <MINCFMRH> = AMAX1(AMIN1(0.01,<MINCFMRH>),                          -044c   57
     $                         AMIN1(1.0,DCVOAcfmZ/<CFMAXH>))                   -044c   58
          ENDIF                                                                 -044c   59
c              if single-duct thermostat not REVERSE-ACTION, set CFMAXH         -044c   60
          IF ( (<THERMOSTAT-TYPE> .NE. 3) .AND. (<DDS-TYPE> .EQ. 0) )           -044c   61
     $      <CFMAXH> = <CFMAX> * AMAX1(<MINCFMR>, <MINCFMRH>)                   -044c   62
c              min cold CFM schedule dual-duct cold deck                        -044c   63
          IF (<DDS-TYPE> .GT. 0)  THEN                                          -044c   64
            <MINCFMRC> = <CMIN-CFM-RATIOZ>                                      -044c   65
            SH = -999.                                                          -044c   66
            IF (<CMIN-CFM-SCH> .NE. 0) SH = SchVal(<CMIN-CFM-SCH>,-999.)        -044c   67
            IF (SH .NE. -999.0) <MINCFMRC> = AMAX1(0.01,AMIN1(1.0,SH))          -044c   68
c              Use minimum Demand Controlled Ventilation box cold minimum       -044c   69
c              if it was specified and no shchedule over-ride was used          -044c   70
            IF((<MIN-FLOW-CTRL> .NE. 0) .AND. (SH .EQ. -999.))  THEN            -044c   71
              IF( ((DCVOAcfmZ .GT. <CFMAX>*<MINCFMRC>) .AND.                    -044c   72
     $             (<MIN-FLOW-CTRL> .LE. 2))                                    -044c   73
     $           .OR.                                                           -044c   74
     $            ((DCVOAcfmZ .LT. <CFMAX>*<MINCFMRC>) .AND.                    -044c   75
     $             (<MIN-FLOW-CTRL> .GE. 2)) )                                  -044c   76
     $        <MINCFMRC> = AMAX1(AMIN1(0.01,<MINCFMRC>),                        -044c   77
     $                           AMIN1(1.0,DCVOAcfmZ/<CFMAX>))                  -044c   78
            ENDIF                                                               -044c   79
c              outlet min-cfm must be at least the minimum from                 -044c   80
c              both decks.                                                      -044c   81
            RMINCFMT = (<CFMAX>*<MINCFMRC> + <CFMAXH>*<MINCFMRH>)               -044c   82
     $                   / <CFMAXT>                                             -044c   83
            <MINCFMR> = AMAX1(<MINCFMR>, RMINCFMT)                              -044c   84
          ENDIF                                                                 -044c   85
        ENDIF                                                                   DAYCLS 624
        ZP1  = ZP1 + NZD                                                        DAYCLS 625
      ENDDO                                                                     DAYCLS 626
 9054 CONTINUE                                                                  DAYCLS 627
C              ONLY PICK UP BASEBOARD-SCHED IF IT WAS INPUT                     DAYCLS 628
C              AND HEATING IS ON THIS HOUR                                      DAYCLS 629
      IF((<BASEBOARD-SCH>.GT.0) .and. (HON.NE.0.))                              -131   104
     $  BON = DRSVAL(<BASEBOARD-SCH>)                                           -131   105
C              ZERO THE ELECTRICAL FOR THIS SYSTEM                              DAYCLS 694
      <SKW>  = 0.0                                                              DAYCLS 695
      <QC>   = 0.0                                                              DAYCLS 696
      <QH>   = 0.0                                                              DAYCLS 697
      <IHROVERS> = 0                                                            DAYCLS 709
      <IHRONS> = INT(FON+0.1)                                                   DAYCLS 710
      <IHRONSh> = INT(FONh+0.1)                                                 HVAC    40
      <HON>     = HON                                                           HVAC    41
      <CON>     = CON                                                           HVAC    42
C              ZERO THE PIU DATA                                                DAYCLS 711
      DO 54 I=1,8                                                               -044e2   9
      ZDPIU(I) = 0.                                                             DAYCLS 713
   54 CONTINUE                                                                  DAYCLS 714
C******************* run function : system-before-function  ************        DAYCLS 715
      IF( <MSYSTEM-FUNC0> .NE. 0 )    CALL  FINTS( <MSYSTEM-FUNC0>, 0. )        DAYCLS 716
C***********************************************************************        DAYCLS 717
c     IF (<ISYBUFP>.NE.0 .AND. IRSCH.NE.0 .AND. IREPRT(2,35).NE.0)              IREPRT   6
c    1    WRITE(IOUTPT,9001) IMO,IDAY,IHR,IDOW,ISCHR,ISCDAY                     DAYCLS 719
c9001 FORMAT(/1X,7HIMO   =,I2,2X,7HIDAY  =,I2,2X,7HIHR   =,I2,2X,               DAYCLS 720
c    1          7HIDOW  =,I2,2X,7HISCHR =,I2,2X,7HISCDAY=,I2)                   DAYCLS 721
C              BASED ON SYSTEM-TYPE CALL ROUTINE TO SIMULATE IT                 DAYCLS 722
      GOTO (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23         DAYCLS 723
     $       ,24,25,26,27,28), ICODE                                            DAYCLS 724
C   1= SUMMATION OF LOADS          SUM                                          DAYCLS 725
    1                        CALL  SUMSYS                                       HVAC22  14
                                                         GOTO  29               DAYCLS 727
C   2= SINGLE ZONE (REHEAT)        SZRH                                         DAYCLS 728
    2                        CALL  VARVOL                                       DAYCLS 729
                                                         GOTO  29               DAYCLS 730
C   3= MULTIZONE                   MZS                                          DAYCLS 731
    3                        CALL  DOUBLE                                       DAYCLS 732
                                                         GOTO  29               DAYCLS 733
C   4= DOUBLE DUCT (VAV)           DDS                                          DAYCLS 734
    4                                   GOTO  3                                 DAYCLS 735
C   5= CEILING INDUCTION           SZCI                                         DAYCLS 736
    5                        CALL  SZCI                                         DAYCLS 737
                                                         GOTO  29               DAYCLS 738
C   6= UNIT VENTILATOR             UVT                                          DAYCLS 739
    6                        CALL  UNITV                                        DAYCLS 740
                                                         GOTO  29               DAYCLS 741
C   7= UNIT HEATER                 UHT                                          DAYCLS 742
    7                        CALL  UNITH                                        DAYCLS 743
                                                         GOTO  29               DAYCLS 744
C   8= FLOOR PANEL HEATING         FPH                                          DAYCLS 745
    8                        CALL  PANEL                                        DAYCLS 746
                                                         GOTO  29               DAYCLS 747
C   9= FAN COIL                    FC                                           RemPA  273
    9                        CALL  FCOIL                                        RemPA  274
                                                         GOTO  29               RemPA  275
C* 10= *UNUSED                                                                  RemPA  276
   10                        GOTO 29                                            RemPA  277
C*                                                       GOTO  29               RemPA  278
C  11= INDUCTION                   IU                                           RemPA  279
   11                        CALL  INDUC                                        RemPA  280
                                                         GOTO  29               RemPA  281
C* 12= *UNUSED                                                                  RemPA  282
   12                        GOTO 29                                            RemPA  283
C*                                                       GOTO  29               RemPA  284
C  13= VARIABLE VOLUME             VAVS                                         DAYCLS 758
   13                                   GOTO  2                                 DAYCLS 759
C  14= REHEAT SYSTEM               RHFS                                         DAYCLS 760
   14                                   GOTO  2                                 DAYCLS 761
C  15= HYDRONIC HEAT PUMP          HP                                           DAYCLS 762
   15                                CALL  HTPUMP                               DAYCLS 763
                                                         GOTO  29               DAYCLS 764
C  16= HEATING AND VENTILATING SYSTEM  HVSYS                                    DAYCLS 765
   16                            CALL  HVUNIT                                   DAYCLS 766
                                                         GOTO  29               DAYCLS 767
C  17= RESIDENTIAL PACKAGE         RESYS                                        DAYCLS 768
   17                        CALL  RESYS                                        DAYCLS 769
      IF( IwinReturn .ne. 0 ) RETURN                                            WinRet  34
                                                         GOTO  29               DAYCLS 770
C  18= CEILING BYPASS VAV          CBVAV                                        DAYCLS 771
   18                                   GOTO  2                                 DAYCLS 772
C  19= PACKAGED SINGLE ZONE        PSZ                                          DAYCLS 773
   19                                   GOTO  2                                 DAYCLS 774
C  20= PACKAGED MULTI ZONE         PMZS                                         DAYCLS 775
   20                                   GOTO  3                                 DAYCLS 776
C  21= PACKAGED VAV                PVAVS                                        DAYCLS 777
   21                                   GOTO  2                                 DAYCLS 778
C  22= PACKAGED TERM AIR COND      PTAC                                         DAYCLS 779
   22                        CALL  PTAC                                         DAYCLS 780
                                                         GOTO  29               DAYCLS 781
C  23= POWERED INDUCTION UNI       PIU                                          DAYCLS 782
   23                        CALL  PIU                                          DAYCLS 783
                                                         GOTO  29               DAYCLS 784
C  24= function sys 1              FNSYS1                                       DAYCLS 785
   24                        CALL  FNSYS1                                       DAYCLS 786
                                                         GOTO  29               DAYCLS 787
C  25= PCKGED TOT GAS SOL DESICC   PTGSD                                        DAYCLS 788
   25                        CALL  DESICC                                       DAYCLS 789
                                                         GOTO  29               DAYCLS 790
C  26= EVAPORATIVE COOLING SYSTEM  EVAP-COOL                                    DAYCLS 791
   26                                   GOTO 2                                  DAYCLS 792
c  27= RESIDENT VAR TEMP VAR VOL   RESVVT                                       DAYCLS 793
   27                         CALL RESVVT                                       DAYCLS 794
                                               GOTO 29                          DAYCLS 795
c  28= PKGED VAR VOLUME VAR TEMP   PVVT                                         DAYCLS 796
   28                         CALL VARVOL                                       DAYCLS 797
                                               GOTO 29                          DAYCLS 798
29    CONTINUE                                                                  DAYCLS 799
c                                                                               IcRink   1
c              Check for ice skating rinks                                      IcRink   2
      IF (<sy;IceRink> .GT. 0)  THEN                                            IcRink   3
        DO  NZ=1,NSZ                                                            IcRink   4
          ZP1 = ISZ + (NZ-1)*NZD                                                IcRink   5
          ZP2 = <ZP2>                                                           IcRink   6
          IF (<zn:ICE-RINK> .GT. 0)  CALL IceRink(31, <zn:ICE-RINK>)            IcRink   7
        ENDDO                                                                   IcRink   8
      ENDIF                                                                     IcRink   9
c              Check for exhaust-air heat recovery                              ERV      4
      IF (<sy:RECOVER-EXH> .EQ. 1)                                              Bug40    2
     &  CALL ERVentilator(31, <sy;ERVentilator>, xx,xx,xx,xx,xx,xx)             ERV      6
c                                                                               DAYCLS 800
      IF(ISUB .EQ. 0)  GOTO 9058                                                DAYCLS 811
      IF(ISUB .EQ. 2)  GOTO 9055                                                DAYCLS 812
      <SUPPLY-KW>  = OLDSKW                                                     DAYCLS 813
      <SUPPLY-CFM> = OLDSUP                                                     DAYCLS 814
      <SUPPLY-DELTA-T> = OLDSDT                                                 DAYCLS 815
      <RETURN-KW>  = OLDRKW                                                     DAYCLS 816
      <RETURN-CFM> = OLDRET                                                     DAYCLS 817
      <RETURN-DELTA-T> = OLDRDT                                                 DAYCLS 818
      <MIN-CFM-RATIO>  = OLDMIN                                                 DAYCLS 819
      <FAN-CONTROL>    = ILDCTL                                                 DAYCLS 820
      <RETURN-FAN-CONTR> = ILDCTLr                                              CCIG12   4
      <MIN-AIR-SCH>    = ILDMAS                                                 DAYCLS 821
      <MIN-OUTSIDE-AIR>= OLDMOA                                                 DAYCLS 822
      <CFMRATIO> = OLDCRT                                                       DAYCLS 823
      <CFMH> = OLDSCH                                                           DAYCLS 824
 9055 ZP1    = ISZ                                                              DAYCLS 825
      DO 9057 NZ=1,NSZ                                                          DAYCLS 826
      ZP2    = <ZP2>                                                            DAYCLS 827
      IF(<ZONE-TYPE> .NE. 1)  GOTO 9057                                         DAYCLS 828
      IF(ISUB .EQ. 1)  GOTO 9056                                                DAYCLS 829
      <MINCFMR> = OLDRAT(NZ)                                                    DAYCLS 831
      <CFMAXH>  = OLDCFH(NZ)                                                    DAYCLS 832
      GOTO 9057                                                                 DAYCLS 833
 9056 <CFMAX>  = OLDCFM(NZ)                                                     DAYCLS 834
      <CFMAXH> = OLDCFH(NZ)                                                     DAYCLS 835
      <MINCFMR> = OLDRAT(NZ)                                                    DAYCLS 836
      <VENTMIN> = OLDVEN(NZ)                                                    DAYCLS 837
      IF (<EXHAUST-SOURCE> .eq. 1) THEN  ! system-oa                            -046    61
        <EXHAUST-KW>  = OLDEKW(NZ)                                              -046    62
        <EXHAUST-CFM> = OLDEXH(NZ)                                              -046    63
      ENDIF                                                                     -046    64
 9057 ZP1    = ZP1 + NZD                                                        DAYCLS 840
 9058 CONTINUE                                                                  DAYCLS 841
      IF((FON .EQ. 0.) .OR. (<LEARN-FLAG> .EQ. 0)) GO TO 900                    DAYCLS 842
C             UPDATE LEARNED VALUES FOR OPTIMUM START                           DAYCLS 843
      KX = ISCHR - <IHR-START>                                                  DAYCLS 844
      IF(KX .LE. 5) GO TO 840                                                   DAYCLS 845
      <LEARN-FLAG> = 0                                                          DAYCLS 846
      GO TO 900                                                                 DAYCLS 847
  840 CONTINUE                                                                  DAYCLS 848
      IF(KX .LE. 0) GO TO 900                                                   DAYCLS 849
      ZP1 = ISZ                                                                 DAYCLS 850
C             LOOP THROUGH THE ZONES                                            DAYCLS 851
      DO 890 NZ=1,NSZ                                                           DAYCLS 852
      ZP2 = <ZP2>                                                               DAYCLS 853
C             SKIP IF NOT A CONDITIONED ZONE                                    DAYCLS 854
      IF(<ZONE-TYPE> .NE. 1) GO TO 880                                          DAYCLS 855
      DT = <TNOW> - <TPAST>                                                     DAYCLS 856
      IF(<MODE-START> .GT. 0) GO TO 860                                         DAYCLS 857
      IF(<MODE-START> .EQ. 0) GO TO 880                                         DAYCLS 858
C             HEATING MODE                                                      DAYCLS 859
      IF(<TNOW> .LT. <START-HT>) GO TO 850                                      DAYCLS 860
      <DTHEAT> = AMAX1(<DTHEAT>, DT)                                            DAYCLS 861
      <MODE-START> = 0                                                          DAYCLS 862
      <LEARN-FLAG> = <LEARN-FLAG> -1                                            DAYCLS 863
      GO TO 880                                                                 DAYCLS 864
  850 CONTINUE                                                                  DAYCLS 865
      <DTHEAT> = 0.5 * (<DTHEAT> + DT)                                          DAYCLS 866
      GO TO 880                                                                 DAYCLS 867
  860 CONTINUE                                                                  DAYCLS 868
C             COOLING MODE                                                      DAYCLS 869
      IF(<TNOW> .GT. <START-CT>) GO TO 870                                      DAYCLS 870
      <DTCOOL> = AMIN1(<DTCOOL>, DT)                                            DAYCLS 871
      <MODE-START> = 0                                                          DAYCLS 872
      <LEARN-FLAG> = <LEARN-FLAG> -1                                            DAYCLS 873
      GO TO 880                                                                 DAYCLS 874
  870 CONTINUE                                                                  DAYCLS 875
      <DTCOOL> = 0.5 * (<DTCOOL> + DT)                                          DAYCLS 876
  880 CONTINUE                                                                  DAYCLS 877
      ZP1 = ZP1 + NZD                                                           DAYCLS 878
  890 CONTINUE                                                                  DAYCLS 879
  900 CONTINUE                                                                  DAYCLS 880
C******************* run function : system-after-function  *************        DAYCLS 881
      IF( <MSYSTEM-FUNC1> .NE. 0 )    CALL  FINTS( <MSYSTEM-FUNC1>, 1. )        DAYCLS 882
C***********************************************************************        DAYCLS 883
C              SAVE TR FOR OA-FROM-SYS                                          DAYCLS 884
      IF (TR.GT.0.0) <PASTTR> = TR                                              DAYCLS 885
C              ONLY SAVE REPORT INFO IF THIS IS NOT AN INITIALIZATION           DAYCLS 886
      IF (InitialFlg .GT. 0)  GO TO 225                                         Time   222
C              SAVE THIS HOURS HEATING AND COOLING LOADS                        DAYCLS 888
      IF(QC .LT. 1.0)  QC = 0.0                                                 DAYCLS 889
C              Only pass cooling load to PLANT for water coil systems           DAYCLS 890
C              But always pass cooling load to reports                          DAYCLS 891
      IF( (ICODE.LE.16).OR.(ICODE.EQ.18).OR.(ICODE.EQ.23).OR.                   DAYCLS 892
     $    (ICODE.EQ.24).OR.(ICODE.GE.29) ) <QC> = QC                            DAYCLS 893
      QCREP    = QC                                                             DAYCLS 894
      IF(ICODE .EQ. 22)  QCREP = QCREP + QCZ                                    DAYCLS 895
      QHUM   = QHUM*HON                                                         DAYCLS 896
      QHREP = <QH> + QH + QHB + QHUM - QRREC                                    DAYCLS 897
      IF(ICODE .NE. 17)  QHREP = QHREP + QHP                                    DAYCLS 898
      IF(<ZONE-HEAT-SOURCE> .GT. 0)  QHREP = QHREP + QHZ                        DAYCLS 899
      IF(QHREP .GT. -1.0)  QHREP = 0.0                                          DAYCLS 900
      IF(<HEAT-SOURCE> .LE. 0)  <QH> = <QH> + QH                                DAYCLS 901
c  ?temp                                                                        HVAC5    6
c      IF(ICODE .EQ. 15)  THEN                                                  HVAC5    7
c        <QH> = QHLUPS                                                          HVAC5    8
c        <QC> = QCLUPS                                                          HVAC5    9
c      ENDIF                                                                    HVAC5   10
C              ELECTRIC HEATING - MAIN COIL                                     DAYCLS 911
      IF (<HEAT-SOURCE>.EQ.1)  THEN                                             DAYCLS 912
        X      = QH * KWBTU                                                     DAYCLS 913
        <SKW>  = <SKW>  - X                                                     DAYCLS 914
        SKWQH  = SKWQH  - X                                                     DAYCLS 915
c              assign electric load to meter                                    HVAC22  15
        CALL PeakSysDist(1,1, -X,<MAX_HEAT_KW>, HeatEndUse,<HEAT-E-MS>)         HVAC22  16
      ENDIF                                                                     DAYCLS 917
      IF((ICODE.GE.6).AND.(ICODE.LE.10))  GOTO 169                              DAYCLS 918
      IF(ICODE .EQ. 1)  GOTO 169                                                DAYCLS 919
      IF(ICODE.EQ.22)  GOTO 169                                                 DAYCLS 920
      IF((<HEAT-SOURCE>.EQ.2).OR.(<HEAT-SOURCE>.EQ.3))  THEN                    HVAC6   15
        CALL FURNAC(QH,<HEATING-CAPACITY>,<HEAT-SOURCE>,1.0)                    HVAC6   16
        JEM       = <AUX-E-MS>                                                  HVAC6   17
        <AUX-EM>  = <AUX-EM>  + FurnAuxkW                                       HVAC6   18
        JFM       = <HEAT-F-MS>                                                 HVAC6   19
        <HEAT-FM> = <HEAT-FM> - FFUEL                                           HVAC6   20
        <AUX-FM>  = <AUX-FM>  + FurnAuxFuel                                     HVAC6   21
      ENDIF                                                                     HVAC6   22
      IF((IHPREP.NE.0).AND.(ICODE.NE.22).AND.(<HEAT-SOURCE>.EQ.2))THEN          DAYCLS 923
        QHLOAD = QH                                                             DAYCLS 924
        QHRUN  = PLRF                                                           DAYCLS 925
        QHGAS  = -FFUEL                                                         DAYCLS 926
      ENDIF                                                                     DAYCLS 927
  169 CONTINUE                                                                  DAYCLS 940
      IF((IHPREP.NE.0) .AND. (ICODE.NE.22))  THEN                               DAYCLS 941
        IF(QCRUN .GT. 0.0)  QCFAN = (SFKW+RFKW)*BTUKW                           DAYCLS 942
        IF(QHRUN .GT. 0.0)  QHFAN = (SFKW+RFKW)*BTUKW                           DAYCLS 943
        IF(QCRUN+QHRUN .EQ. 0.0)  THEN                                          DAYCLS 944
          QCFAN = (SFKW+RFKW)*0.5*BTUKW                                         DAYCLS 945
          QHFAN = (SFKW+RFKW)*0.5*BTUKW                                         DAYCLS 946
        ENDIF                                                                   DAYCLS 947
      ENDIF                                                                     DAYCLS 948
      IF(<BASEBOARD-SOURCE> .LE. 0)  <QH> = <QH> + QHB                          DAYCLS 949
      IF(<SUPP-SOURCE> .LE. 0) <QH> = <QH> + QHSUP                              DAYCLS 950
C              SKIP SPECIAL QHP MEANING FOR RESYS (FAN ELEC FOR HEATING)        DAYCLS 951
      IF(ICODE .EQ. 17)  GOTO 170                                               DAYCLS 952
      IF(<PREHEAT-SOURCE> .LE. 0)  <QH> = <QH> + QHP                            DAYCLS 953
C              ELECTRIC HEATING - PREHEAT COIL                                  DAYCLS 954
      IF (<PREHEAT-SOURCE>.EQ.1)  THEN                                          DAYCLS 955
        X      = QHP * KWBTU                                                    DAYCLS 956
        <SKW>  = <SKW>  - X                                                     DAYCLS 957
        SKWQH  = SKWQH  - X                                                     DAYCLS 958
        JEM       = <HEAT-E-MS>                                                 HVAC6   23
        <HEAT-EM> = <HEAT-EM> - X                                               HVAC6   24
      ENDIF                                                                     DAYCLS 960
      IF((<PREHEAT-SOURCE>.EQ.2).OR.(<PREHEAT-SOURCE>.EQ.3))  THEN              HVAC6   25
        CALL FURNAC(QHP,QHP,<PREHEAT-SOURCE>,1.0)                               HVAC6   26
        JEM       = <AUX-E-MS>                                                  HVAC6   27
        <AUX-EM>  = <AUX-EM>  + FurnAuxkW                                       HVAC6   28
        JFM       = <HEAT-F-MS>                                                 HVAC6   29
        <HEAT-FM> = <HEAT-FM> - FFUEL                                           HVAC6   30
        <AUX-FM>  = <AUX-FM>  + FurnAuxFuel                                     HVAC6   31
      ENDIF                                                                     HVAC6   32
      IF((IHPREP.NE.0).AND.(<PREHEAT-SOURCE>.NE.9))  THEN                       DAYCLS 963
        QHGSLD = QHGSLD + QHP                                                   DAYCLS 964
        IF((<PREHEAT-SOURCE>.EQ.2).OR.(<PREHEAT-SOURCE>.EQ.3)) THEN             DAYCLS 965
          QHGSUP = QHGSUP - FFUEL                                               DAYCLS 966
        ELSE                                                                    DAYCLS 967
          QHGSUP = QHGSUP - QHP                                                 DAYCLS 968
        ENDIF                                                                   DAYCLS 969
      ENDIF                                                                     DAYCLS 970
  170 CONTINUE                                                                  DAYCLS 971
C              CONVERT HUMIDIFICATION TO PROPER SOURCE                          DAYCLS 972
      IF (<HUMIDIFIER-TYPE> .LT. 0)  THEN                                       -044e5   3
        <QH>         = <QH> + QHUM                                              -035     2
        <HUM_COIL_Q> = QHUM                                                     -035     3
      ENDIF                                                                     -035     4
      IF(QHUM .GE. 0.0)  GOTO 172                                               -035     5
C              ELECTRIC HUMIDIFICATION                                          DAYCLS 975
      IF (<HUMIDIFIER-TYPE>.EQ.1)  THEN                                         DAYCLS 976
        X     = QHUM * KWBTU                                                    DAYCLS 977
        <SKW> = <SKW>  - X                                                      DAYCLS 978
        SKWQH = SKWQH  - X                                                      DAYCLS 979
        JEM       = <AUX-E-MS>                                                  HVAC6   33
        <AUX-EM>  = <AUX-EM>  - X                                               HVAC6   34
      ENDIF                                                                     DAYCLS 981
      IF((<HUMIDIFIER-TYPE>.EQ.2).OR.(<HUMIDIFIER-TYPE>.EQ.3))  THEN            HVAC6   35
        CALL FURNAC(QHUM,QHUM,<HUMIDIFIER-TYPE>,1.0)                            HVAC6   36
        JEM       = <AUX-E-MS>                                                  HVAC6   37
        <AUX-EM>  = <AUX-EM>  + FurnAuxkW                                       HVAC6   38
        JFM       = <HEAT-F-MS>                                                 HVAC6   39
        <AUX-FM>  = <AUX-FM>  - FFUEL + FurnAuxFuel                             HVAC6   40
      ENDIF                                                                     HVAC6   41
      IF((IHPREP.NE.0).AND.(<HUMIDIFIER-TYPE>.NE.9))  THEN                      DAYCLS 987
        QHGSLD = QHGSLD + QHUM                                                  DAYCLS 988
        IF((<HUMIDIFIER-TYPE>.EQ.2).OR.(<HUMIDIFIER-TYPE>.EQ.3)) THEN           DAYCLS 989
          QHGSUP = QHGSUP - FFUEL                                               DAYCLS 990
        ELSE                                                                    DAYCLS 991
          QHGSUP = QHGSUP - QHUM                                                DAYCLS 992
        ENDIF                                                                   DAYCLS 993
      ENDIF                                                                     DAYCLS 994
  172 CONTINUE                                                                  DAYCLS 995
C               DIVIDE UNMET (SENSIBLE) LOAD BY SHR                             DAYCLS 996
      SHR = (QCREP-QCLAT)/(QCREP+1.0)                                           DAYCLS 997
      SHR = AMAX1(0.1,AMIN1(1.0,SHR))                                           DAYCLS 998
      QCUNMT = QCUNMT/SHR                                                       DAYCLS 999
C               SUM THE INTEGRATED DAILY COOLING LOAD FOR PLANT                 DAYCLS1000
      IF (<QC>.GT.0.)                                                           DAYCLS1001
     1    <PQCDAYSUM> = <PQCDAYSUM> + <QC> + QCUNMT                             DAYCLS1002
C              INCREMENT THE MONTHLY TOTALS FOR HEAT,COOL,ELEC                  DAYCLS1003
      IF(<QH> .GT. -1.0)  <QH> = 0.0                                            DAYCLS1004
C              <sy.FanOnPast> is the number of hours the fan has                -044c2  10
C              operated prior to this hour.  A negative number                  -044c2  11
C              means the fan was off the previous hour.                         -044c2  12
      IF ((FON .gt. 0.) .or. (FONh .gt. 0.))  THEN  ! fan is on                 -044c2  13
        <sy.FanOnPast> = Max(0., <sy.FanOnPast>) + 1.                           -044c2  14
      ELSE  ! fan is off                                                        -044c2  15
        <sy.FanOnPast> = Min(0., <sy.FanOnPast>) - 1.                           -044c2  16
      ENDIF                                                                     -044c2  17
C              FILL THE REPORT INFORMATION ARRAY                                DAYCLS1013
C              ISYSP IS THE POSITION OF EACH ITEM IN /SYSTD/                    DAYCLS1014
      SYSD(1) = QCREP                                                           DAYCLS1015
      SYSD(2) = QHREP                                                           DAYCLS1016
      SYSD(3) = <SKW>                                                           DAYCLS1017
      SYSD(14) = SCGAS                                                          DAYCLS1018
      IE     = 3                                                                DAYCLS1019
      IF(IRPSYS .EQ. 0)  GOTO 184                                               DAYCLS1020
      IE = 14                                                                   DAYCLS1021
      DO 180 II=4,12                                                            -131   106
  180 SYSD(II) = SYSTD(ISYSP(II))                                               DAYCLS1023
  184 CONTINUE                                                                  DAYCLS1024
C              UPDATE MONTLY AND YEARLY SUMS                                    DAYCLS1025
      DO 181 II=1,IE                                                            DAYCLS1026
      <SYSDMONSUM> = <SYSDMONSUM> + SYSD(II)                                    DAYCLS1027
  181 <SYSDYRSUM> = <SYSDYRSUM> + SYSD(II)                                      DAYCLS1028
C              UPDATE LATENT HEATING VARIABLES                                  DAYCLS1029
      <QHLATMO>=<QHLATMO>+QHUM                                                  DAYCLS1030
      <QHLATYR>=<QHLATYR>+QHUM                                                  DAYCLS1031
C              UPDATE THE GAS HP MONTHLY SUMMARY                                DAYCLS1032
      DO 185 II=1,20                                                            DAYCLS1033
  185 <SHPSMO> = <SHPSMO> + SHP(II)                                             DAYCLS1034
C              UDPATE MONTHLY AND YEARLY PEAKS                                  DAYCLS1035
      DO 183 II=1,IE                                                            DAYCLS1036
      IF(SYSD(II) .GE. 0.0)  GOTO 182                                           DAYCLS1037
      <SYSDMONPK> = AMIN1(<SYSDMONPK>,SYSD(II))                                 DAYCLS1038
      <SYSDYRPK> = AMIN1(<SYSDYRPK>,SYSD(II))                                   DAYCLS1039
  182 IF(SYSD(II) .LE. 0.0)  GOTO 183                                           DAYCLS1040
      <SYSDMONPK> = AMAX1(<SYSDMONPK>,SYSD(II))                                 DAYCLS1041
      <SYSDYRPK> = AMAX1(<SYSDYRPK>,SYSD(II))                                   DAYCLS1042
  183 CONTINUE                                                                  DAYCLS1043
C              Check for occurance of month and year peaks to save things       DAYCLS1044
      IF(<QHMOM> .EQ. QHREP)  THEN                                              DAYCLS1045
        <IQHDAYHR> = IDAYHR                                                     DAYCLS1046
        <IQHDBWBT> = IDBWBT                                                     DAYCLS1047
        IF (<QHYRM>.EQ.QHREP)  THEN                                             DAYCLS1048
          <IQHDAYHRYR> = IMO*32 + IDAY                                          DAYCLS1049
        ENDIF                                                                   DAYCLS1050
      ENDIF                                                                     DAYCLS1051
      IF(<QCMOM> .EQ. QCREP)  THEN                                              DAYCLS1052
        <IQCDAYHR> = IDAYHR                                                     DAYCLS1053
        <IQCDBWBT> = IDBWBT                                                     DAYCLS1054
        <QH-AT-QC> = QHREP                                                      DAYCLS1055
        <SKW-AT-QC> = <SKW>                                                     DAYCLS1056
        <QCLAT-AT-QCMOM> = QCLAT                                                DAYCLS1057
        IF (<QCYRM>.EQ.QCREP)  THEN                                             DAYCLS1058
          <QCLAT-AT-QCYRM>=QCLAT                                                DAYCLS1059
          <IQCDAYHRYR> = IMO*32 + IDAY                                          DAYCLS1060
        ENDIF                                                                   DAYCLS1061
      ENDIF                                                                     DAYCLS1062
      IF(<SKWQHMOM> .EQ. SKWQH) THEN                                            DAYCLS1063
        <SKWQHMOMT> = IDAYHR                                                    DAYCLS1064
        IF(<SKWQHYRM> .EQ. SKWQH)  THEN                                         DAYCLS1065
          <SKWQHYRMT> = IMO*32 + IDAY                                           DAYCLS1066
        ENDIF                                                                   DAYCLS1067
      ENDIF                                                                     DAYCLS1068
      IF(<SKWQCMOM> .EQ. SKWQC) THEN                                            DAYCLS1069
        <SKWQCMOMT> = IDAYHR                                                    DAYCLS1070
        IF(<SKWQCYRM> .EQ. SKWQC)  THEN                                         DAYCLS1071
          <SKWQCYRMT> = IMO*32 + IDAY                                           DAYCLS1072
        ENDIF                                                                   DAYCLS1073
      ENDIF                                                                     DAYCLS1074
      IF(<FANKWMOM> .EQ. FANKW) THEN                                            DAYCLS1075
        <FANKWMOMT> = IDAYHR                                                    DAYCLS1076
        IF(<FANKWYRM> .EQ. FANKW)  THEN                                         DAYCLS1077
          <FANKWYRMT> = IMO*32 + IDAY                                           DAYCLS1078
        ENDIF                                                                   DAYCLS1079
      ENDIF                                                                     DAYCLS1080
C SPECIAL REPORT REFG, REFRIGERATED GROCERY EQUIP                               DAYCLS1081
      IF (<REFG-ZONE-ZP1> .EQ. 0)  GOTO 177                                     DAYCLS1082
      <REFGSENSMO> = <REFGSENSMO> + QRSENS                                      DAYCLS1083
      <REFGLATMO>  = <REFGLATMO>  + QRLAT                                       DAYCLS1084
      <REFGRECMO>  = <REFGRECMO>  + QRREC                                       DAYCLS1085
      <REFGREJMO>  = <REFGREJMO>  + QRREJ                                       DAYCLS1086
      <REFGCOMPKWMO> = <REFGCOMPKWMO> + RCOMKW                                  DAYCLS1087
      <REFGDEFKWMO>  = <REFGDEFKWMO>  + RDEFKW                                  DAYCLS1088
      <REFGAUXKWMO>  = <REFGAUXKWMO>  + RAUXKW                                  DAYCLS1089
      <REFGTOTKWMO>  = <REFGTOTKWMO>  + RDEFKW + RAUXKW + RCOMKW                DAYCLS1090
 177  CONTINUE                                                                  DAYCLS1091
C              ONLY UPDATE OTHER REPORT STUFF IF NEEDED                         DAYCLS1092
      IF(IRPSYS .EQ. 0)  GO TO 200                                              DAYCLS1093
      IF (FON.EQ.0.0) GOTO 504                                                  DAYCLS1094
C              FAN IS ON                                                        DAYCLS1095
      <HOURFONMO>=<HOURFONMO>+1                                                 DAYCLS1096
      <HOURFONYR>=<HOURFONYR>+1                                                 DAYCLS1097
      GOTO 505                                                                  DAYCLS1098
  504 CONTINUE                                                                  DAYCLS1099
C              FAN OFF                                                          DAYCLS1100
      <HOURFOFMO>=<HOURFOFMO>+1                                                 DAYCLS1101
      <HOURFOFYR>=<HOURFOFYR>+1                                                 DAYCLS1102
  505 CONTINUE                                                                  DAYCLS1103
C              INITIALIZE TEMPORARY VARIABLES                                   DAYCLS1104
      TAV    = 0.0                                                              DAYCLS1105
      TAVFON = 0.0                                                              DAYCLS1106
      TAVFOF = 0.0                                                              DAYCLS1107
      VM     = 0.0                                                              DAYCLS1108
      ZP1    = ISZ                                                              DAYCLS1109
      DO 510 NZ=1,NSZ                                                           DAYCLS1110
      ZP2    = <ZP2>                                                            DAYCLS1111
      IF(<ZONE-TYPE> .NE. 1)  GOTO 508                                          -41i     1
      VM     = VM+<VOLUME>*<MULTIPLIER>                                         DAYCLS1112
      XT1    = <VOLUME>*<MULTIPLIER>*<TNOW>                                     DAYCLS1113
      TAV    = TAV+XT1                                                          DAYCLS1114
      IF (FON.EQ.0.0) GOTO 506                                                  DAYCLS1115
      TAVFON = TAVFON+XT1                                                       DAYCLS1116
      GOTO 508                                                                  DAYCLS1117
  506 CONTINUE                                                                  DAYCLS1118
      TAVFOF = TAVFOF+XT1                                                       DAYCLS1119
  508 CONTINUE                                                                  DAYCLS1120
      ZP1    = ZP1+NZD                                                          DAYCLS1121
  510 CONTINUE                                                                  DAYCLS1122
      IF (VM .eq. 0.)  VM = 1.                                                  -045i    1
      <TAVMO>=<TAVMO>+(TAV/VM)                                                  DAYCLS1123
      <TAVYR>=<TAVYR>+(TAV/VM)                                                  DAYCLS1124
      <TAVFONMO>=<TAVFONMO>+(TAVFON/VM)                                         DAYCLS1125
      <TAVFONYR>=<TAVFONYR>+(TAVFON/VM)                                         DAYCLS1126
      <TAVFOFMO>=<TAVFOFMO>+(TAVFOF/VM)                                         DAYCLS1127
      <TAVFOFYR>=<TAVFOFYR>+(TAVFOF/VM)                                         DAYCLS1128
      <TDIFMO>=<TDIFMO>+(DBT-(TAV/VM))                                          DAYCLS1129
      <TDIFYR>=<TDIFYR>+(DBT-(TAV/VM))                                          DAYCLS1130
      IF (TAVFON.LE.0.0) GOTO 548                                               DAYCLS1131
      <TDIFFONMO>=<TDIFFONMO>+(DBT-(TAVFON/VM))                                 DAYCLS1132
      <TDIFFONYR>=<TDIFFONYR>+(DBT-(TAVFON/VM))                                 DAYCLS1133
      GOTO 549                                                                  DAYCLS1134
  548 CONTINUE                                                                  DAYCLS1135
      <TDIFFOFMO>=<TDIFFOFMO>+(DBT-(TAVFOF/VM))                                 DAYCLS1136
      <TDIFFOFYR>=<TDIFFOFYR>+(DBT-(TAVFOF/VM))                                 DAYCLS1137
  549 CONTINUE                                                                  DAYCLS1138
C     SUM UP HUMIDITY RATIO DIFFERENCT BETWEEN OUTDOOR AND RETURN AIR           DAYCLS1139
      IF (ICODE .EQ. 1) GOTO 550                                                DAYCLS1140
      IF (ICODE.GE.6.AND.ICODE.LE.8) GOTO 550                                   DAYCLS1141
      <WDIFMO>=<WDIFMO>+(HUMRAT-<PASTWR>)                                       DAYCLS1142
      <WDIFYR>=<WDIFYR>+(HUMRAT-<PASTWR>)                                       DAYCLS1143
      IF (IREPRT(2,29).EQ.0) GOTO 550                                           IREPRT   8
      IF((FON .NE. 1.0) .OR. (FONNGT .NE. 0.0) .OR.                             DAYCLS1145
     $   (<START-FLAG> .NE. 0) .OR. (ISUB .EQ. 1)) GO TO 550                    DAYCLS1146
      RHX    = RHFUNC(TAV/VM,<PASTWR>,PATM)-.5                                  DAYCLS1147
C                                                                               DAYCLS1148
      IRHX   = INT(RHX)/10+1                                                    DAYCLS1149
C                                                                               DAYCLS1150
C              INCREMENT HUMIDITY RATIO ARRAY FOR CORRECT BIN AND HOUR          DAYCLS1151
      II     = (IHR-1)*11+IRHX                                                  DAYCLS1152
      <IRHA> = <IRHA>+1                                                         DAYCLS1153
      II     = 264+IRHX                                                         DAYCLS1154
      <IRHA> = <IRHA>+1                                                         DAYCLS1155
      II     = 11*IHR                                                           DAYCLS1156
      <IRHA> = <IRHA>+1                                                         DAYCLS1157
      II     = 275                                                              DAYCLS1158
      <IRHA> = <IRHA>+1                                                         DAYCLS1159
  550 CONTINUE                                                                  DAYCLS1160
      I      = 0                                                                DAYCLS1161
      I1     = 0                                                                DAYCLS1162
C              COUNT NUMBER OF HOURS IN DIFFERENT CATEGORIES FOR SS-C           DAYCLS1163
      IF(FON.NE.1.0) GOTO 7010                                                  DAYCLS1164
      <FANONMO>=<FANONMO>+1                                                     DAYCLS1165
      <FANONYR>=<FANONYR>+1                                                     DAYCLS1166
      PLTFLG(1)=1                                                               DAYCLS1167
 7010 CONTINUE                                                                  DAYCLS1168
      IF(<COOLING-SCHEDULE>.EQ.0) THEN                                          DAYCLS1169
          <COOLONMO> = <COOLONMO> + 1                                           DAYCLS1170
          <COOLONYR> = <COOLONYR> + 1                                           DAYCLS1171
          PLTFLG(2)=1                                                           DAYCLS1172
      ELSE                                                                      DAYCLS1173
          IF (SchSnap(1, <COOLING-SCHEDULE>, DBT, 1.) .GT. 0.)  THEN            Time   223
              <COOLONMO> = <COOLONMO> + 1                                       DAYCLS1177
              <COOLONYR> = <COOLONYR> + 1                                       DAYCLS1178
              PLTFLG(2)=1                                                       DAYCLS1179
          ENDIF                                                                 DAYCLS1180
      ENDIF                                                                     DAYCLS1181
      IF(HON.EQ.1.0) PLTFLG(3)=1                                                DAYCLS1182
      IF(<HEATING-SCHEDULE>.EQ.0) THEN                                          DAYCLS1183
          <HEATONMO> = <HEATONMO> + 1                                           DAYCLS1184
          <HEATONYR> = <HEATONYR> + 1                                           DAYCLS1185
          PLTFLG(3)=1                                                           DAYCLS1186
      ELSE                                                                      DAYCLS1187
          IF (SchSnap(-1, <HEATING-SCHEDULE>, DBT, 1.) .GT. 0.)  THEN           Time   224
              <HEATONMO> = <HEATONMO> + 1                                       DAYCLS1191
              <HEATONYR> = <HEATONYR> + 1                                       DAYCLS1192
              PLTFLG(3)=1                                                       DAYCLS1193
          ENDIF                                                                 DAYCLS1194
      ENDIF                                                                     DAYCLS1195
 7030 IF(FONNGT.EQ.0) GOTO 7040                                                 DAYCLS1196
      <FANCYONMO>=<FANCYONMO>+1                                                 DAYCLS1197
      <FANCYONYR>=<FANCYONYR>+1                                                 DAYCLS1198
      PLTFLG(4)=1                                                               DAYCLS1199
 7040 IF(ISUB.NE.1) GOTO 7050                                                   DAYCLS1200
      <NTVTHRSMO>=<NTVTHRSMO>+1                                                 DAYCLS1201
      <NTVTHRSYR>=<NTVTHRSYR>+1                                                 DAYCLS1202
      PLTFLG(5)=1                                                               DAYCLS1203
 7050 CONTINUE                                                                  DAYCLS1204
C              CALCULATE AVERAGE TEMPERATURE FOR REPORT VARIABLES               DAYCLS1205
      TAV    = TAV/VM                                                           DAYCLS1206
      I      = 0                                                                DAYCLS1207
      DELTI  = ABS(DBT-TAV)                                                     DAYCLS1208
      <TDIFCLMO>=<TDIFCLMO>+DELTI                                               DAYCLS1209
      <TDIFCLYR>=<TDIFCLYR>+DELTI                                               DAYCLS1210
      IF (QCREP.GT.0.0) I=1                                                     DAYCLS1211
      IF((DTON .GT. 0.0) .and.                                                  -44c3a   1
     $   ((<DESICCANT>.GT.0).or.(<EVAP-CL-TYPE>.GT.0).or.                       -44c3a   2
     $    (<SWAMP-COOLER>.GT.0))) I=1                                           -44c3a   3
      IF(IVENTF.NE.0) I=1                                                       -44c3a   4
C              COOLING ONLY                                                     DAYCLS1212
      IF (I.EQ.0) GOTO 7500                                                     DAYCLS1213
C              CALCULATE TEMPERATURE QUANTITIES FOR COOLING                     DAYCLS1214
      <TAVCLMO>=<TAVCLMO>+TAV                                                   DAYCLS1215
      <TAVCLYR>=<TAVCLYR>+TAV                                                   DAYCLS1216
      <QCHRSMO>=<QCHRSMO>+I                                                     DAYCLS1217
      <QCHRSYR>=<QCHRSYR>+I                                                     DAYCLS1218
      IF(I.EQ.1) PLTFLG(6)=1                                                    DAYCLS1219
      <FANCLKWMO>=<FANCLKWMO>+FANKW                                             DAYCLS1220
      <FANCLKWYR>=<FANCLKWYR>+FANKW                                             DAYCLS1221
      <PLTFANCLKWMO>=<PLTFANCLKWMO> +FANKW                                      DAYCLS1222
      <PLTFANCLKWYR>=<PLTFANCLKWYR>+FANKW                                       DAYCLS1223
 7500 CONTINUE                                                                  DAYCLS1224
      I1     = 0                                                                DAYCLS1225
      IF( QHREP.GE.0.0) GOTO 7700                                               DAYCLS1226
C              HEATING ONLY                                                     DAYCLS1227
      I1     = 1                                                                DAYCLS1228
      <QHHRSMO>=<QHHRSMO>+I1                                                    DAYCLS1229
      <QHHRSYR>=<QHHRSYR>+I1                                                    DAYCLS1230
      IF(I1.EQ.1) PLTFLG(7)=1                                                   DAYCLS1231
      <FANHTKWMO>=<FANHTKWMO>+FANKW                                             DAYCLS1232
      <FANHTKWYR>=<FANHTKWYR>+FANKW                                             DAYCLS1233
      <PLTFANHTKWMO>=<PLTFANHTKWMO>+FANKW                                       DAYCLS1234
      <PLTFANHTKWYR>=<PLTFANHTKWYR>+FANKW                                       DAYCLS1235
C              CALCULATE TEMPERATURE QUANTITIES FOR HEATING                     DAYCLS1236
      <TAVHTMO>=<TAVHTMO>+TAV                                                   DAYCLS1237
      <TAVHTYR>=<TAVHTYR>+TAV                                                   DAYCLS1238
      DELTI  = ABS(TAV-DBT)                                                     DAYCLS1239
      <TDIFHTMO>=<TDIFHTMO>+DELTI                                               DAYCLS1240
      <TDIFHTYR>=<TDIFHTYR>+DELTI                                               DAYCLS1241
 7600 CONTINUE                                                                  DAYCLS1242
C              CONCURRENT HEATING AND COOLING                                   DAYCLS1243
      IF(I.LE.0) GOTO 7800                                                      DAYCLS1244
      <QCQHHRSMO>=<QCQHHRSMO>+1                                                 DAYCLS1245
      <QCQHHRSYR>=<QCQHHRSYR>+1                                                 DAYCLS1246
      PLTFLG(8)=1                                                               DAYCLS1247
      <FANCNKWMO>=<FANCNKWMO>+FANKW                                             DAYCLS1248
      <FANCNKWYR>=<FANCNKWYR>+FANKW                                             DAYCLS1249
      <PLTFANCNKWYR>=<PLTFANCNKWYR>+FANKW                                       DAYCLS1250
      <PLTFANCNKWMO>=<PLTFANCNKWMO>+FANKW                                       DAYCLS1251
      GOTO 7800                                                                 DAYCLS1252
 7700 CONTINUE                                                                  DAYCLS1253
      IF(I.GT.0.OR.I1.GT.0) GOTO 7800                                           DAYCLS1254
C              FLOAT-NO HEATING OR COOLING                                      DAYCLS1255
      <FANFLKWMO>=<FANFLKWMO>+FANKW                                             DAYCLS1256
      <FANFLKWYR>=<FANFLKWYR>+FANKW                                             DAYCLS1257
      <PLTFANFLKWMO>=<PLTFANFLKWMO>+FANKW                                       DAYCLS1258
      <PLTFANFLKWYR>=<PLTFANFLKWYR>+FANKW                                       DAYCLS1259
C              COUNT NUMBER OF HOURS FLOATING                                   DAYCLS1260
      <FLTHR1MO>=<FLTHR1MO>+1                                                   DAYCLS1261
      <FLTHR1YR>=<FLTHR1YR>+1                                                   DAYCLS1262
      PLTFLG(9)=1                                                               DAYCLS1263
      IF (FON.EQ.0.0) GOTO 7800                                                 DAYCLS1264
C              FLOATING, FAN ON                                                 DAYCLS1265
      <FLTHR2MO>=<FLTHR2MO>+1                                                   DAYCLS1266
      <FLTHR2YR>=<FLTHR2YR>+1                                                   DAYCLS1267
      PLTFLG(10)=1                                                              DAYCLS1268
 7800 CONTINUE                                                                  DAYCLS1269
      <COLDDECKKWHYR> = <COLDDECKKWHYR> + SFKW                                  DAYCLS1270
      <HOTDECKKWHYR>  = <HOTDECKKWHYR>  + SFKWh                                 DAYCLS1271
      <RETURNKWHYR>   = <RETURNKWHYR>   + RFKW                                  DAYCLS1272
      <WRMAX>  = AMAX1(<WRMAX>,<PASTWR>)                                        DAYCLS1273
      IF(FON .NE. 0.0)  <WRMIN> = AMIN1(<WRMIN>,<PASTWR>)                       DAYCLS1274
C     FOR REPORT SS-J, ENTER COOLING LOAD, SHR, HEATING LOAD, DBT/WBT           DAYCLS1275
C     INTO CURRENT-DAY 24-HOUR ARRAY                                            DAYCLS1276
      IF(IREPRT(2,25).EQ.0) GO TO 191                                           IREPRT   9
      MR2 = <SSJREPPTR>                                                         DAYCLS1278
      IH = IHR                                                                  DAYCLS1279
      <QCPROF> = QCREP                                                          DAYCLS1280
      IF (QCREP.GT.0.) THEN                                                     DAYCLS1281
          <SHRPROF> = (QCREP-QCLAT)/(QCREP+1.0)                                 DAYCLS1282
      ELSE                                                                      DAYCLS1283
          <SHRPROF> = 0.0                                                       DAYCLS1284
      END IF                                                                    DAYCLS1285
      <QHPROF> = QHREP                                                          DAYCLS1286
      IF(ICODE.NE.17) GO TO 199                                                 DAYCLS1287
C              INCLUDE BASEBOARD ENERGY FOR RESIDENTIAL SYSTEM                  DAYCLS1288
      <QHPROF> = QH + QHB                                                       DAYCLS1289
C              MAX HEATING ENERGY FOR RUN PERIOD, RESIDENTIAL SYSTEM            DAYCLS1290
      <QRESYRM> = AMIN1(<QHPROF>,<QRESYRM>)                                     DAYCLS1291
  199 CONTINUE                                                                  DAYCLS1292
      <ITPROF> = INT(DBT + 128.1)*256 + INT(WBT + 128.1)                        DAYCLS1293
      IF (QCUNMT.GT.0. .AND. QCREP.GT.0.) THEN                                  DAYCLS1294
          <COOLUNMETFLAG> = 1                                                   DAYCLS1295
      ELSE                                                                      DAYCLS1296
          <COOLUNMETFLAG> = 0                                                   DAYCLS1297
      END IF                                                                    DAYCLS1298
      IF (QCREP .EQ. <QCYRM>) THEN                                              DAYCLS1299
          <SPOCM> = PO                                                          DAYCLS1300
      END IF                                                                    DAYCLS1301
      IF (QHREP .EQ. <QHYRM>) <SPOHM> = PO                                      DAYCLS1302
  191 CONTINUE                                                                  DAYCLS1303
  200 CONTINUE                                                                  DAYCLS1304
C              FILL TEMPERATURE BIN ARRAY IF SS-O IS REQUESTED                  DAYCLS1305
      IF(IREPRT(2,30).EQ.0) GOTO 179                                            IREPRT  10
      IF((FON .NE. 1.0) .OR. (FONNGT .NE. 0.0) .OR.                             DAYCLS1307
     $   (<START-FLAG> .NE. 0) .OR. (ISUB .EQ. 1)) GO TO 179                    DAYCLS1308
      ZP1    = ISZ                                                              DAYCLS1309
      DO 192 NZ=1,NSZ                                                           DAYCLS1310
      IZTP   = INT(<TNOW>)/5-10                                                 DAYCLS1311
      IF (IZTP.LE.0) IZTP=1                                                     DAYCLS1312
      IF (IZTP.GT.7) IZTP=7                                                     DAYCLS1313
      II     = (IHR-1)*8+IZTP                                                   DAYCLS1314
      <ITPA> = <ITPA>+1                                                         DAYCLS1315
      II     = 192+IZTP                                                         DAYCLS1316
      <ITPA> = <ITPA>+1                                                         DAYCLS1317
      II     = IHR*8                                                            DAYCLS1318
      <ITPA> = <ITPA>+1                                                         DAYCLS1319
      II     = 200                                                              DAYCLS1320
      <ITPA> = <ITPA>+1                                                         DAYCLS1321
      ZP1    = ZP1+NZD                                                          DAYCLS1322
  192 CONTINUE                                                                  DAYCLS1323
  179 CONTINUE                                                                  DAYCLS1324
C              INCREMENT TOTAL COOL,HEAT,ELECT FOR THE PLANT                    DAYCLS1325
      <QCPL> = <QCPL> + QCREP                                                   -131   107
      <QHPL> = <QHPL> + QHREP                                                   -131   108
      <PKW>  = <PKW>  + <SKW>                                                   DAYCLS1330
      <PGAS> = <PGAS> + SGAS                                                    DAYCLS1331
      <PCGAS> = <PCGAS> + SCGAS                                                 DAYCLS1332
      <PKWQH> = <PKWQH> + SKWQH                                                 DAYCLS1333
      <PKWQC> = <PKWQC> + SKWQC                                                 DAYCLS1334
      <PFANKW> = <PFANKW> + FANKW                                               DAYCLS1335
      <IHROVERP> = <IHROVERP> + <IHROVERS>                                      DAYCLS1336
      <IHRONP> = <IHRONP> + <IHRONS>                                            DAYCLS1337
C              SUM SYSTEM HEAT PUMP VARS INTO PLANT BLOCK                       DAYCLS1338
      DO 228 II=1,20                                                            DAYCLS1339
  228 <SHPP> = <SHPP> + SHP(II)                                                 DAYCLS1340
C               EVAP OR DESC REPORT VARIABLES                                   DAYCLS1341
      MR1 = <EVAPREPPTR>                                                        DAYCLS1342
      IF (MR1 .GT. 0) THEN                                                      DAYCLS1343
          <QCEVDSCMO> = <QCEVDSCMO> + QCDTOT + QCEVT                            DAYCLS1344
          <QCSEVDSCMO> = <QCSEVDSCMO> + QCDS + QCEVS                            DAYCLS1345
          <QCLEVDSCMO> = <QCLEVDSCMO> + QCDL + QCEVL                            DAYCLS1346
          <SKWEVDSCMO> = <SKWEVDSCMO> + DKW + EVKW                              DAYCLS1347
          <SGASEVDSCMO> = <SGASEVDSCMO> + DGAS                                  DAYCLS1348
          <QCEVDSCYR> = <QCEVDSCYR> + QCDTOT + QCEVT                            DAYCLS1349
          <QCSEVDSCYR> = <QCSEVDSCYR> + QCDS + QCEVS                            DAYCLS1350
          <QCLEVDSCYR> = <QCLEVDSCYR> + QCDL + QCEVL                            DAYCLS1351
          <SKWEVDSCYR> = <SKWEVDSCYR> + DKW + EVKW                              DAYCLS1352
          <SGASEVDSCYR> = <SGASEVDSCYR> + DGAS                                  DAYCLS1353
          IF (QCDL.NE.0. .OR. QCEVL.NE.0. .OR. QCDS.NE.0. .OR.                  DAYCLS1354
     1        QCEVS.NE.0.) THEN                                                 DAYCLS1355
              <EVDSCONMO> = <EVDSCONMO> + 1                                     DAYCLS1356
              <EVDSCONYR> = <EVDSCONYR> + 1                                     DAYCLS1357
          END IF                                                                DAYCLS1358
      END IF                                                                    DAYCLS1359
  225 CONTINUE                                                                  DAYCLS1360
                                                                                -045i    2
c              If this system has a report-block and an hourly-report           -045i    3
c              is scheduled to be written, fill the buffer                      -045i    4
      IF((<ISYBUFP>.NE.0).AND.(IRSCH.NE.0))  CALL USERSR( NSP )                 -045i    5
                                                                                -045i    6
C********************************* run function : DAYCLS-4 *********            DAYCLS1361
                  IF( MSYSF(8) .NE. 0 )   CALL  FINTS( MSYSF(8), 4. )           DAYCLS1362
C*******************************************************************            DAYCLS1363
c              end of systems simulation loop                                   temp    18
299           CONTINUE                                                          temp    19
c                                                                               temp    20
c              simulate circulation loops and primary plant equipment           temp    21
      CALL PLANT                                                                HVAC4    9
c                                                                               temp    23
C              SKIP REPORT STUFF IF AN INITIALIZATION                           DAYCLS1376
      IF (InitialFlg .GT. 0)  GOTO 400                                          Time   225
C              ADD LOADS MISC ELECTRICAL TO THE PLANT ELEC                      DAYCLS1378
C              ADD LOADS MISC GAS TO PLANT TOTAL                                DAYCLS1379
C              INCREMENT MONTHLY AND YEARLY PEAKS                               DAYCLS1380
      DO II=1,11                                                                -131   109
        <PLTDMONSUM> = <PLTDMONSUM> + <PLTD>                                    -131   110
        <PLTDYRSUM> = <PLTDYRSUM> + <PLTD>                                      -131   111
      ENDDO                                                                     -131   112
C              UPDATE MONTHLY SUM HEAT PUMP BLOCK                               DAYCLS1384
      DO 205 II=1,20                                                            DAYCLS1385
  205 <SHPPMO> = <SHPPMO> + <SHPP>                                              DAYCLS1386
C              UPDATE PEAKS                                                     DAYCLS1387
      DO II=1,11                                                                -131   113
        IF(<PLTD> .LT. 0.0)  THEN                                               -131   114
          <PLTDMONPK> = AMIN1(<PLTDMONPK>,<PLTD>)                               -131   115
          <PLTDYRPK> = AMIN1(<PLTDYRPK>,<PLTD>)                                 -131   116
        ENDIF                                                                   -131   117
        IF(<PLTD> .GT. 0.0)  THEN                                               -131   118
          <PLTDMONPK> = AMAX1(<PLTDMONPK>,<PLTD>)                               -131   119
          <PLTDYRPK> = AMAX1(<PLTDYRPK>,<PLTD>)                                 -131   120
        ENDIF                                                                   -131   121
      ENDDO                                                                     -131   122
      IF(<IHROVERP>.GT.0) <NHRSOVERP> = <NHRSOVERP> + 1                         DAYCLS1401
      IF(<IHRONP> .GT.0) <NHRSONP> = <NHRSONP> + 1                              DAYCLS1402
      IF (<pr.OvrldCl> .ne. 0)  <pr.HrsOvrldClYr> = <pr.HrsOvrldClYr>+1         -047k   15
      IF (<pr.OvrldHt> .ne. 0)  <pr.HrsOvrldHtYr> = <pr.HrsOvrldHtYr>+1         -047k   16
                                                                                -047k   17
C              SKIP PLANT REPORT STUFF IF NOT NEEDED                            DAYCLS1403
      IF(IRPPLT .EQ. 0)  GO TO 300                                              DAYCLS1404
C              PLANT HOURLY COUNTERS                                            DAYCLS1405
      IF (PLTFLG(6)+PLTFLG(7).LE.1) GOTO 408                                    DAYCLS1406
C              BOTH COOLING AND HEATING, RESET COUNTERS                         DAYCLS1407
      PLTFLG(8)=1                                                               DAYCLS1408
  408 CONTINUE                                                                  DAYCLS1409
      <NHRSQCPL>=<NHRSQCPL>+PLTFLG(6)                                           DAYCLS1410
      <PNHRSQCPL>=<PNHRSQCPL>+PLTFLG(6)                                         DAYCLS1411
      <NHRSQHPL>=<NHRSQHPL>+PLTFLG(7)                                           DAYCLS1412
      <PNHRSQHPL>=<PNHRSQHPL>+PLTFLG(7)                                         DAYCLS1413
      <NHRSQCQHPL>=<NHRSQCQHPL>+PLTFLG(8)                                       DAYCLS1414
      <PNHRSQCQHPL>=<PNHRSQCQHPL>+PLTFLG(8)                                     DAYCLS1415
      <PFANONMO>=<PFANONMO>+PLTFLG(1)                                           DAYCLS1416
      <PFANONYR>=<PFANONYR>+PLTFLG(1)                                           DAYCLS1417
      <PCOOLONMO>=<PCOOLONMO>+PLTFLG(2)                                         DAYCLS1418
      <PCOOLONYR>=<PCOOLONYR>+PLTFLG(2)                                         DAYCLS1419
      <PHEATONMO>=<PHEATONMO>+PLTFLG(3)                                         DAYCLS1420
      <PHEATONYR>=<PHEATONYR>+PLTFLG(3)                                         DAYCLS1421
      <PFANCYONMO>=<PFANCYONMO>+PLTFLG(4)                                       DAYCLS1422
      <PFANCYONYR>=<PFANCYONYR>+PLTFLG(4)                                       DAYCLS1423
      <PNTVTHRSMO>=<PNTVTHRSMO>+PLTFLG(5)                                       DAYCLS1424
      <PNTVTHRSYR>=<PNTVTHRSYR>+PLTFLG(5)                                       DAYCLS1425
      PFLAG  = PLTFLG(6)+PLTFLG(7)+PLTFLG(8)                                    DAYCLS1426
      IF (PFLAG.LE.0) GOTO 409                                                  DAYCLS1427
      PLTFLG(9)=0                                                               DAYCLS1428
      PLTFLG(10)=0                                                              DAYCLS1429
  409 CONTINUE                                                                  DAYCLS1430
      <PFLTHR1MO>=<PFLTHR1MO>+PLTFLG(9)                                         DAYCLS1431
      <PFLTHR1YR>=<PFLTHR1YR>+PLTFLG(9)                                         DAYCLS1432
      <PFLTHR2MO>=<PFLTHR2MO>+PLTFLG(10)                                        DAYCLS1433
      <PFLTHR2YR>=<PFLTHR2YR>+PLTFLG(10)                                        DAYCLS1434
      IF(<QCPLMOM> .NE. <QCPL>)  GOTO 250                                       DAYCLS1435
      <IPQCDAYHR> = IDAYHR                                                      DAYCLS1436
      <IPQCDBWBT> = IDBWBT                                                      DAYCLS1437
      <QHPL-AT-QCPL> = <QHPL>                                                   DAYCLS1438
      <PKW-AT-QCPL>  = <PKW>                                                    DAYCLS1439
  250 CONTINUE                                                                  DAYCLS1440
      IF(<QHPLMOM> .EQ. <QHPL>)  <IPQHDAYHR> = IDAYHR                           DAYCLS1441
      IF(<QHPLMOM> .EQ. <QHPL>)  <IPQHDBWBT> = IDBWBT                           DAYCLS1442
  300 CONTINUE                                                                  DAYCLS1443
c                                                                               HVAC10   1
c              circulation loops and primary plant equipment statistics         HVAC10   2
      IF (IDDFLG .EQ. 0)  THEN                                                  XFC1    25
        SimCtrl = 19                                                            XFC1    26
        CALL Xface_Statistics                                                   XFC1    27
        CALL PlantStatistics                                                    XFC1    28
      ENDIF                                                                     XFC1    29
c                                                                               HVAC10   4
      TMP    = TMP/(CFMP+0.1)                                                   DAYCLS1444
c                                                                               HVAC6   42
c              Store the meter data for economics                               HVAC6   43
c              electricity                                                      HVAC6   44
      DO  IM=1,NEM                                                              HVAC6   45
        JEM = IEM + (IM-1)*LEM                                                  HVAC6   46
        DAYMTR(IM,IHR) = <em;AdjustedTotal>                                     HVAC27   9
c              electric distribution in 5 minute bins                           HVAC22  17
        DO  IP=1,13                                                             HVAC22  18
          ElecPeaks5(IP,IM,IHR) = <em;5-MIN_BINS>                               HVAC22  19
        ENDDO                                                                   HVAC22  20
      ENDDO                                                                     HVAC6   48
      I = NEM                                                                   HVAC6   49
c              fuels                                                            HVAC6   50
      DO  IM=1,NFM                                                              HVAC6   51
        JFM = IFM + (IM-1)*LFM                                                  HVAC6   52
        I   = I + 1                                                             HVAC6   53
c              convert consumption from Btuh to billing units                   HVAC6   54
        DAYMTR(I,IHR) = <fm;TOTAL>*<fm:BTU/UNIT>                                HVAC18  26
      ENDDO                                                                     HVAC6   56
c              steam                                                            HVAC6   57
      DO  IM=1,NSM                                                              HVAC6   58
        JSM = ISM + (IM-1)*LSM                                                  HVAC6   59
        I   = I + 1                                                             HVAC6   60
c              convert consumption from Btuh to billing units                   HVAC6   61
        DAYMTR(I,IHR) = <sm;TOTAL>*<sm:BTU/UNIT>                                HVAC18  27
      ENDDO                                                                     HVAC6   63
c              chilled water                                                    HVAC6   64
      DO  IM=1,NCM                                                              HVAC6   65
        JCM = ICM + (IM-1)*LCM                                                  HVAC6   66
        I   = I + 1                                                             HVAC6   67
c              convert consumption from Btuh to billing units                   HVAC6   68
        DAYMTR(I,IHR) = <cm;TOTAL>*<cm:BTU/UNIT>                                HVAC18  28
      ENDDO                                                                     HVAC6   70
  400 CONTINUE                                                                  DAYCLS1499
C***************************** run function : DAYCLS-5 *************            DAYCLS1500
              IF( MSYSF(9) .NE. 0 )   CALL  FINTS( MSYSF(9), 5. )               DAYCLS1501
C*******************************************************************            DAYCLS1502
c                                                                               HR      19
c              Non-component specific report-blocks                             HR      20
      IF (IRSch .GT. 0)  THEN                                                   HR      21
c              Global                                                           HR      22
        IF (IGRPtr .GT. 0)  THEN                                                HR      23
          CALL FILLN(0.,AA(IGRPTR),59)                                          HR      24
          IGP = IGRPTR - 1                                                      HR      25
          DO I=1,18                                                             HR      26
            AA(IGP+I) = WEATH(I)                                                HR      27
          ENDDO                                                                 HR      28
          AA(IGP+7)  = FLOAT(IA(IGP+7))                                         HR      29
          AA(IGP+8)  = FLOAT(IA(IGP+8))                                         HR      30
          AA(IGP+9)  = FLOAT(IA(IGP+9))                                         HR      31
          AA(IGP+16) = FLOAT(IA(IGP+16))                                        HR      32
          DO I=18,24                                                            HR      33
            AA(IGP+I) = WEATH(I+1)                                              HR      34
          ENDDO                                                                 HR      35
          IPTR       = IGP + 37                                                 HR      36
          AA(IPTR+1) = FLOAT(IYR)                                               HR      37
          AA(IPTR+2) = FLOAT(IMO)                                               HR      38
          AA(IPTR+3) = FLOAT(IDAY)                                              HR      39
          AA(IPTR+4) = FLOAT(IHR)                                               HR      40
          AA(IPTR+5) = FLOAT(IDOY)                                              HR      41
          AA(IPTR+6) = FLOAT(IDOW)                                              HR      42
          AA(IPTR+7) = FLOAT(ISCHR)                                             HR      43
          AA(IPTR+8) = FLOAT(ISCDOW)                                            HR      44
          AA(IPTR+9) = FLOAT(IDSTF)                                             HR      45
          AA(IGP+25) = FLOAT(ISUNUP)                                            HR      46
        ENDIF                                                                   HR      47
c              Building HVAC                                                    HR      48
        IF (<IPLBUFP> .GT. 0)  THEN                                             HR      49
          CALL FILLN(0.,AA(<IPLBUFP>),IVTLIM(2,8))                              HR      50
          IGP = <IPLBUFP> - 1                                                   HR      51
          DO  II=1,10                                                           HR      52
            AA(IGP+II) = <PLTD>                                                 HR      53
          ENDDO                                                                 HR      54
        ENDIF                                                                   HR      55
      ENDIF  ! IRSch                                                            HR      56
c              Process hourly reports                                           HR      57
      IF (Nhrp .GT. 0)  CALL HourlyReports(2)                                   HR      58
  500 CONTINUE                                                                  DAYCLS1658
C************************** run function : DAYCLS-6 ****************            DAYCLS1659
          IF( MSYSF(10) .NE. 0 )   CALL  FINTS( MSYSF(10), 6. )                 DAYCLS1660
C*******************************************************************            DAYCLS1661
c                                                                               Time   235
c              End of hourly loop                                               Time   236
      IF (iTimeFlg .GT. 1)  EXIT                                                Time   237
599   CONTINUE                                                                  DAYCLS1662
C                                                                               DAYCLS1663
C               SET THE MAXIMUM INTEGRATED DAILY COOLING LOAD FOR PLANT         DAYCLS1664
      IF (<PQCDAYSUM> .GE. <PQCDAYSUMMAX>)  <PQCDAYSUMMAX> = <PQCDAYSUM>        RemPA  290
      IF (IREPRT(2,25) .EQ. 0  .OR.  InitialFlg .GT. 0)  GOTO 700               Time   238
C                                                                               DAYCLS1672
C     FOR REPORT SS-J, MOVE CURRENT DAY COOLING LOAD, SHR, AND OUTSIDE          DAYCLS1673
C     TEMPERATURE PROFILES INTO PEAK DAY PROFILE IF THIS DAY HAS MAX            DAYCLS1674
C     COOLING LOAD HOUR SO FAR THIS YEAR.  DITTO FOR HEATING LOAD               DAYCLS1675
C     PROFILE                                                                   DAYCLS1676
C                                                                               DAYCLS1677
      DO 620 NS=1,NSYS                                                          RemPA  291
      NSP   = IS + (NS-1)*NSS                                                   RemPA  292
      MR2 = <SSJREPPTR>                                                         DAYCLS1684
      QCDSUM = 0.                                                               DAYCLS1685
      DO 605 IH=1,24                                                            DAYCLS1686
      QCDSUM = QCDSUM + <QCPROF>                                                DAYCLS1687
  605 CONTINUE                                                                  DAYCLS1688
      IF (QCDSUM .GE. <QCDAYSUMMAX>) THEN                                       DAYCLS1689
          <QCDAYSUMMAX> = QCDSUM                                                DAYCLS1690
          <MDCPKDAY> = 32*IMO + IDAY                                            DAYCLS1691
          DO 607 IH=1,24                                                        DAYCLS1692
              <QCPKDAY> = <QCPROF>                                              DAYCLS1693
              <SHRPKDAY> = <SHRPROF>                                            DAYCLS1694
              <ITCPKDAY> = <ITPROF>                                             DAYCLS1695
              <COOLUNMETFLAGM> = (<COOLUNMETFLAGM>/10)*10                       DAYCLS1696
     1                           + <COOLUNMETFLAG>                              DAYCLS1697
  607     CONTINUE                                                              DAYCLS1698
      END IF                                                                    DAYCLS1699
      DO 630 IH=1,24                                                            DAYCLS1700
      IF(<QCPROF>.GE.<QCYRM>) GO TO 640                                         DAYCLS1701
  630 CONTINUE                                                                  DAYCLS1702
      GO TO 660                                                                 DAYCLS1703
  640 CONTINUE                                                                  DAYCLS1704
C     MOVE CURRENT DAY COOLING, SHR, AND TEMP PROFILES INTO                     DAYCLS1705
C     CORRESPONDING PEAK DAY PROFILE                                            DAYCLS1706
      DO 650 IH=1,24                                                            DAYCLS1707
      <QCPROFM> = <QCPROF>                                                      DAYCLS1708
      <SHRPROFM> = <SHRPROF>                                                    DAYCLS1709
      <ITCPROF> = <ITPROF>                                                      DAYCLS1710
      <COOLUNMETFLAGM> = MOD(<COOLUNMETFLAGM>,10) + 10*<COOLUNMETFLAG>          DAYCLS1711
  650 CONTINUE                                                                  DAYCLS1712
      <IQCMODAY> = 32*IMO + IDAY                                                DAYCLS1713
  660 CONTINUE                                                                  DAYCLS1714
      QHM = <QHYRM>                                                             DAYCLS1715
      IF(ICODE.EQ.17) QHM = <QRESYRM>                                           DAYCLS1716
      DO 670 IH=1,24                                                            DAYCLS1717
      IF(<QHPROF>.LE.QHM) GO TO 680                                             DAYCLS1718
  670 CONTINUE                                                                  DAYCLS1719
      GO TO 690                                                                 DAYCLS1720
  680 CONTINUE                                                                  DAYCLS1721
C     MOVE CURRENT DAY HEATING LOAD AND TEMP PROFILE                            DAYCLS1722
C     INTO PEAK DAY PROFILE                                                     DAYCLS1723
      DO 685 IH=1,24                                                            DAYCLS1724
      <QHPROFM> = <QHPROF>                                                      DAYCLS1725
      <ITHPROF> = <ITPROF>                                                      DAYCLS1726
  685 CONTINUE                                                                  DAYCLS1727
      <IQHMODAY> = 32*IMO + IDAY                                                DAYCLS1728
  690 CONTINUE                                                                  DAYCLS1729
  620 CONTINUE                                                                  DAYCLS1730
  700 CONTINUE                                                                  DAYCLS1732
      RETURN                                                                    DAYCLS1735
      END                                                                       DAYCLS1736
      SUBROUTINE DDSF                                                           DDSF     2
C                                                                               DDSF     3
C                            VAV DAUL DUCT AIR-HANDLER                          DDSF     4
C                                                                               DDSF     5
C              DEVELOPED BY                                                     -130     1
C                            J. J. Hirsch & S. D. Gates                         -130     2
C                            James J. Hirsch & Associates                       -130     3
C                            Camarillo, California                              -130     4
C              BASED UPON CODE DEVELOPED BY J. J. Hirsch and                    -130     5
C                            W. F. Buhl                                         -130     6
C                            A. E. Erdem                                        -130     7
C                            Lawrence Berkeley National Laboratory              -130     8
C                            University of California                           -130     9
Copyright (c) 1997 by James J. Hirsch. All Rights Reserved. Unpublished         -130    10
c rights reserved under the Copyright Laws of the United States.                -130    11
c RESTRICTED RIGHTS NOTICE: Government use, reproduction or disclosure          -130    12
c is subject to restrictions as set forth in Rights in Data (g)(3) in           -130    13
c UC/LBL purchase order 4607010 with J.J. Hirsch & Associates.                  -130    14
c                                                                               DDSF     7
c                         Dual-fan dual-duct modifications by                   DDSF     8
c                                      Steven Gates                             DDSF     9
c                                      J. Hirsch & Associates                   DDSF    10
c                                                                               DDSF    11
C                                                                               DDSF    12
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON /DDSDAT/ FONh, SFKWh, DTSh, CFMRATh, FONNGTh, RCFMmix,             /DDSDAT/ 2
     1                RfanCFM, EXFIL, DTDUCT, DTDUCTh, TCDFSR, THDFSR,          /DDSDAT/ 3
     2                CFMINh, CFMINc, CFMINhm, CFMINcm, CFMINt,                 /DDSDAT/ 4
     3                TCMINcoil, THMAXcoil, IWarmestZ, IColdestZ                /DDSDAT/ 5
      DIMENSION       DDSDAT(21)                                                /DDSDAT/ 6
      EQUIVALENCE     (DDSDAT(1), FONh)                                         /DDSDAT/ 7
      COMMON /DHWDAT/ HTT,EHSTOR,HTGIVE,HTASK,HTFILL,HSUPRT,HSTRRT,             /DHWDAT/ 2
     1                DHWWST,DHWWSU,HTTIN,DHWLD,DHWLDR,DHWPLR,DHWHRT,           /DHWDAT/ 3
     2                DHHRFT,DHERFT,DHERFP,HTCAP,HTLOSS,DHWEIR                  /DHWDAT/ 4
      DIMENSION DHWD(20)                                                        /DHWDAT/ 5
      EQUIVALENCE (HTT,DHWD(1))                                                 /DHWDAT/ 6
C              IMODE IS THE OPERATING MODE OF THE PTGSD SYSTEM                  /DSCTRL/ 2
      COMMON  /DSCTRL/  IMODE                                                   /DSCTRL/ 3
C              SYSTEM LEVEL VARIABLES FOR DESICCANT SYSTEMS, BOTH TOTAL         /DSYSTD/ 2
C              AND INTEGRATED                                                   /DSYSTD/ 3
      COMMON  /DSYSTD/  SCGAS, QREG, WBR, WB8, T8, W8, WB9, T9, W9, EFF,        /DSYSTD/ 4
     1                  DTON, DMODE(7), ERMAX4, ERMAX5, ERMAX6, OPMODE,         /DSYSTD/ 5
     2                  DBOA,WOA,DGAS,DKW,TCONDd,QCDTOT,QCDS,QCDL,              /DSYSTD/ 6
     3                  POA,DFANKW,RFANKW,DMOTKW,EVKW,QCEVT,QCEVS,              /DSYSTD/ 7
     4                  QCEVL,TCMNEV                                            /DSYSTD/ 8
      REAL DSYSTD(39)                                                           /DSYSTD/ 9
      EQUIVALENCE (DSYSTD(1), SCGAS)                                            /DSYSTD/10
      COMMON  /ENDUSE/ SUPPKW, HEATKW                                           HVAC27   1
      common  /FNSYS/  ISKIPS, MSYSF(120)                                       /FNSYS/  2
      COMMON  /HRREP / Irb, Ihrp, Lrb, Lhrp, Nrb, Nhrp, IVTLIM(3,50),           HR       5
     &                 IGRPtr, IBRPtr, IRSch, IRSchT(5),                        HR       6
     &                 NHRTyp(3), ITBUF(3), ITBUFB(3), ITBUFE(3),               HR       7
     &                 IHREOF, ICDFLG                                           HR       8
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                 IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                        /FILES/  3
     2               , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                   /FILES/  4
     3                 IHRREP(3), IHRPAS(2)                                     /FILES/  5
      COMMON  /MISCD / TEMPS(4,9999),CONS(5),TEMPSL(9999),                      -048a   10
     1                 BLDGQH,BLDGQC,BLDGQL,BLDGP,BPMULT,                       /MISCD/  3
     $                 DBTMIN,DBTMAX,WMIN,WMAX,NSPZ(9999),                      -048a   11
     3                 DQ, DTP, DTR, DTS, FPI, PLRCC , POM, TC2, TDM,           /MISCD/  5
     4                 TRA,WCOL,WCOLM,WMM,YPI,KWBTU,BTUKW,UNFILD,Unusedm        RemPA   45
      REAL             KWBTU                                                    /MISCD/  7
      COMMON  /PLANTD/ QHMP,TMP,CFMP,QHPP,CFMPP,                                /PLANTD/ 2
     1                 QHZP,TZP,DHWPKW,DHWPLF,DHWQRP                            RemPA   46
      REAL             PLANTD(10)                                               RemPA   47
      EQUIVALENCE      (PLANTD(1), QHMP)                                        RemPA   48
      COMMON  /PTRPLT/ Ipm,Ilp,Ich,Ibl,Idw,Itw,Ipv,Ign,Itk,Ihx,                 PV       1
     &                 Iec,Ilm,Iem,Ifm,Ism,Icm,Imm,Imc,Igl,Isp2,                XFC2     1
     &                 Ispare(5),  Ipe,                                         HVAC19   3
     &                 Npm,Nlp,Nch,Nbl,Ndw,Ntw,Npv,Ngn,Ntk,Nhx,                 PV       2
     &                 Nec,Nlm,Nem,Nfm,Nsm,Ncm,Nmm,Nmc,Ngl,Nsp2,                XFC2     2
     &                 Nspare(5),  Npe,                                         HVAC19   6
     &                 Lpm,Llp,Lch,Lbl,Ldw,Ltw,Lpv,Lgn,Ltk,Lhx,                 PV       3
     &                 Lec,Llm,Lem,Lfm,Lsm,Lcm,Lmm,Lmc,Lgl,Lsp2,                XFC2     3
     &                 Lspare(5),  Lpe,                                         HVAC19   9
     &                 Jpm,Jlp,Jch,Jbl,Jdw,Jtw,Jpv,Jgn,Jtk,Jhx,                 PV       4
     &                 Jec,Jlm,Jem,Jfm,Jsm,Jcm,    Jmc,Jgl,                     HVAC19  11
     &                 Jpe, kpr, NumMeters, NumIntHX                            XFC1     1
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      COMMON /SHP   / QCRUN,QCLOAD,QCGAS,QCAUX,QCGSLD,QCGSUP,                   /SHP/    2
     1                QCWAS,QCWASU,QCGSAV,QCFAN,                                /SHP/    3
     2                QHRUN,QHLOAD,QHGAS,QHAUX,QHGSLD,QHGSUP,                   /SHP/    4
     3                QHWAS,QHWASU,QHGDFR,QHFAN,          CUR(25),              /SHP/    5
     4                GSAV1,GASV2,PCH,ISZCZ,GCAP(2),GEDB,QHDFRG,                -044c1   1
     5                GRPM,PLRSUP,CFMCYC,CLPLR,CFMVVT,QHZHP,PCCEDB,             /SHP/    7
     6                IHPREP,IHPOUT,IHPHRR,IHPHRN,IRST,IREN                     /SHP/    8
      COMMON /SHPZ  / QCRUNZ,QCLOADZ,QCGASZ,QCAUXZ,QCGSLDZ,QCGSUPZ,             /SHP/    9
     1                QCWASZ,QCWASUZ,QCGSAVZ,QCFANZ,                            /SHP/   10
     2                QHRUNZ,QHLOADZ,QHGASZ,QHAUXZ,QHGSLDZ,QHGSUPZ,             /SHP/   11
     3                QHWASZ,QHWASUZ,QHGDFRZ,QHFANZ                             /SHP/   12
      DIMENSION       SHP(60),SHPZ(20)                                          /SHP/   13
      EQUIVALENCE     (SHP,QCRUN),(SHPZ,QCRUNZ)                                 /SHP/   14
     1               ,(DFM1,CUR(18)),(DFM2,CUR(19)),(DFM3,CUR(20))              /SHP/   15
      COMMON /SSPDAT/  PLRCS,QCCKWS,QCCMPS,PLRHS,QHCKWS,QHCMPS                  /SSPDAT/ 2
     $                ,PLRFS,PLRFCS,PLRFHS,sspss                                /SSPDAT/ 3
     $                ,PLRCZ,QCCKWZ,QCCMPZ,PLRHZ,QHCKWZ,QHCMPZ                  /SSPDAT/ 4
     $                ,PLRFZ,PLRFCZ,PLRFHZ,sspsz                                /SSPDAT/ 5
     $                ,ISSPF,IWCCF,IPCCF,SSPSAV                                 /SSPDAT/ 6
      DIMENSION        SSPD(24)                                                 JJHfix   1
      EQUIVALENCE      (SSPD(1),PLRCS)                                          /SSPDAT/ 8
      COMMON  /SYSTD / TH,TC,TM,TR,QH,QC,QHZ,QCZ,QHB,QHP,QHUM,                  /SYSTD/  2
     1                 QDHUM,TCMIN,THMAX,QLSUM,QPSUM,CFM,CFMH,CFMC,             /SYSTD/  3
     2                 RCFM,ECFM,CINF,FON,HON,CON,BON,SCONS(3),PH,PC,           /SYSTD/  4
     3                 SKW,FANKW,unused1,WR,WM,WCOIL,WW,PO,D,                   -046f    1
     4                 FTEMP,TCR,QHR,RfanPumpKW,SGAS,SKWQH,SKWQC,QCLAT,         -131    23
     5                 SFKW,RFKW,FONNGT,WSURF,RWalkinQ,TSURF,TRh,               -131    24
     6                 CBF,CBF1,CBF2,EON,PLRCFM,PLRC,PLRH,QCM1,                 /SYSTD/  8
     7                 QCM2,QHM1,EIRM1,EIRM2,EIR,OFKW,QCT,QCS,                  /SYSTD/  9
     8                 WRMAX,WRMIN,CFMRAT,QdistG,QdistL,RON,QHT,                /SYSTD/ 10
     9                 TPOMIN,POMIN,QHSUP,QRSENS,QRLAT,QRREC,QRREJ,             /SYSTD/ 11
     1                 RCOMKW,RDEFKW,RAUXKW,ECFMP,CFMIN,CINFP,DT,DW,            /SYSTD/ 12
     2                 EWB,IC,NATTSP,Q,RETR,SLOAD,QLSUMP,T,TCHUM,TEND,          /SYSTD/ 13
     3                 TS,hgbmin,HPDefE,EconoOnly,TDuctEnv,                     -044e1   1
     4                 QCUNMT,CapRh,CapRph,CapRc                                HVAC25   3
      REAL             SYSTD(113)                                               HVAC19  13
      EQUIVALENCE      (SYSTD(1),TH)                                            RemPA   65
      COMMON  /TIME  / IDOY, IYR, IMO, IDAY, IHR,                               Time     4
     &                 ISCMO, ISCDAY, ISCHR, IDOW, ISCDOW, iDSdates(6),         -044e5   1
     &                 iTimeFlg, iDSFlg, iDDFlg, InitialFlg, LeapYr,            Time     6
     &                 CLOCK(10), MONDSC(13), MONLEN(12), MONSDA(12)            HR      12
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
      COMMON  /ZONED / EXCFM,FH,FC,CFMZ,QHBZ,QOVER,THZ,TCZ,ERMAX,ERMIN,         /ZONED/  2
     1                 TRY,FTD,CORINT,G0,G1,G2,G3,SIGMAG,TL,ZQHR,TAVE,          /ZONED/  3
     2                 ZQH,ZQC,FCHPS(15),ACFM,ZKW,TCMINZ,THMAXZ,                /ZONED/  4
     3                 ERMAXM,ERMINM,THR,CSSCND,CSSVEC,HENOW,QGWIN,             /ZONED/  5
     4                 QSNABT,QGOPWL,QGVEC,CFMCVT,SSFPT,CFMVNT,ZFANKW,          /ZONED/  6
     5                 ZKWCBT,ZKWHBT,ZCapRbbrd, XC,ZC,XH,ZH                     -044e2   7
      REAL ZONED(63)                                                            -044e2   8
      EQUIVALENCE (ZONED(1),EXCFM)                                              /ZONED/  9
      INTEGER DDSTYPE                                                           DDSF    31
      H(DB,W) = 0.24*DB + (1061.0+0.444*DB)*W                                   H        2
c                                                                               DDSF    34
c              DDS-TYPE     1  Single-fan dual-duct or multizone                DDSF    35
c                           2  Dual-fan dual-duct                               DDSF    36
      DDSTYPE = <DDS-TYPE>                                                      DDSF    37
c                                                                               DDSF    38
c              PH will be the ratio of hot cfm to total cfm                     DDSF    39
      PH     = 0.0                                                              DDSF    40
C              PC WILL BE THE RATIO OF COLD CFM TO TOTAL CFM                    DDSF    41
      PC     = 0.0                                                              DDSF    42
C              DW WILL BE THE HUMIDITY CHANGE DUE TO THE                        DDSF    43
C              LATENT LOAD IN THE SPACES (LBS WTR/LB AIR)                       DDSF    44
      DW     = 0.0                                                              DDSF    45
      DTP    = 0.                                                               DDSF    46
      TR0 = 0.                                                                  DDSF    47
      TRA0 = 0.                                                                 DDSF    48
C              IF NO CFM THEN SKIP ENTIRE CALCULATION                           DDSF    49
C********************** run function : DDSF-0 **********************            DDSF    50
      IF( MSYSF(11) .NE. 0 )   CALL  FINTS( MSYSF(11), 0. )                     DDSF    51
C*******************************************************************            DDSF    52
      IF( ISKIPS   .NE. 0 )  GOTO  300                                          DDSF    53
      PLRC = 0.0                                                                DDSF    54
      PLRCC= 0.0                                                                -044c   86
      IF ((FON .EQ. 0.0) .AND. (FONh .EQ. 0.0))  GOTO 200                       DDSF    55
      CFM     = CFM + .01                                                       DDSF    56
      TRZONE  = TR                                                              DDSF    58
      CFMZONE = CFM                                                             DDSF    59
c ***          CONFRC and HONFRC should not be set to 1.0 once                  DDSF    60
c ***          the hourly fan cycling code is complete                          DDSF    61
      CONFRC = 1.0                                                              DDSF    62
      HONFRC = 1.0                                                              DDSF    63
c ***                                                                           DDSF    64
C              TR0 IS THE RETURN TEMP WHEN RCFM=0.  SET IT TO TEMP              DDSF    65
C              OF FIRST ZONE.                                                   DDSF    66
      ZP1 = ISZ                                                                 DDSF    67
      TR0 = <TNOW>                                                              DDSF    68
c                                                                               DDSF    69
c              Adjust hot and cold duct CFMs for duct air loss.                 DDSF    70
      AIRLOSSc = 0.                                                             DDSF    71
      AIRLOSSh = 0.                                                             DDSF    72
      PLENLOSS = 0.                                                             DDSF    73
      IF (<DUCTCFMLOSS> .GT. 0.)  THEN                                          DDSF    74
        IF (FON .NE. 0.)  THEN                                                  DDSF    75
          SELECT CASE (<AIR-LOSS-TYPE>)                                         -045f    1
          CASE (2)  ! proportional leakage                                      -045f    2
            AIRLOSSc = CFMC * <DUCT-AIR-LOSS>/(1.0-<DUCT-AIR-LOSS>)             -045f    3
          CASE DEFAULT  ! constant leakage                                      -045f    4
            AIRLOSSc = <DUCTCFMLOSS> * CONFRC                                   -045f    5
          END SELECT                                                            -045f    6
          CFMC = CFMC + AIRLOSSc                                                DDSF    77
          CFM  = CFM  + AIRLOSSc                                                DDSF    78
        ENDIF                                                                   DDSF    79
        IF (FONh .NE. 0.)  THEN                                                 DDSF    80
          SELECT CASE (<AIR-LOSS-TYPE>)                                         -045f    7
          CASE (2)  ! proportional leakage                                      -045f    8
            AIRLOSSh = CFMH * <DUCT-AIR-LOSS>/(1.0-<DUCT-AIR-LOSS>)             -045f    9
          CASE DEFAULT  ! constant leakage                                      -045f   10
            AIRLOSSh = <HOTDUCTCFMLOSS> * HONFRC                                -045f   11
          END SELECT                                                            -045f   12
          CFMH = CFMH + AIRLOSSh                                                DDSF    82
          CFM  = CFM  + AIRLOSSh                                                DDSF    83
        ENDIF                                                                   DDSF    84
        DuctExfil = AIRLOSSc + AIRLOSSh                                         RetLoss  1
        IF (<DUCT-ZTYPE> .EQ. 3)  THEN                                          RetLoss  2
c              loss is in plenum - must be accounted for separately             RetLoss  3
c              until after the plenum calcs                                     RetLoss  4
          PLENLOSS  = DuctExfil                                                 RetLoss  5
          DuctInfil = 0.                                                        RetLoss  6
        ELSE                                                                    RetLoss  7
c              air loss is in unconditioned zone - adjust return and/or         RetLoss  8
c              exhaust flow                                                     RetLoss  9
          TR        = TR * (RCFM+0.01)                ! return T                RetLoss 10
          DuctInfil = DuctExfil * (1.-<DUCT-AIR-LOSS-OA>)                       RetLoss 11
          RCFM      = RCFM + DuctInfil                                          RetLoss 12
          ECFM      = ECFM + DuctExfil - DuctInfil                              RetLoss 13
c              adjust summed return air quantities                              RetLoss 14
          ZP1   = <DUCT-LOSS-ZONE>                                              RetLoss 15
          ZP2   = <ZP2>                                                         RetLoss 16
          Zmult = <MULTIPLIER>                                                  RetLoss 17
          Tavg  = (<TNOW>+<TPAST>) * 0.5              ! zone T                  RetLoss 18
          TR    = TR + Tavg*DuctInfil                 ! return T                RetLoss 19
          TR    = TR / (RCFM+0.01)                    ! return T                RetLoss 20
          TRZONE= TR                                                            -41a     2
          RETR  = DuctInfil                           ! back into duct          RetLoss 21
     &              / (<CFMINF>*Zmult + DuctExfil)                              RetLoss 22
          QLSUM = QLSUM + <QL>     * RETR * Zmult     ! latent                  RetLoss 23
          CINF  = CINF  + <CFMINF> * RETR * Zmult     ! infiltration            RetLoss 24
        ENDIF                                                                   RetLoss 25
      ENDIF                                                                     DDSF    93
c              if nonzero return air                                            DDSF    94
      IF (RCFM .GT. 1.) THEN                                                    DDSF    95
c              Calc temp rise due to light load                                 DDSF    96
        DTP = QPSUM/(CONS(1)*(RCFM+1.E-6))                                      DDSF    97
        IF (<RETURN-AIR-PATH> .GT. 0)  TR  = TR + DTP                           DDSF    98
c              if no return air, set return temp to 1st zone temp               DDSF    99
      ELSE                                                                      DDSF   100
          TR = TR0                                                              DDSF   101
      END IF                                                                    DDSF   102
c              airflow returning to mixed air plenum                            DDSF   103
      RCFMmix = RCFM+PLENLOSS                                                   DDSF   104
c              reduce return air flow back to mixed plenum by amount            DDSF   105
c              taken by hot deck fan                                            DDSF   106
      IF (DDSTYPE .EQ. 2)  RCFMmix = AMAX1(0., RCFMmix-CFMH)                    DDSF   107
C                                                                               DDSF   108
C              PLENUM CALCULATIONS                                              DDSF   109
C                                                                               DDSF   110
C              IF NO PLENUMS SKIP THE PLENUM CALC                               DDSF   111
      IF(<NumPlenZONES> .EQ. 0) GOTO 15                                         HVAC2    8
C              DUMP SYSTEM END-USES SO ENDUSL CAN BE USED BY PLENUMS            DDSF   113
C              TRA WILL BE THE RETURN AIR TEMP AFTER MIXING                     DDSF   115
C              IN THE PLENUM                                                    DDSF   116
      TRA    = 0.0                                                              DDSF   117
      SUMYQ = 0.                                                                DDSF   118
      SUMFY = 0.                                                                DDSF   119
      ECFMP  = 0.                                                               DDSF   120
      QLSUMP = 0.                                                               DDSF   121
      CINFP  = 0.                                                               DDSF   122
C              LOOP THROUGH THE PLENUMS                                         DDSF   123
      Nplen = <NumPlenZONES>                                                    HVAC2    9
      DO 7  NZ=1,Nplen                                                          HVAC2   10
c              pick up the pointer to the plenum                                HVAC2   11
      ZP1    = <ISZONES-plenum> + (NZ-1)*NZD                                    HVAC2   12
C              PICH UP THE ZONE CONSTANT DATA POINTER                           DDSF   129
      ZP2    = <ZP2>                                                            DDSF   130
      ZMULT  = <MULTIPLIER>                                                     DDSF   131
      DO 111 I=1,63                                                             -044e2  10
  111 ZONED(I) = 0.0                                                            DDSF   133
C              CALL ROUTINE TO CALC ZONE TEMP AND ENERGY EXCHANGE               DDSF   134
      CALL TEMDEV(0)                                                            DDSF   135
C              FRACTION OF RETURN AIR FROM ZONES GOING TO THIS PLENUM           DDSF   136
      FPI = <AREA>/(<PLENMULT>+1.E-6)                                           DDSF   137
c              air flow into plenum from zones.  Also includes duct air         DDSF   138
c              losses which occur in the plenum.                                DDSF   139
      CFMZ   = FPI * (RCFM+PLENLOSS)                                            DDSF   140
c              air flow returning to mixed plenum in this plenum                DDSF   141
      CFMZmix = FPI * RCFMmix                                                   DDSF   142
c              plenum exhaust CFM                                               DDSF   143
      IF (<EXHAUST-SOURCE> .eq. 1) THEN                                         -046    65
        Call ZoneExhaust(1, CFMZmix/CFMCYC)  ! set EXCFM                        -046    66
        Call ZoneExhaust(9, CFMZmix)         ! power                            -046    67
      ENDIF                                                                     -046    68
      ECFMP = ECFMP + EXCFM*ZMULT                                               -044e    5
c              fraction of air flow in this plenum which is exhausted           DDSF   146
      YPI    = EXCFM / (CFMZ + 1.E-6)                                           DDSF   147
c              fraction of air flow which is returned                           DDSF   148
      RETRP  = 1. - YPI                                                         DDSF   149
c              plenum latent gain                                               DDSF   150
      QLSUMP = QLSUMP + <QL>*RETRP*ZMULT                                        DDSF   151
c              plenum infiltration                                              DDSF   152
      CINFP  = CINFP + <CFMINF>*RETRP*ZMULT                                     DDSF   153
c              pLenum temp for zero return CFM                                  DDSF   154
      TRA0   = TRA0  + <TNOW>*<AREA>*ZMULT                                      DDSF   155
c              note that SUMYQ is the load picked up by the zone return         DDSF   156
c              excluding any plenum duct air loss.  (TEMDEV accounted           DDSF   157
c              for the heat extraction by the duct air loss separately.)        DDSF   158
c              SUMYQ was adjusted by the fraction exhausted, where              DDSF   159
c              the fraction was based in part on the duct air loss.             DDSF   160
      SUMYQ  = SUMYQ + <QNOW>*RETRP*ZMULT                                       DDSF   161
      SUMFY  = SUMFY + FPI*RETRP*ZMULT                                          DDSF   162
      ZKW    = ZKW   + <ZKW>                                                    -044e    6
      <SKW>  = <SKW> + ZKW*<MULTIPLIER>                                         DDSF   165
C              SUM END-USE VARIABLES FOR THIS PLENUM                            DDSF   167
      ZMULT = <MULTIPLIER>                                                      DDSF   168
C              CALL ROUTINE TO FILL BUFFER IF THIS ZONE HAS A                   DDSF   170
C              REP-BLOCK BUFFER POINTER                                         DDSF   171
      IF((<IZNBUFP>.NE.0).AND.(IRSCH.NE.0))  CALL USERZR( ZP1,ZP2 )             DDSF   172
      IF(IRPZON .NE. 0)  CALL RPTZON                                            DDSF   173
    7 CONTINUE                                                                  DDSF   174
      TRA0 = TRA0/<PLENMULT>                                                    DDSF   175
C              ADD PLENUM HEAT TO RETURN AIR                                    DDSF   176
      IF (RCFM.GT.1.0) THEN                                                     DDSF   177
          TRA = TR + SUMYQ/(RCFM*CONS(1)*(SUMFY+1.E-6))                         DDSF   178
      ELSE                                                                      DDSF   179
          TRA = TRA0                                                            DDSF   180
      END IF                                                                    DDSF   181
C              SAVE THE PLENUM LEAVING TEMP IF AIR THROUGH THE PLENUM           DDSF   182
      IF(<RETURN-AIR-PATH> .EQ. 2)  TR = TRA                                    DDSF   183
   15 CONTINUE                                                                  DDSF   184
c                                                                               DDSF   185
c              save supply temperature at the diffuser for hourly reports       DDSF   186
      TCDFSR = TC                                                               DDSF   187
      THDFSR = TH                                                               DDSF   188
c                                                                               DDSF   189
c              TCMIN was converted in DKTEMP from a coil temperature to         DDSF   190
c              a diffuser temperature for use in VARVOL, etc. as a lower        DDSF   191
c              limit for temperature reset.  Convert back to the original       DDSF   192
c              coil temp (actually, the entering duct temp).                    DDSF   193
      IF (<DUCTUA> .GT. 0.)  THEN                                               DDSF   194
        TCMIN  = TCMINcoil                                                      DDSF   195
c              same for maximum heating temp                                    DDSF   196
        THMAX  = THMAXcoil                                                      DDSF   197
c              calculate the actual duct delta-T using this hours CFM           DDSF   198
c              and losses calc'd in TEMDEV.  First cold duct.                   DDSF   199
        IF (CFMC*CONFRC .GT. 0.)  THEN                                          DDSF   200
          DTDUCT = <QDUCT> / (CONS(1)*CFMC*CONFRC)                              DDSF   201
c              adjust coil temperature for duct temperature change.             DDSF   202
          TC     = TC - DTDUCT                                                  DDSF   203
c              if TC is below minimum controllable or achievable                DDSF   204
c              temperature, DKTEMP estimated the duct dT wrong (CFM was         DDSF   205
c              estimated too high).  Adjust CFM if so.                          DDSF   206
          IF ((TC .LT. (TCMIN-0.5)) .AND. (TC .LT. TRZONE))  THEN               DDSF   207
c              assume that the increase in CFM can be approximated by           DDSF   208
c              holding the duct loss constant, the coil temp as cold as         DDSF   209
c              possible (TCMIN), and the average cooling delta-T as the         DDSF   210
c              return air temp (at the zone) minus the supply air temp          DDSF   211
c              (at the zone).                                                   DDSF   212
            dTnew = TRZONE - (TCMIN+DUCTDT(TCMIN,CFMC,2,1,0))                   DDSF   213
            IF (ABS(dTnew) .GT. 1.E-6)  THEN                                    DDSF   214
              CFMNEW = CFMC * (TRZONE-(TC+DTDUCT)) / dTnew                      DDSF   215
            ELSE                                                                DDSF   216
              CFMNEW = CFMC                                                     DDSF   217
            ENDIF                                                               DDSF   218
            IF (DDSTYPE .NE. 2)  THEN                                           DDSF   221
c              single-fan dual-duct                                             DDSF   222
              CFMNEW = AMAX1(CFMC,                                              DDSF   223
     1                       AMIN1(CFMNEW,                                      DDSF   224
     1                            (<SUPPLY-CFM>*<MAX-FAN-RATIO>-CFMH)))         DDSF   225
            ELSE                                                                DDSF   226
c              dual-fan dual-duct                                               DDSF   227
              CFMNEW = AMAX1(CFMC, AMIN1(CFMNEW,                                DDSF   228
     1                                 <SUPPLY-CFM>*<MAX-FAN-RATIO>))           DDSF   229
            ENDIF                                                               DDSF   230
c              increase return as well.                                         DDSF   231
            RCFM = RCFM + CFMNEW-CFMC                                           DDSF   232
            RCFMmix = RCFMmix + CFMNEW-CFMC                                     DDSF   233
            CFMC = CFMNEW                                                       DDSF   234
            TC   = TCMIN                                                        DDSF   235
            DTDUCT = <QDUCT> / (CONS(1)*CFMC*CONFRC)                            DDSF   236
          ENDIF                                                                 DDSF   237
        ELSE                                                                    DDSF   238
c              case for no airflow                                              DDSF   239
          DTDUCT = 0.                                                           DDSF   240
        ENDIF                                                                   DDSF   241
c              repeat for hot duct                                              DDSF   242
        IF (CFMH*HONFRC .GT. 0.)  THEN                                          DDSF   243
          DTDUCTh = <QHOTDUCT> / (CONS(1)*CFMH*HONFRC)                          DDSF   244
          TH     = TH - DTDUCTh                                                 DDSF   245
          IF ((TH .GT. (THMAX+.5)) .AND. (TH .GT. TRZONE))  THEN                DDSF   246
            dTnew = (THMAX+DUCTDT(THMAX,CFMH,1,1,0)) - TRZONE                   DDSF   247
            IF (ABS(dTnew) .GT. 1.E-6)  THEN                                    DDSF   248
              CFMNEW = CFMH * ((TH+DTDUCTh)-TRZONE)/ dTnew                      DDSF   249
            ELSE                                                                DDSF   250
              CFMNEW = CFMH                                                     DDSF   251
            ENDIF                                                               DDSF   252
            IF (DDSTYPE .NE. 2)  THEN                                           DDSF   253
c              single-fan dual-duct                                             DDSF   254
              CFMNEW = AMAX1(CFMH,                                              DDSF   255
     1                       AMIN1(CFMNEW,                                      DDSF   256
     1                           (<SUPPLY-CFM>*<MAX-FAN-RATIO>-CFMC)))          DDSF   257
            ELSE                                                                DDSF   258
c              dual-fan dual-duct                                               DDSF   259
              CFMNEW = AMAX1(CFMH, AMIN1(CFMNEW,                                DDSF   260
     1                                 <HSUPPLY-CFM>*<HMAX-FAN-RATIO>))         DDSF   261
            ENDIF                                                               DDSF   262
c              increase return as well.                                         DDSF   263
            RCFM = RCFM + CFMNEW-CFMH                                           DDSF   264
            IF (DDSTYPE .EQ. 1)  RCFMmix = RCFMmix + CFMNEW-CFMH                DDSF   265
            CFMH = CFMNEW                                                       DDSF   266
            TH   = THMAX                                                        DDSF   267
            DTDUCTh = <QHOTDUCT> / (CONS(1)*CFMH*HONFRC)                        HVAC25   7
          ENDIF                                                                 DDSF   269
        ELSE                                                                    DDSF   270
          DTDUCTh = 0.                                                          DDSF   271
        ENDIF                                                                   DDSF   272
c              total CFM                                                        DDSF   273
        CFM = CFMC + CFMH                                                       DDSF   274
c              if supply temp(s) and cfm(s) were adjusted,                      DDSF   275
c              adjust return temp.                                              DDSF   276
        IF (CFMZONE .NE. CFM)  THEN                                             DDSF   277
c              when CFM was adjusted, the air temperature leaving zones         DDSF   278
c              was assumed to be unchanged                                      DDSF   279
          TR = TRZONE                                                           DDSF   280
c              recalculate temp rise due to light load                          DDSF   281
          DTP = QPSUM/(CONS(1)*(RCFM+1.E-6))                                    DDSF   282
          IF(<RETURN-AIR-PATH> .GT. 0)  TR  = TR + DTP                          DDSF   283
c              recalculate temp rise due to plenums - calculation is            DDSF   284
c              identical as before, except that plenum load is assumed          DDSF   285
c              to be unchanged (TEMDEV is not called).                          DDSF   286
          IF (<NumPlenZONES> .NE. 0)  THEN                                      HVAC2   13
            ECFMP  = 0.                                                         DDSF   288
            QLSUMP = 0.                                                         DDSF   289
            CINFP  = 0.                                                         DDSF   290
            TRA0   = 0.                                                         DDSF   291
            SUMYQ  = 0.                                                         DDSF   292
            SUMFY  = 0.                                                         DDSF   293
            Nplen = <NumPlenZONES>                                              HVAC2   14
            DO 77  NZ=1,Nplen                                                   HVAC2   15
c              pick up the pointer to the plenum                                HVAC2   16
              ZP1    = <ISZONES-plenum> + (NZ-1)*NZD                            HVAC2   17
              ZP2    = <ZP2>                                                    DDSF   297
              ZMULT  = <MULTIPLIER>                                             DDSF   298
              FPI    = <AREA>/(<PLENMULT>+1.E-6)                                DDSF   299
              CFMZ   = FPI * (RCFM+PLENLOSS)                                    DDSF   300
              CFMZmix  = FPI * RCFMmix                                          DDSF   301
              IF (<EXHAUST-SOURCE> .eq. 1) THEN  ! makeup by system OA          -046    69
                EXCFM = <zn.ExhCFM>/CFMCYC                                      -046    70
              ELSE                                                              -046    71
                EXCFM = 0.                                                      -046    72
              ENDIF                                                             -046    73
              ECFMP  = ECFMP + EXCFM*ZMULT                                      DDSF   303
              YPI    = EXCFM / (CFMZ+1.E-6)                                     DDSF   304
              RETRP  = 1. - YPI                                                 DDSF   305
              QLSUMP = QLSUMP + <QL>*RETRP*ZMULT                                DDSF   306
              CINFP  = CINFP  + <CFMINF>*RETRP*ZMULT                            DDSF   307
              TRA0   = TRA0   + <TNOW>*<AREA>*ZMULT                             DDSF   308
              SUMYQ  = SUMYQ  + <QNOW>*RETRP*ZMULT                              DDSF   309
              SUMFY  = SUMFY  + FPI*RETRP*ZMULT                                 DDSF   310
   77       CONTINUE                                                            DDSF   311
            TRA0 = TRA0/(<PLENMULT>+1.E-6)                                      DDSF   312
            IF (RCFM.GT.1.0) THEN                                               DDSF   313
              TRA = TR + SUMYQ/(RCFM*CONS(1)*(SUMFY+1.E-6))                     DDSF   314
            ELSE                                                                DDSF   315
              TRA = TRA0                                                        DDSF   316
            ENDIF                                                               DDSF   317
            IF(<RETURN-AIR-PATH> .EQ. 2)  TR = TRA                              DDSF   318
c              end of plenum adjustments                                        DDSF   319
          ENDIF                                                                 DDSF   320
c              end of return temp adjustments                                   DDSF   321
        ENDIF                                                                   DDSF   322
c              end of duct loss calcs.                                          DDSF   323
      ENDIF                                                                     DDSF   324
c              now include plenum duct air losses in RCFM                       DDSF   325
      RCFM   = RCFM + PLENLOSS                                                  DDSF   326
c              adjust QLSUM and CINF for plenum effects                         DDSF   327
      RETRP  = 1. - ECFMP/(RCFM+1.E-6)                                          DDSF   328
      QLSUM  = QLSUM*RETRP + QLSUMP                                             DDSF   329
      CINF   = CINF *RETRP + CINFP                                              DDSF   330
c              add plenum exhaust to the total                                  DDSF   331
      ECFM   = ECFM + AMIN1(ECFMP,RCFMmix)                                      DDSF   332
c              CFM returning from the plenum                                    DDSF   333
      RCFM   = AMAX1(0., RCFM - ECFMP )                                         DDSF   334
c              CFM returning to mixed air plenum                                DDSF   335
      RCFMmix = AMAX1(0., RCFMmix - ECFMP )                                     DDSF   336
c                                                                               DDSF   337
c              Exfiltration due to building pressurization                      DDSF   338
      IF (<ExfilCFM> .GT. 1.)  THEN                                             DDSF   339
c              must be less than the supply from the mixed air plenum           DDSF   340
        IF (DDSTYPE .EQ. 1)  THEN                                               DDSF   341
c              single fan system                                                DDSF   342
          EXFIL  = AMIN1(CFM*FON, <ExfilCFM>)                                   DDSF   343
        ELSE                                                                    DDSF   344
c              dual-fan system                                                  DDSF   345
          EXFIL  = AMIN1(CFMC*FON, <ExfilCFM>)                                  DDSF   346
        ENDIF                                                                   DDSF   347
c              exfiltration is only the amount above exhaust                    DDSF   348
        EXFIL  = AMAX1(0., EXFIL-ECFM )                                         DDSF   349
c              adjust QLSUM and CINF for exfiltration effects                   DDSF   350
        IF (EXFIL .LT. RCFMmix)  THEN                                           DDSF   351
          RETRx = 1. - EXFIL/(RCFMmix+1.E-6)                                    DDSF   352
        ELSE                                                                    DDSF   353
          RETRx = 0.                                                            DDSF   354
        ENDIF                                                                   DDSF   355
        QLSUM  = QLSUM * RETRx                                                  DDSF   356
        CINF   = CINF  * RETRx                                                  DDSF   357
c              include exfiltration in building exhaust                         DDSF   358
        ECFM   = ECFM + EXFIL                                                   DDSF   359
c              CFM returning from the plenum and/or after                       DDSF   360
c              any barometric relief                                            DDSF   361
        RCFM   = AMAX1(0., RCFM - EXFIL )                                       DDSF   362
c              CFM returning to mixed air plenum after any                      DDSF   363
c              barometric relief                                                DDSF   364
        RCFMmix = AMAX1(0., RCFMmix - EXFIL )                                   DDSF   365
      ELSE                                                                      ERV      9
c              Include duct air lost to unconditioned zone                      ERV     10
        EXFIL = DuctExfil - DuctInfil                                           RetLoss 26
      ENDIF                                                                     DDSF   366
c                                                                               DDSF   367
c              For dual-fan dual-duct system, the return fan location           DDSF   368
c              may be common to both fans (1) or only the cold deck (2)         DDSF   369
c              or may be a relief fan (3)                                       DDSF   370
      IF ((DDSTYPE .NE. 2) .OR. (<RETURN-FAN-LOC> .EQ. 1))  THEN                DDSF   371
c              all single-fan systems and dual-fan w/ common return fan         DDSF   372
        RfanCFM = RCFM                                                          DDSF   373
      ELSE                                                                      DDSF   374
c              dual-fan w/ return fan on cold deck only                         DDSF   375
        RfanCFM = RCFMmix                                                       DDSF   376
      ENDIF                                                                     DDSF   377
c              pick up supply/return fan temp rise                              DDSF   378
      IF (DDSTYPE .EQ. 1)  THEN                                                 DDSF   379
c              single fan                                                       DDSF   380
        CALL FANPWR(2,CFM,   0.,RfanCFM,DTS,DTSh,DTR)                           DDSF   381
      ELSE                                                                      DDSF   382
c              dual fan                                                         DDSF   383
        CALL FANPWR(2,CFMC,CFMH,RfanCFM,DTS,DTSh,DTR)                           DDSF   384
      ENDIF                                                                     DDSF   385
c              pick up temp rise across supply fan                              DDSF   386
      DTS    = <SUPPLY-DELTA-T>*DTS*CONS(3)                                     DDSF   387
c              if a draw-thru fan, the coil leaving temp is supply              DDSF   388
c              temp minus the rise across the supply fan                        DDSF   389
      TC2    = TC - DTS                                                         DDSF   390
      IF( <FAN-PLACEMENT> .EQ. 1)  TC = TC - DTS                                DDSF   391
c              pick up temp rise across return fan - Note that if a             DDSF   392
c              relief fan, RETURN-DELTA-T is zero.                              DDSF   393
      DTR  = <RETURN-DELTA-T>*DTR*CONS(3)                                       DDSF   394
c              add fan heat to return                                           DDSF   395
      IF ((DDSTYPE .NE. 2) .OR. (<RETURN-FAN-LOC> .NE. 2))  THEN                DDSF   396
c              all systems except dual-fan w/ cold deck return fan              DDSF   397
        TR  = TR + DTR                                                          DDSF   398
        TRh = TR                                                                DDSF   399
      ELSE                                                                      DDSF   400
c              dual-fan with return fan serving cold deck only                  DDSF   401
        TRh = TR                                                                DDSF   402
        TR  = TR + DTR                                                          DDSF   403
      ENDIF                                                                     DDSF   404
c              pick up temp rise across hot deck supply fan                     DDSF   405
      IF (DDSTYPE .EQ. 2)  THEN                                                 DDSF   406
        DTSh   = <HSUPPLY-DELTA-T>*CONS(3)*DTSh                                 DDSF   407
c              add fan heat in appropriate place                                DDSF   408
        IF(<HFAN-PLACEMENT> .EQ. 0)  THEN                                       DDSF   409
c              blow-thru fan heat goes to return                                DDSF   410
          TRh = TRh + DTSh                                                      DDSF   411
        ELSE                                                                    DDSF   412
c              draw-thru fan heat reduces leaving coil temp                     DDSF   413
          TH = TH - DTSh                                                        DDSF   414
        ENDIF                                                                   DDSF   415
      ENDIF                                                                     DDSF   416
c              Calc infiltration ratio and humidity rise due to room            DDSF   417
c              latent.  Note that CINF and QLSUM are the quantities             DDSF   418
c              that were not exhausted and make it back to the mixed            DDSF   419
c              air plenum                                                       DDSF   420
      F      = CINF/AMAX1(RCFMmix,<CFM/ACH>)                                    DDSF   421
      DW     = QLSUM/(CONS(2)*AMAX1(RCFMmix,<CFM/ACH>))                         DDSF   422
c                                                                               DDSF   423
c              Calc the airflow ratios                                          DDSF   424
      PC     = CFMC / (CFM+1.E-6)                                               DDSF   425
      PH     = 1.0 - PC                                                         DDSF   426
c                                                                               DDSF   427
c              Skip cold deck calcs if dual-fan and cold-deck fan is off        DDSF   428
      IF ((DDSTYPE .EQ. 2) .AND. (FON .EQ. 0.0))  THEN                          DDSF   429
        IF(F .GT. 0.0)  THEN                                                    DDSF   430
          WM = HUMRAT + DW/F                                                    DDSF   431
        ELSE                                                                    DDSF   432
          WM = HUMRAT + DW                                                      DDSF   433
        ENDIF                                                                   DDSF   434
        WR = WM                                                                 DDSF   435
        <CL_COIL_EDB> = TR - DTR                                                HVAC1    4
        GOTO 26                                                                 DDSF   437
      ENDIF                                                                     DDSF   438
c              for dual-fan system, let CFM temporarily represent only          DDSF   439
c              the flow thru the economizer/cold deck                           DDSF   440
      IF (DDSTYPE .EQ. 2)  CFM = CFMC + 1.0E-6                                  DDSF   441
c                                                                               DDSF   442
c              Calc minimum outside air quantity                                -035     6
      POM    = <MIN-OUTSIDE-AIR>                                                -035     7
      SH = SchVal(<MIN-AIR-SCH>, -999.)                                         Time   239
      IF (SH .NE. -999.0)  POM = AMAX1(0.0,AMIN1(1.0,SH))                       Time   240
      IF(<MIN-OA-METHOD> .eq. 0) THEN                                           -035    13
        POM = AMIN1(1.,AMAX1(POM*<SUPPLY-CFM>,ECFM)/CFM)                        -035    14
      ELSEIF((<MIN-OA-METHOD> .lt. 0) .AND. (SH .EQ. -999.0))  THEN             -044c   87
        POM = AMIN1(1.,AMAX1(<DCVOAcfmS>,ECFM)/CFM)                             -044c   88
        IF(<MIN-OA-METHOD> .eq. -2)                                             -044c   89
     $    POM = AMIN1(1.,POM/(1.0+POM-<DCVOAcfmFracCrit>))                      -044c   90
      ELSE                                                                      -035    15
        POM = AMIN1(1.,AMAX1(POM*CFM,ECFM)/CFM)                                 -035    16
      ENDIF                                                                     -035    17
C                                                                               DDSF   453
C              MIXED AIR TEMP CALCULATION                                       DDSF   454
C                                                                               DDSF   455
C              CALL ROUTINE TO CALC MIX AIR TEMP(TM)                            DDSF   456
C              AND OUTSIDE AIR RATIO(PO)                                        DDSF   457
C              GET THE MAXIMUM HUMIDITY SET POINT IN LBS/LBS                    DDSF   458
      WRMAX = WFUNC(TR, <MAX-HUMIDITY>, PATM)                                   DDSF   459
      CALL ECONO(2,TC2,POM)                                                     DDSF   460
c                                                                               DDSF   461
c              Relief fan power consumption                                     DDSF   462
      IF (<RETURN-FAN-LOC> .EQ. 3)  THEN                                        DDSF   463
        RfanCFM = AMAX1(0., RCFMmix - CFM*(1.-POA) )                            DDSF   464
        CALL FANPWR(1, x, x, RfanCFM, x, x, x)                                  DDSF   465
      ENDIF                                                                     DDSF   466
C                                                                               DDSF   467
C              PRE-HEAT                                                         DDSF   468
C                                                                               DDSF   469
      IF((TM .LT. <PREHEAT-T>) .AND. (HON .GT. 0.))  THEN                       DDSF   470
        QHP  = AMAX1(CONS(1)*CFM*(TM-<PREHEAT-T>),                              HVAC1    5
     $               <PREHEAT-CAPACITY>*CapRph)                                 HVAC1    6
c              save for circulation loop calc                                   HVAC1    7
        <PHT_COIL_CFM> = CFM                                                    HVAC1    8
        <PHT_COIL_EDB> = TM                                                     HVAC1    9
        <PHT_COIL_CYCLE> = CFMCYC                                               HVAC10   5
        <PHT_COIL_Q>   = QHP                                                    HVAC1   10
c              mixed air temp after preheat                                     HVAC1   11
        TM   = TM - QHP/(CONS(1)*CFM)                                           DDSF   472
      ENDIF                                                                     DDSF   473
C              SAVE MIX AIR TEMP FOR NEXT HOUR CALC                             DDSF   474
      <CL_COIL_EDB> = TM                                                        HVAC1   12
c              for dual-fan system, change CFM back to the total                DDSF   476
c              system airflow                                                   DDSF   477
      CFM = CFMC + CFMH                                                         DDSF   478
C                                                                               DDSF   479
C              CALCULATE THE COIL LOADS                                         DDSF   480
C                                                                               DDSF   481
c              add supply fan heat to mixed air temp for blow-thru fan          DDSF   482
      IF (<FAN-PLACEMENT> .EQ. 0)  TM = TM + DTS                                DDSF   483
C              CALC THE AMOUNT OF AIR THAT WIPES THE HEATING COIL               DDSF   484
C              BEFORE IT CROSS THE COOLING COIL.  ASSUME THIS AOUNT             DDSF   485
C              OF AIR IS THEN RAISED TO THE HEATING SUPPLY TEMP                 DDSF   486
c              applies only to single-fan systems                               DDSF   487
      PCH    = 0.0                                                              DDSF   488
      IF (<HCOIL-WIPE-FCFM> .NE. 0  .AND.  DDSTYPE .NE. 2                       HVAC12   5
     $                              .AND.  CapRh .NE. 0.)                       HVAC12   6
     1PCH    = CVAL(<HCOIL-WIPE-FCFM>,PC,PC)*HON                                DDSF   490
      TMC    = PCH*TH + (1.0-PCH)*TM                                            DDSF   491
c              part load CFM of cooling coil                                    DDSF   492
      PLRCFM = CFMC / <RATED-CFM>                                               DDSF   493
C              COIL BYPASS FACTOR                                               DDSF   494
      IF (<CONDENSER-TYPE> .eq. 3) THEN                                         -045h    6
        EWB = Max(<CL_COIL_EWB>, <COOL-FT-MIN>)                                 -045h    7
      ELSE                                                                      -045h    8
        EWB = Max(<CL_COIL_EWB>, <COOL-FT-MIN>-10.)                             -045h    9
      ENDIF                                                                     -045h   10
      CBF2   = CVAL(<COIL-BF-FCFM>,PLRCFM,PLRCFM)                               DDSF   496
      T1 = DBT                                                                  DDSF   497
      IF (ICODE .LT. 19)  T1 = TMC                                              DDSF   498
      IF (IPCCF .gt. 0)  T1 = PCCEDB                                            -045h   11
      T1 = AMAX1(T1,<COOL-FT-MIN>)                                              DDSF   500
      CBF1 = CVAL(<COIL-BF-FT>,EWB,T1)                                          DDSF   501
      CBF    = AMIN1(AMAX1(<COIL-BF>*CBF1*CBF2,0.001),.99)                      REFG     1
      CBFD   = CBF                                                              DDSF   503
C              Calculate the coil surface temperature.  Set the coil            DDSF   504
C              exit temp when the coil is active                                DDSF   505
c              TCMIN represents the temperature entering the duct.              DDSF   506
c              convert to leaving coil temp if a draw-thru fan                  DDSF   507
      TDM    = TCMIN                                                            DDSF   508
      IF (<FAN-PLACEMENT> .EQ. 1)  TDM = TDM - DTS                              DDSF   509
C              To decide if a unit is cycling, we need to estimate the          DDSF   510
C              sensible part load.                                              DDSF   511
      QCM2 = CVAL(<COOL-SH-FT>,EWB,T1)                                          DDSF   512
c              adjust capacity ratio for circulation loop capacity              HVAC1   22
      QCM2 = QCM2 * CapRc                                                       HVAC1   23
      QCS = <COOL-SH-CAP>*QCM2                                                  DDSF   513
      IF ( ICODE .EQ. 20 )                                                      -034     3
     $  QCS = AMAX1( 0.0,                                                       -034     4
     $               QCS + CONS(1)*CFMC*(1.-CBF)                                -034     5
     $                            *AMAX1(-20.,AMIN1(20.,TMC-80.)) )             -034     6
      PLRCS = 0.                                                                DDSF   516
      IF (QCS .GT. 0.) PLRCS = CONS(1)*CFMC*(TMC-TC)/QCS                        DDSF   517
C              COIL SURFACE CONDITION                                           -031     1
      PLRCS  = AMAX1(0.,AMIN1(1.,PLRCS))                                        -031     2
      CUR(1) = AMAX1(0.01,AMIN1(1.,CVAL(<COIL-BF-FPLR>,PLRCS,PLRCS)))           -031     3
      CBFD   = CBF + (1.0-CUR(1))*(1.0-CBF)                                     -031     4
      TSURF  = (TDM-CBFD*TMC)/(1.-CBFD)                                         -031     5
      WSURF  = WFUNC(TSURF,100.,PATM)                                           -031     6
      IF(TSURF .NE. TMC)                                                        -031     7
     $  CBF    = AMAX1(0.01,AMIN1(1.0,(TSURF-TC)/(TSURF-TMC)))                  -031     8
      WMSAT = WFUNC(TM,100.,PATM)                                               -113     4
      WRSAT = WFUNC(TR,100.,PATM)                                               -113     5
C              CALC MIX AIR HUMIDITY (LBS WTR/LB AIR)                           DDSF   529
      IF((POA.LE.0.0).AND.(F.LE.0.01))  THEN                                    DDSF   530
C              NO OUTSIDE AIR CASE                                              DDSF   531
        IF(F .GT. 0.0)  THEN                                                    DDSF   532
          WM = HUMRAT + DW/F                                                    DDSF   533
        ELSE                                                                    DDSF   534
          WM = HUMRAT + DW                                                      DDSF   535
        ENDIF                                                                   DDSF   536
      ELSE                                                                      DDSF   537
        IF (DDSTYPE .NE. 2)  THEN                                               DDSF   538
c              single-fan system                                                DDSF   539
          WM = (POA*WOA*(1.+F)+(F*HUMRAT+DW)*(1.-POA)) /                        DDSF   540
     1                                            AMAX1(F+POA, 1.E-6)           DDSF   541
        ELSE                                                                    DDSF   542
c              dual-fan system (same as single-fan single-duct)                 DDSF   543
          WM = ((1.+F)*POA*WOA + (1.-POA)*(DW+F*HUMRAT))/(F+POA)                DDSF   544
        ENDIF                                                                   DDSF   545
      ENDIF                                                                     DDSF   546
      WM = AMIN1(WMSAT,WM)                                                      -113     6
      IF((CON*CapRc .EQ. 0.0) .OR. (PC .LE. 0.01))  GOTO 25                     HVAC12   7
C              IF WM IS GREATER THAN THE COIL SURFACE HUMIDITY                  DDSF   548
C              SOME DEHUMIDIFICATION WILL TAKE PLACE                            DDSF   549
      IF(WM .GT. WSURF)  GOTO 30                                                DDSF   550
C              CALC RETURN AIR HUMIDITY ASSUMING NO CHANGE                      DDSF   551
C              ACROSS THE COOLING COIL. THIS REPRESENTS THE                     DDSF   552
C              AVERAGE SPACE CONDITION                                          DDSF   553
   25 IF ((F+POA) .GT. 0.) THEN                                                 DDSF   554
        IF (DDSTYPE .NE. 2)  THEN                                               DDSF   555
c              single-fan system                                                DDSF   556
          WR = (POA*WOA + F*HUMRAT + DW) / AMAX1(POA+F, 1.E-6)                  DDSF   557
        ELSE                                                                    DDSF   558
c              dual-fan system                                                  DDSF   559
          WR = (POA*WOA + F*HUMRAT + DW) / (POA+F)                              DDSF   560
        ENDIF                                                                   DDSF   561
      ELSE                                                                      DDSF   562
        WR = HUMRAT + DW                                                        DDSF   563
      ENDIF                                                                     DDSF   564
      WR = AMIN1(WRSAT,WR)                                                      -113     7
C              IF WR IS LESS THAN SET POINT HUMIDIFICATION IS NEEDED            DDSF   565
      WRMIN  = WFUNC(TR,<MIN-HUMIDITY>,PATM)                                    DDSF   566
C              ONLY HUMIDIFY IF OUTSIDE AIR IS USED                             DDSF   567
      IF((WR .LT. WRMIN) .AND. ((F+POA) .GT. 0.0))  GOTO 20                     DDSF   568
C                                                                               DDSF   569
C              ONLY SENSIBLE COOLING REQUIRED                                   DDSF   570
C                                                                               DDSF   571
C              CALC ENTHALPY CHANGE ACROSS COOLING COIL                         DDSF   572
      QC     = (H(TMC,WM)-H(TC,WM))                                             DDSF   573
C              WEIGHT THE QC BY THE RATIO OF CFM THROUGHT COIL                  DDSF   574
      QC     = PC*QC                                                            DDSF   575
C              CALC ENTHALPY CHANGE ACROSS HEATING COIL                         DDSF   576
   26 IF (DDSTYPE .NE. 2)  THEN                                                 DDSF   577
c              single-fan - air entering coil is at mixed condition             DDSF   578
        QH   = (PH+PCH*PC) * (H(TM,WM)-H(TH,WM))                                -131   133
      ELSE                                                                      DDSF   580
c              dual-fan - air entering coil is at return condition              DDSF   581
        QH   = PH * (H(TRh,WR)-H(TH,WR))                                        -131   134
      ENDIF                                                                     DDSF   583
C              SET THE HUMID/DEHUM AMOUT TO ZERO                                DDSF   584
      WW     = 0.0                                                              DDSF   585
C              WCOIL IS ALWAYS LEFT WITH THE COOLING COIL                       DDSF   586
C              LEAVING HUMIDITY                                                 DDSF   587
      WCOIL  = WM                                                               DDSF   588
      GOTO 50                                                                   DDSF   589
C                                                                               DDSF   590
C              HUMIDIFICATION CALCULATION                                       DDSF   591
C                                                                               DDSF   592
C              CALC MINIMUM MIX AIR HUMIDITY TO MEET SET POINT                  DDSF   593
   20 IF (DDSTYPE .NE. 2)  THEN                                                 DDSF   594
c              single-fan system                                                DDSF   595
        WMM  = WRMIN*(1.0+F) - DW - F*HUMRAT                                    DDSF   596
      ELSE                                                                      DDSF   597
c              dual-fan system                                                  DDSF   598
        WMM = (1.+F)*WRMIN - DW - F*HUMRAT                                      DDSF   599
      ENDIF                                                                     DDSF   600
C              MAKE SURE THIS IS NOT ABOVE SATURATION FOR                       DDSF   601
C              THE SUPPLY AIR TEMPERATURE                                       DDSF   602
      WMM    = AMIN1(WMM,WFUNC(PH*TH+PC*TC,100.0,PATM))                         DDSF   603
C              SAVE THE COOLING COIL LEAVING CONDITION                          DDSF   604
      WCOIL  = WMM                                                              DDSF   605
C              CALC MIX AIR HUMIDITY AT THIS MINIMUM                            DDSF   606
      WM = POA*WOA + (1.-POA)*WRMIN                                             DDSF   607
C              CALC ENTHALPY CHANGE ACROSS COOLING COIL                         DDSF   608
      QC     = (H(TMC,WMM)-H(TC,WMM))                                           DDSF   609
C              WEIGHT QC BY THE RATIO OF COLD CFM T TOTAL                       DDSF   610
      QC     = QC*PC                                                            DDSF   611
C              CALC ENTHALPY CHANGE ACROSS THE HEATING COIL                     DDSF   612
      IF (DDSTYPE .NE. 2)  THEN                                                 DDSF   613
c              single-fan system                                                DDSF   614
        QH   = (PH+PCH*PC) * (H(TM,WMM)-H(TH,WMM))                              -131   135
      ELSE                                                                      DDSF   616
c              dual-fan system                                                  DDSF   617
        QH   = PH * (H(TRh,WRMIN)-H(TH,WRMIN))                                  -131   136
      ENDIF                                                                     DDSF   619
C              CALC HUMIDIFICATION AMOUNT(LBS WTR/LB AIR)                       DDSF   620
      WW     = AMIN1(0.0,WM-WMM)                                                DDSF   621
C              CALC HUMIDIFICATION ENERGY                                       DDSF   622
      QHUM   = WW*CONS(2)*CFM                                                   DDSF   623
      WR = WRMIN                                                                DDSF   624
      GOTO 50                                                                   DDSF   625
C                                                                               DDSF   626
C              DEHUMDIFICATION REQUIRED                                         DDSF   627
C                                                                               DDSF   628
   30 IF (DDSTYPE .NE. 2)  THEN                                                 DDSF   629
c              single-fan system                                                DDSF   630
        WR = ((PH+PC*CBF)*POA*WOA + PC*(1.-CBF)*WSURF + DW + F*HUMRAT)          DDSF   631
     1       / AMAX1((1. + F - (1.-POA)*(PH+PC*CBF)), 1.E-6)                    DDSF   632
      ELSE                                                                      DDSF   633
c              dual-fan system                                                  DDSF   634
        WR = (CBF*POA*WOA + (1.-CBF)*WSURF + DW + F*HUMRAT)                     DDSF   635
     1       / (1. + F - CBF*(1.-POA))                                          DDSF   636
      ENDIF                                                                     DDSF   637
      WR = AMIN1(WRSAT,WR)                                                      -113     8
      WM = POA*WOA + (1.-POA)*WR                                                DDSF   638
      WCOIL  = CBF*WM + (1.0-CBF)*WSURF                                         DDSF   639
C              IF THE RETURN CONDITION IS BELOW THE MAX SETPOINT                DDSF   640
C              OR THE COIL TEMP IS ALREADY AT ITS MINIMUM SKIP                  DDSF   641
      IF((<MAX-HUMIDITY> .GE. 99.) .OR. (WR .LE. WRMAX) .OR.                    DDSF   642
     $   (TC .LE. TDM+0.5))  GOTO 35                                            DDSF   643
C              NEED TO CALC THE TEMP TO WHICH THE SUPPLY AIR                    DDSF   644
C              IS RESET IN ORDER TO HOLD THE HUMIDITY LEVEL                     DDSF   645
C              AT THE MAX SETPOINT                                              DDSF   646
      IF (DDSTYPE .NE. 2)  THEN                                                 DDSF   647
c              single-fan system - coil leaving condition required              DDSF   648
c              to meet the setpoint                                             DDSF   649
        WCOL = (WRMAX*(1.+F-PH*(1.-POA)) - PH*POA*WOA - F*HUMRAT - DW)          DDSF   650
     1           / (PC+0.01)                                                    DDSF   651
c              calc the minimum possible exit condition                         DDSF   652
        WCOLM = (   (1.-CBFD)*(1.+F-PH*(1.-POA))*WSURF + CBFD*(F*POA*           DDSF   653
     1           (WOA-HUMRAT)+F*HUMRAT+POA*WOA+(1.-POA)*DW)   ) /               DDSF   654
     2           AMAX1((1.+ F-(1.-POA)*(PH+PC*CBFD)), 1.E-6)                    DDSF   655
      ELSE                                                                      DDSF   656
c              dual-fan system - coil leaving condition required                DDSF   657
c              to meet the setpoint                                             DDSF   658
        WCOL = (1.0+F)*WRMAX - DW - F*HUMRAT                                    DDSF   659
c              calc the minimum possible exit condition                         -113     9
        WCOLM = (CBFD*((1.+F)*POA*WOA + (1.-POA)*(F*HUMRAT+DW)) +               DDSF   661
     $         (1.-CBFD)*(1.+F)*WSURF) / (1.+F-CBFD*(1.-POA))                   DDSF   662
      ENDIF                                                                     DDSF   663
      WCOLM  = AMAX1(AMIN1(TMSAT,WCOLM),WSURF)                                  -113    10
C              MAKE SURE WHAT WE TRY FOR IS NOT BELOW MINIMUM                   DDSF   664
      WCOL   = AMAX1(WCOL,WCOLM)                                                DDSF   665
C              USE A STRAIGHT LINE APPROX TO CALC NEW COIL                      DDSF   666
C              DISCHARGE TEMP                                                   DDSF   667
      IF( WCOIL-WCOLM .gt. 1E-4 ) THEN                                          DDSF   668
        DTHUM  = ((WCOIL-WCOL)/(WCOIL-WCOLM))*(TC-TDM)                          DDSF   669
      ELSE                                                                      DDSF   670
        WCOL = WCOIL                                                            DDSF   671
        GOTO 35                                                                 DDSF   672
      ENDIF                                                                     DDSF   673
C              ADJUST PC FOR LESS AIR DUE TO REDUCED SUPPLY TEMP                DDSF   674
C              APPROX THIS BY ASSUMING THAT THE AMOUNT OF REDUCTION             DDSF   675
C              IN THE COLD AIR IS THE REDUCTION IN TEMP DIVIDED BY              DDSF   676
C              THE AVERAGE DELTA T FOR COOLING.  WE APPROX THE DELTA            DDSF   677
C              T FOR COOLING USING THE RETURN AIR TEMP MINUS THE                DDSF   678
C              SUPPLY TEMP                                                      DDSF   679
      PHH    = PH                                                               DDSF   680
      PCC    = PC                                                               DDSF   681
      IF(PH .LE. 0.0)  GOTO 31                                                  DDSF   682
      PCM    = (<SUPPLY-CFM>/(CFMC+.01))*<MAX-FAN-RATIO>                        DDSF   683
      PCC    = (1.0-(DTHUM/((TR-DTP)-(TC+DTDUCT)+0.001)))                       DDSF   684
      PCC    = PC*AMAX1(0.0,AMIN1(PCM,PCC))                                     DDSF   685
C              WE NOW SEE IF EXTA AIR NEEDS TO BE PROVIDED FROM                 DDSF   686
C              THE HOT DUCT OR IF THE CFM CAN BE REDUCED TO KEEP                DDSF   687
C              THE SENSIBLE TO THE ZONES THE SAME                               DDSF   688
      PHH    = (<MIN-CFM-RATIO>*<SUPPLY-CFM>-(PH+PCC)*CFM)/CFM                  DDSF   689
      PHH    = AMAX1(0.0,PHH)                                                   DDSF   690
      PHH    = PHH + PH                                                         DDSF   691
C              SET COLD DECK TEMP TO NEW VALUE                                  DDSF   692
   31 TC     = TC - DTHUM                                                       DDSF   693
C              SAVE SENSIBLE DEHUMIDIFICATION ENERGY                            DDSF   694
      QDHUM  = -CONS(1)*DTHUM*CFM*PCC*HON                                       DDSF   695
      IF (CapRh .EQ. 0.)  QDHUM = 0.                                            HVAC12   8
C              CALC RETURN AIR CONDITION                                        DDSF   696
      IF (DDSTYPE .NE. 2)  THEN                                                 DDSF   697
c              single-fan system                                                DDSF   698
        WR = (PH*POA*WOA + PC*WCOL + DW + F*HUMRAT) /                           DDSF   699
     1                                 AMAX1((1.+F-PH*(1.-POA)), 1.E-6)         DDSF   700
      ELSE                                                                      DDSF   701
c              dual-fan system                                                  DDSF   702
        WR = (WCOL + DW + F*HUMRAT) / (1.0 + F)                                 DDSF   703
      ENDIF                                                                     DDSF   704
      WR = AMIN1(WRSAT,WR)                                                      -113    11
      WCOIL  = WCOL                                                             DDSF   705
C              NOW RESET PH AND PC TO RECALCULATED VALUES                       DDSF   706
      PH     = PHH                                                              DDSF   707
      PC     = PCC                                                              DDSF   708
C              ADJUST FAN ENERGY IF NEEDED                                      DDSF   709
      IF(ABS(1.0-(PH+PC)) .LE. 0.01)  GOTO 34                                   DDSF   710
      X      = (1.0-(PH+PC))*(SFKW+RFKW)                                        DDSF   711
      <SKW>  = <SKW>  - X                                                       DDSF   712
      FANKW  = FANKW  - X                                                       DDSF   713
      JEM       = <VENT-E-MS>                                                   HVAC6   78
      <VENT-EM> = <VENT-EM> - X                                                 HVAC6   79
   34 CONTINUE                                                                  DDSF   715
C              CALC MIX AIR HUMIDITY                                            DDSF   716
      WM = POA*WOA + (1.-POA)*WR                                                DDSF   717
   35 CONTINUE                                                                  DDSF   718
C              CALC ENTHALPY CHANGE ACROSS HEATING COIL                         DDSF   719
      IF (DDSTYPE .NE. 2)  THEN                                                 DDSF   720
c              single-fan - air entering coil is at mixed condition             DDSF   721
        QH   = (PH+PCH*PC) * (H(TM,WM)-H(TH,WM))                                -131   137
      ELSE                                                                      DDSF   723
c              dual-fan - air entering coil is at return condition              DDSF   724
        QH   = PH * (H(TRh,WR)-H(TH,WR))                                        -131   138
      ENDIF                                                                     DDSF   726
C              CALC ENTHALPY CHANGE ACROSS COOLING COIL                         DDSF   727
C              NOTE ENTERING AND LEAVING HUMIDITY CHANGE                        DDSF   728
      QC     = (H(TMC,WM)-H(TC,WCOIL))                                          DDSF   729
C              WEIGHT QC BY RATIO OF COLD CFM                                   DDSF   730
      QC     = QC*PC                                                            DDSF   731
C              CALC HUMDIDTY CHANGE ACROSS COOLING COIL                         DDSF   732
      WW     = PC*(WM-WCOIL)                                                    DDSF   733
C                                                                               DDSF   734
C              CALCULATE TOTAL COIL LOADS                                       DDSF   735
C                                                                               DDSF   736
C              MAKE SURE QH IS ONLY HEATING                                     -044c2  18
   50 QH     = AMIN1(0.,QH)                                                     -044c2  19
C              SEE IF QC IS REALLY PREHEAT                                      DDSF   741
      QHH    = AMIN1(QC,0.)                                                     DDSF   742
C              MAKE SURE QC IS ONLY COOLING                                     DDSF   743
      QC     = AMAX1(0.,QC)                                                     DDSF   744
C              CONVERT QH TO TOTAL HEATING LOAD ON COIL                         DDSF   745
      QH     = (QHH+QH)*CONS(4)*CFM*HON                                         -044c2  20
      IF (CapRh .EQ. 0.)  QH = 0.                                               HVAC12   9
C              CONVERT QC TO TOTAL COOLING LOAD ON COIL                         DDSF   747
      QC     = QC*CONS(4)*CFM*CON                                               -044c2  21
      IF (CapRc .EQ. 0.)  QC = 0.                                               HVAC12  11
C              CONVERT WW TO TOTAL WATER IN LBS                                 DDSF   749
      WW     = CONS(4)*CFM*WW                                                   -044c2  22
C              IGNORE ALL COIL LOADS LESS THAN 1 BTU/HR                         DDSF   751
      IF( QC .LT. 1.0 )  THEN                                                   DDSF   752
        QC = 0.0                                                                DDSF   753
        WW = 0.0                                                                DDSF   754
      ENDIF                                                                     DDSF   755
      IF( QH .GT. -1.0 ) THEN                                                   DDSF   756
        QH = 0.0                                                                DDSF   757
      ENDIF                                                                     DDSF   758
      QCLAT  = AMAX1(0.0,WW*1061.0)                                             DDSF   759
      <PASTWR> = WR                                                             DDSF   760
      <PASTWOA> = WOA                                                           DDSF   763
c              Save TM and WM for CONS() terms next hour                        -044c2  23
      <sy.Tmix1> = TMC                                                          -044c2  24
      <sy.Wmix1> = WM                                                           -044c2  25
      IF (<sy.FanOnPast> .lt. 0.)  THEN  ! start-up hour                        -044c2  26
        <sy.TmixStart> = TMC                                                    -044c2  27
        <sy.WmixStart> = WM                                                     -044c2  28
      ENDIF                                                                     -044c2  29
C              PICK UP REFERENCE TEMP AND MAKE SURE IT IS RANGE                 DDSF   766
      IF (<CONDENSER-TYPE> .eq. 3) THEN                                         -045h   12
        EWB = Max(<CL_COIL_EWB>, <COOL-FT-MIN>)                                 -045h   13
      ELSE                                                                      -045h   14
        EWB = Max(<CL_COIL_EWB>, <COOL-FT-MIN>-10.)                             -045h   15
      ENDIF                                                                     -045h   16
      QCM1 = CVAL(<COOL-CAP-FT>,EWB,T1)                                         DDSF   768
      QCM2 = CVAL(<COOL-SH-FT>,EWB,T1)                                          DDSF   769
c              adjust capacity ratios for circulation loop capacity             HVAC1   31
      QCM1 = QCM1 * CapRc                                                       HVAC1   32
      QCM2 = QCM2 * CapRc                                                       HVAC1   33
      QCT    = <COOLING-CAPACITY>*QCM1                                          DDSF   770
      QCS    = <COOL-SH-CAP>*QCM2                                               DDSF   771
      IF(ICODE .GE. 19)                                                         -034     7
     $  QCS = AMAX1( 0.0,                                                       -034     8
     $               QCS + CONS(1)*PC*CFM*(1.0-CBFD)                            -034     9
     $                            *AMAX1(-20.0,AMIN1(20.0,TMC-80.0)) )          -034    10
      QCS    = AMIN1(QCS,QCT)                                                   DDSF   775
C              PART LOAD RATIO                                                  DDSF   776
      PLRC   = QC/(QCT+1.0)                                                     DDSF   777
C              SAVE SENSIBLE PLR FOR USE NEXT HOUR                              DDSF   778
      <PASTPLRC> = (QC-QCLAT)/(QCS+1.0)                                         DDSF   779
C              IF NOT A DX COOLING UNIT SKIP                                    DDSF   780
      IF(ICODE .LT. 19)  GOTO 200                                               DDSF   781
C              IF ABOVE FAN ON TEMP SET KW                                      DDSF   782
      OFKW   = 0.0                                                              DDSF   783
      IF((DBT.GE.<OUTSIDE-FAN-T>).AND.(CON.GT.0.0))                             DDSF   784
     $       OFKW = <OUTSIDE-FAN-ELEC>*<COOLING-CAPACITY>*0.001                 DDSF   785
C              IF NO LOAD AND AN INTERMITTANT FAN SET TO ZERO                   DDSF   786
      IF((<OUTSIDE-FAN-MODE>.EQ.1).AND.(QC.LE.0.0))  OFKW = 0.0                 DDSF   787
C              IF NO COOLING SKIP                                               DDSF   788
      IF(QC .LT. 1.0)  GOTO 150                                                 DDSF   789
C              CALC EIR ADJUSTMENTS                                             DDSF   790
C              PART LOAD THE COMPRESSOR SEES                                    DDSF   791
      PLRCC  = AMAX1(PLRC, <MIN-UNLOAD-RATIO>, hgbmin)                          -044d6   1
C              EIR ADJUSTMENTS                                                  DDSF   793
      EIRM1 = CVAL(<COOL-EIR-FT>,EWB,T1)                                        DDSF   794
      EIRM2  = CVAL(<COOL-EIR-FPLR>,PLRCC,PLRCC)                                DDSF   795
C              ELEC INPUT RATIO                                                 DDSF   796
      EIR    = <COOLING-EIR>*(EIRM1*EIRM2)                                      DDSF   797
      QCKW   = EIR*QCT                                                          DDSF   798
      IF(IPCCF .EQ. 1)  OFKW = OFKW                                             DDSF   799
     $                  + <EVAP-PCC-ELEC>*<COOLING-CAPACITY>*0.001              DDSF   800
C              IF NOT BELOW CYCLING RATIO SKIP                                  DDSF   801
              if( PLRC .ge. hgbmin )    goto  120                               DDSF   802
C              ADJUST ELEC FOR ONTIME                                           DDSF   803
                QCKW = QCKW * (PLRC / hgbmin)                                   DDSF   804
C              IF FAN IS INTERMITTENT TURN IT OFF WITH COMPRESSOR               DDSF   805
      IF(<OUTSIDE-FAN-MODE> .EQ. 1)                                             DDSF   806
     1          OFKW = OFKW * (PLRC / hgbmin)                                   DDSF   807
      IF (<OUTSIDE-FAN-CFLT> .ne. 0) THEN                                       -047k   18
        CUR( 9) = CVAL(<OUTSIDE-FAN-CFLT>,PLRC,T1)                              -044d6   3
        OFKW    = OFKW*CUR(9)                                                   -044d6   4
      ENDIF                                                                     -044d6   5
c                                                                               HVAC13   1
c              Adjust heating for recovered condensor heat                      HVAC13   2
  120 QCWAS  = -(QC+QCKW) * <MAX-COND-RCVRY>                                    HVAC13   3
      QCWASU = AMAX1(QH, QCWAS)                                                 HVAC13   4
      QH     = QH - QCWASU                                                      HVAC13   5
c              if superheat available for DHW, calculate amount                 HVAC13   6
      IF (<HTREC-DW-HEATER> .GT. 0)  THEN                                       HVAC14  22
c              amount of waste heat left after space heat recovery              HVAC13   8
        Qhtrej = -(QC+QCKW) - QCWASU                                            HVAC13   9
c              superheat                                                        HVAC13  10
        CUR(6) = CVAL(<COOL-WH-FT>,EWB,T1)                                      HVAC13  11
        Qsuper = -CUR(6)*<COOL-WASTE-HEAT>*(QC+QCKW)                            HVAC13  12
c              DHW gets only the superheat, and only if any left                HVAC13  13
c              after space heat recovery.  This assumes that space              HVAC13  14
c              heat will take lower quality heat first, and leave               HVAC13  15
c              as much superheat for dhw as possible.                           HVAC13  16
        Qsuper = AMAX1(Qsuper, Qhtrej)                                          HVAC13  17
c              sum into water heater available waste heat recovery              HVAC13  18
        JDW    = <HTREC-DW-HEATER>                                              HVAC14  23
c              actual amount recovered can't be determined until dw-heater      HVAC13  20
c              is simulated - estimate now for hourly reports                   HVAC13  21
        QCWASU = QCWASU + AMAX1(Qsuper,                                         HVAC13  22
     &                          AMIN1(0.,<dw;Qask>-<dw;Q_RECVR>))               HVAC16   3
        <dw;Q_RECVR> = <dw;Q_RECVR> + Qsuper                                    HVAC16   4
c              total waste heat available (for hourly reports)                  HVAC13  25
        QCWAS  = QCWAS + Qsuper                                                 HVAC13  26
      ENDIF                                                                     HVAC13  27
      QCKW = QCKW * KWBTU                                                       DDSF   819
      IF( ISSPF .EQ. 1)  THEN                                                   -131   139
        QCCKWS = QCKW                                                           -131   140
        PLRCS  = PLRCC                                                          -131   141
        QCCMPS = QC                                                             -131   142
      ENDIF                                                                     -131   143
      SKWQC  = SKWQC + QCKW                                                     DDSF   820
      <SKW> = <SKW> + OFKW + QCKW                                               DDSF   821
      FANKW = FANKW + OFKW                                                      DDSF   822
C              END-USE DATA                                                     DDSF   823
      JEM       = <COOL-E-MS>                                                   HVAC6   80
      <COOL-EM> = <COOL-EM> + QCKW                                              HVAC6   81
      JEM        = <HTREJ-E-MS>                                                 HVAC6   82
      <HTREJ-EM> = <HTREJ-EM> + OFKW                                            HVAC6   83
  150 CONTINUE                                                                  DDSF   826
  200 CONTINUE                                                                  DDSF   827
      IF((ICODE.LT.19).OR.(DBT.GT.<CRANKCASE-MAX-T>))  GOTO 210                 DDSF   828
      T      = PLRC                                                             DDSF   829
      IF(<HEAT-SOURCE> .EQ. 4)  T = T + PLRH                                    DDSF   830
      IF((T .GT. 0.) .AND. (<MIN-HGB-RATIO> .LT. 1.))  THEN                     -044c   91
        IF((T .GE. <MIN-HGB-RATIO>) .OR. (<MIN-HGB-RATIO> .LE. 0.)) THEN        -044c   92
          T    = 1.0                                                            -044c   93
        ELSE                                                                    -044c   94
          T    = T/<MIN-HGB-RATIO>                                              -044c   95
        ENDIF                                                                   -044c   96
      ENDIF                                                                     -044c   97
      T      = <CRANKCASE-HEAT>*AMAX1(0.0,AMIN1(1.0,1.0-T))                     DDSF   839
      <SKW>  = <SKW> + T                                                        DDSF   840
      SKWQC = SKWQC + T                                                         DDSF   841
      JEM       = <AUX-E-MS>                                                    HVAC6   84
      <AUX-EM>  = <AUX-EM>  + T                                                 HVAC6   85
  210 CONTINUE                                                                  DDSF   843
300   CONTINUE                                                                  DDSF   844
      <PLRC-PREV-HR> = PLRC                                                     DDSF   845
C********************** run function : DDSF-1 **********************            DDSF   846
      IF( MSYSF(12) .NE. 0 )   CALL  FINTS( MSYSF(12), 1. )                     DDSF   847
C*******************************************************************            DDSF   848
c                                                                               HVAC1   34
c              save coil flows and loads for any circulation loop calcs         HVAC1   35
      <HT_COIL_CFM>   = CFM * PH                                                HVAC1   36
      IF (DDSTYPE .NE. 2)  THEN                                                 -131   144
c              single-fan system                                                -131   145
        <HT_COIL_EDB> = TM                                                      -131   146
      ELSE                                                                      -131   147
c              dual-fan system                                                  -131   148
        <HT_COIL_EDB> = TRh                                                     -131   149
      ENDIF                                                                     -131   150
      <HT_COIL_CYCLE> = CFMCYC                                                  HVAC1   38
      <HT_COIL_Q>     = QH                                                      HVAC1   39
      <CL_COIL_CFM>   = CFM * PC                                                HVAC1   40
      <CL_COIL_EDB>   = TMC                                                     HVAC1   41
      <CL_COIL_EWB>   = WBFS(TMC,WM,PATM)                                       HVAC1   42
      <CL_COIL_CYCLE> = CFMCYC                                                  HVAC1   43
      <CL_COIL_Q>     = QC                                                      HVAC1   44
c              not implemented yet                                              HVAC1   45
c     <WSE_COIL_CFM>  = CFM * PC                                                HVAC1   46
c     <WSE_COIL_EDB>  =                                                         HVAC1   47
c     <WSE_COIL_EWB>  =                                                         HVAC1   48
c     <WSE_COIL_Q>    =                                                         HVAC1   49
c     <CW_COIL_GPM>   =                                                         HVAC1   50
c     <CW_COIL_Q>     =                                                         HVAC1   51
c                                                                               HVAC1   52
      RETURN                                                                    DDSF   855
      END                                                                       DDSF   856
      SUBROUTINE DESCPF(ISUM,DBIN0,WIN0)                                        DESCPF   2
C                                                                               DESCPF   3
C               SIMULATE THE CONTROL STRATEGY OF THE DESICCANT UNIT.            DESCPF   4
C               CALCULATE THE OUTLET HUMIDITY AND TEMPERATURE WOA AND DBOA.     DESCPF   5
C                                                                               DESCPF   6
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON  /DPLTD /  DPLTDisUnused                                           HVAC15   1
C              SYSTEM LEVEL VARIABLES FOR DESICCANT SYSTEMS, BOTH TOTAL         /DSYSTD/ 2
C              AND INTEGRATED                                                   /DSYSTD/ 3
      COMMON  /DSYSTD/  SCGAS, QREG, WBR, WB8, T8, W8, WB9, T9, W9, EFF,        /DSYSTD/ 4
     1                  DTON, DMODE(7), ERMAX4, ERMAX5, ERMAX6, OPMODE,         /DSYSTD/ 5
     2                  DBOA,WOA,DGAS,DKW,TCONDd,QCDTOT,QCDS,QCDL,              /DSYSTD/ 6
     3                  POA,DFANKW,RFANKW,DMOTKW,EVKW,QCEVT,QCEVS,              /DSYSTD/ 7
     4                  QCEVL,TCMNEV                                            /DSYSTD/ 8
      REAL DSYSTD(39)                                                           /DSYSTD/ 9
      EQUIVALENCE (DSYSTD(1), SCGAS)                                            /DSYSTD/10
      COMMON  /ENDUSE/ SUPPKW, HEATKW                                           HVAC27   1
      COMMON  /HRREP / Irb, Ihrp, Lrb, Lhrp, Nrb, Nhrp, IVTLIM(3,50),           HR       5
     &                 IGRPtr, IBRPtr, IRSch, IRSchT(5),                        HR       6
     &                 NHRTyp(3), ITBUF(3), ITBUFB(3), ITBUFE(3),               HR       7
     &                 IHREOF, ICDFLG                                           HR       8
      COMMON  /MISCD / TEMPS(4,9999),CONS(5),TEMPSL(9999),                      -048a   10
     1                 BLDGQH,BLDGQC,BLDGQL,BLDGP,BPMULT,                       /MISCD/  3
     $                 DBTMIN,DBTMAX,WMIN,WMAX,NSPZ(9999),                      -048a   11
     3                 DQ, DTP, DTR, DTS, FPI, PLRCC , POM, TC2, TDM,           /MISCD/  5
     4                 TRA,WCOL,WCOLM,WMM,YPI,KWBTU,BTUKW,UNFILD,Unusedm        RemPA   45
      REAL             KWBTU                                                    /MISCD/  7
      COMMON  /PLANTD/ QHMP,TMP,CFMP,QHPP,CFMPP,                                /PLANTD/ 2
     1                 QHZP,TZP,DHWPKW,DHWPLF,DHWQRP                            RemPA   46
      REAL             PLANTD(10)                                               RemPA   47
      EQUIVALENCE      (PLANTD(1), QHMP)                                        RemPA   48
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      COMMON  /SYSTD / TH,TC,TM,TR,QH,QC,QHZ,QCZ,QHB,QHP,QHUM,                  /SYSTD/  2
     1                 QDHUM,TCMIN,THMAX,QLSUM,QPSUM,CFM,CFMH,CFMC,             /SYSTD/  3
     2                 RCFM,ECFM,CINF,FON,HON,CON,BON,SCONS(3),PH,PC,           /SYSTD/  4
     3                 SKW,FANKW,unused1,WR,WM,WCOIL,WW,PO,D,                   -046f    1
     4                 FTEMP,TCR,QHR,RfanPumpKW,SGAS,SKWQH,SKWQC,QCLAT,         -131    23
     5                 SFKW,RFKW,FONNGT,WSURF,RWalkinQ,TSURF,TRh,               -131    24
     6                 CBF,CBF1,CBF2,EON,PLRCFM,PLRC,PLRH,QCM1,                 /SYSTD/  8
     7                 QCM2,QHM1,EIRM1,EIRM2,EIR,OFKW,QCT,QCS,                  /SYSTD/  9
     8                 WRMAX,WRMIN,CFMRAT,QdistG,QdistL,RON,QHT,                /SYSTD/ 10
     9                 TPOMIN,POMIN,QHSUP,QRSENS,QRLAT,QRREC,QRREJ,             /SYSTD/ 11
     1                 RCOMKW,RDEFKW,RAUXKW,ECFMP,CFMIN,CINFP,DT,DW,            /SYSTD/ 12
     2                 EWB,IC,NATTSP,Q,RETR,SLOAD,QLSUMP,T,TCHUM,TEND,          /SYSTD/ 13
     3                 TS,hgbmin,HPDefE,EconoOnly,TDuctEnv,                     -044e1   1
     4                 QCUNMT,CapRh,CapRph,CapRc                                HVAC25   3
      REAL             SYSTD(113)                                               HVAC19  13
      EQUIVALENCE      (SYSTD(1),TH)                                            RemPA   65
      COMMON  /TIME  / IDOY, IYR, IMO, IDAY, IHR,                               Time     4
     &                 ISCMO, ISCDAY, ISCHR, IDOW, ISCDOW, iDSdates(6),         -044e5   1
     &                 iTimeFlg, iDSFlg, iDDFlg, InitialFlg, LeapYr,            Time     6
     &                 CLOCK(10), MONDSC(13), MONLEN(12), MONSDA(12)            HR      12
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
      COMMON  /ZONED / EXCFM,FH,FC,CFMZ,QHBZ,QOVER,THZ,TCZ,ERMAX,ERMIN,         /ZONED/  2
     1                 TRY,FTD,CORINT,G0,G1,G2,G3,SIGMAG,TL,ZQHR,TAVE,          /ZONED/  3
     2                 ZQH,ZQC,FCHPS(15),ACFM,ZKW,TCMINZ,THMAXZ,                /ZONED/  4
     3                 ERMAXM,ERMINM,THR,CSSCND,CSSVEC,HENOW,QGWIN,             /ZONED/  5
     4                 QSNABT,QGOPWL,QGVEC,CFMCVT,SSFPT,CFMVNT,ZFANKW,          /ZONED/  6
     5                 ZKWCBT,ZKWHBT,ZCapRbbrd, XC,ZC,XH,ZH                     -044e2   7
      REAL ZONED(63)                                                            -044e2   8
      EQUIVALENCE (ZONED(1),EXCFM)                                              /ZONED/  9
      H(DB,W) = 0.24*DB + (1061.0+0.444*DB)*W                                   H        2
C                                                                               DESCPF  21
      POA = <DESICCANT-CFM>/CFM                                                 DESCPF  22
      POA = AMAX1(0.,AMIN1(1.,POA))                                             DESCPF  23
      IF (POA .GT. PO) THEN                                                     DESCPF  24
          DDBIN = ((POA-PO)*TR + PO*DBIN0)/POA                                  DESCPF  25
          DWIN = ((POA-PO)*<PASTWR> + PO*WIN0)/POA                              DESCPF  26
      ELSE                                                                      DESCPF  27
          DDBIN = DBIN0                                                         DESCPF  28
          DWIN = WIN0                                                           DESCPF  29
      END IF                                                                    DESCPF  30
      DWBIN = WBFS(DDBIN,DWIN,PATM)                                             DESCPF  31
      IF (<DESICCANT> .EQ. 1) THEN                                              DESCPF  32
          CALL DSCPF2(<DESC-CFMD>,CFM,POA,DDBIN,DWIN,DBO,WO,                    DESCPF  33
     1                DGAS,DKW)                                                 DESCPF  34
          DPSET = <DESC-DEW-SET>                                                DESCPF  35
          IMODE = INT(<DESC-CTRL-MODE>+.1)                                      DESCPF  36
          WSET = WFUNC(DPSET,100.,PATM)                                         DESCPF  37
          DTON = 1.0                                                            DESCPF  38
          IF (WO .GT. WSET) THEN                                                DESCPF  39
              DBOA = DBO                                                        DESCPF  40
              WOA = WO                                                          DESCPF  41
          ELSE IF (IMODE .EQ. 1) THEN                                           DESCPF  42
              WBO = WBFS(DBO,WO,PATM)                                           DESCPF  43
              CALL EVAPDR(<DESC-CFMD>,.95,CFM*POA,DBO,WBO,                      DESCPF  44
     1                    EFF,DBEV,WBEV)                                        DESCPF  45
              WEV = WFDBWB(DBEV,WBEV,PATM)                                      DESCPF  46
              IF (WEV .LE. WSET) THEN                                           DESCPF  47
                  DBOA = DBEV                                                   DESCPF  48
                  WOA = WEV                                                     DESCPF  49
              ELSE                                                              DESCPF  50
                  DBOA = FINTRP(WSET,WO,WEV,DBO,DBEV)                           DESCPF  51
                  WOA = WSET                                                    DESCPF  52
              END IF                                                            DESCPF  53
          ELSE IF (IMODE .EQ. 2) THEN                                           DESCPF  54
              PW = PATM*DWIN/(.62198+DWIN)                                      DESCPF  55
              PWS = PVSAT(DDBIN)                                                DESCPF  56
              RH = PW/PWS                                                       DESCPF  57
              IF (RH .LT. 0.75) THEN                                            DESCPF  58
                  DBINEV = DDBIN - 0.65*(DDBIN-DWBIN)                           DESCPF  59
                  EVKW = 2.6/5000.                                              DESCPF  60
              ELSE                                                              DESCPF  61
                  DBINEV = DDBIN                                                DESCPF  62
                  EVKW = 0.                                                     DESCPF  63
              END IF                                                            DESCPF  64
              IF (DWIN .LE. WSET) THEN                                          DESCPF  65
                  DTON = 0.                                                     DESCPF  66
                  WOA = DWIN                                                    DESCPF  67
              ELSE                                                              DESCPF  68
                  DTON = (DWIN - WSET)/(DWIN - WO)                              DESCPF  69
                  WOA = WSET                                                    DESCPF  70
              END IF                                                            DESCPF  71
              DBOA = (1.-DTON)*DBINEV + DTON*DBO                                DESCPF  72
              DGAS = DTON*DGAS                                                  DESCPF  73
              DKW = DTON*DKW + (1.-DTON)*EVKW*CFM*POA                           DESCPF  74
          ELSE                                                                  DESCPF  75
              DBOA = DBO                                                        DESCPF  76
              WOA = WO                                                          DESCPF  77
          END IF                                                                DESCPF  78
          QREG = DGAS*0.85                                                      DESCPF  79
          TCONDd = 0.                                                           DESCPF  80
      END IF                                                                    DESCPF  81
      IF (<DESICCANT> .EQ. 2)  THEN                                             DESCPF  82
          DPSET = <DESC-DEW-SET>                                                DESCPF  83
          WSET = WFUNC(DPSET,100.,PATM)                                         DESCPF  84
          DTON = 1.0                                                            DESCPF  85
          IF (DWIN .GT. WSET) THEN                                              DESCPF  86
              CALL DSCPF3(<DESC-CFMD>,CFM,POA,DDBIN,DWIN,WSET,DBOA,             DESCPF  87
     1                    QREG,DKW,TCONDd)                                      DESCPF  88
              WOA = WSET                                                        DESCPF  89
          ELSE                                                                  DESCPF  90
              DTON = 0.                                                         DESCPF  91
              DBOA = DDBIN                                                      DESCPF  92
              WOA = DWIN                                                        DESCPF  93
          END IF                                                                DESCPF  94
      END IF                                                                    DESCPF  95
      IF (<DESICCANT> .EQ. 3)  THEN                                             DESCPF  96
          II = 1                                                                DESCPF  97
          IMODE = INT(<DESC-CTRL-MODE> + .1)                                    DESCPF  98
c                   Internal latent that recirculates                           ERV     13
          IF (RCFM .GT. 0.)  THEN                                               ERV     14
            H2OLBS = QLSUM/1076. + CINF*4.5*(HUMRAT-WRMAX)                      ERV     15
            H2OLBS = H2OLBS * CFM*(1.-POA)/RCFM                                 ERV     16
          ELSE                                                                  ERV     17
            H2OLBS = 0.                                                         ERV     18
          ENDIF                                                                 ERV     19
          CALL DSCPF4(<DESICCANT-CFM>,<DESC-CFMD>,<DESC-VELD>,                  DESCPF 100
     1                <REACT-CFMD>,<REACT-TEMPD>,DDBIN,DWIN*7000.,              DESCPF 101
     2                DWBIN,H2OLBS,WRMAX*7000.,0.85,                            DESCPF 102
     3                <DESC-FANKWD>,<REACT-FANKWD>,<DESC-MOTORKWD>,             DESCPF 103
     4                <DESC-TOTKWD>,<HEAT-EXCH-EFF>,<DIRECT-EFF>,               DESCPF 104
     5                IMODE,DBOA,WOAGRN,DGAS,DFANKW,RFANKW,                     DESCPF 105
     6                DMOTKW,DKW,CAPRAT)                                        DESCPF 106
          WOA = WOAGRN/7000.                                                    DESCPF 107
          QREG = DGAS*0.85                                                      DESCPF 108
          TCONDd = 0.                                                           DESCPF 109
      END IF                                                                    DESCPF 110
C              DBOA AND WOA ARE THE DESICCANT EXIT CONDITIONS                   DESCPF 111
C              DGAS AND DKW ARE THE GAS AND ELECTRICITY USAGE                   DESCPF 112
      IF (ISUM .EQ. 2) THEN                                                     DESCPF 113
C              ADD UP REGENERATION HEAT AND PREPARE CONDENSER TEMP.             DESCPF 114
C              TO PASS TO PLANT                                                 DESCPF 115
          IF (<DESC-CHILLER> .GT. 0)  THEN                                      HVAC15   8
            Jch = <DESC-CHILLER>                                                HVAC16   5
            <ch;DESC_CFM> = <ch;DESC_CFM> + <DESICCANT-CFM>                     HVAC16   6
            <ch;DESC_T>   = <ch;DESC_T>   + TCONDd*<DESICCANT-CFM>              HVAC16   7
            <ch;DESC_Q>   = <ch;DESC_Q>   - QREG                                HVAC16   8
          ELSEIF (<DESC-LOOP> .GT. 0)  THEN                                     ERV     20
            <DESC_COIL_Q> = -QREG                                               ERV     21
            DGAS          = 0.                                                  ERV     22
          ENDIF                                                                 ERV     23
          SCGAS = DGAS                                                          DESCPF 122
          <SKW> = <SKW> + DKW                                                   DESCPF 123
          FANKW = FANKW + DKW                                                   DESCPF 124
          JEM       = <COOL-E-MS>                                               HVAC6   86
          <COOL-EM> = <COOL-EM> + DKW                                           HVAC6   87
          JFM       = <COOL-F-MS>                                               HVAC6   88
          <COOL-FM> = <COOL-FM> + DGAS                                          HVAC6   89
          CFMDSC = POA*CFM                                                      DESCPF 127
          DQD = H(DDBIN,DWIN) - H(DBOA,WOA)                                     DESCPF 128
          QCDTOT = 60.*CFMDSC*DQD*DENSTY                                        DESCPF 129
          CONS1 = (.24+.44*DWIN)*60.*DENSTY                                     DESCPF 130
          QCDS = CONS1*CFMDSC*(DDBIN-DBOA)                                      DESCPF 131
          QCDL = QCDTOT - QCDS                                                  DESCPF 132
      END IF                                                                    DESCPF 133
      IF (POA .LT. PO) THEN                                                     DESCPF 134
          DBOA = ((PO-POA)*DBT + POA*DBOA)/PO                                   DESCPF 135
          WOA = ((PO-POA)*HUMRAT + POA*WOA)/PO                                  DESCPF 136
          POA = PO                                                              DESCPF 137
      END IF                                                                    DESCPF 138
      RETURN                                                                    DESCPF 139
      END                                                                       DESCPF 140
      SUBROUTINE DESDSC(PA,TPI,MPI,WBPI,IML,MCL,HE,FANE,MOTORE,HXE              DESDSC   2
     1                 ,DELPHX,EVEFFR,MODE,PVEL,TPO,MPO,VR,TRI,RRBTU            DESDSC   3
     .                    ,PKW,RKW,DKW,TOTKW)                                   DESDSC   4
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                 IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                        /FILES/  3
     2               , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                   /FILES/  4
     3                 IHRREP(3), IHRPAS(2)                                     /FILES/  5
      COMMON  /MISCD / TEMPS(4,9999),CONS(5),TEMPSL(9999),                      -048a   10
     1                 BLDGQH,BLDGQC,BLDGQL,BLDGP,BPMULT,                       /MISCD/  3
     $                 DBTMIN,DBTMAX,WMIN,WMAX,NSPZ(9999),                      -048a   11
     3                 DQ, DTP, DTR, DTS, FPI, PLRCC , POM, TC2, TDM,           /MISCD/  5
     4                 TRA,WCOL,WCOLM,WMM,YPI,KWBTU,BTUKW,UNFILD,Unusedm        RemPA   45
      REAL             KWBTU                                                    /MISCD/  7
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
C                                                                               DESDSC   9
C     Written by:                                                               DESDSC  10
C     R. L. Hedrick, Chamberlain Manufacturing, GARD Division, 2/3/88           DESDSC  11
C                   Heat exchanger additions   5/12/89                          DESDSC  12
C                                                                               DESDSC  13
C     Based on algorithms supplied by                                           DESDSC  14
C     Lew Harriman, Mason-Grant, in letter dated 1/27/88                        DESDSC  15
C                                                                               DESDSC  16
C     This subroutine is to make the selection of the design point              DESDSC  17
C     process air velocity and reactivation air inlet temperature               DESDSC  18
C     based on a given design conditions for a CargoCaire desiccant             DESDSC  19
C     wheel system.  The design conditions required for the selection           DESDSC  20
C     are:                                                                      DESDSC  21
C      PA     Outside Air Volume (Process Air) (SCFM)                           DESDSC  22
C      TPI    Air temperature at drier inlet, supply airstream (F)              DESDSC  23
C      MPI    Air moisture at drier inlet, supply airstream (Gr/lb)             DESDSC  24
C      WBPI   Inlet process wet bulb (deg F)                                    DESDSC  25
C      IML    Internal moisture load to be picked up (lb/hr)                    DESDSC  26
C      MCL    Occupied area moisture control point (Gr/lb)                      DESDSC  27
C      HE     Reactivation heater conversion efficiency                         DESDSC  28
C      FANE   Fan efficiency, including belt losses, process and                DESDSC  29
C             reactivation fans                                                 DESDSC  30
C      MOTORE Motor efficiency, process and reactivation fans, wheel drive      DESDSC  31
C      HXE    Heat exchanger effectiveness                                      DESDSC  32
C      DELPHX Heat exchanger pressure drop (inches of water)                    DESDSC  33
C      EVEFFR Rated evaporative cooler effectiveness                            DESDSC  34
C      MODE   Specifies heat exchanger configuration                            DESDSC  35
C                                                                               DESDSC  36
C     Output from this routine is:                                              DESDSC  37
C      PVEL   Supply (Process) air velocity thru the wheel (fpm)                DESDSC  38
C      TPO    Air temp leaving the wheel, supply airstream (F)                  DESDSC  39
C      MPO    Air moisture leaving the wheel, supply airstream (Gr/lb)          DESDSC  40
C      VR     Reactivation air volume (SCFM)                                    DESDSC  41
C      TRI    Reactivation air temperature required (F)                         DESDSC  42
C      RRBTU  Reactivation input energy at design (BTUH)                        DESDSC  43
C      PKW    Process fan energy (overcomes wheel static only) (KW)             DESDSC  44
C      RKW    Reactivation fan energy (KW)                                      DESDSC  45
C      DKW    Desiccant wheel motor energy (KW)                                 DESDSC  46
C      TOTKW  Total system electrical energy (KW)                               DESDSC  47
C                                                                               DESDSC  48
C     NOTE:   The system assumes a "process" fan to overcome the wheel          DESDSC  49
C             static pressure drop for the OA going through the wheel           DESDSC  50
C             only.  The air handling system supply fan is outside the          DESDSC  51
C             scope of this routine.                                            DESDSC  52
C                                                                               DESDSC  53
C             The system is set up for including a heat exchanger on the        DESDSC  54
C             process air, downstream of the desiccant wheel.  There are        DESDSC  55
C             4 options, indicated by the value of MODE:                        DESDSC  56
C                 0 - No heat exchanger                                         DESDSC  57
C                 1 - A sensible heat exchanger with process air on one         DESDSC  58
C                     side and the inlet air to the regenerator (OA             DESDSC  59
C                     conditions) on the other.  The air volume required        DESDSC  60
C                     for the regenerator (VR) is only a fraction of the        DESDSC  61
C                     process air volume (PA).  In order to get balanced        DESDSC  62
C                     flow for the heat exchanger, the regeneration air         DESDSC  63
C                     fan blows a volume equal to PA, and the excess is         DESDSC  64
C                     exhausted.  In the KW equation for this fan, then,        DESDSC  65
C                     VR is replaced by PA.  In addition, for both the          DESDSC  66
C                     process and regenerator fans the static pressure is       DESDSC  67
C                     increased by DELPHX.                                      DESDSC  68
C                 2 - A sensible heat exchanger with heat rejected to           DESDSC  69
C                     ambient.  There is an extra fan added that                DESDSC  70
C                     blows OA thru a heat exchanger to cool the process        DESDSC  71
C                     air.  The regeneration air has its own fan with           DESDSC  72
C                     volume VR, the same as in MODE 0.  The heat exchanger     DESDSC  73
C                     fan will move volume PA across a pressure drop of         DESDSC  74
C                     DELPHX.  The static pressure for the process fan is       DESDSC  75
C                     also increased by DELPHX.  The KW for the heat            DESDSC  76
C                     exchanger fan is included with RKW, the KW for the        DESDSC  77
C                     regeneration air fan.                                     DESDSC  78
C                 3 - An indirect evaporative cooler is used to cool the        DESDSC  79
C                     process air.  This mode is the same as 2 except that      DESDSC  80
C                     the outdoor air is evaporatively cooled before going      DESDSC  81
C                     through the heat exchanger.                               DESDSC  82
C                                                                               DESDSC  83
C             The fans are assumed to be draw-through, in that fan heat has     DESDSC  84
C             not been added to the air prior to the heat exchangers.           DESDSC  85
C             This is only a problem in the calculation of the regeneration     DESDSC  86
C             heat required, in that the fan heat has been increased by the     DESDSC  87
C             additional static pressure drop over the heat exchange coil.      DESDSC  88
C                                                                               DESDSC  89
C                                                                               DESDSC  90
C                                                                               DESDSC  91
C========================Declare Variables                                      DESDSC  92
C                                                                               DESDSC  93
C             Input Variables                                                   DESDSC  94
      REAL*4        PA                                                          DESDSC  95
      REAL*4        TPI                                                         DESDSC  96
      REAL*4        MPI                                                         DESDSC  97
      REAL*4        WBPI                                                        DESDSC  98
      REAL*4        IML                                                         DESDSC  99
      REAL*4        MCL                                                         DESDSC 100
      REAL*4        HE                                                          DESDSC 101
      REAL*4        FANE                                                        DESDSC 102
      REAL*4        MOTORE                                                      DESDSC 103
      REAL*4        HXE                                                         DESDSC 104
      REAL*4        DELPHX                                                      DESDSC 105
      REAL*4        EVEFFR                                                      DESDSC 106
      INTEGER       MODE                                                        DESDSC 107
C                                                                               DESDSC 108
C             Output Variables                                                  DESDSC 109
      REAL*4        PVEL                                                        DESDSC 110
      REAL*4        TPO                                                         DESDSC 111
      REAL*4        MPO                                                         DESDSC 112
      REAL*4        VR                                                          DESDSC 113
      REAL*4        TRI                                                         DESDSC 114
      REAL*4        RRBTU                                                       DESDSC 115
      REAL*4        PKW                                                         DESDSC 116
      REAL*4        RKW                                                         DESDSC 117
      REAL*4        DKW                                                         DESDSC 118
      REAL*4        TOTKW                                                       DESDSC 119
C                                                                               DESDSC 120
C             Intermediate Variables                                            DESDSC 121
      REAL*4        TPU                                                         DESDSC 122
      REAL*4        TPI2                                                        DESDSC 123
      REAL*4        DELP2                                                       DESDSC 124
      REAL*4        VR2                                                         DESDSC 125
      REAL*4        RBTU                                                        DESDSC 126
      REAL*4        PAVET                                                       DESDSC 127
      REAL*4        ABVIS                                                       DESDSC 128
      REAL*4        VISCOS                                                      DESDSC 129
      REAL*4        DELPP                                                       DESDSC 130
      REAL*4        PBHP                                                        DESDSC 131
      REAL*4        PAREA                                                       DESDSC 132
      REAL*4        RAREA                                                       DESDSC 133
      REAL*4        RVEL                                                        DESDSC 134
      REAL*4        RAVET                                                       DESDSC 135
      REAL*4        DELPR                                                       DESDSC 136
      REAL*4        RBHP                                                        DESDSC 137
      REAL*4        IMR                                                         DESDSC 138
      REAL*4 IML1,IML2                                                          DESDSC 139
C==================================BODY OF PROGRAM                              DESDSC 140
C                                                                               DESDSC 141
      WRITE (IOUTPT,902) (<SYSTEM-NAME>,II=1,8),PA,TPI,MPI,WBPI,IML,            -42c    10
     $ MCL,HE,FANE,MOTORE,HXE,DELPHX,EVEFFR,MODE                                -42c    11
  902 FORMAT(/'**************DESICCANT DESIGN VALUES *************'//           -42c    12
     $' SYSTEM= '8A4//                                                          -42c    13
     2'  PA    = 'E11.4'  TPI   = 'E11.4'  MPI   = 'E11.4/                      DESDSC 146
     3'  WBPI  = 'E11.4'  IML   = 'E11.4'  MCL   = 'E11.4/                      DESDSC 147
     4'  HE    = 'E11.4'  FANE  = 'E11.4'  MOTORE= 'E11.4/                      DESDSC 148
     4'  HXE   = 'E11.4'  DELPHX= 'E11.4'  EVEFFR= 'E11.4/                      DESDSC 149
     4'  MODE  = 'I11/)                                                         DESDSC 150
C                                                                               DESDSC 151
C                                                                               DESDSC 152
C                      Loop through capacity calculations, adjusting            DESDSC 153
C                      Pvel and Tri until capacity is at least 98% of           DESDSC 154
C                      the load.                                                DESDSC 155
C                                                                               DESDSC 156
      IML1 = IML                                                                DESDSC 157
      IML2 = 4.5*<SUPPLY-CFM>*<MIN-OUTSIDE-AIR>*(WMAX-MCL/7000.)                DESDSC 158
      IML = IML1 + IML2                                                         DESDSC 159
      IF (IML .GT. 0.)  THEN                                                    ERV     24
        DO    I=1,31                                                            ERV     25
          DO  J=1,23                                                            ERV     26
            PVEL = 800. - (I-1)*20.                                             ERV     27
            TRI  = 190. + (J-1)*5.                                              ERV     28
            MPO  = -48.169 + PVEL*0.022 + TPI*0.687                             ERV     29
     &           + MPI*0.318 - TRI*0.058                                        ERV     30
            IMR  = 4.5*PA*(MPI-MPO)/7000.                                       ERV     31
c                      Check capacity, if less than 98%, increment              ERV     32
c                      Tri or Pvel to increase capacity.  If 98% or             ERV     33
c                      greater, then done so jump out of loop.                  ERV     34
            IF (IMR/IML .GE. 0.98) GOTO 150                                     ERV     35
          ENDDO                                                                 ERV     36
        ENDDO                                                                   ERV     37
c                      WARN IF NOT ENOUGH CAPACITY FOR LATENT LOAD              ERV     38
        II = 0                                                                  ERV     39
        CALL MSGSIM( -2, II,II,II,II)                                           ERV     40
        WRITE (IOUTPT,901) (<SYSTEM-NAME>,II=1,8)                               -42c    14
  901   FORMAT(14X,'SYSTEM ',8A4,' has inadequate desiccant capacity'/          -42c    15
     $         14X,'to handle the latent load')                                 -42c    16
      ELSE                                                                      ERV     44
c                      No net latent load at design point                       ERV     45
        PVEL = 800.                                                             ERV     46
        TRI  = 190.                                                             ERV     47
        MPO  = -48.169 + PVEL*0.022 + TPI*0.687 + MPI*0.318 - TRI*0.058         ERV     48
        IMR  = 4.5 * PA * (MPI-MPO)/7000.                                       ERV     49
      ENDIF                                                                     ERV     50
c                                                                               ERV     51
c                      Calculate other parameters resulting from the            ERV     52
c                      selected design point.                                   ERV     53
c                                                                               ERV     54
150   CONTINUE                                                                  ERV     55
      TPO= -1.675 + TPI*1.008 + (MPI-MPO)*0.65*1.15                             DESDSC 184
     .   + 1/(PVEL*(TRI-TPI)*14.544)                                            DESDSC 185
      TPU= -3.967 + TRI*0.848 + TPI*0.028                                       DESDSC 186
      IF (TRI .NE. 120)  THEN                                                   DESDSC 187
        VR= PA *((TPO-TPI)/(TRI-120.))                                          DESDSC 188
      ELSE                                                                      DESDSC 189
        VR= PA *(TPO-TPI)                                                       DESDSC 190
      ENDIF                                                                     DESDSC 191
C              HEAT EXCHANGER COOLING OUTLET PROCESS AIR                        DESDSC 192
      TPI2 = TPI                                                                DESDSC 193
      VR2 = VR                                                                  DESDSC 194
      DELP2 = 0.                                                                DESDSC 195
      WBTMAX = WBFS(DBTMAX,WMAX,BLDGP)                                          DESDSC 196
C              OA THRU HX THEN THRU REGEN HEATER (COOL SIDE OF HX)              DESDSC 197
      IF (MODE .EQ. 1) THEN                                                     DESDSC 198
          TPI2 = DBTMAX + (TPO-DBTMAX)*HXE                                      DESDSC 199
          TPO = TPO - (TPO-DBTMAX)*HXE                                          DESDSC 200
          DELP2 = DELPHX                                                        DESDSC 201
          VR2 = PA                                                              DESDSC 202
          RBHP = 0.                                                             DESDSC 203
C              OA THRU HX THEN EXHAUSTED                                        DESDSC 204
      ELSE IF (MODE .EQ. 2) THEN                                                DESDSC 205
          TPO = TPO - (TPO-DBTMAX)*HXE                                          DESDSC 206
          RBHP = PA*DELPHX/(6356.*FANE)                                         DESDSC 207
C              OA THRU EVAP COOLER THEN HX THEN EXHAUSTED                       DESDSC 208
      ELSE IF (MODE .EQ. 3) THEN                                                DESDSC 209
          CALL EVAPDR(PA,EVEFFR,PA,DBTMAX,WBTMAX,EFF,DBO,WBO)                   DESDSC 210
          TPO = TPO - (TPO-DBO)*HXE                                             DESDSC 211
          RBHP = PA*DELPHX/(6356.*FANE)                                         DESDSC 212
C              NO HX                                                            DESDSC 213
      ELSE                                                                      DESDSC 214
          DELPHX = 0.                                                           DESDSC 215
          RBHP = 0.                                                             DESDSC 216
      END IF                                                                    DESDSC 217
      RBTU = VR*1.08*(TRI-TPI2) - PA*1.08*(15./264.)*(TRI-TPU)                  DESDSC 218
      RRBTU= RBTU/HE                                                            DESDSC 219
C                                                                               DESDSC 220
C                      Calculate Electrical loads                               DESDSC 221
C                                                                               DESDSC 222
C             Process fan                                                       DESDSC 223
      PAVET= (TPO-TPI) /2.                                                      DESDSC 224
      ABVIS= 0.044                                                              DESDSC 225
      VISCOS= 0.03967 + 6.53E-5*PAVET - 2.2425E-8*PAVET**2                      DESDSC 226
      VISCOS= VISCOS/ABVIS                                                      DESDSC 227
      DELPP = .0022*PVEL*((PAVET+460.)/530.)*VISCOS + DELPHX                    DESDSC 228
      PBHP= PA *DELPP /(6356.*FANE)                                             DESDSC 229
      PKW= PBHP *0.746 /MOTORE                                                  DESDSC 230
C             Reactivation fan                                                  DESDSC 231
      PAREA= PA/PVEL                                                            DESDSC 232
      RAREA= 96.*PAREA/249.                                                     DESDSC 233
      RVEL= VR/RAREA                                                            DESDSC 234
      RAVET= (120.-TRI) /2.                                                     DESDSC 235
      ABVIS= 0.044                                                              DESDSC 236
      VISCOS= 0.03967 + 6.53E-5*RAVET - 2.2425E-8*RAVET**2                      DESDSC 237
      VISCOS= VISCOS/ABVIS                                                      DESDSC 238
      DELPR = .0022*RVEL*((RAVET+460.)/530.)*VISCOS + DELP2                     DESDSC 239
      RBHP = VR2*DELPR/(6356.*FANE) + RBHP                                      DESDSC 240
      RKW= RBHP *0.746 /MOTORE                                                  DESDSC 241
C             Wheel drive motor                                                 DESDSC 242
      DKW= 0.746 *0.5 /MOTORE                                                   DESDSC 243
C             Total Design Electrical Consumptiom                               DESDSC 244
      TOTKW= PKW + RKW + DKW                                                    DESDSC 245
      WRITE (IOUTPT,903) TPU,RBTU,PAVET,ABVIS,VISCOS,DELPP,PBHP,                DESDSC 246
     1PAREA,RAREA,RVEL,RAVET,DELPR,RBHP,IMR                                     DESDSC 247
  903 FORMAT(' TPU   = 'E11.4'  RBTU  = 'E11.4'  PAVET = 'E11.4/                DESDSC 248
     1       ' ABVIS = 'E11.4'  VISCOS= 'E11.4'  DELPP = 'E11.4/                DESDSC 249
     2       ' PBHP  = 'E11.4'  PAREA = 'E11.4'  RAREA = 'E11.4/                DESDSC 250
     3       ' RVEL  = 'E11.4'  RAVET = 'E11.4'  DELPR = 'E11.4/                DESDSC 251
     4       ' RBHP =  'E11.4'  IMR   = 'E11.4//)                               DESDSC 252
c                                                                               DESDSC 253
      WRITE (IOUTPT,904) PVEL,TPO,MPO,VR,TRI,RRBTU,PKW,RKW,DKW,TOTKW,           DESDSC 254
     1                   IML1,IML2                                              DESDSC 255
c                                                                               DESDSC 256
  904 FORMAT(' PVEL  = 'E11.4'  TPO   = 'E11.4'  MPO   = 'E11.4/                DESDSC 257
     1       ' VR    = 'E11.4'  TRI   = 'E11.4'  RRBTU = 'E11.4/                DESDSC 258
     2       ' PKW   = 'E11.4'  RKW   = 'E11.4'  DKW   = 'E11.4/                DESDSC 259
     3       ' TOTKW = 'E11.4'  IML1  = 'E11.4'  IML2  = 'E11.4)                DESDSC 260
      RETURN                                                                    DESDSC 261
      END                                                                       DESDSC 262
      SUBROUTINE DESICC                                                         DESICC   2
C                                                                               DESICC   3
C              PACKAGED TOTAL GAS DESICCANT SYSTEM                              DESICC   4
C                                                                               DESICC   5
C              THE SYSTEM OPERATES LIKE A PACKAGED SINGLE ZONE SYSTEM;          DESICC   6
C              THAT IS, THERE IS A CONTROL ZONE WITH A (THE ONLY)               DESICC   7
C              THERMOSTAT.  THE CONTROL ZONE IS ALWAYS THE FIRST ZONE           DESICC   8
C              IN THE ZONE LIST.                                                DESICC   9
C                                                                               DESICC  10
C              FIRST DKTEMP IS CALLED TO GET LIMITS ON THE SUPPLY               DESICC  11
C              TEMPERATURE.  THESE LIMITS ARE THEN USED TO SET MIN              DESICC  12
C              AND MAX EXTRACTION RATES FOR THE CONTROL ZONE.  TEMDEV           DESICC  13
C              IS CALLED TO GET THE ZONE TEMPERATURE AND EXTRACTION             DESICC  14
C              RATE.  USING THE EXTRACTION RATE, AN OPERATING MODE IS           DESICC  15
C              CHOSEN, AND THE PERFORMANCE ROUTINE DSCPF1 IS CALLED TO          DESICC  16
C              GET THE ACTUAL SUPPLY TEMPERATURE.  USING THIS SUPPLY            DESICC  17
C              TEMPERATURE, TEMDEV IS CALLED FOR THE REST OF THE ZONES          DESICC  18
C              YIELDING THEIR TEMPERATURES AND EXTRACTION RATES.                DESICC  19
C              LIGHT ENERGY TO THE PLENUM, TOTAL INFILTRATION, LIGHT            DESICC  20
C              HEAT TO THE RETURN AIR, AND RETURN TEMPERATURE ARE               DESICC  21
C              CALCULATED.  FINALLY SDSF IS CALLED.  THIS DOES THE              DESICC  22
C              PLENUM CALCULATIONS, IF ANY, AND REFINES THE RETURN TEMP         DESICC  23
C              CALCULATION.  NORMALLY IT THEN DOES THE COIL SIMULATION          DESICC  24
C              AND MOISTURE BALANCE.  IN THIS CASE, DSCPF1 IS CALLED            DESICC  25
C              AGAIN TO REFINE THE CALCUALTION OF THE RETURN WET BULB           DESICC  26
C              TEMP, AND TO GET FINAL NUMBERS FOR THE ENERGY CONSUMPTION.       DESICC  27
C                                                                               DESICC  28
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
C              IMODE IS THE OPERATING MODE OF THE PTGSD SYSTEM                  /DSCTRL/ 2
      COMMON  /DSCTRL/  IMODE                                                   /DSCTRL/ 3
      COMMON  /ENDUSE/ SUPPKW, HEATKW                                           HVAC27   1
C              SYSTEM LEVEL VARIABLES FOR DESICCANT SYSTEMS, BOTH TOTAL         /DSYSTD/ 2
C              AND INTEGRATED                                                   /DSYSTD/ 3
      COMMON  /DSYSTD/  SCGAS, QREG, WBR, WB8, T8, W8, WB9, T9, W9, EFF,        /DSYSTD/ 4
     1                  DTON, DMODE(7), ERMAX4, ERMAX5, ERMAX6, OPMODE,         /DSYSTD/ 5
     2                  DBOA,WOA,DGAS,DKW,TCONDd,QCDTOT,QCDS,QCDL,              /DSYSTD/ 6
     3                  POA,DFANKW,RFANKW,DMOTKW,EVKW,QCEVT,QCEVS,              /DSYSTD/ 7
     4                  QCEVL,TCMNEV                                            /DSYSTD/ 8
      REAL DSYSTD(39)                                                           /DSYSTD/ 9
      EQUIVALENCE (DSYSTD(1), SCGAS)                                            /DSYSTD/10
      COMMON  /HRREP / Irb, Ihrp, Lrb, Lhrp, Nrb, Nhrp, IVTLIM(3,50),           HR       5
     &                 IGRPtr, IBRPtr, IRSch, IRSchT(5),                        HR       6
     &                 NHRTyp(3), ITBUF(3), ITBUFB(3), ITBUFE(3),               HR       7
     &                 IHREOF, ICDFLG                                           HR       8
      COMMON  /MISCD / TEMPS(4,9999),CONS(5),TEMPSL(9999),                      -048a   10
     1                 BLDGQH,BLDGQC,BLDGQL,BLDGP,BPMULT,                       /MISCD/  3
     $                 DBTMIN,DBTMAX,WMIN,WMAX,NSPZ(9999),                      -048a   11
     3                 DQ, DTP, DTR, DTS, FPI, PLRCC , POM, TC2, TDM,           /MISCD/  5
     4                 TRA,WCOL,WCOLM,WMM,YPI,KWBTU,BTUKW,UNFILD,Unusedm        RemPA   45
      REAL             KWBTU                                                    /MISCD/  7
      COMMON  /PLANTD/ QHMP,TMP,CFMP,QHPP,CFMPP,                                /PLANTD/ 2
     1                 QHZP,TZP,DHWPKW,DHWPLF,DHWQRP                            RemPA   46
      REAL             PLANTD(10)                                               RemPA   47
      EQUIVALENCE      (PLANTD(1), QHMP)                                        RemPA   48
      COMMON  /PTRPLT/ Ipm,Ilp,Ich,Ibl,Idw,Itw,Ipv,Ign,Itk,Ihx,                 PV       1
     &                 Iec,Ilm,Iem,Ifm,Ism,Icm,Imm,Imc,Igl,Isp2,                XFC2     1
     &                 Ispare(5),  Ipe,                                         HVAC19   3
     &                 Npm,Nlp,Nch,Nbl,Ndw,Ntw,Npv,Ngn,Ntk,Nhx,                 PV       2
     &                 Nec,Nlm,Nem,Nfm,Nsm,Ncm,Nmm,Nmc,Ngl,Nsp2,                XFC2     2
     &                 Nspare(5),  Npe,                                         HVAC19   6
     &                 Lpm,Llp,Lch,Lbl,Ldw,Ltw,Lpv,Lgn,Ltk,Lhx,                 PV       3
     &                 Lec,Llm,Lem,Lfm,Lsm,Lcm,Lmm,Lmc,Lgl,Lsp2,                XFC2     3
     &                 Lspare(5),  Lpe,                                         HVAC19   9
     &                 Jpm,Jlp,Jch,Jbl,Jdw,Jtw,Jpv,Jgn,Jtk,Jhx,                 PV       4
     &                 Jec,Jlm,Jem,Jfm,Jsm,Jcm,    Jmc,Jgl,                     HVAC19  11
     &                 Jpe, kpr, NumMeters, NumIntHX                            XFC1     1
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      COMMON  /REPORT/ IREPRT(4,37),IPRG,IUNIQV(100),IUNIQS(100),IUNIQL         HVAC14   4
      COMMON  /RQLSCH/ RQLSCH(3)                                                /RQLSCH/ 2
      COMMON  /SYSTD / TH,TC,TM,TR,QH,QC,QHZ,QCZ,QHB,QHP,QHUM,                  /SYSTD/  2
     1                 QDHUM,TCMIN,THMAX,QLSUM,QPSUM,CFM,CFMH,CFMC,             /SYSTD/  3
     2                 RCFM,ECFM,CINF,FON,HON,CON,BON,SCONS(3),PH,PC,           /SYSTD/  4
     3                 SKW,FANKW,unused1,WR,WM,WCOIL,WW,PO,D,                   -046f    1
     4                 FTEMP,TCR,QHR,RfanPumpKW,SGAS,SKWQH,SKWQC,QCLAT,         -131    23
     5                 SFKW,RFKW,FONNGT,WSURF,RWalkinQ,TSURF,TRh,               -131    24
     6                 CBF,CBF1,CBF2,EON,PLRCFM,PLRC,PLRH,QCM1,                 /SYSTD/  8
     7                 QCM2,QHM1,EIRM1,EIRM2,EIR,OFKW,QCT,QCS,                  /SYSTD/  9
     8                 WRMAX,WRMIN,CFMRAT,QdistG,QdistL,RON,QHT,                /SYSTD/ 10
     9                 TPOMIN,POMIN,QHSUP,QRSENS,QRLAT,QRREC,QRREJ,             /SYSTD/ 11
     1                 RCOMKW,RDEFKW,RAUXKW,ECFMP,CFMIN,CINFP,DT,DW,            /SYSTD/ 12
     2                 EWB,IC,NATTSP,Q,RETR,SLOAD,QLSUMP,T,TCHUM,TEND,          /SYSTD/ 13
     3                 TS,hgbmin,HPDefE,EconoOnly,TDuctEnv,                     -044e1   1
     4                 QCUNMT,CapRh,CapRph,CapRc                                HVAC25   3
      REAL             SYSTD(113)                                               HVAC19  13
      EQUIVALENCE      (SYSTD(1),TH)                                            RemPA   65
      COMMON  /TIME  / IDOY, IYR, IMO, IDAY, IHR,                               Time     4
     &                 ISCMO, ISCDAY, ISCHR, IDOW, ISCDOW, iDSdates(6),         -044e5   1
     &                 iTimeFlg, iDSFlg, iDDFlg, InitialFlg, LeapYr,            Time     6
     &                 CLOCK(10), MONDSC(13), MONLEN(12), MONSDA(12)            HR      12
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
      COMMON  /ZONED / EXCFM,FH,FC,CFMZ,QHBZ,QOVER,THZ,TCZ,ERMAX,ERMIN,         /ZONED/  2
     1                 TRY,FTD,CORINT,G0,G1,G2,G3,SIGMAG,TL,ZQHR,TAVE,          /ZONED/  3
     2                 ZQH,ZQC,FCHPS(15),ACFM,ZKW,TCMINZ,THMAXZ,                /ZONED/  4
     3                 ERMAXM,ERMINM,THR,CSSCND,CSSVEC,HENOW,QGWIN,             /ZONED/  5
     4                 QSNABT,QGOPWL,QGVEC,CFMCVT,SSFPT,CFMVNT,ZFANKW,          /ZONED/  6
     5                 ZKWCBT,ZKWHBT,ZCapRbbrd, XC,ZC,XH,ZH                     -044e2   7
      REAL ZONED(63)                                                            -044e2   8
      EQUIVALENCE (ZONED(1),EXCFM)                                              /ZONED/  9
      COMMON  /LENS/   MWFLEN, MRLEN, MSHLEN, MWNLEN, MDRLEN, MXLEN,            /LENS/   2
     1                 MULEN, MZLEN, MIWLEN, MFLLEN,                            /LENS/   3
     2                 LMTB, LLDSOU, MSTLEN, LSTFT, MWLLEN                      /LENS/   4
      COMMON  /PTRBGN/ IWFB, IWPB, ICONSB, IGTB, IWLB, IGEOB, ISHADB,           /PTRBGN/ 2
     &                 IWINB, IDRB, IEWB, IUGB, ISPB, IIWPB, IIWB,              /PTRBGN/ 3
     &                 IFLB, ISPCDB, IOTHB, ILHB, IZQCMB, ISSHDB,               /PTRBGN/ 4
     &                 IOHFIB, IZLSK, IZLSL, ISTFB, ILSSH                       PV2      1
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     /PNTRS/  3
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        /PNTRS/  4
      COMMON  /SIZE/   LENGTH,NWF,NWPAR,NCONS,NGT,NWL,NGEO,                     /SIZE/   2
     1                 NGSHAD, NWIN, NDOOR, NEW, NUG, NSPl, NIWP, NIW,          /SIZE/   3
     &                 NFL, NBR, NOTH, NITH, NOPSRF,                            /SIZE/   4
     &                 NSURF, NSSHD, NSHTOT, NEWshade                           /SIZE/   5
C                                                                               DESICC  43
c              set circulation loop restrictions on heating and                 HVAC1   54
c              cooling capacity for use in DKTEMP.                              HVAC1   55
      IF (<HW-LOOP> .NE. 0)  THEN                                               HVAC1   56
c              heating coil is hot water - pointer to loop                      HVAC1   57
        JLP   = <HW-LOOP>                                                       HVAC1   58
        CapRh = <lp;HCAP_RATIO>                                                 HVAC16   9
      ELSE                                                                      HVAC1   60
        CapRh = 1.0                                                             HVAC1   61
      ENDIF                                                                     HVAC1   62
      IF (<PHW-LOOP> .NE. 0)  THEN                                              HVAC1   63
c              preheat coil is hot water - pointer to loop                      HVAC1   64
        JLP    = <PHW-LOOP>                                                     HVAC1   65
        CapRph = <lp;HCAP_RATIO>                                                HVAC16  10
      ELSE                                                                      HVAC1   67
        CapRph = 1.0                                                            HVAC1   68
      ENDIF                                                                     HVAC1   69
      IF (<CHW-LOOP> .NE. 0)  THEN                                              HVAC1   70
c              cooling coil is water - pointer to loop                          HVAC1   71
        JLP   = <CHW-LOOP>                                                      HVAC1   72
        CapRc = <lp;CCAP_RATIO>                                                 HVAC16  11
      ELSE                                                                      HVAC1   74
        CapRc = 1.0                                                             HVAC1   75
      ENDIF                                                                     HVAC1   76
C              GET THE LIMITS ON SUPPLY TEMP (TH, TC, THMAX, TCMIN)             DESICC  44
      CALL DKTEMP                                                               DESICC  45
      IMODE = 0                                                                 DESICC  46
      <DCVOAcfmS> = 0.0                                                         -044c  102
      <DCVOAcfmFracCrit> = 0.0                                                  -044c  103
C              LOOP OVER THE ZONES                                              DESICC  47
      ZP1 = ISZ                                                                 DESICC  48
      DO 500 NZ=1,NSZ                                                           DESICC  49
C              ZERO THE ZONE DATA                                               DESICC  50
      DO 10 I=1,63                                                              -044e2  11
      ZONED(I) = 0.                                                             DESICC  52
   10 CONTINUE                                                                  DESICC  53
      ZP2 = <ZP2>                                                               DESICC  54
      <ERMAX> = 0.                                                              DESICC  55
      <ERMIN> = 0.                                                              DESICC  56
      ZMULT = <MULTIPLIER>                                                      DESICC  57
      EXCFM = 0.                                                                DESICC  58
      CFMAX = <CFMAX>                                                           DESICC  59
      DTFD = <SUPPLY-DELTA-T>*CONS(3)                                           DESICC  60
c              if exhaust made up by infiltration                               -046    74
      IF (<EXHAUST-SOURCE> .eq. 2  .or.                                         -047b   12
     &    <EXHAUST-SOURCE> .eq. 3)  Call ZoneExhaust(9, xx)  ! power            -047b   13
C              IF THE FANS ARE ON AND THIS IS A PLENUM, SKIP                    DESICC  61
      IF ((FON .NE. 0.) .AND. (<ZONE-TYPE> .EQ. 3)) GO TO 490                   DESICC  62
C              IF THE FANS ARE OFF, OR NOT A CONDITIONED ZONE, SKIP             DESICC  63
C              SETTING THE EXTRACTION RATE LIMITS                               DESICC  64
      IF ((FON .EQ. 0.) .OR. (<ZONE-TYPE> .NE. 1)) GO TO 50                     DESICC  65
C              SET THE LIMITS ON THE EXTRACTION RATE.  NOTE THAT THE            DESICC  66
C              FIRST ZONE IS THE CONTROL ZONE; I.E., HAS THE THERMOSTAT         DESICC  67
      TCMINZ = TC                                                               DESICC  68
      THMAXZ = THMAX                                                            DESICC  69
      IF (NZ .GT. 1) THMAXZ = TC                                                DESICC  70
      CFMIN = CFMAX*<MINCFMR>                                                   DESICC  71
C              MIN AND MAX EXTRACTION RATES                                     DESICC  72
      XC      = CONS(1)*CFMAX                                                   -044e2  12
      <ERMAX> = XC * (<TNOW>-TCMINZ)                                            -044e2  13
      XH      = CONS(1)*Min(<CFMAXH>,CFMAX)                                     -044e2  14
      <ERMIN> = XH * (<TNOW>-THMAXZ)                                            -044e2  15
      TM = TPOMIN                                                               DESICC  75
      IF (NZ .GT. 1) TM = TC                                                    DESICC  76
C              EXTRACTION RATES AT TOP AND BOTTOM OF DEAD BAND                  DESICC  77
      ZC     = CONS(1)*CFMIN                                                    -044e2  16
      ERMAXM = ZC * (<TNOW>-TM)                                                 -044e2  17
      ZH     = ZC                                                               -044e2  18
      ERMINM = ERMAXM                                                           -044e2  19
C              GET ZONE TEMPERATURES AND EXTRACTION RATES                       DESICC  80
   50 CALL TEMDEV(0)                                                            DESICC  81
C              IF FANS ARE OFF, OR NOT A CONDITIONED SPACE, SKIP                DESICC  82
      IF (<ZONE-TYPE> .NE. 1)  GO TO 280                                        DESICC  83
      IF (FON .EQ. 0.)  GO TO 260                                               DESICC  84
C              AVERAGE TEMPERATURE FOR THE HOUR                                 DESICC  85
      TAVE = (<TNOW> + <TPAST>)*0.5                                             DESICC  86
C               IF CONTROL ZONE, FIND THE OPERATING MODE                        DESICC  87
      IF (NZ .GT. 1) GO TO 150                                                  DESICC  88
C              IMODE = 1     NORMAL HEATING MODE, MIN OUTSIDE AIR               DESICC  89
C              IMODE = 2     FANS CYCLE ON AT NIGHT FOR HEATING, NO             DESICC  90
C                            OUTSIDE AIR                                        DESICC  91
C              IMODE = 3     DEADBAND, NO HEATING OR COOLING                    DESICC  92
C              IMODE = 4     COOLING, OUTSIDE AIR ONLY, FAN AT HEATING CFM      DESICC  93
C              IMODE = 5     COOLING, MAX OUTSIDE AIR, FAN UP TO MAX CFM        DESICC  94
C              IMODE = 6     EVAP COOLING                                       DESICC  95
C              IMODE = 7     FULL COOLING                                       DESICC  96
C              IF IN HEATING BAND, IMODE=1                                      DESICC  97
      IF (TAVE .LE. THZ+THR) IMODE=1                                            DESICC  98
C              UNLESS NIGHT FANS ARE CYCLING ON, THEN MODE=2                    DESICC  99
      IF ((IMODE .EQ. 1) .AND. (FONNGT .EQ. -1.0))  IMODE = 2                   DESICC 100
C              IN DEAD BAND, MODE=3                                             DESICC 101
      IF ((TAVE .GT. THZ+THR) .AND. (TAVE .LT. TCZ-THR))  IMODE=3               DESICC 102
      IF (IMODE .GT. 0) GO TO 120                                               DESICC 103
C              ERMAX4 IS EXTRACTION RATE AT MIN CFM, 100% OUTSIDE AIR           DESICC 104
      ERMAX4 = CONS(1)*<CFMAXH>                                                 DESICC 105
     1                *(TAVE-(DBT+DTFD+DUCTDT(DBT+DTFD,<CFMAXH>,1,1,0)))        DESICC 106
C              ERMAX5 IS EXTRACTION RATE AT FULL CFM, 100% OUTSIDE AIR          DESICC 107
      ERMAX5 = CONS(1)*CFMAX                                                    DESICC 108
     1                *(TAVE-(DBT+DTFD+DUCTDT(DBT+DTFD,CFMAX,1,1,0)))           DESICC 109
      II = 1                                                                    DESICC 110
      CALL EVINDR(<SUPPLY-CFM>,DTFD,T8,WB8,W8)                                  DESICC 111
      CALL EVAPDR(<SUPPLY-CFM>,<DIRECT-EFF>,<SUPPLY-CFM>,T8,WB8,                DESICC 112
     1            EFF,DB9,WB9)                                                  DESICC 113
C              ERMAX6 IS EXTRACTION USING THE EVAPORATIVE COOLER, WITH          DESICC 114
C              NO DESICCANT COOLING                                             DESICC 115
      ERMAX6 = CONS(1)*CFMAX*(TAVE-(DB9+DUCTDT(DB9,CFMAX,2,1,0)))               DESICC 116
C              CHOOSE MODE HAVING LOWEST EXTRACTION RATE CAPABLE OF             DESICC 117
C              SATISFYING CONTROL ZONE LOAD                                     DESICC 118
      IF (ERMAX4 .GT. <QNOW>) IMODE=4                                           DESICC 119
      IF ((ERMAX5 .GT. <QNOW>) .AND. (IMODE .EQ. 0)) IMODE=5                    DESICC 120
      IF ((ERMAX6 .GT. <QNOW>) .AND. (IMODE .EQ. 0)) IMODE=6                    DESICC 121
      IF (IMODE .EQ. 0) IMODE=7                                                 DESICC 122
C              CALL PERFORMANCE ROUTINE AND RESET TC FOR OTHER ZONES            DESICC 123
  120 CALL DSCPF1(2)                                                            DESICC 124
      TC = T9                                                                   DESICC 125
      WCOIL = W9                                                                DESICC 126
      QLSUM = 0.                                                                DESICC 127
      CINF = 0.                                                                 DESICC 128
      ECFM = 0.                                                                 DESICC 129
C              APPORTION THE CFM AMONG THE ZONES                                DESICC 130
  150 CFMZ = (CFMAX/<SUPPLY-CFM>)*CFM                                           DESICC 131
c              Exhaust airflow                                                  -044e    7
      IF (<EXHAUST-SOURCE> .eq. 1) THEN  ! makeup by system OA                  -046    76
        Call ZoneExhaust(1, CFMZ)        ! set EXCFM                            -046    77
        Call ZoneExhaust(9, CFMZ)        ! power                                -046    78
      ENDIF                                                                     -046    79
      ECFM = ECFM + EXCFM*ZMULT                                                 -044e   10
C              IF NOT HEATING, SKIP                                             DESICC 142
      IF (TAVE .GT. THZ+THR)  GO TO 270                                         DESICC 143
C              REHEAT REQUIREMENT                                               DESICC 144
      ZQHR = CFMZ*CONS(1)*(TC-TAVE)                                             DESICC 145
C              TOTAL HEATING REQUIRED                                           DESICC 146
      ZQH = AMIN1(0.,<QNOW>+ZQHR)                                               DESICC 147
      IF (HON .EQ. 0.)  ZQH = 0.                                                DESICC 148
      IF (ZQH .EQ. 0.)  GO TO 260                                               DESICC 149
C              MEET AS MUCH OF REQUIRED HEATING AS POSSIBLE WITH                DESICC 150
C              BASEBOARDS                                                       DESICC 151
      IF ((<BASEBOARD-RATING> .GE. 0.) .OR. (<BASEBOARD-CTRL> .NE. 1))          DESICC 152
     1 GO TO 260                                                                DESICC 153
      Q = AMAX1(<BASEBOARD-RATING>*ZCapRbbrd-QHBZ,ZQH)                          -044e   11
      ZQH = ZQH - Q                                                             DESICC 155
      QHBZ = QHBZ + Q                                                           DESICC 156
      QHB = QHB + Q*ZMULT                                                       DESICC 157
C              ASSIGN BASEBOARD CONSUMPTION TO CORRECT ENERGY SOURCE            DESICC 158
  260 IF (<BASEBOARD-SOURCE> .EQ. 1)  THEN                                      DESICC 159
        X      = QHBZ * KWBTU                                                   DESICC 160
        ZKW    = ZKW    - X                                                     DESICC 161
        SKWQH  = SKWQH  - X * ZMULT                                             DESICC 162
        JEM       = <HEAT-E-MZ>                                                 HVAC6   92
        <HEAT-EM> = <HEAT-EM> - X*ZMULT                                         HVAC6   93
      ENDIF                                                                     DESICC 164
      IF (<BASEBOARD-SOURCE> .EQ. 2                                             HVAC13  28
     &                           .OR.  <BASEBOARD-SOURCE> .EQ. 3)  THEN         HVAC13  29
        SGAS   = SGAS  - QHBZ * ZMULT / .85                                     DESICC 167
        JFM       = <HEAT-F-MZ>                                                 HVAC6   94
        <HEAT-FM> = <HEAT-FM> - QHBZ*ZMULT / .85                                HVAC6   95
      ENDIF                                                                     DESICC 169
c                                                                               HVAC1   77
c              save zonal coil flows and loads for circulation loop calcs       HVAC1   78
      <COIL_CFMZ>   = CFMZ                                                      HVAC1   79
      <COIL_EDBZ>   = TC                                                        HVAC1   80
      <COIL_EWBZ>   = <CL_COIL_LWB>                                             HVAC1   81
      <COIL_CYCLEZ> = 1.                                                        HVAC1   82
      <COIL_QZ>     = ZQH                                                       HVAC1   83
      <BBRD_EDB>    = TAVE                                                      HVAC1   84
      <BBRD_Q>      = QHBZ                                                      HVAC1   85
C              CALCULATE THE RETURN AIR RATIO                                   DESICC 175
  270 RETR = 1.                                                                 DESICC 176
      IF (CFMZ .GT. 0.) RETR = 1.0 - EXCFM/CFMZ                                 DESICC 177
C              ADD UP THE TOTAL SYSTEM ROOM LATENT GAIN                         DESICC 178
      QLSUM = QLSUM + <QL>*RETR*ZMULT                                           DESICC 179
C              ADD UP THE TOTAL SYSTEM LIGHT HEAT TO RETURN AIR                 DESICC 180
      QPSUM = QPSUM + <QLIGHTRETURN>*ZMULT                                      DESICC 181
C              SUM UP THE TOTAL INFILTRATION AIR                                DESICC 182
      CINF = CINF + <CFMINF>*RETR*ZMULT                                         DESICC 183
C              DCV - Calculate zone Occupancy based vent CFM and fraction       -044c  104
      IF((<MIN-OA-METHOD>.LT.0) .AND. (CFMZ .GT. 0.))  THEN                     -044c  105
        MZ = ISPB + (<NZSPACE>-1)*MZLEN                                         -044c  106
        <DCVOAcfmZ> = SchVal(<PEOPLE-SCHEDULE>, 1.)                             -045b   57
     &              * <ZPPLNO> * <OA-CFM/PER>                                   -045b   58
        IF(<MIN-OA-METHOD>.EQ.-1) <DCVOAcfmZ> = RETR*<DCVOAcfmZ>                -044c  108
        XX = <OUTSIDE-AIR-CFM>                                                  -044c  109
        IF(XX .EQ. 0.)                                                          -044c  110
     $     XX = AMAX1(<OA-FLOW/AREA>*<AREA>,<OA-CHANGES>*<VOLUME>/60.)          -044c  111
        <DCVOAcfmZ> = AMAX1(<DCVOAcfmZ>,XX)                                     -044c  112
        <DCVOAcfmFrac> = AMIN1(1.,<DCVOAcfmZ>/CFMZ)                             -044c  113
        <DCVOAcfmS> = <DCVOAcfmS> + <DCVOAcfmZ>*ZMULT                           -044c  114
        <DCVOAcfmFracCrit> = AMAX1(<DCVOAcfmFracCrit>,<DCVOAcfmFrac>)           -044c  115
      ELSE                                                                      -044c  116
        <DCVOAcfmZ> = 0.0                                                       -044c  117
        <DCVOAcfmFrac> = 0.0                                                    -044c  118
      ENDIF                                                                     -044c  119
C              ZONE WEIGHT THE RETURN AIR TEMPERATURE                           DESICC 184
      TR = TR + TAVE*(CFMZ-EXCFM)*ZMULT                                         DESICC 185
  280 IF (<ZONE-TYPE> .EQ. 3)  GO TO 490                                        DESICC 186
      ZKW = ZKW + <ZKW>                                                         DESICC 187
      <SKW> = <SKW> + ZKW*ZMULT                                                 DESICC 188
C              SUM END-USE VARIABLES FOR THIS ZONE                              DESICC 189
C              FILL THE ZONE REPORT BUFFER                                      DESICC 191
      IF ((<IZNBUFP> .NE. 0) .AND. (IRSCH .NE. 0)) CALL USERZR(ZP1,ZP2)         DESICC 192
C              WRITE THE ZONE SUMMARY REPORT RECORDS                            DESICC 193
      IF (IRPZON .NE. 0)  CALL RPTZON                                           DESICC 194
C              INCREMENT THE ZONE POINTER                                       DESICC 195
  490 ZP1 = ZP1 + NZD                                                           DESICC 196
  500 CONTINUE                                                                  DESICC 197
C ********************** END OF ZONE LOOP *************************             DESICC 198
C                                                                               DESICC 199
C              TOTAL SYSTEM LOADS                                               DESICC 200
C                                                                               DESICC 201
C              CALCULATE THE RETURN CFM (EXCLUDING PLENUM EXHAUST)              DESICC 202
      RCFM = CFM - ECFM                                                         DESICC 203
C              CALCULATE THE RETURN AIR TEMPERATURE                             DESICC 204
      TR = TR/(RCFM+.01)                                                        DESICC 205
C              GET TOTAL EXHAUST CFM AND LATENT GAIN FROM PLENUMS               DESICC 206
      QLSUMP = 0.                                                               DESICC 207
      ECFMP = 0.                                                                DESICC 208
      CINFP = 0.                                                                DESICC 209
      Nplen = <NumPlenZONES>                                                    HVAC2   18
      IF (Nplen .EQ. 0)  GOTO 511                                               HVAC2   19
      DO 510  NZ=1,Nplen                                                        HVAC2   20
c              pick up the pointer to the plenum                                HVAC2   21
      ZP1    = <ISZONES-plenum> + (NZ-1)*NZD                                    HVAC2   22
      ZP2 = <ZP2>                                                               DESICC 213
      IF (<EXHAUST-SOURCE> .eq. 1) THEN  ! makeup by system OA                  -046    80
        CFMplen = RCFM * <AREA>/<PLENMULT>                                      -046    81
        Call ZoneExhaust(1, CFMplen)     ! set EXCFM                            -046    82
      ELSE                                                                      -046    83
        EXCFM = 0.                                                              -046    84
      ENDIF                                                                     -046    85
      ECFMP = ECFMP + EXCFM*<MULTIPLIER>                                        DESICC 215
      RETRP = 1.0 - EXCFM*<PLENMULT>/(<AREA>*(RCFM+1.0E-6))                     DESICC 216
      QLSUMP = QLSUMP + <QL>*<MULTIPLIER>*RETRP                                 DESICC 217
      CINFP = CINFP + <CFMINF>*<MULTIPLIER>*RETRP                               DESICC 218
  510 CONTINUE                                                                  DESICC 219
  511 CONTINUE                                                                  HVAC2   23
C              ADJUST QLSUM AND CINF FOR PLENUM EFFECTS                         DESICC 220
      RETRP = 1. - ECFMP/(RCFM+1.0E-6)                                          DESICC 221
      QLSUM = QLSUM*RETRP + QLSUMP                                              DESICC 222
      CINF = CINF*RETRP + CINFP                                                 DESICC 223
C              ADD PLENUM EXHUAST TO ZONE EXHAUST FOR USE IN SDSF               DESICC 224
      ECFM = ECFM + AMIN1(ECFMP,RCFM)                                           DESICC 225
      CALL SDSF                                                                 DESICC 226
C              RETURN CFM (INCLUDING PLENUM EXHAUST) FOR HOURLY REP             DESICC 227
      RCFM = CFM - ECFM                                                         DESICC 228
      DO 600 I=1,7                                                              DESICC 229
      IF (IMODE .EQ. I)  DMODE(I) = 1.                                          DESICC 230
  600 CONTINUE                                                                  DESICC 231
      OPMODE = FLOAT(IMODE)                                                     DESICC 232
      RETURN                                                                    DESICC 233
      END                                                                       DESICC 234
      SUBROUTINE DESIGN                                                         DESIGN   2
C                                                                               DESIGN   3
C                            CALCULATE DESIGN (NON-SPECIFIED) QUANTITIES        DESIGN   4
C                                                                               DESIGN   5
C              DEVELOPED BY                                                     -130     1
C                            J. J. Hirsch & S. D. Gates                         -130     2
C                            James J. Hirsch & Associates                       -130     3
C                            Camarillo, California                              -130     4
C              BASED UPON CODE DEVELOPED BY J. J. Hirsch and                    -130     5
C                            W. F. Buhl                                         -130     6
C                            A. E. Erdem                                        -130     7
C                            Lawrence Berkeley National Laboratory              -130     8
C                            University of California                           -130     9
Copyright (c) 1997 by James J. Hirsch. All Rights Reserved. Unpublished         -130    10
c rights reserved under the Copyright Laws of the United States.                -130    11
c RESTRICTED RIGHTS NOTICE: Government use, reproduction or disclosure          -130    12
c is subject to restrictions as set forth in Rights in Data (g)(3) in           -130    13
c UC/LBL purchase order 4607010 with J.J. Hirsch & Associates.                  -130    14
C                                                                               DESIGN   7
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON  /BUF   / DBUF(52,9999), IZREF(9999),                              -048a    8
     &                 DAYMTR(61,24), ElecPeaks5(13,25,24)                      Time     2
      DIMENSION        IDBUF(52,9999), OBUF(42,24,4), IOBUF(42,24,4)            -048a    9
      EQUIVALENCE      (DBUF(1,1),IDBUF(1,1)),                                  /BUF/    5
     1                 (OBUF(1,1,1),DBUF(1,1)),                                 /BUF/    6
     2                 (OBUF(1,1,1),IOBUF(1,1,1))                               /BUF/    7
      COMMON /DDSDAT/ FONh, SFKWh, DTSh, CFMRATh, FONNGTh, RCFMmix,             /DDSDAT/ 2
     1                RfanCFM, EXFIL, DTDUCT, DTDUCTh, TCDFSR, THDFSR,          /DDSDAT/ 3
     2                CFMINh, CFMINc, CFMINhm, CFMINcm, CFMINt,                 /DDSDAT/ 4
     3                TCMINcoil, THMAXcoil, IWarmestZ, IColdestZ                /DDSDAT/ 5
      DIMENSION       DDSDAT(21)                                                /DDSDAT/ 6
      EQUIVALENCE     (DDSDAT(1), FONh)                                         /DDSDAT/ 7
      COMMON  /DESDAT/ ZCFM,ICFM,ZVENT,C1,IFLAG                                 RemPA    3
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                 IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                        /FILES/  3
     2               , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                   /FILES/  4
     3                 IHRREP(3), IHRPAS(2)                                     /FILES/  5
      common  /FNSYS/  ISKIPS, MSYSF(120)                                       /FNSYS/  2
      COMMON  /HRREP / Irb, Ihrp, Lrb, Lhrp, Nrb, Nhrp, IVTLIM(3,50),           HR       5
     &                 IGRPtr, IBRPtr, IRSch, IRSchT(5),                        HR       6
     &                 NHRTyp(3), ITBUF(3), ITBUFB(3), ITBUFE(3),               HR       7
     &                 IHREOF, ICDFLG                                           HR       8
      COMMON  /MISCD / TEMPS(4,9999),CONS(5),TEMPSL(9999),                      -048a   10
     1                 BLDGQH,BLDGQC,BLDGQL,BLDGP,BPMULT,                       /MISCD/  3
     $                 DBTMIN,DBTMAX,WMIN,WMAX,NSPZ(9999),                      -048a   11
     3                 DQ, DTP, DTR, DTS, FPI, PLRCC , POM, TC2, TDM,           /MISCD/  5
     4                 TRA,WCOL,WCOLM,WMM,YPI,KWBTU,BTUKW,UNFILD,Unusedm        RemPA   45
      REAL             KWBTU                                                    /MISCD/  7
      COMMON  /PIUDAT/ ERFON,ERFOFF,TFZ,ZFONLY,IBF,BBR,MSTEMP,F,                -044e2   1
     &                 CFMIND,CFMI,FRACIAZ,HONS,RCFMI,RCFMMI,RCFMTX,            -044e2   2
     &                 TIAZ,TIC,TIH,ZCFMT,ZQHSMN,TEND1,TEND2,TRY2,F2,           -044e2   3
     &                 FNSZHP,MAXSTZ                                            -044e2   4
      DIMENSION        ZDPIU(8)                                                 -044e2   5
      EQUIVALENCE     (ZDPIU(1),ERFON)                                          -044e2   6
      COMMON  /PLANTD/ QHMP,TMP,CFMP,QHPP,CFMPP,                                /PLANTD/ 2
     1                 QHZP,TZP,DHWPKW,DHWPLF,DHWQRP                            RemPA   46
      REAL             PLANTD(10)                                               RemPA   47
      EQUIVALENCE      (PLANTD(1), QHMP)                                        RemPA   48
      COMMON  /PTRPLT/ Ipm,Ilp,Ich,Ibl,Idw,Itw,Ipv,Ign,Itk,Ihx,                 PV       1
     &                 Iec,Ilm,Iem,Ifm,Ism,Icm,Imm,Imc,Igl,Isp2,                XFC2     1
     &                 Ispare(5),  Ipe,                                         HVAC19   3
     &                 Npm,Nlp,Nch,Nbl,Ndw,Ntw,Npv,Ngn,Ntk,Nhx,                 PV       2
     &                 Nec,Nlm,Nem,Nfm,Nsm,Ncm,Nmm,Nmc,Ngl,Nsp2,                XFC2     2
     &                 Nspare(5),  Npe,                                         HVAC19   6
     &                 Lpm,Llp,Lch,Lbl,Ldw,Ltw,Lpv,Lgn,Ltk,Lhx,                 PV       3
     &                 Lec,Llm,Lem,Lfm,Lsm,Lcm,Lmm,Lmc,Lgl,Lsp2,                XFC2     3
     &                 Lspare(5),  Lpe,                                         HVAC19   9
     &                 Jpm,Jlp,Jch,Jbl,Jdw,Jtw,Jpv,Jgn,Jtk,Jhx,                 PV       4
     &                 Jec,Jlm,Jem,Jfm,Jsm,Jcm,    Jmc,Jgl,                     HVAC19  11
     &                 Jpe, kpr, NumMeters, NumIntHX                            XFC1     1
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      COMMON  /REPORT/ IREPRT(4,37),IPRG,IUNIQV(100),IUNIQS(100),IUNIQL         HVAC14   4
      COMMON  /REPRT1/ IREFG, Iuniq                                             XFC1     2
      COMMON  /SYSTD / TH,TC,TM,TR,QH,QC,QHZ,QCZ,QHB,QHP,QHUM,                  /SYSTD/  2
     1                 QDHUM,TCMIN,THMAX,QLSUM,QPSUM,CFM,CFMH,CFMC,             /SYSTD/  3
     2                 RCFM,ECFM,CINF,FON,HON,CON,BON,SCONS(3),PH,PC,           /SYSTD/  4
     3                 SKW,FANKW,unused1,WR,WM,WCOIL,WW,PO,D,                   -046f    1
     4                 FTEMP,TCR,QHR,RfanPumpKW,SGAS,SKWQH,SKWQC,QCLAT,         -131    23
     5                 SFKW,RFKW,FONNGT,WSURF,RWalkinQ,TSURF,TRh,               -131    24
     6                 CBF,CBF1,CBF2,EON,PLRCFM,PLRC,PLRH,QCM1,                 /SYSTD/  8
     7                 QCM2,QHM1,EIRM1,EIRM2,EIR,OFKW,QCT,QCS,                  /SYSTD/  9
     8                 WRMAX,WRMIN,CFMRAT,QdistG,QdistL,RON,QHT,                /SYSTD/ 10
     9                 TPOMIN,POMIN,QHSUP,QRSENS,QRLAT,QRREC,QRREJ,             /SYSTD/ 11
     1                 RCOMKW,RDEFKW,RAUXKW,ECFMP,CFMIN,CINFP,DT,DW,            /SYSTD/ 12
     2                 EWB,IC,NATTSP,Q,RETR,SLOAD,QLSUMP,T,TCHUM,TEND,          /SYSTD/ 13
     3                 TS,hgbmin,HPDefE,EconoOnly,TDuctEnv,                     -044e1   1
     4                 QCUNMT,CapRh,CapRph,CapRc                                HVAC25   3
      REAL             SYSTD(113)                                               HVAC19  13
      EQUIVALENCE      (SYSTD(1),TH)                                            RemPA   65
      COMMON  /ZONED / EXCFM,FH,FC,CFMZ,QHBZ,QOVER,THZ,TCZ,ERMAX,ERMIN,         /ZONED/  2
     1                 TRY,FTD,CORINT,G0,G1,G2,G3,SIGMAG,TL,ZQHR,TAVE,          /ZONED/  3
     2                 ZQH,ZQC,FCHPS(15),ACFM,ZKW,TCMINZ,THMAXZ,                /ZONED/  4
     3                 ERMAXM,ERMINM,THR,CSSCND,CSSVEC,HENOW,QGWIN,             /ZONED/  5
     4                 QSNABT,QGOPWL,QGVEC,CFMCVT,SSFPT,CFMVNT,ZFANKW,          /ZONED/  6
     5                 ZKWCBT,ZKWHBT,ZCapRbbrd, XC,ZC,XH,ZH                     -044e2   7
      REAL ZONED(63)                                                            -044e2   8
      EQUIVALENCE (ZONED(1),EXCFM)                                              /ZONED/  9
      COMMON /SHP   / QCRUN,QCLOAD,QCGAS,QCAUX,QCGSLD,QCGSUP,                   /SHP/    2
     1                QCWAS,QCWASU,QCGSAV,QCFAN,                                /SHP/    3
     2                QHRUN,QHLOAD,QHGAS,QHAUX,QHGSLD,QHGSUP,                   /SHP/    4
     3                QHWAS,QHWASU,QHGDFR,QHFAN,          CUR(25),              /SHP/    5
     4                GSAV1,GASV2,PCH,ISZCZ,GCAP(2),GEDB,QHDFRG,                -044c1   1
     5                GRPM,PLRSUP,CFMCYC,CLPLR,CFMVVT,QHZHP,PCCEDB,             /SHP/    7
     6                IHPREP,IHPOUT,IHPHRR,IHPHRN,IRST,IREN                     /SHP/    8
      COMMON /SHPZ  / QCRUNZ,QCLOADZ,QCGASZ,QCAUXZ,QCGSLDZ,QCGSUPZ,             /SHP/    9
     1                QCWASZ,QCWASUZ,QCGSAVZ,QCFANZ,                            /SHP/   10
     2                QHRUNZ,QHLOADZ,QHGASZ,QHAUXZ,QHGSLDZ,QHGSUPZ,             /SHP/   11
     3                QHWASZ,QHWASUZ,QHGDFRZ,QHFANZ                             /SHP/   12
      DIMENSION       SHP(60),SHPZ(20)                                          /SHP/   13
      EQUIVALENCE     (SHP,QCRUN),(SHPZ,QCRUNZ)                                 /SHP/   14
     1               ,(DFM1,CUR(18)),(DFM2,CUR(19)),(DFM3,CUR(20))              /SHP/   15
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
      COMMON  /LOOPKY/ CHW, PIPE2, loop3, HW, loop5, STM, WLHP, DHW,            -131     1
     &                 CW, Deleted, PIPE2h, WLHPh, COGEN, NoType,               -131     2
     &                 FIXED, OA, SCH, LOAD,  ZONE, OUTDOOR,                    -131     3
     &                 STANDBY, DEMAND, SNAP, SCHEDULED, SubhourDemand,         -033     1
     &                 CONSTANT, VARIABLE, ModeText(4),                         -131     5
     &                 OFFMODE, FLOATING, HEATMODE, COOLMODE,                   -131     6
     &                 AtCoils, EnterLoop, AtPump,                              -131     7
     &                 INDOORS, OUTDOORS, TUNNEL, UNDERGROUND,                  -131     8
     &                 PRIMARY, SECONDARY,                                      -131     9
     &                 DIRECT, HX,                                              -131    10
     &                 WATER, ETHYLENE, PROPYLENE, BRINE                        -131    11
      INTEGER          CHW, PIPE2, loop3, HW, loop5, STM, WLHP, DHW,            -131    12
     &                 CW, Deleted, PIPE2h, WLHPh, COGEN, NoType,               -131    13
     &                 FIXED, OA, SCH, LOAD,  ZONE, OUTDOOR,                    -131    14
     &                 STANDBY, DEMAND, SNAP, SCHEDULED, SubhourDemand,         -033     2
     &                 CONSTANT, VARIABLE,                                      -131    16
     &                 OFFMODE, FLOATING, HEATMODE, COOLMODE,                   -131    17
     &                 AtCoils, EnterLoop, AtPump,                              -131    18
     &                 INDOORS, OUTDOORS, TUNNEL, UNDERGROUND,                  -131    19
     &                 PRIMARY, SECONDARY,                                      -131    20
     &                 DIRECT, HX,                                              -131    21
     &                 WATER, ETHYLENE, PROPYLENE, BRINE                        -131    22
      REAL             MAX2,MAX3,MAX4,MAX5,MAX51,MAX52                          DESIGN  24
      LOGICAL PARPIU,SERPIU                                                     DESIGN  25
      INTEGER DDSTYPE                                                           DESIGN  30
      COMMON /WCTRL/   IwinReturn, Imsgflg                                      /WCTRL/  2
#ifndef _DLL                                                                 /* -048     1 */ 
      COMMON /WIN_MB/ MB_OK,MB_ICONSTOP,MB_ICONEXCLAMATION,MB_TASKMODAL,        -048     2
     &                MB_ICONINFORMATION                                        -048     3
#else                                                                        /* -048     4 */ 
      include 'msgbox.fi'                                                       -048     5
#endif                                                                       /* -048     6 */ 
      H(DB,W) = 0.24*DB + (1061.0+0.444*DB)*W                                   H        2
      V(DB,W,P) = 0.754*(DB+459.7)*(1.0+1.605*W)/P                              V        2
C              IFLAG IS SET TO A NON-ZERO VALUE IF A FATAL ERROR                DESIGN  33
C              OCCURS DURING THE DESIGN CALCULATIONS                            DESIGN  34
      IFLAG  = 0                                                                DESIGN  35
C              BPMULT IS A MULTIPLIER USED TO CONVERT STANDARD                  DESIGN  36
C              CFM TO LOCAL CFM (USER INPUT ASSUMED TO BE STND)                 DESIGN  37
      BPMULT = 29.921/BLDGP                                                     DESIGN  38
      BPMULT = FLOAT(INT(BPMULT*100.+0.5))/100.                                 DESIGN  39
      PATM = BLDGP                                                              DESIGN  40
C              IERR IS A ANOTHER ERROR FLAG                                     DESIGN  41
      IERR   = 0                                                                DESIGN  42
c              Flags for dual-duct constant-volume warnings                     HVAC    50
      Iddcv  = 0                                                                HVAC    51
      Iddcv1 = 0                                                                HVAC    52
c                                                                               XFC2    18
c              Set up refrigerated display cases                                XFC2    19
      JJ = 1                                                                    XFC2    20
      IREFG =0                                                                  XFC2    21
c              Loop through systems and zones looking for refrig equip          XFC2    22
      DO  NS=1,NSYS                                                             XFC2    23
        NSP = IS + (NS-1)*NSS                                                   XFC2    24
        ISZ = <ISZONES>                                                         XFC2    25
        NSZ = <NZONES>                                                          XFC2    26
        DO  NZ=1,NSZ                                                            XFC2    27
          ZP1 = ISZ + (NZ-1)*NZD                                                XFC2    28
          ZP2 = <ZP2>                                                           XFC2    29
          IF (<ZONE-TYPE> .NE. 1)  CYCLE                                        XFC2    30
c              Design calcs for ice rink                                        IcRink  10
          IF (<zn:ICE-RINK> .GT. 0)  CALL IceRink(100, <zn:ICE-RINK>)           IcRink  11
          IG = 1                                                                XFC2    31
          <NUM-REFG-EQUIP> = 0                                                  XFC2    32
c              See if refg equipment exists                                     XFC2    33
          IF (<REFG-ZONE-BTUH> .EQ. -66666.)  CYCLE                             XFC2    34
c              report flag                                                      XFC2    35
          IREFG = 1                                                             XFC2    36
c              process for each temperature level                               XFC2    37
          DO  IG=1,3                                                            XFC2    38
            IF (<REFG-ZONE-BTUH> .EQ. -66666.)  EXIT                            XFC2    39
c              number of temperature levels in this zone                        XFC2    40
            IE    = IG                                                          XFC2    41
c              discharge and evaporator temp                                    XFC2    42
            TCASE = <REFG-DISCHARGE-T>                                          XFC2    43
            TEVAP = <REFG-EVAP-T>                                               XFC2    44
c              Zone sens heat gain (negative) at the Refg-Zone-Des-T.           XFC2    45
c              Adjust to the loads temperature                                  XFC2    46
  324       QSENS = <REFG-ZONE-BTUH> * <REFG-ZONE-SHR>                          XFC2    47
            X     = QSENS / (<REFG-ZONE-DES-T> - TCASE)                         XFC2    48
            <REFG-QS-TLOADS> = (<TLOADS> - TCASE) * X                           XFC2    49
c              Conductance of the case for use in TEMDEV                        XFC2    50
            <REFG-CONDUCTANCE> = -X                                             XFC2    51
c              Portion of fixture electric loads that go to space               XFC2    52
            ElecToSpace = (<REFG-AUX-KW>+<REFG-ASH-KW>) * BTUKW                 XFC2    53
     &                                            * (1.-<REFG-AUX-FRAC>)        XFC2    54
c              Zone heat gain at the design heating and cooling temps           XFC2    55
            <QRMIN> = (<DESIGN-HEAT-T> - TCASE)*X + ElecToSpace                 XFC2    56
            <QRMAX> = (<DESIGN-COOL-T> - TCASE)*X + ElecToSpace                 XFC2    57
c              store in temperature-dependent and independent in                XFC2    58
c              Xface blocks                                                     XFC2    59
            CALL PutDesignVars3(<zn;RefgCondPtr>, -<REFG-ZONE-BTUH>,-X,         XFC2    60
     &                                                            TCASE)        XFC2    61
            CALL PutDesignVars1(<zn;RefgFixedPtr>, ElecToSpace)                 XFC2    62
c              Latent heat gain to the zone (negative)                          XFC2    63
            <REFG-QL-DES-W> = <REFG-ZONE-BTUH> * (1.0 - <REFG-ZONE-SHR>)        XFC2    64
c              Design room and evaporator humidity ratios                       XFC2    65
            <REFG-ZONE-DES-W> =                                                 XFC2    66
     &             WFUNC(<REFG-ZONE-DES-T>,<REFG-ZONE-DES-RH>,BLDGP)            XFC2    67
            X = AMAX1(<REFG-EVAP-T>, -50.)                                      XFC2    68
            <REFG-EVAP-W> = WFUNC(X, 100.0, BLDGP)                              XFC2    69
c              Reset the SHR if the evaporator is dry, but still incurs         XFC2    70
c              latent loads                                                     XFC2    71
            IF (<REFG-ZONE-DES-W> .GT. <REFG-EVAP-W>                            XFC2    72
     &        .OR.  <REFG-ZONE-SHR> .EQ. 1.0)  GOTO 321                         XFC2    73
              CALL MSGSIM(-2,IG,IG,IG,IG)                                       XFC2    74
              WRITE (IOUTPT,3321) IG                                            XFC2    75
 3321 FORMAT(14X,'Zone refrigeration unit #',I1,' has a dry coil ',             XFC2    76
     $        'according to the design conditions,'/                            XFC2    77
     $         14X,'but the specified',                                         XFC2    78
     $        'REFG-ZONE-SHR is not 1.0. It has been reset to 1.0.')            XFC2    79
              <REFG-ZONE-SHR> = 1.0                                             XFC2    80
              GO TO 324                                                         XFC2    81
 321        CONTINUE                                                            XFC2    82
            <REFG-CFM> = 0.                                                     XFC2    83
            IF (<REFG-ZONE-SHR> .EQ. 1.0)  CYCLE                                XFC2    84
c              Lbs of water removed per hour, and corresponding                 XFC2    85
c              lbs airflow                                                      XFC2    86
            X = -<REFG-QL-DES-W> / 1061.                                        XFC2    87
            X = X / (<REFG-ZONE-DES-W> - <REFG-EVAP-W>)                         XFC2    88
c              CFM between zone and the case.  Since the CFM will only          XFC2    89
c              be used at the systems level, include the zone mult              XFC2    90
            SPVOL = V(<REFG-ZONE-DES-T>,<REFG-ZONE-DES-W>,BLDGP)                XFC2    91
            <REFG-CFM> = X * SPVOL / 60.0 * <MULTIPLIER>                        XFC2    92
            IF (IREPRT(2,34) .NE. 0)  WRITE(IOUTPT,3323) IG, TCASE,             XFC2    93
     &       TEVAP, QSENS, <REFG-QS-TLOADS>, <QRMIN>, <QRMAX>,                  XFC2    94
     &       <REFG-QL-DES-W>, <REFG-ZONE-DES-W>, <REFG-EVAP-W>,                 XFC2    95
     &       <REFG-CFM>,<REFG-CONDUCTANCE>                                      XFC2    96
 3323 FORMAT(13H0REFRIG CASE ,I1,10H.  TCASE = ,F5.1,9H  TEVAP = ,              XFC2    97
     1 F5.1,9H  QSENS = ,F10.1,13H  QS-TLOADS = ,F10.1,9H  QRMIN =,             XFC2    98
     2 F10.1/9H  QRMAX = ,F10.1,13H  QL-DESIGN = ,F10.1,12H  DESIGN-W = ,       XFC2    99
     3 F6.4,10H  EVAP-W = ,F6.4/7H  CFM =,F10.2,6H COND=,F10.2)                 XFC2   100
 328      ENDDO  ! IG                                                           XFC2   101
          <NUM-REFG-EQUIP> = IE                                                 XFC2   102
        ENDDO  ! NZ                                                             XFC2   103
      ENDDO    ! NS                                                             XFC2   104
c              End of zonal level set-up for refrigerated cases                 XFC2   105
C                                                                               DESIGN 126
C              ADJUST PEAKS FROM LOADS IF ZONE SIZING-OPTION=ADJUST-LOADS       DESIGN 127
C                                                                               DESIGN 128
      DO 1350 NZ=1,NZONE                                                        DESIGN 129
      ZP2    = IZ + (NZ-1)*NCZD                                                 DESIGN 130
      P2     = ZP2                                                              DESIGN 131
      IF(<SIZING-OPTIONZ> .EQ. 0)  GOTO 1345                                    DESIGN 132
      IF((<MAX-COOL-RATE>.NE.0.0).AND.(<MAX-HEAT-RATE>.NE.0.0))                 DESIGN 133
     1  GOTO 1345                                                               DESIGN 134
C              SET INDEX FOR LOADS TEMPERATURE                                  DESIGN 135
      JJ     = 1                                                                DESIGN 136
C              ZERO INTERNAL WALL ADJUSTMENT SUMS                               DESIGN 137
      QHINT  = 0.0                                                              DESIGN 138
      QCINT  = 0.0                                                              DESIGN 139
C              IF D-H-T OR D-C-T ARE UNDEFINED DEFAULT THEM                     DESIGN 140
      DHT    = <TLOADS>                                                         DESIGN 141
      DCT    = <TLOADS>                                                         DESIGN 142
      TLOADS = <TLOADS>                                                         DESIGN 143
      IF(<DESIGN-HEAT-T> .NE. 0.0)  DHT = <DESIGN-HEAT-T>                       DESIGN 144
      IF(<DESIGN-COOL-T> .NE. 0.0)  DCT = <DESIGN-COOL-T>                       DESIGN 145
C              CALC EXTERNAL CONDUCTANCE AND INFILTATION CHANGE                 DESIGN 146
      QHEXT  = (<CONDUCE>+CONS(1)*<CFMIPEAKH>)*(TLOADS-DHT)                     DESIGN 147
      QCEXT  = (<CONDUCE>+CONS(1)*<CFMIPEAKC>)*(TLOADS-DCT)                     DESIGN 148
C              LOOP THROUGH INTERNAL WALLS AND CALC CORRECTIONS                 DESIGN 149
      IE     = <NATTCH>                                                         DESIGN 150
C              IF NO INTERNAL WALLS FOR THIS ZONE SKIP                          DESIGN 151
      IF(IE .EQ. 0)  GOTO 1340                                                  DESIGN 152
      DO 1330 J=1,IE                                                            DESIGN 153
C              CALC POINTER TO DATA                                             DESIGN 154
      ZP2    = P2                                                               DESIGN 155
      I1     = <IATTCH> + (J-1)*3                                               DESIGN 156
      CONDUC = AA(I1+1)                                                         DESIGN 157
C              FIND ZONE CORRESPONDING TO THIS ATTACHED SPACE                   DESIGN 158
      DO 1310 NZ2=1,NZONE                                                       DESIGN 159
      ZP2    = IZ + (NZ2-1)*NCZD                                                DESIGN 160
      IF(<NZSPACE> .EQ. IA(I1))  GOTO 1320                                      DESIGN 161
 1310 CONTINUE                                                                  DESIGN 162
C              DID NOT FIND THE ZONE                                            DESIGN 163
      ZP2    = P2                                                               DESIGN 164
      CALL MSGSIM(-1,II,II,II,II)                                               DESIGN 165
      WRITE(IOUTPT,1311) (<ZONE-NAME>,II=1,8),J,                                -42c    17
     $                   (IDBUF(II,IA(i1)),II=1,8),IA(I1)                       -42c    18
 1311 FORMAT(14X,8A4,' attached wall #',I3,' is NEXT-TO LOADS SPACE '/          -42c    19
     $       14X,8A4,'(which is SPACE number ',I3,')'/                          -42c    20
     $       14X,'That SPACE has not been defined as a ZONE in SYSTEMS')        -42c    21
      IFLAG  = 1                                                                DESIGN 169
      GOTO 1340                                                                 DESIGN 170
C              GET TEMP ON OTHER SIDE OF WALL                                   DESIGN 171
 1320 IF(<DESIGN-HEAT-T> .EQ. 0.0)  <DESIGN-HEAT-T> = <TLOADS>                  DESIGN 172
      IF(<DESIGN-COOL-T> .EQ. 0.0)  <DESIGN-COOL-T> = <TLOADS>                  DESIGN 173
C              CALC ADJUSTMENT                                                  DESIGN 174
      QHINT  = QHINT + (<DESIGN-HEAT-T>-DHT-(<TLOADS>-TLOADS))*CONDUC           DESIGN 175
 1330 QCINT  = QCINT + (<DESIGN-COOL-T>-DCT-(<TLOADS>-TLOADS))*CONDUC           DESIGN 176
C              RESTORE POINTER TO ZONE DATA                                     DESIGN 177
 1340 ZP2    = P2                                                               DESIGN 178
C              ADJUST ZONE PEAKS FROM LOADS                                     DESIGN 179
      IF(IREPRT(2,34).NE.0)  WRITE(IOUTPT,9350) (<ZONE-NAME>,II=1,8),NZ,        -044a    1
     1                                        <QMAX>,                           DESIGN 181
     2                     <QMIN>,<CONDUCE>,DCT,DHT,TLOADS,                     DESIGN 182
     3                     <CFMIPEAKC>,<CFMIPEAKH>,QCEXT,QHEXT,                 DESIGN 183
     4                     QCINT,QHINT                                          DESIGN 184
      <QMAX> = AMAX1(0.0 , <QMAX>+QCINT+QCEXT)                                  DESIGN 185
      <QMIN> = AMIN1(0.0 , <QMIN>+QHINT+QHEXT)                                  DESIGN 186
      IF(IREPRT(2,34).NE.0)  WRITE(IOUTPT,9351) <QMAX>,<QMIN>                   IREPRT  15
 9350 FORMAT(/' SIZING-OPTION=ADJUST-LOADS FOR ZONE ' ,8A4,' (#',I4,')'/        -044a    2
     113H OLD QMAX  = ,F14.0,13H OLD QMIN  = ,F14.0,13H CONDUCE   = ,           DESIGN 189
     2   F14.0  /                                                               DESIGN 190
     313H DCT       = ,F14.2,13H DHT       = ,F14.2,13H TLOADS    = ,           DESIGN 191
     4   F14.2  /                                                               DESIGN 192
     513H CFMIPEAKC = ,F14.2,13H CFMIPEAKH = ,F14.2  /                          DESIGN 193
     613H QCEXT     = ,F14.0,13H QHEXT     = ,F14.0  /                          DESIGN 194
     713H QCINT     = ,F14.0,13H QHINT     = ,F14.0 )                           DESIGN 195
 9351 FORMAT(                                                                   DESIGN 196
     113H NEW QMAX  = ,F14.0,13H NEW QMIN  = ,F14.0 )                           DESIGN 197
C              IF THE USER HAS NOT SPECIFIED PEAKS WE DEFAULT THEM TO           DESIGN 198
C              THE LOADS PROGRAM CALCULATED PEAKS.  NEGATE AS A FLAG.           DESIGN 199
C TOTAL REFRIGERATED EQUIPMENT LOADS                                            DESIGN 200
 1345 QRMIN = 0.                                                                DESIGN 201
      QRMAX = 0.                                                                DESIGN 202
      IF (<NUM-REFG-EQUIP> .EQ. 0)  GOTO 1346                                   DESIGN 203
      IE = <NUM-REFG-EQUIP>                                                     DESIGN 204
      DO 1344  IG=1,IE                                                          DESIGN 205
      QRMIN = QRMIN + <QRMIN>                                                   DESIGN 206
 1344 QRMAX = QRMAX + <QRMAX>                                                   DESIGN 207
C INCLUDE DESIGN LOADS FROM REFRIG EQUIP                                        DESIGN 208
 1346 IF (<MAX-HEAT-RATE> .EQ. 0.) <MAX-HEAT-RATE> = -(<QMIN> + QRMIN)          DESIGN 209
      IF (<MAX-COOL-RATE> .EQ. 0.) <MAX-COOL-RATE> =                            DESIGN 210
     1            -(AMAX1((<QMAX>+QRMAX), .00001))                              DESIGN 211
 1350 CONTINUE                                                                  DESIGN 212
C              LOOP THROUGH THE ZONES                                           DESIGN 213
      DO 2000 NZ=1,NZONE                                                        DESIGN 214
      ZP2    = IZ + (NZ-1)*NCZD                                                 DESIGN 215
C              CONVERT EXHAUST STND CFM TO LOCAL                                DESIGN 216
      IF(<EXHAUST-CFM> .EQ. 0.0)  <EXHAUST-KW> = 0.0                            DESIGN 217
      <EXHAUST-CFM> = <EXHAUST-CFM>*BPMULT                                      DESIGN 218
      <EXHAUST-KW> = <EXHAUST-KW>*<EXHAUST-CFM>/BPMULT                          DESIGN 219
C              IF NOT DEFINED COMPUTE KW FOR EXH FAN                            DESIGN 220
      IF((<EXHAUST-EFF>.NE.0.0).AND.(<EXHAUST-KW>.EQ.0.0))                      DESIGN 221
     1<EXHAUST-KW>  = (<EXHAUST-CFM>*<EXHAUST-STATIC>)                          DESIGN 222
     2                /(<EXHAUST-EFF>*8520.0*BPMULT)                            -043a    1
C              ADJUST THE RATED-CFM AT ZONE LEVEL FOR ALTITUDE                  DESIGN 224
      <RATED-CFMZ> = <RATED-CFMZ>*BPMULT                                        DESIGN 225
 2000 CONTINUE                                                                  DESIGN 226
C                                                                               DESIGN 227
C            Zero GAS-HYDRONIC load to DHW and total capacity                   RemPA  295
      RDHWC  = 0.                                                               RemPA  296
      RDHWT  = 0.                                                               RemPA  297
      IF(IREPRT(2,34).NE.0)  WRITE(IOUTPT,9001)                                 IREPRT  16
     1                       BLDGQH,DBTMIN,WMIN,BLDGQC,DBTMAX,WMAX,             RemPA  299
     2                       BLDGQL,BLDGP                                       RemPA  300
 9001 FORMAT(44H1DESIGN CALCULATIONS FOR PLANT                   /              RemPA  301
     111H BLDGQH  = ,F11.0,12H  DBTMIN  = ,F11.0,12H  WMIN    = ,F11.6 /        RemPA  302
     211H BLDGQC  = ,F11.0,12H  DBTMAX  = ,F11.0,12H  WMAX    = ,F11.6 /        RemPA  303
     311H BLDGQL  = ,F11.0,12H  BLDGP   = ,F11.3)                               RemPA  304
c                                                                               RemPA  305
c              Loop through all systems                                         RemPA  306
c                                                                               RemPA  307
      DO 9006  NS = 1 , NSYS                                                    RemPA  308
c              pick up base ptr for this systems data                           RemPA  309
      NSP   = IS + (NS-1)*NSS                                                   RemPA  310
C              GET NUMBER OF ZONES                                              DESIGN 261
      NSZ    = <NZONES>                                                         DESIGN 262
C              GET START OF ZONE LIST                                           DESIGN 263
      ISZ    = <ISZONES>                                                        DESIGN 264
C              GET SYSTEM-TYPE                                                  DESIGN 265
C              1 = SUMMATION OF LOADS              SUM                          DESIGN 266
C              2 = SINGLE ZONE (REHEAT)            SZRH                         DESIGN 267
C              3 = MULTIZONE                       MZS                          DESIGN 268
C              4 = DOUBLE DUCT (VAV)               DDS                          DESIGN 269
C              5 = CEILING INDUCTION               SZCI                         DESIGN 270
C              6 = UNIT VENTILATOR                 UVT                          DESIGN 271
C              7 = UNIT HEATER                     UHT                          DESIGN 272
C              8 = FLOOR PANEL HEATING             FPH                          DESIGN 273
C              9 = FAN COIL                        FC                           RemPA  311
C              10= UNUSED                          ????                         RemPA  312
C              11= INDUCTION                       IU                           RemPA  313
C              12= UNUSED                          ????                         RemPA  314
C              13= VARIABLE VOLUME                 VAVS                         DESIGN 278
C              14= REHEAT SYSTEM                   RHFS                         DESIGN 279
C              15= HYDRONIC HEAT PUMP              HP                           DESIGN 280
C              16= HEATING AND VENTILATING SYSTEM  HVSYS                        DESIGN 281
C              17= RESIDENTIAL PACKAGE             RESYS                        DESIGN 282
C              18= CEILING BYPASS VAV              CBVAV                        DESIGN 283
C              19= PACKAGED SINGLE ZONE            PSZ                          DESIGN 284
C              20= PACKAGED MULTI ZONE             PMZS                         DESIGN 285
C              21= PACKAGED VAV                    PVAVS                        DESIGN 286
C              22= PACKAGED TERM AIR COND          PTAC                         DESIGN 287
C              23= POWERED INDUCTION UNIT         PIU                           DESIGN 288
      ICODE  = <SYSTEM-TYPE>                                                    DESIGN 289
      IF (<SYSTEM-TYPE>.EQ.29) ICODE=19                                         DESIGN 290
C              SET FLAG IF USER SPECIFIED SUPP-HEAT-CAP                         DESIGN 300
      IERQF = 0                                                                 DESIGN 301
      IF(<SUPP-HEAT-CAP> .LT. 0.0)  IERQF = 1                                   DESIGN 302
C              SET ZONE COIL TYPE FOR REPORTING USE                             DESIGN 303
      IF((ICODE.EQ.1) .OR. (ICODE.EQ.22))                                       DESIGN 304
     1   <ZONE-HEAT-SOURCE> = <HEAT-SOURCE>                                     DESIGN 305
      IF((ICODE.GE.6) .AND. (ICODE.LE.10))                                      DESIGN 306
     1   <ZONE-HEAT-SOURCE> = <HEAT-SOURCE>                                     DESIGN 307
      IF (<ZONE-HEAT-SOURCE> .EQ. 0)  <REHEAT-DELTA-T> = 0.                     -041c    1
c                                                                               DESIGN 308
c              If dual-duct or multizone system,                                DESIGN 309
c              check the fan arrangement                                        DESIGN 310
      IF ((ICODE .EQ. 3) .OR. (ICODE .EQ. 4) .OR. (ICODE .EQ. 20))  THEN        DESIGN 311
c              Default to single-fan system                                     DESIGN 312
        IF (<DDS-TYPE> .EQ. 0)  <DDS-TYPE> = 1                                  DESIGN 313
        IF((<DDS-TYPE> .EQ. 1) .AND. (<FAN-PLACEMENT> .EQ. 1)) THEN             DESIGN 314
c              single-fan dual-duct cannot be draw-thru                         DESIGN 315
          <FAN-PLACEMENT> = 0                                                   DESIGN 316
          CALL MSGSIM(-2,II,II,II,II)                                           DESIGN 317
          WRITE (IOUTPT, 8030)                                                  DESIGN 318
 8030     FORMAT(14X,'Single-fan dual-duct system must have a'/                 DESIGN 319
     1           14X,'BLOW-THROUGH fan.  FAN-PLACEMENT ignored.')               DESIGN 320
        ENDIF                                                                   DESIGN 321
      ELSE                                                                      DESIGN 322
c              all other system types are single-fan                            DESIGN 323
        IF (<DDS-TYPE> .GT. 0)  THEN                                            DESIGN 324
          <DDS-TYPE> = 0                                                        DESIGN 325
          CALL MSGSIM(-3,II,II,II,II)                                           DESIGN 326
          WRITE (IOUTPT,8031)                                                   DESIGN 327
 8031     FORMAT(14X,'All system types except dual-duct and multizone',         DESIGN 328
     1               'are always '/                                             DESIGN 329
     2           14X,'single-fan; Keyword DDS-TYPE ignored.')                   DESIGN 330
        ENDIF                                                                   DESIGN 331
      ENDIF                                                                     DESIGN 332
      DDSTYPE = <DDS-TYPE>                                                      DESIGN 333
c              zero out key hot deck fan quantities if single-fan               DESIGN 334
      IF (DDSTYPE .NE. 2)  THEN                                                 DESIGN 335
        <HSUPPLY-CFM>   = 0.                                                    DESIGN 336
        <HRATED-CFM>    = 0.                                                    DESIGN 337
        <HFAN-SCHEDULE> = 0                                                     DESIGN 338
      ENDIF                                                                     DESIGN 339
c              If dual-duct, estimate the cold deck temp during peak            DESIGN 340
c              heating, and the hot deck temp during peak cooling.  This        DESIGN 341
c              is necessary in order to include the effect of min flows         DESIGN 342
c              from the opposite deck on peak airflows.  Assume the             DESIGN 343
c              opposite deck is fully reset during peak peak periods,           DESIGN 344
c              unless the control is CONSTANT.                                  DESIGN 345
      IF (DDSTYPE .GT. 0)  THEN                                                 DESIGN 346
c              fully reset cold deck temp                                       DESIGN 347
        TCr = <COOL-MAX-RESET-T>                                                DESIGN 348
        IF (<COOL-CONTROL> .EQ. 1)  TCr = <MIN-SUPPLY-T>                        DESIGN 349
c              fully reset hot deck temp                                        DESIGN 350
        THr = <HEAT-MIN-RESET-T>                                                DESIGN 351
        IF (<HEAT-CONTROL> .EQ. 1)  THr = <MAX-SUPPLY-T>                        DESIGN 352
      ENDIF                                                                     DESIGN 353
C              ADJUST THE RATED-CFM FOR ALTITUDE                                DESIGN 375
      <RATED-CFM> = <RATED-CFM>*BPMULT                                          DESIGN 376
      <HRATED-CFM> = <HRATED-CFM>*BPMULT                                        DESIGN 377
C              TAKE COVERSION FACTOR OUT OF FAN DELTA T                         DESIGN 378
      <SUPPLY-DELTA-T> = <SUPPLY-DELTA-T>/(CONS(3)*BPMULT)                      DESIGN 379
      <HSUPPLY-DELTA-T> = <HSUPPLY-DELTA-T>/(CONS(3)*BPMULT)                    DESIGN 380
      <RETURN-DELTA-T> = <RETURN-DELTA-T>/(CONS(3)*BPMULT)                      DESIGN 381
      <SUPPLY-KW> = <SUPPLY-KW>/BPMULT                                          DESIGN 382
      <HSUPPLY-KW> = <HSUPPLY-KW>/BPMULT                                        DESIGN 383
      <RETURN-KW> = <RETURN-KW>/BPMULT                                          DESIGN 384
          <EVAP-CFMD> = <SWAMP-COOLER-CFM>*BPMULT                               -043a    2
          <EVAP-CFM> = <SWAMP-COOLER-CFM>*BPMULT                                -043a    3
          <DESC-NOM-CFM> = <DESC-NOM-CFM>*BPMULT                                -043a    4
          <EVAP-CL-KW> = <EVAP-CL-KW>/BPMULT                                    -043a    5
          <WS-ECONO-KW/FLOW> = <WS-ECONO-KW/FLOW>/BPMULT                        -043a    6
C              SET TEMP RISE ACROSS SUP/RET FANS TO SPEC VALUE                  DESIGN 385
      DTS    = <SUPPLY-DELTA-T>                                                 DESIGN 386
      DTSh   = <HSUPPLY-DELTA-T>                                                DESIGN 387
      DTR    = <RETURN-DELTA-T>                                                 DESIGN 388
C              ZERO THE STUFF USED FOR THE DESIGN CALCS                         DESIGN 389
      TRMAX  = 0.0                                                              DESIGN 396
      TRMIN  = 0.0                                                              DESIGN 397
      RCFMmax = 0.0                                                             HVAC25   8
      RCFMmin = 0.0                                                             HVAC25   9
      QLMAX  = 0.0                                                              DESIGN 398
      QLMIN  = 0.0                                                              DESIGN 399
      CINFMX = 0.0                                                              DESIGN 400
      CINFMN = 0.0                                                              DESIGN 401
      CFMRM  = 0.0                                                              DESIGN 402
      CFMRMh = 0.0                                                              DESIGN 403
      CFMC   = 0.0                                                              DESIGN 404
      CFMH   = 0.0                                                              DESIGN 405
      <CFM/ACH> = 0.0                                                           DESIGN 406
      DTS1   = 0.0                                                              DESIGN 407
      DTS1h  = 0.0                                                              DESIGN 408
      DTR1   = 0.0                                                              DESIGN 409
      ACFM   = 0.0                                                              DESIGN 410
      EXFIL  = 0.0                                                              ERV     57
      DALINR = (1.0+<INDUCTION-RATIO>)                                          DESIGN 412
c              flag if pipe and/or duct losses exist                            DESIGN 413
      FLAG  = <DUCT-DT> + ABS(<HOT-DUCT-DT>) + <DUCT-AIR-LOSS>                  RemPA  315
     $        + <DUCT-UA> + <HOT-DUCT-UA> + <sy:RETURN-UA>                      -044c4   1
      IF (FLAG .GT. 0.)  THEN                                                   RemPA  317
c              if not specified, default DUCT-LOSS-ZONE to first                RemPA  318
c              plenum zone                                                      RemPA  319
        IF (<DUCT-LOSS-ZONE> .EQ. 0)  THEN                                      RemPA  320
          IF (<NumPlenZONES> .GT. 0) THEN                                       HVAC2   24
            <DUCT-LOSS-ZONE> = <ISZONES-plenum>                                 HVAC2   25
            <DUCT-ZTYPE>     = 3  ! plenum                                      -045c    1
          ELSE                                                                  DESIGN 423
c              no plenum to default to                                          DESIGN 424
            CALL MSGSIM(-1,II,II,II,II)                                         DESIGN 425
            WRITE (IOUTPT,9435)                                                 DESIGN 426
            IFLAG = 1                                                           DESIGN 427
          ENDIF                                                                 DESIGN 428
        ELSE                                                                    DESIGN 429
          ZP1    = <DUCT-LOSS-ZONE>                                             RemPA  323
          ZP2    = <ZP2>                                                        RemPA  324
          <DUCT-ZTYPE> = <ZONE-TYPE>                                            RemPA  325
c              Return duct cannot be in a plenum                                -044c4   2
          IF (<sy:RETURN-UA> .gt. 0. .and. <DUCT-ZTYPE> .eq. 3)  THEN           -044c4   3
            CALL MSGSIM(-1,II,II,II,II)                                         -044c4   4
            WRITE (IOUTPT,9436)  (<SYSTEM-NAME>, II=1,8)                        -044c4   5
            Call MessageBox( NULL,'Return UA incompatible with plenums-'        -044c4   6
     &        //' ABORTING'//char(0),'DESIGN Errors'//char(0), MB_OK            -044c4   7
     &        + MB_ICONEXCLAMATION+MB_TASKMODAL )                               -044c4   8
          ENDIF                                                                 -044c4   9
        ENDIF                                                                   DESIGN 441
c              no air must be made up if duct in plenum                         -045c    2
        IF (<DUCT-ZTYPE> .eq. 3)  <DUCT-AIR-LOSS-OA> = 0.                       -045c    3
c              fraction of duct air that is lost                                -041b    1
        <sy;ReturnInfil>   = <DUCT-AIR-LOSS> / (1.-<DUCT-AIR-LOSS>)             -041b    2
     &                                       * (1.-<DUCT-AIR-LOSS-OA>)          -041b    3
        <sy;ReturnNoInfil> = 1. - <sy;ReturnInfil>                              -041b    4
      ENDIF                                                                     DESIGN 442
 9435 FORMAT(14X,'Duct losses are specified without a DUCT-LOSS-ZONE;'/         RemPA  330
     $       14X,'No plenum exists for default duct losses.')                   RemPA  331
 9436 FORMAT(14X,'System: ',8A4,' cannot have the RETURN-UA'           /        -044c4  10
     &14x,'specified when the air returns via plenums.'                )        -044c4  11
c              check if wlhp                                                    RemPA  334
      IF(ICODE .EQ. 15)  THEN                                                   RemPA  335
        IF((<OA-CONTROL>.NE.0).AND.(<FAN-CONTROL>.NE.0))  THEN                  RemPA  336
          <OA-CONTROL> = 0                                                      RemPA  337
          CALL MSGSIM(-2,II,II,II,II)                                           RemPA  338
          WRITE(IOUTPT,9091) (<SYSTEM-NAME>,II=1,8)                             -42c    24
        ENDIF                                                                   RemPA  340
      ENDIF                                                                     RemPA  341
 9091 FORMAT(14X,'In ',8A4,' OA-CONTROL has been reset to FIXED'/               -42c    25
     1       14X,'to allow the fan CYCLING option.')                            RemPA  343
C              Check for CONDENSER-TYPE = EVAP-PRECOOLED or EVAP-COOLED         -045h   17
      IPCCF = 0                                                                 DESIGN 484
      WBTMAX = WBFS(DBTMAX,WMAX,BLDGP)                                          DESIGN 485
      IF(<CONDENSER-TYPE> .EQ. 2  .or.  <CONDENSER-TYPE> .eq. 3) THEN           -045h   18
        IF( (ICODE.EQ.17).OR.(ICODE.EQ.27).OR.(ICODE.EQ.28).OR.                 -045h   19
     $    ((ICODE.GE.19).AND.(ICODE.LE.22)) .OR.  ICODE.EQ.29  .OR.             -045h   20
     &    ( ICODE.EQ.23 .AND. <COOL-SOURCE>.NE.1)) THEN                         -045h   21
          IF (<CONDENSER-TYPE> .eq. 2) THEN  ! evap precooled                   -045h   22
            IPCCF  = 1                                                          -045h   23
            PCCEDB = Max(3., (1.-<EVAP-PCC-EFF>)*(DBTMAX-WBTMAX))               -045h   24
            PCCEDB = Min(DBTMAX, WBTMAX+PCCEDB)                                 -045h   25
          ELSEIF (<CONDENSER-TYPE> .eq. 3) THEN  ! evap condenser               -045h   26
            IPCCF  = <CONDENSER-TYPE>                                           -045h   27
            PCCEDB = Min(DBTMAX, WBTMAX)                                        -045h   28
          ENDIF                                                                 -045h   29
          PCCEDB = Max(<COOL-FT-MIN>, PCCEDB)                                   -045h   30
        ELSE                                                                    DESIGN 493
          <CONDENSER-TYPE> = 0                                                  DESIGN 494
        ENDIF                                                                   DESIGN 495
      ENDIF                                                                     DESIGN 496
C              IUNIT IS THE UNITARY SYSTEM FLAG                                 DESIGN 497
C                    = 0   NON-UNITARY SYSTEM                                   DESIGN 498
C                      1   FAN COILS, HEAT-PUMPS, AND PTAC                      DESIGN 499
C                      2   UNIT HEATERS AND VENTILATORS                         DESIGN 500
C                      3   INDUCTION UNITS                                      DESIGN 501
      IUNIT  = 0                                                                DESIGN 502
      IF((ICODE.EQ.6).OR.(ICODE.EQ.7))  IUNIT = 2                               DESIGN 503
      IF((ICODE.EQ.9).OR.(ICODE.EQ.10)) IUNIT = 1                               DESIGN 504
      IF((ICODE.EQ.15).OR.(ICODE.EQ.22))IUNIT = 1                               DESIGN 505
      IF((ICODE.EQ.11).OR.(ICODE.EQ.12))IUNIT = 3                               DESIGN 506
      <NOPLENUM> = 0                                                            DESIGN 507
      IF((ICODE.EQ.1).OR.(ICODE.EQ.8).OR.(IUNIT.EQ.1).OR.(IUNIT.EQ.2))          DESIGN 508
     1      <NOPLENUM> = 1                                                      DESIGN 509
C              IF FAN HAS BEEN SPECIFIED COMPUTE THE FIRST                      DESIGN 510
C              PART OF THE KW AND TEMP RISE                                     DESIGN 511
      IF(<SUPPLY-EFF> .NE. 0.)  DTS1 = <SUPPLY-STATIC>/<SUPPLY-EFF>             DESIGN 512
      IF(<HSUPPLY-EFF> .NE. 0.)  DTS1h = <HSUPPLY-STATIC>/<HSUPPLY-EFF>         DESIGN 513
      IF(<RETURN-EFF> .NE. 0.)  DTR1 = <RETURN-STATIC>/<RETURN-EFF>             DESIGN 514
C              SET TEMPERATURE RISE ACROSS THE SUPPLY AND                       DESIGN 515
C              RETURN AIR FANS IF NOT USER SPECIFIED                            DESIGN 516
      IF(DTS1 .EQ. 0.0)  GOTO 37                                                DESIGN 517
      <SUPPLY-DELTA-T>  = DTS1                                                  DESIGN 518
      DTS    = DTS1                                                             DESIGN 519
      <SUPPLY-KW> = 0.0                                                         DESIGN 520
      IF(<SUPPLY-MECH-EFF> .EQ. 0.)  <SUPPLY-MECH-EFF> =                        DESIGN 521
     1                               AMIN1(1.0,<SUPPLY-EFF>/0.9)                DESIGN 522
      IF((DTS.NE.0.).AND.(<MOTOR-PLACEMENT>.EQ.1))                              DESIGN 523
     1     <SUPPLY-DELTA-T> = (DTS*<SUPPLY-EFF>)/<SUPPLY-MECH-EFF>              DESIGN 524
   37 IF (<WS-ECONO> .EQ. 1)  THEN                                              HVAC12  12
c              Increase fan heat by static pressure created by                  HVAC12  13
c              water-side economizer coil.                                      HVAC12  14
c              Take out conversion                                              HVAC12  15
        <WS-ECONO-FAN-DT> = <WS-ECONO-FAN-DT> / (CONS(3)*BPMULT)                HVAC12  16
c              increase fan dt                                                  HVAC12  17
        IF (<MOTOR-PLACEMENT> .EQ. 1)                                           HVAC12  18
     1    <SUPPLY-DELTA-T> = <SUPPLY-DELTA-T> + <WS-ECONO-FAN-DT>               HVAC12  19
      ENDIF                                                                     HVAC12  20
      IF(DTR1 .EQ. 0.0)  GOTO 38                                                HVAC12  21
      DTR    = DTR1                                                             DESIGN 526
      <RETURN-DELTA-T> = DTR1                                                   DESIGN 527
      <RETURN-KW> = 0.0                                                         DESIGN 528
c              repeat for hot-deck fan of dual-fan system                       DESIGN 529
   38 IF ((DDSTYPE .GT. 0) .AND. (DTS1h .NE. 0.0))  THEN                        DESIGN 530
        <HSUPPLY-DELTA-T> = DTS1h                                               DESIGN 531
        DTSh              = DTS1h                                               DESIGN 532
        <HSUPPLY-KW>      = 0.0                                                 DESIGN 533
        IF (<HSUPPLY-MECH-EFF> .EQ. 0.)                                         DESIGN 534
     1      <HSUPPLY-MECH-EFF> = AMIN1(1.0,<HSUPPLY-EFF>/0.9)                   DESIGN 535
        IF ((DTSh.NE.0.) .AND. (<HMOTOR-PLACEMENT>.EQ.1))                       DESIGN 536
     1     <HSUPPLY-DELTA-T> = (DTSh*<HSUPPLY-EFF>)/<HSUPPLY-MECH-EFF>          DESIGN 537
      ENDIF                                                                     DESIGN 538
c              Initial zone calcs                                               -046    86
      DO  NZ=1,NSZ                                                              -046    87
        ZP1 = ISZ + (NZ-1)*NZD                                                  -046    88
        ZP2 = <ZP2>                                                             -046    89
c              Force defaults for EXHAUST-SOURCE                                -046    90
        IF (<ZONE-TYPE> .eq. 3) THEN         ! plenum                           -046    91
          IF (<EXHAUST-CFM> .gt. 0.) THEN                                       -046    92
            <EXHAUST-SOURCE> = 1                 ! air handler                  -046    93
          ELSE                                                                  -046    94
            <EXHAUST-SOURCE> = 0                 ! no exhaust                   -046    95
          ENDIF                                                                 -046    96
        ELSEIF (<AIRFLOW-TRACKING> .gt. 0) THEN  ! airflow tracking             -046    97
          <EXHAUST-SOURCE> = 1                   ! air handler                  -046    98
        ELSEIF (<EXHAUST-CFM> .eq. 0.) THEN      ! no exhaust                   -046    99
          <EXHAUST-SOURCE> = 0                   ! no source                    -046   100
        ELSEIF (<EXHAUST-SOURCE> .eq. 2  .or.                                   -047b   14
     &          <EXHAUST-SOURCE> .eq. 3) THEN    ! infiltration makeup          -047b   15
c              Exhaust is made up from infiltration, and has no impact          -046   102
c              on system OA or min-flow-ratios.  Temporarily store              -046   103
c              exhaust flow in hourly variable; restore after design            -046   104
          <zn.ExhCFM>   = <EXHAUST-CFM>                                         -046   105
          <EXHAUST-CFM> = 0.                                                    -046   106
        ENDIF                                                                   -046   107
      ENDDO                                                                     -046   108
C               GET THE OUTSIDE AIR RATIO FOR DESC AND EVAP SYSTEMS             DESIGN 539
      OUTA = 0.                                                                 DESIGN 540
      IF((ICODE .EQ. 25) .OR. (ICODE .EQ. 26)) THEN                             -044c  120
        ZP1 = ISZ                                                               -044c  121
        Z   = 0.                                                                -044c  122
        DO  NZ=1,NSZ                                                            -044c  123
          IF(<ZONE-TYPE>.EQ.1) THEN                                             -044c  124
            ZP2 = <ZP2>                                                         -044c  125
            ZVENT = <OUTSIDE-AIR-CFM>                                           -044c  126
            IF(ZVENT .LE. 0.)                                                   -044c  127
     $        ZVENT=AMAX1(<OA-CHANGES>*<VOLUME>/60.,                            -044c  128
     $                    <OA-FLOW/AREA>*<AREA>,                                -044c  129
     $                    <OA-CFM/PER>*<PEOPLE>)                                -044c  130
            CFMZ = <ASSIGNED-CFM>                                               -044c  131
            IF(ZVENT.LE.0.)                                                     -044c  132
     $        ZVENT = <MIN-OUTSIDE-AIR>*<SUPPLY-CFM>*(<AREA>/<SAREA>)           -044c  133
            IF(CFMZ.LE.0.)                                                      -044c  134
     $        ZCFM  = <SUPPLY-CFM>*(<AREA>/<SAREA>)                             -044c  135
            ZVENT = Min(ZCFM, Max(ZVENT, <EXHAUST-CFM>))                        -044e   16
            OUTA = OUTA + ZVENT*<MULTIPLIER>                                    -044c  136
            IF(ZCFM .GT. 0.) Z = AMAX1(Z,ZVENT/ZCFM)                            -044c  137
          ENDIF                                                                 -044c  138
          ZP1 = ZP1 + NZD                                                       -044c  139
        ENDDO                                                                   -044c  140
        PO = OUTA/<SUPPLY-CFM>                                                  -044c  141
        IF(<OA-SIZING-METHOD> .GT. 0)  PO=PO/(1.0+PO-Z)                         -044c  142
        <MIN-OUTSIDE-AIR> = PO                                                  -044c  143
      END IF                                                                    -044c  144
C              SET MIN AND MAX SUPPLY TEMPERATURES FOR PTGSD SYSTEM             DESIGN 557
      IF (ICODE .NE. 25)  GO TO 720                                             DESIGN 558
C              USING CURVES, GET CONDITIONS ENTERING EVAP COOLER                DESIGN 559
C              AT COOLING PEAK.                                                 DESIGN 560
C              ASSUME 67 DEGREE WET BULB RETURN AIR                             DESIGN 561
      T8 = CVAL(<T8-FWB1WB6>,67.,WBTMAX)                                        DESIGN 562
      HR8 = .0001*EXP(CVAL(<HR8-FWB1WB6>,67.,WBTMAX))                           DESIGN 563
      WBT8 = WBFS(T8,HR8,BLDGP)                                                 DESIGN 564
      II = 1                                                                    DESIGN 565
C              GET EVAP COOLER EXIT CONDITIONS AT COOLING PEAK                  DESIGN 566
      CALL EVAPDR(<SUPPLY-CFM>,<DIRECT-EFF>,<SUPPLY-CFM>,T8,WBT8,               DESIGN 567
     1            EFF,T9, WBT9)                                                 DESIGN 568
C              SET MIN SUPPLY T TO EVAP COOLER EXIT TEMP                        DESIGN 569
      <MIN-SUPPLY-T> = T9                                                       DESIGN 570
      TM = (1.-PO)*80. + PO*DBTMIN                                              DESIGN 571
      dThcoil = -<HEATING-CAPACITY>                                             CCIG7    3
     $                     / (CONS(1)*<SUPPLY-CFM>*<MIN-CFM-RATIO>)             CCIG7    4
C              SET MAX SUPPLY T TO MIXED AIR TEMP AT HEATING PEAK PLUS          DESIGN 573
C              TEMPERATURE RISE DUE TO HYDRONIC HEATER                          DESIGN 574
      <MAX-SUPPLY-T> = TM + dThcoil                                             CCIG7    5
c     IF (IREPRT(2,35) .NE. 0)  WRITE (IOUTPT,9801) DBTMAX, WMAX,               IREPRT  17
c    1 BLDGP, WBTMAX, T8, HR8, WBT8, EFF, T9, WBT9, <MIN-SUPPLY-T>,             DESIGN 577
c    2 PO, DBTMIN, TM, dThcoil, <MAX-SUPPLY-T>, <SUPPLY-CFM>,                   CCIG7    6
c    3 <MIN-OUTSIDE-AIR>, <MIN-CFM-RATIO>                                       DESIGN 579
c9801 FORMAT(1X 'DBTMAX = ' F8.3 '  WMAX = ' F6.4 '  BLDGP = ' F6.2 /           DESIGN 580
c    1       1X 'WBTMAX = ' F8.3 '  T8 = ' F8.3 '  HR8 = ' F6.4  /              DESIGN 581
c    2       1X 'WBT8 = ' F8.3 '  EFF = ' F6.4 '  T9 = ' F8.3 /                 DESIGN 582
c    3       1X 'WBT9 = ' F8.3 '  MIN-SUPPLY-T = ' F8.3 '  PO = ' F6.4/         DESIGN 583
c    4       1X 'DBTMIN = ' F8.3 '  TM = ' F8.3 '  DTH = ' F8.3 /               DESIGN 584
c    5       1X 'MAX-SUPPLY-T = ' F8.3 '  SUPPLY-CFM = ' F9.1                   DESIGN 585
c    6       '  MIN-OUTSIDE-AIR = ' F6.4 /1X 'MIN-CFM-RATIO = ' F6.4)           DESIGN 586
  720 CONTINUE                                                                  DESIGN 587
c     IF (IREPRT(2,35) .NE. 0)  WRITE(IOUTPT,8001) <SWAMP-COOLER>,              IREPRT  18
c    1    <EVAP-CL-TYPE>,<EVAP-CL+M-SUP>,<EVAP-CL+REC-RA>,                      DESIGN 589
c    2    <DIRECT-EFF-FCFM>,<INDIR-EFF-FCFM>,<EVAP-CL-KW>,<DIRECT-EFF>,         DESIGN 590
c    3    <INDIR-EFF>,<EVAP-CL-AIR>                                             DESIGN 591
c8001 FORMAT(/' SWMPCL = ',I2,2x,'  EVCLTP = ',I2,2X,'  EVCLMS = ',I2/          DESIGN 592
c    1       1X,7HEVCLRA=,   I2,2X,7HDEFFFC=,   I5,2X,7HIEFFFC=,   I5/          DESIGN 593
c    2       1X,7HEVCLKW=,E12.6,2X,7HDIREFF=,E12.6,2X,7HIDREFF=,E12.6,          DESIGN 594
c    3       2X,7HEVCAIR=,E12.6)                                                DESIGN 595
      II = 1                                                                    DESIGN 596
      IF ((ICODE .EQ. 26).OR.((<SWAMP-COOLER> .EQ. 1).AND.                      DESIGN 597
     $    (<GET-IT-INTO-SYS> .EQ. 0.)) ) CALL EVAPDS(1)                         DESIGN 598
C                                                                               DESIGN 599
C              PICK UP SPECIFIED COLD SUPPLY DESIGN TEMP                        DESIGN 600
        TC = <MIN-SUPPLY-T>                                                     DESIGN 601
      MSTEMP = <MAX-SUPPLY-T>                                                   DESIGN 602
C              IF INDUCTION SYSTEM ADJUST FOR DRAW THROUGH SUPPLY FAN           DESIGN 603
      IF(((ICODE .EQ. 11) .OR. (ICODE .EQ. 12)) .AND.                           DESIGN 604
     1   (<FAN-PLACEMENT> .EQ. 1))  TC = TC - <SUPPLY-DELTA-T>*CONS(3)          DESIGN 605
C              IF NOT DRAW THROUGH AND REHEAT POSSIBLE SKIP                     DESIGN 606
      IRHFLAG = 0                                                               -036     5
      IF((ICODE .NE. 13) .AND. (ICODE .NE. 14) .AND.                            DESIGN 607
     1   (ICODE .NE.  2) .AND. (ICODE .NE.  5)  .AND.                           DESIGN 608
     2   (ICODE .NE. 19) .AND. (ICODE .NE. 21) .AND.                            DESIGN 609
     3   (ICODE .NE. 18) .AND. (ICODE .NE. 23))  GO TO 110                      DESIGN 610
C              ADJUST FOR DRAW THROUGH SUPPLY FAN                               DESIGN 611
      IF(<FAN-PLACEMENT> .EQ. 1)  TC = TC - <SUPPLY-DELTA-T>*CONS(3)            DESIGN 612
C              Set flag that reheat coil's are possible in this SYSTEM          -036     6
      IRHFLAG = 1                                                               -036     7
C              IF DESIGN MAX TEMP NOT SPECIFIED COMPUTE IT BY                   DESIGN 613
C              ADDING REHEAT DELTA T TO DESIGN MIN TEMP                         DESIGN 614
      IF(<MAX-SUPPLY-T> .EQ. 0.) <MAX-SUPPLY-T> = <MIN-SUPPLY-T>                DESIGN 615
     1                              + <REHEAT-DELTA-T>                          DESIGN 616
  110 CONTINUE                                                                  DESIGN 617
c              for heating, ILOCN indicates whether the duct temp is            DESIGN 618
c              located at the air handler (1) or the diffuser (2)               DESIGN 619
      IF (<HEAT-SET-T> .NE. 0.)  THEN                                           CCIG7    7
c              user-specified HEAT-SET-T is at the air handler                  CCIG7    8
        ILOCN = 1                                                               CCIG7    9
      ELSE                                                                      CCIG7   10
c              default temp location for other situations is diffuser           CCIG7   11
        ILOCN = 2                                                               CCIG7   12
      ENDIF                                                                     CCIG7   13
C              CEILING INDUCTION MIN-CFM-RATIO IS FIXED AT 0.5                  DESIGN 633
      IF(ICODE .EQ. 5)                      <MIN-CFM-RATIO> = 0.5               DESIGN 634
C              UNIT HEATER AND VENTILATOR FIXED AT 1.0                          DESIGN 635
      IF((ICODE .EQ. 6).OR.(ICODE .EQ. 7))  <MIN-CFM-RATIO> = 1.0               DESIGN 636
      IF(ICODE .EQ. 16)                     <MIN-CFM-RATIO> = 1.0               DESIGN 637
C              FAN COIL AND INDUCTION UNITS ALSO FIXED AT 1.0                   DESIGN 638
      IF((ICODE .EQ. 9).OR.(ICODE .EQ. 10))  <MIN-CFM-RATIO> = 1.0              DESIGN 639
      IF((ICODE .EQ.11).OR.(ICODE .EQ.12))  <MIN-CFM-RATIO> = 1.0               DESIGN 640
C              HEAT PUMP FIXED AT 1.0                                           DESIGN 641
      IF( ICODE .EQ.15)                     <MIN-CFM-RATIO> = 1.0               DESIGN 642
      IF((ICODE.EQ.17).OR.(ICODE.EQ.22))   <MIN-CFM-RATIO> = 1.0                DESIGN 643
      IF ((<HEAT-SOURCE>.EQ.4 .OR. <HEAT-SOURCE>.EQ.9) .AND.                    DESIGN 644
     1    (ICODE.NE.19 .AND. ICODE.NE.20 .AND. ICODE.NE.21 .AND.                DESIGN 645
     2     ICODE.NE.23 .AND. ICODE.NE.27 .AND. ICODE.NE.28))                    -044e   17
     &       <MIN-CFM-RATIO>=1.                                                 -044e   18
      IF (ICODE.EQ.27)  <MIN-CFM-RATIO>=0.                                      DESIGN 647
C              DO NOT ALLOW HUMIDITY CONTROL IN TWO PIPE FANCOILS               DESIGN 648
      IF(ICODE .EQ. 9)  <MAX-HUMIDITY> = 100.                                   DESIGN 649
C               DO NOT ALLOW HUMIDITY CONTROL IN EVAP COOLER SYSTEM             DESIGN 650
      IF (ICODE .EQ. 26)  <MAX-HUMIDITY> = 100.                                 DESIGN 651
C              CBVAV HAS MAX AND MIN -FAN-RATIO EQUAL TO 1.0                    DESIGN 652
      IF(ICODE .EQ. 18)  <MAX-FAN-RATIO> = 1.0                                  DESIGN 653
      IF(ICODE .EQ. 18)  <MIN-FAN-RATIO> = 1.0                                  DESIGN 654
C              OUTA WILL BE THE SUM OF OUTSIDE AIR REQUIREMENTS                 DESIGN 655
C              SPECIFIED FOR THE ZONES IN THIS SYSTEM                           DESIGN 656
      OUTA   = 0.                                                               DESIGN 657
      <DCVOAcfmSD>       = 0.                                                   -044c  145
      <DCVOAcfmFracCriD> = 0.                                                   -044c  146
C              CFM WILL BE THE SUM OF THE DESIGN CFMS FOR THE                   DESIGN 658
C              ZONE IN THIS SYSTEM                                              DESIGN 659
      CFM    = 0.                                                               DESIGN 660
C              ECFM WILL BE THE SUM OF EXHAUST FOR CONDITIONED ZONES            DESIGN 661
C              AND PLENUMS                                                      DESIGN 662
      ECFM   = 0.                                                               DESIGN 663
c              ECFMrf will be the exhaust that affects return fan sizing        -046   109
      ECFMrf = 0.                                                               -046   110
C              ECFMP IS SUM OF EXHAUST FROM PLENUMS                             DESIGN 664
      ECFMP = 0.                                                                DESIGN 665
C              AZHEAT WILL BE THE AVERAGE, WEIGHTED BY CFM, DESIGN              DESIGN 666
C              HEATING TEMP FOR THE ZONES                                       DESIGN 667
      AZHEAT = 0.                                                               DESIGN 668
      AZHCFM = 0.                                                               DESIGN 669
C              AZCOOL WILL BE THE AVERAGE COOLING TEMP                          DESIGN 670
      AZCOOL = 0.                                                               DESIGN 671
      AZCCFM = 0.                                                               DESIGN 672
      TOTBBR = 0.0                                                              DESIGN 673
C              ZP2 IS THE BASE POINTER TO THE CONSTANT ZONE DATA                DESIGN 674
C              THIS IS THE DATA THAT COMES IN FROM SDL AS WELL                  DESIGN 675
C              AS THE DATA OFF THE DESIGN FILE                                  DESIGN 676
C              ZP1 IS THE BASE PTR TO THE SYSTEM SPECIFIC ZONE DATA             DESIGN 677
C              THIS IS THE DATA WHICH CAN BE DIFFERENT FOR                      DESIGN 678
C              THE SAME ZONE IF IT IS IN SEVERAL SYSTEMS                        DESIGN 679
C              ZP1 IS INITIALIZED TO THE FIRST BLOCK FOR                        DESIGN 680
C              THIS SYSTEM                                                      DESIGN 681
      IF(IREPRT(2,34).NE.0) WRITE(IOUTPT,9002)(<SYSTEM-NAME>,II=1,8),NS,        -044a    3
     1                     (CONS(II),II=1,3),<SUPPLY-DELTA-T>,                  DESIGN 683
     2                     <RETURN-DELTA-T>,<SUPPLY-KW>,<RETURN-KW>,            DESIGN 684
     3                     <MAX-SUPPLY-T>,<MIN-SUPPLY-T>,ICODE                  DESIGN 685
 9002 FORMAT(/' DESIGN CALCULATION FOR SYSTEM = ',8A4,' (#',I4,')'/             -044b    1
     111H CONS(1) = ,F11.3,12H  CONS(2) = ,F11.2,12H  CONS(3) = ,F11.5 /        DESIGN 687
     211H SUP-D-T = ,F11.2,12H  RET-D-T = ,F11.2 /                              DESIGN 688
     311H SUP-KW  = ,F11.6,12H  RET-KW  = ,F11.6 /                              DESIGN 689
     411H MAX-S-T = ,F11.2,12H  MIN-S-T = ,F11.2 /                              DESIGN 690
     511H ICODE   = ,I10  )                                                     DESIGN 691
C                                                                               DESIGN 694
C              FOR RESIDENTIAL SYSTEMS, IF VENT-METHOD=S-G,                     DESIGN 695
C              CALCULATE THE STACK AND WIND COEFFICIENTS                        DESIGN 696
      IF (<VENT-METHOD>.EQ.2) CALL VNTDES                                       DESIGN 697
      ZP1    = ISZ                                                              DESIGN 698
C                                                                               DESIGN 699
C              LOOP THROUGH THE ZONES FOR THIS SYSTEM                           DESIGN 700
C                                                                               DESIGN 701
      DO 100 NZ=1,NSZ                                                           DESIGN 702
C              PICK UP ZP2 FOR THIS ZONE                                        DESIGN 703
      ZP2    = <ZP2>                                                            DESIGN 704
      PARPIU = .FALSE.                                                          DESIGN 705
      SERPIU = .FALSE.                                                          DESIGN 706
      ISZCZ  = 0                                                                -043a3   1
      IF ((ICODE .EQ. 23) .AND. (<TERMINAL-TYPE> .EQ. 3))                       DESIGN 707
     1   SERPIU = .TRUE.                                                        DESIGN 708
      IF ((ICODE .EQ. 23) .AND. (<TERMINAL-TYPE> .EQ. 4))                       DESIGN 709
     1   PARPIU = .TRUE.                                                        DESIGN 710
      IF (<REHEAT-DELTA-TZ> .LE. 0) <REHEAT-DELTA-TZ> = <REHEAT-DELTA-T>        DESIGN 711
      IF (<ZONE-HEAT-SOURCE> .EQ. 0)  <REHEAT-DELTA-TZ> = 0.                    -041c    2
      IF(((ICODE.eq. 2).OR.(ICODE.eq.17).OR.(ICODE.eq.19).OR.                   -043a    7
     $    (ICODE.eq.26).OR.(ICODE.eq.28)) .AND. (NZ.eq.1)) THEN                 -043a    8
        ISZCZ = 1                                                               -043a    9
C             Remove any reheat coils                                           -043a   10
        <REHEAT-DELTA-TZ> = 0.                                                  -043a   11
        <HW-LOOPZ> = 0                                                          -043a   12
        IF(<ZONE-TYPE> .NE. 1)  THEN                                            -043a   13
          CALL MSGSIM(-1,II,II,II,II)                                           -043a   14
          WRITE(IOUTPT,132) (<ZONE-NAME>,II=1,8),                               -043a   15
     $                      (<SYSTEM-NAME>,II=1,8)                              -043a   16
  132     FORMAT(14X,8A4,' is the CONTROL-ZONE in SYSTEM'/                      -043a   17
     $           14X,8A4,' but is not a CONDITIONED ZONE.')                     -043a   18
          IFLAG = 1                                                             -043a   19
        ENDIF                                                                   -043a   20
      ENDIF                                                                     -043a   21
      IF((ICODE .EQ. 28) .and. (<THERMOSTAT-TYPE>.EQ.0))                        -44c3a   5
     $  <THERMOSTAT-TYPE> = 3  ! reverse acting PVVT                            -44c3a   6
c                                                                               XFC2   106
c              Set up compressors for refrigeration equipment                   XFC2   107
      IF (<NUM-REFG-EQUIP> .GT. 0)  THEN                                        XFC2   108
        IE = <NUM-REFG-EQUIP>                                                   XFC2   109
        CompCap = 0.                                                            XFC2   110
        <REFG-HTREJ-DES> = 0.                                                   XFC2   111
c              Loop thru all equipment temperature levels                       XFC2   112
        DO  IG=1,IE                                                             XFC2   113
c              Default compressor capacity                                      XFC2   114
          IF (<REFG-COMP-CAP> .LE. 0.)  <REFG-COMP-CAP> =                       XFC2   115
     &     ( -<REFG-ZONE-BTUH> + <REFG-AUX-BTU>                                 XFC2   116
     &       + (<REFG-AUX-KW>+<REFG-ASH-KW>)*<REFG-AUX-FRAC>*3413.              XFC2   117
     &       - <REFG-QL-DES-W>*(1.0-<REFG-DEF-EFF>)/<REFG-DEF-EFF> )            XFC2   118
     &                                * <REFG-SIZING-RAT> * <MULTIPLIER>        XFC2   119
c              Sum of compressor capacities                                     XFC2   120
          CompCap = CompCap + <REFG-COMP-CAP>                                   XFC2   121
c              Compressor energy - default to 3.5 Btu/W at -30F evap T,         XFC2   122
c                                             7.3 Btu/W at  25F evap T          XFC2   123
          IF (<REFG-BTU/WATT> .LE. 0.)                                          XFC2   124
     &        <REFG-BTU/WATT> = 0.069*<REFG-EVAP-T> + 5.57                      XFC2   125
c              convert from Btu/W to Btu Elec / Btu Cooling                     XFC2   126
          <REFG-BTU/WATT> = 3.413 / <REFG-BTU/WATT>                             XFC2   127
        ENDDO                                                                   XFC2   128
c              Now group the common compressor together                         XFC2   129
        IGROUP = 0                                                              XFC2   130
        COMMON = 0.0                                                            XFC2   131
        DO  IG=1,IE                                                             XFC2   132
          IF (<REFG-COMP-GROUP> .EQ. 0)  CYCLE                                  XFC2   133
          COMMON = COMMON + <REFG-COMP-CAP>                                     XFC2   134
          <REFG-COMP-CAP> = 0.0                                                 XFC2   135
          IF (IGROUP .EQ. 0)  IGROUP = IG                                       XFC2   136
        ENDDO                                                                   XFC2   137
        IF (IGROUP .NE. 0)  THEN                                                XFC2   138
          IG = IGROUP                                                           XFC2   139
          <REFG-COMP-CAP> = COMMON                                              XFC2   140
        ENDIF                                                                   XFC2   141
c              Design heat rejection                                            XFC2   142
        DO  IG=1,IE                                                             XFC2   143
          IF (<REFG-COND-SIZE> .LE. 0.0)  THEN                                  XFC2   144
            <REFG-COND-SIZE> = (1.0+<REFG-BTU/WATT>) * <REFG-COMP-CAP>          XFC2   145
c              convert air-cooled condenser size to UA assuming 10F dT          XFC2   146
            IF (<REFG-COND-TYPE> .EQ. 1)                                        XFC2   147
     &        <REFG-COND-SIZE> = <REFG-COND-SIZE>/10.0                          XFC2   148
          ENDIF                                                                 XFC2   149
          <REFG-HTREJ-DES> = <REFG-HTREJ-DES> + <REFG-COND-SIZE>                XFC2   150
          IF (<REFG-COMP-CAP> .EQ. 0.)  <REFG-BTU/WATT> = 0.                    XFC2   151
        ENDDO                                                                   XFC2   152
c              If heat rejection fan energy not user defined,                   XFC2   153
c              default to .105 kW/ton of compressor capacity                    XFC2   154
        IF (<REFG-FAN-KW> .EQ. -66666.)                                         XFC2   155
     &      <REFG-FAN-KW> = CompCap*0.105/12000.                                XFC2   156
c              If evaporative condenser spray pump energy not user              XFC2   157
c              defined, default to .025 kW/ton of compressor capacity           XFC2   158
      IF (<REFG-COND-TYPE> .EQ. 2) THEN                                         -27C     1
        IF(<REFG-PUMP-KW> .EQ. -66666.) THEN                                    -27C     2
          <REFG-PUMP-KW> = CompCap*0.025/12000.                                 -27C     3
        ENDIF                                                                   -27C     4
        ELSE                                                                    XFC2   162
          <REFG-PUMP-KW> = 0.                                                   XFC2   163
        ENDIF                                                                   XFC2   164
c              initialize the condenser approach                                XFC2   165
        IF(<REFG-SETPT-CTRL> .eq. 2)  THEN                                      XFC2   166
c              ambient control                                                  XFC2   167
          <REFG-PAST-TCOND> = AMAX1(DBTMIN+10.0,<REFG-MIN-COND-T>)              XFC2   168
        ELSE                                                                    XFC2   169
c              all others                                                       XFC2   170
          <REFG-PAST-TCOND> = 0.0                                               XFC2   171
        ENDIF                                                                   XFC2   172
      ENDIF  ! NUM-REFG-EQUIP                                                   XFC2   173
c                                                                               XFC2   174
C              IF THIS A NON-INDUCTION UNITARY SYSTEM AND THE USER              DESIGN 771
C              HAS NOT SPECIFIED ASSIGNED-CFM USE SUPPLY-CFM FOR                DESIGN 772
C              ALL THE ZONES TO OVERRIDE THE CFM CALCULATION                    DESIGN 773
C              ALSO SAVE ASSIGNED CFM TO RESTORE LATER                          DESIGN 774
      ACFMS = <ASSIGNED-CFM>                                                    DESIGN 775
      IF(((IUNIT.EQ.1).OR.(IUNIT.EQ.2)).AND.(<ASSIGNED-CFM>.EQ.0.0).AND.        DESIGN 776
     1(<ZONE-TYPE>.EQ.1))  <ASSIGNED-CFM> = <SUPPLY-CFM>                        DESIGN 777
C              IMINFL IS SET TO 1 IF THE MAX-HEAT-RATE IS TAKEN                 DESIGN 778
C              AS THE PEAK PASSED FROM LOADS ON THE DESIGN FILE                 DESIGN 779
      IMINFL = 0                                                                DESIGN 780
C              IMAXFL IS FOR MAX-COOL-RATE                                      DESIGN 781
      IMAXFL = 0                                                                DESIGN 782
C              ZERO ZP1 VARIABLES                                               DESIGN 783
      <ERMIND> = 0.0                                                            DESIGN 784
      <VENTMIN> = 0.0                                                           DESIGN 785
      <CFMAX> = 0.0                                                             DESIGN 786
      <ERMAXD> = 0.0                                                            DESIGN 787
      ZMULT  = <MULTIPLIER>                                                     DESIGN 788
      <VOLMULS> = <VOLMULS> + <VOLUME>*ZMULT                                    DESIGN 789
c              no baseboard capacity if no baseboard-source                     HVAC17a  1
      IF (<BASEBOARD-SOURCE> .EQ. 0)  <BASEBOARD-RATING> = 0.                   HVAC17a  2
C              ZONE-TYPE = 1 IS CONDITIONED                                     DESIGN 790
C              .         = 2 IS UNCONDITIONED                                   DESIGN 791
C              .         = 3 IS PLENUM                                          DESIGN 792
C              IF THIS IS NOT A CONDITIONED ZONE SKIP TO NEXT ZONE              DESIGN 793
      IF(<ZONE-TYPE> .EQ. 2)  GO TO 50                                          DESIGN 794
C              PICK UP ZONE MULTIPLIER                                          DESIGN 795
C              IF NOT COND SKIP                                                 DESIGN 796
      IF(<ZONE-TYPE> .NE. 3)  GOTO 7                                            DESIGN 797
      IF(<BASEBOARD-RATING> .eq. UNFILD) THEN                                   -042f    1
        <BASEBOARD-RATING> = 0.                                                 -042f    2
      ELSE                                                                      -042f    3
        <ERMIND> = <BASEBOARD-RATING>                                           -042f    4
      ENDIF                                                                     -042f    5
C              IF THIS IS A SYSTEM THAT DOES NOT ALLOW PLENUMS                  DESIGN 798
C              WE WILL TREAT PLENUMS AS UNCONDITIONED ZONES                     DESIGN 799
      IF(<NOPLENUM> .EQ. 1)  GOTO 50                                            DESIGN 800
C              ADD PLENUM HEAT TO THE RETURN AIR TEMP                           DESIGN 801
      TRMIN  = TRMIN + <QMIN>*ZMULT/CONS(1)                                     DESIGN 802
      TRMAX  = TRMAX + <QMAX>*ZMULT/CONS(1)                                     DESIGN 803
      <CFM/ACH> = <CFM/ACH> + <VOLUME>*ZMULT/60.                                -048l    1
      GOTO 50                                                                   DESIGN 806
    7 CONTINUE                                                                  DESIGN 807
  130 CONTINUE                                                                  DESIGN 808
      IF(IREPRT(2,34).NE.0)  WRITE(IOUTPT,9130) (<ZONE-NAME>,II=1,8),           -044a    5
     $                                          NZ,NSZ                          -044a    6
 9130 FORMAT(/10X,'DESIGN CALCULATION FOR CONDITIONED ZONE = ',8A4,             -044a    7
     $           ' (#',I4,' of ',I4,')')                                        -044a    8
c                                                                               DESIGN 811
c              Adjust throttling range to be 1/2 of original range -            DESIGN 812
c              this eliminates the need to divide by 1/2 in hourly calcs        DESIGN 813
      <THROTTLING-RANGE> = <THROTTLING-RANGE> * 0.5                             DESIGN 814
c              two-position Tstat                                               DESIGN 815
      IF (<THERMOSTAT-TYPE> .EQ. 2) <THROTTLING-RANGE> = 0.25                   DESIGN 816
c              residential systems                                              DESIGN 817
      IF ((<SYSTEM-TYPE> .EQ. 17) .OR. (<SYSTEM-TYPE> .EQ. 29))                 DESIGN 818
     1  <THROTTLING-RANGE> = 0.25                                               DESIGN 819
      <THROTTLING-RANGE> = AMAX1(0.1, <THROTTLING-RANGE>)                       DESIGN 820
c                                                                               DESIGN 821
C              ZVENT WILL BE THE OUTSIDE AIR CFM FOR THIS ZONE                  DESIGN 822
      ZVENT  = 0.                                                               DESIGN 823
      <DCVOAcfmZD>    = 0.                                                      -044c  147
      <DCVOAcfmFracD> = 0.                                                      -044c  148
C              CFMZ WILL BE THE DESIGN SUPPLY CFM FOR THIS ZONE                 DESIGN 824
      ZCFM   = 0.                                                               DESIGN 825
C              PICK UP HEAT ADDITION RATE                                       -034    11
C                ADJUST IT FOR THE SIZING RATIO                                 -034    12
C                NOTE THAT THE SIZING RATIO WILL EFFECT THE                     -034    13
C                ADDITION/EXTRATION RATES FOR ALL ZONES AS                      -034    14
C                WELL AS THE CFMS FOR THE ZONES AND THE SYSTEM                  -034    15
      ERMIN  = <MAX-HEAT-RATE>*<SIZING-RATIO>                                   -034    16
C              If baseboards were specified to be present but                   -034    17
C              no capacity was specified, auto size them.                       -034    18
      IF((<BASEBOARD-SOURCE>.ne.0) .and.                                        -035    23
     $   (<BASEBOARD-RATING>.EQ.UNFILD)) THEN                                   -035    24
C              Get peak ZONE load and set preliminary BBRD size to it           -034    20
        BBSIZE = -1.0*ABS(ERMIN)                                                -034    21
        <BASEBOARD-RATING> = BBSIZE                                             -034    22
      ELSE                                                                      -034    23
C              BBRD sized by user, so set flag to that know that fact           -034    24
        BBSIZE = 0.0                                                            -034    25
      ENDIF                                                                     -034    26
C              IF IT WAS SPECIFIED BY THE USER IT IS < 0                        -034    27
C              IF IT IS FROM LOADS IT WAS NEGATED IN READSS                     -034    28
C              IF THE USER SPECIFIED IT SKIP                                    -034    29
      IF(ERMIN .GT. 0.) THEN                                                    -034    30
C              NEGATE IT and remove BASEBOARD heating                           -034    31
        ERMIN  = -ERMIN                                                         -034    32
C              SET FLAG THAT IT CAME FROM LOADS                                 -034    33
        IMINFL = 1                                                              -034    34
      ENDIF                                                                     -034    35
C              Save air system ZONE heating load minus baseboard size           -034    36
      ERMIN  = AMIN1(0.0,ERMIN-<BASEBOARD-RATING>)                              -034    37
      <ERMIND> = ERMIN                                                          -034    38
C              INITIALIZE PEAKK COOLING RATE TO ZERO SINCE                      DESIGN 842
C              ZONES IN A NON-COOLING SYSTEM NEED THIS                          DESIGN 843
      ERMAX  = 0.0                                                              DESIGN 844
C              IF THIS IS A NO COOLING COIL SYSTEM SKIP                         DESIGN 845
      IF((ICODE .EQ. 6) .OR. (ICODE .EQ. 7) .OR. (ICODE .EQ. 8)                 DESIGN 846
     1   .OR. (ICODE .EQ. 16)) GOTO 20                                          DESIGN 847
C              PICK UP THE MAX-COOLING RATE                                     DESIGN 848
C              AGAIN IT IS NEGATED IF IT CAME FROM LOADS                        DESIGN 849
      ERMAX  = <MAX-COOL-RATE>                                                  DESIGN 850
C              CHECK IF IT IS USER SPECIFIED                                    DESIGN 851
      IF(ERMAX .GE. 0.) GOTO 20                                                 DESIGN 852
C              NEGATE IT                                                        DESIGN 853
      ERMAX  = -ERMAX                                                           DESIGN 854
C              MAKKE SURE IT IS A COOLING RATE                                  DESIGN 855
      ERMAX  = AMAX1(ERMAX,0.)                                                  DESIGN 856
C              SET FLAG THAT IT CAME FROM LOADS                                 DESIGN 857
      IMAXFL = 1                                                                DESIGN 858
C              ADJUST FOR SIZING RATIO                                          DESIGN 859
   20 <ERMAXD> = ERMAX*<SIZING-RATIO>                                           DESIGN 860
      IF(<EXHAUST-CFM> .EQ. 0.0)  GOTO 22                                       DESIGN 861
      IF((ICODE.EQ.15).OR.(ICODE.EQ.22).OR.(ICODE.EQ.6))  GOTO 21               DESIGN 862
      IF((ICODE.NE.1).AND.(ICODE.NE.7).AND.(ICODE.NE.8)                         DESIGN 863
     1               .AND.(ICODE.NE.17))                  GOTO 22               DESIGN 864
      CALL MSGSIM(-1,II,II,II,II)                                               DESIGN 865
      WRITE(IOUTPT,9021) (<ZONE-NAME>,II=1,8),(<SYSTEM-NAME>,II=1,8)            -044c  149
      GOTO 22                                                                   DESIGN 867
   21 CALL MSGSIM(-2,II,II,II,II)                                               DESIGN 868
      WRITE(IOUTPT,9021) (<ZONE-NAME>,II=1,8),(<SYSTEM-NAME>,II=1,8)            -42c    32
 9021 FORMAT(14X,'ZONE ',8A4,' in SYSTEM ',8A4/                                 -42c    33
     $       14X,'has unused EXHAUST-CFM specified.'/                           DESIGN 871
     $       14X,'This has been converted to outside air.')                     DESIGN 872
      ZVENT = <OUTSIDE-AIR-CFM>                                                 -044c  150
      IF(ZVENT .LE. 0.)                                                         -044c  151
     $   ZVENT=AMAX1(<OA-CHANGES>*<VOLUME>/60.,                                 -044c  152
     $               <OA-FLOW/AREA>*<AREA>,                                     -044c  153
     $               <OA-CFM/PER>*<PEOPLE>)                                     -044c  154
      <OUTSIDE-AIR-CFM> = AMAX1(ZVENT,<EXHAUST-CFM>/BPMULT)                     -044c  155
   22 CONTINUE                                                                  DESIGN 877
C              IF IT IS NOT AN AIR SYSTEM SKIP CFM CALCS                        DESIGN 878
      IF((ICODE .EQ. 1 ) .OR. (ICODE .EQ. 8))  GO TO 50                         DESIGN 879
      ZVENT = <OUTSIDE-AIR-CFM>                                                 -044c  156
      IF(ZVENT .LE. 0.)                                                         -044c  157
     $   ZVENT=AMAX1(<OA-CHANGES>*<VOLUME>/60.,                                 -044c  158
     $               <OA-FLOW/AREA>*<AREA>,                                     -044c  159
     $               <OA-CFM/PER>*<PEOPLE>)                                     -044c  160
   30 <VENTMIN> = ZVENT*BPMULT                                                  -044c  161
c              minimum cooling cfm ratio for the zone                           DESIGN 890
      IF (IUNIT .NE. 0)  THEN                                                   DESIGN 891
c              unitary equipment is not VAV                                     DESIGN 892
        <MINCFMR>  = 1.0                                                        DESIGN 893
        <MINCFMRH> = 1.0                                                        DESIGN 894
      ELSE                                                                      DESIGN 895
c              Non-unitary equipment                                            DESIGN 896
c              Single-duct VAV                                                  DESIGN 897
c                 MINCFMR     Cooling min-cfm-ratio                             DESIGN 898
c                 MINCFMRH    Heating min-cfm-ratio                             DESIGN 899
c              Dual-duct VAV                                                    DESIGN 900
c                 MINCFMR     Outlet min-cfm-ratio                              DESIGN 901
c                 MINCFMRH    Hot duct min-cfm-ratio                            DESIGN 902
c                 MINCFMRC    Cold duct min-cfm-ratio                           DESIGN 903
c              To simplify the cooling cfm calcs, MINCFMR is temporarily        DESIGN 904
c              used for MINCFMRC for the cooling calcs for dual-duct            DESIGN 905
        IF (DDSTYPE .EQ. 0)  THEN                                               DESIGN 906
c              do not allow subzones to have flow modulation independent of     -045f   13
c              their control zone                                               -045f   14
          IF (NZ .gt. 1  .and.  <ZONE-TYPE> .eq. 1) THEN                        -045f   15
            SELECT CASE (ICODE)                                                 -045f   16
            CASE (2,17,19,26,28,29)                                             -045f   17
              <MIN-CFM-RATIOZ>  = 1.                                            -045f   18
              <HMIN-CFM-RATIOZ> = 1.                                            -045f   19
            END SELECT                                                          -045f   20
          ENDIF                                                                 -045f   21
c              single-duct systems                                              DESIGN 907
          <MINCFMR> = <MIN-CFM-RATIOZ>                                          DESIGN 908
c              if no zone level min ratio was specified pick                    DESIGN 909
c              it up at the system level                                        DESIGN 910
          IF (<MINCFMR> .EQ. 0.0)  <MINCFMR> = <MIN-CFM-RATIO>                  DESIGN 911
        ELSE                                                                    DESIGN 912
c              dual-duct and multizone systems                                  DESIGN 913
          <MINCFMR> = <CMIN-CFM-RATIOZ>                                         DESIGN 914
          IF (<MINCFMR> .EQ. 0.0)  <MINCFMR> = <CMIN-CFM-RATIO>                 DESIGN 915
        ENDIF                                                                   DESIGN 916
c              if it is a single-zone system and this is the control            DESIGN 917
c              zone keep it at constant volume                                  DESIGN 918
        IF(((ICODE.EQ.2).OR.(ICODE.EQ.19)).AND.(NZ.EQ.1))                       DESIGN 919
     1    <MINCFMR> = 1.0                                                       DESIGN 920
c              heat pump requires a constant volume                             DESIGN 921
        IF ((<HEAT-SOURCE>.EQ.4 .OR. <HEAT-SOURCE>.EQ.9) .AND.                  DESIGN 922
     1      (ICODE.NE.19 .AND. ICODE.NE.20 .AND. ICODE.NE.21 .AND.              DESIGN 923
     2       ICODE.NE.23 .AND. ICODE.NE.27 .AND. ICODE.NE.28))                  -044e   19
     &       <MINCFMR>=1.                                                       -044e   20
c              set min-cfm-ratio during heating mode - note that this           DESIGN 925
c              may be different than when cooling                               DESIGN 926
        <MINCFMRH> = <HMIN-CFM-RATIOZ>                                          DESIGN 927
c              get it from the system level if not specified at the             DESIGN 928
c              zone level                                                       DESIGN 929
        IF (<MINCFMRH> .EQ. 0.)  <MINCFMRH> = <HMIN-CFM-RATIO>                  DESIGN 930
c              gor single-duct systems, it must be at least                     DESIGN 931
c              the cooling min                                                  DESIGN 932
        IF((DDSTYPE .EQ. 0) .and.                                               -44c3a   7
     $     ((ICODE .NE. 28) .OR. (<MINCFMRH> .LE. 0.)))                         -44c3a   8
     $    <MINCFMRH> = AMAX1(<MINCFMRH>,<MINCFMR>)                              -44c3a   9
      ENDIF                                                                     DESIGN 934
c              user-specified min-cfm/sqft for heating                          DESIGN 935
      CFMINh = <HMIN-CFM/SQFTZ> * <AREA>                                        DESIGN 936
c              get from the system level if not specified for zone              DESIGN 937
      IF (CFMINh .EQ. 0.)  CFMINh = <HMIN-CFM/SQFT> * <AREA>                    DESIGN 938
c              repeat for cooling                                               DESIGN 939
      IF (DDSTYPE .EQ. 0)  THEN                                                 DESIGN 940
c              single-duct systems                                              DESIGN 941
        CFMINc = <MIN-CFM/SQFTZ>  * <AREA>                                      DESIGN 942
        IF (CFMINc .EQ. 0.)  CFMINc = <MIN-CFM/SQFT> * <AREA>                   DESIGN 943
      ELSE                                                                      DESIGN 944
c              dual-duct                                                        DESIGN 945
        CFMINc = <CMIN-CFM/SQFTZ>  * <AREA>                                     DESIGN 946
        IF (CFMINc .EQ. 0.)  CFMINc = <CMIN-CFM/SQFT> * <AREA>                  DESIGN 947
c              user-specified min-cfm/sqft for dual-duct box outlet             DESIGN 948
        CFMINt = <MIN-CFM/SQFTZ> * <AREA>                                       DESIGN 949
        IF (CFMINt .EQ. 0.)  CFMINt = <MIN-CFM/SQFT> * <AREA>                   DESIGN 950
c              check if min-cfm-source spec'd at zone level for DDS             DESIGN 951
        IF (<MIN-CFM-SOURCEZ> .EQ. -1)                                          DESIGN 952
     1    <MIN-CFM-SOURCEZ> = <MIN-CFM-SOURCE>                                  DESIGN 953
      ENDIF                                                                     DESIGN 954
c              Calculate variables for future use                               DESIGN 955
c              design cooling dT                                                DESIGN 956
      dTc  = AMAX1(1., <DESIGN-COOL-T> - <MIN-SUPPLY-T>)                        DESIGN 957
c              cooling dT during heating                                        DESIGN 958
      dTch = AMAX1(0., <DESIGN-HEAT-T> - TCr)                                   DESIGN 959
c              design heating dT                                                DESIGN 960
      IF((IRHFLAG .eq. 0) .OR. (ISZCZ .eq. 1)) THEN                             -043a   22
        dTh = AMIN1(-1.,<DESIGN-HEAT-T>-<MAX-SUPPLY-T>)                         -036     9
      ELSE                                                                      -036    10
        dTh = AMIN1(-1.,                                                        -036    11
     $          <DESIGN-HEAT-T>-(<MIN-SUPPLY-T>+<REHEAT-DELTA-TZ>))             -036    12
      ENDIF                                                                     -036    13
c              heating dT during cooling                                        DESIGN 962
      dThc = AMIN1(0., <DESIGN-COOL-T> - THr)                                   DESIGN 963
c              warn if temperature differentials real small                     HVAC17   7
      IF( (dTc .lt. 5.).AND.                                                    -036    14
     $    (ICODE.ne.1).AND.(ICODE.ne.6).AND.(ICODE.ne.7).AND.                   -036    15
     $    (ICODE.ne.16) ) THEN                                                  -036    16
        CALL MSGSIM(-2,II,II,II,II)                                             HVAC17   9
        WRITE (IOUTPT,9024)  (<ZONE-NAME>,II=1,8), dTc                          HVAC17  10
      ENDIF                                                                     HVAC17  11
      IF( ((dTh .gt. -5.).and.((ICODE.eq.6).or.(ICODE.eq.7).or.                 -036    17
     $     (ICODE.eq.16)))                                                      -036    18
     $    .OR.  ((dTh .gt. -5.).and.(dTc .lt. 5.)) )  THEN                      -036    19
        CALL MSGSIM(-2,II,II,II,II)                                             HVAC17  13
        WRITE (IOUTPT,9025)  (<ZONE-NAME>,II=1,8), dTh                          HVAC17  14
      ENDIF                                                                     HVAC17  15
 9024 FORMAT(14x,'Zone: ',8A4,' has a design cooling'                  /        HVAC17  16
     &       14x,'temperature differential of only ',F4.1,'F.  This'   /        -036    20
     &       14x,'may result in an extremely large design airflow.'    )        HVAC17  18
 9025 FORMAT(14x,'Zone: ',8A4,' has a design heating'                  /        HVAC17  19
     &       14x,'temperature differential of only ',F5.1,'F.  This'   /        -036    21
     &       14x,'may result in an extremely large design airflow.'    )        HVAC17  21
C              PICK UP OVER-RIDE QUANTITY FOR SUPPLY CFM                        DESIGN 964
      ICFM   = 0                                                                DESIGN 965
      ZCFM   = <ASSIGNED-CFM>*<SIZING-RATIO>                                    DESIGN 966
C              IF IT WAS SPECIFIED SKIP                                         DESIGN 967
      IF(ZCFM .NE. 0.0)  GOTO 35                                                DESIGN 968
      MAX2   = 0.                                                               DESIGN 969
      MAX5   = 0.                                                               DESIGN 970
c              compute cooling airflow based on the cooling peak                DESIGN 971
      IF (<MIN-SUPPLY-T> .NE. 0.)  THEN                                         DESIGN 972
        IF ( (DDSTYPE .EQ. 0) .OR.                                              DESIGN 973
     1       ((<MINCFMRH> .EQ. 0.) .AND. (CFMINh .EQ. 0.)) )  THEN              DESIGN 974
c              single-duct systems,                                             DESIGN 975
c              or dual-duct with no min heating cfm                             DESIGN 976
          MAX5 = <ERMAXD>/(CONS(1)*dTc)                                         DESIGN 977
        ELSE                                                                    DESIGN 978
c              Dual-duct systems.  Account for minimum flow from hot            DESIGN 979
c              deck which increases the cooling load and cfm.  The              DESIGN 980
c              opposite deck temperature is assumed to be fully reset.          DESIGN 981
c              Cooling cfm with min-cfm/sqft heating specified                  DESIGN 982
          MAX51 = (<ERMAXD> - CONS(1)*CFMINh*dThc) / (CONS(1)*dTc)              DESIGN 983
c              Cooling cfm with heating MIN-CFM-RATIO specified.  Calc          DESIGN 984
c              the cooling cfm by solving the heating and cooling               DESIGN 985
c              equations simultaneously (assumes min-cfm-ratio for              DESIGN 986
c              cooling also specified)                                          DESIGN 987
          MAX52 = (<ERMAXD> - (<ERMIND>*<MINCFMRH>*dThc)/dTh ) /                DESIGN 988
     1            AMAX1(1.E-6,                                                  DESIGN 989
     2          (CONS(1)*(dTc - (<MINCFMR>*<MINCFMRH>*dThc*dTch)/dTh)))         DESIGN 990
c              take the larger of the two                                       DESIGN 991
          MAX5 = AMAX1(MAX51, MAX52)                                            DESIGN 992
c              calc minimum cooling cfm if minimum outlet cfm                   DESIGN 993
c              specified to be made up from cold deck or snap                   DESIGN 994
          IF (<MIN-CFM-SOURCEZ> .NE. 1)  THEN                                   DESIGN 995
c              min heating cfm corresponding to MAX52                           DESIGN 996
            IF (<MINCFMRH> .GT. 0.)  THEN                                       DESIGN 997
              CFMINh52 = (<ERMIND> - CONS(1)*MAX52*<MINCFMR>*dTch)              DESIGN 998
     1                     / (CONS(1)*dTh) * <MINCFMRH>                         DESIGN 999
            ELSE                                                                DESIGN1000
              CFMINh52 = 0.                                                     DESIGN1001
            ENDIF                                                               DESIGN1002
            ZCFMh = AMAX1(CFMINh, CFMINh52)                                     DESIGN1003
            ZCFM  = AMAX1(CFMINc, CFMINt-ZCFMh)                                 DESIGN1004
          ENDIF                                                                 DESIGN1005
        ENDIF                                                                   DESIGN1006
      ENDIF                                                                     DESIGN1007
C              COMPUTE IT BASED ON THE HEATING PEAK                             DESIGN1008
      IF( (<MAX-SUPPLY-T>.ne.0.).AND.(<MAX-SUPPLY-T>.ne.<DESIGN-HEAT-T>)        -036    22
     $   .AND. (DDSTYPE.eq.0) .AND. (.NOT.(SERPIU.or.PARPIU)) ) THEN            -036    23
        IF((IRHFLAG .eq. 0) .OR. (ISZCZ .eq. 1))  THEN                          -043a   23
          MAX2 = (<DESIGN-HEAT-T>-<MAX-SUPPLY-T>)                               -037b    1
          IF( MAX2 .NE. 0.) THEN                                                -037b    2
            MAX2 = AMAX1(CFMINh, <ERMIND>/(CONS(1)*MAX2) )                      -037b    3
          ELSE                                                                  -037b    4
            MAX2 = CFMINh                                                       -037b    5
          ENDIF                                                                 -037b    6
        ELSE                                                                    -036    27
          MAX2 = (<DESIGN-HEAT-T>-(<MIN-SUPPLY-T>+<REHEAT-DELTA-TZ>))           -037b    7
          IF( MAX2 .NE. 0.) THEN                                                -037b    8
            MAX2 = AMAX1(CFMINh, <ERMIND>/(CONS(1)*MAX2) )                      -037b    9
          ELSE                                                                  -037b   10
            MAX2 = CFMINh                                                       -037b   11
          ENDIF                                                                 -037b   12
        ENDIF                                                                   -036    31
      ENDIF                                                                     -036    32
C              COMPUTE IT FROM AIR-CHANGES SPECIFIED                            DESIGN1014
      MAX3   = (<AIR-CHANGES/HR>*<VOLUME>/60.)*<SIZING-RATIO>                   DESIGN1015
C              COMPUTE IT FROM THE CFM/SQFT SPECIFIED                           DESIGN1016
      MAX4   = <CFM/SQFT>*<AREA>*<SIZING-RATIO>                                 DESIGN1017
C              PICK THE MAXIMUM OF THE ABOVE QUANTITIES OR                      DESIGN1018
C              THE EXHAUST CFM. NOTE THAT IF THE EXHAUST CFM IS                 DESIGN1019
C              AN ICREASE IN THE SUPPLY CFM                                     DESIGN1020
      ZCFM   = AMAX1(MAX2,MAX3,MAX4,MAX5,10.0,CFMINc, ZCFM,                     DESIGN1021
     1         ZVENT*(1.0+<INDUCTION-RATIO>),                                   DESIGN1022
     2         <EXHAUST-CFM>*(1.0+<INDUCTION-RATIO>)/BPMULT)                    DESIGN1023
C              ROUND TO THE NEAREST 10 CFM                                      DESIGN1024
      IF(ZCFM .EQ. MAX5) ICFM = 1                                               DESIGN1025
      IF(ZCFM .EQ. MAX2) ICFM = -1                                              DESIGN1026
C              IF THE CFM WAS COMPUTED FROM LOADS PEAKS SKIP                    DESIGN1027
      GOTO 40                                                                   DESIGN1028
   35 CONTINUE                                                                  DESIGN1029
      IF(<ASSIGNED-CFM>*BPMULT .GE. <EXHAUST-CFM>)  GOTO 40                     DESIGN1030
      <ASSIGNED-CFM> = <EXHAUST-CFM>/BPMULT                                     DESIGN1031
      ZCFM  = <EXHAUST-CFM>/BPMULT                                              DESIGN1032
      CALL MSGSIM(-2,II,II,II,II)                                               DESIGN1033
      WRITE(IOUTPT,9036) (<ZONE-NAME>,II=1,8)                                   -42c    34
 9036 FORMAT(14X,8A4,' has EXHAUST-CFM greater than ASSIGNED-CFM.'/             -42c    35
     $       14X,'ASSIGNED-CFM has been reset equal to EXHAUST-CFM.')           -42c    36
C              CONVERT CFM FROM STND TO LOCAL CFM                               DESIGN1037
   40 <CFMAX> = ZCFM*BPMULT                                                     DESIGN1038
      RETR   = 1.0                                                              DESIGN1039
      IF(<CFMAX> .GT. 0.0)  RETR = (1.0-<EXHAUST-CFM>/<CFMAX>)                  DESIGN1040
C              IF ZONE LEVEL VENTILATION IS ZERO USE SYSTEM LEVEL               DESIGN1041
      IF(<VENTMIN>.LE.0.0)                                                      DESIGN1042
     1<VENTMIN> = AMIN1(<MIN-OUTSIDE-AIR>*<CFMAX>,<CFMAX>/                      DESIGN1043
     2                  (1.0+<INDUCTION-RATIO>))                                DESIGN1044
C              SUM VENTILATION REQUIREMENT                                      DESIGN1045
      IF((ICODE.NE.1).AND.(ICODE.NE.7).AND.(ICODE.NE.8)                         DESIGN1046
     1               .AND.(ICODE.NE.17))  GOTO 23                               DESIGN1047
      IF(<VENTMIN> .LE. 0.0)  GOTO 24                                           DESIGN1048
      CALL MSGSIM(-2,II,II,II,II)                                               DESIGN1049
      WRITE(IOUTPT,9023) (<ZONE-NAME>,II=1,8),(<SYSTEM-NAME>,II=1,8)            -42c    37
 9023 FORMAT(14X,'ZONE ',8A4,' in SYSTEM ',8A4/                                 -42c    38
     $       14X,'has unused outside air specified')                            -42c    39
      <VENTMIN> = 0.0                                                           DESIGN1053
      ZVENT  = 0.0                                                              DESIGN1054
      GOTO 24                                                                   DESIGN1055
   23 CONTINUE                                                                  DESIGN1056
      IF (<AIRFLOW-TRACKING> .lt. 2) THEN  ! supply not tracked                 -044e   21
        ZVENT = AMAX1(<VENTMIN>,<EXHAUST-CFM>)/BPMULT                           -044e   22
      ELSE  ! exhaust tracks airflow                                            -044e   23
        ZVENT = <CFMAX>/BPMULT                                                  -044e   24
      ENDIF                                                                     -044e   25
      OUTA = OUTA + ZVENT*BPMULT*ZMULT                                          -044e   26
   24 CONTINUE                                                                  DESIGN1060
C                                                                               DESIGN1061
C              SIZING CALCULATION FOR UNITARY EQUIPMENT                         DESIGN1062
C                                                                               DESIGN1063
C              IF NOT UNITARY SKIP                                              DESIGN1064
      IF(IUNIT .EQ. 0)  GOTO 99                                                 DESIGN1065
C              IF AN INDUCTION UNIT SKIP                                        DESIGN1066
      IF(IUNIT .EQ. 3)  GOTO 90                                                 DESIGN1067
C              PICK UP SOME VALUES FOR FUTURE USE                               DESIGN1068
      ICFMTON= 0                                                                -041f    1
   25 PO     = ZVENT/ZCFM                                                       -041f    2
      IF(PO .EQ. 0.0)  PO = <MIN-OUTSIDE-AIR>                                   DESIGN1070
      CBF    = <COIL-BF>                                                        DESIGN1071
C                                                                               DESIGN1072
C              HEATING LOAD CALC                                                DESIGN1073
C                                                                               DESIGN1074
      IF((<HEAT-SOURCE> .EQ. 0).and.(ICODE .NE. 15))  GOTO 83                   -27C     5
C              CALC RETURN,SUPPLY AND MIXED AIR TEMPS                           DESIGN1075
      TRZ    = <DESIGN-HEAT-T> + <QPPEAKH>/(CONS(1)*<CFMAX>)                    DESIGN1076
      THZ    = <MAX-SUPPLY-T>                                                   DESIGN1077
      TMZ    = PO*DBTMIN + (1.0-PO)*TRZ + <SUPPLY-DELTA-T>*CONS(3)              DESIGN1078
C              CALC 1.08 VALUE AT EXTRANCE CONDITIONS                           DESIGN1079
      CONS1  = (.24+.44*0.0)*60.0/V(TMZ,0.0,BLDGP)                              DESIGN1080
C              FAN HEAT                                                         DESIGN1081
      FANH   = CONS(1)*<CFMAX>*<SUPPLY-DELTA-T>*CONS(3)                         DESIGN1082
C              CALC LOAD                                                        DESIGN1083
      QH     = AMIN1(0.0,CONS1*<CFMAX>*(TMZ-THZ))                               DESIGN1084
C              FOR HEAT PUMPS CALC CAPACITY CORRECTION SO THAT DESIGN           DESIGN1085
C              LOAD MAY BE ADJUSTED FOR OFF DESIGN CONDITIONS                   DESIGN1086
      QHM1   = 1.0                                                              DESIGN1087
      IF((<HEAT-SOURCE>.EQ.4).OR.(<HEAT-SOURCE>.EQ.9))                          DESIGN1088
     1QHM1   = CVAL(<HEAT-CAP-FT>,TMZ,AMAX1(DBTMIN,<MIN-HP-T>))                 -131   151
C              SIZE SUPP-HEAT-CAP IF NOT USER INPUT                             DESIGN1090
      IF(((<HEAT-SOURCE>.EQ.4).OR.(<HEAT-SOURCE>.EQ.9)).AND.                    DESIGN1091
     $  (IERQF.EQ.0)) <SUPP-HEAT-CAP> = AMIN1(<SUPP-HEAT-CAP>,QH)               DESIGN1092
      IF(ICODE .EQ. 15)  THEN                                                   HVAC12  22
        JLP  = <CW-LOOPZ>                                                       HVAC12  23
        QHM1 = CVAL(<HEAT-CAP-FT>,TMZ,<lp:DESIGN-HEAT-T>)                       ChlrHP   1
      ENDIF                                                                     HVAC12  25
C              IF CAPACITY WAS NOT SPECIFIED SKIP                               DESIGN1095
   80 <HEATCAPZ> = <HEATING-CAPZ>                                               DESIGN1096
      IF(<HEATCAPZ> .EQ. 0.0) <HEATCAPZ> = <HEATING-CAPACITY>                   DESIGN1097
C              ADJUCT FOR OFF RATED CFM                                         DESIGN1098
      <RATEDCFM> = <RATED-CFMZ>                                                 DESIGN1099
      IF(<RATEDCFM> .EQ. 0.0)  <RATEDCFM> = <RATED-CFM>                         DESIGN1100
      PLRCFM = 1.0                                                              DESIGN1101
      IF(<RATEDCFM> .GT. 0.0)  PLRCFM = <CFMAX>/<RATEDCFM>                      DESIGN1102
C           SAVE INFO ABOUT USER SPECIFIED HEATPUMP CAPACITY                    DESIGN1104
C           IHPQF = 0 USER DID NOT SPECIFY ANYTHING                             DESIGN1105
C                   1 HEATING CAP SPECIFIED                                     DESIGN1106
C                   2 COOLING                                                   DESIGN1107
C                   3 BOTH HEATING AND COOLING                                  DESIGN1108
C             SAVE INFO ABOUT HEATING HEATPUMP CAP SPECIFIED                    DESIGN1109
      IF(ICFMTON .eq. 0)  THEN                                                  -041f    3
        IF(<HEATCAPZ> .LT. 0.0)  THEN                                           -041f    4
          IHPQF = 1                                                             -041f    5
        ELSE                                                                    -041f    6
          IHPQF = 0                                                             -041f    7
        ENDIF                                                                   -041f    8
      ENDIF                                                                     -041f    9
C              IF DID NOT SPECIFY CAPACITY USE CALCULATED CAP                   DESIGN1115
      IF(<HEATCAPZ> .EQ. 0.0)  GOTO 81                                          DESIGN1116
C              IF THE CFM WAS NOT SPECIFIED AND THIS IS A HEATING               DESIGN1120
C              ONLY SYSTEM WE CAN CALC THE CFM FROM THE CAP AND                 DESIGN1121
C              DELTA T                                                          DESIGN1122
      IF((<ASSIGNED-CFM>.LE.0.0) .AND. (<SIZING-METHOD>.NE.1) .AND.             -041f   10
     1   ((IUNIT.EQ.2).OR.(<ERMAXD>.LE.0.0)))                                   DESIGN1124
     2   <CFMAX> = <HEATCAPZ>/(CONS1*(AMIN1(TMZ,<DESIGN-HEAT-T>)-THZ))          DESIGN1125
      QHF   = TMZ - <HEATCAPZ>/(CONS1*<CFMAX>)                                  DESIGN1126
      IF((<HEAT-SOURCE>.EQ.4).AND.(DBTMIN.LT.<MIN-HP-T>))  QHF = TMZ            DESIGN1127
      IF((<HEAT-SOURCE> .EQ. 4) .AND. (DBTMIN .LE. <MAX-HSUPP-T>))              DESIGN1128
     1 QHF    = QHF - <SUPP-HEAT-CAP>/(CONS1*<CFMAX>)                           DESIGN1129
      QHF   = AMIN1(QHF,<MAX-SUPPLY-T>)                                         DESIGN1130
      QHF   = AMIN1(CONS1*<CFMAX>*(<DESIGN-HEAT-T>-QHF),0.0)                    DESIGN1131
C             SAVE THE CALC EXTRACTION RATE                                     DESIGN1132
      <ERMIND> = QHF                                                            DESIGN1133
      GOTO 82                                                                   DESIGN1134
C              SAVE CALCULATED CAPICITY                                         DESIGN1135
   81 <HEATCAPZ> = QH/QHM1                                                      DESIGN1136
      IF(ICFM .NE. -1)                                                          DESIGN1137
     1<ERMIND> = CONS1*<CFMAX>*(<DESIGN-HEAT-T>-<MAX-SUPPLY-T>)                 DESIGN1138
c              hot water coils only                                             HVAC    53
   82 IF (<HW-LOOPZ> .GT. 0)  THEN                                              HVAC    54
c              pointer to hw loop                                               HVAC    55
        JLP = <HW-LOOPZ>                                                        HVAC    56
c              design dT between EAT and EWT for hot water coil (zonal)         HVAC    57
        <HWDESDTZ> = TMZ - <lp:DESIGN-HEAT-T>                                   ChlrHP   2
c              check to make sure design water temp at least 10F hotter         HVAC    59
c              than leaving coil temp                                           HVAC    60
        IF ((<lp:DESIGN-HEAT-T> - THZ) .LT. 10.)  THEN                          ChlrHP   3
          CALL MSGSIM(-1,II,II,II,II)                                           DESIGN1146
          WRITE(IOUTPT,9423) (<ZONE-NAME>,II=1,8),                              HVAC14  24
     &                       <lp:DESIGN-HEAT-T>, THZ                            ChlrHP   4
          IFLAG = 1                                                             DESIGN1148
        ENDIF                                                                   DESIGN1149
      ENDIF                                                                     DESIGN1150
      IF(ICFMTON .ne. 0)  GOTO 89                                               -041f   11
      IF(IREPRT(2,34).NE.0)  WRITE(IOUTPT,9082) <DESIGN-HEAT-T>,                IREPRT  21
     $  <QPPEAKH>,                                                              IREPRT  22
     1                        <CFMAX>,                                          DESIGN1152
     2                     PO,CONS1,QHM1,TRZ,TMZ,THZ,QH,<HEATCAPZ>,             DESIGN1153
     3                     <ERMIND>, <HWDESDTZ>                                 DESIGN1154
 9082 FORMAT(11X,29HZONE UNIT HEATING CALCULATION /                             DESIGN1155
     111X,12H  D-H-T   = ,F11.2,12H  QPPEAKH = ,F11.0,11H  CFMAX  = ,           DESIGN1156
     2                                          F11.0 /                         DESIGN1157
     311X,12H  PO      = ,F11.3,12H  CONS1   = ,F11.3,11H  QHM1   = ,           DESIGN1158
     4                                          F11.3 /                         DESIGN1159
     511X,12H  TRZ     = ,F11.2,12H  TMZ     = ,F11.2,11H  THZ    = ,           DESIGN1160
     6                                          F11.2 /                         DESIGN1161
     711X,12H  QH      = ,F11.0,12H  HEATCAPZ= ,F11.0,11H  ERMIND = ,           DESIGN1162
     8                                          F11.0 /                         DESIGN1163
     911X,12H HWDESDTZ = ,F11.1)                                                DESIGN1164
C                                                                               DESIGN1165
C              UNITARY SYSTEM COOLING LOAD CALCULATION                          DESIGN1166
C                                                                               DESIGN1167
C              IF IT WAS A HEATING ONLY SYSTEM SKIP                             DESIGN1168
   83 IF(IUNIT .EQ. 2)  GOTO 98                                                 HVAC25  11
C              CALC RETURN, MIX AND SUPPLY TEMPS                                DESIGN1170
      TRZ    = <DESIGN-COOL-T> + <QPPEAKC>/(CONS(1)*<CFMAX>)                    DESIGN1171
      WRMAX  = WFUNC(<DESIGN-COOL-T>,<MAX-HUMIDITY>,BLDGP)                      -030     3
      TMZ    = AMAX1( <MIN-SUPPLY-T>,                                           -034    39
     $                PO*DBTMAX + (1.0-PO)*TRZ                                  -034    40
     $                          + <SUPPLY-DELTA-T>*CONS(3) )                    -034    41
      TCZ    = <MIN-SUPPLY-T>                                                   DESIGN1173
C              CALC COIL SURFACE TEMP                                           DESIGN1174
      TSURF  = (TCZ-CBF*TMZ)/(1.0-CBF)                                          DESIGN1175
C              CALC SATURATION HUMIDITY RATIO AT COIL SURF TEMP                 DESIGN1176
      WSURF  = WFUNC(TSURF,100.,BLDGP)                                          DESIGN1177
C              CALC CHANGE HUMIDITY RATIO FROM SPACE LATENT LOAD                DESIGN1178
      DW     = <QLPEAKC>*RETR/(CONS(2)*AMAX1(<CFMAX>,<VOLUME>/60.0))            DESIGN1179
C              CALC RATIO OF INFILTRATION TO SUPPLY                             DESIGN1180
      F      = <CFMIPEAKC>*RETR/AMAX1(<CFMAX>,<VOLUME>/60.0)                    DESIGN1181
C              IF NO OUTSIDE AIR NEED A SPECIAL CALC                            DESIGN1182
      WM     = WMAX + DW                                                        DESIGN1183
C              CALC MIX HUMIDITY AS IF COIL WAS DRY                             DESIGN1184
      IF((F+PO) .GT. 0.0)  WM = ((PO+F)*WMAX+(1.0-PO)*DW)/(F+PO)                DESIGN1185
      WC     = WM                                                               DESIGN1186
      WR     = (WC+DW+F*WMAX)/(1.0+F)                                           DESIGN1187
      IF(WM .LT. WSURF)  GOTO 86                                                DESIGN1188
      WR     = (CBF*PO*WMAX+(1.0-CBF)*WSURF+DW+F*WMAX)                          DESIGN1189
     1         /(1.0+F-CBF*(1.0-PO))                                            DESIGN1190
      WM     = PO*WMAX + (1.0-PO)*WR                                            DESIGN1191
      WC     = CBF*WM + (1.0-CBF)*WSURF                                         DESIGN1192
C              CALC ENTHALPY CHANGE ACROSS COIL                                 DESIGN1193
   86 QCZ    = H(TMZ,WM) - H(TCZ,WC)                                            DESIGN1194
C              CONVERT TO TOTAL LOAD FOR HOUR                                   DESIGN1195
      QCZ    = AMAX1( 0.0, QCZ*<CFMAX>*60.0/V(TMZ,WM,BLDGP) )                   -034    42
C              CALC 1.08 VALUE AT ENTERING CONDITIONS                           DESIGN1197
      CONS1  = ((.24+.44*WM)*60.0)/V(TMZ,WM,BLDGP)                              DESIGN1198
C              CALC SENSIBLE PART OF TOTAL                                      DESIGN1199
      QCSZ   = AMAX1(0.0,CONS1*<CFMAX>*(TMZ-TCZ))                               DESIGN1200
C              CALC ENTERING WETBULB TEMP                                       DESIGN1201
      IF (<CONDENSER-TYPE> .eq. 3) THEN                                         -045h   31
        EWB  = Max(WBFS(TMZ,WM,BLDGP), <COOL-FT-MIN>)                           -045h   32
      ELSE                                                                      -045h   33
        EWB  = Max(WBFS(TMZ,WM,BLDGP), <COOL-FT-MIN>-10.)                       -045h   34
      ENDIF                                                                     -045h   35
C              PICK UP THE OTHER VARIABLE FOR CAPACITY ADJUSTMENT CALC          DESIGN1203
C              FOR FANCOILS USE ENTERING DRYBULB                                DESIGN1204
C              WTR-AIR HEATPUMPS USE ENTERING WATER TEMP                        DESIGN1205
C              AIR-AIR HEATPUMPS USE OUTSIDE DRYBULB                            DESIGN1206
      EDB    = TMZ                                                              DESIGN1207
      IF( ICODE .EQ. 15 )  THEN                                                 HVAC6   97
        JLP = <CW-LOOPZ>                                                        HVAC6   98
        EDB = <lp:DESIGN-COOL-T>                                                ChlrHP   5
      ENDIF                                                                     HVAC6  100
      IF(ICODE .EQ. 22)  EDB = AMAX1(DBTMAX,<COOL-FT-MIN>)                      DESIGN1209
      IF (IPCCF .gt. 0)  EDB = PCCEDB                                           -045h   36
C              CALC TOTAL AND SENSIBLE CAPICITY ADJUSTMENTS                     DESIGN1211
      QCM1   = AMAX1( 0.0, CVAL(<COOL-CAP-FT>,EWB,EDB) )                        -034    43
      QCM2   = AMAX1( 0.0, CVAL(<COOL-SH-FT>,EWB,EDB) )                         -034    44
      QCM3   = 0.0                                                              DESIGN1214
      IF((ICODE .EQ. 15).OR.(ICODE.EQ.22))                                      DESIGN1215
     1QCM3   = CONS1*<CFMAX>*(1.0-CBF)*AMAX1(-20.0,AMIN1(20.0,TMZ-80.0))        DESIGN1216
C              SEE IF USER SPECIFIED A CAPACITY                                 DESIGN1217
      <COOLCAPZ> = <COOLING-CAPZ>                                               DESIGN1218
      IF(<COOLCAPZ> .EQ. 0.0)  <COOLCAPZ> = <COOLING-CAPACITY>                  DESIGN1219
      <COOLSHZ> = <COOL-SH-CAPZ>                                                DESIGN1220
      IF(<COOLSHZ> .EQ. 0.0)  <COOLSHZ> = <COOL-SH-CAP>                         DESIGN1221
      IF(<SIZING-METHOD> .eq. 2)  THEN                                          -041f   13
         X         = <COOLCAPZ>                                                 -041f   14
        IF (<CFM/TON> .GT. 0.)  THEN                                            -041f   15
          <COOLCAPZ> = (<CFMAX>/(<CFM/TON>*BPMULT))*12000.                      -041f   16
        ELSE                                                                    -041f   17
          CapMin     = (<CFMAX>/(<MAX-CFM/TON>*BPMULT))*12000.                  -041f   18
          CapMax     = (<CFMAX>/(<MIN-CFM/TON>*BPMULT))*12000.                  -041f   19
          <COOLCAPZ> = Min(CapMax, Max(<COOLCAPZ>, CapMin))                     -041f   20
        ENDIF                                                                   -041f   21
        <COOLSHZ> = 0.                                                          -041f   22
        ICFMTON   = 2                                                           -041f   23
        IF(IREPRT(2,34).NE.0)  WRITE(IOUTPT,9188) X, <COOLCAPZ>,                -041f   24
     $                       <CFMAX>, <CFM/TON>                                 -041f   25
 9188   FORMAT(' Reset of ZONE COOLING-CAPACITY using CFM & CFM/TON'/           -041f   26
     $  ' Old Cap = ',F11.0,'  New Cap = ',F11.0,' CFM      = ',F11.2 /         -041f   27
     $  ' CFM/TON = ',F11.0,' CFM converted to STD CFM for Calc /\')            -041f   28
      ENDIF                                                                     -041f   29
C             SAVE INFO ABOUT COOLING HEATPUMP CAP SPECIFIED                    DESIGN1223
      IF(<COOLCAPZ> .GT. 0.0)  THEN                                             DESIGN1224
         IF(IHPQF .EQ. 0) THEN                                                  DESIGN1225
            IHPQF = 2                                                           DESIGN1226
         ELSE                                                                   DESIGN1227
            IHPQF = 3                                                           DESIGN1228
         END IF                                                                 DESIGN1229
      END IF                                                                    DESIGN1230
C               ADJUST FOR OFF RATED CFM                                        DESIGN1231
      PLRCFM = 1.0                                                              DESIGN1232
      IF(<RATEDCFM> .GT. 0.0)  PLRCFM = <CFMAX>/<RATEDCFM>                      DESIGN1233
C              IF THE USER DID NOT SPECIFY THE CAPACITY USE THE CALC            DESIGN1236
      IF(<COOLCAPZ> .EQ. 0.0)  GOTO 87                                          DESIGN1237
C              IF THE SENSIBLE PART OF THE CAPACITY WAS NOT SPECIFIED           DESIGN1242
C              USE THE SENSIBLE THAT WAS CALCULATED.  THIS IS NOT               DESIGN1243
C              A GOOD WAY FOR THE USER TO DO THINGS.                            DESIGN1244
      IF(<COOLSHZ> .LE. 0.0) THEN                                               -044a    9
        <COOLSHZ> = <COOLCAPZ>                                                  -044a   10
        CC = QCZ/QCM1                                                           -044a   11
        QCM3 = QCM3*(<COOLCAPZ>/CC)                                             -044a   12
        HC = AMAX1(0.0,AMIN1( CC,AMAX1(0.0,(QCSZ-QCM3))/QCM2))                  -044a   13
        IF(CC.GT.0. .AND. HC.GT.0.) <COOLSHZ> = <COOLCAPZ>*(HC/CC)              -044a   14
      ENDIF                                                                     -044a   15
      QCSF   = AMIN1( <COOLCAPZ>*QCM1, AMAX1(0.0,<COOLSHZ>*QCM2+QCM3) )         -034    47
C              IF THE CFM WAS NOT SPECIFIED WE CAN CALC IT FROM THE             DESIGN1248
C              SEN CAP AND THE DELTA T                                          DESIGN1249
      IF(<SIZING-METHOD> .eq. 1) THEN                                           -041f   30
        X       = <CFMAX>                                                       -041f   31
        IF (<CFM/TON> .GT. 0.)  THEN                                            -041f   32
          <CFMAX> = (<COOLCAPZ>/12000.)*<CFM/TON>*BPMULT                        -041f   33
        ELSE                                                                    -041f   34
          CFMmin  = (<COOLCAPZ>/12000.)*<MIN-CFM/TON>*BPMULT                    -041f   35
          CFMmax  = (<COOLCAPZ>/12000.)*<MAX-CFM/TON>*BPMULT                    -041f   36
          <CFMAX> = Min(CFMmax, Max(<CFMAX>, CFMmin))                           -041f   37
        ENDIF                                                                   -041f   38
        ICFMTON = 1                                                             -041f   39
        IF(IREPRT(2,34).NE.0)  WRITE(IOUTPT,9288) X, <CFMAX>,                   -041f   40
     $                       <COOLCAPZ>,<CFM/TON>                               -041f   41
      ELSE                                                                      -041f   42
        IF((<ASSIGNED-CFM>.EQ.0.0).and.(<SIZING-METHOD>.eq.0)) THEN             -041f   43
          <CFMAX> = QCSF/(CONS1*(AMAX1(TMZ,<DESIGN-COOL-T>)-TCZ))               -041f   44
        ENDIF                                                                   -041f   45
      ENDIF                                                                     -041f   46
      QCF    = TMZ - QCSF/(CONS1*<CFMAX>)                                       DESIGN1253
      QCF    = AMAX1(QCF,<MIN-SUPPLY-T>-<SUPPLY-DELTA-T>*CONS(3))               DESIGN1254
      QCF    = AMAX1(0.0,CONS1*<CFMAX>*(<DESIGN-COOL-T>-QCF))                   DESIGN1255
C              SAVE THE CALC EXTRACTION RATE                                    DESIGN1256
      <ERMAXD> = QCF                                                            DESIGN1257
      GOTO 88                                                                   DESIGN1258
C              SET TOTAL CAPACITY TO CALCULATED VALUE                           DESIGN1259
   87 <COOLCAPZ> = QCZ/QCM1                                                     DESIGN1260
C              SET SENSIBLE CAPACITY                                            DESIGN1261
      <COOLSHZ> = AMAX1( 0.0,AMIN1( <COOLCAPZ>,                                 -034    48
     $                       AMAX1(0.0,(QCSZ-QCM3))/QCM2 ) )                    -034    49
      IF(<SIZING-METHOD> .eq. 1) THEN                                           -041f   47
        X       = <CFMAX>                                                       -041f   48
        IF (<CFM/TON> .GT. 0.)  THEN                                            -041f   49
          <CFMAX> = (<COOLCAPZ>/12000.)*<CFM/TON>*BPMULT                        -041f   50
        ELSE                                                                    -041f   51
          CFMmin  = (<COOLCAPZ>/12000.)*<MIN-CFM/TON>*BPMULT                    -041f   52
          CFMmax  = (<COOLCAPZ>/12000.)*<MAX-CFM/TON>*BPMULT                    -041f   53
          <CFMAX> = Min(CFMmax, Max(<CFMAX>, CFMmin))                           -041f   54
        ENDIF                                                                   -041f   55
        ICFMTON = 1                                                             -041f   56
        IF(IREPRT(2,34).NE.0)  WRITE(IOUTPT,9288) X, <CFMAX>,                   -041f   57
     $                       <COOLCAPZ>,<CFM/TON>                               -041f   58
 9288   FORMAT(' Reset of ZONE CFM based on TON & CFM/TON'/                     -041f   59
     $  ' (then recalculate extraction rates and coil sizes)'/                  -041f   60
     $  ' Old CFM = ',F11.0,'  New CFM = ',F11.0,' Cool Cap = ',F11.2 /         -041f   61
     $  ' CFM/TON = ',F11.0,'  Capacity used is at the rating point /\')        -041f   62
      ENDIF                                                                     -041f   63
      IF((ICFM.NE.1) .or. (<SIZING-METHOD>.eq.1)) THEN                          -041f   64
        <ERMAXD> = CONS1*<CFMAX>*(<DESIGN-COOL-T>-<MIN-SUPPLY-T>)               -041f   65
      ENDIF                                                                     -041f   66
c              chilled water coils only                                         HVAC    62
   88 IF((ICODE.ne.15).and.(ICODE.ne.22).and.(<CHW-LOOPZ>.GT.0.)) THEN          -030     5
c              pointer to chw loop                                              HVAC    64
        JLP = <CHW-LOOPZ>                                                       HVAC    65
c              CHW coil capacity at 65F EWB and 44F EWT (zonal)                 HVAC    66
        <CHWCAP6544Z> = <COOLCAPZ>                                              HVAC    67
     1                  / CVAL(<CHW-CAP-FEWBEWT>,EWB,<lp:DESIGN-COOL-T>)        ChlrHP   6
c              differential between LAT and EWT must be at least 6F             HVAC    69
        IF ((TCZ - <lp:DESIGN-COOL-T>) .LT. 6.)  THEN                           ChlrHP   7
          CALL MSGSIM(-1,II,II,II,II)                                           DESIGN1273
          WRITE(IOUTPT,9424) (<SYSTEM-NAME>,II=1,8)                             -42c    40
          IFLAG = 1                                                             DESIGN1275
        ENDIF                                                                   DESIGN1276
      ENDIF                                                                     DESIGN1277
      IF(IREPRT(2,34).NE.0)  WRITE(IOUTPT,9088) <DESIGN-COOL-T>,                IREPRT  23
     $  <QPPEAKC>,                                                              IREPRT  24
     1                        <CFMAX>,                                          DESIGN1280
     2                     PO,CONS1,CBF,QCM1,QCM2,QCM3,TRZ,TMZ,TCZ,EDB,         DESIGN1281
     3                     EWB,TSURF,WSURF,F,DW,WR,WM,WC,QCZ,QCSZ,              DESIGN1282
     4                     <ERMAXD>,<COOLCAPZ>,<COOLSHZ>,QCSF,                  DESIGN1283
     5                     <CHWCAP6544Z>                                        DESIGN1284
 9088 FORMAT(11X,29HZONE UNIT COOLING CALULATION /                              DESIGN1285
     111X,12H  D-C-T   = ,F11.2,12H  QPPEAKC = ,F11.0,11H  CFMAX  = ,           DESIGN1286
     2                                          F11.0 /                         DESIGN1287
     311X,12H  PO      = ,F11.3,12H  CONS1   = ,F11.3,11H  CBF    = ,           DESIGN1288
     4                                          F11.3 /                         DESIGN1289
     511X,12H  QCM1    = ,F11.3,12H  QCM2    = ,F11.3,11H  QCM3   = ,           DESIGN1290
     6                                          F11.3 /                         DESIGN1291
     711X,12H  TRZ     = ,F11.2,12H  TMZ     = ,F11.2,11H  TCZ    = ,           DESIGN1292
     8                                          F11.2 /                         DESIGN1293
     911X,12H  EDB     = ,F11.2,12H  EWB     = ,F11.2,11H  TSURF  = ,           DESIGN1294
     1                                          F11.2 /                         DESIGN1295
     211X,12H  WSURF   = ,F11.6,12H  F       = ,F11.3,11H  DW     = ,           DESIGN1296
     3                                          F11.6 /                         DESIGN1297
     411X,12H  WR      = ,F11.6,12H  WM      = ,F11.6,11H  WC     = ,           DESIGN1298
     5                                          F11.6 /                         DESIGN1299
     611X,12H  QCZ     = ,F11.0,12H  QCSZ    = ,F11.0,11H  ERMAXD = ,           DESIGN1300
     7                                          F11.0 /                         DESIGN1301
     811X,12H  COOLCAPZ= ,F11.0,12H  COOLSHZ = ,F11.0,11H  QCSF   = ,           DESIGN1302
     9             F11.0 / 11X,' CHWCAP6544Z=',F11.1)                           DESIGN1303
      IF(ICFMTON .eq. 1)  THEN                                                  -041f   67
        IF((<AIR-CHANGES/HR>.eq.0.) .and. (<CFM/SQFT>.eq.0.) .and.              -041f   68
     $     (<OUTSIDE-AIR-CFM>.eq.0.))  THEN                                     -041f   69
          RETR   = 1.0                                                          -041f   70
          IF(<CFMAX> .GT. 0.0)  RETR = (1.0-<EXHAUST-CFM>/<CFMAX>)              -041f   71
          IF((<OUTSIDE-AIR-CFM>.LE.0.) .AND. (<OA-CHANGES>.LE.0.) .AND.         -44c7    1
     $       (<OA-FLOW/AREA>.LE.0.)    .AND. (<OA-CFM/PER>.LE.0.)) THEN         -44c7    2
            ZVENT  = <MIN-OUTSIDE-AIR>*<CFMAX>                                  -041f   74
            ZVENT  = AMAX1(ZVENT,<EXHAUST-CFM>)/BPMULT                          -041f   75
            OUTA   = OUTA + (ZVENT*BPMULT-<VENTMIN>)*ZMULT                      -041f   76
          ENDIF                                                                 -041f   78
        ENDIF                                                                   -041f   79
        GOTO 25                                                                 -041f   80
      ENDIF                                                                     -041f   81
   89 CONTINUE                                                                  -041f   82
C              MAKE HEAT PUMP CAPACITIES EQUAL                                  DESIGN1304
      CC = <COOLCAPZ>                                                           DESIGN1305
      HC = <HEATCAPZ>                                                           DESIGN1306
      CEIR = <COOLING-EIR>                                                      DESIGN1307
      HEIR = <HEATING-EIR>                                                      DESIGN1308
      IF((<HEAT-SOURCE>.EQ.4).OR.(<HEAT-SOURCE>.EQ.9).OR.                       DESIGN1309
     $   (ICODE .EQ. 15)) THEN                                                  DESIGN1310
          G = ABS((CC/AMIN1(-1.,HC))/(HEIR/AMAX1(.001,CEIR)))                   DESIGN1311
          IF((IHPQF.EQ.3).AND.((G.GT.1.15).OR.(G.LT.0.85)))                     DESIGN1312
     1    THEN                                                                  DESIGN1313
              CALL MSGSIM(-2,II,II,II,II)                                       DESIGN1314
              WRITE (IOUTPT,9089) HC,CC,(<ZONE-NAME>,II=1,8)                    -42c    41
          ELSE IF (IHPQF.eq.2 .and. CC.gt.0.0) THEN                             -034    50
              <HEATCAPZ> = -(CEIR/HEIR)*CC                                      DESIGN1317
          ELSE IF (IHPQF.eq.1 .and. HC.lt.0.0) THEN                             -034    51
              R1 = <COOLSHZ>/(<COOLCAPZ>+1.)                                    DESIGN1319
              IF(R1 .LE. 0.0) R1 = .8                                           DESIGN1320
              <COOLCAPZ> = -(HEIR/CEIR)*HC                                      DESIGN1321
              <COOLSHZ> = R1*<COOLCAPZ>                                         DESIGN1322
          ELSE IF (IHPQF .EQ. 0) THEN                                           DESIGN1323
              IF ((CC*CEIR.gt.ABS(HC*HEIR)) .OR. (ICODE.ne.15)) THEN            -034    52
                  <HEATCAPZ> = -(CEIR/HEIR)*CC                                  DESIGN1325
              ELSE                                                              DESIGN1326
                  R1 = <COOLSHZ>/(<COOLCAPZ>+1.)                                DESIGN1327
                  IF(R1 .LE. 0.0) R1 = .8                                       DESIGN1328
                  <COOLCAPZ> = -(HEIR/CEIR)*HC                                  DESIGN1329
                  <COOLSHZ> = R1*<COOLCAPZ>                                     DESIGN1330
              END IF                                                            DESIGN1331
          END IF                                                                DESIGN1332
      END IF                                                                    DESIGN1333
 9089 FORMAT(14X,'HEATING-CAPACITY of ',F11.0,                                  DESIGN1334
     $ ' is inconsistent with a '/14X,'COOLING-CAPACITY of ',F11.0,             DESIGN1335
     $ 'in ZONE ',8A4)                                                          -42c    42
 9090 FORMAT('    WLHP ->' ,                                                    RemPA  344
     1    12H  GPMDESZ = ,F11.2,12H  WSEGDSZ = ,F11.2)                          RemPA  345
      GOTO 98                                                                   DESIGN1358
C                                                                               DESIGN1359
C              COOLING LOAD CALC FOR COILS IN INDUCTION UNITS                   DESIGN1360
C                                                                               DESIGN1361
   90 CALL DESIND                                                               DESIGN1362
C              RE-CALC CFM INCASE IT HAS JUST BEEN RESET                        DESIGN1363
   98 ZCFM   = <CFMAX>/BPMULT                                                   DESIGN1364
      IF(((IUNIT.EQ.1).OR.(IUNIT.EQ.2)).AND.(<RATEDCFM>.EQ.0.0))                DESIGN1365
     1<RATEDCFM> = <CFMAX>                                                      DESIGN1366
   99 CONTINUE                                                                  DESIGN1367
      <CFMAXH> = <CFMAX>                                                        DESIGN1368
c             skip if unitary equipment                                         DESIGN1369
      VentBB = 0.0                                                              -034    53
      IF (IUNIT .NE. 0)  THEN                                                   -034    54
C              If baseboards need to be auto sized, do it now                   -034    55
        IF((<BASEBOARD-SOURCE>.ne.0).and.(BBSIZE.LT.0.).and.                    -034    56
     $     ((<ZONE-HEAT-SOURCE>.ne.0).or.(ICODE.EQ.15))) THEN                   -034    57
C              Is it an air system?                                             -034    58
C              Calc size increase/decrease due to air system                    -034    59
        IF((IRHFLAG .eq. 0) .OR. (ISZCZ .eq. 1))  THEN                          -043a   24
          VentBB = CONS(1)*<CFMAXH>*(<DESIGN-HEAT-T>-<MAX-SUPPLY-T>)            -036    34
        ELSE                                                                    -036    35
          VentBB = CONS(1)*<CFMAXH>*                                            -036    36
     $             (<DESIGN-HEAT-T>-(<MIN-SUPPLY-T>+<REHEAT-DELTA-TZ>))         -036    37
        ENDIF                                                                   -036    38
C              Recalc BBSIZE                                                    -034    61
          <BASEBOARD-RATING> = AMIN1(0.0,BBSIZE - VentBB)                       -034    62
        ENDIF                                                                   -034    63
        GOTO 108                                                                -034    64
      ENDIF                                                                     -034    65
c                                                                               DESIGN1371
      IF (DDSTYPE .EQ. 0)  THEN                                                 DESIGN1372
c              all single-duct systems - the min cfm ratio must be at           DESIGN1373
c              least the minimum/sqft specified                                 DESIGN1374
        <MINCFMR> = AMIN1(1.0, AMAX1(<MINCFMR>,                                 DESIGN1375
     1                               CFMINc*BPMULT/(ZCFM+1.E-6)) )              DESIGN1376
c              the heating min must be at least the cooling min                 DESIGN1377
        IF((ICODE .NE. 28) .OR. (<MINCFMRH> .LE. 0.))                           -44c3a  10
     $    <MINCFMRH> = AMAX1(<MINCFMRH>,<MINCFMR>)                              -44c3a  11
c              skip if reverse action thermostat or RESVVT                      DESIGN1379
        IF ((<THERMOSTAT-TYPE> .NE. 3) .AND. (ICODE .NE. 27))  THEN             DESIGN1380
c              set max cfm for heating to min ratio - Note that ratio           DESIGN1381
c              may be different during heating than cooling                     DESIGN1382
          <CFMAXH> = <CFMAX>*<MINCFMRH>                                         DESIGN1383
c              if this produces a non-zero value skip                           DESIGN1384
          IF ((<CFMAXH> .EQ. 0.0) .OR. (CFMINh .GT. 0.))  THEN                  DESIGN1385
c              otherwise we must calc the ratio for maximum                     DESIGN1386
c              of the ventilation or heating requirements                       DESIGN1387
            MAX2   = 0.0                                                        DESIGN1388
            IF((IRHFLAG .eq. 0) .OR. (ISZCZ .eq. 1))  THEN                      -043a   25
              IF(<MAX-SUPPLY-T> .GT. <DESIGN-HEAT-T>)                           -036    40
     $          MAX2 = <ERMIND>/                                                -036    41
     $                 (CONS(1)*(<DESIGN-HEAT-T>-<MAX-SUPPLY-T>))               -036    42
            ELSE                                                                -036    43
              IF(<MIN-SUPPLY-T>+<REHEAT-DELTA-TZ> .GT. <DESIGN-HEAT-T>)         -036    44
     $          MAX2 = <ERMIND>/(CONS(1)*                                       -036    45
     $             (<DESIGN-HEAT-T>-(<MIN-SUPPLY-T>+<REHEAT-DELTA-TZ>)))        -036    46
            ENDIF                                                               -036    47
            <CFMAXH> = Max(<CFMAXH>, MAX2*BPMULT,                               -044e   27
     &                               CFMINh*BPMULT, <VENTMIN>)                  -044e   28
            IF (<AIRFLOW-TRACKING> .ne. 0) THEN                                 -047k   19
              <MINCFMRH> = Min(1., Max(0., <CFMAXH>/(<CFMAX>+1.E-6)))           -044e   30
              <CFMAXH>   = Max(<CFMAXH>, <EXHAUST-CFM>)                         -044e   31
            ELSE                                                                -044e   32
              <CFMAXH>   = Max(<CFMAXH>, <EXHAUST-CFM>)                         -044e   33
              <MINCFMRH> = Min(1., Max(0., <CFMAXH>/(<CFMAX>+1.E-6)))           -044e   34
            ENDIF                                                               -044e   35
          ENDIF                                                                 DESIGN1394
        ELSE                                                                    DESIGN1395
c              reverse-action tstat or RESVVT have maximum flow                 DESIGN1396
          IF (<zn:HMAX-FLOW-RAT> .gt. 0.) THEN                                  -047f    1
            <CFMAXH> = <CFMAX> * Max(<zn:HMAX-FLOW-RAT>,<MINCFMRH>)             -047f    2
          ELSE                                                                  -047f    3
            <CFMAXH> = <CFMAX>                                                  -047f    4
          ENDIF                                                                 -047f    5
        ENDIF                                                                   DESIGN1398
c              make sure min allows ventilation requirements                    DESIGN1399
c              when MIN-CFM-RATIO was not specified                             DESIGN1400
        IF (<MINCFMR> .EQ. 0.0)  THEN                                           DESIGN1401
          IF (<AIRFLOW-TRACKING> .ne. 0) THEN                                   -047k   20
            <MINCFMR> = <VENTMIN> / (<CFMAX>+1.E-6)                             -044e   37
          ELSE                                                                  -044e   38
            <MINCFMR> = Max(<VENTMIN>, <EXHAUST-CFM>) / (<CFMAX>+1.E-6)         -044e   39
          ENDIF                                                                 -044e   40
          IF((ICODE .NE. 28) .OR. (<MINCFMRH> .LE. 0.))                         -44c3a  12
     $      <MINCFMRH> = AMAX1(<MINCFMR>, <MINCFMRH>)                           -44c3a  13
        ELSEIF (<EXHAUST-CFM> .GT. 0.  .AND.                                    -044e   41
     &                                   <AIRFLOW-TRACKING> .EQ. 0) THEN        -044e   42
          <MINCFMR> = Max(<MINCFMR>, <EXHAUST-CFM>/(<CFMAX>+1.E-6))             -044e   43
          IF((ICODE .NE. 28) .OR. (<MINCFMRH> .LE. 0.))                         -044e   44
     $      <MINCFMRH> = Max(<MINCFMR>, <MINCFMRH>)                             -044e   45
        ENDIF                                                                   DESIGN1404
c              recalc max heating flow                                          -047f    6
        <CFMAXH> = Max(<CFMAXH>, <CFMAX>*<MINCFMRH>)                            -047f    7
c              recalculate the design extraction rate                           DESIGN1405
        IF((<HEAT-SOURCE>.ne.0) .OR. (<ZONE-HEAT-SOURCE>.ne.0)) THEN            -034    66
          IF((IRHFLAG .eq. 0) .OR. (ISZCZ .eq. 1))  THEN                        -043a   26
            <ERMIND> = CONS(1)*<CFMAXH>*(<DESIGN-HEAT-T>-<MAX-SUPPLY-T>)        -036    49
     $                         /BPMULT                                          -036    50
          ELSE                                                                  -036    51
            <ERMIND> = CONS(1)*<CFMAXH>*(<DESIGN-HEAT-T>-                       -036    52
     $                   (<MIN-SUPPLY-T>+<REHEAT-DELTA-TZ>))/BPMULT             -036    53
          ENDIF                                                                 -036    54
        ENDIF                                                                   -034    69
        IF((ICODE.ne.8).AND.(ICODE.ne.16)) THEN                                 -034    70
          <ERMAXD> = CONS(1)*<CFMAX> *(<DESIGN-COOL-T>-<MIN-SUPPLY-T>)          -034    71
     $                                / BPMULT                                  -034    72
        ENDIF                                                                   -034    73
      ELSE                                                                      DESIGN1410
c              Dual-duct system - the previous cooling cfm calcs assumed        DESIGN1411
c              the cold duct min-cfm-ratio was MINCFMR.  For dusl-duct          DESIGN1412
c              systems, the cold duct min-cfm-ratio is MINCFMRC, and the        DESIGN1413
c              outlet min-cfm-ratio is MINCFMR.                                 DESIGN1414
        <MINCFMRC> = <MINCFMR>                                                  DESIGN1415
c              min cooling cfm ratio must be at least the min/sqft specd        DESIGN1416
        <MINCFMRC> = AMIN1(1.0, AMAX1(<MINCFMRC>,                               DESIGN1417
     1                                CFMINc*BPMULT/(ZCFM+1.E-6)) )             DESIGN1418
c              dual-duct can have zone heating quantities                       DESIGN1419
c              specified independently of cooling                               DESIGN1420
        <CFMAXH> = <HASSIGNED-CFM> * <SIZING-RATIO> * BPMULT                    DESIGN1421
c              skip sizing calc if CFM explicity defined by user                DESIGN1422
        IF (<CFMAXH> .EQ. 0.)  THEN                                             DESIGN1423
c              compute it based on the heating peak.  Include the               DESIGN1424
c              additional load imposed by the minimum cooling cfm               DESIGN1425
          MAX2 = 0.                                                             DESIGN1426
          IF (<MAX-SUPPLY-T> .NE. 0.)                                           DESIGN1427
     1      MAX2 = (<ERMIND> - CONS(1)*ZCFM*<MINCFMRC>*dTch)                    DESIGN1428
     2                     / (CONS(1)*dTh)                                      DESIGN1429
c              compute it from air-changes specified                            DESIGN1430
          MAX3 = (<HAIR-CHANGES/HR> * <VOLUME>/60.) * <SIZING-RATIO>            DESIGN1431
c              compute it from the cfm/sqft specified                           DESIGN1432
          MAX4   = <HCFM/SQFT>*<AREA>*<SIZING-RATIO>                            DESIGN1433
c              calc minimum heating cfm if minimum outlet cfm                   DESIGN1434
c              specified for box                                                DESIGN1435
          ZCFMh = AMAX1(CFMINh, CFMINt - AMAX1(CFMINc,ZCFM*<MINCFMRC>))         DESIGN1436
c              pick the maximum of the above quantities                         DESIGN1437
          <CFMAXH> = AMAX1(MAX2, MAX3, MAX4, ZCFMh) * BPMULT                    DESIGN1438
c              single-fan dual-duct heating must be at least vent reqt,         DESIGN1439
c              reduced by the cooling min-cfm                                   DESIGN1440
          IF (DDSTYPE .EQ. 1)  <CFMAXH> = AMAX1(<CFMAXH>,                       DESIGN1441
     1           AMAX1(<VENTMIN>,<EXHAUST-CFM>)-<CFMAX>*<MINCFMRC>)             DESIGN1442
        ENDIF                                                                   DESIGN1443
c              reverse-acting thermostat gives same maximum flow                DESIGN1444
c              heating vs. cooling (but may be variable volume)                 DESIGN1445
        IF (<THERMOSTAT-TYPE> .EQ. 3)  <CFMAXH> = <CFMAX>                       DESIGN1446
c              minimum cfm measured at the box outlet - note that MINCFMR       DESIGN1447
c              previously was the cold duct min-cfm-ratio                       DESIGN1448
        <MINCFMR> = <MIN-CFM-RATIOZ>                                            DESIGN1449
c              get it from the system level if not specified at the             DESIGN1450
c              zone level                                                       DESIGN1451
        IF (<MINCFMR> .EQ. 0.)  <MINCFMR> = <MIN-CFM-RATIO>                     DESIGN1452
c              constant-volume box gives same flow heating vs. cooling          DESIGN1453
c              (thermostat type is irrelevant)                                  DESIGN1454
        IF (<MINCFMR> .GT. 0.99)  THEN                                          DESIGN1455
c              except dual fan system can have lower hot flow                   -030     6
          IF(DDSTYPE .EQ. 1)  <CFMAXH> = <CFMAX>                                -030     7
          IF (<MIN-CFM-SOURCEZ> .NE. 2)  THEN                                   HVAC    71
c              Tstat controls via heating setpoint for constant-volume,         HVAC    72
c              with cooling making up the remainder                             HVAC    73
            <MIN-CFM-SOURCEZ> = 2                                               HVAC    74
            IF (Iddcv1 .EQ. 0)  THEN                                            HVAC    75
              CALL MSGSIM(-3,II,II,II,II)                                       HVAC    76
              WRITE (IOUTPT,3949)                                               HVAC    77
              Iddvc1 = 1                                                        HVAC    78
            ENDIF                                                               HVAC    79
          ENDIF                                                                 HVAC    80
 3949 FORMAT(14X,'The MIN-FLOW-SOURCE for all constant-volume mixing'           HVAC    81
     $      /14X,'boxes is the COLD-DUCT.  See SV-A.')                          HVAC    82
c              caution the user about the thermostat setpoint control           HVAC    83
c              for a constant-volume box                                        HVAC    84
          IF (Iddcv .EQ. 0)  THEN                                               HVAC    85
            CALL MSGSIM(-3,II,II,II,II)                                         HVAC    86
            WRITE (IOUTPT,3948)                                                 HVAC    87
            Iddcv = 1                                                           HVAC    88
          ENDIF                                                                 HVAC    89
 3948 FORMAT(14X,'In dual-duct or multizone systems with constant-'             HVAC29   2
     $      /14X,'volume mixing boxes, the hourly control setpoint will'        HVAC29   3
     $      /14X,'be the mid-point of the HEAT-TEMP-SCH and COOL-TEMP-'         HVAC29   4
     $      /14X,'SCH and the throttling range will span the setpoints')        HVAC29   5
        ENDIF                                                                   DESIGN1460
c              minimum heating ratio must be at least the min per sq.ft.        DESIGN1461
        <MINCFMRH> = AMIN1(1.0, AMAX1(<MINCFMRH>,                               DESIGN1462
     1                                CFMINh*BPMULT/(<CFMAXH>+1.E-6)) )         DESIGN1463
c              maximum box flow measured at the outlet                          DESIGN1464
        <CFMAXT> = AMAX1(<CFMAX>  +  <CFMAXH>*<MINCFMRH>,                       DESIGN1465
     1                   <CFMAXH> +  <CFMAX> *<MINCFMRC>  )                     DESIGN1466
c              min outlet flow ratio must be at least the minimum               DESIGN1467
c              per sq.ft.                                                       DESIGN1468
        <MINCFMR> = AMIN1(1.0, AMAX1(<MINCFMR>,                                 DESIGN1469
     1                                 CFMINt*BPMULT/(<CFMAXT>+1.E-6)))         DESIGN1470
c              For single-fan dual-duct, outlet min must be at least            DESIGN1471
c              the ventilation requirement (single-duct and dual-fan            DESIGN1472
c              dual-duct vent reqt provided thru MINCFMR)                       DESIGN1473
        IF (DDSTYPE .EQ. 1) THEN                                                -044e   46
          IF (<AIRFLOW-TRACKING> .ne. 0) THEN                                   -047k   21
            <MINCFMR> = Max(<MINCFMR>, <VENTMIN>/(<CFMAXT>+1.E-6))              -044e   48
          ELSE                                                                  -044e   49
            <MINCFMR> = Max(<MINCFMR>,                                          -044e   50
     &                  Max(<VENTMIN>, <EXHAUST-CFM>)/(<CFMAXT>+1.E-6))         -044e   51
          ENDIF                                                                 -044e   52
        ENDIF                                                                   -044e   53
c              outlet min-cfm must be at least the minimum from                 DESIGN1478
c              both decks.                                                      DESIGN1479
        RMINCFMT = (<CFMAX>*<MINCFMRC> + <CFMAXH>*<MINCFMRH>)                   DESIGN1480
     1                                               / (<CFMAXT>+1.E-6)         DESIGN1481
        <MINCFMR> = AMAX1(<MINCFMR>, RMINCFMT)                                  DESIGN1482
c              for dual-fan, make sure min allows vent reqts                    DESIGN1483
c              when MIN-CFM-RATIO was not specified                             DESIGN1484
        IF (DDSTYPE .EQ. 2) THEN                                                -044e   54
          IF (<MINCFMRC> .EQ. 0.0) THEN                                         -044e   55
            IF (<AIRFLOW-TRACKING> .ne. 0) THEN                                 -047k   22
              <MINCFMRC> = <VENTMIN> / (<CFMAX>+1.E-6)                          -044e   57
            ELSE                                                                -044e   58
              <MINCFMRC> = Max(<VENTMIN>,<EXHAUST-CFM>)/(<CFMAX>+1.E-6)         -044e   59
            ENDIF                                                               -044e   60
          ELSEIF (<EXHAUST-CFM> .GT. 0.  .AND.                                  -044e   61
     &                                   <AIRFLOW-TRACKING> .EQ. 0) THEN        -044e   62
            <MINCFMRC> = Max(<MINCFMRC>, <EXHAUST-CFM>/(<CFMAX>+1.E-6))         -044e   63
          ENDIF                                                                 -044e   64
        ENDIF                                                                   -044e   65
c              hot deck flow must be at least the box minimum                   DESIGN1488
        <CFMAXH> = AMAX1(<CFMAXH>,                                              DESIGN1489
     1                   <CFMAXT>*<MINCFMR>-<CFMAX>*<MINCFMRC>)                 DESIGN1490
c              recalculate the design extraction rates                          DESIGN1491
        <ERMIND> = CONS(1) * (<CFMAXH>*(<DESIGN-HEAT-T>-<MAX-SUPPLY-T>)         DESIGN1492
     1             + AMAX1(0.,<CFMAX>*<MINCFMRC>*(<DESIGN-HEAT-T>-TCr)))        DESIGN1493
     2                                                          / BPMULT        DESIGN1494
        <ERMAXD> = CONS(1) * (<CFMAX> *(<DESIGN-COOL-T>-<MIN-SUPPLY-T>)         DESIGN1495
     1            + AMIN1(0.,<CFMAXH>*<MINCFMRH>*(<DESIGN-COOL-T>-THr)))        DESIGN1496
     2                                                          / BPMULT        DESIGN1497
c              end of dual-duct calcs                                           DESIGN1498
      ENDIF                                                                     DESIGN1499
      IF(ICODE .EQ. 16)  <ERMAXD> = 0.0                                         DESIGN1500
                                                                                HVAC10   6
c              calc reheat coil cap                                             HVAC10   7
      IF( (ICODE.eq.16) .OR.                                                    -043a   27
     $    ((IRHFLAG.eq.1) .AND.                                                 -043a   28
     $         (.not.((ICODE .eq. 23)                                           -043a   29
     $         .AND.((<TERMINAL-TYPE>.eq.3).OR.(<TERMINAL-TYPE>.eq.4))))        -043a   30
     $                    .AND.                                                 -043a   31
     $         (ISZCZ .EQ. 0))                                                  -043a   32
     $  ) THEN                                                                  -043a   33
        <HEATCAPZ> = -CONS(1)*<CFMAXH>*<REHEAT-DELTA-TZ> / BPMULT               -036    58
C             Now calculate the ZONE max addition for this coil sizing          -036    59
        IF(ICODE .eq. 16) THEN                                                  -036    60
          MXST=<MAX-SUPPLY-T>                                                   -036    61
        ELSE                                                                    -036    62
          MXST=<MIN-SUPPLY-T>+<REHEAT-DELTA-TZ>                                 -036    63
        ENDIF                                                                   -036    64
        <ERMIND> = CONS(1)*<CFMAXH>*(<DESIGN-HEAT-T>-MXST)/BPMULT               -036    65
c             hot water reheat coil only                                        -036    66
        IF(<HW-LOOPZ> .GT. 0)  THEN                                             -036    67
c              pointer to hw loop                                               -036    68
          JLP = <HW-LOOPZ>                                                      -036    69
c             design dT between EAT and EWT for reheat coil                     -036    70
          <HWDESDTZ> = (<MAX-SUPPLY-T>-<REHEAT-DELTA-TZ>)                       -036    71
     $                                             - <lp:DESIGN-HEAT-T>         ChlrHP   8
        ENDIF                                                                   -036    73
      ENDIF                                                                     -036    74
      IF((IUNIT.eq.0) .AND. (<HW-LOOPZ> .GT. 0))  THEN                          -036    75
        JLP = <HW-LOOPZ>                                                        HVAC10  30
        IF(IRHFLAG .eq. 1) THEN                                                 -036    76
          IF((<lp:DESIGN-HEAT-T>                                                ChlrHP   9
     $        -(<MIN-SUPPLY-T>+<REHEAT-DELTA-TZ>)) .LT. 10.)  THEN              -036    78
            CALL MSGSIM(-1,II,II,II,II)                                         -036    79
            WRITE(IOUTPT,9423) (<ZONE-NAME>,II=1,8),                            -036    80
     $           <lp:DESIGN-HEAT-T>, <MIN-SUPPLY-T>+<REHEAT-DELTA-TZ>           ChlrHP  10
            IFLAG = 1                                                           -036    82
          ENDIF                                                                 -036    83
        ELSE                                                                    -036    84
          IF ((<lp:DESIGN-HEAT-T>-<MAX-SUPPLY-T>) .LT. 10.)  THEN               ChlrHP  11
            CALL MSGSIM(-1,II,II,II,II)                                         -036    86
            WRITE(IOUTPT,9423) (<ZONE-NAME>,II=1,8),                            -036    87
     $           <lp:DESIGN-HEAT-T>, <MAX-SUPPLY-T>                             ChlrHP  12
            IFLAG = 1                                                           -036    89
          ENDIF                                                                 -036    90
        ENDIF                                                                   HVAC10  35
        IF(IREPRT(2,34).NE.0)  WRITE(IOUTPT,9898)                               -035    36
     $                     <HWDESDTZ>,<lp:DESIGN-HEAT-T>                        ChlrHP  13
 9898   FORMAT(' reheat coil HW loop parameters:' /                             -035    38
     $  '  ZONE hwdesdtz=',f10.3,'  LOOP hw-sup-t=',f10.3)                      -035    39
      ENDIF                                                                     -035    40
      IF(IREPRT(2,34).NE.0)  WRITE(IOUTPT,9899)                                 -035    41
     $                     <MAX-SUPPLY-T>, <HEATCAPZ>,                          -035    42
     $                     <REHEAT-DELTA-TZ>, <REHEAT-DELTA-T>,                 -036    91
     $                     <ERMIND>,<MAX-HEAT-RATE>                             -036    92
 9899 FORMAT(' reheat coil calculations:' /                                     -035    44
     $  '  SYS max-sup-t=',f10.2,'  ZONE  heatcap=',f10.0/                      -043a   34
     $  ' ZONE reheat-dt=',f10.2,'  SYS reheat-dt=',f10.2/                      -043a   35
     $  ' ZONE ERMIND   =',f10.0, ' MAX-HEAT-RATE=',f10.0)                      -043a   36
c              warn if minimum ventilation rate is not met in this zone         CCIG7   14
      MINvent = <VENTMIN>*0.95 / (<CFMAX> + 1.E-6)                              CCIG7   15
      IF (DDSTYPE .LT. 2  .AND.  <MINCFMR> .LT. MINvent)  THEN                  CCIG7   16
        CALL MSGSIM(-2,II,II,II,II)                                             CCIG7   17
        WRITE(IOUTPT,9140) (<ZONE-NAME>,II=1,8),(<SYSTEM-NAME>,II=1,8),         -42c    43
     $                       <VENTMIN>, MINvent                                 CCIG7   19
      ELSEIF (<MINCFMRC> .LT. MINvent)  THEN                                    CCIG7   20
        CALL MSGSIM(-2,II,II,II,II)                                             CCIG7   21
        WRITE(IOUTPT,9141) (<ZONE-NAME>,II=1,8),(<SYSTEM-NAME>,II=1,8),         -42c    44
     $                      <VENTMIN>, MINvent                                  CCIG7   23
      ENDIF                                                                     CCIG7   24
 9140 FORMAT(14X,'ZONE ',8A4,' in SYSTEM ',8A4,' has a minimum flow'            -42c    45
     $     / 14X,'ratio less than required for OA ventilation.'                 CCIG7   26
     $     / 14X,'MIN-CFM-RATIO =',F4.2,' Ventilation requires ',F4.2)          CCIG7   27
 9141 FORMAT(14X,'ZONE ',8A4,' in dual-fan system ',8A4,' has a minimum'        -42c    46
     $     / 14X,'flow ratio on the cold deck damper less than required'        CCIG7   29
     $     / 14X,'for OA ventilation.  CMIN-CFM-RATIO =',F4.2                   CCIG7   30
     $     / 14X,'Ventilation requires ',F4.2)                                  CCIG7   31
c        maximum allowable coil temp for DKTEMP calcs in CCIG version           CCIG7   32
C              IF INSUFFICIENT BASEBOARD-RATING PRINT ERROR MESS                DESIGN1530
C              If baseboards are auto sized, redo calc                          -034    74
      IF((<BASEBOARD-SOURCE>.ne.0).and.(BBSIZE.LT.0.)) THEN                     -034    75
          VentBB = AMIN1(0.0,BBSIZE-<ERMIND>)                                   -034    76
          <BASEBOARD-RATING> = VentBB                                           -034    77
      ENDIF                                                                     -034    78
      MAX2   = <BASEBOARD-RATING> + <ERMIND>                                    DESIGN1531
      II     = 0                                                                DESIGN1532
      IF((ICODE .eq. 23) .AND.                                                  -044d1   1
     $   ((<TERMINAL-TYPE>.EQ.3).or.(<TERMINAL-TYPE>.EQ.4))) GOTO 109           -044d1   2
      IF(MAX2.GT.-1.00*ABS(<MAX-HEAT-RATE>)) THEN                               -044d1   3
        CALL MSGSIM(-2,II,II,II,II)                                             -044d1   4
        WRITE(IOUTPT,9108) (<ZONE-NAME>,II=1,8)                                 -044d1   5
        IF((ICODE.eq. 3 .OR. ICODE.eq. 4 .OR.                                   -044d1   6
     $      ICODE.eq.13 .OR. ICODE.eq.14 .OR.                                   -044d1   7
     $      ICODE.eq.20 .OR. ICODE.eq.21 .OR. ICODE.eq.23))   THEN              -044d1   8
          IF((<HEAT-SET-T>+<REHEAT-DELTA-T>.LT.<MAX-SUPPLY-T>) .OR.             -044d1   9
     $       (<HEAT-SET-T>+<REHEAT-DELTA-T>.LT.<DESIGN-HEAT-T>)) THEN           -044d1  10
            WRITE(IOUTPT,9109) (<SYSTEM-NAME>,II=1,8)                           -044d1  11
          ENDIF                                                                 -044d1  12
          IF(<THERMOSTAT-TYPE>.EQ.3) THEN                                       -044d1  13
            WRITE(IOUTPT,9110) (<ZONE-NAME>,II=1,8)                             -044d1  14
          ENDIF                                                                 -044d1  15
        ENDIF                                                                   -044d1  16
      ENDIF                                                                     -044d1  17
 9108 FORMAT(                                                                   -044d1  18
     $14X,'ZONE ',8A4/                                                          -044d1  19
     $14X,'might have insufficient heating capability.'/                        -044d1  20
     $14X,'Check that the SYSTEM or ZONE HEATING-CAPACITY plus this'/           -044d1  21
     $14X,'ZONEs BASEBOARD-RATING is adequate to maintain the ZONE'/            -044d1  22
     $14X,'specified DESIGN-HEAT-T for the calculated peak ZONE load'/          -044d1  23
     $14X,'(see LS-A or LS-B for the ZONE peak load.)')                         -044d1  24
 9109 FORMAT(                                                                   -044d1  25
     $/14X,'SYSTEM ',8A4/                                                       -044d1  26
     $14X,'which supplies the above listed ZONE, has a design heating'/         -044d1  27
     $14X,'coil exit temperature, HEAT-SET-T,(plus any zone reheat)'/           -044d1  28
     $14X,'below its MAX-SUPPLY-T or the ZONE DESIGN-HEAT-T, which'/            -044d1  29
     $14X,'might account for the insufficient heating capability.')             -044d1  30
 9110 FORMAT(                                                                   -044d1  31
     $/14X,'ZONE ',8A4,' has a THERMOSTAT-TYPE'/                                -044d1  32
     $14X,'of REVERSE-ACTION, which, when added to the issues listed'/          -044d1  33
     $14X,'in the messages above, will cause excessive underheating.')          -044d1  34
C              IF MIN-CFM-R ZERO RESET TO SMALL NUMBER                          DESIGN1540
  109 IF((<MINCFMR>.LE.0.0).AND.(<CFMAXH>.LE.0.0))                              DESIGN1541
     1<CFMAXH> = <CFMAX>*0.001                                                  DESIGN1542
      IF(<MINCFMR> .LE. 0.0)  <MINCFMR> = 0.001                                 DESIGN1543
C              ADD THE BASEBOARD CAPACITY TO THE EXTRACTION RATE                DESIGN1544
  108 TOTBBR = TOTBBR + <BASEBOARD-RATING>*ZMULT                                -034    87
      <ERMIND> = <ERMIND> + <BASEBOARD-RATING>                                  -034    88
      IF(IREPRT(2,34).NE.0)  WRITE(IOUTPT,                                      -034    89
     $'(40H Baseboard sizing calculations: BBSIZE =,f13.3,                      -034    90
     $  10H  VentBB =,f13.3,/30X,20H  BASEBOARD-RATING =,f13.3))')              -034    91
     $  BBSIZE,VentBB,<BASEBOARD-RATING>                                        -034    92
c              total supply airflows at heat/cool peaks                         DESIGN1546
      ZCFMht = <CFMAXH>                                                         DESIGN1547
      ZCFMct = <CFMAX>                                                          DESIGN1548
      IF (DDSTYPE .GT. 0)  THEN                                                 DESIGN1549
c              for dual-duct, total flow at peak includes minimum               DESIGN1550
c              flow from opposite deck                                          DESIGN1551
        ZCFMht = ZCFMht + <CFMAX> *<MINCFMRC>                                   DESIGN1552
        ZCFMct = ZCFMct + <CFMAXH>*<MINCFMRH>                                   DESIGN1553
      ENDIF                                                                     DESIGN1554
c              Increment system cfms for this zone.  For single-fan             DESIGN1555
c              systems, CFM is the peak fan cfm, CFMH is                        DESIGN1556
c              the peak heating cfm.  For dual-duct single-fan systems          DESIGN1557
c              and multizone, CFMC and CFMH are the cold and hot                DESIGN1558
c              deck cfms, and CFM is the fan cfm.  For dual-fan                 DESIGN1559
c              dual-duct, CFMC is the cold deck fan cfm, and CFMH               DESIGN1560
c              is the hot deck fan cfm.                                         DESIGN1561
      CFMH   = CFMH + <CFMAXH>*ZMULT                                            DESIGN1562
      CFMC   = CFMC + <CFMAX> *ZMULT                                            DESIGN1563
      IF (DDSTYPE .NE. 1)  THEN                                                 DESIGN1564
        CFM  = CFM + ZCFM*ZMULT*BPMULT                                          DESIGN1565
      ELSE                                                                      DESIGN1566
c              single-fan dual-duct fan flow is the maximum of                  DESIGN1567
c              peak heating or cooling                                          DESIGN1568
        CFM  = CFM + AMAX1(ZCFMht, ZCFMct)*ZMULT                                DESIGN1569
      ENDIF                                                                     DESIGN1570
c              sum the minimum cfms                                             DESIGN1571
      IF (DDSTYPE .EQ. 0)  THEN                                                 DESIGN1572
        CFMRM  = CFMRM  + <CFMAX>*<MINCFMR> * ZMULT                             DESIGN1573
        CFMRMh = CFMRMh + <CFMAX>*<MINCFMRH>*ZMULT                              -44c3a  18
      ELSE                                                                      DESIGN1574
        CFMRM  = CFMRM  + <CFMAX>*<MINCFMRC> * ZMULT                            DESIGN1575
        CFMRMh = CFMRMh + <CFMAXH>*<MINCFMRH>*ZMULT                             -44c3a  19
      ENDIF                                                                     DESIGN1576
c              if it was a fph set cfm to zero                                  DESIGN1578
      IF(ICODE .EQ. 8)  <CFMAX> = 0.                                            DESIGN1579
                                                                                -046   111
c              If exhaust tracks the supply, set max exhaust to be the supply   -046   112
      SELECT CASE (<AIRFLOW-TRACKING>)                                          -046   113
      CASE (2,3)  ! track supply, track both supply & exh                       -046   114
        SELECT CASE (ICODE)                                                     -046   115
        CASE (3,4,20)                                                           -046   116
          <EXHAUST-CFM> = <CFMAXT>                                              -046   117
        CASE DEFAULT                                                            -046   118
          <EXHAUST-CFM> = <CFMAX>                                               -046   119
        END SELECT                                                              -046   120
      END SELECT                                                                -046   121
c              Increment system exhaust cfm for this zone. ECFM is the          -046   122
c              sum of peak zone exhaust; ECFMrf is the exhaust that             -046   123
c              affects the sizing of the return fan                             -046   124
      IF (<EXHAUST-SOURCE> .eq. 1) THEN  ! makeup by system oa                  -046   125
        ECFMz = <EXHAUST-CFM>*ZMULT                                             -046   126
        ECFM  = ECFM + ECFMz                                                    -046   127
        IF (<ZONE-TYPE>.EQ.3)  ECFMP = ECFMP + ECFMz  ! plenum exhaust          -046   128
c              exhaust that reduces return fan flow                             -046   129
        SELECT CASE (<AIRFLOW-TRACKING>)                                        -046   130
        CASE (0:1)  ! no tracking, track exhaust                                -046   131
          IF (<EXHAUST-FAN-SCHZ> .ne. 0) THEN                                   -047k   23
c              find minimum output of exhaust fan                               -046   133
            Call SCHMNX(<EXHAUST-FAN-SCHZ>,SMAX,SMIN)                           -046   134
            ECFMz = ECFMz * Max(0., SMIN)                                       -046   135
          ENDIF                                                                 -046   136
          ECFMrf = ECFMrf + ECFMz                                               -046   137
        CASE (2:3)  ! track supply or both                                      -046   138
          ECFMrf = ECFMrf + ECFMz                                               -046   139
        END SELECT                                                              -046   140
      ENDIF                                                                     -046   141
c                                                                               DESIGN1584
      IF (ICODE .NE. 23)  THEN                                                  DESIGN1585
c              return cfms at peak cooling and heating                          DESIGN1586
        MAX5  = AMAX1(0.0, ZCFMct - <EXHAUST-CFM>)                              DESIGN1587
        MAX2  = AMAX1(0.0, ZCFMht - <EXHAUST-CFM>)                              DESIGN1588
c              return ratios                                                    DESIGN1589
        RETR  = MAX5 / AMAX1(1., ZCFMct)                                        DESIGN1590
        RETRh = MAX2 / AMAX1(1., ZCFMht)                                        DESIGN1591
c              increment the summed quantities for design load calcs            DESIGN1592
        TRMAX  = TRMAX + (<DESIGN-COOL-T>*MAX5+<QPPEAKC>/CONS(1))*ZMULT         -043a   37
        RCFMmax = RCFMmax + MAX5*ZMULT                                          HVAC25  12
        TRMIN  = TRMIN + (<DESIGN-HEAT-T>*MAX2+<QPPEAKH>/CONS(1))*ZMULT         -043a   38
        RCFMmin = RCFMmin + MAX2*ZMULT                                          HVAC25  13
        QLMAX  = QLMAX + <QLPEAKC>*RETR *ZMULT                                  DESIGN1597
        QLMIN  = QLMIN + <QLPEAKH>*RETRh*ZMULT                                  DESIGN1598
        CINFMX = CINFMX + <CFMIPEAKC>*RETR *ZMULT                               DESIGN1599
        CINFMN = CINFMN + <CFMIPEAKH>*RETRh*ZMULT                               DESIGN1600
c              increment average cooling and heating temps for this zone        DESIGN1601
        AZCOOL = AZCOOL + <DESIGN-COOL-T>*<CFMAX> *ZMULT                        DESIGN1602
        AZHEAT = AZHEAT + <DESIGN-HEAT-T>*<CFMAXH>*ZMULT                        DESIGN1603
      ENDIF                                                                     DESIGN1604
      IF (<ASSIGNED-CFM>  .GT. 0.0)  ACFM  = ACFM  + <CFMAX> *ZMULT             DESIGN1605
      IF (<HASSIGNED-CFM> .GT. 0.0)  ACFMh = ACFMh + <CFMAXH>*ZMULT             DESIGN1606
      <ASSIGNED-CFM> = ACFMS                                                    DESIGN1607
      <CFM/ACH> = <CFM/ACH> + <VOLUME>*ZMULT/60.                                -048l    2
      <DCVOAcfmZD> = <VENTMIN>                                                  -044c  162
      IF(<CFMAX>.GT.0.)                                                         -044c  163
     $  <DCVOAcfmFracD> = AMAX1(0.,AMIN1(1.,<VENTMIN>/<CFMAX>))                 -044c  164
      <DCVOAcfmSD> = <DCVOAcfmSD> + <DCVOAcfmZD>*ZMULT                          -044c  165
      <DCVOAcfmFracCriD> = AMAX1(<DCVOAcfmFracCriD>,<DCVOAcfmFracD>)            -044c  166
      IF(IREPRT(2,34).NE.0)  WRITE(IOUTPT,9099)                                 -043a   39
     $  <DESIGN-COOL-T>,<QPPEAKC>,<QLPEAKC>,                                    -043a   40
     $  <CFMIPEAKC>,<CFMAX>,<ERMAXD>,RETR,<MINCFMRC>,<QMAX>,                    -043a   41
     $  <DESIGN-HEAT-T>,<QPPEAKH>,<QLPEAKH>,                                    -043a   42
     $  <CFMIPEAKH>,<CFMAXH>,<ERMIND>,RETRh,<MINCFMRH>,<QMIN>,                  -043a   43
     $  <EXHAUST-CFM>,<VENTMIN>,<AREA>,                                         -043a   44
     $  <COOLCAPZ>,<HEATCAPZ>,<BASEBOARD-RATING>,                               -043a   45
     $  <MIN-CFM-RATIOZ>,<MIN-CFM-SCH>,<MULTIPLIER>,                            -044c  167
     $  <DCVOAcfmZD>,<DCVOAcfmFracD>                                            -044c  168
 9099 FORMAT(11X,29HZONE Design Values Summary   /                              -043a   47
     $11X,12H  D-C-T   = ,F11.2,12H  QPPEAKC = ,F11.0,11H  QLPEAKC= ,           -043a   48
     $                                          F11.0 /                         -043a   49
     $11X,12H  CFMiPKC = ,F11.2,12H  CFMAX   = ,F11.0,11H  ERMAXD = ,           -043a   50
     $                                          F11.0 /                         -043a   51
     $11X,12H  RETR    = ,F11.2,12H  MINCFMRC= ,F11.4,11H  QMAX   = ,           -044b3  24
     $                                          F11.0 //                        -043a   53
     $11X,12H  D-H-T   = ,F11.2,12H  QPPEAKH = ,F11.0,11H  QLPEAKH= ,           -043a   54
     $                                          F11.0 /                         -043a   55
     $11X,12H  CFMiPKH = ,F11.2,12H  CFMAXH  = ,F11.0,11H  ERMIND = ,           -043a   56
     $                                          F11.0 /                         -043a   57
     $11X,12H  RETRh   = ,F11.2,12H  MINCFMRH= ,F11.4,11H  QMIN   = ,           -044b3  25
     $                                          F11.0 //                        -043a   59
     $11X,12H  EXH-CFM = ,F11.0,12H  OAminCFM= ,F11.0,11H  AREA   = ,           -043a   60
     $             F11.2 /                                                      -043a   61
     $11X,12H  COOLCAPZ= ,F11.0,12H  HEATCAPZ= ,F11.0,11H  BASEBR = ,           -043a   62
     $             F11.0 /                                                      -043a   63
     $11X,12H  MINCFMr = ,F11.0,12H  MINCFMs = ,I11  ,11H  Zmult  = ,           -043a   64
     $             F11.2 /                                                      -044c  169
     $11X,14H  DCVOAcfmZD= ,F9.0,17H  DCVOAcfmFracD= ,F6.3)                     -044c  170
   50 CONTINUE                                                                  DESIGN1609
C              INCREMENT ZP1 TO POINT TO NEXT ZONE IN SYSTEM                    DESIGN1610
      ZP1    = ZP1 + NZD                                                        DESIGN1611
  100 CONTINUE                                                                  DESIGN1612
C              SAVE THE SUMMED CFM FOR USE IN THE SIZING CALC                   DESIGN1613
      CFMS   = CFM/DALINR                                                       DESIGN1614
C              IF SUM OR FPH SKIP                                               DESIGN1615
      IF((ICODE .EQ. 1) .OR. (ICODE .EQ. 8))  GO TO 200                         DESIGN1616
C              CHECK THAT EITHER USER SPECIFIED SYSTEM SFM                      DESIGN1617
C              OR TOTAL ZONE CFM IS NO ZERO                                     DESIGN1618
      IF((<SUPPLY-CFM> .NE. 0.) .OR. (CFM .NE.0.))   GO TO 1000                 DESIGN1619
C              ZERO ALL CFM QUANTITIES                                          DESIGN1620
  200 <SUPPLY-CFM> = 0.                                                         DESIGN1621
      <MIN-CFM-RATIO> = 0.                                                      DESIGN1622
      <MIN-OUTSIDE-AIR> = 0.                                                    DESIGN1623
      <SUPPLY-KW> = 0.                                                          DESIGN1624
C              IF IT WAS A SUM OR FPH SYSTEM SKIP                               DESIGN1625
      IF((ICODE .EQ. 1) .OR. (ICODE .EQ. 8))  GO TO 9000                        DESIGN1626
C              OTHERWISE PRINT A NO CFM ERROR MESSAGE                           DESIGN1627
      II     = 1                                                                DESIGN1628
      CALL MSGSIM(8,<SYSTEM-NAME>,II,II,II)                                     DESIGN1629
C              SET THE ERROR FLAG                                               DESIGN1630
      IFLAG  = 1                                                                DESIGN1631
      IERR   = 1                                                                DESIGN1632
      GO TO 9000                                                                DESIGN1633
 1000 CONTINUE                                                                  DESIGN1634
C              CALCULATE THE AVERAGE ZONE DESIGN-HEAT-TEMP                      DESIGN1635
      AZHEAT = AZHEAT/AMAX1(1., CFMH)                                           DESIGN1636
      <AZHEAT> = AZHEAT                                                         DESIGN1637
C              ALSO COOL TEMP                                                   DESIGN1638
      AZCOOL = AZCOOL/AMAX1(1., CFMC)                                           DESIGN1639
c              Dual-duct systems including multizone                            DESIGN1640
c              average heating and cooling min-cfm-ratios                       DESIGN1641
        RMINCFMH = CFMRMh / AMAX1(1., CFMH)                                     DESIGN1642
        RMINCFM  = CFMRM  / AMAX1(1., CFMC)                                     DESIGN1643
      <AZCOOL> = AZCOOL                                                         DESIGN1644
C              IF MORE THAN ONE SYSTEM                                          RemPA  346
      IF(NSYS .GT. 1)  GOTO 1200                                                RemPA  347
C              IF THE USER SPECIFIED THE SYSTEM CFM THEN SKIP                   DESIGN1647
      IF(<SUPPLY-CFM> .NE. 0.)  GO TO 1200                                      DESIGN1648
C              IF USER DOES NOT WANT COINCIDENT SIZING SKIP                     DESIGN1649
      IF(<SIZING-OPTION> .EQ. 0)  GOTO 1200                                     DESIGN1650
C              IF THE MIN-CFM-RATIO IS 1.0 SKIP                                 DESIGN1651
      IF(<MIN-CFM-RATIO> .GE. 0.99)  GO TO 1200                                 DESIGN1652
 1100 CONTINUE                                                                  DESIGN1653
C              THE FOLLOWING LINES (TO 1200) CALCULATE THE SYSTEM               DESIGN1654
C              FAN CFM BASED ON THE COINCIDENT BUILDING PEAK HEAT               DESIGN1655
C              OR COOL LOAD, WHICHEVER PRODUCES THE LARGER NUMBER               DESIGN1656
C                                                                               DESIGN1657
      MAX2   = 0.                                                               DESIGN1658
      MAX3   = 0.                                                               DESIGN1659
c              design cooling dT                                                DESIGN1660
      dTc  = AMAX1(1., AZCOOL - <MIN-SUPPLY-T>)                                 DESIGN1661
c              cooling dT during heating                                        DESIGN1662
      dTch = AMAX1(0., AZHEAT - TCr)                                            DESIGN1663
c              design heating dT                                                DESIGN1664
      IF((IRHFLAG.eq.0) .OR. (<REHEAT-DELTA-T>.eq.0.))  THEN                    -036   103
        dTh  = AMIN1(-1., AZHEAT - <MAX-SUPPLY-T>)                              -036   104
      ELSE                                                                      -036   105
        dTh  = AMIN1(-1., AZHEAT - AMAX1(<MAX-SUPPLY-T>,                        -043a   66
     $                            (<MIN-SUPPLY-T>+<REHEAT-DELTA-T>)))           -043a   67
      ENDIF                                                                     -036   107
c              heating dT during cooling                                        DESIGN1666
      dThc = AMIN1(0., AZCOOL - THr)                                            DESIGN1667
      IF (DDSTYPE .EQ. 0)  THEN                                                 DESIGN1668
c              All single fan systems                                           DESIGN1669
c              first, CFM based on building heating peak                        DESIGN1670
        MAX2 = BLDGQH/(CONS(1)*dTh)                                             -036   108
c              cfm based on building cooling peak                               DESIGN1673
        IF (<MIN-SUPPLY-T> .NE. 0.)                                             DESIGN1674
     1    MAX3 = BLDGQC/(CONS(1)*dTc)                                           DESIGN1675
c              pick the maximum of the two numbers                              DESIGN1676
        CFM = AMAX1(MAX2,MAX3,0.)*<SIZING-RATIO>*BPMULT                         DESIGN1677
      ELSE                                                                      DESIGN1678
c              All dual-duct and multizone systems                              DESIGN1679
c              Calc the cooling cfm by solving the heating and cooling          DESIGN1680
c              equations simultaneously (assumes min-cfm-ratio for              DESIGN1681
c              cooling also specified)                                          DESIGN1682
        CFMC = (BLDGQC - (BLDGQH*RMINCFMH*dThc)/dTh ) /                         DESIGN1683
     1            AMAX1(1.,                                                     DESIGN1684
     2               (CONS(1)*(dTc - (RMINCFM*RMINCFMH*dThc*dTch)/dTh)))        DESIGN1685
c              calc the corresponding heating cfm                               DESIGN1686
        CFMH = (BLDGQH - CONS(1)*MAX3*RMINCFM*dTch)/(CONS(1)*dTh)               DESIGN1687
c              adjust for sizing ratio and altitude                             DESIGN1688
        CFMC = CFMC * <SIZING-RATIO> * BPMULT                                   DESIGN1689
        CFMH = CFMH * <SIZING-RATIO> * BPMULT                                   DESIGN1690
        IF (DDSTYPE .EQ. 1)  THEN                                               DESIGN1691
c              single-fan dual-duct                                             DESIGN1692
          CFM  = AMAX1(CFMC+CFMH*RMINCFMH, CFMH+CFMC*RMINCFM)                   DESIGN1693
        ELSE                                                                    DESIGN1694
c              dual-fan dual-duct                                               DESIGN1695
          CFM  = CFMC                                                           DESIGN1696
        ENDIF                                                                   DESIGN1697
      ENDIF                                                                     DESIGN1698
c              make sure coincident size is greater than the specified          DESIGN1699
c              zone exhaust-cfm and ventilation requirement                     DESIGN1700
      CFM = AMAX1(CFM,ECFM/DALINR,OUTA/DALINR)                                  DESIGN1701
 1200 CONTINUE                                                                  DESIGN1704
c              adjust supply CFM for induction systems                          DESIGN1705
      CFM  = CFM  / DALINR                                                      -130    60
      CFMC = CFMC / DALINR                                                      -130    61
      CFMH = CFMH / DALINR                                                      -130    62
      ICFMTON  = 0                                                              -041f   83
      HSCFMSS  = <HSUPPLY-CFM>                                                  -041f   84
      RCFMSS   = <RETURN-CFM>                                                   -041f   85
      SKWSS    = <SUPPLY-KW>                                                    -041f   86
      HKWSS    = <HSUPPLY-KW>                                                   -041f   87
      RKWSS    = <RETURN-KW>                                                    -041f   88
      SHCAPSS  = <SUPP-HEAT-CAP>                                                -041f   89
      CFMSS    = CFM                                                            -041f   90
      CFMCSS   = CFMC                                                           -041f   91
      CFMHSS   = CFMH                                                           -041f   92
      CFMRMhSS = CFMRMh                                                         -041f   93
      CFMRMSS  = CFMRM                                                          -041f   94
      ECFMSS   = ECFM                                                           -041f   95
 1203 CONTINUE                                                                  -041f   96
C              ADJUST USER SPECIFIED SUPPLY/RETURN FAN DESIGN                   DESIGN1707
C              CFMS FOR LOCAL CFM                                               DESIGN1708
      <SUPPLY-CFM> = <SUPPLY-CFM>*BPMULT*<SIZING-RATIO>                         DESIGN1709
      <RETURN-CFM> = <RETURN-CFM>*BPMULT*<SIZING-RATIO>                         DESIGN1710
C              CHECK FOR SPECIFIED CFM SMALLER THAN SPECIFIED EXHAUST           DESIGN1711
      IF(<SUPPLY-CFM> .LE. 0.0)  GOTO 1205                                      DESIGN1712
      IF (<SUPPLY-CFM> .LT. ECFM/DALINR) THEN                                   DESIGN1713
          CALL MSGSIM(-1,II,II,II,II)                                           DESIGN1714
          WRITE(IOUTPT,9203) (<SYSTEM-NAME>,II=1,8)                             -42c    47
      ELSE IF (<SUPPLY-CFM> .LT. OUTA/DALINR) THEN                              DESIGN1716
          CALL MSGSIM(-2,II,II,II,II)                                           DESIGN1717
          WRITE(IOUTPT,9205) (<SYSTEM-NAME>,II=1,8)                             -42c    48
      END IF                                                                    DESIGN1719
 9203 FORMAT(14X,'SYSTEM ',8A4,' has a specified SUPPLY-CFM smaller'/           -42c    49
     $       14X,'than the total specified ZONE EXHAUST-CFM')                   -42c    50
 9205 FORMAT(14X,'SYSTEM ',8A4,' has specified SUPPLY-CFM smaller'/             -42c    51
     1   14X,'than the total specified outside air')                            DESIGN1723
 1205 CONTINUE                                                                  DESIGN1724
c              duct air loss                                                    DESIGN1725
      IF (DDSTYPE .EQ. 0)  THEN                                                 DESIGN1726
c              all single duct systems                                          DESIGN1727
        <DUCTCFMLOSS> = CFM * <DUCT-AIR-LOSS>/(1.0-<DUCT-AIR-LOSS>)             DESIGN1728
      ELSE                                                                      DESIGN1729
c              dual-duct systems                                                DESIGN1730
        <DUCTCFMLOSS>    = CFMC * <DUCT-AIR-LOSS>/(1.0-<DUCT-AIR-LOSS>)         DESIGN1731
        <HOTDUCTCFMLOSS> = CFMH * <DUCT-AIR-LOSS>/(1.0-<DUCT-AIR-LOSS>)         DESIGN1732
      ENDIF                                                                     DESIGN1733
c                                                                               DESIGN1734
c              If supply CFM was not specified use calculated value             DESIGN1735
      IF (<SUPPLY-CFM> .EQ. 0.)  THEN                                           DESIGN1736
c              include duct air losses, including hot duct for single-fan       DESIGN1737
c              dual-duct systems                                                DESIGN1738
        CFM = CFM + <DUCTCFMLOSS>                                               DESIGN1739
        IF (DDSTYPE .EQ. 1)  CFM = CFM + <HOTDUCTCFMLOSS>                       DESIGN1740
        <SUPPLY-CFM> = CFM                                                      DESIGN1741
      ELSE                                                                      DESIGN1742
c              adjust duct loss to match specified supply                       DESIGN1743
        <DUCTCFMLOSS> = <DUCTCFMLOSS> *                                         -034    93
     $                  <SUPPLY-CFM>/(CFM/(1.0-<DUCT-AIR-LOSS>)+1.E-6)          -034    94
        IF (DDSTYPE .EQ. 1)  <HOTDUCTCFMLOSS> = <HOTDUCTCFMLOSS> *              -034    95
     $                  <SUPPLY-CFM>/(CFM/(1.0-<DUCT-AIR-LOSS>)+1.E-6)          -034    96
      ENDIF                                                                     DESIGN1747
      IF(<RATED-CFM> .EQ. 0.0)  <RATED-CFM> = <SUPPLY-CFM>                      DESIGN1748
c              define the hot-deck fan for a dual-fan dual-duct system          DESIGN1749
      IF (DDSTYPE .EQ. 2)  THEN                                                 DESIGN1750
c              adjust supply for altitude and sizing ratio                      DESIGN1751
        <HSUPPLY-CFM> = <HSUPPLY-CFM>*BPMULT*<SIZING-RATIO>                     DESIGN1752
c              set cfm to load calc default if not user specified               DESIGN1753
        IF (<HSUPPLY-CFM> .EQ. 0.)  THEN                                        DESIGN1754
c              include duct losses                                              DESIGN1755
          <HSUPPLY-CFM> = CFMH + <HOTDUCTCFMLOSS>                               DESIGN1756
        ELSE                                                                    DESIGN1757
c              recalculate duct loss to match specified supply                  DESIGN1758
          <HOTDUCTCFMLOSS> = <HSUPPLY-CFM> * <DUCT-AIR-LOSS>                    DESIGN1759
        ENDIF                                                                   DESIGN1760
        IF (<HSUPPLY-CFM> .EQ. 0.)  THEN                                        DESIGN1761
          CALL MSGSIM(-1,II,II,II,II)                                           DESIGN1762
          WRITE (IOUTPT, 8033) (<SYSTEM-NAME>,II=1,8)                           -42c    52
          IFLAG = 1                                                             DESIGN1764
        ENDIF                                                                   DESIGN1765
      ENDIF                                                                     DESIGN1766
 8033 FORMAT(14X,'Dual-fan dual-duct system ', 8A4,                             -42c    53
     $           'has zero heating cfm.')                                       -42c    54
c                                                                               DESIGN1769
c              for RESVVT, hot and cold ducts are the same                      -034    97
      IF (ICODE .EQ. 27)  <HOTDUCTCFMLOSS> = <DUCTCFMLOSS>                      -034    98
c              increase coil flows by the duct losses                           DESIGN1774
      IF (DDSTYPE .EQ. 0)  THEN                                                 DESIGN1775
        CFMH   = CFMH   + <DUCTCFMLOSS>                                         DESIGN1776
        CFMC   = CFMC   + <DUCTCFMLOSS>                                         DESIGN1777
        CFMRM  = CFMRM  + <DUCTCFMLOSS>                                         DESIGN1778
      ELSE                                                                      DESIGN1779
        CFMH   = CFMH   + <HOTDUCTCFMLOSS>                                      DESIGN1780
        CFMRMh = CFMRMh + <HOTDUCTCFMLOSS>                                      DESIGN1781
        CFMC   = CFMC   + <DUCTCFMLOSS>                                         DESIGN1782
        CFMRM  = CFMRM  + <DUCTCFMLOSS>                                         DESIGN1783
      ENDIF                                                                     DESIGN1784
c              adjust CFMS for airloss                                          DESIGN1785
      CFMS = CFMS + <DUCTCFMLOSS>                                               DESIGN1786
      IF (DDSTYPE .EQ. 1)  CFMS = CFMS + <HOTDUCTCFMLOSS>                       DESIGN1787
c              air lost to unconditioned spaces looks like exhaust,             RetLoss 27
c              adjust by air picked up by return duct in same space             RetLoss 28
      DuctExfil = 0.                                                            RetLoss 29
      DuctInfil = 0.                                                            RetLoss 30
      DuctOAcfm = 0.                                                            -046a    1
      IF (<DUCT-ZTYPE> .EQ. 2) THEN                                             RetLoss 31
        IF (ICODE .ne. 27)  THEN                                                RetLoss 32
          DuctExfil = <DUCTCFMLOSS> + <HOTDUCTCFMLOSS>                          RetLoss 33
        ELSE                                                                    RetLoss 34
          DuctExfil = <DUCTCFMLOSS>                                             RetLoss 35
        ENDIF                                                                   RetLoss 36
        DuctInfil = DuctExfil * (1.-<DUCT-AIR-LOSS-OA>)                         RetLoss 37
        DuctOAcfm = DuctExfil - DuctInfil                                       -046a    2
        ECFM      = ECFM + DuctOAcfm                                            -046a    3
        ECFMrf    = ECFMrf + DuctExfil - DuctInfil                              -046   142
      ENDIF                                                                     RetLoss 39
c                                                                               ERV     75
c              Return CFM - single-fan systems                                  ERV     76
      RCFM = <SUPPLY-CFM> - ECFMrf                                              -046   143
c              for dual-fan systems, assume return peaks with                   ERV     78
c              heating or cooling peak                                          ERV     79
      IF (DDSTYPE .EQ. 2)                                                       ERV     80
     &  RCFM = AMAX1( <SUPPLY-CFM> + CFMRMh,                                    ERV     81
     &               <HSUPPLY-CFM> + CFMRM  ) - ECFMrf                          -046   144
c     RCFM = MAX(0., RCFM)                                                      ERV     83
c              if return fan exists                                             DESIGN1806
      IF (DTR .NE. 0.)  THEN                                                    DESIGN1807
        IF (<RETURN-CFM> .EQ. 0.)  THEN                                         DESIGN1808
c              cfm exfiltrated due to building pressurization                   -042     1
c              and/or zonal exhaust                                             -042     2
          <ExfilCFM>   = <SUPPLY-CFM> * (1.0-<RETURN-CAP-RATIO>)                -042     3
c              size not spec'd by user - default                                DESIGN1809
          <RETURN-CFM> = AMAX1(0., RCFM - AMAX1(0., <ExfilCFM>-ECFMrf))         -046   145
c              decrease return if hot-deck fan of dual-fan                      DESIGN1811
c              draws its own return - assume minimum heating cfm                DESIGN1812
c              at cooling peak                                                  DESIGN1813
          IF ((DDSTYPE .EQ. 2) .AND. (<RETURN-FAN-LOC> .NE. 1))                 DESIGN1814
     1      <RETURN-CFM> =                                                      DESIGN1815
     2             AMAX1(0., <SUPPLY-CFM> - AMAX1(<ExfilCFM>, ECFMrf) )         -046   146
        ELSE                                                                    DESIGN1817
c              return fan spec'd by user - any difference between supply        DESIGN1818
c              and return is exfiltration/exhaust (hot deck fan excluded)       DESIGN1819
          <ExfilCFM> = AMAX1(0., <SUPPLY-CFM> - <RETURN-CFM>)                   DESIGN1820
        ENDIF                                                                   DESIGN1821
c              air exfiltrated from other than zonal exhaust                    -042     4
        EXFIL = Max(0., <ExfilCFM>-ECFM)                                        -042     5
      ENDIF                                                                     DESIGN1822
c              check if hot-deck fan supply consistent with                     DESIGN1823
c              available return                                                 DESIGN1824
      IF (DDSTYPE .EQ. 2)  THEN                                                 DESIGN1825
c              return during heating assumes cooling at minimum                 DESIGN1826
        RCFMh = <HSUPPLY-CFM> + CFMRM - ECFM                                    DESIGN1827
        IF (<HSUPPLY-CFM> .GT. RCFMh)  THEN                                     DESIGN1828
c              insufficient return for hot deck                                 DESIGN1829
          CALL MSGSIM(-2,II,II,II,II)                                           DESIGN1830
          WRITE (IOUTPT, 8032)                                                  DESIGN1831
 8032     FORMAT(14X,'User-specified HSUPPLY-CFM is larger than'/               DESIGN1832
     1           14X,'available return air.  Heating capacity may'/             DESIGN1833
     2           14X,'be inadequate.')                                          DESIGN1834
        ENDIF                                                                   DESIGN1835
      ENDIF                                                                     DESIGN1836
C              CALC THE SUPPLY FAN KW FROM SPECIFIED KW PER CFM                 DESIGN1837
      <SUPPLY-KW> = <SUPPLY-KW>*<SUPPLY-CFM>                                    DESIGN1838
C              IF NOT SPECIFIED THIS WAY CALC OTHER WAY                         DESIGN1839
      IF(<SUPPLY-KW> .LE. 0.0)                                                  DESIGN1840
     1<SUPPLY-KW> = <SUPPLY-CFM>*DTS/(8520.0*BPMULT)                            DESIGN1841
c              add ws-econo static to fan power                                 HVAC12  26
      IF (<WS-ECONO> .EQ. 1)  THEN                                              HVAC12  27
        <SUPPLY-KW> = <SUPPLY-KW> + <WS-ECONO-KW/FLOW>*<SUPPLY-CFM>             HVAC12  28
        CALL MSGSIM(-3,II,II,II,II)                                             HVAC12  29
        WRITE (IOUTPT,8072)  (<SYSTEM-NAME>,II=1,8)                             HVAC12  30
 8072   FORMAT(14X,'Fan power for system: ',8A4 /                               HVAC12  31
     $         14X,'has been increased for water-side economizer coil.')        HVAC12  32
      ENDIF                                                                     HVAC12  33
C              FOR UNITARY SYSTEMS SAVE THE KW/CFM INSTEAD                      DESIGN1842
C              OF TOTAL BECAUSE ALL FANS ARE THE SAME IN                        DESIGN1843
C              THIS VALUE BUT DIFFERENT CFMS                                    DESIGN1844
      IF((IUNIT.EQ.1).OR.(IUNIT.EQ.2))                                          DESIGN1845
     1<SUPPLY-KW> = <SUPPLY-KW>/<SUPPLY-CFM>                                    DESIGN1846
C              CALC RETURN FAN KW AS SPECIFIED                                  DESIGN1847
      <RETURN-KW> = <RETURN-KW>*<RETURN-CFM>                                    DESIGN1848
C              IF NOT SPECIFIED THIS WAY CALC THE OTHER WAY                     DESIGN1849
      IF(<RETURN-KW> .LE. 0.0)                                                  DESIGN1850
     1<RETURN-KW> = <RETURN-CFM>*DTR/(8520.0*BPMULT)                            DESIGN1851
c              default control for return fan and hot deck fan to supply        DESIGN1852
      IF (<RETURN-FAN-CONTR> .EQ. -1) <RETURN-FAN-CONTR> = <FAN-CONTROL>        DESIGN1853
      IF (<RETURN-EIR-FPLR> .LE. 0)  <RETURN-EIR-FPLR> = <FAN-EIR-FPLR>         CCIG12   5
      IF (    <HFAN-CONTROL> .EQ. -1)     <HFAN-CONTROL> = <FAN-CONTROL>        DESIGN1854
      IF (<HFAN-EIR-FPLR> .LE. 0) <HFAN-EIR-FPLR> = <FAN-EIR-FPLR>              CCIG12   6
c              outside air must be at least the sum of exhaust, excluding       -046a    4
c              duct loss summed into ECFM                                       DESIGN1856
      OUTA  = AMAX1(OUTA, ECFM-DuctOAcfm, <ExfilCFM>)                           -046a    5
c              calc the outside air ratio based on zone info.  Note that        DESIGN1858
c              this is the ratio of the total, not the largest ratio            DESIGN1859
c              needed by a zone.                                                DESIGN1860
      OUTA   = AMIN1(1.0,OUTA/<SUPPLY-CFM>)                                     DESIGN1861
      IF(IUNIT.EQ.1  .OR. IUNIT.EQ.2) GOTO 1201                                 -044c  171
C              If using ASHRAE Std 62 for OA calc then reset OA fraction        -044c  172
C              based upon adjustment for critical zone requirement              -044c  173
      IF((<OA-SIZING-METHOD> .GT. 0) .AND. (OUTA .GT. 0.))                      -044c  174
     $  OUTA=OUTA/(1.0+OUTA-<DCVOAcfmFracCriD>)                                 -044c  175
      IF(<SYSTEM-TYPE>.EQ.29 .OR. ICODE.EQ.17 .OR. ICODE.EQ.27)GOTO 1201        -044c  176
      IF(OUTA .GT. 0.0) GOTO 1201                                               DESIGN1865
      CALL MSGSIM(-2,II,II,II,II)                                               DESIGN1866
      WRITE(IOUTPT,9201) (<SYSTEM-NAME>,II=1,8)                                 -42c    55
 9201 FORMAT(14X,'SYSTEM ',8A4,                                                 -42c    56
     $       ' has zero outside air for design calculations')                   -42c    57
 1201 CONTINUE                                                                  DESIGN1870
C                                                                               DESIGN1871
C              DESIGN LOAD CALC FOR MAIN AIR-HANDLER COILS                      DESIGN1872
C                                                                               DESIGN1873
C              SKIP IF IT IS A UNITARY SYSTEM                                   DESIGN1874
      IF (IUNIT.EQ.1 .OR. IUNIT.EQ.2) THEN                                      DESIGN1875
          <MIN-OUTSIDE-AIR> = OUTA                                              DESIGN1876
          GO TO 8900                                                            DESIGN1877
      END IF                                                                    DESIGN1878
C              SKIP IF NO AIRHANDLER                                            DESIGN1879
      IF((ICODE.EQ.1).OR.(ICODE.EQ.8))  GOTO 9000                               DESIGN1880
C              PICK UP SOME VALUES FOR FUTURE USE                               DESIGN1881
      CBF    = <COIL-BF>                                                        DESIGN1882
C              IF THE USER SPECIFIED THE SUPPLY-CFM WE MUST                     DESIGN1884
C              DISTRIBUTE IT BETWEEN THE ZONES                                  DESIGN1885
      IDISTc = 0                                                                DESIGN1886
      IDISTh = 0                                                                DESIGN1887
      IF (<SUPPLY-CFM> .NE. CFM)  IDISTc = 1                                    DESIGN1888
      IF (DDSTYPE .EQ. 2) THEN                                                  -030     8
c              If HSUPPLY-CFM specified distribute it                           -030     9
        IF (<HSUPPLY-CFM> .NE. CFMH)  IDISTh = 1                                -030    10
c              If HSUPPLY-CFM not specified but SUPPLY-CFM was                  -030    11
C              we need to recalc zone flows and then HSUPPLY-CFM                -030    12
        IF ((IDISTh .eq. 0).and.(IDISTc .eq. 1)) IDISTh = 2                     -030    13
      ENDIF                                                                     -030    14
      IF (IDISTc+IDISTh .EQ. 0)  GOTO 52                                        DESIGN1890
C              BUT WE WANT TO LEAVE ZONES THAT HAD ASSIGNED-CFMS                DESIGN1891
C              WITH THE SAME AMOUNT                                             DESIGN1892
C              CALC CFM NOT AVAIL FOR REDISTRIBUTION                            DESIGN1893
      AECFM = 0.                                                                DESIGN1894
      AECFMh = 0.                                                               DESIGN1895
      ZP1 = ISZ                                                                 DESIGN1896
      DO 1210 NZ=1,NSZ                                                          DESIGN1897
      ZP2 = <ZP2>                                                               DESIGN1898
      ZMULT = <MULTIPLIER>                                                      DESIGN1899
      IF (<ASSIGNED-CFM>.GT.0.) THEN                                            DESIGN1900
          AECFM = AECFM + AMAX1(0.,<ASSIGNED-CFM>)*<SIZING-RATIO>*BPMULT        -044b3  26
     $                      *ZMULT                                              -044b3  27
      ELSE IF (<SUPPLY-CFM>.LT.CFMS) THEN                                       DESIGN1902
          AECFM = AECFM + ZMULT*AMAX1(0.,<EXHAUST-CFM>)                         DESIGN1903
      END IF                                                                    DESIGN1904
c              specified hot deck flow must be at least the box minimum         -044b3  28
      IF (<HASSIGNED-CFM>.GT.0.)                                                -044b3  29
     $  AECFMh = AECFMh + AMAX1(<HASSIGNED-CFM>*<SIZING-RATIO>*BPMULT,          -044b3  30
     $                          <CFMAXT>*<MINCFMR>-<CFMAX>*<MINCFMRC>)          -044b3  31
     $                        *ZMULT                                            -044b3  32
 1210 ZP1 = ZP1 + NZD                                                           DESIGN1907
c              adjust by induction ratio                                        DESIGN1908
      AECFM = AECFM / DALINR                                                    DESIGN1909
c              include duct losses                                              DESIGN1910
      AECFM = AECFM + <DUCTCFMLOSS>                                             DESIGN1911
      IF (DDSTYPE .EQ. 1)  AECFM  = AECFM  + <HOTDUCTCFMLOSS>                   DESIGN1912
      IF (DDSTYPE .EQ. 2)  AECFMh = AECFMh + <HOTDUCTCFMLOSS>                   DESIGN1913
C              IF NO ZONE CAN BE CHANGED (ALL ASSIGNED) SKIP                    DESIGN1914
      IF ((IDISTc .EQ. 1) .AND. (CFMS-AECFM  .LE. 0.1))  IDISTc = 0             DESIGN1915
      IF ((IDISTh .NE. 0) .AND. (CFMH-AECFMh .LE. 0.1))  IDISTh = 0             -030    15
      IF (IDISTc+IDISTh .EQ. 0)  GOTO 52                                        DESIGN1917
C              CALC RATIO OF AVAILABLE TO CURRENT ZONE CFM                      DESIGN1918
      IF (IDISTc .EQ. 1)  THEN                                                  DESIGN1919
        IF (<SUPPLY-CFM> .GE. AECFM)  THEN                                      DESIGN1920
          SZCFMR = (<SUPPLY-CFM> - AECFM) / (CFMS - AECFM)                      DESIGN1921
        ELSE                                                                    DESIGN1922
          SZCFMR = 1.0                                                          DESIGN1923
          CALL MSGSIM(-2,II,II,II,II)                                           DESIGN1924
          WRITE(IOUTPT,9202) (<SYSTEM-NAME>,II=1,8)                             -42c    58
        ENDIF                                                                   DESIGN1926
      ENDIF                                                                     DESIGN1927
 9202 FORMAT(14X,'SYSTEM ',8A4,' has specified SUPPLY-CFM smaller'/             -42c    59
     $   14X,'than the total ZONE ASSIGNED-CFM')                                -42c    60
c              hot deck fan in dual-fan system                                  DESIGN1930
      IF (IDISTh .EQ. 1)  THEN                                                  DESIGN1931
        IF (<HSUPPLY-CFM> .GE. AECFMh) THEN                                     DESIGN1932
          SZCFMRh = (<HSUPPLY-CFM> - AECFMh) / (CFMH - AECFMh)                  DESIGN1933
        ELSE                                                                    DESIGN1934
          SZCFMRh = 1.0                                                         DESIGN1935
          CALL MSGSIM(-2,II,II,II,II)                                           DESIGN1936
          WRITE(IOUTPT,9302) (<SYSTEM-NAME>,II=1,8)                             -42c    61
        ENDIF                                                                   DESIGN1938
      ENDIF                                                                     DESIGN1939
 9302 FORMAT(14X,'SYSTEM ',8A4,' has specified HSUPPLY-CFM smaller'/            -42c    62
     $       14X,'than the total ZONE HASSIGNED-CFM')                           -42c    63
      IF(IREPRT(2,34) .EQ. 0)  GOTO 1204                                        IREPRT  25
      WRITE(IOUTPT,9204) (<SYSTEM-NAME>,II=1,8),AECFM,<SUPPLY-CFM>,             -42c    64
     $                   CFMS,SZCFMR                                            -42c    65
 9204 FORMAT(/' BALANCING FOR SYSTEM ',8A4,' - ADJUST ZONE FLOWRATES'/          -044b    2
     $12H    AECFM  =,F11.0,13H  SUPPLY-CFM=,F11.0,9H CFMS   =,F11.0/           -44c5    1
     $12H    SZCFMR =,F11.4)                                                    -44c5    2
 1204 TRMAX  = 0.0                                                              DESIGN1948
      TRMIN  = 0.0                                                              DESIGN1949
      RCFMmax = 0.0                                                             HVAC25  14
      RCFMmin = 0.0                                                             HVAC25  15
      QLMAX  = 0.0                                                              DESIGN1950
      QLMIN  = 0.0                                                              DESIGN1951
      CINFMX = 0.0                                                              DESIGN1952
      CINFMN = 0.0                                                              DESIGN1953
      CFMH   = 0.0                                                              DESIGN1954
      CFMC   = 0.0                                                              DESIGN1955
      CFMRMh = 0.0                                                              DESIGN1956
      CFMRM  = 0.0                                                              DESIGN1957
      OUTA = 0.                                                                 DESIGN1958
      <DCVOAcfmSD>       = 0.                                                   -044c  177
      <DCVOAcfmFracCriD> = 0.                                                   -044c  178
C              LOOP THROUGH THE ZONES AND ADJUST THE CFMS FOR HEAT              DESIGN1959
C              COOL AS WELL AS THE MIN-CFM                                      DESIGN1960
      ZP1    = ISZ                                                              DESIGN1961
      DO 51 NZ=1,NSZ                                                            DESIGN1962
      ZP2    = <ZP2>                                                            DESIGN1963
      ZMULT  = <MULTIPLIER>                                                     DESIGN1964
      IF(((ICODE.eq. 2).OR.(ICODE.eq.17).OR.(ICODE.eq.19).OR.                   -043a   68
     $    (ICODE.eq.26).OR.(ICODE.eq.28)) .AND. (NZ.eq.1)) THEN                 -043a   69
        ISZCZ = 1                                                               -043a   70
      ELSE                                                                      -043a   71
        ISZCZ = 0                                                               -043a   72
      ENDIF                                                                     -043a   73
C              IF THIS ZONE WAS ASSIGNED A CFM SKIP                             DESIGN1965
      IDISTcz = 1                                                               DESIGN1966
      IDISThz = 1                                                               DESIGN1967
      C1     = <CFMAX>                                                          -44c5    3
      C2     = <CFMAXH>                                                         -44c5    4
      C3     = <MINCFMR>                                                        -44c5    5
      C4     = <MINCFMRH>                                                       -44c5    6
      IF ((IDISTc .EQ. 0) .OR. (<ASSIGNED-CFM> .GT. 0.))  IDISTcz = 0           DESIGN1968
      IF ((IDISTh .EQ. 0) .OR. (<HASSIGNED-CFM> .GT. 0.)) IDISThz = 0           DESIGN1969
      IF (<ZONE-TYPE> .NE. 1)  GOTO 53                                          -044b3  33
      IF (IDISTcz .EQ. 0)  GOTO 54                                              DESIGN1971
C              ADJUST THE MAX CFM BE THE RATIO                                  DESIGN1972
C     CALC NEW CFM AND MAKE SURE IT IS LARGER THAN SPECIFIED EXHAUST            DESIGN1973
      IF (SZCFMR.GT.1.) THEN                                                    DESIGN1977
          <CFMAX> = <CFMAX>*SZCFMR                                              DESIGN1978
      ELSE                                                                      DESIGN1979
          <CFMAX> = (<CFMAX>-<EXHAUST-CFM>)*SZCFMR + <EXHAUST-CFM>              DESIGN1980
      END IF                                                                    DESIGN1981
        IF (DDSTYPE .EQ. 0)  THEN                                               DESIGN1982
c              single-duct systems                                              DESIGN1983
          <MINCFMR> = <MIN-CFM-RATIOZ>                                          DESIGN1984
c              if no zone level min ratio was specified pick                    DESIGN1985
c              it up at the system level                                        DESIGN1986
          IF (<MINCFMR> .EQ. 0.0)  <MINCFMR> = <MIN-CFM-RATIO>                  DESIGN1987
          <MINCFMRH> = <HMIN-CFM-RATIOZ>                                        -044c2  30
          IF (<MINCFMRH> .EQ. 0.0)  <MINCFMRH> = <HMIN-CFM-RATIO>               -044c2  31
          IF (<MINCFMRH> .EQ. 0.0)  <MINCFMRH> = <MINCFMR>                      -44c5    7
        ELSE                                                                    DESIGN1988
c              dual-duct and multizone systems                                  DESIGN1989
          <MINCFMR> = <CMIN-CFM-RATIOZ>                                         DESIGN1990
          IF (<MINCFMR> .EQ. 0.0)  <MINCFMR> = <CMIN-CFM-RATIO>                 DESIGN1991
        ENDIF                                                                   DESIGN1992
C               MODIFY OUTSIDE AIR CFM IF MIN-OUTSIDE-AIR WAS USED              DESIGN1993
      IF((<OUTSIDE-AIR-CFM>.LE.0.) .AND. (<OA-CHANGES>.LE.0.) .AND.             -44c7    3
     $   (<OA-FLOW/AREA>.LE.0.)    .AND. (<OA-CFM/PER>.LE.0.))                  -44c7    4
     $  <VENTMIN>=AMIN1(<MIN-OUTSIDE-AIR>*<CFMAX>,                              -44c7    5
     $                  <CFMAX>/(1.+<INDUCTION-RATIO>))                         -44c7    6
   54 IF(<VENTMIN> .GT. <CFMAX>)  THEN                                          -044c  179
        CALL MSGSIM(-2,II,II,II,II)                                             -044c  180
        WRITE(IOUTPT,9054)(<ZONE-NAME>,II=1,8),(<SYSTEM-NAME>,II=1,8)           -044c  181
      ENDIF                                                                     -044c  182
 9054 FORMAT(14X,'ZONE ',8A4,' in SYSTEM ',8A4,' cannot get needed'/            -42c    69
     $ 14X,'MIN-OA without using ASSIGNED-CFM to raise total ZONE flow')        -42c    70
      <VENTMIN> = AMIN1(<CFMAX>,<VENTMIN>)                                      DESIGN2006
      <DCVOAcfmZD> = <VENTMIN>                                                  -044c  184
      IF(<CFMAX>.GT.0.)                                                         -044c  185
     $  <DCVOAcfmFracD> = AMAX1(0.,AMIN1(1.,<VENTMIN>/<CFMAX>))                 -044c  186
      <DCVOAcfmSD> = <DCVOAcfmSD> + <DCVOAcfmZD>*ZMULT                          -044c  187
      <DCVOAcfmFracCriD> = AMAX1(<DCVOAcfmFracCriD>,<DCVOAcfmFracD>)            -044c  188
      IF (IDISTcz+IDISThz .EQ. 0)  GOTO 53                                      -044b3  34
C              IT IT IS A SINGLE ZONE SYSTEM AND THIS IS THE CONTROL            DESIGN2007
C              ZONE KEEP IT AT CONSTANT VOLUME                                  DESIGN2008
      IF(((ICODE.EQ.2).OR.(ICODE.EQ.19)).AND.(NZ.EQ.1))                         DESIGN2009
     1    <MINCFMR> = 1.0                                                       DESIGN2010
c              Heating calcs                                                    DESIGN2011
      IF (DDSTYPE .EQ. 0)  THEN                                                 -031    10
c              the min ratio must be at least the vent reqt                     -44c5    8
c              if not specified                                                 -44c5    9
        IF(<MINCFMR> .EQ. 0.0) THEN                                             -44c5   10
          IF (<AIRFLOW-TRACKING> .ne. 0) THEN                                   -047k   24
            <MINCFMR> = Min(1., <VENTMIN>/(<CFMAX>+1.E-6))                      -044e   68
          ELSE                                                                  -044e   69
            <MINCFMR> = Min(1.,                                                 -044e   70
     &                  Max(<VENTMIN>,<EXHAUST-CFM>)/(<CFMAX>+1.E-6))           -044e   71
          ENDIF                                                                 -044e   72
          IF(<MINCFMRH> .EQ. 0.0) <MINCFMRH> = <MINCFMR>                        -44c5   12
        ELSEIF (<EXHAUST-CFM> .GT. 0.  .AND.                                    -044e   73
     &                                   <AIRFLOW-TRACKING> .EQ. 0) THEN        -044e   74
          <MINCFMR> = Max(<MINCFMR>, <EXHAUST-CFM>/(<CFMAX>+1.E-6))             -044e   75
          IF((ICODE .NE. 28) .OR. (<MINCFMRH> .LE. 0.))                         -044e   76
     $      <MINCFMRH> = Max(<MINCFMR>, <MINCFMRH>)                             -044e   77
        ENDIF                                                                   -44c5   13
c              All single duct systems                                          DESIGN2013
c              reverse acting tstat or RESVVT                                   DESIGN2014
        IF ((<THERMOSTAT-TYPE> .EQ. 3) .OR. (ICODE .EQ. 27))  THEN              DESIGN2015
          IF (<zn:HMAX-FLOW-RAT> .gt. 0.) THEN                                  -047f    8
            <CFMAXH> = <CFMAX> * Max(<zn:HMAX-FLOW-RAT>,<MINCFMRH>)             -047f    9
          ELSE                                                                  -047f   10
            <CFMAXH> = <CFMAX>                                                  -047f   11
          ENDIF                                                                 -047f   12
        ELSEIF (<MINCFMR> .EQ. 0.)  THEN                                        DESIGN2017
c              no min-cfm-ratio specified by user                               DESIGN2018
          IF (<MINCFMRH> .GT. 0.0)  <CFMAXH> = <MINCFMRH>*<CFMAX>               -44c5   14
          <CFMAXH> = AMIN1(<CFMAXH>, <CFMAX>)                                   DESIGN2019
          <MINCFMR> = <CFMAXH> / (<CFMAX>+1.E-6)                                DESIGN2020
        ELSE                                                                    DESIGN2021
          <CFMAXH> = <CFMAX> * <MINCFMRH>                                       -44c5   15
        ENDIF                                                                   DESIGN2023
c              if an induction system skip                                      DESIGN2024
        IF (IUNIT .EQ. 3)  GOTO 57                                              DESIGN2025
c              recalculate design extraction rates and any                      -036   109
c              reheat coil cap                                                  -036   110
        IF((IRHFLAG .ne. 0) .AND. (ISZCZ .eq. 0)) THEN                          -043a   74
          IF(.NOT. ((ICODE.eq.23).and.                                          -036   112
     $       ((<TERMINAL-TYPE>.eq.3).or.(<TERMINAL-TYPE>.eq.4))) ) THEN         -036   113
            <HEATCAPZ> = -CONS(1)*<CFMAXH>*<REHEAT-DELTA-TZ> / BPMULT           -036   114
            MXST=<MIN-SUPPLY-T>+<REHEAT-DELTA-TZ>                               -036   115
            <ERMIND> = CONS(1)*<CFMAXH>*(<DESIGN-HEAT-T>-MXST)/ BPMULT          -036   116
          ENDIF                                                                 -036   117
          <ERMAXD> = CONS(1)*<CFMAX>                                            -036   118
     $                      *(<DESIGN-COOL-T>-<MIN-SUPPLY-T>)/BPMULT            -036   119
        ELSE                                                                    -036   120
          IF(ICODE.eq.6 .OR. ICODE.eq.7 .OR. ICODE.eq.16) THEN                  -036   121
            IF(ICODE .eq. 16)                                                   -036   122
     $        <HEATCAPZ> = -CONS(1)*<CFMAXH>*<REHEAT-DELTA-TZ>/BPMULT           -036   123
            <ERMIND> = CONS(1)*<CFMAXH>                                         -036   124
     $                      *(<DESIGN-HEAT-T>-<MAX-SUPPLY-T>)/ BPMULT           -036   125
            <ERMAXD> = 0.0                                                      -036   126
          ELSE IF(ICODE .eq. 8) THEN                                            -036   127
            <ERMAXD> = 0.                                                       -036   128
          ELSE                                                                  -036   129
            <ERMIND> = CONS(1)*<CFMAXH>                                         -036   130
     $                      *(<DESIGN-HEAT-T>-<MAX-SUPPLY-T>)/ BPMULT           -036   131
            <ERMAXD> = CONS(1)*<CFMAX>                                          -036   132
     $                      *(<DESIGN-COOL-T>-<MIN-SUPPLY-T>)/BPMULT            -036   133
          ENDIF                                                                 -036   134
        ENDIF                                                                   -036   135
        IF ((<MINCFMR> .LE. 0.0) .AND. (<CFMAXH> .LE. 0.0))                     DESIGN2041
     1    <CFMAXH> = <CFMAX>*0.001                                              DESIGN2042
        IF(<MINCFMR>.LE.0.0)  <MINCFMR> = 0.001                                 DESIGN2043
c              redo the induction unit sizing                                   DESIGN2044
   57   IF(IUNIT .EQ. 3)  CALL DESIND                                           DESIGN2045
        IF (IUNIT .EQ. 3)  GO TO 53                                             DESIGN2046
        <ERMIND> = <ERMIND> + <BASEBOARD-RATING>                                DESIGN2047
      ELSEIF ((DDSTYPE .EQ. 1) .AND. (IDISTcz .EQ. 1))  THEN                    DESIGN2048
c              single-fan dual-duct systems                                     DESIGN2049
        IF (SZCFMR .GT. 1.0)  THEN                                              DESIGN2050
          <CFMAXH> = <CFMAXH> * SZCFMR                                          DESIGN2051
        ELSE                                                                    DESIGN2052
          <CFMAXH> = AMIN1(<CFMAXH>, <CFMAX>)                                   DESIGN2053
        ENDIF                                                                   DESIGN2054
      ELSEIF (IDISThz .EQ. 1)  THEN                                             DESIGN2055
c              dual-fan dual-duct system                                        DESIGN2056
c              if HSUPPLY-CFM was specified then distribute it                  -030    16
        IF(IDISTh .eq. 1)  THEN                                                 -030    17
          <CFMAXH> = <CFMAXH> * SZCFMRh                                         -030    18
c               reset hot deck flow so it is recalc'd                           -030    19
        ELSE                                                                    -030    20
          <CFMAXH> = 0.                                                         -030    21
        ENDIF                                                                   -030    22
      ENDIF                                                                     DESIGN2058
c              reverse-acting thermostat gives same flow heating vs. cooling    DESIGN2059
      IF (<THERMOSTAT-TYPE> .EQ. 3)  <CFMAXH> = <CFMAX>                         DESIGN2060
c              user-specified min-cfm/sqft for heating                          DESIGN2061
      CFMINh = <HMIN-CFM/SQFTZ> * <AREA>                                        DESIGN2062
c              get from the system level if not specified for zone              DESIGN2063
      IF (CFMINh .EQ. 0.)  CFMINh = <HMIN-CFM/SQFT> * <AREA>                    DESIGN2064
c              repeat for cooling                                               DESIGN2065
      IF (DDSTYPE .EQ. 0)  THEN                                                 DESIGN2066
c              single-duct systems                                              DESIGN2067
        CFMINc = <MIN-CFM/SQFTZ>  * <AREA>                                      DESIGN2068
        IF (CFMINc .EQ. 0.)  CFMINc = <MIN-CFM/SQFT> * <AREA>                   DESIGN2069
c              max heating cfm must be at least min cfm/sqft                    HVAC17  22
        <CFMAXH> = AMIN1(<CFMAX>,                                               HVAC17  23
     &                   AMAX1(<CFMAXH>,CFMINh,CFMINc))                         HVAC17  24
      ELSE                                                                      DESIGN2070
c              dual-duct                                                        DESIGN2071
        CFMINc = <CMIN-CFM/SQFTZ>  * <AREA>                                     DESIGN2072
        IF (CFMINc .EQ. 0.)  CFMINc = <CMIN-CFM/SQFT> * <AREA>                  DESIGN2073
c              user-specified min-cfm/sqft for dual-duct box outlet             DESIGN2074
        CFMINt = <MIN-CFM/SQFTZ> * <AREA>                                       DESIGN2075
        IF (CFMINt .EQ. 0.)  CFMINt = <MIN-CFM/SQFT> * <AREA>                   DESIGN2076
c              check if min-cfm-source spec'd at zone level for DDS             DESIGN2077
        IF (<MIN-CFM-SOURCEZ> .EQ. -1)                                          DESIGN2078
     1    <MIN-CFM-SOURCEZ> = <MIN-CFM-SOURCE>                                  DESIGN2079
      ENDIF                                                                     DESIGN2080
c              min cfm ratio must be at least the minimum/sqft specified        DESIGN2081
      <MINCFMR>  = AMIN1(1.0, AMAX1(<MINCFMR>,                                  DESIGN2082
     1                              CFMINc*BPMULT/(<CFMAX> +1.E-6)) )           DESIGN2083
      <MINCFMRH> = AMIN1(1.0, AMAX1(<MINCFMRH>,                                 DESIGN2084
     1                              CFMINh*BPMULT/(<CFMAXH>+1.E-6)) )           DESIGN2085
c              for dual-duct, adjust box outlet quantities                      DESIGN2086
      IF (DDSTYPE .GT. 0)  THEN                                                 DESIGN2087
c              save cold duct min-cfm-ratio                                     DESIGN2088
        IF (<CMIN-CFM-RATIOZ> .GT. 0.)  THEN                                    Bug40    3
          <MINCFMRC> = <CMIN-CFM-RATIOZ>                                        Bug40    4
        ELSE                                                                    Bug40    5
          <MINCFMRC> = <MINCFMR>                                                Bug40    6
        ENDIF                                                                   Bug40    7
c              minimum cfm measured at the box outlet                           DESIGN2090
        <MINCFMR> = <MIN-CFM-RATIOZ>                                            DESIGN2091
c              get it from the system level if not specified at the             DESIGN2092
c              zone level                                                       DESIGN2093
        IF (<MINCFMR> .EQ. 0.)  <MINCFMR> = <MIN-CFM-RATIO>                     DESIGN2094
c              constant-volume box gives same flow heating vs. cooling          DESIGN2095
        IF (<MINCFMR> .GT. 0.99)  THEN                                          DESIGN2096
          IF(DDSTYPE .EQ. 1)  <CFMAXH> = <CFMAX>                                -030    23
          <MINCFMRH> = AMIN1(1.0, AMAX1(<MINCFMRH>,                             DESIGN2098
     1                                  CFMINh*BPMULT/(<CFMAXH>+1.E-6)))        DESIGN2099
        ENDIF                                                                   DESIGN2100
c              maximum box flow measured at the outlet                          DESIGN2101
        <CFMAXT> = AMAX1(<CFMAX>  +  <CFMAXH>*<MINCFMRH>,                       DESIGN2102
     1                   <CFMAXH> +  <CFMAX> *<MINCFMRC>  )                     DESIGN2103
c              min outlet ratio must be at least the minimum cfm/sqft           DESIGN2104
        <MINCFMR> = AMIN1(1.0, AMAX1(<MINCFMR>,                                 DESIGN2105
     1                               CFMINt*BPMULT/(<CFMAXT>+1.E-6)) )          DESIGN2106
c              for single-fan dual-duct, outlet min must be at least            DESIGN2107
c              the ventilation requirement                                      DESIGN2108
        IF (DDSTYPE .EQ. 1) THEN                                                -044e   78
          IF (<AIRFLOW-TRACKING> .ne. 0) THEN                                   -047k   25
            <MINCFMR> = Min(1.,                                                 -044e   80
     &                      Max(<MINCFMR>, <VENTMIN>/(<CFMAXT>+1.E-6)))         -044e   81
          ELSE                                                                  -044e   82
            <MINCFMR> = Min(1., Max(<MINCFMR>,                                  -044e   83
     &                  Max(<VENTMIN>, <EXHAUST-CFM>)/(<CFMAXT>+1.E-6)))        -044e   84
          ENDIF                                                                 -044e   85
        ENDIF                                                                   -044e   86
c              outlet min-cfm must be at least the minimum from                 DESIGN2112
c              both decks.                                                      DESIGN2113
        RMINCFMT = (<CFMAX>*<MINCFMRC> + <CFMAXH>*<MINCFMRH>)                   DESIGN2114
     1                                               / (<CFMAXT>+1.E-6)         DESIGN2115
        <MINCFMR> = AMAX1(<MINCFMR>, RMINCFMT)                                  DESIGN2116
c              for dual-fan, make sure min allows vent reqts                    DESIGN2117
c              when MIN-CFM-RATIO was not specified                             DESIGN2118
        IF (DDSTYPE .EQ. 2) THEN                                                -044e   87
          IF (<MINCFMRC> .EQ. 0.0) THEN                                         -044e   88
            IF (<AIRFLOW-TRACKING> .ne. 0) THEN                                 -047k   26
              <MINCFMRC> = <VENTMIN> / (<CFMAX>+1.E-6)                          -044e   90
            ELSE                                                                -044e   91
              <MINCFMRC> = Max(<VENTMIN>,<EXHAUST-CFM>)/(<CFMAX>+1.E-6)         -044e   92
            ENDIF                                                               -044e   93
          ELSEIF (<EXHAUST-CFM> .GT. 0.  .AND.                                  -044e   94
     &                                   <AIRFLOW-TRACKING> .EQ. 0) THEN        -044e   95
            <MINCFMRC> = Max(<MINCFMRC>, <EXHAUST-CFM>/(<CFMAX>+1.E-6))         -044e   96
          ENDIF                                                                 -044e   97
        ENDIF                                                                   -044e   98
c              hot deck flow must be at least the box minimum                   DESIGN2121
        <CFMAXH> = AMAX1(<CFMAXH>,                                              DESIGN2122
     1                   <CFMAXT>*<MINCFMR>-<CFMAX>*<MINCFMRC>)                 DESIGN2123
c              recalculate the design extraction rates                          DESIGN2124
        <ERMIND> = CONS(1) * (<CFMAXH>*(<DESIGN-HEAT-T>-<MAX-SUPPLY-T>)         DESIGN2125
     1             + AMAX1(0.,<CFMAX>*<MINCFMRC>*(<DESIGN-HEAT-T>-TCr)))        DESIGN2126
     2                                                          / BPMULT        DESIGN2127
        <ERMAXD> = CONS(1) * (<CFMAX> *(<DESIGN-COOL-T>-<MIN-SUPPLY-T>)         DESIGN2128
     1            + AMIN1(0.,<CFMAXH>*<MINCFMRH>*(<DESIGN-COOL-T>-THr)))        DESIGN2129
     2                                                          / BPMULT        DESIGN2130
c              end of dual-duct calcs                                           DESIGN2131
      ENDIF                                                                     DESIGN2132
c              increase exhaust as needed                                       -046   147
      SELECT CASE (<AIRFLOW-TRACKING>)                                          -046   148
      CASE (2,3)  ! track supply, track both supply & exh                       -046   149
        SELECT CASE (ICODE)                                                     -046   150
        CASE (3,4,20)                                                           -046   151
          <EXHAUST-CFM> = <CFMAXT>                                              -046   152
        CASE DEFAULT                                                            -046   153
          <EXHAUST-CFM> = <CFMAX>                                               -046   154
        END SELECT                                                              -046   155
      END SELECT                                                                -046   156
C              SAVE THE TOTAL HEATING CFM AND THE NEW MIN CFM                   DESIGN2133
   53 CFMH   = CFMH + <CFMAXH>*ZMULT                                            DESIGN2134
      CFMC   = CFMC + <CFMAX> *ZMULT                                            DESIGN2135
      OUTA   = OUTA + Max(<VENTMIN>, <EXHAUST-CFM>)*ZMULT                       -047d    1
      IF (DDSTYPE .EQ. 0)  THEN                                                 DESIGN2136
        CFMRM  = CFMRM  + <CFMAX>*<MINCFMR> * ZMULT                             DESIGN2137
        CFMRMh = CFMRMh + <CFMAX>*<MINCFMRH>*ZMULT                              -44c3a  20
      ELSE                                                                      DESIGN2138
        CFMRM  = CFMRM  + <CFMAX>*<MINCFMRC> * ZMULT                            DESIGN2139
        CFMRMh = CFMRMh + <CFMAXH>*<MINCFMRH>*ZMULT                             -44c3a  21
      ENDIF                                                                     DESIGN2140
      IF(<ZONE-TYPE> .NE. 3)  GOTO 56                                           DESIGN2143
C              ADD PLENUM HEAT TO THE RETURN AIR TEMP                           DESIGN2144
      TRMIN  = TRMIN + <QMIN>*ZMULT/CONS(1)                                     DESIGN2145
      TRMAX  = TRMAX + <QMAX>*ZMULT/CONS(1)                                     DESIGN2146
      GOTO 51                                                                   DESIGN2147
   56 IF(IREPRT(2,34) .EQ. 0)  GOTO 58                                          IREPRT  26
      WRITE(IOUTPT,9058) (<ZONE-NAME>,II=1,8),C1,C2,C3,C4,                      -44c5   16
     $                   <CFMAX>,<CFMAXH>,<MINCFMR>,<MINCFMRH>,                 -44c5   17
     $                   <ERMIND>,<HEATCAPZ>,<ERMAXD>,                          -44c5   18
     $                   <DCVOAcfmZD>,<DCVOAcfmFracD>,OUTA                      -44c5   19
 9058 FORMAT(4X,19HBALANCING FOR ZONE ,8A4 /                                    -44c5   20
     15X,11H OLD CFM = ,F11.0,11H OLD CFMH= ,F11.0,11H OLD MCR = ,              -44c5   21
     2  F6.4,11H OLD MCR = ,F6.4 /                                              -44c5   22
     35X,11H NEW CFM = ,F11.0,11H NEW CFMH= ,F11.0,11H NEW MCR = ,              -44c5   23
     4  F6.4,11H NEW MCR = ,F6.4 /                                              -44c5   24
     55X,11H ERMIND  = ,F11.0,11H HEATCAPZ= ,F11.0,11H ERMAXD  = ,              -44c5   25
     6  F11.0/                                                                  -44c5   26
     55X,13H DCVOAcfmZD= ,F9.0,16H DCVOAcfmFracD= ,F6.3,                        -44c5   27
     6  11H OUTA    = ,F11.0)                                                   -44c5   28
c              total supply airflows at heat/cool peaks                         DESIGN2158
   58 IF(ICODE .EQ. 23) GO TO 51                                                -036   136
      ZCFMht = <CFMAXH>                                                         -036   137
      ZCFMct = <CFMAX>                                                          DESIGN2160
      IF (DDSTYPE .GT. 0)  THEN                                                 DESIGN2161
c              for dual-duct, total flow at peak includes minimum               DESIGN2162
c              flow from opposite deck                                          DESIGN2163
        ZCFMht = ZCFMht + <CFMAX> *<MINCFMRC>                                   DESIGN2164
        ZCFMct = ZCFMct + <CFMAXH>*<MINCFMRH>                                   DESIGN2165
      ENDIF                                                                     DESIGN2166
c              return cfms at peak cooling and heating                          DESIGN2167
      MAX5  = AMAX1(0.0, ZCFMct - <EXHAUST-CFM>)                                DESIGN2168
      MAX2  = AMAX1(0.0, ZCFMht - <EXHAUST-CFM>)                                DESIGN2169
c              return ratios                                                    DESIGN2170
      RETR  = MAX5 / AMAX1(1., ZCFMct)                                          DESIGN2171
      RETRh = MAX2 / AMAX1(1., ZCFMht)                                          DESIGN2172
c              increment the summed quantities for design load calcs            DESIGN2173
      TRMAX  = TRMAX + (<DESIGN-COOL-T>*MAX5+<QPPEAKC>/CONS(1))*ZMULT           -043a   75
        RCFMmax = RCFMmax + MAX5*ZMULT                                          HVAC25  16
      TRMIN  = TRMIN + (<DESIGN-HEAT-T>*MAX2+<QPPEAKH>/CONS(1))*ZMULT           -043a   76
        RCFMmin = RCFMmin + MAX2*ZMULT                                          HVAC25  17
      QLMAX  = QLMAX + <QLPEAKC>*RETR *ZMULT                                    DESIGN2178
      QLMIN  = QLMIN + <QLPEAKH>*RETRh*ZMULT                                    DESIGN2179
      CINFMX = CINFMX + <CFMIPEAKC>*RETR *ZMULT                                 DESIGN2180
      CINFMN = CINFMN + <CFMIPEAKH>*RETRh*ZMULT                                 DESIGN2181
   51 ZP1    = ZP1 + NZD                                                        DESIGN2182
      CFMS   = <SUPPLY-CFM>                                                     DESIGN2183
c              adjust heating CFM for induction ratio                           DESIGN2184
      CFMH = CFMH / (1.0+<INDUCTION-RATIO>)                                     DESIGN2185
      CFMC = CFMC / (1.0+<INDUCTION-RATIO>)                                     -130    63
c              include duct air losses in coil flows,                           DESIGN2186
c              as well as minimum heating and cooling flows                     DESIGN2187
c              increase coil flows by the duct losses                           DESIGN2188
      IF (DDSTYPE .EQ. 0)  THEN                                                 DESIGN2189
        CFMH   = CFMH   + <DUCTCFMLOSS>                                         DESIGN2190
        CFMC   = CFMC   + <DUCTCFMLOSS>                                         DESIGN2191
        CFMRM  = CFMRM  + <DUCTCFMLOSS>                                         DESIGN2192
      ELSE                                                                      DESIGN2193
        IF(IDISTh .eq. 2)  THEN                                                 -030    24
c              if redistributing calc'd SUPPLY-CFM to hot side                  -030    25
c              then hot losses need to be recalc'd and the                      -030    26
c              HSUPPLY-CFM set to new calc'd value                              -030    27
          <HOTDUCTCFMLOSS> = CFMH*<DUCT-AIR-LOSS>/(1.0-<DUCT-AIR-LOSS>)         -030    28
          <HSUPPLY-CFM>    = CFMH  + <HOTDUCTCFMLOSS>                           -030    29
        ENDIF                                                                   -030    30
        CFMH   = CFMH   + <HOTDUCTCFMLOSS>                                      DESIGN2194
        CFMRMh = CFMRMh + <HOTDUCTCFMLOSS>                                      DESIGN2195
        CFMC   = CFMC   + <DUCTCFMLOSS>                                         DESIGN2196
        CFMRM  = CFMRM  + <DUCTCFMLOSS>                                         DESIGN2197
      ENDIF                                                                     DESIGN2198
      OUTA = AMIN1(1.0, AMAX1(OUTA,ECFM,<ExfilCFM>)/<SUPPLY-CFM>)               -034   106
      IF((<OA-SIZING-METHOD> .GT. 0) .AND. (OUTA .GT. 0.))                      -044c  194
     $  OUTA=OUTA/(1.0+OUTA-<DCVOAcfmFracCriD>)                                 -044c  195
   52 CONTINUE                                                                  DESIGN2200
      <MIN-OUTSIDE-AIR> = OUTA                                                  DESIGN2201
      PO = AMAX1(<MIN-OUTSIDE-AIR>,AMAX1(ECFM,<ExfilCFM>)/<SUPPLY-CFM>)         DESIGN2202
C              FOR PIUS, CALCULATE THE RETURN VARIABLES                         DESIGN2203
      IF (ICODE .NE. 23)  GO TO 5210                                            DESIGN2204
C              LOOP OVER THE ZONES TO GET THE RETURN CFM AT HEAT                DESIGN2205
C              AND COOL PEAKS                                                   DESIGN2206
      TRMAX = 0.                                                                -036   138
      TRMIN = 0.                                                                -036   139
      QLMAX = 0.                                                                -036   140
      QLMIN = 0.                                                                -036   141
      CINFMX= 0.                                                                -036   142
      CINFMN= 0.                                                                -036   143
      RCFMmax = 0.                                                              -036   144
      RCFMmin = 0.                                                              -036   145
      RCFMHX = 0.                                                               DESIGN2207
      RCFMCX = 0.                                                               DESIGN2208
      RCFMHI = 0.                                                               DESIGN2209
      RCFMCI = 0.                                                               DESIGN2210
      AIRINC = 0.                                                               DESIGN2211
      AIRINH = 0.                                                               DESIGN2212
      ZP1 = ISZ                                                                 DESIGN2213
      DO 5150 NZ=1,NSZ                                                          DESIGN2214
      ZP2 = <ZP2>                                                               DESIGN2215
      ZMULT = <MULTIPLIER>                                                      DESIGN2216
      IF (<ZONE-TYPE> .NE. 1)  GO TO 5145                                       DESIGN2217
C              SIZE ZONE FANS (PIU)                                             DESIGN2218
      IF ((<TERMINAL-TYPE> .EQ. 3) .OR. (<TERMINAL-TYPE> .EQ. 4))               DESIGN2219
     1  CALL DESPIU                                                             DESIGN2220
      IF (<TERMINAL-TYPE> .NE. 3)  GO TO 5110                                   DESIGN2222
C              SERIES PIU                                                       DESIGN2223
      <RCFMH> = AMAX1(0.,<ZFCFMD>-<EXHAUST-CFM>)                                DESIGN2224
      <RCFMC> = <RCFMH>                                                         DESIGN2225
C              INDUCED AIR FROM CENTRAL ZONE                                    DESIGN2226
      AIRINH = <ZFCFMD>-<MINCFMR>*<CFMAX>                                       DESIGN2227
      AIRINC = AMAX1(0.,<ZFCFMD>-<CFMAX>)                                       DESIGN2228
c              store maximum PIU heat cfm for coil calcs                        HVAC17  25
      <zn;HW_DES_CFM> = <ZFCFMD>                                                HVAC17  26
      GO TO 5130                                                                DESIGN2229
 5110 IF (<TERMINAL-TYPE> .NE. 4)  GO TO 5120                                   DESIGN2230
C              PARALLEL PIU                                                     DESIGN2231
      <RCFMH> = AMAX1(0.,<ZFCFMD>+<MINCFMR>*<CFMAX>-<EXHAUST-CFM>)              DESIGN2232
      <RCFMC> = AMAX1(0.,<CFMAX>-<EXHAUST-CFM>)                                 DESIGN2233
      AIRINH = <ZFCFMD>                                                         DESIGN2234
      AIRINC = 0.                                                               DESIGN2235
c              store maximum PIU heat cfm for coil calcs                        HVAC17  27
      <zn;HW_DES_CFM> = <ZFCFMD>                                                -036   146
      GO TO 5130                                                                DESIGN2236
C              REGULAR (NON-PIU) ZONES                                          DESIGN2237
 5120 <RCFMC> = AMAX1(0.,<CFMAX>-<EXHAUST-CFM>)                                 DESIGN2238
      <RCFMH> = AMAX1(0.,<CFMAXH>-<EXHAUST-CFM>)                                DESIGN2239
      AIRINC = 0.                                                               DESIGN2240
      AIRINH = 0.                                                               DESIGN2241
c              store maximum PIU heat cfm for coil calcs                        HVAC17  29
      <zn;HW_DES_CFM> = <CFMAXH>                                                HVAC17  30
C              SUM RETURN AIR FOR EXTERIOR AND INTERIOR ZONES                   DESIGN2242
C             Calculation return flows- hot/cold, induced/non-induced           -036   147
 5130 IF(<IND-AIRZ-ZD> .EQ. -100)  THEN                                         -036   148
        RCFMHI = RCFMHI + <RCFMH>*ZMULT                                         -036   149
        RCFMCI = RCFMCI + <RCFMC>*ZMULT                                         -036   150
        <CFMIDT> = 0.                                                           -036   151
      ELSE                                                                      -036   152
        RCFMHX = RCFMHX + <RCFMH>*ZMULT                                         -036   153
        RCFMCX = RCFMCX + <RCFMC>*ZMULT                                         -036   154
        IF(<IND-AIRZ-ZD> .GT. 0) THEN                                           -036   155
          ZP1S = ZP1                                                            -036   156
          ZP1 = <IND-AIRZ-ZD>                                                   -036   157
          ZP2 = <ZP2>                                                           -036   158
C              Reduce the IND/non-IND return air totals by this ZONE's          -036   159
C              IND flow                                                         -036   160
          IF(ZP1 .ne. ZP1S) THEN                                                -036   161
            IF((<RCFMC>.GE.AIRINC*ZMULT) .and.                                  -036   162
     $         (<RCFMH>.GE.AIRINH*ZMULT)) THEN                                  -036   163
              RCFMHI = AMAX1(0.,RCFMHI-AIRINH*ZMULT)                            -036   164
              RCFMCI = AMAX1(0.,RCFMCI-AIRINC*ZMULT)                            -036   165
              <RCFMC> = AMAX1(0.,<RCFMC>-AIRINC*ZMULT)                          -036   166
              <RCFMH> = AMAX1(0.,<RCFMH>-AIRINH*ZMULT)                          -036   167
              <CFMIDT> = <CFMIDT> + AIRINH*ZMULT                                -036   168
            ELSE                                                                -036   169
C              If induced air exceeds IAZ VAV box flow then change PIU box to   -036   170
C              induce air from local ZONE and issue a warning                   -036   171
              II = 1                                                            -036   172
              CALL MOVEN(<ZONE-NAME>,FCHPS,8)                                   -036   173
              FCHPS(9) = <RCFMC>                                                -036   174
              FCHPS(10) = <RCFMH>                                               -036   175
              IF(<CFMIDT> .EQ. 0.)  THEN                                        -036   176
                <IND-AIRZ-ZD> = 0                                               -036   177
              ENDIF                                                             -036   178
              ZP1 = ZP1S                                                        -036   179
              ZP2 = <ZP2>                                                       -036   180
              <IND-AIRZ-ZD> = ZP1                                               -036   181
              <INDUCED-AIR-ZONE> = ZP2                                          -036   182
              <RCFMC> = AMAX1(0.,<RCFMC>-AIRINC)                                -036   183
              <RCFMH> = AMAX1(0.,<RCFMH>-AIRINH)                                -036   184
              CALL MSGSIM(-2,II,II,II,II)                                       -036   185
              WRITE(IOUTPT,5142) (<ZONE-NAME>,II=1,8),ZMULT,AIRINC,             -036   186
     $                  AIRINH,(FCHPS(II),II=1,8),FCHPS(9),FCHPS(10)            -036   187
 5142 FORMAT(                                                                   -036   188
     $14X,'The PIU fan powered box in ZONE ',8A4/                               -036   189
     $14X,'(which has a MULTIPLIER of ',F6.1,')'/                               -036   190
     $14X,'has a cooling mode induced air flow of ',F7.1/                       -036   191
     $14X,'and a heating mode induced air flow of ',F7.1/                       -036   192
     $14X,'One or both of these exceed the allowed flow from'/                  -036   193
     $14X,'its INDUCED-AIR-ZONE ',8A4/                                          -036   194
     $14X,'which has a cooling mode return air flow of ',F7.1/                  -036   195
     $14X,'and a heating mode return air flow of ',F7.1/                        -036   196
     $14X,'For this reason this PIU box is being changed to induce'/            -036   197
     $14X,'air from its own ZONE rather than the one specified.')               -036   198
            ENDIF                                                               -036   199
          ELSE                                                                  -036   200
            RCFMHX = AMAX1(0.,RCFMHX-AIRINH*ZMULT)                              -036   201
            RCFMCX = AMAX1(0.,RCFMCX-AIRINC*ZMULT)                              -036   202
            <RCFMC> = AMAX1(0.,<RCFMC>-AIRINC)                                  -036   203
            <RCFMH> = AMAX1(0.,<RCFMH>-AIRINH)                                  -036   204
          ENDIF                                                                 -036   205
          ZP1 = ZP1S                                                            -036   206
          ZP2 = <ZP2>                                                           -036   207
        ENDIF                                                                   -036   208
      ENDIF                                                                     -036   209
 5145 ZP1 = ZP1 + NZD                                                           DESIGN2257
 5150 CONTINUE                                                                  DESIGN2258
C              TOTAL RETURN CFM                                                 DESIGN2259
      RCFM  = AMAX1(0.,CFMS-(ECFM-ECFMP))                                       -036   210
      RCFMH = AMAX1(0.,CFMH-(ECFM-ECFMP))                                       -036   211
      IF (RCFMH .LE. 0.) RCFMH = AMAX1(CFMH,1.0)                                DESIGN2263
C              RETURN CFM MINUS RETURN FROM INDUCED AIR ZONE(S)                 DESIGN2264
      RCFMHI = AMAX1(0.,RCFMH-RCFMHI)                                           DESIGN2265
      RCFMCI = AMAX1(0.,RCFM-RCFMCI)                                            DESIGN2266
      IF(IREPRT(2,34) .GT. 0) WRITE(IOUTPT,9057) (<SYSTEM-NAME>,II=1,8),        -42c    74
     $ RCFM,RCFMH,RCFMHX,RCFMCX,RCFMHI,RCFMCI                                   -42c    75
 9057 FORMAT(/' PIU system level return air calcs for SYSTEM ',8A4/             -044b    3
     111H RCFM    = ,F11.0,12H  RCFMH   = ,F11.0,12H  RCFMHX  = ,F11.0/         DESIGN2270
     211H RCFMCX  = ,F11.0,12H  RCFMHI  = ,F11.0,12H  RCFMCI  = ,F11.0)         DESIGN2271
C              LOOP OVER ZONES TO GET RETURN AIR TEMP. AND OTHER                DESIGN2272
C              RETURN QUANTITIES                                                DESIGN2273
      ZP1 = ISZ                                                                 DESIGN2274
      DO 5190 NZ=1,NSZ                                                          DESIGN2275
      ZP2 = <ZP2>                                                               DESIGN2276
      ZMULT = <MULTIPLIER>                                                      DESIGN2277
      IF (<ZONE-TYPE> .EQ. 2)  GO TO 5185                                       DESIGN2278
      IF (<ZONE-TYPE> .EQ. 3)  THEN                                             -036   212
C             For PLENUM ZONEs, add design load                                 -036   213
        TRMIN = TRMIN + <QMIN>*ZMULT/CONS(1)                                    -036   214
        TRMAX = TRMAX + <QMAX>*ZMULT/CONS(1)                                    -036   215
        GO TO 5185                                                              -036   216
      ENDIF                                                                     -036   217
      TRMAX = TRMAX + (<RCFMC>*<DESIGN-COOL-T> +                                DESIGN2285
     1                 <QPPEAKC>/CONS(1))*ZMULT                                 DESIGN2286
      RCFMmax = RCFMmax + <RCFMC>*ZMULT                                         HVAC25  18
      TRMIN = TRMIN + (<RCFMH>*<DESIGN-HEAT-T> +                                DESIGN2287
     1                 <QPPEAKH>/CONS(1))*ZMULT                                 DESIGN2288
      RCFMmin = RCFMmin + <RCFMH>*ZMULT                                         HVAC25  19
      IF ((<RCFMC>+<EXHAUST-CFM>).gt.0.) THEN                                   -037     1
        RETR   = 1.0-(<EXHAUST-CFM>/(<RCFMC>+<EXHAUST-CFM>))                    -037     2
      ELSE                                                                      -037     3
        RETR   = 1.0                                                            -037     4
      ENDIF                                                                     -037     5
      IF ((<RCFMH>+<EXHAUST-CFM>).gt.0.) THEN                                   -037     6
        RETRh  = 1.0-(<EXHAUST-CFM>/(<RCFMH>+<EXHAUST-CFM>))                    -037     7
      ELSE                                                                      -037     8
        RETRh  = 1.0                                                            -037     9
      ENDIF                                                                     -037    10
      QLMAX  = QLMAX  + RETR*<QLPEAKC>*ZMULT                                    -036   220
      QLMIN  = QLMIN  + RETRh*<QLPEAKH>*ZMULT                                   -036   221
      CINFMX = CINFMX + RETR*<CFMIPEAKC>*ZMULT                                  -036   222
      CINFMN = CINFMN + RETRh*<CFMIPEAKH>*ZMULT                                 -036   223
 5185 IF(IREPRT(2,34) .GT. 0)  WRITE (IOUTPT,9059) (<ZONE-NAME>,II=1,8),        -42c    77
     $ <CFMAX>,<CFMAXH>,<ZFCFMD>,<EXHAUST-CFM>,<RCFMH>,                         -42c    78
     $ <RCFMC>,<QPPEAKH>,<QPPEAKC>                                              -42c    79
 9059 FORMAT(/' PIU return CFM calc for ZONE ',8A4/                             -044b    4
     111H CFMAX   = ,F11.0,12H  CFMAXH  = ,F11.0,12H  ZFCFMD  = ,F11.0/         DESIGN2297
     211H EXCFM   = ,F11.0,12H  RCFMH   = ,F11.0,12H  RCFMC   = ,F11.0/         DESIGN2298
     311H QPPEAKH = ,F11.0,12H  QPPEAKC = ,F11.0)                               DESIGN2299
 5190 ZP1 = ZP1 + NZD                                                           DESIGN2300
 5210 CONTINUE                                                                  DESIGN2306
c                                                                               RetLoss 40
c              Adjust return air summed values for return duct                  RetLoss 41
c              infiltration from an unconditioned space.  Note that             RetLoss 42
c              return cfm already includes duct infiltration.                   RetLoss 43
      IF (DuctInfil .GT. 0.)  THEN                                              RetLoss 44
        ZP1     = <DUCT-LOSS-ZONE>                                              RetLoss 45
        ZP2     = <ZP2>                                                         RetLoss 46
        Zmult   = <MULTIPLIER>                                                  RetLoss 47
        TRMAX   = TRMAX + <DESIGN-COOL-T> * DuctInfil*DALINR                    -043a   77
        TRMIN   = TRMIN + <DESIGN-HEAT-T> * DuctInfil*DALINR                    -043a   78
        RCFMmax = RCFMmax + DuctInfil                                           -043a   79
        RCFMmin = RCFMmin + DuctInfil                                           -043a   80
        RETR    = DuctInfil / (<CFMIPEAKC>*Zmult + DuctExfil)                   RetLoss 52
        RETRh   = DuctInfil / (<CFMIPEAKH>*Zmult + DuctExfil)                   RetLoss 53
        QLMAX   = QLMAX  + <QLPEAKC>   * RETR  * Zmult                          RetLoss 54
        QLMIN   = QLMIN  + <QLPEAKH>   * RETRh * Zmult                          RetLoss 55
        CINFMX  = CINFMX + <CFMIPEAKC> * RETR  * Zmult                          RetLoss 56
        CINFMN  = CINFMN + <CFMIPEAKH> * RETRh * Zmult                          RetLoss 57
      ENDIF                                                                     RetLoss 58
c                                                                               RetLoss 59
C              CALC RETURN AIR TEMPS                                            DESIGN2321
      RCFM = AMAX1(0.0,CFMS-(ECFM-ECFMP))                                       DESIGN2322
      IF(RCFM .LE. 0.0)  RCFM = CFMS                                            DESIGN2323
C              FOR CBVAV MAIN FAN HAS CONSTANT FOR                              DESIGN2324
      IF(ICODE .EQ. 18)  CFMH = CFMS                                            DESIGN2325
      <CFMH> = CFMH                                                             DESIGN2326
c              min OA fraction during heating and heating                       DESIGN2327
c              return air                                                       DESIGN2328
      IF (DDSTYPE .EQ. 0)  THEN                                                 DESIGN2329
c              single-duct systems                                              DESIGN2330
        POH   = AMIN1(1.0,(<SUPPLY-CFM>/AMAX1(CFMH,1.0))*PO)                    DESIGN2331
        RCFMH = AMAX1(0.0,CFMH-(ECFM-ECFMP))                                    DESIGN2332
c              return flow during peak cooling                                  DESIGN2333
        RCFMC = RCFM                                                            DESIGN2334
      ELSEIF (DDSTYPE .EQ. 1)  THEN                                             DESIGN2335
c              single-fan dual-duct                                             DESIGN2336
        POH   = AMIN1(1.0,(<SUPPLY-CFM>/AMAX1(CFMH+CFMRM,1.0))*PO)              DESIGN2337
c              return during peak heating includes min cooling cfms             DESIGN2338
c              and cold duct air loss                                           HVAC25  20
        RCFMH = RCFMmin                                                         HVAC25  21
c              return flow during peak cooling                                  DESIGN2341
        RCFMC = RCFMmax                                                         HVAC25  22
      ELSE                                                                      DESIGN2343
c              Dual-fan dual-duct                                               DESIGN2344
c              hot deck fan draws directly from return; no effect               DESIGN2345
c              on mixed air fraction for cold deck                              DESIGN2346
        POH   = PO                                                              DESIGN2347
c              return during peak heating includes min cooling cfms             DESIGN2348
        RCFMH = RCFMmin                                                         HVAC25  23
c              return flow cold mixed air plenum during peak cooling            DESIGN2350
        RCFMC = RCFMmax                                                         HVAC25  24
      ENDIF                                                                     DESIGN2352
      IF (<DUCT-ZTYPE> .NE. 3) THEN                                             -034   107
        TRMAX = TRMAX/(RCFMC*DALINR)                                            -034   108
      ELSE                                                                      -034   109
        IF (DDSTYPE .EQ. 0) THEN                                                -034   110
          TRMAX = (TRMAX+<MIN-SUPPLY-T>*<DUCTCFMLOSS>*DALINR)                   RetLoss 60
     &                                                  / (RCFMC*DALINR)        RetLoss 61
        ELSE                                                                    -034   112
          TRMAX = (TRMAX+<MIN-SUPPLY-T>*<DUCTCFMLOSS>*DALINR                    RetLoss 62
     &                  +<MAX-SUPPLY-T>*<HOTDUCTCFMLOSS>*DALINR)                RetLoss 63
     &                                                  / (RCFMC*DALINR)        RetLoss 64
        ENDIF                                                                   -034   115
      ENDIF                                                                     -034   116
c              Include return duct conduction losses                            -044c4  12
      IF (<sy:RETURN-UA> .gt. 0)  THEN                                          -044c4  13
        ZP1 = <DUCT-LOSS-ZONE>     ! zone containing duct                       -044c4  14
        ZP2 = <ZP2>                                                             -044c4  15
        TDuctEnv = <DESIGN-COOL-T>                                              -044c4  16
        dTret    = DUCTDT(TRMAX,RCFMC*DALINR,3,1,0)                             -044c4  17
        TRMAX    = TRMAX + dTret                                                -044c4  18
      ENDIF                                                                     -044c4  19
c              include return fan heat unless relief fan                        DESIGN2354
      IF (<RETURN-FAN-LOC> .NE. 3)  TRMAX = TRMAX + DTR*CONS(3)                 DESIGN2355
      IF(RCFMH .LE. 0.0)  RCFMH = AMAX1(CFMH,1.0)                               DESIGN2356
      IF (<DUCT-ZTYPE> .NE. 3) THEN                                             -034   117
        TRMIN  = TRMIN/(RCFMH*DALINR)                                           -034   118
      ELSE                                                                      -034   119
        IF (DDSTYPE .EQ. 0) THEN                                                -034   120
          TRMIN = (TRMIN+<MAX-SUPPLY-T>*<DUCTCFMLOSS>*DALINR)                   RetLoss 65
     &                                                  / (RCFMH*DALINR)        RetLoss 66
        ELSE                                                                    -036   225
          TRMIN = (TRMIN+<MIN-SUPPLY-T>*<DUCTCFMLOSS>*DALINR                    RetLoss 67
     &                  +<MAX-SUPPLY-T>*<HOTDUCTCFMLOSS>*DALINR)                RetLoss 68
     &                                                  / (RCFMH*DALINR)        RetLoss 69
        ENDIF                                                                   -034   125
      ENDIF                                                                     -034   126
c              Include return duct conduction losses                            -044c4  20
      IF (<sy:RETURN-UA> .gt. 0)  THEN                                          -044c4  21
        ZP1 = <DUCT-LOSS-ZONE>     ! zone containing duct                       -044c4  22
        ZP2 = <ZP2>                                                             -044c4  23
        TDuctEnv = <DESIGN-HEAT-T>                                              -044c4  24
        dTret    = DUCTDT(TRMIN,RCFMH*DALINR,3,1,0)                             -044c4  25
        TRMIN    = TRMIN + dTret                                                -044c4  26
      ENDIF                                                                     -044c4  27
      TMIN   = POH*DBTMIN + (1.0-POH)*TRMIN                                     DESIGN2358
      TMAX   = PO*DBTMAX + (1.0-PO)*TRMAX                                       DESIGN2359
      IF(<FAN-PLACEMENT>.EQ.0)  TMAX = TMAX + <SUPPLY-DELTA-T>*CONS(3)          DESIGN2360
      PLRCFM = <SUPPLY-CFM>/<RATED-CFM>                                         DESIGN2361
c              CFMRATIO is the ratio of the supply cfm available                DESIGN2362
c              (excluding duct losses) to the sum of the zone demand.           DESIGN2363
      IF (ICODE .NE. 27)  THEN                                                  DESIGN2364
        <CFMRATIO> = (<SUPPLY-CFM>-<DUCTCFMLOSS>-<HOTDUCTCFMLOSS>)              DESIGN2365
     1              * AMAX1(1.0,<MAX-FAN-RATIO>)                                DESIGN2366
     2              / AMAX1(1., CFMS-<DUCTCFMLOSS>-<HOTDUCTCFMLOSS>)            DESIGN2367
      ELSE                                                                      DESIGN2368
        <CFMRATIO> = (<SUPPLY-CFM>-<DUCTCFMLOSS>)                               DESIGN2369
     1              * AMAX1(1.0,<MAX-FAN-RATIO>)                                DESIGN2370
     2              / AMAX1(1., CFMS-<DUCTCFMLOSS>)                             DESIGN2371
      ENDIF                                                                     DESIGN2372
      <CFMRATIO> = AMIN1(1.0,<CFMRATIO>)                                        DESIGN2373
      IF(<CFMRATIO> .LT. 0.90)  CALL MSGSIM(-2,II,II,II,II)                     DESIGN2374
      IF(<CFMRATIO> .LT. 0.90)WRITE(IOUTPT,9208) (<SYSTEM-NAME>,II=1,8),        -42c    81
     $                                     <CFMRATIO>                           -42c    82
 9208 FORMAT(14X,'The SUPPLY-CFM in SYSTEM ',8A4,' is only ',F4.2/              -42c    83
     $       14X,'times the sum of the ZONE CFMs')                              -42c    84
      CFMS   = <SUPPLY-CFM>                                                     DESIGN2379
      IF(<MAX-OA-FRACTION> .LT. PO)  THEN                                       DESIGN2380
        CALL MSGSIM(-2,ii,ii,ii,ii)                                             DESIGN2381
        WRITE(IOUTPT,9209)<MAX-OA-FRACTION>,PO,PO,(<SYSTEM-NAME>,II=1,8)        -42c    85
        <MAX-OA-FRACTION> = PO                                                  DESIGN2383
 9209   FORMAT(14X,'MAX-OA-FRACTION of ',f4.2,' is less than required ',        -42c    86
     $         'outside air fraction of ',F4.2/                                 -42c    87
     $     14x,'MAX-OA-FRACTION has been reset to ',F4.2,' in ',8A4)            -42c    88
      ENDIF                                                                     DESIGN2387
c                                                                               DESIGN2388
c              Calculate the duct UA product for single-duct systems,           XFC1    30
c              or the cold duct in a dual-duct system                           XFC1    31
      IF (<DUCT-UA> .GT. 0.  .OR.  <DUCT-DT> .GT. 0.)  THEN                     XFC1    32
c              temperature surrounding duct                                     XFC1    33
        ZP1 = <DUCT-LOSS-ZONE>                                                  XFC1    34
        ZP2 = <ZP2>                                                             XFC1    35
        TDuctEnv = <DESIGN-COOL-T>                                              XFC1    36
        IF (<DUCT-UA> .GT. 0.)  THEN                                            XFC1    37
c              user specified the duct UA.  calc the design duct dT             XFC1    38
          <DUCTUA>  = <DUCT-UA>                                                 XFC1    39
          <DUCT-DT> = DUCTDT(<MIN-SUPPLY-T>,<SUPPLY-CFM>,2,2,0)                 XFC1    40
        ELSEIF (<DUCT-DT> .GT. 0.)  THEN                                        XFC1    41
c              User specified the duct temperature rise.  Check to see          XFC1    42
c              if temperature differentials even remotely reasonable.           XFC1    43
          dTratio = <DUCT-DT> / (TDuctEnv-(<MIN-SUPPLY-T>-<DUCT-DT>))           XFC1    44
          IF (1.0/dTratio .LT. 0.5)  THEN                                       XFC1    45
            CALL MSGSIM(-1,II,II,II,II)                                         XFC1    46
            WRITE (IOUTPT,9428) (<SYSTEM-NAME>,II=1,8)                          XFC1    47
            IFLAG = 1                                                           XFC1    48
            GOTO 239                                                            XFC1    49
          ENDIF                                                                 XFC1    50
          <DUCTUA> = -CONS(1)*<SUPPLY-CFM> * ALOG(1.0-dTratio)                  XFC1    51
        ENDIF                                                                   XFC1    52
 9428   FORMAT(14X,'In System: ',8A4,'the duct thermal'                /        XFC1    53
     &         14X,'losses based on the DUCT-DT, MIN-SUPPLY-T, and'    /        XFC1    54
     &         14X,'zone DESIGN-COOL-T are either excessive or'        /        XFC1    55
     &         14X,'impossible.  Check these values for consistency.'  )        XFC1    56
      ENDIF                                                                     XFC1    57
c              If not user specified, set cooling coil setpoint                 DESIGN2428
c              to zone supply temp (at diffuser), corrected for                 DESIGN2429
c              duct temperature losses and throttling range.                    DESIGN2430
      IF (<COOL-SET-T> .EQ. 0.0)                                                CCIG7   33
     1  <COOL-SET-T> = <MIN-SUPPLY-T> - <DUCT-DT>                               DESIGN2432
     2                                - <COOL-CTRL-RANGE>*0.5                   DESIGN2433
c              adjust leaving coil temp for duct temp change                    DESIGN2434
      TC = TC - <DUCT-DT>                                                       DESIGN2435
      IF(IREPRT(2,34).NE.0)WRITE(IOUTPT,9076) POH,CFMH,RCFMH,PO,CFMS,           IREPRT  29
     $  RCFM,                                                                   IREPRT  30
     1                     TRMIN,TMIN,TRMAX,TMAX,<CFMRATIO>,<CFM/ACH>,          DESIGN2437
     2                     PLRCFM                                               DESIGN2438
 9076 FORMAT(34H0MAIN AIR-HANDLER SIZING VARIABLES  /                           DESIGN2439
     111H POH     = ,F11.3,12H  CFMH    = ,F11.0,12H  RCFMH   = ,F11.0 /        DESIGN2440
     211H PO      = ,F11.3,12H  CFMS    = ,F11.0,12H  RCFM    = ,F11.0 /        DESIGN2441
     311H TRMIN   = ,F11.3,12H  TMIN    = ,F11.3 /                              DESIGN2442
     411H TRMAX   = ,F11.3,12H  TMAX    = ,F11.3 /                              DESIGN2443
     511H CFMRAT  = ,F11.3,12H  CFM/ACH = ,F11.2,12H  PLRCFM  = ,F11.3 )        DESIGN2444
C                                                                               DESIGN2445
C              DESIGN HEAT LOAD CALC                                            DESIGN2446
C                                                                               DESIGN2447
c              set up hot-deck fan for dual-fan dual-duct                       DESIGN2448
      IF (DDSTYPE .EQ. 2)  THEN                                                 DESIGN2449
        IF (<HRATED-CFM>  .EQ. 0.)  <HRATED-CFM>  = <HSUPPLY-CFM>               DESIGN2450
c              calc the hot deck fan kW from specified kW/CFM                   DESIGN2451
        <HSUPPLY-KW> = <HSUPPLY-KW>*<HSUPPLY-CFM>/BPMULT                        DESIGN2452
c              if not specified this way calc other way                         DESIGN2453
        IF(<HSUPPLY-KW> .LE. 0.0)                                               DESIGN2454
     1    <HSUPPLY-KW> = <HSUPPLY-CFM>*DTSh/(8520.0*BPMULT)                     DESIGN2455
        IF (<HFAN-PLACEMENT> .EQ. 0)                                            DESIGN2456
     1    TMIN = TMIN + <HSUPPLY-DELTA-T>*CONS(3)                               DESIGN2457
        PLRCFMh = <HSUPPLY-CFM>/<HRATED-CFM>                                    DESIGN2458
c              HCFMRATIO is the ratio of the supply cfm available               DESIGN2459
c              (excluding duct losses) to the sum of the zone demand.           DESIGN2460
        <HCFMRATIO> = (<HSUPPLY-CFM>-<HOTDUCTCFMLOSS>)                          DESIGN2461
     1              * AMAX1(1.0,<MAX-FAN-RATIO>)                                DESIGN2462
     2              / AMAX1(1., CFMH-<HOTDUCTCFMLOSS>)                          DESIGN2463
        <HCFMRATIO> = AMIN1(1.0,<HCFMRATIO>)                                    DESIGN2464
        IF(<HCFMRATIO> .LT. 0.90)  THEN                                         DESIGN2465
          CALL MSGSIM(-2,II,II,II,II)                                           DESIGN2466
          WRITE(IOUTPT,9210) (<SYSTEM-NAME>,II=1,8), <HCFMRATIO>                -42c    89
        ENDIF                                                                   DESIGN2468
 9210   FORMAT(14X,'The HSUPPLY-CFM in SYSTEM ',8A4,' is only ', F4.2 /         -42c    90
     $         14X,'times the sum of the ZONE CFMs')                            -42c    91
      ELSE                                                                      DESIGN2471
        PLRCFMh = PLRCFM                                                        DESIGN2472
      ENDIF                                                                     DESIGN2473
c             preheat capacity                                                  DESIGN2474
      IF (<PREHEAT-SOURCE> .NE. 0)  THEN                                        HVAC17a  3
        <PREHEATCFM> = <SUPPLY-CFM>                                             HVAC17a  4
        IF (<PREHEATCFM> .GT. 0.)  THEN                                         HVAC17a  5
          IF (<PREHEAT-CAPACITY> .EQ. 0.)  <PREHEAT-CAPACITY> =                 HVAC17a  6
     1      CONS(1) * <PREHEATCFM> * AMIN1(TMIN-<PREHEAT-T>, 0.)                HVAC17a  7
          TPH = TMIN - <PREHEAT-CAPACITY> / (CONS(1)*<PREHEATCFM>)              HVAC17a  8
          IF (TPH .LT. (<PREHEAT-T>-1.) )  THEN                                 HVAC17a  9
            CALL MSGSIM(-2,II,II,II,II)                                         HVAC17a 10
            WRITE(IOUTPT,9078)  (<SYSTEM-NAME>,II=1,8)                          -42c    92
 9078       FORMAT(14X,'In ',8A4,' specified PREHEAT-CAPACITY may'/             -42c    93
     $         14X,'not be sufficient to maintain PREHEAT-T' )                  -42c    94
          ENDIF                                                                 HVAC17a 14
        ELSE                                                                    HVAC17a 15
          <PREHEAT-CAPACITY> = 0.                                               HVAC17a 16
          <PREHEAT-T> = 0.                                                      HVAC17a 17
        ENDIF                                                                   HVAC17a 18
c             hot water preheat coils only                                      HVAC17a 19
        IF (<PREHEAT-SOURCE> .LT. 0  .AND.  <PHW-LOOP> .GT. 0.)  THEN           HVAC17a 20
c              pointer to preheat loop                                          HVAC17a 21
          JLP = <PHW-LOOP>                                                      HVAC17a 22
c             design dT between EAT and EWT, preheat coil                       HVAC17a 23
          <PHWDESDTS> = TMIN - <lp:DESIGN-HEAT-T>                               ChlrHP  14
          IF ((<lp:DESIGN-HEAT-T> - <PREHEAT-T>) .LT. 10.)  THEN                ChlrHP  15
            CALL MSGSIM(-1,II,II,II,II)                                         HVAC17a 26
            WRITE(IOUTPT,9423) (<SYSTEM-NAME>,II=1,8),                          HVAC17a 27
     &                        <lp:DESIGN-HEAT-T>, <PREHEAT-T>                   ChlrHP  16
            IFLAG = 1                                                           HVAC17a 29
          ENDIF                                                                 HVAC17a 30
        ENDIF                                                                   HVAC17a 31
      ELSE                                                                      HVAC17a 32
        <PREHEAT-T> = UNFILD                                                    HVAC17a 33
        <PREHEAT-CAPACITY> = 0.                                                 HVAC17a 34
      ENDIF                                                                     HVAC17a 35
c                                                                               DESIGN2502
C              CALC SUPPLY AIR TEMP                                             DESIGN2503
      IF(<HEAT-SET-T>.EQ.0.0 .AND. ICODE.EQ.16)  <HEAT-SET-T> = <AZHEAT>        CCIG7   34
      TH     = <HEAT-SET-T>                                                     DESIGN2506
C              IF IT IS AN INDUCTION UNIT USE MIN-SUPPLY-T                      DESIGN2507
      IF((TH .EQ. 0.0) .AND. (IUNIT .EQ. 3))  TH = <MIN-SUPPLY-T>               DESIGN2508
      IF (<HEAT-SOURCE> .EQ. 0)  GOTO 75                                        HVAC25  26
      IF((<HEATING-CAPACITY>.EQ.0.0).AND.((<HEAT-SET-T>.EQ.0.0).AND.            DESIGN2509
     1   (<MAX-SUPPLY-T>.EQ.0.0)))  GOTO 75                                     DESIGN2510
C              IF THE ABOVE WAS SPECIFIED SKIP                                  DESIGN2511
      IF(TH .NE. 0.0)  GOTO 76                                                  DESIGN2512
C              IF DESICCANT SYSTEM, USE MAX                                     DESIGN2513
      IF (ICODE .EQ. 25)  TH = <MAX-SUPPLY-T>                                   DESIGN2514
C               IF AN EVAP COOLER SYSTEM, USE MAX                               DESIGN2515
      IF (ICODE .EQ. 26)  TH=<MAX-SUPPLY-T>                                     DESIGN2516
C              IF A DUAL DUCT SYSTEM USE MAX                                    DESIGN2517
      IF((ICODE.EQ.3).OR.(ICODE.EQ.4).OR.(ICODE.EQ.20))                         DESIGN2518
     1                                           TH = <MAX-SUPPLY-T>            DESIGN2519
C              IF A RESYS OR HVSYS USE MAX                                      DESIGN2520
      IF (ICODE.EQ.17 .OR. ICODE.EQ.16 .OR. ICODE.EQ.27)                        DESIGN2521
     1    TH = <MAX-SUPPLY-T>                                                   DESIGN2522
C              IF A SINGLE ZONE SYSTEM SET TO MAX                               DESIGN2523
      IF((ICODE.EQ.2).OR.(ICODE.EQ.19).OR.(ICODE.EQ.28))                        DESIGN2524
     $    TH = <MAX-SUPPLY-T>                                                   DESIGN2525
C              OTHERWISE USE MIN                                                DESIGN2526
      IF(TH .LE. 0.0)  THEN                                                     DESIGN2527
        IF(<PREHEAT-CAPACITY> .LT. 0.)  THEN                                    -036   228
          TH = <PREHEAT-T>                                                      -036   229
          ILOCN = 1                                                             -036   230
        ELSE                                                                    -036   231
          TH = TMIN                                                             -036   232
        ENDIF                                                                   -036   233
        TH = TH + <SUPPLY-DELTA-T>*CONS(3)                                      -036   234
      ENDIF                                                                     DESIGN2530
c              determine duct losses during heating                             DESIGN2531
   76 IF( <DUCT-LOSS-ZONE> .EQ. 0 )  GOTO  239                                  JJHfix   3
      ZP1 = <DUCT-LOSS-ZONE>                                                    JJHfix   4
      ZP2 = <ZP2>                                                               DESIGN2533
      TDuctEnv = <DESIGN-HEAT-T>                                                XFC1    58
      IF (ICODE .EQ. 4  .OR.  ICODE .EQ. 20)  THEN                              XFC1    59
c              Hot duct in a dual duct system.                                  XFC1    60
        IF (<HOT-DUCT-UA> .GT. 0.)  THEN                                        XFC1    61
c              user specified the duct UA.  calc the design duct dT             XFC1    62
          <HOTDUCTUA>   = <HOT-DUCT-UA>                                         XFC1    63
          <HOT-DUCT-DT> = DUCTDT(<MAX-SUPPLY-T>,CFMH,1,2,0)                     XFC1    64
        ELSEIF (<HOT-DUCT-DT> .LT. 0.)  THEN                                    XFC1    65
c              User specified the duct temperature rise.  Check to see          XFC1    66
c              if temperature differentials even remotely reasonable.           XFC1    67
          dTratio = <HOT-DUCT-DT>                                               XFC1    68
     &            / (TDuctEnv-(<MAX-SUPPLY-T>-<HOT-DUCT-DT>))                   XFC1    69
          IF (1.0/dTratio .LT. 0.5)  THEN                                       XFC1    70
            CALL MSGSIM(-1,II,II,II,II)                                         XFC1    71
            WRITE (IOUTPT,9429) (<SYSTEM-NAME>,II=1,8)                          XFC1    72
            IFLAG = 1                                                           XFC1    73
            GOTO 239                                                            XFC1    74
          ENDIF                                                                 XFC1    75
          <HOTDUCTUA> = -CONS(1)*CFMH * ALOG(1.0-dTratio)                       XFC1    76
 9429   FORMAT(14X,'In System: ',8A4,'the duct thermal'                /        XFC1    77
     &         14X,'losses based on the HOT-DUCT-DT, MIN-SUPPLY-T, and'/        XFC1    78
     &         14X,'zone DESIGN-HEAT-T are either excessive or'        /        XFC1    79
     &         14X,'impossible.  Check these values for consistency.'  )        XFC1    80
        ELSE                                                                    XFC1    81
c              When <HOT-DUCT-DT> is not specified, but <DUCT-DT> is,           XFC1    82
c              then estimate hot duct UA based on relative flows of             XFC1    83
c              hot and cold decks                                               XFC1    84
          IF ((<DUCTUA> .GT. 0.) .AND. (CFMC .GT. 0.)                           XFC1    85
     1                           .AND. (CFMH .GT. 0.)) THEN                     XFC1    86
            <HOTDUCTUA>   = <DUCTUA> * SQRT(CFMH/CFMC)                          XFC1    87
            <HOT-DUCT-DT> = DUCTDT(<MAX-SUPPLY-T>,CFMH,1,2,0)                   XFC1    88
          ENDIF                                                                 XFC1    89
        ENDIF                                                                   XFC1    90
      ELSE                                                                      XFC1    91
c              Not DDSF, delta-T of a single duct system when heating           XFC1    92
c              Note that HOTDUCTUA is ZERO in single duct system.               XFC1    93
        IF (<DUCT-DT> .GT. 0.  .AND.  CFMH .GT. 0.)                             XFC1    94
     &    <HOT-DUCT-DT> = DUCTDT(TH,CFMH,1,1,0)                                 XFC1    95
c              for RESVVT, hot and cold ducts are the same                      XFC1    96
        IF (ICODE .EQ. 27)  <HOTDUCTUA> = <DUCTUA>                              XFC1    97
c              end of duct loss calcs.                                          XFC1    98
      ENDIF                                                                     XFC1    99
c              if TH was set at the diffuser, convert to entering duct          DESIGN2624
  239 IF (ILOCN .EQ. 2)  TH = TH - <HOT-DUCT-DT>                                DESIGN2625
c              store the air handler heating setpoint                           DESIGN2626
      IF (<HEAT-SET-T> .EQ. 0.)  <HEAT-SET-T> = TH                              CCIG7   35
c                                                                               DESIGN2629
      IF (DDSTYPE .NE. 2)  THEN                                                 DESIGN2630
c              for nondual-fan systems, temp upstream of heating                DESIGN2631
c              coil is mixed air, which is controlled by cooling                DESIGN2632
        QHT  = <MIN-SUPPLY-T> - <DUCT-DT> - <SUPPLY-DELTA-T>*CONS(3)            DESIGN2633
c              the mixed air cannot be less than the outside air temp           DESIGN2634
        QHT  = AMAX1(QHT,DBTMIN)                                                DESIGN2635
c              if a two duct system use the min of the two                      DESIGN2636
        IF ((<OA-CONTROL> .NE. 0) .AND. (DDSTYPE .EQ. 1))                       DESIGN2637
     1    TMIN = AMIN1(TMIN,QHT)                                                DESIGN2638
c              check for preheat coil                                           DESIGN2639
        TMIN   = AMAX1(TMIN,<PREHEAT-T>)                                        DESIGN2640
c              set TH to be upstream of fan (mixed air)                         DESIGN2641
        TH = TH - <SUPPLY-DELTA-T>*CONS(3)                                      DESIGN2642
      ELSE                                                                      DESIGN2643
c              dual-fan - TMIN is the heating return temp                       DESIGN2644
        TMIN = TRMIN                                                            DESIGN2645
        TH   = TH - <HSUPPLY-DELTA-T>*CONS(3)                                   DESIGN2646
      ENDIF                                                                     DESIGN2647
C              CHECK FOR ADEQUATE AHU HEATING CAPACITY                          -036   235
      MAX2 = TH+<SUPPLY-DELTA-T>*CONS(3)+<HOT-DUCT-DT>                          -036   236
      IF(IRHFLAG.eq.0 .OR.  ICODE.eq.16) MAX3 = <MAX-SUPPLY-T>                  -036   237
      IF(IRHFLAG.ne.0 .AND. ICODE.ne.16) MAX3 = <MIN-SUPPLY-T>                  -036   238
      IF( ((IRHFLAG.eq.0 .OR.  ICODE.eq.16) .AND.                               -036   239
     $     (MAX2*1.05 .LT. MAX3)) .OR.                                          -036   240
     $    ((IRHFLAG.ne.0 .AND. ICODE.ne.16) .AND.                               -036   241
     $     (MAX2*1.05 .LT. MAX3)) ) THEN                                        -036   242
        CALL MSGSIM(-2,II,II,II,II)                                             -036   243
        WRITE(IOUTPT,9077) (<SYSTEM-NAME>,II=1,8),MAX3,MAX2                     -036   244
      ENDIF                                                                     -036   245
 9077 FORMAT(                                                                   -036   246
     $14X,'PREHEAT/HEATING-CAPACITY in SYSTEM ',8A4/                            -036   247
     $14X,'is too low to provide the requested supply temperature for'/         -036   248
     $14X,'the calculated mixed air temperature using total ZONE loads'/        -036   249
     $14X,'(on LS-A/B) and SYSTEM design parameters, plus outside air'/         -036   250
     $14X,'conditions (on LS-C), and specified capacities & air flows.'/        -036   251
     $14X,'Requested temperature is ',F6.2,' calculated is ',F6.2/              -036   252
     $14X,'Check HEATING-CAPACITY, HEAT-SET-T, PRE-HEAT-T, MAX-SUPPLY',         -036   253
     $    '-T,'/14X,'DESIGN-HEAT-T, and ZONE loads for consistency.')           -036   254
C              CALC LOAD ON COIL                                                -036   255
      CONS1  = (.24+.44*0.0)*60.0/V(TMIN,0.0,BLDGP)                             DESIGN2660
C              FAN HEAT                                                         DESIGN2661
      QH     = AMIN1(0.0,CONS1*CFMH*(TMIN-TH))                                  DESIGN2662
C              CALC ADJUSTMENT FACTOR FOR HEATPUMPS                             DESIGN2663
      QHM1   = 1.0                                                              DESIGN2664
      IF((<HEAT-SOURCE> .EQ. 4) .OR. (<HEAT-SOURCE> .EQ. 9)) THEN               DESIGN2665
        IF (<CONDENSER-TYPE> .eq. 1) THEN  ! wlhp                               -044d    1
          Jlp  = <CW-LOOP>                                                      -044d    2
          QHM1 = CVAL(<HEAT-CAP-FT>,TMIN,                                       -044d    3
     &                              Max(<lp:DESIGN-HEAT-T>,<MIN-HP-T>))         -044d    4
        ELSE                                                                    -044d    5
          QHM1 = CVAL(<HEAT-CAP-FT>,TMIN,AMAX1(DBTMIN,<MIN-HP-T>))              -044d    6
          IF (DBTMIN .le. <DEFROST-T>  .and.                                    -044d    7
     &                                  <DEFROST-FRAC-FT> .ne. 0) THEN          -044d    8
            DFM1 = CVAL(<DEFROST-FRAC-FT>,DBTMIN,DBTMIN)                        -044d    9
            QHM1 = QHM1*(1.0-DFM1)                                              -044d   10
          ENDIF                                                                 -044d   11
        ENDIF                                                                   -044d   12
c              supplemental capacity                                            -044d   13
        IF(<SUPP-SOURCE> .ne. 0  .and.  <SUPP-HEAT-CAP> .EQ. 0.)                -044d   14
     &    <SUPP-HEAT-CAP> = QH                                                  -044d   15
      ENDIF                                                                     DESIGN2671
C              IF DESICCANT SYSTEM, SKIP HEATING CAPACITY AND EIR CALC.         DESIGN2672
      IF (ICODE .EQ. 25)  GO TO 7010                                            DESIGN2673
C               IF EVAP COOL SYSTEM, SKIP HEATING CAPACITY AND EIR CALC         DESIGN2674
      IF (ICODE .EQ. 26) GO TO 7010                                             DESIGN2675
 7010 CONTINUE                                                                  DESIGN2681
C              IF USER DID NOT SPECIFY CAPACITY SKIP                            DESIGN2682
      IF ((<HEATING-CAPACITY>.NE.0.) .AND. (<COOLING-CAPACITY>.NE.0.))          DESIGN2683
     1THEN                                                                      DESIGN2684
          IHPQF = 3                                                             DESIGN2685
      ELSE IF((<HEATING-CAPACITY>.EQ.0.).AND.(<COOLING-CAPACITY>.NE.0.))        DESIGN2686
     1THEN                                                                      DESIGN2687
          IHPQF = 2                                                             DESIGN2688
      ELSE IF((<HEATING-CAPACITY>.NE.0.).AND.(<COOLING-CAPACITY>.EQ.0.))        DESIGN2689
     1THEN                                                                      DESIGN2690
          IHPQF = 1                                                             DESIGN2691
      ELSE                                                                      DESIGN2692
          IHPQF = 0                                                             DESIGN2693
      END IF                                                                    DESIGN2694
      QHT    = 0.0                                                              DESIGN2695
      IF (<SIZING-METHOD>.eq.1  .and.  ICFMTON.eq.1)                            -041f   98
     &  <HEATING-CAPACITY> = QH/QHM1                                            -041f   99
      IF(<HEATING-CAPACITY> .EQ. 0.0)  GOTO 72                                  DESIGN2696
C              OTHERWISE WE MUST CALC THE MAX SUPPLY TEMP FROM THE              DESIGN2697
C              GIVEN CAP AND RECALC THE ZONE EXTRACTION RATES                   DESIGN2698
C              LOOP THROUGH ZONES, CALCULATE MAXIMUM SUPPLY TEMPERATURES        DESIGN2699
C              FROM THE GIVEN CAPACITY AND RECALCULATE THE MINIMUM              DESIGN2700
C              EXTRACTION RATE.                                                 DESIGN2701
      IF (DDSTYPE .NE. 2)  THEN                                                 -036   256
        QHT  = TMIN + <SUPPLY-DELTA-T>*CONS(3)                                  -036   257
      ELSE                                                                      -036   258
        QHT  = TMIN + <HSUPPLY-DELTA-T>*CONS(3)                                 -036   259
      ENDIF                                                                     -036   260
      IF ((<HEAT-SOURCE> .eq. 4 .or. <HEAT-SOURCE> .eq. 9) .and.                -044d   16
     &                                     <CONDENSER-TYPE> .ne. 1) THEN        -044d   17
        IF(DBTMIN .GE. <MIN-HP-T>)                                              -036   262
     $    QHT = QHT - <HEATING-CAPACITY>*QHM1/(CONS(1)*CFMH)                    -036   263
        IF(DBTMIN .LE. <MAX-HSUPP-T>)                                           -036   264
     $    QHT = QHT - <SUPP-HEAT-CAP>/(CONS1*CFMH)                              -036   265
      ELSE                                                                      -036   266
        QHT = QHT - <HEATING-CAPACITY>*QHM1/(CONS(1)*CFMH)                      -036   267
      ENDIF                                                                     -036   268
      QHT    = QHT + <HOT-DUCT-DT>                                              -036   269
      ZP1 = ISZ                                                                 DESIGN2702
      DO 71 NZ=1,NSZ                                                            DESIGN2703
      ZP2 = <ZP2>                                                               DESIGN2704
      IF(((ICODE.eq. 2).OR.(ICODE.eq.17).OR.(ICODE.eq.19).OR.                   -043a   81
     $    (ICODE.eq.26).OR.(ICODE.eq.28)) .AND. (NZ.eq.1)) THEN                 -043a   82
        ISZCZ = 1                                                               -043a   83
      ELSE                                                                      -043a   84
        ISZCZ = 0                                                               -043a   85
      ENDIF                                                                     -043a   86
      IF (<ZONE-TYPE> .NE. 1)  GO TO 71                                         DESIGN2705
C              ONLY FOR NON-INDUCTION                                           DESIGN2706
      IF( (IUNIT .NE. 3)  .AND. (.NOT.((ICODE.eq.23) .and.                      -036   270
     $    ((<TERMINAL-TYPE>.EQ.3).OR.(<TERMINAL-TYPE>.EQ.4)))) ) THEN           -036   271
        IF(((IRHFLAG.ne.0) .AND. (ISZCZ.eq.0)) .or. (ICODE.eq.16)) THEN         -043a   87
          QHTZ = QHT+<REHEAT-DELTA-TZ>                                          -036   273
          IF(ICODE.ne.23) QHTZ = AMIN1(QHTZ,<MAX-SUPPLY-T>)                     -036   274
c             recalculate design dT between EAT and EWT, zonal level            -036   275
          IF(<HW-LOOPZ> .GT. 0)  THEN                                           -036   276
c              pointer to hw loop                                               -036   277
            JLP = <HW-LOOPZ>                                                    -036   278
            <HWDESDTZ> = (QHTZ - <lp:DESIGN-HEAT-T>)                            ChlrHP  17
          ENDIF                                                                 -036   280
        ELSE                                                                    -036   281
          QHTZ = AMIN1(QHT,<MAX-SUPPLY-T>)                                      -036   282
        ENDIF                                                                   -036   283
        <ERMIND> = <BASEBOARD-RATING>                                           -036   284
     $              + CONS1*<CFMAXH>*(<DESIGN-HEAT-T>-QHTZ)                     -036   285
      ENDIF                                                                     -036   286
   71 ZP1    = ZP1 + NZD                                                        DESIGN2732
      GOTO 75                                                                   DESIGN2733
C              SAVE CALCULATED HEATING LOAD                                     DESIGN2734
   72 <HEATING-CAPACITY> = QH/QHM1                                              DESIGN2735
c             design delta T between EAT and EWT for hot water coil             DESIGN2736
   75 IF (<HW-LOOP> .GT. 0  .AND.  <HEAT-SOURCE> .LT. 0)  THEN                  HVAC22  26
c              pointer to hot water loop                                        HVAC   115
        JLP = <HW-LOOP>                                                         HVAC   116
        <HWDESDTS> = TMIN - <lp:DESIGN-HEAT-T>                                  ChlrHP  18
        IF ((<lp:DESIGN-HEAT-T> - TH) .LT. 10.)  THEN                           ChlrHP  19
          CALL MSGSIM(-1,II,II,II,II)                                           DESIGN2741
          WRITE(IOUTPT,9423) (<SYSTEM-NAME>,II=1,8),                            HVAC14  33
     &                        <lp:DESIGN-HEAT-T>, TH                            ChlrHP  20
          IFLAG = 1                                                             DESIGN2743
        ENDIF                                                                   DESIGN2744
      ENDIF                                                                     DESIGN2745
      IF(IREPRT(2,34).NE.0)  WRITE(IOUTPT,9075) TMIN,TH,QHT,CONS1,QH,           IREPRT  31
     $  QHM1,                                                                   IREPRT  32
     1                     <HEATING-CAPACITY>,<PREHEAT-CAPACITY>,               DESIGN2752
     2                     <PREHEAT-T>,<REHEAT-DELTA-T>,<HWDESDTS>,             DESIGN2753
     3                     <PHWDESDTS>,<DUCT-DT>,<DUCTUA>,<HOT-DUCT-DT>,        DESIGN2754
     4                     <HOTDUCTUA>                                          HVAC13  33
 9075 FORMAT(38H0MAIN AIR-HANDLER HEATING CALCULATIONS /                        DESIGN2756
     111H TMIN    = ,F11.2,12H  TH      = ,F11.2,12H  QHT     = ,F11.2 /        DESIGN2757
     211H CONS1   = ,F11.3,12H  QH      = ,F11.0,12H  QHM1    = ,F11.3 /        DESIGN2758
     311H HEAT-CAP= ,F11.0,12H PREHT-CAP= ,F11.0,12H  PREHT-T = ,F11.2 /        DESIGN2759
     411H REHEAT-T= ,F11.2,12H  HWDESDTS= ,F11.2,12H PHWDESDTS= ,F11.2 /        DESIGN2760
     511H  DUCT-DT= ,F11.3,12H    DUCTUA= ,F11.2,12H HOTDUCTDT= ,F11.2 /        DESIGN2761
     611H HOTDUCTUA=,F11.3)                                                     HVAC13  34
      IF(ICFMTON .ne. 0)  GOTO 7705                                             -041f  100
C                                                                               DESIGN2763
C              DESIGN COOLING LOAD FOR COILS IN AIR-HANDLER                     DESIGN2764
c              Note that CFMS is the peak fan flow, and CFMC is the             DESIGN2765
c              peak cooling coil flow.  They are identical in all               DESIGN2766
c              systems except single-fan dual-duct systems.  There,             DESIGN2767
c              CFMS may be larger than CFMC because of the minimum              DESIGN2768
c              flow which may be specified for the hot deck during              DESIGN2769
c              peak cooling periods.  For this reason, CFMC is used             DESIGN2770
c              for all cooling coil calcs.                                      DESIGN2771
C                                                                               DESIGN2772
C              IF A NON-COOLING SYSTEM SKIP                                     DESIGN2773
      IF(ICODE.EQ.16) GOTO 79                                                   DESIGN2774
C              IF TOTAL DESICCANT SYSTEM, SKIP COIL SIZING                      DESIGN2775
      IF (ICODE .EQ. 25)  GO TO 7710                                            DESIGN2776
C               IF EVAP COOL SYSTEM, SKIP COIL SIZING                           DESIGN2777
      II = 1                                                                    DESIGN2778
      IF ((ICODE .EQ. 26).OR.((<SWAMP-COOLER> .EQ. 1).AND.                      DESIGN2779
     $    (<GET-IT-INTO-SYS> .EQ. 0.)) ) GO TO 7710                             DESIGN2780
C              CALC COIL SURFACE CONDITION                                      DESIGN2781
      TSURF  = (TC-CBF*TMAX)/(1.0-CBF)                                          DESIGN2782
      WSURF  = WFUNC(TSURF,100.,BLDGP)                                          DESIGN2783
C              CALC HUMIDITY RATIO CHANGE FROM SPACE GAIN                       DESIGN2784
      DW     = QLMAX/(CONS(2)*AMAX1(RCFMC,<CFM/ACH>))                           DESIGN2785
C              CALC RATIO OF INFILTRAION TO SUPPLY AIR                          DESIGN2786
      F      = CINFMX/AMAX1(RCFMC,<CFM/ACH>)                                    DESIGN2787
C RATIO OF ZONE AIR FLOWING THROUGH THE REFRIG                                  DESIGN2788
C CASE TO THE SUPPLY CFM                                                        DESIGN2789
      G = 0.                                                                    DESIGN2790
C PRODUCT OF G AND THE REFRIG EVAP W                                            DESIGN2791
      GW = 0.                                                                   DESIGN2792
C POINTER TO ZONE HAVING THE REFRIG EQUIP                                       DESIGN2793
      ZP2 = 0                                                                   DESIGN2794
      ZP1 = <REFG-ZONE-ZP1>                                                     DESIGN2795
      IF (ZP1 .NE. 0)  ZP2 = <ZP2>                                              DESIGN2796
C REFRIG CASE INDEX                                                             DESIGN2797
      IG = 0                                                                    DESIGN2798
c              Estimate the mixed air humidity.                                 DESIGN2799
c              The following moisture balance equations include the term        DESIGN2800
c              WOA for a dessicant dehumidifier on the outside air.             DESIGN2801
c              This term is not presently used.                                 DESIGN2802
      WOA = WMAX                                                                DESIGN2803
   62 IF ((F .LE. 0.01) .AND. ((PO+G) .LE. 0.))  THEN                           DESIGN2804
c              mixed air humidity - No outside air or refrig equip              DESIGN2805
c              situation                                                        DESIGN2806
        IF (F .GT. 0.)  THEN                                                    DESIGN2807
          WM = WMAX + DW/F                                                      DESIGN2808
        ELSE                                                                    DESIGN2809
          WM = WMAX + DW                                                        DESIGN2810
        ENDIF                                                                   DESIGN2811
      ELSE                                                                      DESIGN2812
        IF (DDSTYPE .NE. 1)  THEN                                               DESIGN2813
c              all systems except single-fan dual-duct                          DESIGN2814
c              mixed air humidity for dry coil                                  DESIGN2815
          WM = ((1.+F+G)*PO*WOA + (1.-PO)*(DW+GW+F*WMAX))                       DESIGN2816
     1                            / AMAX1(PO+F+G, 1.E-6)                        DESIGN2817
c              leaving coil humidity (dry coil)                                 DESIGN2818
        ELSE                                                                    DESIGN2819
c              dual-duct systems - ratio of heating and cooling                 DESIGN2820
c              airflows during cooling peak                                     DESIGN2821
          PC = CFMC / (CFMC+CFMRMh+1.E-6)                                       DESIGN2822
          PH = 1.0 - PC                                                         DESIGN2823
          WM = (PO*WOA*(1.+F) + (F*WMAX + DW)*(1.-PO))                          DESIGN2824
     1                              / AMAX1(F+PO, 1.E-6)                        DESIGN2825
        ENDIF                                                                   DESIGN2826
      ENDIF                                                                     DESIGN2827
c              leaving coil humidity (dry coil)                                 DESIGN2828
      WC = WM                                                                   DESIGN2829
      IF (DDSTYPE .NE. 1)  THEN                                                 DESIGN2830
c              return air humidity (dry coil)                                   DESIGN2831
        WR = (PO*WOA + F*WMAX + DW + GW)                                        DESIGN2832
     1                              / AMAX1(PO+F+G, 1.E-6)                      DESIGN2833
c              check to see if coil is wet                                      DESIGN2834
        IF(WM .LT. WSURF)  GOTO 66                                              DESIGN2835
c              return air humidity (wet coil)                                   DESIGN2836
        WR = (CBF*PO*WOA + (1.-CBF)*WSURF + DW + GW + F*WMAX)                   DESIGN2837
     1        / AMAX1(1. + F + G - CBF*(1.-PO), 1.E-6)                          DESIGN2838
      ELSE                                                                      DESIGN2839
        WR = (PO*WOA + F*WMAX + DW)                                             DESIGN2840
     1                              / AMAX1(PO+F, 1.E-6)                        DESIGN2841
        IF(WM .LT. WSURF)  GOTO 66                                              DESIGN2842
        WR = ((PH+PC*CBF)*PO*WOA + PC*(1.-CBF)*WSURF + DW + F*WMAX)             DESIGN2843
     1         / AMAX1(1. + F - (1.-PO)*(PH+PC*CBF), 1.E-6)                     DESIGN2844
      ENDIF                                                                     DESIGN2845
c              mixed air humidity for wet coil                                  DESIGN2846
      WM     = PO*WMAX + (1.0-PO)*WR                                            DESIGN2847
c              leaving wet coil humidity                                        DESIGN2848
      WC     = CBF*WM + (1.0-CBF)*WSURF                                         DESIGN2849
C SKIP IF NO REFRIG EQUIP IN THIS SYSTEM                                        DESIGN2850
 66   IF (ZP2 .EQ. 0)  GOTO 63                                                  DESIGN2851
C INCREMENT REFRIG CASE INDEX (GOES FROM COLDEST TO WARMEST)                    DESIGN2852
      IG = IG + 1                                                               DESIGN2853
C SKIP IF NO MORE UNITS                                                         DESIGN2854
      IF (IG .GT. <NUM-REFG-EQUIP>)  GOTO 63                                    DESIGN2855
C NO REFRIG CASE LATENT HEAT REMOVAL IF                                         DESIGN2856
C ZONE W LESS THAN EVAP W                                                       DESIGN2857
      IF (WR .LE. <REFG-EVAP-W>)  GOTO 63                                       DESIGN2858
C CFM RATIO FOR THIS CASE                                                       DESIGN2859
      G = G + <REFG-CFM> / CFMS                                                 DESIGN2860
C PRODUCT OF G AND EVAP W, SUMMED FOR ALL EQUIP SO FAR                          DESIGN2861
      GW = GW + <REFG-EVAP-W>*<REFG-CFM>/CFMS                                   DESIGN2862
C NOW REPEAT ITERATION                                                          DESIGN2863
      GO TO 62                                                                  DESIGN2864
 63   <PASTWR> = WR                                                             DESIGN2865
C SAVE G AND GW AS INITIAL VALUES FOR USE IN DKTEMP                             DESIGN2866
      <G> = G                                                                   DESIGN2867
      <GW> = GW                                                                 DESIGN2868
C                CHECK AGAINST THE USER SPECIFIED MAXIMUM                       DESIGN2869
      WRMAX  = WFUNC(TRMAX,<MAX-HUMIDITY>,BLDGP)                                DESIGN2870
      WRMIN  = 0.0                                                              DESIGN2871
      IF(ICODE .EQ. 17)  GOTO 120                                               DESIGN2872
C              SKIP THIS CHECK FOR HUMIDIFICATION LIMIT FOR NOW                 DESIGN2873
      IF(ICODE .GE. 0)  GOTO 121                                                DESIGN2874
      WRMIN  = WFUNC(TRMIN,<MIN-HUMIDITY>,BLDGP)                                DESIGN2875
C              CACL MIN MIX HUM TO MAINTAIN THE RETURN AT MIN-HUMIDITY          DESIGN2876
      WMM    = WRMIN*(1.0+CINFMN/CFMH) - QLMIN/(CONS(2)*RCFMH)                  DESIGN2877
     1         - CINFMN*WMIN/CFMH                                               DESIGN2878
C              IF ADDING THIS MUCH MOISTURE WOULD CAUSE CONDENSATION            DESIGN2879
C              ON THE COOLING COIL THROW A WARNING                              DESIGN2880
      IF(WMM .LE. WSURF)  GOTO 121                                              DESIGN2881
      CALL MSGSIM(-2,II,II,II,II)                                               DESIGN2882
      WRITE(IOUTPT,9121) (<SYSTEM-NAME>,II=1,8),WRMIN,WMM                       -42c    95
 9121 FORMAT(14X,'In ',8A4,' to maintain MIN-HUMIDITY of ',F6.4/                -42c    96
     $14X,'requires a mixed air humidification to ',F6.4  /                     DESIGN2885
     $14X,'This will cause condensation on the cooling coil.'/                  DESIGN2886
     $14X,'Thus the MIN-HUMIDITY setpoint may not be held.')                    DESIGN2887
  121 CONTINUE                                                                  DESIGN2888
      IF((WRMAX.GE.<PASTWR>).OR.(<MAX-HUMIDITY>.EQ.100.0))  GOTO 120            DESIGN2889
      CALL MSGSIM(-2,II,II,II,II)                                               DESIGN2890
      WRITE(IOUTPT,9120) (<SYSTEM-NAME>,II=1,8),TC,<PASTWR>,WRMAX               -42c    97
 9120 FORMAT(14X,'In ',8A4,', the return humidity for a coil exit',             -42c    98
     $    ' T of ',F5.1,' is ',F6.4/                                            -42c    99
     $14X,'Your setpoint is ',F6.4,', which may not be held.')                  -42c   100
  120 CONTINUE                                                                  DESIGN2895
C              CALC ENTHALPY CHANGE ACROSS THE COIL                             DESIGN2896
      QC     = H(TMAX,WM) - H(TC,WC)                                            DESIGN2897
C              CONVERT TO TOTAL LOAD                                            DESIGN2898
      QC     = AMAX1(0.0,QC*CFMC*60.0/V(TMAX,WM,BLDGP))                         DESIGN2899
C              CALC SENSIBLE PART                                               DESIGN2900
      CONS1  = ((.24+.44*WM)*60.0)/V(TMAX,WM,BLDGP)                             DESIGN2901
      QCS    = AMAX1(0.0,CONS1*CFMC*(TMAX-TC))                                  DESIGN2902
C              CALC ENTERING WETBULB                                            DESIGN2903
      IF (<CONDENSER-TYPE> .eq. 3) THEN                                         -045h   37
        EWB  = Max(WBFS(TMAX,WM,BLDGP), <COOL-FT-MIN>)                          -045h   38
      ELSE                                                                      -045h   39
        EWB  = Max(WBFS(TMAX,WM,BLDGP), <COOL-FT-MIN>-10.)                      -045h   40
      ENDIF                                                                     -045h   41
C              SET REFERENCE DRYBULB                                            DESIGN2905
C              FOR CHILLED WATER COILS USE ENTERING DRYBULB                     DESIGN2906
C              FOR DX PACKAGED SYSTEMS USE OUTSIDE DRYBULB                      DESIGN2907
      EDB    = TMAX                                                             DESIGN2908
      IF( (ICODE.EQ.17).OR.(ICODE.EQ.27).OR.(ICODE.EQ.28).OR.                   DESIGN2909
     $    ((ICODE.GE.19).AND.(ICODE.LE.22)) .OR.                                -044e   99
     &    ( ICODE.EQ.23 .AND. <COOL-SOURCE>.NE.1))  EDB = DBTMAX                -044e  100
      IF( (<CONDENSER-TYPE> .EQ. 1)  .AND.                                      DESIGN2912
     $  (((ICODE.GE.19).AND.(ICODE.LE.21)).OR.(ICODE.EQ.28) .OR.                -044e  101
     &    ( ICODE.EQ.23 .AND. <COOL-SOURCE>.NE.1) )) THEN                       -044e  102
        IF (<CW-LOOP> .GT. 0)  THEN                                             HVAC12  34
          JLP = <CW-LOOP>                                                       HVAC12  35
          OWB = AMAX1(<lp:MIN-RESET-T>,<COOL-FT-MIN>,                           HVAC16  62
     1              WBFS(DBTMAX,WMAX,BLDGP))                                    HVAC6  104
          EDB = OWB+5.                                                          HVAC6  105
          IF(<lp:CL-SETPT-CTRL> .NE. LOAD)                                      HVAC16  63
     $      EDB = AMAX1(OWB+5.,<lp:DESIGN-COOL-T>)                              ChlrHP  21
        ELSE                                                                    HVAC6  108
          CALL MSGSIM(-1,II,II,II,II)                                           HVAC6  109
          WRITE (IOUTPT,9504)  (<SYSTEM-NAME>,II=1,8)                           -42c   101
 9504     FORMAT(14X,'System ',8A4,'has a water-cooled condenser,'              -42c   102
     $          /14X,'but no condenser loop is attached.')                      -42c   103
          EDB = 85.0                                                            HVAC6  113
          IFLAG = 1                                                             HVAC6  114
        ENDIF                                                                   HVAC6  115
      ENDIF                                                                     DESIGN2918
      IF (IPCCF .gt. 0)  EDB = PCCEDB                                           -045h   42
      EDB    = AMAX1(EDB,<COOL-FT-MIN>)                                         DESIGN2920
C              CALC OFF DESIGN ADJUSTMENTS                                      DESIGN2921
      QCM1   = AMAX1( 0.0, CVAL(<COOL-CAP-FT>,EWB,EDB) )                        -034   127
      QCM2   = AMAX1( 0.0, CVAL(<COOL-SH-FT>,EWB,EDB) )                         -034   128
      QCM3   = 0.0                                                              DESIGN2924
      IF (ICODE.EQ.19 .OR. ICODE.EQ.20 .OR. ICODE.EQ.21 .OR. ICODE.EQ.22        DESIGN2925
     $    .OR. ICODE.EQ.27 .OR. ICODE.EQ.28 .OR.                                -044e  103
     &    ( ICODE.EQ.23 .AND. <COOL-SOURCE>.NE.1))                              -044e  104
     1QCM3   = CONS1*CFMC*(1.0-CBF)*AMAX1(-20.0,AMIN1(20.0,TMAX-80.0))          DESIGN2927
      IF(<SIZING-METHOD> .eq. 2)  THEN                                          -041f  101
        X = <COOLING-CAPACITY>                                                  -041f  102
        IF (<CFM/TON> .GT. 0.)  THEN                                            -041f  103
          <COOLING-CAPACITY> = (<SUPPLY-CFM>/(<CFM/TON>*BPMULT))*12000.         -041f  104
        ELSE                                                                    -041f  105
          CapMin = (<SUPPLY-CFM>/(<MAX-CFM/TON>*BPMULT))*12000.                 -041f  106
          CapMax = (<SUPPLY-CFM>/(<MIN-CFM/TON>*BPMULT))*12000.                 -041f  107
          <COOLING-CAPACITY> = Min(CapMax,                                      -041f  108
     &                             Max(<COOLING-CAPACITY>, CapMin))             -041f  109
        ENDIF                                                                   -041f  110
        <COOL-SH-CAP>  = 0.                                                     -041f  111
        ICFMTON = 2                                                             -041f  112
        IF(IREPRT(2,34).NE.0)  WRITE(IOUTPT,9169) X, <COOLING-CAPACITY>,        -041f  113
     $                       <SUPPLY-CFM>, <CFM/TON>                            -041f  114
 9169   FORMAT(/' Reset of SYSTEM COOLING-CAPACITY using CFM & CFM/TON'/        -041f  115
     $  ' Old Cap = ',F11.0,'  New Cap = ',F11.0,' CFM      = ',F11.2 /         -041f  116
     $  ' CFM/TON = ',F11.0,' CFM converted to STD CFM for Calc /\')            -041f  117
      ENDIF                                                                     -041f  118
c             for chilled water coil, differential between LAT and EWT          DESIGN2936
c             must be at least 6F                                               DESIGN2937
      IF (<CHW-LOOP> .GT. 0)  THEN                                              HVAC   120
c              pointer to chilled water loop                                    HVAC   121
        JLP = <CHW-LOOP>                                                        HVAC   122
        IF ((TC - <lp:DESIGN-COOL-T>) .LT. 6.)  THEN                            ChlrHP  22
          CALL MSGSIM(-1,II,II,II,II)                                           HVAC   124
          WRITE(IOUTPT,9424) (<SYSTEM-NAME>,II=1,8)                             -42c   104
          IFLAG = 1                                                             HVAC   126
        ENDIF                                                                   HVAC   127
      ENDIF                                                                     HVAC   128
C              IF USER DID NOT SPECIFY THE CAPACITY USE CALC CAP                DESIGN2944
      QCT    = 0.0                                                              DESIGN2945
      QCSF   = 0.0                                                              DESIGN2946
      IF(<COOLING-CAPACITY> .EQ. 0.0)  GOTO 68                                  DESIGN2947
C              IF SESIBLE CAP NOT SPECIFIED THEN CALC IT                        DESIGN2948
      IF(<COOL-SH-CAP> .LE. 0.0)  THEN                                          -044a   16
C              USE RATIO OF SPECIFIED AND CALC TOTAL LOAD ADJUSTED FOR          -044a   17
C              OFF DESIGN CONDITIONS TO SET UNSPECIFIED SENSIBLE CAPACITY       -044a   18
        <COOL-SH-CAP> = <COOLING-CAPACITY>                                      -044a   19
        CC = QC/QCM1                                                            -044a   20
        QCM3 = QCM3*(<COOLING-CAPACITY>/CC)                                     -044a   21
        HC = AMAX1(0.0,AMIN1( CC,AMAX1(0.0,(QCS-QCM3))/QCM2))                   -044a   22
        IF(CC.GT.0. .AND. HC.GT.0.)                                             -044a   23
     $       <COOL-SH-CAP> = <COOLING-CAPACITY>*(HC/CC)                         -044a   24
      ENDIF                                                                     -044a   25
C              CALC THE MIN-SUPPLY-TEMP WE CAN GET OUT OF THE                   DESIGN2957
C              SPECIFIED CAPACITY AND ADJUST THE ZONE EXTRACTION                DESIGN2958
      QCSF   = AMIN1( <COOLING-CAPACITY>*QCM1,                                  -034   132
     $                AMAX1( 0.0, <COOL-SH-CAP>*QCM2+QCM3 ) )                   -034   133
      QCT    = TMAX - QCSF/AMAX1(1., (CONS1*CFMC))                              DESIGN2960
      IF(<FAN-PLACEMENT> .EQ. 1)  QCT = QCT + <SUPPLY-DELTA-T>*CONS(3)          DESIGN2961
      IF(QCT+<DUCT-DT> .LE. <MIN-SUPPLY-T>)  GOTO 65                            DESIGN2962
      CALL MSGSIM(-2,II,II,II,II)                                               DESIGN2963
      WRITE(IOUTPT,9065) (<SYSTEM-NAME>,II=1,8)                                 -42c   105
 9065 FORMAT(14X,'SYSTEM ',8A4,' may have inadequate cooling capabili',         -42c   106
     $ 'ty'/14X,'Check COOLING-CAPACITY and MIN-SUPPLY-T for ',                 -42c   107
     $ 'consistency')                                                           -42c   108
   65 CONTINUE                                                                  DESIGN2968
      QCT    = AMAX1(QCT+<DUCT-DT>,<MIN-SUPPLY-T>)                              DESIGN2969
C              LOOP THROUGH THE ZONES AND ADJUST THE EXTRACTION RATES           DESIGN2970
C              TO REFLECT THE SPECIFIED CAPACITY                                DESIGN2971
      ZP1    = ISZ                                                              DESIGN2972
      DO 77 I=1,NSZ                                                             DESIGN2973
      ZP2    = <ZP2>                                                            DESIGN2974
C              NOT FOR INDUCTION SYSTEMS                                        DESIGN2975
      IF((<ZONE-TYPE>.NE.1) .OR. (IUNIT.EQ.3))  GOTO 77                         DESIGN2976
      <ERMAXD> = CONS1*<CFMAX>*(<DESIGN-COOL-T>-QCT)                            DESIGN2977
      IF (<TERMINAL-TYPE> .NE. 3)  GO TO 77                                     DESIGN2978
      ZP1S = ZP1                                                                DESIGN2979
      ZP1 = <IND-AIRZ-ZD>                                                       DESIGN2980
      ZP2 = <INDUCED-AIR-ZONE>                                                  DESIGN2981
      TL = <DESIGN-COOL-T> + <QPPEAKC>/(CONS(1)*<CFMAX>)                        DESIGN2982
      ZP1 = ZP1S                                                                DESIGN2983
      ZP2 = <ZP2>                                                               DESIGN2984
      MNSPTZ = (<CFMAX>*QCT+(<ZFCFMD>-<CFMAX>)*(TL+<ZONE-FAN-DT>))/             DESIGN2985
     1           <ZFCFMD>                                                       DESIGN2986
      <ERMAXD> = CONS1*<ZFCFMD>*(<DESIGN-COOL-T>-MNSPTZ)                        DESIGN2987
   77 ZP1    = ZP1 + NZD                                                        DESIGN2988
      GOTO 69                                                                   DESIGN2989
C              SAVE ADJUSTED CALCULATED TOTAL LOAD                              DESIGN2990
   68 <COOLING-CAPACITY> = QC/QCM1                                              DESIGN2991
C              SAVE SENSIBLE CAPACITY                                           DESIGN2992
      <COOL-SH-CAP> = AMIN1( <COOLING-CAPACITY>,                                -034   134
     $                       AMAX1( 0.0, (QCS-QCM3) )/QCM2 )                    -034   135
   69 CONTINUE                                                                  DESIGN2994
c             CHW coil nominal capacity at 65F EWB and 44F EWT                  DESIGN2995
      IF (<CHW-LOOP> .GT. 0)  THEN                                              HVAC   129
c              pointer to chilled water loop                                    HVAC   130
        JLP = <CHW-LOOP>                                                        HVAC   131
        <CHWCAP6544S> = <COOLING-CAPACITY>                                      HVAC   132
     1                  / CVAL(<CHW-CAP-FEWBEWT>,EWB,<lp:DESIGN-COOL-T>)        ChlrHP  23
      ENDIF                                                                     HVAC   134
C                                                                               DESIGN3004
C       CALCULATE MAX TOTAL- AND SENSIBLE-COOLING CAPACITY                      DESIGN3005
C       OF EVAPORATIVE COOLER                                                   DESIGN3006
C                                                                               DESIGN3007
C              FOR PTGSD SYSTEM. CALCULATE THE DESIGN COOLING                   DESIGN3008
C              AND SENSIBLE COOLING CAPACITY                                    DESIGN3009
      IF (ICODE .NE. 25)  GO TO 7710                                            DESIGN3010
C              ASSUME 95 DEG OUTSIDE DRYBULB, 75 DEG WETBULB                    DESIGN3011
      WO = WFDBWB(95.,75.,29.92)                                                DESIGN3012
C              ASSUME 80 DEG DRYBULB RETURN, 67 DEG WETBULB RETURN              DESIGN3013
      WI = WFDBWB(80.,67.,29.92)                                                DESIGN3014
      WR = WI                                                                   DESIGN3015
      <PASTWR> = WI                                                             DESIGN3016
C              USE FULL LOAD CURVES TO CALCULATE CONDITIONS ENTERING            DESIGN3017
C              THE EVAP. COOLER                                                 DESIGN3018
      T8 = CVAL(<T8-FWB1WB6>,67.,75.)                                           DESIGN3019
      HR8 = .0001*EXP(CVAL(<HR8-FWB1WB6>,67.,75.))                              DESIGN3020
      WBT8 = WBFS(T8,HR8,29.92)                                                 DESIGN3021
      II = 1                                                                    DESIGN3022
C              GET EVAP COOLER EXIT CONDITIONS                                  DESIGN3023
      CALL EVAPDR(1.,<DIRECT-EFF>,1.,T8,WBT8,EFF,T9,WBT9)                       DESIGN3024
C              CALCULATE CAPACITIES                                             DESIGN3025
      <COOLING-CAPACITY> = 60.*<SUPPLY-CFM>*(H(80.,WI) - H(T8,HR8))/            DESIGN3026
     1                     V(95.,WO,29.92)                                      DESIGN3027
      <COOL-SH-CAP> = CONS(1)*<SUPPLY-CFM>*(80.-T9)                             DESIGN3028
c     IF (IREPRT(2,35) .NE. 0)  WRITE (IOUTPT,9802) WO, WI, T8, HR8,            IREPRT  33
c    $  WBT8,                                                                   IREPRT  34
c    1 EFF, T9, WBT9, <COOLING-CAPACITY>, <COOL-SH-CAP>                         DESIGN3030
c9802 FORMAT(1X 'WO = ' F6.4 '  WI = ' F6.4 '  T8 = ' F8.3 /                    DESIGN3031
c    1       1X 'HR8 = ' F6.4 '  WBT8 = ' F8.3 '  EFF = ' F6.4 /                DESIGN3032
c    2       1X 'T9 = ' F8.3 '  WBT9 = ' F8.3 '  COOLING-CAPACITY = '           DESIGN3033
c    3       F8.0 / 1X 'COOL-SH-CAP = ' F8.0)                                   DESIGN3034
 7710 CONTINUE                                                                  DESIGN3035
      II = 1                                                                    DESIGN3036
      IF ((ICODE .EQ. 26).OR.((<SWAMP-COOLER> .EQ. 1).AND.                      DESIGN3037
     $    (<GET-IT-INTO-SYS> .EQ. 0.)) ) CALL EVAPDS(2)                         DESIGN3038
C                                                                               DESIGN3039
      IF(<SIZING-METHOD> .eq. 1) THEN                                           -041f  119
        X = <SUPPLY-CFM>                                                        -041f  120
        IF (<CFM/TON> .GT. 0.)  THEN                                            -041f  121
          <SUPPLY-CFM> = (<COOLING-CAPACITY>/12000.)*<CFM/TON>*BPMULT           -043a   88
        ELSE                                                                    -041f  123
          CFMmin = (<COOLING-CAPACITY>/12000.)*<MIN-CFM/TON>*BPMULT             -041f  124
          CFMmax = (<COOLING-CAPACITY>/12000.)*<MAX-CFM/TON>*BPMULT             -041f  125
          <SUPPLY-CFM> = Min(CFMmax, Max(<SUPPLY-CFM>, CFMmin))                 -041f  126
        ENDIF                                                                   -041f  127
        ICFMTON = 1                                                             -041f  128
        IF(IREPRT(2,34).NE.0)  WRITE(IOUTPT,9269) X, <SUPPLY-CFM>,              -041f  129
     $                       <COOLING-CAPACITY>,<CFM/TON>                       -041f  130
 9269   FORMAT(/' Reset of SYSTEM SUPPLY-CFM using TON & CFM/TON'/              -041f  131
     $  ' (then rebalance zones CFMs and resize heating coil)'/                 -041f  132
     $  ' Old CFM = ',F11.0,'  New CFM = ',F11.0,' Cool Cap = ',F11.2 /         -041f  133
     $  ' CFM/TON = ',F11.0,'      /\ New CFM is in Standard CFM' )             -041f  134
      ENDIF                                                                     -041f  135
      IF(IREPRT(2,34).NE.0)  WRITE(IOUTPT,9069) WRMAX,WRMIN,CONS1,QCM1,         IREPRT  35
     1                                        QCM2,QCM3,                        DESIGN3041
     2                     EDB,EWB,TSURF,WSURF,F,DW,WR,WM,WC,QC,QCS,            DESIGN3042
     3                     TC,<COOLING-CAPACITY>,<COOL-SH-CAP>,QCSF,QCT,        DESIGN3043
     4                     <CHWCAP6544S>                                        DESIGN3044
 9069 FORMAT(38H0MAIN AIR-HANDLER COOLING CALCULATIONS /                        DESIGN3045
     111H WRMAX   = ,F11.6,12H  WRMIN   = ,F11.6,12H  CONS1   = ,F11.3 /        DESIGN3046
     211H QCM1    = ,F11.3,12H  QCM2    = ,F11.3,12H  QCM3    = ,F11.3 /        DESIGN3047
     311H EDB     = ,F11.2,12H  EWB     = ,F11.2 /                              DESIGN3048
     411H TSURF   = ,F11.2,12H  WSURF   = ,F11.6 /                              DESIGN3049
     511H F       = ,F11.3,12H  DW      = ,F11.6 /                              DESIGN3050
     611H WR      = ,F11.6,12H  WM      = ,F11.6,12H  WC      = ,F11.6 /        DESIGN3051
     711H QC      = ,F11.0,12H  QCS     = ,F11.0,12H TC       = ,F11.2 /        DESIGN3052
     811H COOL-CAP= ,F11.0,12H  COOL-SH = ,F11.0 /                              DESIGN3053
     911H QCSF    = ,F11.0,12H  QCT     = ,F11.2,' CHWCAP6544S=',F11.2)         DESIGN3054
   79 CONTINUE                                                                  DESIGN3055
      IF(ICFMTON .eq. 1)  THEN                                                  -041f  136
        <SUPPLY-CFM>    = <SUPPLY-CFM>/<SIZING-RATIO>                           -041f  137
        <RATED-CFM>     = 0.                                                    -041f  138
        <HRATED-CFM>    = 0.                                                    -041f  139
        <HSUPPLY-CFM>   = HSCFMSS                                               -041f  140
        <RETURN-CFM>    = RCFMSS                                                -041f  141
        <SUPPLY-KW>     = SKWSS                                                 -041f  142
        <HSUPPLY-KW>    = HKWSS                                                 -041f  143
        <RETURN-KW>     = RKWSS                                                 -041f  144
        <SUPP-HEAT-CAP> = SHCAPSS                                               -041f  145
        CFM    = CFMSS                                                          -041f  146
        CFMC   = CFMCSS                                                         -041f  147
        CFMH   = CFMHSS                                                         -041f  148
        CFMRMh = CFMRMhSS                                                       -041f  149
        CFMRM  = CFMRMSS                                                        -041f  150
        ECFM   = ECFMSS                                                         -041f  151
        GOTO 1203                                                               -041f  152
      ENDIF                                                                     -041f  153
 7705 CONTINUE                                                                  -041f  154
C              MAKE HEAT PUMP CAPACITIES EQUAL                                  DESIGN3056
      CC = <COOLING-CAPACITY>                                                   DESIGN3057
      HC = <HEATING-CAPACITY>                                                   DESIGN3058
      CEIR = <COOLING-EIR>                                                      DESIGN3059
      HEIR = <HEATING-EIR>                                                      DESIGN3060
      IF( (<HEAT-SOURCE>.EQ.4) .OR. (<HEAT-SOURCE>.EQ.9) .OR.                   DESIGN3061
     $    (ICODE .EQ. 15) )  THEN                                               DESIGN3062
          G = ABS((CC/AMIN1(-1.,HC))/(HEIR/AMAX1(.001,CEIR)))                   DESIGN3063
          IF((IHPQF.EQ.3).AND.((G.GT.1.15).OR.(G.LT.0.85)))                     DESIGN3064
     1    THEN                                                                  DESIGN3065
              CALL MSGSIM(-2,II,II,II,II)                                       DESIGN3066
              WRITE (IOUTPT,9189) HC,CC,(<SYSTEM-NAME>,II=1,8)                  -42c   109
          ELSE IF (IHPQF.eq.2 .and. CC.gt.0.0) THEN                             -034   136
              <HEATING-CAPACITY> = -(CEIR/HEIR)*CC                              DESIGN3069
          ELSE IF (IHPQF.eq.1 .and. HC.lt.0.0) THEN                             -034   137
              <COOLING-CAPACITY> = -(HEIR/CEIR)*HC                              DESIGN3071
          ELSE IF (IHPQF .EQ. 0) THEN                                           DESIGN3072
              IF ((CC*CEIR.gt.ABS(HC*HEIR)) .OR. (ICODE.ne.15)) THEN            -034   138
                  <HEATING-CAPACITY> = -(CEIR/HEIR)*CC                          DESIGN3074
              ELSE                                                              DESIGN3075
                  <COOLING-CAPACITY> = -(HEIR/CEIR)*HC                          DESIGN3076
              END IF                                                            DESIGN3077
          END IF                                                                DESIGN3078
      END IF                                                                    DESIGN3079
 9189 FORMAT(14X,'A HEATING-CAPACITY of ',F11.0,                                -42c   110
     $ ' is inconsistent with a'/14X,'COOLING-CAPACITY of ',F11.0,              -42c   111
     $ ' in SYSTEM ',8A4)                                                       -42c   112
c                                                                               DWRECV   1
c              Adjust supplemental heat capacity for gas heat pump              DWRECV   2
c              for additional preheat, zonal, and baseboard loads               DWRECV   3
      IF (<HEAT-SOURCE> .EQ. 9  .AND. IERQF .EQ. 0)  THEN                       DWRECV   4
        IF (<PREHEAT-SOURCE> .EQ. 5)                                            DWRECV   5
     &    <SUPP-HEAT-CAP> = <SUPP-HEAT-CAP> + <PREHEAT-CAPACITY>                DWRECV   6
        IF (<ZONE-HEAT-SOURCE> .EQ. 5)  THEN                                    DWRECV   7
          DO  NZ=1,NSZ                                                          DWRECV   8
            ZP1 = ISZ + (NZ-1)*NZD                                              DWRECV   9
            ZP2 = <ZP2>                                                         DWRECV  10
            <SUPP-HEAT-CAP> = <SUPP-HEAT-CAP> + <HEATCAPZ>*<MULTIPLIER>         DWRECV  11
          ENDDO                                                                 DWRECV  12
        ENDIF                                                                   DWRECV  13
        IF (<BASEBOARD-SOURCE> .EQ. 5)  THEN                                    DWRECV  14
          DO  NZ=1,NSZ                                                          DWRECV  15
            ZP1 = ISZ + (NZ-1)*NZD                                              DWRECV  16
            ZP2 = <ZP2>                                                         DWRECV  17
            <SUPP-HEAT-CAP> = <SUPP-HEAT-CAP>                                   DWRECV  18
     &                      + <BASEBOARD-RATING>*<MULTIPLIER>                   DWRECV  19
          ENDDO                                                                 DWRECV  20
        ENDIF                                                                   DWRECV  21
      ENDIF                                                                     DWRECV  22
      IF (ICODE .EQ. 25)  <REHEAT-DELTA-T> = dThcoil                            CCIG7   36
C              IF THE USER DID NOT SPECIFY MIN-CFM-RATIO CALC IT                DESIGN3087
      CFMRM  = CFMRM/((1.0-<DUCT-AIR-LOSS>)*(1.0+<INDUCTION-RATIO>))            DESIGN3088
      IF(<MIN-CFM-RATIO> .EQ. 0.0)                                              DESIGN3089
     &   <MIN-CFM-RATIO> = Min(1., Max(<MIN-OUTSIDE-AIR>,                       -047i    1
     &                                 CFMRM/<SUPPLY-CFM>))                     -047i    2
C              LOOP THROUGH THE ZONE AND SAVE THE RATIO OF SUPPLY               DESIGN3091
C              TO TOTAL ZONE DESIGN FLOWRATE                                    DESIGN3092
 8900 CFMS = 0.                                                                 DESIGN3093
 9890 FORMAT(11X,' WLHP/VPCU  Sizing calculations for ',4A4, /                  DESIGN3107
     311X,12H  GPMDESS = ,F11.2,12H  CLSUMS  = ,F14.0,11H  HTSUMS = ,           DESIGN3108
     4                                          F14.0 /                         DESIGN3109
     511X,12H  FLUVOL  = ,F11.2,12H  WSEGPM  = ,F12.2,11H  WSECLS = ,           DESIGN3110
     6                                          F14.0 /       )                 DESIGN3111
      ZP1    = ISZ                                                              DESIGN3112
      DO 9070 NZ=1,NSZ                                                          DESIGN3113
      ZP2    = <ZP2>                                                            DESIGN3114
      IF(<ZONE-TYPE> .NE. 1)  GOTO 9070                                         DESIGN3115
      CFMS   = CFMS + <CFMAX>*<MULTIPLIER>                                      DESIGN3116
c              save the values for heating and total min-cfm-ratios             -030    32
c              in the zone level keyword (means ZONE can only be in one         -030    33
c              SYSTEM !                                                         -030    34
      IF (DDSTYPE .NE. 0)  THEN                                                 -030    35
          <HMIN-CFM-RATIOZ> = <MINCFMRH>                                        -030    36
          <CMIN-CFM-RATIOZ> = <MINCFMRC>                                        -030    37
          <MIN-CFM-RATIOZ> = <MINCFMR>                                          -030    38
          IF ((<MINCFMR> .LT. 1.0) .OR. (<MINCFMRH> .LT. 1.0))                  -030    39
     $    <VAVFLAG> = 1                                                         -030    40
      ENDIF                                                                     -030    41
 9070 ZP1 = ZP1 + NZD                                                           DESIGN3117
      IF (<SUPPLY-CFM> .GT. 0.)  <SUPPLY/ZONE-CFM> =                            DESIGN3118
     1   <SUPPLY-CFM>/CFMS                                                      DESIGN3119
C              SET THE SIZE OF THE VENTILATION AIR DESICCANT UNIT               DESIGN3120
      <DESC-CFMD> = 0.                                                          DESIGN3121
      IMODE = INT(<DESC-CTRL-MODE>+.1)                                          DESIGN3122
      II = 1                                                                    DESIGN3123
      IF (<DESICCANT> .GT. 0) THEN                                              DESIGN3124
          IF (<DESICCANT-AIR> .LE. 0.) THEN                                     DESIGN3125
              <DESC-CFMD> = <MIN-OUTSIDE-AIR>*<SUPPLY-CFM>                      DESIGN3126
          ELSE                                                                  DESIGN3127
              <DESC-CFMD> = <DESICCANT-AIR>*<SUPPLY-CFM>                        DESIGN3128
          END IF                                                                DESIGN3129
      END IF                                                                    DESIGN3131
      IF (<DESICCANT> .EQ. 3)  THEN                                             DESIGN3134
          IF (<DESICCANT-AIR> .GT. <MIN-OUTSIDE-AIR>) THEN                      DESIGN3135
              TDD = (DBTMAX*<MIN-OUTSIDE-AIR> + TRMAX*(<DESICCANT-AIR>-         DESIGN3136
     1              <MIN-OUTSIDE-AIR>))/<DESICCANT-AIR>                         DESIGN3137
              WDD = (WMAX*<MIN-OUTSIDE-AIR> + WR*(<DESICCANT-AIR>-              DESIGN3138
     1              <MIN-OUTSIDE-AIR>))/<DESICCANT-AIR>                         DESIGN3139
          ELSE                                                                  DESIGN3140
              TDD = DBTMAX                                                      DESIGN3141
              WDD = WMAX                                                        DESIGN3142
          END IF                                                                DESIGN3143
          WBDD = WBFS(TDD,WDD,BLDGP)                                            DESIGN3144
          IF (RCFMc .GT. 0.)  THEN                                              ERV     84
            H2OMAX = QLMAX/1076. + 4.5*CINFMX*(WMAX-WRMAX)                      ERV     85
            Rmix   = MIN(1., <SUPPLY-CFM>*(1.-<MIN-OUTSIDE-AIR>)/RCFMc)         ERV     86
            H2OMAX = H2OMAX * Rmix                                              ERV     87
          ELSE                                                                  ERV     88
            H2OMAX = 0.                                                         ERV     89
          ENDIF                                                                 ERV     90
          CALL DESDSC(<DESC-CFMD>,TDD,WDD*7000.,WBDD,H2OMAX,                    DESIGN3146
     1                WRMAX*7000.,.85,.50,.85,<HEAT-EXCH-EFF>,                  DESIGN3147
     2                <HEAT-EXCH-DELP>,<DIRECT-EFF>,IMODE,                      DESIGN3148
     3                <DESC-VELD>,DBOAD,WOAD,<REACT-CFMD>,                      DESIGN3149
     4                <REACT-TEMPD>,DGASD,<DESC-FANKWD>,                        DESIGN3150
     5                <REACT-FANKWD>,<DESC-MOTORKWD>,<DESC-TOTKWD>)             DESIGN3151
          WOAD = WOAD/7000.                                                     DESIGN3152
      END IF                                                                    DESIGN3153
      <DESICCANT-CFM> = <DESC-CFMD>                                             DESIGN3154
      IF (<DESC-LOOP> .GT. 0)  THEN                                             ERV     91
        <DESC_COIL_Q> = -DGASD * 0.85                                           ERV     92
        DGASD         = 0.                                                      ERV     93
      ENDIF                                                                     ERV     94
C              SET DEFAULTS FOR NOMINAL CFM FOR DESC UNITS                      DESIGN3155
      IF ((<DESICCANT> .EQ. 1) .AND. (<DESC-NOM-CFM> .LE. 0.))                  DESIGN3156
     1   <DESC-NOM-CFM> = 4500.                                                 DESIGN3157
      IF ((<DESICCANT> .EQ. 2) .AND. (<DESC-NOM-CFM> .LE. 0.))                  DESIGN3158
     1   <DESC-NOM-CFM> = 5000.                                                 DESIGN3159
C               IF THERE IS AN EVAP COOLER, SET THE DESIGN CFM                  DESIGN3160
      IF (<EVAP-CL-TYPE> .GT. 0) THEN                                           DESIGN3161
          IF (<EVAP-CL-AIR> .LE. 0.) THEN                                       DESIGN3162
              <EVAP-CFMD> = <MIN-OUTSIDE-AIR>*<SUPPLY-CFM>                      DESIGN3163
          ELSE                                                                  DESIGN3164
              <EVAP-CFMD> = <EVAP-CL-AIR>*<SUPPLY-CFM>                          DESIGN3165
          END IF                                                                DESIGN3166
      END IF                                                                    DESIGN3167
      IF (<SWAMP-COOLER> .EQ. 1) THEN                                           DESIGN3168
          <EVAP-CFMD> = <SWAMP-COOLER-CFM>                                      DESIGN3169
          <EVAP-CFM> = <SWAMP-COOLER-CFM>                                       DESIGN3170
      END IF                                                                    DESIGN3171
 9000 CONTINUE                                                                  DESIGN3172
c              Modify coil capacities by sizing ratios                          -039     1
      IF (IUNIT .EQ. 1  .OR.  IUNIT .EQ. 2)  THEN                               -039     2
c              No central heat/cool for zonal systems                           -039     3
        <HEATING-CAPACITY> = 0.                                                 -039     4
        <COOLING-CAPACITY> = 0.                                                 -039     5
      ELSE                                                                      -039     6
        IF (<HEAT-SIZING-RAT> .GT. 0. )  THEN                                   -039     7
          <HEATING-CAPACITY> = <HEATING-CAPACITY>*<HEAT-SIZING-RAT>             -039     8
          <PREHEAT-CAPACITY> = <PREHEAT-CAPACITY>*<HEAT-SIZING-RAT>             -039     9
        ENDIF                                                                   -039    10
        IF (<COOL-SIZING-RAT> .GT. 0. )                                         -039    11
     &    <COOLING-CAPACITY>=<COOLING-CAPACITY>*<COOL-SIZING-RAT>               -039    12
      ENDIF                                                                     -039    13
      ZP1 = ISZ                                                                 -039    14
      DO  I=1,NSZ                                                               -039    15
        ZP2 = <ZP2>                                                             -044e  105
        IF (<HEAT-SIZING-RAT> .GT. 0. )  THEN                                   -039    16
          <HEATCAPZ>         = <HEATCAPZ> * <HEAT-SIZING-RAT>                   -039    17
          <BASEBOARD-RATING> = <BASEBOARD-RATING>                               -039    18
     $                                    * <HEAT-SIZING-RAT>                   -039    19
        ENDIF                                                                   -039    20
        IF (<COOL-SIZING-RAT> .GT. 0.)                                          -039    21
     &    <COOLCAPZ> = <COOLCAPZ> * <COOL-SIZING-RAT>                           -039    22
        ZP1 = ZP1 + NZD                                                         -039    23
      ENDDO                                                                     -039    24
c                                                                               DESIGN3187
c              set return fan temp rise to zero if a relief fan                 DESIGN3188
      IF (<RETURN-FAN-LOC> .EQ. 3)  <RETURN-DELTA-T> = 0.                       DESIGN3189
c                                                                               HVAC22  27
c              Set the maximum supply kw for use in the 5-minute peak           HVAC22  28
c              load allocation routines                                         HVAC22  29
      CALL FANPWR_Design                                                        HVAC22  30
c                                                                               ERV     95
c              Design calcs for exhaust-air heat recovery                       ERV     96
        IF (<sy:RECOVER-EXH> .EQ. 1)                                            Bug40    8
     &    CALL ERVentilator(100, <sy;ERVentilator>, xx, PO, xx,xx,xx,xx)        ERV     98
      IF (ICODE .EQ. 28  .AND.  <AIR/TEMP-CONTROL> .EQ. 2)  THEN                -042f    6
c              PVVT staged-volume                                               -042f    7
c              Transfer keyword values into working array and calculate         StgVol   3
c              setpoint temperatures for each stage                             StgVol   4
c              First, mechanical cooling stages, excluding floating             StgVol   5
c              and economizer                                                   StgVol   6
        PLRlast = 0.                                                            StgVol   7
        DO  KV=1,<NUM-COOL-STAGES>                                              StgVol   8
          NV = KV + 2                             ! skip floating, econo        StgVol   9
          IF (KV .NE. <NUM-COOL-STAGES>)  THEN    ! low stage                   StgVol  10
            <sy;StgVCoolPLR>  = <COOL-STAGES>                                   StgVol  11
            <sy;StgVCoolTset> = <COOL-SET-T> + <COOL-STAGES-DT>                 StgVol  12
          ELSE                                    ! high stage                  StgVol  13
            <sy;StgVCoolPLR>  = 1.0                                             StgVol  14
            <sy;StgVCoolTset> = <COOL-SET-T>                                    StgVol  15
          ENDIF                                                                 StgVol  16
          IF (<sy;StgVCoolPLR> .LE. PLRlast)  Call StageError                   -048     7
          PLRlast = <sy;StgVCoolPLR>                                            StgVol  18
        ENDDO                                                                   StgVol  19
        <sy;StgVNumClStgs> = NV                                                 StgVol  20
c              Mechanical heating stages, excluding floating                    StgVol  21
        PLRlast = 0.                                                            StgVol  22
        DO  KV=1,<NUM-HEAT-STAGES>                                              StgVol  23
          NV = KV + 1                             ! skip floating               StgVol  24
          IF (KV .NE. <NUM-HEAT-STAGES>)  THEN    ! low stage                   StgVol  25
            <sy;StgVHeatPLR>  = <HEAT-STAGES>                                   StgVol  26
            <sy;StgVHeatTset> = <HEAT-SET-T> + <HEAT-STAGES-DT>                 StgVol  27
          ELSE                                    ! high stage                  StgVol  28
            <sy;StgVHeatPLR>  = 1.0                                             StgVol  29
            <sy;StgVHeatTset> = <HEAT-SET-T>                                    StgVol  30
          ENDIF                                                                 StgVol  31
          IF (<sy;StgVHeatPLR> .LE. PLRlast)  Call StageError                   -048     8
          PLRlast = <sy;StgVHeatPLR>                                            StgVol  33
        ENDDO                                                                   StgVol  34
c              If a heat pump, create one extra stage for                       StgVol  35
c              supplemental heat                                                StgVol  36
        IF (<HEAT-SOURCE> .EQ. 4 .OR. <HEAT-SOURCE> .EQ. 9)  THEN               StgVol  37
          NV = NV + 1                                                           StgVol  38
          <sy;StgVHeatPLR>  = 1.                                                StgVol  39
          <sy;StgVHeatTset> = <HEAT-SET-T>                                      StgVol  40
        ENDIF                                                                   StgVol  41
        <sy;StgVNumHtStgs> = NV                                                 StgVol  42
      ELSEIF (ICODE .EQ. 28  .AND.  <AIR/TEMP-CONTROL> .EQ. 3)  THEN            -042f    8
c              PVVT 2-speed fan/compressor                                      -042f    9
c              First, mechanical cooling stages, excluding floating             -042f   10
c              and economizer                                                   -042f   11
        <NUM-COOL-STAGES> = 2                                                   -042f   12
        PLRlast = 0.                                                            -042f   13
        DO  KV=1,<NUM-COOL-STAGES>                                              -042f   14
          NV = KV + 2                             ! skip floating, econo        -042f   15
          IF (KV .NE. <NUM-COOL-STAGES>)  THEN    ! low stage                   -042f   16
            <sy;StgVCoolPLR>  = <COOL-STAGES>                                   -042f   17
          ELSE                                    ! high stage                  -042f   18
            <sy;StgVCoolPLR>  = 1.0                                             -042f   19
          ENDIF                                                                 -042f   20
          IF (<sy;StgVCoolPLR> .LE. PLRlast)  Call StageError                   -048     9
          PLRlast = <sy;StgVCoolPLR>                                            -042f   22
        ENDDO                                                                   -042f   23
        <sy;StgVNumClStgs> = NV                                                 -042f   24
c              Mechanical heating stages, excluding floating                    -042f   25
        <NUM-HEAT-STAGES> = 2                                                   -042f   26
        PLRlast = 0.                                                            -042f   27
        DO  KV=1,<NUM-HEAT-STAGES>                                              -042f   28
          NV = KV + 1                             ! skip floating               -042f   29
          IF (KV .NE. <NUM-HEAT-STAGES>)  THEN    ! low stage                   -042f   30
            <sy;StgVHeatPLR>  = <HEAT-STAGES>                                   -042f   31
          ELSE                                    ! high stage                  -042f   32
            <sy;StgVHeatPLR>  = 1.0                                             -042f   33
          ENDIF                                                                 -042f   34
          IF (<sy;StgVHeatPLR> .LE. PLRlast)  Call StageError                   -048    10
          PLRlast = <sy;StgVHeatPLR>                                            -042f   36
        ENDDO                                                                   -042f   37
c              If a heat pump, create one extra stage for                       -042f   38
c              supplemental heat                                                -042f   39
        IF (<HEAT-SOURCE> .EQ. 4 .OR. <HEAT-SOURCE> .EQ. 9)  THEN               -042f   40
          NV = NV + 1                                                           -042f   41
          <sy;StgVHeatPLR>  = 1.                                                -042f   42
        ENDIF                                                                   -042f   43
        <sy;StgVNumHtStgs> = NV                                                 -042f   44
      ENDIF  ! Staged-volume                                                    -042f   45
c                                                                               HVAC22  31
c              End of systems loop                                              -039    25
 9006 CONTINUE                                                                  -039    26
c             error formats                                                     HVAC   135
 9423 FORMAT(14X,'In ',8A4,', heating coil leaving'                    /        HVAC14  35
     &       14X,'temperature must be at least 10F lower than entering'/        HVAC14  36
     &       14X,'water temp.  EWT = ',F5.1,' LAT = ',F5.1             )        HVAC14  37
 9424 FORMAT(14X,'In ',8A4,', cooling coil leaving temperature must'/           -42c   113
     $       14X,'be at least 6F higher than entering water temp.')             -42c   114
      DO NS1=1,NSYS                                                             -044c  196
        NSP1 = IS + (NS1-1)*NSS                                                 -044c  197
        OUTA = 0.                                                               -044c  198
        DO NS=1,NSYS                                                            -044c  199
          NSP = IS + (NS-1)*NSS                                                 -044c  200
          IT  = <SYSTEM-TYPE>                                                   -044c  201
          IF((IT.NE. 1).AND.(IT.NE. 8).AND.(IT.NE.10).AND.                      -044c  202
     $       (IT.NE.12).AND.(IT.NE.17).AND.(IT.NE.27).AND.                      -044c  203
     $       (<OA-FROM-SYSTEM> .EQ. NSP1).AND.                                  -044c  204
     $       (<OA-FROM-SYSTEM> .NE. NSP)) THEN                                  -044c  205
            IF(NSP .LT. NSP1) THEN                                              -044c  206
              CALL MSGSIM(-1,II,II,II,II)                                       -044c  207
              WRITE(IOUTPT,9901) (<SYSTEM-NAME>,II=1,8)                         -044c  208
 9901 FORMAT(14X,8A4,' defined before its OA-FROM-SYSTEM. This'/                -044c  209
     $       14X,'will cause incorrect OA temperature calculation',             -044c  210
     $'. Move this SYSTEM to be'/                                               -044c  211
     $       14X,'defined before its OA-FROM-SYSTEM in the project',            -044c  212
     $' BDL input file.')                                                       -044c  213
              IFLAG  = 1                                                        -044c  214
            ENDIF                                                               -044c  215
            IF((IT.NE. 6).AND. (IT.NE. 7).AND. (IT.NE.15).AND.                  -044c  216
     $         (IT.NE.22)) THEN                                                 -044c  217
               ISZ = <ISZONES>                                                  -044c  218
               NSZ = <NZONES>                                                   -044c  219
               DO  NZ=1,NSZ                                                     -044c  220
                 ZP1 = ISZ + (NZ-1)*NZD                                         -044c  221
                 ZP2 = <ZP2>                                                    -044c  222
                 IF (<ZONE-TYPE> .EQ. 1) OUTA = OUTA + <VENTMIN>                -044c  223
               ENDDO                                                            -044c  224
            ELSE                                                                -044c  225
              OUTA = OUTA + <MIN-OUTSIDE-AIR>*<SUPPLY-CFM>                      -044c  226
            ENDIF                                                               -044c  227
            IF((<OA-CONTROL> .NE. 0).OR.(<MIN-OA-METHOD>.NE.0).OR.              -044c  228
     $         (<MIN-AIR-SCH>.NE.0)) THEN                                       -044c  229
              CALL MSGSIM(-2,II,II,II,II)                                       -044c  230
              WRITE(IOUTPT,9902) (<SYSTEM-NAME>,II=1,8)                         -044c  231
 9902 FORMAT(14X,8A4,' has a MIN-AIR-SCH, OA-CONTROL'/                          -044c  232
     $       14X,'other than FIXED and/or a MIN-OA-METHOD other than',          -044c  233
     $' FRACTION-OF-DESIGN'/                                                    -044c  234
     $       14X,'along with having a specified OA-FROM-SYSTEM. This ',         -044c  235
     $'may cause incorrect'/                                                    -044c  236
     $       14X,'OA load/flow calculation for its OA-FROM-SYSTEM.')            -044c  237
            ENDIF                                                               -044c  238
          END IF                                                                -044c  239
        ENDDO                                                                   -044c  240
        NSP = NSP1                                                              -044c  241
        IT  = <SYSTEM-TYPE>                                                     -044c  242
        IF(OUTA .GT. 0.) THEN                                                   -044c  243
          IF((IT.EQ. 1).OR.(IT.EQ. 6).OR.(IT.EQ. 7).OR.(IT.EQ. 8).OR.           -044c  244
     $       (IT.EQ. 9).OR.(IT.EQ.15).OR.(IT.EQ.17).OR.(IT.EQ.22).OR.           -044c  245
     $       (IT.EQ.27)) THEN                                                   -044c  246
            CALL MSGSIM(-1,II,II,II,II)                                         -044c  247
            WRITE(IOUTPT,9903) (<SYSTEM-NAME>,II=1,8)                           -044c  248
 9903 FORMAT(14X,8A4,' is not a legal SYSTEM-TYPE to be'/                       -044c  249
     $       14X,'an OA-FROM-SYSTEM. SZRH/PSZ/RHFS/MZS/PMZS/DDS/VAVS/',         -044c  250
     $'PVAVS/PVVT'/                                                             -044c  251
     $       14X,'RHFS/IU/PIU/PTGSD/EVAP-COOL/RESYS2 are allowed.')             -044c  252
            IFLAG  = 1                                                          -044c  253
          ENDIF                                                                 -044c  254
          IF(<NumCondZONES> .GT. 1) THEN                                        -044c  255
            CALL MSGSIM(-3,II,II,II,II)                                         -044c  256
            WRITE(IOUTPT,9904) (<SYSTEM-NAME>,II=1,8),<NumCondZONES>            -044c  257
 9904 FORMAT(14X,8A4,' defined as an OA-FROM-SYSTEM'/                           -044c  258
     $       14X,'has',I4' CONDITIONED ZONEs - only one was expected.')         -044c  259
          ENDIF                                                                 -044c  260
          ISZ  = <ISZONES>                                                      -044c  261
          NSZ  = <NZONES>                                                       -044c  262
          ECFM = 0.                                                             -044c  263
          CFMM = 0.                                                             -044c  264
          CFMH = 0.                                                             -044c  265
          DO  NZ=1,NSZ                                                          -044c  266
            ZP1 = ISZ + (NZ-1)*NZD                                              -044c  267
            ZP2 = <ZP2>                                                         -044c  268
            IF (<ZONE-TYPE> .EQ. 1) THEN                                        -044c  269
              ECFM = ECFM + <EXHAUST-CFM>*<MULTIPLIER>                          -044c  270
              CFMM = CFMM + <CFMAX>*<MINCFMR>*<MULTIPLIER>                      -044c  271
              CFMH = CFMH + <CFMAXH>*<MULTIPLIER>                               -044c  272
            ENDIF                                                               -044c  273
          ENDDO                                                                 -044c  274
          IF(OUTA+ECFM .GT. <SUPPLY-CFM>) THEN                                  -044c  275
            CALL MSGSIM(-2,II,II,II,II)                                         -044c  276
            WRITE(IOUTPT,9905) (<SYSTEM-NAME>,II=1,8),OUTA,<SUPPLY-CFM>         -044c  277
 9905 FORMAT(14X,8A4,' defined as an OA-FROM-SYSTEM'/                           -044c  278
     $       14X,'has OA flow requirement of',F10.0,' CFM'/                     -044c  279
     $       14X,'But its calculated/specified SUPPLY-FLOW is only ',           -044c  280
     $F10.0,' CFM'/                                                             -044c  281
     $       14X,'Its SUPPLY-CFM has been reset to meet requirement, ',         -044c  282
     $'however it is'/                                                          -044c  283
     $       14X,'strongly recommended you re-run with ',                       -044c  284
     $'this SUPPLY-FLOW specified.')                                            -044c  285
            DO  NZ=1,NSZ                                                        -044c  286
              ZP1 = ISZ + (NZ-1)*NZD                                            -044c  287
              ZP2 = <ZP2>                                                       -044c  288
              IF (<ZONE-TYPE> .EQ. 1) THEN                                      -044c  289
                <CFMAX>   = (OUTA/<SUPPLY-CFM>)*<CFMAX> + <EXHAUST-CFM>         -044c  290
                <CFMAXH>  = <CFMAX>                                             -044c  291
                <MINCFMR> = 1.0                                                 -044c  292
              ENDIF                                                             -044c  293
            ENDDO                                                               -044c  294
c             Adjust coil capacities                                            -044c  295
            XX = (OUTA+ECFM)/<SUPPLY-CFM>                                       -044c  296
            <COOLING-CAPACITY> = <COOLING-CAPACITY>*XX                          -044c  297
            <COOL-SH-CAP>      = <COOL-SH-CAP>*XX                               -044c  298
            <HEATING-CAPACITY> = <HEATING-CAPACITY>*XX                          -044c  299
            <PREHEAT-CAPACITY> = <PREHEAT-CAPACITY>*XX                          -044c  300
            IF (<CHW-LOOP> .GT. 0)  THEN                                        -044c  301
              <CHWCAP6544S> = <COOLING-CAPACITY>                                -044c  302
            ENDIF                                                               -044c  303
            <SUPPLY-CFM> = OUTA+ECFM                                            -044c  304
            <RETURN-CFM> = OUTA-ECFMrf                                          -046   158
            <MIN-OUTSIDE-AIR> = (OUTA+ECFM)/<SUPPLY-CFM>                        -044c  306
          ENDIF                                                                 -044c  307
          IF((OUTA+ECFM .GT. CFMM).OR.(OUTA+ECFM .GT. CFMH)) THEN               -044c  308
            CALL MSGSIM(-2,II,II,II,II)                                         -044c  309
            WRITE(IOUTPT,9906) (<SYSTEM-NAME>,II=1,8),OUTA,CFMM                 -044c  310
 9906 FORMAT(14X,8A4,' defined as an OA-FROM-SYSTEM'/                           -044c  311
     $       14X,'has OA flow requirement of',F10.0,' CFM'/                     -044c  312
     $       14X,'But its calculated/specified minimum SUPPLY-FLOW ',           -044c  313
     $' is only ',F10.0,' CFM'/                                                 -044c  314
     $       14X,'Its MIN-FLOW-RATIO has been reset to meet requirem',          -044c  315
     $'ent, however it'/                                                        -044c  316
     $       14X,'is strongly recommended you re-run with ',                    -044c  317
     $'this MIN-FLOW-RATIO specified.')                                         -044c  318
            XX = (OUTA+ECFM)/CFMM                                               -044c  319
            YY = (OUTA+ECFM)/CFMH                                               -044c  320
            DO  NZ=1,NSZ                                                        -044c  321
              ZP1 = ISZ + (NZ-1)*NZD                                            -044c  322
              ZP2 = <ZP2>                                                       -044c  323
              IF (<ZONE-TYPE> .EQ. 1) THEN                                      -044c  324
                IF(OUTA+ECFM .GT. CFMM)                                         -044c  325
     $            <MINCFMR> = AMIN1(1.,<MINCFMR>*XX)                            -044c  326
                IF(<CFMAXH>.LT.<CFMAX>) <CFMAXH> = <CFMAXH>*YY                  -044c  327
              ENDIF                                                             -044c  328
            ENDDO                                                               -044c  329
c             Adjust coil capacities                                            -044c  330
            IF(OUTA+ECFM .GT. CFMH)                                             -044c  331
     $        <HEATING-CAPACITY> = <HEATING-CAPACITY>*YY                        -044c  332
          ENDIF                                                                 -044c  333
          IF((<MIN-AIR-SCH> .NE. 0).OR.(<MIN-OA-METHOD> .NE. 0)) THEN           -044c  334
            CALL MSGSIM(-2,II,II,II,II)                                         -044c  335
            WRITE(IOUTPT,9907) (<SYSTEM-NAME>,II=1,8)                           -044c  336
 9907 FORMAT(14X,8A4,' has MIN-OA-METHOD other than'/                           -044c  337
     $       14X,'FRACTION-OF-DESIGN and/or a MIN-AIR-SCH along with ',         -044c  338
     $'being specified as'/                                                     -044c  339
     $       14X,'an OA-FROM-SYSTEM. This may cause incorrect OA load',         -044c  340
     $'/flow calculation.')                                                     -044c  341
          ENDIF                                                                 -044c  342
          IF(<SUPPLY-CFM>*<MIN-OUTSIDE-AIR> .LT. OUTA+ECFM) THEN                -044c  343
            CALL MSGSIM(-2,II,II,II,II)                                         -044c  344
            WRITE(IOUTPT,9908) (<SYSTEM-NAME>,II=1,8),OUTA,                     -044c  345
     $      <MIN-OUTSIDE-AIR>*<SUPPLY-CFM>                                      -044c  346
 9908 FORMAT(14X,8A4,' defined as an OA-FROM-SYSTEM'/                           -044c  347
     $       14X,'has OA flow requirement of',F10.0,' CFM but its ',            -044c  348
     $'calculated/specified'/                                                   -044c  349
     $       14X,'OA flow is only ',F10.0,' CFM.'/                              -044c  350
     $       14X,'Its MIN-OUTSIDE-AIR has been reset to meet the ',             -044c  351
     $'requirement, however'/                                                   -044c  352
     $       14X,'it is strongly recommended you re-run with ',                 -044c  353
     $'this MIN-OUTSIDE-AIR specified.')                                        -044c  354
            <MIN-OUTSIDE-AIR> = (OUTA+ECFM)/<SUPPLY-CFM>                        -044c  355
          ENDIF                                                                 -044c  356
        ENDIF                                                                   -044c  357
c              If EXHAUST-SOURCE is infiltration, EXHAUST-CFM was               -046   159
c              temporarily zeroed for the design calcs.                         -046   160
        ISZ = <ISZONES>                                                         -046   161
        NSZ = <NZONES>                                                          -046   162
        DO  NZ=1,NSZ                                                            -046   163
          ZP1 = ISZ + (NZ-1)*NZD                                                -046   164
          ZP2 = <ZP2>                                                           -046   165
          IF (<EXHAUST-SOURCE> .EQ. 2  .or.                                     -047b   16
     &        <EXHAUST-SOURCE> .eq. 3)  <EXHAUST-CFM> = <zn.ExhCFM>             -047b   17
        ENDDO                                                                   -046   167
                                                                                -046   168
      ENDDO                                                                     -044c  358
C********************** run function : DESIGN-1 ************************        DESIGN3696
       IF( MSYSF(15) .NE. 0 )   CALL  FINTS( MSYSF(15), 1. )                    DESIGN3697
C*******************************************************************            DESIGN3698
c                                                                               HVAC   140
c              setup the circulation loops and primary equipment                HVAC   141
      CALL PLANTdes                                                             HVAC4   11
c                                                                               HVAC   143
       IF((IFLAG .EQ. 0) .AND. (IwinReturn .eq. 0))    RETURN                   -44c3a  22
C              PRINT A DAYFILE ERROR MESSAGE                                    DESIGN3700
      WRITE(IOUTPT,9999)                                                        DESIGN3701
 9999 FORMAT(45H1****** FATAL DESIGN ERRORS IN SYSTEMS ******  )                DESIGN3702
      call MessageBox( NULL,'Errors during HVAC simulation setup or '           -44c3a  23
     $     //'design calculations. See .sim file for details. '                 -44c3a  24
     $     //'Terminating Run.'//char(0),                                       -44c3a  25
     $     'HVAC Simulation Setup or Design/Sizing Errors'//char(0),            -44c3a  26
     $   MB_OK+MB_ICONEXCLAMATION+MB_TASKMODAL )                                -44c3a  27
      IwinReturn = 1                                                            WinRet  39
      RETURN                                                                    DESIGN3704
c                                                                               StgVol  44
c                                                                               StgVol  45
      CONTAINS                                                                  -048    11
c=============== StageError =================================================== -048    12
      Subroutine StageError                                                     -048    13
c                                                                               StgVol  48
      CALL MSGSIM(-1,II,II,II,II)                                               StgVol  49
      WRITE (IOUTPT,9004) (<SYSTEM-NAME>,II=1,8)                                StgVol  50
      IwinReturn = 1                                                            StgVol  54
c                                                                               StgVol  57
 9004 FORMAT(                                                                   StgVol  58
     &14x,'In SYSTEM: ',8A4,' the staged-volume'                      /         StgVol  59
     &14x,'capacity factors must be listed in ascending order.'       )         StgVol  60
                                                                                -048    14
      END Subroutine StageError                                                 -048    15
                                                                                -048    16
      END                                                                       DESIGN3705
      SUBROUTINE DESIND                                                         DESIND   2
C                                                                               DESIND   3
C                            THIS ROUTINE PERFORMS THE SIZING                   DESIND   4
C                            CALCS FOR THE TWO AND FOUR PIPE                    DESIND   5
C                            INDUCTION UNIT ZONE COILS                          DESIND   6
C                                                                               DESIND   7
C              DEVELOPED BY                                                     -130     1
C                            J. J. Hirsch & S. D. Gates                         -130     2
C                            James J. Hirsch & Associates                       -130     3
C                            Camarillo, California                              -130     4
C              BASED UPON CODE DEVELOPED BY J. J. Hirsch and                    -130     5
C                            W. F. Buhl                                         -130     6
C                            A. E. Erdem                                        -130     7
C                            Lawrence Berkeley National Laboratory              -130     8
C                            University of California                           -130     9
Copyright (c) 1997 by James J. Hirsch. All Rights Reserved. Unpublished         -130    10
c rights reserved under the Copyright Laws of the United States.                -130    11
c RESTRICTED RIGHTS NOTICE: Government use, reproduction or disclosure          -130    12
c is subject to restrictions as set forth in Rights in Data (g)(3) in           -130    13
c UC/LBL purchase order 4607010 with J.J. Hirsch & Associates.                  -130    14
C                                                                               DESIND   9
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON  /BUF   / DBUF(52,9999), IZREF(9999),                              -048a    8
     &                 DAYMTR(61,24), ElecPeaks5(13,25,24)                      Time     2
      DIMENSION        IDBUF(52,9999), OBUF(42,24,4), IOBUF(42,24,4)            -048a    9
      EQUIVALENCE      (DBUF(1,1),IDBUF(1,1)),                                  /BUF/    5
     1                 (OBUF(1,1,1),DBUF(1,1)),                                 /BUF/    6
     2                 (OBUF(1,1,1),IOBUF(1,1,1))                               /BUF/    7
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                 IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                        /FILES/  3
     2               , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                   /FILES/  4
     3                 IHRREP(3), IHRPAS(2)                                     /FILES/  5
      common  /FNSYS/  ISKIPS, MSYSF(120)                                       /FNSYS/  2
      COMMON  /MISCD / TEMPS(4,9999),CONS(5),TEMPSL(9999),                      -048a   10
     1                 BLDGQH,BLDGQC,BLDGQL,BLDGP,BPMULT,                       /MISCD/  3
     $                 DBTMIN,DBTMAX,WMIN,WMAX,NSPZ(9999),                      -048a   11
     3                 DQ, DTP, DTR, DTS, FPI, PLRCC , POM, TC2, TDM,           /MISCD/  5
     4                 TRA,WCOL,WCOLM,WMM,YPI,KWBTU,BTUKW,UNFILD,Unusedm        RemPA   45
      REAL             KWBTU                                                    /MISCD/  7
      COMMON  /PTRPLT/ Ipm,Ilp,Ich,Ibl,Idw,Itw,Ipv,Ign,Itk,Ihx,                 PV       1
     &                 Iec,Ilm,Iem,Ifm,Ism,Icm,Imm,Imc,Igl,Isp2,                XFC2     1
     &                 Ispare(5),  Ipe,                                         HVAC19   3
     &                 Npm,Nlp,Nch,Nbl,Ndw,Ntw,Npv,Ngn,Ntk,Nhx,                 PV       2
     &                 Nec,Nlm,Nem,Nfm,Nsm,Ncm,Nmm,Nmc,Ngl,Nsp2,                XFC2     2
     &                 Nspare(5),  Npe,                                         HVAC19   6
     &                 Lpm,Llp,Lch,Lbl,Ldw,Ltw,Lpv,Lgn,Ltk,Lhx,                 PV       3
     &                 Lec,Llm,Lem,Lfm,Lsm,Lcm,Lmm,Lmc,Lgl,Lsp2,                XFC2     3
     &                 Lspare(5),  Lpe,                                         HVAC19   9
     &                 Jpm,Jlp,Jch,Jbl,Jdw,Jtw,Jpv,Jgn,Jtk,Jhx,                 PV       4
     &                 Jec,Jlm,Jem,Jfm,Jsm,Jcm,    Jmc,Jgl,                     HVAC19  11
     &                 Jpe, kpr, NumMeters, NumIntHX                            XFC1     1
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      COMMON  /REPORT/ IREPRT(4,37),IPRG,IUNIQV(100),IUNIQS(100),IUNIQL         HVAC14   4
      V(DB,W,P) = 0.754*(DB+459.7)*(1.0+1.605*W)/P                              V        2
C                                                                               DESIND  19
C              COOLING LOAD CALC FOR COILS IN INDUCTION UNITS                   DESIND  20
C                                                                               DESIND  21
C********************** run function : DESIND-0 *********************           DESIND  22
      IF( MSYSF(16) .NE. 0 )   CALL  FINTS( MSYSF(16), 0. )                     DESIND  23
      IF( ISKIPS   .NE. 0 )  GOTO  98                                           DESIND  24
C*******************************************************************            DESIND  25
C              CALC SUPPLY AIR TEMP                                             DESIND  26
   90 TS     = (<MIN-SUPPLY-T>+<INDUCTION-RATIO>*<DESIGN-COOL-T>)               DESIND  27
     1     /(1.0+<INDUCTION-RATIO>)                                             DESIND  28
C              CALC 1.08 VALUE                                                  DESIND  29
      CONS1  = (.24+.44*0.0)*60.0/V(TS,0.0,BLDGP)                               DESIND  30
C              CALC TEMP NEEDED FOR DESIGN LOAD                                 DESIND  31
      TCZ    = <DESIGN-COOL-T> - <ERMAXD>/(CONS1*<CFMAX>)                       DESIND  32
C              CALC ZONE COIL CAP                                               DESIND  33
      <COOLCAPZ> = AMAX1(0.0,CONS1*<CFMAX>*(TS-TCZ))                            DESIND  34
      IF(<COOLING-CAPZ> .EQ. 0.0)  GOTO 92                                      DESIND  35
      <ERMAXD> = <ERMAXD> - <COOLCAPZ> + <COOLING-CAPZ>                         DESIND  36
      <COOLCAPZ> = <COOLING-CAPZ>                                               DESIND  37
c              CHW coil nominal capacity at 65F EWB and 44F EWT.  Assume        DESIND  38
c              constant EWB of 60F all hours for zone induction coils.          DESIND  39
   92 IF (<CHW-LOOPZ> .GT. 0)  THEN                                             HVAC6  116
        JLP = <CHW-LOOPZ>                                                       HVAC6  117
        <CHWCAP6544Z> = <COOLCAPZ>                                              HVAC6  118
     1                 / CVAL(<CHW-CAP-FEWBEWT>, 60.,<lp:DESIGN-COOL-T>)        ChlrHP  24
      ENDIF                                                                     HVAC6  120
      IF(IREPRT(2,34) .NE. 0)                                                   IREPRT  37
     1WRITE(IOUTPT,9092) (<ZONE-NAME>,II=1,8),TS,TCZ,<CHWCAP6544Z>              -42c   115
 9092 FORMAT(/' ZONE = ',8A4,' Induction unit sizing variables'/                -42c   116
     $ ' TS = ',F5.1,' TCZ =',F5.1,' CHWCAP6544Z =',F6.0)                       -42c   117
C              HEATING LOAD CALC                                                DESIND  46
C             Calc zone coil design entering temp                               -131   153
      TS     = (<MIN-SUPPLY-T>+<INDUCTION-RATIO>*<DESIGN-HEAT-T>)               -131   154
     1          /(1.0+<INDUCTION-RATIO>)                                        -131   155
      CONS1  = (.24+.44*0.0)*60.0/V(TS,0.0,BLDGP)                               -131   156
      IF(<HEATING-CAPZ> .EQ. 0.0) THEN                                          -131   157
C             Calc coil capacity                                                -131   158
        IF(<MAX-SUPPLY-T> .GT. <DESIGN-HEAT-T>)  THEN                           -131   159
          THZ = <MAX-SUPPLY-T>                                                  -131   160
          <ERMIND> = CONS1*<CFMAX>*(<DESIGN-HEAT-T>-THZ)                        -131   161
        ELSE                                                                    -131   162
          THZ = <DESIGN-HEAT-T> - AMIN1(0.0,<ERMIND>-<BASEBOARD-RATING>)        -131   163
     1                            /(CONS1*<CFMAX>)                              -131   164
        ENDIF                                                                   -131   165
        <HEATCAPZ> = AMIN1(0.0,CONS1*<CFMAX>*(TS-THZ))                          -131   166
      ELSE                                                                      -131   167
C             Use specified coil capacity                                       -131   168
        <ERMIND>   = <HEATING-CAPZ> - CONS1*<CFMAX>*(TS-<DESIGN-HEAT-T>)        -131   169
        <HEATCAPZ> = <HEATING-CAPZ>                                             -131   170
      ENDIF                                                                     -131   171
   98 IF (<HW-LOOPZ> .GT. 0)  THEN                                              HVAC6  121
        JLP = <HW-LOOPZ>                                                        HVAC6  122
        <HWDESDTZ> = TS - <lp:DESIGN-HEAT-T>                                    ChlrHP  25
      ENDIF                                                                     HVAC6  124
C********************** run function : DESIND-1 *********************           DESIND  62
      IF( MSYSF(17) .NE. 0 )   CALL  FINTS( MSYSF(17), 1. )                     DESIND  63
C*******************************************************************            DESIND  64
      IF( IREPRT(2,34) .NE. 0 )                                                 IREPRT  38
     1WRITE(IOUTPT,9098) TS,THZ, <HWDESDTZ>, <lp:HT-SETPT-T>                    HVAC16  69
 9098 FORMAT(6H TS = ,F5.1,6H THZ =,F5.1 /                                      DESIND  67
     1        ' HWDESDTZ =', F10.0,' HW-SUPPLY-T =',F10.0)                      DESIND  68
      RETURN                                                                    DESIND  69
      END                                                                       DESIND  70
      SUBROUTINE DESPIU                                                         DESPIU   2
C                                                                               DESPIU   3
C              CALCULATE DESIGN QUANTITIES FOR ZONES WITH PIU                   DESPIU   4
C              TERMINAL UNITS                                                   DESPIU   5
C                                                                               DESPIU   6
      COMMON  /DESDAT/ ZCFM,ICFM,ZVENT,C1,IFLAG                                 RemPA    3
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                 IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                        /FILES/  3
     2               , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                   /FILES/  4
     3                 IHRREP(3), IHRPAS(2)                                     /FILES/  5
      common  /FNSYS/  ISKIPS, MSYSF(120)                                       /FNSYS/  2
      COMMON  /PIUDAT/ ERFON,ERFOFF,TFZ,ZFONLY,IBF,BBR,MSTEMP,F,                -044e2   1
     &                 CFMIND,CFMI,FRACIAZ,HONS,RCFMI,RCFMMI,RCFMTX,            -044e2   2
     &                 TIAZ,TIC,TIH,ZCFMT,ZQHSMN,TEND1,TEND2,TRY2,F2,           -044e2   3
     &                 FNSZHP,MAXSTZ                                            -044e2   4
      DIMENSION        ZDPIU(8)                                                 -044e2   5
      EQUIVALENCE     (ZDPIU(1),ERFON)                                          -044e2   6
      COMMON  /PTRPLT/ Ipm,Ilp,Ich,Ibl,Idw,Itw,Ipv,Ign,Itk,Ihx,                 PV       1
     &                 Iec,Ilm,Iem,Ifm,Ism,Icm,Imm,Imc,Igl,Isp2,                XFC2     1
     &                 Ispare(5),  Ipe,                                         HVAC19   3
     &                 Npm,Nlp,Nch,Nbl,Ndw,Ntw,Npv,Ngn,Ntk,Nhx,                 PV       2
     &                 Nec,Nlm,Nem,Nfm,Nsm,Ncm,Nmm,Nmc,Ngl,Nsp2,                XFC2     2
     &                 Nspare(5),  Npe,                                         HVAC19   6
     &                 Lpm,Llp,Lch,Lbl,Ldw,Ltw,Lpv,Lgn,Ltk,Lhx,                 PV       3
     &                 Lec,Llm,Lem,Lfm,Lsm,Lcm,Lmm,Lmc,Lgl,Lsp2,                XFC2     3
     &                 Lspare(5),  Lpe,                                         HVAC19   9
     &                 Jpm,Jlp,Jch,Jbl,Jdw,Jtw,Jpv,Jgn,Jtk,Jhx,                 PV       4
     &                 Jec,Jlm,Jem,Jfm,Jsm,Jcm,    Jmc,Jgl,                     HVAC19  11
     &                 Jpe, kpr, NumMeters, NumIntHX                            XFC1     1
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      COMMON  /MISCD / TEMPS(4,9999),CONS(5),TEMPSL(9999),                      -048a   10
     1                 BLDGQH,BLDGQC,BLDGQL,BLDGP,BPMULT,                       /MISCD/  3
     $                 DBTMIN,DBTMAX,WMIN,WMAX,NSPZ(9999),                      -048a   11
     3                 DQ, DTP, DTR, DTS, FPI, PLRCC , POM, TC2, TDM,           /MISCD/  5
     4                 TRA,WCOL,WCOLM,WMM,YPI,KWBTU,BTUKW,UNFILD,Unusedm        RemPA   45
      REAL             KWBTU                                                    /MISCD/  7
      COMMON  /REPORT/ IREPRT(4,37),IPRG,IUNIQV(100),IUNIQS(100),IUNIQL         HVAC14   4
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      REAL MAXSTZ                                                               DESPIU  14
      JJ = 0                                                                    DESPIU  15
C********************** run function : DESPIU-0 ********************            DESPIU  16
      IF( MSYSF(18) .NE. 0 )   CALL  FINTS( MSYSF(18), 0. )                     DESPIU  17
      IF( ISKIPS   .NE. 0 )  GOTO  90000                                        DESPIU  18
C*******************************************************************            DESPIU  19
C                                                                               DESPIU  20
C              GET TEMPERATURE OF AIR FROM THE INDUCED AIR ZONE                 DESPIU  21
      ZP1S = ZP1                                                                DESPIU  22
      IF (<IND-AIRZ-ZD> .GT. 0)  ZP1 = <IND-AIRZ-ZD>                            DESPIU  23
      ZP2 = <ZP2>                                                               DESPIU  24
      TL  = <DESIGN-HEAT-T> + <QPPEAKH>/(CONS(1)*<CFMAX>)                       -044b    5
      TLC = <DESIGN-COOL-T> + <QPPEAKC>/(CONS(1)*<CFMAX>)                       -044b    6
      ZP1 = ZP1S                                                                DESPIU  26
      ZP2 = <ZP2>                                                               DESPIU  27
C              GET THE TEMPERATURE RISE DUE TO THE BLOWER                       DESPIU  28
      <ZONE-FAN-DT> = 8520.*CONS(3)*<ZONE-FAN-KW>                               DESPIU  29
C              SET THE MIN CFM RATIO FROM USER INPUT OR VENT AND                DESPIU  30
C              ZONE CFM                                                         DESPIU  31
      <MINCFMR> = <MIN-CFM-RATIOZ>                                              DESPIU  32
      IF (<MINCFMR> .LE. 0.)  <MINCFMR> = <MIN-CFM-RATIO>                       DESPIU  33
c              Min flow/area                                                    -046c    1
      CFMINc = <MIN-CFM/SQFTZ>  * <AREA>                                        -046c    2
      IF (CFMINc .eq. 0.)  CFMINc = <MIN-CFM/SQFT> * <AREA>                     -046c    3
      IF (CFMINc .gt. 0.)                                                       -046c    4
     &  <MINCFMR> = Max(<MINCFMR>, CFMINc*BPMULT/<CFMAX>)                       -046c    5
      IF (<MINCFMR> .LE. 0.) THEN                                               -044e  115
        IF (<AIRFLOW-TRACKING> .ne. 0) THEN                                     -047k   27
          <MINCFMR> = <VENTMIN> / <CFMAX>                                       -046c    6
        ELSE                                                                    -044e  118
          <MINCFMR> = Max(<VENTMIN>, <EXHAUST-CFM>) / <CFMAX>                   -044e5   4
        ENDIF                                                                   -044e  120
      ENDIF                                                                     -044e  121
      IF (<TERMINAL-TYPE> .EQ. 4)  GO TO 1000                                   DESPIU  35
C              SERIES PIU                                                       DESPIU  36
      FNSZHP = 0.                                                               DESPIU  37
      IF(<ZONE-FAN-CFM> .GT. 0.) THEN                                           -036   288
C              SPECIFIED BLOWER SIZE                                            -036   289
        <ZFCFMD> = <ZONE-FAN-CFM>*<SIZING-RATIO>*BPMULT                         -036   290
      ELSE IF (<ZONE-FAN-RATIO> .GT. 0.)  THEN                                  -036   291
C              SPECIFIED BLOWER SIZE relative to box flow                       -036   292
        <ZFCFMD> = <ZONE-FAN-RATIO>*<CFMAX>                                     -036   293
      ELSE                                                                      -036   294
C              Not specified, OBTAIN FROM HEATING PEAK                          -036   295
        IF(MSTEMP .gt. <DESIGN-HEAT-T>) THEN                                    -036   296
          FNSZHP = <ERMIND>/(CONS(1)*(<DESIGN-HEAT-T>-MSTEMP))                  -036   297
        ELSE                                                                    -036   298
          FNSZHP = (<ERMIND>/CONS(1) - (<CFMAX>/BPMULT)*<MINCFMR>               -044b    7
     $              *(<DESIGN-HEAT-T>-<REHEAT-DELTA-TZ>                         -044b    8
     $                -<MIN-SUPPLY-T>-<ZONE-FAN-DT>))                           -044b    9
     $        /(<DESIGN-HEAT-T>-<REHEAT-DELTA-TZ>-TL-<ZONE-FAN-DT>)             -044b   10
        ENDIF                                                                   -036   302
        <ZFCFMD> = AMAX1(<CFMAX>,FNSZHP*BPMULT*<SIZING-RATIO>)                  -036   303
      ENDIF                                                                     -036   304
C              CHECK THAT ZONE FAN SIZE >= ZONE CFM                             -036   305
      IF (<ZFCFMD>.LT.<CFMAX>) THEN                                             -036   306
          CALL MSGSIM(-2,JJ,JJ,JJ,JJ)                                           DESPIU  54
          WRITE(IOUTPT,9000) (<ZONE-NAME>,II=1,8)                               -036   307
 9000     FORMAT(14X,'SERIES-PIU box in ZONE ',8A4/                             -036   308
     $           14X,'has with fan CFM less than primary CFM.'/                 -036   309
     $           14X,'The box fan CFM will be set to the primary CFM.')         -036   310
          <ZFCFMD> = <CFMAX>                                                    DESPIU  61
      END IF                                                                    DESPIU  62
C              CALCULATE MAX SUPPLY TEMPERATURE                                 DESPIU  63
      MAXSTZ = ((<CFMAX>*<MINCFMR>*<MIN-SUPPLY-T> +                             -036   311
     $          (<ZFCFMD>-<CFMAX>*<MINCFMR>)                                    -036   312
     $          *(TL+<ZONE-FAN-DT>))/<ZFCFMD>) + <REHEAT-DELTA-TZ>              -036   313
C               CHECK THAT THE MAX SUPPLY TEMP IS HIGH ENOUGH; I.E.,            DESPIU  66
C               HIGHER THAN THE DESIGN HEAT TEMP                                DESPIU  67
      IF (MAXSTZ.LT.<DESIGN-HEAT-T>) THEN                                       DESPIU  68
          CALL MSGSIM(-2,JJ,JJ,JJ,JJ)                                           DESPIU  69
          WRITE(IOUTPT,9010) (<ZONE-NAME>,II=1,8)                               -036   314
 9010     FORMAT(14X,'PIU box in ZONE ',8A4/                                    -036   315
     $           14X,'has an outlet temperature lower ',                        -036   316
     $               'than the ZONE DESIGN-HEAT-T.'/                            -036   317
     $           14X,'If LS-B/LS-C shows a heating load this ZONE ',            -036   318
     $               'may need a larger REHEAT-DELTA-T.')                       -036   319
      END IF                                                                    DESPIU  74
C              CHECK CAPACITY AND GET OUT                                       DESPIU  75
      <CFMAXH> = <CFMAX>*<MINCFMR>                                              DESPIU  76
      <ERMIND> = CONS(1)*(<ZFCFMD>/BPMULT)*(<DESIGN-HEAT-T>-MAXSTZ)             -043a   92
      MNSPTZ = (<CFMAX>*<MIN-SUPPLY-T>+(<ZFCFMD>-<CFMAX>)*TLC)                  -044b   11
     1         /<ZFCFMD> + <ZONE-FAN-DT>                                        -044b   12
      <ERMAXD> = CONS(1)*(<ZFCFMD>/BPMULT)*(<DESIGN-COOL-T>-MNSPTZ)             -043a   93
      <HEATCAPZ> = -CONS(1)*<ZFCFMD>*<REHEAT-DELTA-TZ>/BPMULT                   -036   320
      IF (<ZONE-HEAT-SOURCE> .LT. 0)  THEN                                      -036   321
c              pointer to hw loop                                               -036   322
        JLP = <HW-LOOPZ>                                                        -036   323
c             design dT between EAT and EWT for reheat coil                     -036   324
        <HWDESDTZ> = ((<CFMAX>*<MINCFMR>*<MIN-SUPPLY-T> +                       -044b   13
     $                (<ZFCFMD>-<CFMAX>*<MINCFMR>)*TL)/<CFMAX>                  -044b   14
     $                + <ZONE-FAN-DT>) - <lp:HT-SETPT-T>                        -044b   15
      ENDIF                                                                     -036   328
      GO TO 2000                                                                DESPIU  88
C              PARALLEL PIU                                                     DESPIU  89
C              INPUT BLOWER SIZE.  USE IT.                                      -036   329
 1000 IF (<ZONE-FAN-CFM> .GT. 0.)  THEN                                         -036   330
        <ZFCFMD> = <ZONE-FAN-CFM>*BPMULT*<SIZING-RATIO>                         -036   331
      ELSE IF (<ZONE-FAN-RATIO> .GT. 0.) THEN                                   -036   332
        <ZFCFMD> = <ZONE-FAN-RATIO>*<CFMAX>                                     -036   333
      ELSE                                                                      -036   334
C              NO INPUT BLOWER SIZE.  CHECK FOR MAX SUPPLY                      -036   335
C              TEMP AND USE IT FOR SIZING IF IT IS THERE.                       -036   336
        IF (MSTEMP .GT. <DESIGN-HEAT-T>)  THEN                                  -036   337
          FNSZHP = <ERMIND>/CONS(1)*(<DESIGN-HEAT-T>-MSTEMP)                    -036   338
        ELSE                                                                    -036   339
C              CALCULATE BLOWER SIZE FROM HEATING PEAK                          -036   340
          FNSZHP = (<ERMIND>/CONS(1) - (<CFMAX>/BPMULT)*<MINCFMR>               -044b   16
     $              *(<DESIGN-HEAT-T>-<REHEAT-DELTA-TZ>-<MIN-SUPPLY-T>))        -044b   17
     $        /(<DESIGN-HEAT-T>-<REHEAT-DELTA-TZ>-TL-<ZONE-FAN-DT>)             -044b   18
        ENDIF                                                                   -036   344
        <ZFCFMD> = FNSZHP*BPMULT*<SIZING-RATIO>                                 -036   345
      ENDIF                                                                     -036   346
      <ZFCFMD> = AMAX1(<MINCFMRH>*<CFMAX>,<ZFCFMD>)                             -036   347
C              CALCULATE THE MAX SUPPLY TEMP FOR THE ZONE                       -036   348
      MAXSTZ = (<CFMAX>*<MINCFMR>*<MIN-SUPPLY-T> +                              -044b   19
     $          (TL+<ZONE-FAN-DT>)*<ZFCFMD>)                                    -044b   20
     $         /(<CFMAX>*<MINCFMR>+<ZFCFMD>)+<REHEAT-DELTA-TZ>                  -044b   21
C              CHECK THAT THE CALCULATED MAX SUPPLY TEMP IS HIGH ENOUGH         DESPIU 111
      IF (MAXSTZ.LT.<DESIGN-HEAT-T>) THEN                                       DESPIU 112
          CALL MSGSIM(-2,JJ,JJ,JJ,JJ)                                           DESPIU 113
          WRITE(IOUTPT,9010) (<ZONE-NAME>,II=1,8)                               -036   352
      END IF                                                                    DESPIU 116
      <CFMAXH> = <CFMAX>*<MINCFMR>                                              DESPIU 117
      <ERMIND> = CONS(1)*((<ZFCFMD>+<CFMAXH>)/BPMULT)                           -043a   97
     $                  *(<DESIGN-HEAT-T>-MAXSTZ)                               -043a   98
      <ERMAXD> = CONS(1)*(<CFMAX>/BPMULT)                                       -043a   99
     $                  *(<DESIGN-COOL-T>-<MIN-SUPPLY-T>)                       -043a  100
      <HEATCAPZ> = -CONS(1)*(<ZFCFMD>+<CFMAXH>)*<REHEAT-DELTA-TZ>/BPMULT        -044b   22
      IF (<ZONE-HEAT-SOURCE> .LT. 0)  THEN                                      -036   354
c              pointer to hw loop                                               -036   355
        JLP = <HW-LOOPZ>                                                        -036   356
c             design dT between EAT and EWT for reheat coil                     -036   357
        <HWDESDTZ> = ((<CFMAX>*<MINCFMR>*<MIN-SUPPLY-T> +                       -044b   23
     $                 <ZFCFMD>*(TL+<ZONE-FAN-DT>))                             -044b   24
     $                /(<ZFCFMD>+<CFMAX>*<MINCFMR>)) - <lp:HT-SETPT-T>          -044b   25
      ENDIF                                                                     -036   359
 2000 CONTINUE                                                                  DESPIU 129
      IF(IREPRT(2,34) .GT. 0)                                                   -036   360
     $  WRITE (IOUTPT,9020) (<ZONE-NAME>,II=1,8),<CFMAX>,<CFMAXH>,              -036   361
     $     <ZFCFMD>,TL,FNSZHP,MAXSTZ,<HEATCAPZ>,<ERMIND>,<ERMAXD>,TLC,          -044b   26
     $     <HWDESDTZ>,<lp:HT-SETPT-T>                                           -044b   27
 9020 FORMAT(' PIU ZONE box fan sizing for ',8A4/                               -036   363
     $11H CFMAX   = ,F11.0,12H  CFMAXH  = ,F11.0,12H  ZFCFMD  = ,F11.0/         -036   364
     $11H TinducH = ,F11.0,12H  FNSZHP  = ,F11.0,12H  MAXSTZ  = ,F11.0/         -044b   28
     $11H HeatcapZ= ,F11.0,12H  ERminD  = ,F11.0,12H  ERmaxD  = ,F11.0/         -044b   29
     $11H TinducC = ,F11.0,12H  HWdesDt = ,F11.0,12H  LoopHspt= ,F11.0)         -044b   30
C********************** run function : DESPIU-1 ********************            -036   367
90000 IF( MSYSF(19) .NE. 0 )   CALL  FINTS( MSYSF(19), 1. )                     -036   368
C*******************************************************************            -036   369
c              design temperature difference for reheat coil                    DESPIU 130
      IF((ISKIPS.NE.0) .and. (<HW-LOOPZ>.GT.0))  THEN                           -036   370
        JLP = <HW-LOOPZ>                                                        HVAC6  127
        <HWDESDTZ> = <DESIGN-HEAT-T> - <lp:HT-SETPT-T>                          -036   371
      ENDIF                                                                     HVAC6  129
      RETURN                                                                    DESPIU 132
      END                                                                       DESPIU 133
      SUBROUTINE DKTEMP                                                         DKTEMP   2
C                                                                               DKTEMP   3
C                            PICK UP HOT AND COLD DECK TEMPERATURES             DKTEMP   4
C                                                                               DKTEMP   5
C              DEVELOPED BY                                                     -130     1
C                            J. J. Hirsch & S. D. Gates                         -130     2
C                            James J. Hirsch & Associates                       -130     3
C                            Camarillo, California                              -130     4
C              BASED UPON CODE DEVELOPED BY J. J. Hirsch and                    -130     5
C                            W. F. Buhl                                         -130     6
C                            A. E. Erdem                                        -130     7
C                            Lawrence Berkeley National Laboratory              -130     8
C                            University of California                           -130     9
Copyright (c) 1997 by James J. Hirsch. All Rights Reserved. Unpublished         -130    10
c rights reserved under the Copyright Laws of the United States.                -130    11
c RESTRICTED RIGHTS NOTICE: Government use, reproduction or disclosure          -130    12
c is subject to restrictions as set forth in Rights in Data (g)(3) in           -130    13
c UC/LBL purchase order 4607010 with J.J. Hirsch & Associates.                  -130    14
C                                                                               DKTEMP   7
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON /DDSDAT/ FONh, SFKWh, DTSh, CFMRATh, FONNGTh, RCFMmix,             /DDSDAT/ 2
     1                RfanCFM, EXFIL, DTDUCT, DTDUCTh, TCDFSR, THDFSR,          /DDSDAT/ 3
     2                CFMINh, CFMINc, CFMINhm, CFMINcm, CFMINt,                 /DDSDAT/ 4
     3                TCMINcoil, THMAXcoil, IWarmestZ, IColdestZ                /DDSDAT/ 5
      DIMENSION       DDSDAT(21)                                                /DDSDAT/ 6
      EQUIVALENCE     (DDSDAT(1), FONh)                                         /DDSDAT/ 7
C              IMODE IS THE OPERATING MODE OF THE PTGSD SYSTEM                  /DSCTRL/ 2
      COMMON  /DSCTRL/  IMODE                                                   /DSCTRL/ 3
      COMMON  /DESHRQ/ NDESDY, IDDTYP(2), DESHRQ(360)                           Time     3
C              SYSTEM LEVEL VARIABLES FOR DESICCANT SYSTEMS, BOTH TOTAL         /DSYSTD/ 2
C              AND INTEGRATED                                                   /DSYSTD/ 3
      COMMON  /DSYSTD/  SCGAS, QREG, WBR, WB8, T8, W8, WB9, T9, W9, EFF,        /DSYSTD/ 4
     1                  DTON, DMODE(7), ERMAX4, ERMAX5, ERMAX6, OPMODE,         /DSYSTD/ 5
     2                  DBOA,WOA,DGAS,DKW,TCONDd,QCDTOT,QCDS,QCDL,              /DSYSTD/ 6
     3                  POA,DFANKW,RFANKW,DMOTKW,EVKW,QCEVT,QCEVS,              /DSYSTD/ 7
     4                  QCEVL,TCMNEV                                            /DSYSTD/ 8
      REAL DSYSTD(39)                                                           /DSYSTD/ 9
      EQUIVALENCE (DSYSTD(1), SCGAS)                                            /DSYSTD/10
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                 IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                        /FILES/  3
     2               , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                   /FILES/  4
     3                 IHRREP(3), IHRPAS(2)                                     /FILES/  5
      common  /FNSYS/  ISKIPS, MSYSF(120)                                       /FNSYS/  2
      COMMON  /FZZZ3/   CFMDIV,DTF,IDDS,POMAX,TMMAX,TMMIN,TRP,TSIG,TSIGN        /FZZZ3/  2
      COMMON  /HRREP / Irb, Ihrp, Lrb, Lhrp, Nrb, Nhrp, IVTLIM(3,50),           HR       5
     &                 IGRPtr, IBRPtr, IRSch, IRSchT(5),                        HR       6
     &                 NHRTyp(3), ITBUF(3), ITBUFB(3), ITBUFE(3),               HR       7
     &                 IHREOF, ICDFLG                                           HR       8
      COMMON  /MISCD / TEMPS(4,9999),CONS(5),TEMPSL(9999),                      -048a   10
     1                 BLDGQH,BLDGQC,BLDGQL,BLDGP,BPMULT,                       /MISCD/  3
     $                 DBTMIN,DBTMAX,WMIN,WMAX,NSPZ(9999),                      -048a   11
     3                 DQ, DTP, DTR, DTS, FPI, PLRCC , POM, TC2, TDM,           /MISCD/  5
     4                 TRA,WCOL,WCOLM,WMM,YPI,KWBTU,BTUKW,UNFILD,Unusedm        RemPA   45
      REAL             KWBTU                                                    /MISCD/  7
      COMMON  /PLANTD/ QHMP,TMP,CFMP,QHPP,CFMPP,                                /PLANTD/ 2
     1                 QHZP,TZP,DHWPKW,DHWPLF,DHWQRP                            RemPA   46
      REAL             PLANTD(10)                                               RemPA   47
      EQUIVALENCE      (PLANTD(1), QHMP)                                        RemPA   48
      COMMON  /PTRPLT/ Ipm,Ilp,Ich,Ibl,Idw,Itw,Ipv,Ign,Itk,Ihx,                 PV       1
     &                 Iec,Ilm,Iem,Ifm,Ism,Icm,Imm,Imc,Igl,Isp2,                XFC2     1
     &                 Ispare(5),  Ipe,                                         HVAC19   3
     &                 Npm,Nlp,Nch,Nbl,Ndw,Ntw,Npv,Ngn,Ntk,Nhx,                 PV       2
     &                 Nec,Nlm,Nem,Nfm,Nsm,Ncm,Nmm,Nmc,Ngl,Nsp2,                XFC2     2
     &                 Nspare(5),  Npe,                                         HVAC19   6
     &                 Lpm,Llp,Lch,Lbl,Ldw,Ltw,Lpv,Lgn,Ltk,Lhx,                 PV       3
     &                 Lec,Llm,Lem,Lfm,Lsm,Lcm,Lmm,Lmc,Lgl,Lsp2,                XFC2     3
     &                 Lspare(5),  Lpe,                                         HVAC19   9
     &                 Jpm,Jlp,Jch,Jbl,Jdw,Jtw,Jpv,Jgn,Jtk,Jhx,                 PV       4
     &                 Jec,Jlm,Jem,Jfm,Jsm,Jcm,    Jmc,Jgl,                     HVAC19  11
     &                 Jpe, kpr, NumMeters, NumIntHX                            XFC1     1
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      COMMON  /REPORT/ IREPRT(4,37),IPRG,IUNIQV(100),IUNIQS(100),IUNIQL         HVAC14   4
      COMMON  /SYSTD / TH,TC,TM,TR,QH,QC,QHZ,QCZ,QHB,QHP,QHUM,                  /SYSTD/  2
     1                 QDHUM,TCMIN,THMAX,QLSUM,QPSUM,CFM,CFMH,CFMC,             /SYSTD/  3
     2                 RCFM,ECFM,CINF,FON,HON,CON,BON,SCONS(3),PH,PC,           /SYSTD/  4
     3                 SKW,FANKW,unused1,WR,WM,WCOIL,WW,PO,D,                   -046f    1
     4                 FTEMP,TCR,QHR,RfanPumpKW,SGAS,SKWQH,SKWQC,QCLAT,         -131    23
     5                 SFKW,RFKW,FONNGT,WSURF,RWalkinQ,TSURF,TRh,               -131    24
     6                 CBF,CBF1,CBF2,EON,PLRCFM,PLRC,PLRH,QCM1,                 /SYSTD/  8
     7                 QCM2,QHM1,EIRM1,EIRM2,EIR,OFKW,QCT,QCS,                  /SYSTD/  9
     8                 WRMAX,WRMIN,CFMRAT,QdistG,QdistL,RON,QHT,                /SYSTD/ 10
     9                 TPOMIN,POMIN,QHSUP,QRSENS,QRLAT,QRREC,QRREJ,             /SYSTD/ 11
     1                 RCOMKW,RDEFKW,RAUXKW,ECFMP,CFMIN,CINFP,DT,DW,            /SYSTD/ 12
     2                 EWB,IC,NATTSP,Q,RETR,SLOAD,QLSUMP,T,TCHUM,TEND,          /SYSTD/ 13
     3                 TS,hgbmin,HPDefE,EconoOnly,TDuctEnv,                     -044e1   1
     4                 QCUNMT,CapRh,CapRph,CapRc                                HVAC25   3
      REAL             SYSTD(113)                                               HVAC19  13
      EQUIVALENCE      (SYSTD(1),TH)                                            RemPA   65
      COMMON /RSVVTD/ CONFRC,HONFRC,NOWFRC,THMXNS                               /RSVVTD/ 2
      REAL NOWFRC                                                               /RSVVTD/ 3
      COMMON  /TIME  / IDOY, IYR, IMO, IDAY, IHR,                               Time     4
     &                 ISCMO, ISCDAY, ISCHR, IDOW, ISCDOW, iDSdates(6),         -044e5   1
     &                 iTimeFlg, iDSFlg, iDDFlg, InitialFlg, LeapYr,            Time     6
     &                 CLOCK(10), MONDSC(13), MONLEN(12), MONSDA(12)            HR      12
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
      COMMON  /ZONED / EXCFM,FH,FC,CFMZ,QHBZ,QOVER,THZ,TCZ,ERMAX,ERMIN,         /ZONED/  2
     1                 TRY,FTD,CORINT,G0,G1,G2,G3,SIGMAG,TL,ZQHR,TAVE,          /ZONED/  3
     2                 ZQH,ZQC,FCHPS(15),ACFM,ZKW,TCMINZ,THMAXZ,                /ZONED/  4
     3                 ERMAXM,ERMINM,THR,CSSCND,CSSVEC,HENOW,QGWIN,             /ZONED/  5
     4                 QSNABT,QGOPWL,QGVEC,CFMCVT,SSFPT,CFMVNT,ZFANKW,          /ZONED/  6
     5                 ZKWCBT,ZKWHBT,ZCapRbbrd, XC,ZC,XH,ZH                     -044e2   7
      REAL ZONED(63)                                                            -044e2   8
      EQUIVALENCE (ZONED(1),EXCFM)                                              /ZONED/  9
      COMMON /SSPDAT/  PLRCS,QCCKWS,QCCMPS,PLRHS,QHCKWS,QHCMPS                  /SSPDAT/ 2
     $                ,PLRFS,PLRFCS,PLRFHS,sspss                                /SSPDAT/ 3
     $                ,PLRCZ,QCCKWZ,QCCMPZ,PLRHZ,QHCKWZ,QHCMPZ                  /SSPDAT/ 4
     $                ,PLRFZ,PLRFCZ,PLRFHZ,sspsz                                /SSPDAT/ 5
     $                ,ISSPF,IWCCF,IPCCF,SSPSAV                                 /SSPDAT/ 6
      DIMENSION        SSPD(24)                                                 JJHfix   1
      EQUIVALENCE      (SSPD(1),PLRCS)                                          /SSPDAT/ 8
      COMMON /DHWDAT/ HTT,EHSTOR,HTGIVE,HTASK,HTFILL,HSUPRT,HSTRRT,             /DHWDAT/ 2
     1                DHWWST,DHWWSU,HTTIN,DHWLD,DHWLDR,DHWPLR,DHWHRT,           /DHWDAT/ 3
     2                DHHRFT,DHERFT,DHERFP,HTCAP,HTLOSS,DHWEIR                  /DHWDAT/ 4
      DIMENSION DHWD(20)                                                        /DHWDAT/ 5
      EQUIVALENCE (HTT,DHWD(1))                                                 /DHWDAT/ 6
      COMMON /SHP   / QCRUN,QCLOAD,QCGAS,QCAUX,QCGSLD,QCGSUP,                   /SHP/    2
     1                QCWAS,QCWASU,QCGSAV,QCFAN,                                /SHP/    3
     2                QHRUN,QHLOAD,QHGAS,QHAUX,QHGSLD,QHGSUP,                   /SHP/    4
     3                QHWAS,QHWASU,QHGDFR,QHFAN,          CUR(25),              /SHP/    5
     4                GSAV1,GASV2,PCH,ISZCZ,GCAP(2),GEDB,QHDFRG,                -044c1   1
     5                GRPM,PLRSUP,CFMCYC,CLPLR,CFMVVT,QHZHP,PCCEDB,             /SHP/    7
     6                IHPREP,IHPOUT,IHPHRR,IHPHRN,IRST,IREN                     /SHP/    8
      COMMON /SHPZ  / QCRUNZ,QCLOADZ,QCGASZ,QCAUXZ,QCGSLDZ,QCGSUPZ,             /SHP/    9
     1                QCWASZ,QCWASUZ,QCGSAVZ,QCFANZ,                            /SHP/   10
     2                QHRUNZ,QHLOADZ,QHGASZ,QHAUXZ,QHGSLDZ,QHGSUPZ,             /SHP/   11
     3                QHWASZ,QHWASUZ,QHGDFRZ,QHFANZ                             /SHP/   12
      DIMENSION       SHP(60),SHPZ(20)                                          /SHP/   13
      EQUIVALENCE     (SHP,QCRUN),(SHPZ,QCRUNZ)                                 /SHP/   14
     1               ,(DFM1,CUR(18)),(DFM2,CUR(19)),(DFM3,CUR(20))              /SHP/   15
      INTEGER DDSTYPE                                                           DKTEMP  30
      COMMON  /LENS/   MWFLEN, MRLEN, MSHLEN, MWNLEN, MDRLEN, MXLEN,            /LENS/   2
     1                 MULEN, MZLEN, MIWLEN, MFLLEN,                            /LENS/   3
     2                 LMTB, LLDSOU, MSTLEN, LSTFT, MWLLEN                      /LENS/   4
      COMMON  /PTRBGN/ IWFB, IWPB, ICONSB, IGTB, IWLB, IGEOB, ISHADB,           /PTRBGN/ 2
     &                 IWINB, IDRB, IEWB, IUGB, ISPB, IIWPB, IIWB,              /PTRBGN/ 3
     &                 IFLB, ISPCDB, IOTHB, ILHB, IZQCMB, ISSHDB,               /PTRBGN/ 4
     &                 IOHFIB, IZLSK, IZLSL, ISTFB, ILSSH                       PV2      1
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     /PNTRS/  3
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        /PNTRS/  4
      COMMON  /SIZE/   LENGTH,NWF,NWPAR,NCONS,NGT,NWL,NGEO,                     /SIZE/   2
     1                 NGSHAD, NWIN, NDOOR, NEW, NUG, NSPl, NIWP, NIW,          /SIZE/   3
     &                 NFL, NBR, NOTH, NITH, NOPSRF,                            /SIZE/   4
     &                 NSURF, NSSHD, NSHTOT, NEWshade                           /SIZE/   5
      COMMON /WCTRL/   IwinReturn, Imsgflg                                      /WCTRL/  2
#ifndef _DLL                                                                 /* -048     1 */ 
      COMMON /WIN_MB/ MB_OK,MB_ICONSTOP,MB_ICONEXCLAMATION,MB_TASKMODAL,        -048     2
     &                MB_ICONINFORMATION                                        -048     3
#else                                                                        /* -048     4 */ 
      include 'msgbox.fi'                                                       -048     5
#endif                                                                       /* -048     6 */ 
      LOGICAL HeatPump                                                          StgVol  61
C              FIRST WE LOOP THROUGH THE ZONE ONCE TO ESTIMATE THE              DKTEMP  32
C              RETURN AIR TEMP. WHEN WE KNOW THIS WE CAN GET LIMITS             DKTEMP  33
C              FOR THE MIXED AIR TEMP.  THUS WE KNOW WHAT CAN BE DONE           DKTEMP  34
C              IF HEATING OR COOLING ARE SCHEDULED OFF.                         DKTEMP  35
C              ALSO, IF THIS IS A STARTUP HOUR WE CAN SAVE AN ESTIMATE          DKTEMP  36
C              OF THE MIXED AIR TEMP AND HUMIDITY.                              DKTEMP  37
c                                                                               HVAC   144
c              For coils attached to circulation-loops, capacities              HVAC   145
c              are limited by the available capacity ratio of the               HVAC   146
c              loop.  CapRh, CapRph, and CapRc are the heating,                 HVAC   147
c              preheat, and cooling coil loop capacity ratios,                  HVAC   148
c              respectively, and were set by the calling routine                HVAC   149
c              for the central coils.                                           HVAC   150
c                                                                               HVAC   151
C                                                                               DKTEMP  38
C              THIS ROUTINE CAN BE SKIPPED IF THE FANS ARE OFF                  DKTEMP  39
      IF ((FON .EQ. 0.) .AND. (FONh .EQ. 0.)) RETURN                            DKTEMP  40
C********************** run function : DKTEMP-0 ********************            DKTEMP  41
      IF( MSYSF(20) .NE. 0 )   CALL  FINTS( MSYSF(20), 0. )                     DKTEMP  42
C*******************************************************************            DKTEMP  43
c              DDS-MZS-PMZS FLAG   0 = Single-duct                              DKTEMP  44
c              1 = Single-fan dual-duct,  2 = dual-fan dual-duct                DKTEMP  45
      DDSTYPE = <DDS-TYPE>                                                      DKTEMP  46
c              old dual-duct flag                                               DKTEMP  47
      IDDS   = MIN0(DDSTYPE, 1)                                                 DKTEMP  48
      IF (<HEAT-SOURCE> .EQ. 4 .OR. <HEAT-SOURCE> .EQ. 9)  THEN                 StgVol  62
        HeatPump = .True.                                                       StgVol  63
      ELSE                                                                      StgVol  64
        HeatPump = .False.                                                      StgVol  65
      ENDIF                                                                     StgVol  66
      RCFMI = 0.                                                                DKTEMP  55
      RCFMTX = 0.                                                               DKTEMP  56
      RIIR   = 1.0/(1+<INDUCTION-RATIO>)                                        -131   172
      RIR    = (1+<INDUCTION-RATIO>)                                            -131   173
C     DEBUG = .FALSE.                                                           DKTEMP  57
C     IF ((IRSCH .NE. 0) .AND. (IREPRT(2,35) .EQ. 1))  DEBUG = .TRUE.           IREPRT  39
c              get temperature of duct environment for duct loss calcs          HVAC25  28
      IF (<DUCT-LOSS-ZONE> .GT. 0)  THEN                                        HVAC25  29
        ZP1save  = ZP1                                                          HVAC25  30
        ZP1      = <DUCT-LOSS-ZONE>                                             HVAC25  31
        TDuctEnv = <TNOW>                                                       HVAC25  32
        ZP1      = ZP1save                                                      HVAC25  33
      ENDIF                                                                     HVAC25  34
c                                                                               DKTEMP  75
    2 CFMH    = 0.0                                                             DKTEMP  76
      CFMC    = 0.0                                                             DKTEMP  77
      CFM     = 0.0                                                             DKTEMP  78
      CFMHmix = 0.0                                                             DKTEMP  79
      CFMRcz  = 1.0    ! control zone modulation of subzone airflow             -045f   22
      QP      = 0.0                                                             DKTEMP  80
      TR      = 0.0                                                             DKTEMP  81
      ECFM    = 0.0                                                             DKTEMP  82
      QLSUM   = 0.0                                                             DKTEMP  83
      CINF    = 0.0                                                             ERV    104
      G       = 0.0                                                             DKTEMP  85
      GW      = 0.0                                                             DKTEMP  86
      DCVOAcfmS  = 0.0                                                          -044c  363
      DCVOAcfmFC = 0.0                                                          -044c  364
      ZP1     = ISZ                                                             DKTEMP  87
c              initialize HEAT-CONTROL=WARMEST reset signal                     DKTEMP  88
      TSIGh = 1.0                                                               DKTEMP  89
c              initialize the single-duct supply temperature at                 DKTEMP  90
c              the zone end of the duct (diffuser temperature)                  DKTEMP  91
      IF (<sy.FanOnPast> .gt. 0.)  THEN                                         -044c2  34
c              last hours temperature                                           DKTEMP  93
        TCDFSR = <PASTTCDFSR>                                                   DKTEMP  94
      ELSE                                                                      DKTEMP  95
c              startup hour - use design temperature                            DKTEMP  96
        TCDFSR = <MIN-SUPPLY-T>                                                 DKTEMP  97
      ENDIF                                                                     DKTEMP  98
c              skip if PIU system                                               DKTEMP  99
      IF (ICODE .EQ. 23)  GOTO 22                                               DKTEMP 100
c                                                                               DKTEMP 101
c              Loop through the zones and calculate heating and cooling         DKTEMP 102
c              CFMs based on current zone temps and setpoints.                  DKTEMP 103
      DO 11  NZ=1,NSZ                                                           DKTEMP 104
        ZP2    = <ZP2>                                                          DKTEMP 105
        ZMULT  = <MULTIPLIER>                                                   DKTEMP 106
c              skip the non-conditioned zones                                   DKTEMP 107
        IF (<ZONE-TYPE> .NE. 1)  GOTO 10                                        DKTEMP 108
c              skip VAV calcs if not VAV                                        DKTEMP 109
        IF ((DDSTYPE .EQ. 0) .AND.                                              -44c3a  28
     $      ((<MINCFMRH> .GT. 0.99).AND.(<MINCFMR> .GT. 0.99)) ) THEN           -44c3a  29
          CFMz = <CFMAX> * RIIR * CFMRcz * CFMRAT                               -045f   23
          CFMC = CFMC + CFMz*ZMULT                                              -045f   24
          GOTO 9                                                                DKTEMP 113
        ENDIF                                                                   DKTEMP 114
c              zone throttling range and temp setpoints                         DKTEMP 115
        IF (<MINCFMR> .le. 0.99  .or.                                           -045f   25
     &     (DDSTYPE .eq. 0  .and.  <MINCFMRH> .le. 0.99))  THEN                 -045f   26
          THR = <THROTTLING-RANGE>                                              HVAC29   7
          THZ = <THZ>                                                           HVAC29   8
          TCZ = <TCZ>                                                           HVAC29   9
c              zone control mode this hour 0-float 1-heat 2-cool                HVAC29  10
          IF (<TNOW> .LT. THZ+THR)  THEN                                        HVAC29  11
            MODE = 1                                                            HVAC29  12
          ELSEIF (<TNOW> .GT. TCZ-THR)  THEN                                    HVAC29  13
            MODE = 2                                                            HVAC29  14
          ELSE                                                                  HVAC29  15
            MODE = 0                                                            HVAC29  16
          ENDIF                                                                 HVAC29  17
        ELSE                                                                    HVAC29  18
c              constant-volume mixing box                                       HVAC29  19
          THZ  = (<THZ>+<TCZ>) * 0.5                                            HVAC29  20
          THR  = (<TCZ>-<THZ>) * 0.5                                            HVAC29  21
          MODE = 1                                                              HVAC29  22
        ENDIF                                                                   HVAC29  23
c              store the mode for dual-duct snap-acting box.                    DKTEMP 129
c              If floating, box remains at previous snap                        DKTEMP 130
        IF (MODE .NE. 0)  <CTRLTSTAT> = MODE                                    DKTEMP 131
c              calculate the minimum heat and cool CFMs for this zone.          DKTEMP 132
        IF (DDSTYPE .EQ. 0)  THEN                                               DKTEMP 133
c              single-duct systems - Note that min cfm ratio may be             DKTEMP 134
c              different in heating vs. cooling                                 DKTEMP 135
          IF (MODE .EQ. 1)  THEN                                                DKTEMP 136
c              heating                                                          DKTEMP 137
            CFMINh = <CFMAX> * <MINCFMRH> * CFMRcz * CFMRATh                    -045f   27
            CFMINc = 0.                                                         DKTEMP 139
          ELSEIF (MODE .eq. 2) THEN  ! cooling                                  -045f   28
            CFMINh = 0.                                                         DKTEMP 142
            CFMINc = <CFMAX> * <MINCFMR> * CFMRcz * CFMRAT                      -045f   29
          ELSE  ! deadband                                                      -045f   30
            CFMINh = 0.                                                         -045f   31
            CFMINc = <CFMAX> * Min(<MINCFMRH>,<MINCFMR>)*CFMRcz*CFMRAT          -045f   32
          ENDIF                                                                 DKTEMP 144
        ELSE                                                                    DKTEMP 145
c              dual-duct systems                                                DKTEMP 146
          CFMINh = <CFMAXH> * <MINCFMRH> * CFMRATh                              DKTEMP 147
          CFMINc = <CFMAX>  * <MINCFMRC>  * CFMRAT                              DKTEMP 148
        ENDIF                                                                   DKTEMP 149
c              initialize zone flow to be minimum.                              DKTEMP 150
        CFMz  = CFMINh + CFMINc                                                 DKTEMP 151
c              total system heating and cooling airflow.                        DKTEMP 152
        CFMH = CFMH + CFMINh*ZMULT                                              DKTEMP 153
        CFMC = CFMC + CFMINc*ZMULT                                              DKTEMP 154
c              calc additional zone airflow based on heating or                 DKTEMP 155
c              cooling demand                                                   DKTEMP 156
        IF (MODE .EQ. 1)  THEN                                                  DKTEMP 157
c              zone is in heating mode.  First, for HEAT-CONTROL=COLDEST        DKTEMP 158
c              in a dual-duct, estimate the heating reset control signal        DKTEMP 159
          IF ((DDSTYPE .GT. 0) .AND.  ((<HEAT-CONTROL> .EQ. 2)                  DKTEMP 160
     1                             .OR. (<HEAT-CONTROL> .EQ. 3)))  THEN         DKTEMP 161
            IF ((<RESET-PRIORITY> .EQ. 1) .AND. (<MINCFMRH> .LE. 0.99))         DKTEMP 162
     1                                                              THEN        DKTEMP 163
c              reduce temperature first, then airflow.  Use top half            DKTEMP 164
c              of throttling range for airflow reset, bottom for temp           DKTEMP 165
              TSIGh = AMIN1(TSIGh, (<TNOW>-(THZ-THR*0.5)) / (THR*0.5) )         DKTEMP 166
            ELSEIF ((<RESET-PRIORITY> .EQ. 2)                                   DKTEMP 167
     1                                .AND. (<MINCFMRH> .LE. 0.99)) THEN        DKTEMP 168
c              reduce airflow first, then temperature.  Use bottom half         DKTEMP 169
c              of throttling range for temp reset in VAV zone.                  DKTEMP 170
              TSIGh = AMIN1(TSIGh, (<TNOW>-(THZ+THR*0.5)) / (THR*0.5) )         DKTEMP 171
            ELSE                                                                DKTEMP 172
c              reduce temperature and airflow simultaneously                    DKTEMP 173
c              save heating temp reset signal for COOL-CONTROL=WARMEST          DKTEMP 174
c              calcs in a dual-duct zone                                        DKTEMP 175
c                for constant-volume mixing, use point of maximum               HVAC29  24
c                heating                                                        HVAC29  25
              TSIGh = AMIN1(TSIGh, (<TNOW>-<THZ>) / <THROTTLING-RANGE>)         HVAC29  26
            ENDIF                                                               DKTEMP 177
          ENDIF                                                                 DKTEMP 178
c              part load ratio in control range                                 DKTEMP 179
          PLR = AMAX1(0., AMIN1(1., ((THZ+THR)-<TNOW>) / (THR*2.0)))            DKTEMP 180
          IF (DDSTYPE .EQ. 0)  THEN                                             DKTEMP 181
c              single-duct systems                                              DKTEMP 182
            IF (<THERMOSTAT-TYPE> .EQ. 3)  THEN                                 -045f   33
c              reverse-acting thermostat - fraction of heat extraction that     DKTEMP 184
c              can be handled by reheat at min-cfm-ratio                        DKTEMP 185
              PLRrh = 1.0                                                       DKTEMP 186
c              Set reheat coil hourly available capacity ratio                  -044b   31
              IF(<HEATCAPZ> .LT. 0.0) THEN                                      -044b   32
                IF (<HW-LOOPZ> .NE. 0)  THEN                                    -044b   33
c              set hot water circulation loop restrictions                      -044b   34
C              on zonal heating capacity                                        -044b   35
                  JLP    = <HW-LOOPZ>                                           -044b   36
                  ZCapRh = <lp;HCAP_RATIO>                                      -044b   37
                ELSE                                                            -044b   38
C              Not hot water - no on zonal heating restriction                  -044b   39
                  ZCapRh = 1.0                                                  -044b   40
                ENDIF                                                           -044b   41
              ELSE                                                              -044b   42
C              no coil so no zonal heating capacity                             -044b   43
                ZCapRh = 0.0                                                    -044b   44
              ENDIF                                                             -044b   45
              dTrh     = <REHEAT-DELTA-T> * ZCapRh                              HVAC   160
              DENOM = dTrh + (1.-<MINCFMRH>)*(TCDFSR-<TNOW>)                    HVAC   161
              IF (DENOM .GT. 0.)  PLRrh =                                       DKTEMP 188
     1          AMIN1(1.0,                                                      DKTEMP 189
     2                AMAX1(<MINCFMRH>,                                         DKTEMP 190
     3                     (dTrh*<MINCFMRH>) / DENOM ))                         HVAC   162
c              fraction of heat extraction supplied by increased cfm            DKTEMP 192
              DENOM = 1.0 - PLRrh                                               DKTEMP 193
              IF (DENOM .GT. 0.)  THEN                                          DKTEMP 194
                PLR = AMAX1(0., (PLR - PLRrh) / DENOM )                         DKTEMP 195
              ELSE                                                              DKTEMP 196
                PLR = 0.                                                        DKTEMP 197
              ENDIF                                                             DKTEMP 198
            ELSE                                                                DKTEMP 199
c              direct-acting tstat                                              DKTEMP 200
              PLR = 0.                                                          DKTEMP 201
            ENDIF                                                               DKTEMP 202
          ENDIF                                                                 DKTEMP 203
          CFplr = (<CFMAXH>*CFMRcz*CFMRATh - CFMINh) * PLR                      -045f   34
          CFMz  = CFMz + CFplr                                                  DKTEMP 205
          CFMH  = CFMH + CFplr*ZMULT                                            DKTEMP 206
        ELSEIF (MODE .EQ. 2)  THEN                                              DKTEMP 207
c              zone is in cooling mode.                                         DKTEMP 208
c              part load ratio in control range                                 DKTEMP 209
          PLR   = AMAX1(0., AMIN1(1., (<TNOW>-(TCZ-THR)) / (THR*2.0) ))         DKTEMP 210
          CFplr = (<CFMAX>*CFMRcz*CFMRAT - CFMINc) * PLR                        -045f   35
          CFMz  = CFMz + CFplr                                                  DKTEMP 212
          CFMC  = CFMC + CFplr*ZMULT                                            DKTEMP 213
        ENDIF                                                                   DKTEMP 216
c              variable-flow control zone limits airflow of subzones            -045f   36
        IF (NZ .eq. 1  .and.                                                    -045f   37
     &     (ICODE .eq. 2  .or. ICODE .eq. 19  .or. ICODE .eq. 26 .or.           -045f   38
     &      ICODE .eq. 28 .or. ICODE .eq. 29))                                  -045f   39
     &    CFMRcz = CFMz / (<CFMAX>*CFMRAT)                                      -045f   40
c              for dual-duct boxes, a minimum total at the box outlet           DKTEMP 217
c              may be specified.  The makeup may be supplied by either          DKTEMP 218
c              the hot deck, cold deck, or snap between the two.                DKTEMP 219
        IF ((DDSTYPE .GT. 0) .AND. (<MINCFMR> .GT. 0.))  THEN                   DKTEMP 220
c              exhaust flow                                                     -044e  122
          IF (<EXHAUST-SOURCE> .eq. 1) THEN  ! makeup by system OA              -046   169
            Call ZoneExhaust(1, <CFMAXT>)    ! set EXCFM                        -046   170
          ELSE                                                                  -046   171
            EXCFM = 0.                                                          -046   172
          ENDIF                                                                 -046   173
c              minimum required at outlet                                       DKTEMP 221
          CFMINt = 0.                                                           CCIG7   39
          IF ( ((<CTRLTSTAT> .EQ. 1) .AND. (<MIN-CFM-SOURCEZ> .EQ. 0))          CCIG7   40
     1                          .OR. (<MIN-CFM-SOURCEZ> .EQ. 1) )  THEN         CCIG7   41
c              box minimum is made up by hot deck                               CCIG7   42
            IF (FONh .GT. 0.)                                                   CCIG7   43
     $        CFMINt = AMAX1(<CFMAXT>*<MINCFMR>, EXCFM)                         -044e  124
          ELSE                                                                  CCIG7   45
c              box minimum is made up by cold deck                              CCIG7   46
            IF (FON .GT. 0.)                                                    CCIG7   47
     $        CFMINt = AMAX1(<CFMAXT>*<MINCFMR>, EXCFM)                         -044e  125
          ENDIF                                                                 CCIG7   49
c              skip if minimum satisfied                                        DKTEMP 223
          IF (CFMz .GE. CFMINt)  GOTO 9                                         DKTEMP 224
c              amount that must be made up                                      DKTEMP 225
          CFplr = CFMINt - CFMz                                                 DKTEMP 226
          IF ( ((<MIN-CFM-SOURCEZ> .EQ. 0) .AND. (<CTRLTSTAT> .EQ. 1))          DKTEMP 227
     1                      .OR. (<MIN-CFM-SOURCEZ> .EQ. 1) )  THEN             DKTEMP 228
c              box minimum is made up by hot deck                               DKTEMP 229
            CFplr = CFplr * CFMRATh                                             DKTEMP 230
            CFMz  = CFMz + CFplr                                                DKTEMP 231
            CFMH  = CFMH + CFplr*ZMULT                                          DKTEMP 232
          ELSE                                                                  DKTEMP 233
c              box minimum is made up by cold deck                              DKTEMP 234
            CFplr = CFplr * CFMRAT                                              DKTEMP 235
            CFMz  = CFMz + CFplr                                                DKTEMP 236
            CFMC  = CFMC + CFplr*ZMULT                                          DKTEMP 237
          ENDIF                                                                 DKTEMP 238
        ENDIF                                                                   DKTEMP 239
c              supply must be at least the exhaust                              -044e  126
    9   IF (<EXHAUST-SOURCE> .eq. 1) THEN  ! makeup by system OA                -046   174
          Call ZoneExhaust(1, <CFMAX>)     ! set EXCFM                          -046   175
        ELSE                                                                    -046   176
          EXCFM = 0.                                                            -046   177
        ENDIF                                                                   -046   178
        SELECT CASE (<AIRFLOW-TRACKING>)                                        -044e  128
        CASE (0,1)  ! supply is at least exhaust                                -044e  129
          CFMz  = Max(CFMz, EXCFM)                                              -044e  130
        CASE (2)  ! exhaust tracks supply                                       -044e  131
          EXCFM = CFMz                                                          -044e  132
        CASE (3)  ! track greater of exhaust or supply                          -044e  133
          EXCFM = Max(CFMz, EXCFM)                                              -044e  134
          CFMz  = EXCFM                                                         -044e  135
        END SELECT                                                              -044e  136
        ECFM   = ECFM + EXCFM*ZMULT                                             DKTEMP 242
c              return air ratio                                                 DKTEMP 243
        RETR = (CFMz-EXCFM)/(CFMz+1.E-6)                                        DKTEMP 244
c              weighted return temperature                                      DKTEMP 245
        TR     = TR + <TNOW>*CFMz*RETR*ZMULT                                    DKTEMP 246
c              latent heat - fraction to return air                             DKTEMP 247
        QLSUM  = QLSUM + <QL>*RETR*ZMULT                                        DKTEMP 248
c              infiltration - fraction to return air                            DKTEMP 249
        CINF   = CINF + <CFMINF>*RETR*ZMULT                                     ERV    105
c              light heat into plenum                                           DKTEMP 251
        QP     = QP + <QLIGHTRETURN>*ZMULT                                      DKTEMP 252
c              refrigerated display cases                                       DKTEMP 253
        IF (ZP1 .EQ. <REFG-ZONE-ZP1>)  THEN                                     DKTEMP 254
          G  = <G>  * RETR                                                      DKTEMP 255
          GW = <GW> * RETR                                                      DKTEMP 256
        ENDIF                                                                   DKTEMP 257
C              DCV - Calculate zone Occupancy based vent CFM and frac           -044c  365
        IF(<MIN-OA-METHOD>.LT.0)  THEN                                          -044c  366
          MZ = ISPB + (<NZSPACE>-1)*MZLEN                                       -044c  367
          DCVOAcfmZ = SchVal(<PEOPLE-SCHEDULE>, 1.)                             -045b   59
     &              * <ZPPLNO> * <OA-CFM/PER>                                   -045b   60
          IF(<MIN-OA-METHOD>.EQ.-1) DCVOAcfmZ = RETR*DCVOAcfmZ                  -044c  369
          XX = <OUTSIDE-AIR-CFM>                                                -044c  370
          IF(XX .EQ. 0.)                                                        -044c  371
     $       XX = AMAX1(<OA-FLOW/AREA>*<AREA>,<OA-CHANGES>*<VOLUME>/60.)        -044c  372
          DCVOAcfmZ = AMIN1(CFMZ,AMAX1(DCVOAcfmZ,XX))                           -044c  373
          IF (CFMZ .GT. 0.  .AND.  <sy.FanOnPast> .lt. 0.)  THEN                -044c2  35
            DCVOAcfmF = DCVOAcfmZ/CFMZ                                          -044c  375
          ELSE                                                                  -044c  376
            IF(<DCVOAcfmZ>+<DCVOAcfmFrac> .GT. 0.) THEN                         -044c  377
              DCVOAcfmF=AMIN1(1.,(DCVOAcfmZ/<DCVOAcfmZ>)*<DCVOAcfmFrac>)        -044c  378
            ELSEIF(<COIL_CFMZ> .GT. 0.) THEN                                    -044c  379
              DCVOAcfmF = AMIN1(1.,DCVOAcfmZ/<COIL_CFMZ>)                       -044c  380
            ELSEIF(CFMZ .GT. 0.) THEN                                           -044c  381
              DCVOAcfmF = AMIN1(1.,DCVOAcfmZ/CFMZ)                              -044c  382
            ELSE                                                                -044c  383
              DCVOAcfmF = AMIN1(1.,DCVOAcfmZ/<CFMAX>)                           -044c  384
            ENDIF                                                               -044c  385
          ENDIF                                                                 -044c  386
          <DCVOAcfmZ> = DCVOAcfmZ                                               -044c  387
          DCVOAcfmS = DCVOAcfmS + DCVOAcfmZ*ZMULT                               -044c  388
          DCVOAcfmFC= AMIN1(1.,AMAX1(DCVOAcfmFC,DCVOAcfmF))                     -044c  389
        ELSE                                                                    -044c  390
          DCVOAcfmZ = 0.0                                                       -044c  391
          DCVOAcfmF = 0.0                                                       -044c  392
        ENDIF                                                                   -044c  393
c              save current zone cfm estimate for use in TEMDEV                 CCIG7   50
      <COIL_CFMZ> = CFMz*RIR                                                    -131   176
c              increment zone pointer                                           DKTEMP 258
   10   ZP1 = ZP1 + NZD                                                         DKTEMP 259
   11 CONTINUE                                                                  DKTEMP 260
c              if system is not dual-fan dual-duct, heating and                 DKTEMP 261
c              cooling CFMs come from the same fan                              DKTEMP 262
      IF (DDSTYPE .NE. 2)  THEN                                                 DKTEMP 263
        CFM = CFMC + CFMH                                                       DKTEMP 264
      ELSE                                                                      DKTEMP 265
c              dual-fan system, let CFM be the cold deck fan flow               DKTEMP 266
        CFM = CFMC                                                              DKTEMP 267
      ENDIF                                                                     DKTEMP 268
                                                                                -045f   41
c              Duct air losses                                                  -045f   42
      CFML  = 0.                                                                -045f   43
      CFMLh = 0.                                                                -045f   44
      IF (<DUCTCFMLOSS> .gt. 0.) THEN                                           -045f   45
        IF (DDSTYPE .eq. 0) THEN  ! single duct                                 -045f   46
          SELECT CASE (<AIR-LOSS-TYPE>)                                         -045f   47
          CASE (2)  ! proportional leakage                                      -045f   48
            CFML = CFM * <DUCT-AIR-LOSS>/(1.0-<DUCT-AIR-LOSS>)                  -045f   49
          CASE DEFAULT  ! constant leakage                                      -045f   50
            CFML = <DUCTCFMLOSS>                                                -045f   51
          END SELECT                                                            -045f   52
c              for RESVVT, hot and cold duct losses are redundant               -045f   53
          IF (ICODE .EQ. 27)  CFMLh = CFML                                      -045f   54
        ELSE  ! dual duct                                                       -045f   55
          SELECT CASE (<AIR-LOSS-TYPE>)                                         -045f   56
          CASE (2)  ! proportional leakage                                      -045f   57
            CFML  = CFMC * <DUCT-AIR-LOSS>/(1.0-<DUCT-AIR-LOSS>)                -045f   58
            CFMLh = CFMH * <DUCT-AIR-LOSS>/(1.0-<DUCT-AIR-LOSS>)                -045f   59
          CASE DEFAULT  ! constant leakage                                      -045f   60
            CFML  = <DUCTCFMLOSS>                                               -045f   61
            CFMLh = <HOTDUCTCFMLOSS>                                            -045f   62
          END SELECT                                                            -045f   63
          IF (DDSTYPE .eq. 1) THEN  ! single fan                                -045f   64
            CFML  = CFML + CFMLh                                                -045f   65
            CFMLh = 0.                                                          -045f   66
          ENDIF                                                                 -045f   67
        ENDIF  ! DDSTYPE                                                        -045f   68
      ENDIF  ! DUCTCFMLOSS                                                      -045f   69
                                                                                -045f   70
      IF ((CFMRAT .EQ. 1.) .AND. (CFMRATh .EQ. 1.)                              DKTEMP 269
     1                     .AND. (<VAVFLAG> .EQ. 1))  THEN                      DKTEMP 270
c              If here, loop has been passed thru only once.  Check to          DKTEMP 271
c              see if the requested airflow is larger than net system           DKTEMP 272
c              capacity, excluding duct losses.  If so, set a limit             DKTEMP 273
c              and repeat zone loop.                                            DKTEMP 274
        CAPnet = <SUPPLY-CFM>*<MAX-FAN-RATIO> - CFML                            DKTEMP 275
        IF (CFM .GT. CAPnet)  CFMRAT = CAPnet / (CFM+1.E-6)                     DKTEMP 276
c              same for dual-fan dual-duct system                               DKTEMP 277
        IF (DDSTYPE .EQ. 2)  THEN                                               DKTEMP 278
          CAPnet = <HSUPPLY-CFM>*<HMAX-FAN-RATIO> - CFMLh                       DKTEMP 279
          IF (CFMH .GT. CAPnet)  CFMRATh = CAPnet / (CFMH+1.E-6)                DKTEMP 280
        ELSE                                                                    DKTEMP 281
c              CFMRATh is the same as CFMRAT for single-fan systems             DKTEMP 282
          CFMRATh = CFMRAT                                                      DKTEMP 283
        ENDIF                                                                   DKTEMP 284
c              repeat the zone loop if airflow has been limited                 DKTEMP 285
        IF ((CFMRAT .LT. 0.98) .OR. (CFMRATh .LT. 0.98))  GOTO 2                DKTEMP 286
      ENDIF                                                                     DKTEMP 287
c              At this point, CFM represents the fan airflow in all             DKTEMP 288
c              systems except dual-fan dual duct (DFDD), and the cold           DKTEMP 289
c              deck fan in DFDD.  CFMH is the DFDD heating fan cfm.             DKTEMP 290
C              CoilCFMc and CoilCFMh are cfms thru the central                  HVAC1   86
c              heating and cooling coils.  They must include duct               DKTEMP 292
c              losses.  Duct losses for fans will be added later.               DKTEMP 293
      IF (DDSTYPE .EQ. 0)  THEN                                                 DKTEMP 294
c              single cold/hot deck                                             DKTEMP 295
        CFM = AMAX1(CFM, 1.0)                                                   CCIG7   52
        CoilCFMc = CFM + CFML                                                   HVAC1   87
        CoilCFMh = CFM + CFML                                                   HVAC1   88
        CFMH       = 0.                                                         DKTEMP 298
      ELSE                                                                      DKTEMP 299
c              separate hot and cold decks (DDS, multizone)                     DKTEMP 300
        CFM  = AMAX1(CFM, 1.0)                                                  CCIG7   53
        CFMC = AMAX1(CFMC,1.0)                                                  CCIG7   54
        CFMH = AMAX1(CFMH,1.0)                                                  CCIG7   55
        CoilCFMc = CFMC + CFML                                                  HVAC1   89
        CoilCFMh = CFMH + CFMLh                                                 HVAC1   90
        IF (DDSTYPE .NE. 2)  CFMH = 0.                                          DKTEMP 303
      ENDIF                                                                     DKTEMP 304
      CoilCFMc = AMAX1(1., CoilCFMc)                                            CCIG7   56
      CoilCFMh = AMAX1(1., CoilCFMh)                                            CCIG7   57
      GO TO 28                                                                  DKTEMP 305
c                                                                               DKTEMP 306
c              PIUS only                                                        CCIG12   8
c              set limit on maximum flow to each zone                           CCIG12   9
   22 IF (<sy.FanOnPast> .gt. 0.)  THEN                                         -044c2  36
c              fans ran last hour                                               CCIG12  11
        IF (<MIN-CFM-RATIO> .LE. 0.99  .AND.                                    CCIG12  12
     $                           <CL_COIL_CFM> .GT. <SUPPLY-CFM>)  THEN         HVAC22  32
          CFMRAT = <CFMRATIO>                                                   CCIG12  14
        ELSE                                                                    CCIG12  15
          CFMRAT = 1.0                                                          CCIG12  16
        ENDIF                                                                   CCIG12  17
c              calc the cooling diversity factor using last hours cfm           CCIG12  18
        CFMDIV = AMIN1(<CL_COIL_CFM>/(<SUPPLY-CFM>/<CFMRATIO>),CFMRAT)          CCIG12  19
      ELSE                                                                      CCIG12  20
c              calc the cooling diversity factor using by guessing              CCIG12  21
c              whether in heating or cooling                                    CCIG12  22
        IF (DBT .LT. (<MIN-SUPPLY-T>+<AZHEAT>)*0.5)  THEN                       CCIG12  23
c              heating                                                          CCIG12  24
          CFMRAT = AMIN1(1., AMAX1(<SUPPLY-CFM>/<CFMH>,<CFMRATIO>))             CCIG12  25
          CFMDIV = AMIN1(<CFMH>/(<SUPPLY-CFM>/<CFMRATIO>),<CFMRATIO>)           CCIG12  26
        ELSE                                                                    CCIG12  27
c              cooling                                                          CCIG12  28
          CFMRAT = <CFMRATIO>                                                   CCIG12  29
          CFMDIV = CFMRAT                                                       CCIG12  30
        ENDIF                                                                   CCIG12  31
      ENDIF                                                                     CCIG12  32
      CFMDIV = CFMDIV/(1.0+<INDUCTION-RATIO>)                                   CCIG12  33
c                                                                               DKTEMP 320
      DO 2250 NZ=1,NSZ                                                          DKTEMP 321
      ZP2 = <ZP2>                                                               DKTEMP 322
      <CFMIDT> = 0.                                                             DKTEMP 323
      ZMULT = <MULTIPLIER>                                                      DKTEMP 324
      IF (<ZONE-TYPE> .NE. 1)  GO TO 2250                                       DKTEMP 325
C              SET TOTAL AIR INTO THE ZONE                                      DKTEMP 326
      IF (<TERMINAL-TYPE> .EQ. 3)  THEN                                         -036   372
        ZCFMT = <ZFCFMD>                                                        -036   373
      ELSE IF (<TERMINAL-TYPE> .EQ. 4)  THEN                                    -036   374
        ZCFMT = <CFMAX>*CFMDIV + <ZFCFMD>*<ZFONF>                               -036   375
      ELSE                                                                      -036   376
        ZCFMT = <CFMAX>*CFMDIV                                                  -036   377
      ENDIF                                                                     -036   378
      IF (<EXHAUST-SOURCE> .eq. 1) THEN   ! makeup by system OA                 -046   179
        Call ZoneExhaust(1, <CFMAX>)      ! set EXCFM                           -046   180
      ELSE                                                                      -046   181
        EXCFM = 0.                                                              -046   182
      ENDIF                                                                     -046   183
      CFMz = <CFMAX>*CFMDIV                                                     -044e  138
      SELECT CASE (<AIRFLOW-TRACKING>)                                          -044e  139
      CASE (0,1)  ! supply is at least exhaust                                  -044e  140
        CFMz  = Max(CFMz, EXCFM)                                                -044e  141
      CASE (2)  ! exhaust tracks supply                                         -044e  142
        EXCFM = CFMz                                                            -044e  143
      CASE (3)  ! track greater of exhaust or supply                            -044e  144
        EXCFM = Max(CFMz, EXCFM)                                                -044e  145
        CFMz  = EXCFM                                                           -044e  146
      END SELECT                                                                -044e  147
      CFM  = CFM  + CFMz*ZMULT                                                  -044e  148
      ECFM = ECFM + EXCFM*ZMULT                                                 DKTEMP 333
      <RCFMT> = AMAX1(0.,ZCFMT-EXCFM)                                           DKTEMP 334
      <RCFM> = <RCFMT>                                                          DKTEMP 337
      <CFMT> = ZCFMT                                                            -036   379
      IF (<IND-AIRZ-ZD> .EQ. -100)  THEN                                        -036   380
        RCFMI = RCFMI + <RCFM>*ZMULT                                            -036   381
      ELSE                                                                      -036   382
        RCFMTX = RCFMTX + <RCFMT>*ZMULT                                         -036   383
      ENDIF                                                                     -036   384
C              INDUCED AIR FROM CENTRAL ZONE                                    DKTEMP 340
C              IF START UP HOUR, CALCULATE INDUCED CFM.  OTHERWISE USE          DKTEMP 341
C              LAST HOUR                                                        DKTEMP 342
      IF (<sy.FanOnPast> .lt. 0.)  THEN                                         -044c2  37
        CFMIND = ZCFMT - <CFMAX>*CFMDIV                                         -036   386
      ELSE                                                                      -036   387
        IF (<TERMINAL-TYPE> .EQ. 3)  THEN                                       -037    11
          CFMIND = <CFMIND>                                                     -037    12
        ELSE IF (<TERMINAL-TYPE> .EQ. 4)  THEN                                  -037    13
          CFMIND = <ZFCFMD>*<ZFONF>                                             -037    14
        ELSE                                                                    -037    15
          CFMIND = 0.                                                           -037    16
        ENDIF                                                                   -037    17
      ENDIF                                                                     -036   389
C              DCV - Calculate zone Occupancy based vent CFM and frac           -044c  394
      CFMZ = <CFMAX>*CFMDIV                                                     -044c  395
      IF(<MIN-OA-METHOD>.LT.0)  THEN                                            -044c  396
        RETR = (1. - (EXCFM/CFMZ))                                              -044c  397
        MZ = ISPB + (<NZSPACE>-1)*MZLEN                                         -044c  398
        DCVOAcfmZ = SchVal(<PEOPLE-SCHEDULE>, 1.)                               -045b   61
     &            * <ZPPLNO> * <OA-CFM/PER>                                     -045b   62
        IF(<MIN-OA-METHOD>.EQ.-1) DCVOAcfmZ = RETR*DCVOAcfmZ                    -044c  400
        XX = <OUTSIDE-AIR-CFM>                                                  -044c  401
        IF(XX .EQ. 0.)                                                          -044c  402
     $     XX = AMAX1(<OA-FLOW/AREA>*<AREA>,<OA-CHANGES>*<VOLUME>/60.)          -044c  403
        DCVOAcfmZ = AMIN1(CFMZ,AMAX1(DCVOAcfmZ,XX))                             -044c  404
        IF (CFMZ .GT. 0.  .AND.  <sy.FanOnPast> .lt. 0.)  THEN                  -044c2  38
          DCVOAcfmF = DCVOAcfmZ/CFMZ                                            -044c  406
        ELSE                                                                    -044c  407
          IF(<DCVOAcfmZ>+<DCVOAcfmFrac> .GT. 0.) THEN                           -044c  408
            DCVOAcfmF = AMIN1(1.,(DCVOAcfmZ/<DCVOAcfmZ>)*<DCVOAcfmFrac>)        -044c  409
          ELSEIF(<COIL_CFMZ> .GT. 0.) THEN                                      -044c  410
            DCVOAcfmF = AMIN1(1.,DCVOAcfmZ/<COIL_CFMZ>)                         -044c  411
          ELSEIF(CFMZ .GT. 0.) THEN                                             -044c  412
            DCVOAcfmF = AMIN1(1.,DCVOAcfmZ/CFMZ)                                -044c  413
          ELSE                                                                  -044c  414
            DCVOAcfmF = AMIN1(1.,DCVOAcfmZ/<CFMAX>)                             -044c  415
          ENDIF                                                                 -044c  416
        ENDIF                                                                   -044c  417
        <DCVOAcfmZ> = DCVOAcfmZ                                                 -044c  418
        DCVOAcfmS = DCVOAcfmS + DCVOAcfmZ*ZMULT                                 -044c  419
        DCVOAcfmFC= AMIN1(1.,AMAX1(DCVOAcfmFC,DCVOAcfmF))                       -044c  420
      ELSE                                                                      -044c  421
        DCVOAcfmZ = 0.0                                                         -044c  422
        DCVOAcfmF = 0.0                                                         -044c  423
      ENDIF                                                                     -044c  424
C              SUM THE INDUCED AIR                                              DKTEMP 345
C              SAVE CFMIND                                                      DKTEMP 346
      <CFMIND> = CFMIND                                                         DKTEMP 347
C     IF (DEBUG) PRINT 9002,ZCFMT,<CFMAX>,CFMIND,CFMIDT                         DKTEMP 348
C9002 FORMAT(1X,8HZCFMT = ,E10.3,2X,10H+CFMAX+ = ,E10.3,2X,                     DKTEMP 349
C    1 9HCFMIND = ,E10.3,2X,9HCFMIDT = ,E10.3)                                  DKTEMP 350
C              SUBTRACT OFF THE INDUCED AIR FROM THE INTERIOR ZONES             DKTEMP 351
C              RETURN CFM                                                       DKTEMP 352
      IF (<IND-AIRZ-ZD> .GT. 0) THEN                                            -036   390
        ZP1S = ZP1                                                              -036   391
        ZP1 = <IND-AIRZ-ZD>                                                     -036   392
        IF(ZP1 .ne. ZP1S) THEN                                                  -036   393
          <CFMIDT> = <CFMIDT> + ZMULT*CFMIND                                    -036   394
          <RCFM> = AMAX1(0., <RCFM>-CFMIND*ZMULT)                               -036   395
          RCFMI = AMAX1(0., RCFMI-CFMIND*ZMULT)                                 -036   396
        ELSE                                                                    -036   397
          <CFMIDT> = <CFMIDT> + CFMIND                                          -036   398
          <RCFM> = AMAX1(0., <RCFM>-CFMIND)                                     -036   399
          RCFMTX = AMAX1(0., RCFMTX-CFMIND)                                     -036   400
        ENDIF                                                                   -036   401
        ZP1 = ZP1S                                                              -036   402
      ENDIF                                                                     -036   403
 2250 ZP1 = ZP1 + NZD                                                           DKTEMP 360
      RCFM = CFM - ECFM                                                         DKTEMP 361
      RCFMMI = AMAX1(0.,RCFM-RCFMI)                                             DKTEMP 362
      ZP1 = ISZ                                                                 DKTEMP 363
C              NOW GET WEIGHTED RETURN TEMPERATURE AND OTHER QUANTITIES         DKTEMP 364
      DO NZ = 1,NSZ                                                             -036   404
        ZP2 = <ZP2>                                                             -036   405
        IF (<ZONE-TYPE> .EQ. 1) THEN                                            -036   406
          IF (<EXHAUST-SOURCE> .eq. 1) THEN   ! makeup by system OA             -046   184
            Call ZoneExhaust(1, <CFMAX>)      ! dont track induction            -046   185
          ELSE                                                                  -046   186
            EXCFM = 0.                                                          -046   187
          ENDIF                                                                 -046   188
          SELECT CASE (<AIRFLOW-TRACKING>)                                      -044e  150
          CASE (2)  ! exhaust tracks supply                                     -044e  151
            EXCFM = <CFMAX>*CFMDIV                                              -044e  152
          CASE (3)  ! track greater of exhaust or supply                        -044e  153
            EXCFM = Max(<CFMAX>*CFMDIV, EXCFM)                                  -044e  154
          END SELECT                                                            -044e  155
          IF ((<RCFM>+EXCFM).gt.0.) THEN                                        -037    18
            RETR  = 1.0-(EXCFM/(<RCFM>+EXCFM))                                  -037    19
          ELSE                                                                  -037    20
            RETR  = 1.0                                                         -037    21
          ENDIF                                                                 -037    22
          ZMULT = <MULTIPLIER>                                                  -036   409
          TR = TR + <TNOW>*<RCFM>*RETR*ZMULT                                    -036   410
          IF (<IND-AIRZ-ZD> .EQ. -100)  THEN                                    -036   411
            IF(<RCFMT> .GT. 0.)                                                 -036   412
     $        QPZ = <QLIGHTRETURN>*ZMULT*<RCFM>/<RCFMT>                         -036   413
          ELSE                                                                  -036   414
            QPZ = <QLIGHTRETURN>*ZMULT                                          -036   415
          ENDIF                                                                 -036   416
          CINF  = CINF + <CFMINF>*RETR*ZMULT                                    ERV    106
          QLSUM = QLSUM + <QL>*RETR*ZMULT                                       -036   418
          QP    = QP + QPZ                                                      -036   419
        ENDIF                                                                   -036   420
        ZP1 = ZP1 + NZD                                                         -036   421
      ENDDO                                                                     -036   422
                                                                                -045f   71
c              Duct air losses                                                  -045f   72
      CFML  = 0.                                                                -045f   73
      CFMLh = 0.                                                                -045f   74
      IF (<DUCTCFMLOSS> .gt. 0.) THEN                                           -045f   75
        SELECT CASE (<AIR-LOSS-TYPE>)                                           -045f   76
        CASE (2)  ! proportional leakage                                        -045f   77
          CFML = CFM * <DUCT-AIR-LOSS>/(1.0-<DUCT-AIR-LOSS>)                    -045f   78
        CASE DEFAULT  ! constant leakage                                        -045f   79
          CFML = <DUCTCFMLOSS>                                                  -045f   80
        END SELECT                                                              -045f   81
      ENDIF  ! DUCTCFMLOSS                                                      -045f   82
                                                                                -045f   83
c              estimated heating and cooling flows thru the                     HVAC1   93
c              central PIU system                                               HVAC1   94
      CFM = AMAX1(CFM, 1.0)                                                     -036   423
      CoilCFMc = AMAX1(1., CFM + CFML)                                          -036   424
      CoilCFMh = CoilCFMc                                                       -036   425
      CFMH = 0.                                                                 -036   426
c              End of PIU calcs                                                 RetLoss 70
   28 CONTINUE                                                                  RetLoss 71
c                                                                               RetLoss 72
c              CFM returning from conditioned zones                             RetLoss 73
      RCFM = AMAX1(0.0, CFM+CFMH - ECFM)                                        RetLoss 74
c              Account for duct leakage                                         RetLoss 75
      DuctExfil = 0.                                                            RetLoss 76
      DuctInfil = 0.                                                            RetLoss 77
      IF (<DUCTCFMLOSS> .GT. 0.)  THEN                                          -045f   84
c              adjust supply airflow(s)                                         RetLoss 79
        CFM  = CFM  + CFML                                                      RetLoss 80
        CFMH = CFMH + CFMLh                                                     RetLoss 81
        IF (ICODE .NE. 27)  THEN                                                RetLoss 82
          DuctExfil = CFML + CFMLh                                              RetLoss 83
        ELSE                                                                    RetLoss 84
          DuctExfil = CFML                                                      RetLoss 85
        ENDIF                                                                   RetLoss 86
c              adjust return and exhaust airflows                               RetLoss 87
        IF (<DUCT-ZTYPE> .EQ. 3)  THEN                                          RetLoss 88
c              air loss occurs in plenum - increase return flow only            RetLoss 89
          RCFM = RCFM + DuctExfil                                               RetLoss 90
        ELSE                                                                    RetLoss 91
c              air loss is in unconditioned zone - adjust return                RetLoss 92
c              and/or exhaust flow                                              RetLoss 93
          DuctInfil = DuctExfil * (1.-<DUCT-AIR-LOSS-OA>)                       RetLoss 94
          RCFM      = RCFM + DuctInfil                                          RetLoss 95
          ECFM      = ECFM + DuctExfil - DuctInfil                              RetLoss 96
c              adjust summed return air quantities                              RetLoss 97
          ZP1   = <DUCT-LOSS-ZONE>                                              RetLoss 98
          ZP2   = <ZP2>                                                         RetLoss 99
          Zmult = <MULTIPLIER>                                                  RetLoss100
          TR    = TR + <TNOW>*DuctInfil               ! return T                RetLoss101
          RETR  = DuctInfil                           ! back into duct          RetLoss102
     &              / (<CFMINF>*Zmult + DuctExfil)                              RetLoss103
          QLSUM = QLSUM + <QL>     * RETR * Zmult     ! latent                  RetLoss104
          F     = F     + <CFMINF> * RETR * Zmult     ! infiltration            RetLoss105
        ENDIF  ! DUCT-ZTYPE                                                     RetLoss106
      ENDIF    ! DUCTCFMLOSS                                                    -045f   85
c                                                                               RetLoss108
c              Return temperature                                               RetLoss109
      IF (RCFM .GT. 1.0)  THEN                                                  RetLoss110
c              divide the weighted summed temp by RCFM to get return temp       RetLoss111
        TR = TR/RCFM                                                            RetLoss112
c              add heat from lights                                             RetLoss113
        IF (<RETURN-AIR-PATH> .GT. 0)                                           RetLoss114
     1    TR = TR + QP/(CONS(1)*RCFM)                                           RetLoss115
        TR = TR + DUCTDT(TR,RCFM,3,1,0)  ! return UA loss                       -044c4  28
      ELSE                                                                      RetLoss116
c              if no return air, use temp of first zone                         RetLoss117
        ZP1 = ISZ                                                               RetLoss118
        TR  = <TNOW>                                                            RetLoss119
      ENDIF                                                                     RetLoss120
c              air returning to mixed air plenum - Note that CFMH is            DKTEMP 407
c              nonzero only for dual-fan hot deck                               DKTEMP 408
      RCFMmix = RCFM - CFMH                                                     DKTEMP 409
C              GET TOTAL EXHAUST CFM AND LATENT GAIN FROM PLENUMS               DKTEMP 410
      QLSUMP = 0.                                                               DKTEMP 411
      CINFP  = 0.                                                               DKTEMP 412
      ECFMP  = 0.                                                               DKTEMP 413
      Nplen = <NumPlenZONES>                                                    HVAC2   26
      IF (Nplen .EQ. 0)  GOTO 26                                                HVAC2   27
      DO 25  NZ=1,Nplen                                                         HVAC2   28
c              pick up the pointer to the plenum                                HVAC2   29
      ZP1    = <ISZONES-plenum> + (NZ-1)*NZD                                    HVAC2   30
      ZP2 = <ZP2>                                                               DKTEMP 417
      IF (<EXHAUST-SOURCE> .eq. 1) THEN   ! makeup by system OA                 -046   189
        CFMp = RCFMmix * <AREA>/<PLENMULT>                                      -046   190
        Call ZoneExhaust(1, CFMp)         ! set EXCFM                           -046   191
      ELSE                                                                      -046   192
        EXCFM = 0.                                                              -046   193
      ENDIF                                                                     -046   194
      ECFMP = ECFMP + EXCFM*<MULTIPLIER>                                        DKTEMP 419
      RETRP = 1. - EXCFM*<PLENMULT>/(<AREA>*(RCFM+1.E-6))                       DKTEMP 420
      QLSUMP = QLSUMP + <QL>*<MULTIPLIER>*RETRP                                 DKTEMP 421
      CINFP  = CINFP + <CFMINF>*<MULTIPLIER>*RETRP                              DKTEMP 422
   25 CONTINUE                                                                  DKTEMP 423
   26 CONTINUE                                                                  HVAC2   31
c              ratio of air leaving vs. entering the plenum                     DKTEMP 424
      RETRP = 1. - ECFMP/(RCFM+1.E-6)                                           DKTEMP 425
c              adjust latent and infiltration loads for plenum effects          DKTEMP 426
      QLSUM = QLSUM*RETRP + QLSUMP                                              DKTEMP 427
      CINF  = CINF *RETRP + CINFP                                               ERV    109
c              same for refrigeration cases                                     DKTEMP 429
      G     =  G * RETRP                                                        DKTEMP 430
      GW    = GW * RETRP                                                        DKTEMP 431
c              add plenum exhaust to conditioned-zone exhaust                   DKTEMP 432
      ECFM = ECFM + ECFMP                                                       DKTEMP 433
c              exhaust CFM cannot be greater than what can be supplied          DKTEMP 434
c              from OA makeup                                                   DKTEMP 435
      ECFM = AMIN1(ECFM, CFM)                                                   DKTEMP 436
c              CFM returning to airhandlers.                                    DKTEMP 437
      RCFM = AMAX1(0., RCFM - ECFMP)                                            DKTEMP 438
c              CFM returning to mixed air plenum                                DKTEMP 439
c              (different from RCFM only for dual-fan systems)                  DKTEMP 440
      RCFMmix = AMAX1(0., RCFMmix - ECFMP)                                      DKTEMP 441
c                                                                               DKTEMP 442
c              exfiltration due to building pressurization                      DKTEMP 443
      IF (<ExfilCFM> .GT. 1.)  THEN                                             DKTEMP 444
c              must be less than the supply from the mixed air plenum           DKTEMP 445
        EXFIL  = AMIN1(CFM*FON, <ExfilCFM>)                                     DKTEMP 446
c              exfiltration is only the amount above exhaust                    DKTEMP 447
        EXFIL  = AMAX1(0., EXFIL-ECFM )                                         DKTEMP 448
c              adjust QLSUM and CINF for exfiltration effects                   DKTEMP 449
        IF (EXFIL .LT. RCFMmix)  THEN                                           DKTEMP 450
          RETRx = 1. - EXFIL/(RCFMmix+1.E-6)                                    DKTEMP 451
        ELSE                                                                    DKTEMP 452
          RETRx = 0.                                                            DKTEMP 453
        ENDIF                                                                   DKTEMP 454
        QLSUM  = QLSUM * RETRx                                                  DKTEMP 455
        CINF   = CINF  * RETRx                                                  ERV    110
c              include exfiltration in building exhaust                         DKTEMP 457
        ECFM   = ECFM + EXFIL                                                   DKTEMP 458
c              CFM returning from the plenum and/or after                       DKTEMP 459
c              any barometric relief                                            DKTEMP 460
        RCFM   = AMAX1(0., RCFM - EXFIL )                                       DKTEMP 461
c              CFM returning to mixed air plenum after any                      DKTEMP 462
c              barometric relief                                                DKTEMP 463
        RCFMmix = AMAX1(0., RCFMmix - EXFIL )                                   DKTEMP 464
      ELSE                                                                      ERV    111
c              Include duct air lost to unconditioned zone                      ERV    112
        EXFIL = DuctExfil - DuctInfil                                           RetLoss121
      ENDIF                                                                     DKTEMP 465
c              for dual-fan dual-duct system, the return fan location           DKTEMP 466
c              may be common to both fans (1) or only the cold deck (2)         DKTEMP 467
      IF ((DDSTYPE .NE. 2) .OR. (<RETURN-FAN-LOC> .NE. 2))  THEN                DKTEMP 468
c              all single-fan systems and dual-fan w/ common return fan         DKTEMP 469
        RfanCFM = RCFM                                                          DKTEMP 470
      ELSE                                                                      DKTEMP 471
c              dual-fan w/ return fan on cold deck only                         DKTEMP 472
        RfanCFM = RCFMmix                                                       DKTEMP 473
      ENDIF                                                                     DKTEMP 474
C************************** run function : DKTEMP-1 ****************            DKTEMP 475
      IF( MSYSF(21) .NE. 0 )   CALL  FINTS( MSYSF(21), 1. )                     DKTEMP 476
C*******************************************************************            DKTEMP 477
c              estimate fan power consumption                                   DKTEMP 478
      CALL FANPWR(0,CFM,CFMH,RfanCFM,DTS,DTSh,DTR)                              DKTEMP 479
C              CALC HEAT GIANS                                                  DKTEMP 480
      DTS    = <SUPPLY-DELTA-T>*CONS(3)*DTS                                     DKTEMP 481
c              Supply rise across draw through fan                              -034   145
      DTSd   = DTS*FLOAT(<FAN-PLACEMENT>)                                       -034   146
c              return fan temp rise - note that DELTA-T is zero                 DKTEMP 482
c              if a relief fan                                                  DKTEMP 483
      DTR  = <RETURN-DELTA-T>*CONS(3)*DTR                                       DKTEMP 484
C              SET DTF TO BLOW-THROUGH HEAT GAIN                                DKTEMP 485
      DTF    = 0.0                                                              DKTEMP 486
      IF(<FAN-PLACEMENT> .EQ. 0)  DTF = DTS                                     DKTEMP 487
c              fan temp rise during heating                                     DKTEMP 488
      IF (DDSTYPE .LT. 2)  THEN                                                 -131   177
c              single-fan systems                                               -131   178
        DTSh = DTS                                                              -131   179
        DTFh = DTF                                                              -131   180
      ELSE                                                                      -131   181
c              dual-fan dual-duct system                                        -131   182
        DTSh   = <HSUPPLY-DELTA-T>*CONS(3)*DTSh                                 -131   183
        IF(<HFAN-PLACEMENT> .EQ. 0)  THEN                                       -131   184
c              temperature rise of mixed air due to blow-thru fan heat          -131   185
          DTFh = DTSh                                                           -131   186
        ELSE                                                                    -131   187
          DTFh = 0.                                                             -131   188
        ENDIF                                                                   -131   189
      ENDIF                                                                     -131   190
      F      = CINF / AMAX1(RCFMmix, <CFM/ACH>)                                 ERV    114
c              gain in humidity ratio from zones                                DKTEMP 498
      DW     = QLSUM/(CONS(2)*AMAX1(RCFMmix,<CFM/ACH>))                         DKTEMP 499
c              Note that refrigeration terms G and GW are not adjusted          DKTEMP 500
c              here, as they are last hours terms passed from VARVOL,           DKTEMP 501
c              and were already divided by CFM                                  DKTEMP 502
c                                                                               DKTEMP 503
C CFM RATIO AND CFM * HUMIDITY RATIO FROM                                       DKTEMP 504
C REFRIG EQUIP LAST HOUR                                                        DKTEMP 505
      G = <G>                                                                   DKTEMP 506
      GW = <GW>                                                                 DKTEMP 507
c                                                                               HVAC22  33
c               Now estimate the plenum temperature for the return air          HVAC22  34
c               temperature calculations                                        HVAC22  35
      IF (<RETURN-AIR-PATH> .EQ. 2  .AND.  <NumPlenZONES> .GT. 0)  THEN         HVAC22  36
        TRP    = 0.0                                                            HVAC22  37
        dTp    = 0.0                                                            HVAC22  38
        Nplen  = <NumPlenZONES>                                                 HVAC22  39
        DO  NZ=1,Nplen                                                          HVAC22  40
c              pick up the pointer to the plenum                                HVAC22  41
          ZP1    = <ISZONES-plenum> + (NZ-1)*NZD                                HVAC22  42
          ZP2    = <ZP2>                                                        HVAC22  43
c              weighted plenum temperature                                      HVAC22  44
          TRP    = TRP + <TNOW>*<MULTIPLIER>*<AREA>                             HVAC22  45
          IF (<sy.FanOnPast> .gt. 0.)  THEN                                     -044c2  39
c              weighted plenum temperature correction factor based on           HVAC22  47
c              previous history                                                 HVAC22  48
            dT1 = <TNOW> - <TPAST>                                              -041N    1
            dT2 = <TPAST> - <TPAST2>                                            -041N    2
c                use 2nd derivative to minimize overshoot                       -041N    3
            IF (dT1*dT2 .GT. 0.  .AND.  Abs(dT1) .lt. Abs(dT2))  THEN           -041N    4
              ddT = dT1 - dT2                                                   -041N    5
            ELSE                                                                -041N    6
              ddT = 0.                                                          -041N    7
            ENDIF                                                               -041N    8
            dTp = dTp + (dT1 + ddT)*<MULTIPLIER>*<AREA>                         -041N    9
          ENDIF                                                                 HVAC22  54
        ENDDO                                                                   HVAC22  55
c              divide the weighted temps by area to get temp                    HVAC22  56
        TRP    = TRP / <PLENMULT>                                               HVAC22  57
        dTp    = dTp / <PLENMULT>                                               HVAC22  58
c              restrict the plenum temperature correction factor                HVAC22  59
c              to minimize bad estimates                                        HVAC22  60
        IF (TR .LE. TRP)  THEN                                                  HVAC22  61
          dTp = MAX(-5., MIN(0., dTp))                                          HVAC22  62
        ELSE                                                                    HVAC22  63
          dTp = MIN( 5., MAX(0., dTp))                                          HVAC22  64
        ENDIF                                                                   HVAC22  65
        TRP = TRP + dTp                                                         HVAC22  66
        IF (<sy.FanOnPast> .gt. 0.)  THEN                                       -044c2  40
c              return temp is plenum temp if fans were on the                   HVAC22  68
c              previous hour                                                    HVAC22  69
          TR = TRP                                                              HVAC22  70
        ELSE                                                                    HVAC22  71
c              otherwise make the return be halfway between the two             HVAC22  72
          TR = (TR+TRP) * 0.5                                                   HVAC22  73
        ENDIF                                                                   HVAC22  74
      ENDIF                                                                     HVAC22  75
c                                                                               HVAC22  76
c              add fan heat to return                                           HVAC22  77
      IF ((DDSTYPE .NE. 2) .OR. (<RETURN-FAN-LOC> .NE. 2))  THEN                HVAC22  78
c              all systems except dual-fan w/ cold deck return fan              DKTEMP 532
        TR  = TR + DTR                                                          DKTEMP 533
        TRh = TR                                                                DKTEMP 534
      ELSE                                                                      DKTEMP 535
c              dual-fan with return fan serving cold deck only                  DKTEMP 536
        TRh = TR                                                                DKTEMP 537
        TR  = TR + DTR                                                          DKTEMP 538
      ENDIF                                                                     DKTEMP 539
c              Calc minimum outside air quantity                                -035    47
      POM    = <MIN-OUTSIDE-AIR>                                                -035    48
      SH = SchVal(<MIN-AIR-SCH>, -999.)                                         Time   241
      IF (SH .NE. -999.0)  POM = AMAX1(0.0,AMIN1(1.0,SH))                       Time   242
      IF(<MIN-OA-METHOD> .eq. 0) THEN                                           -035    54
        POMIN = AMIN1(1.,AMAX1(POM*<SUPPLY-CFM>,ECFM)/CFM)                      -035    55
      ELSEIF((<MIN-OA-METHOD> .LT. 0) .AND. (SH .EQ. -999.0))  THEN             -044c  425
        POMIN = AMIN1(1.,AMAX1(<DCVOAcfmS>,ECFM)/CFM)                           -044c  426
        IF(<MIN-OA-METHOD> .EQ. -2)                                             -044c  427
     $    POMIN = AMIN1(1.,POMIN/(1.0+POMIN-DCVOAcfmFC))                        -044c  428
      ELSE                                                                      -035    56
        POMIN = AMIN1(1.,AMAX1(POM*CFM,ECFM)/CFM)                               -035    57
      ENDIF                                                                     -035    58
C              CALC THE MIN AND MAX MIXED AIR TEMPS WE CAN GET                  -035    59
      POAMIN = POMIN                                                            -035    60
      IF (<DESICCANT> .GT. 0)  THEN                                             -035    61
        POAMIN = AMAX1(0.,AMIN1(1.,<DESICCANT-CFM>/CFM))                        -035    62
      ENDIF                                                                     -035    63
      IF (<EVAP-CL-TYPE> .GT. 0) THEN                                           -035    64
          <EVAP-CFM> = AMIN1(CFM,<EVAP-CFMD>)                                   -035    65
          POAMIN = AMAX1(0.,AMIN1(1.,<EVAP-CFM>/CFM))                           -035    66
      END IF                                                                    -035    67
c                                                                               ERV    115
c              Maximum humidity setpoint (lbs/lb)                               ERV    116
      WRMAX = WFUNC(TR, <MAX-HUMIDITY>, PATM)                                   ERV    117
c                                                                               ERV    118
c              Check for air from another system                                ERV    119
      CALL FRMSYS(DBIN0,WIN0,WBIN0)                                             ERV    120
c                                                                               ERV    121
c              Check for exhaust-air heat recovery                              ERV    122
      IF (<sy:RECOVER-EXH> .EQ. 1)  THEN                                        Bug40    9
c              Estimate mixed air setpoint                                      ERV    124
        TAPP = <COOL-SET-T> - DTS                                               ERV    125
        IF(ICODE .EQ. 16)  THEN                                                 ERV    126
          TAPP = <HEAT-SET-T> - DTS                                             ERV    127
          IF(<HEAT-SET-T> .EQ. 0.0)  TAPP = TAPP + <AZHEAT>                     ERV    128
        ENDIF                                                                   ERV    129
        xx = POMIN                                                              ERV    130
        CALL ERVentilator(30, <sy;ERVentilator>, xx, POMIN, TAPP,               ERV    131
     &                                               DBIN0, WIN0, dTmix)        ERV    132
      ENDIF                                                                     ERV    133
c                                                                               ERV    134
c              Check for add-on desiccant dehumidifier                          ERV    135
      IF (<DESICCANT> .GT. 0)  THEN                                             ERV    136
        PO    = POMIN                                                           ERV    137
        CALL DESCPF(1,DBIN0,WIN0)                                               ERV    138
        DBIN0 = DBOA                                                            ERV    139
        WIN0  = WOA                                                             ERV    140
      ENDIF                                                                     ERV    141
      TPOMIN = POMIN*DBIN0 + (1.-POMIN)*TR                                      ERV    142
      IF (<sy;ERVentilator> .GT. 0)  TPOMIN = TPOMIN + dTmix                    ERV    143
c              if preheat available                                             HVAC   163
      IF (HON .NE. 0.  .AND.  <PREHEAT-CAPACITY> .LT. -1.)  THEN                HVAC   164
        CFMoa = AMAX1(POMIN * CFM, 1.0)                                         HVAC   165
c              maximum possible preheat temperature - CapRph is the             HVAC   166
c              preheat circulation loop capacity ratio and was                  HVAC   167
c              set by the calling routine                                       HVAC   168
        TphMax = TPOMIN - (<PREHEAT-CAPACITY>*CapRph)/(CONS(1)*CFMoa)           HVAC   169
        TPOMIN = AMAX1(TPOMIN, AMIN1(<PREHEAT-T>,TphMax))                       HVAC   170
      ENDIF                                                                     HVAC   171
      TMMAX  = TPOMIN + DTF                                                     -034   147
      TPOMIN = TPOMIN + DTS                                                     -034   148
C              PICK UP MAX OA FRACTION                                          DKTEMP 643
      POMAX  = POM                                                              DKTEMP 644
      IF((<OA-CONTROL>.GT.0).AND.(POM.NE.0.0))                                  DKTEMP 645
     1POMAX  = <MAX-OA-FRACTION>                                                DKTEMP 646
C              CHECK FOR ECONOMIZER HIGH AND LOW LIMITS                         DKTEMP 647
      IF(<ECONO-LIMIT-T> .NE. UNFILD  .AND.  DBT .GT. <ECONO-LIMIT-T>)          -048m    1
     1POMAX  = POM                                                              DKTEMP 649
      IF(DBT.LT.<ECONO-LOW-LIMIT>)                                              -048m    2
     1POMAX  = POM                                                              DKTEMP 651
      IF (ICODE .EQ. 25)  POMAX = <MAX-OA-FRACTION>                             DKTEMP 652
      POMAX  = POMAX*<SUPPLY-CFM>                                               DKTEMP 653
      POMAX  = AMAX1(POMAX,ECFM)/CFM                                            DKTEMP 654
      POMAX  = AMIN1(1.0,POMAX)                                                 DKTEMP 655
      POM    = POMIN                                                            DKTEMP 656
      TMMIN = POMAX*DBIN0 + (1.-POMAX)*TR + DTF                                 DKTEMP 657
C     IF (DEBUG)  PRINT 9005,TMMIN,TR,POMAX                                     DKTEMP 658
C9005 FORMAT(1X,8HTMMIN = ,F10.3,2X,5HTR = ,F10.3,2X,8HPOMAX = ,                DKTEMP 659
C    1 E10.3)                                                                   DKTEMP 660
      IF(TMMAX .GE. TMMIN)  GOTO 32                                             DKTEMP 661
      TRP    = TMMAX                                                            DKTEMP 662
      TMMAX  = TMMIN                                                            DKTEMP 663
      TMMIN  = TRP                                                              DKTEMP 664
   32 CONTINUE                                                                  DKTEMP 665
c              if preheat available                                             HVAC   172
      IF (HON .NE. 0.  .AND.  <PREHEAT-CAPACITY> .LT. -1.)  THEN                HVAC   173
        CFMoa  = AMAX1(POMAX * CFM, 1.0)                                        HVAC   174
        TphMax = TMMIN - (<PREHEAT-CAPACITY>*CapRph)/(CONS(1)*CFMoa)            HVAC   175
        TMMIN  = AMAX1(TMMIN, AMIN1(<PREHEAT-T>,TphMax)+DTF)                    HVAC   176
      ENDIF                                                                     HVAC   177
      TMMAX  = AMAX1(TMMAX,TMMIN)                                               DKTEMP 667
      <CL_COIL_EDB> = AMAX1(TMMIN,AMIN1(TMMAX,<CL_COIL_EDB>))                   HVAC1   97
C              GET TC FOR PTGSD SYSTEM                                          DKTEMP 671
      IF (ICODE .NE. 25)  GO TO 38                                              DKTEMP 672
      CFM = <SUPPLY-CFM>                                                        DKTEMP 673
      IMODE = 7                                                                 DKTEMP 674
      CALL DSCPF1(1)                                                            DKTEMP 675
      TCMIN = T9                                                                DKTEMP 676
      TC = TCMIN                                                                DKTEMP 677
      THMAX = TPOMIN + <REHEAT-DELTA-T>                                         DKTEMP 678
   38 CONTINUE                                                                  DKTEMP 679
      IF (ICODE .EQ. 25)  RETURN                                                DKTEMP 680
      QLSUM = 0.0                                                               DKTEMP 681
      CINF = 0.0                                                                DKTEMP 682
      IF (<sy.FanOnPast> .gt. 0.)  GOTO 40                                      -044c2  41
C              NEED TO SET A SUPPLY TEMP FOR THE ECONOMIZER APPROACH            DKTEMP 684
      TC     = <COOL-SET-T> - DTS                                               DKTEMP 685
      IF(ICODE .EQ. 16)  TC = <HEAT-SET-T> - DTS                                DKTEMP 686
      IF((ICODE .EQ. 16).AND.(<HEAT-SET-T> .EQ. 0.0))                           DKTEMP 687
     1                   TC = TC + <AZHEAT>                                     DKTEMP 688
C              ASSUME THAT THE LB/LB MOISTURE IN THE AIR                        DKTEMP 689
C              MIGRATES TOWARDS TO OUTSIDE VALUE .                              DKTEMP 690
C              HOWEVER, SINCE DURING THE FIRST HOUR OF OPERATION                DKTEMP 691
C              THE RETURN IS PULLED DOWN SO WE ONLY ALLOW THE RETURN            DKTEMP 692
C              HISTORY TO GET .25 WAY BETWEEN THE TWO.  THIS WILL               DKTEMP 693
C              SIMULATE A SORT OF AVERAGE CONDITION OVER THE FIRST              DKTEMP 694
C              HOUR OF OPERATION                                                DKTEMP 695
      WF     = Min(0.25, -<sy.FanOnPast>*0.2)                                   -044c2  42
      PASTWR = <PASTWR> + WF*(WIN0-<PASTWR>)                                    DKTEMP 697
      <PASTWR> = PASTWR                                                         DKTEMP 698
C              CALL THE ECONOMIZER ROUTINE TO GET TM AND PO                     DKTEMP 699
      CALL ECONO(1,TC,POM)                                                      DKTEMP 700
C              MAKE SURE MIXED AIR IS ABOVE PREHEAT IF HEAT ON                  DKTEMP 701
c              if preheat available                                             HVAC   178
      IF (HON .NE. 0.  .AND.  <PREHEAT-CAPACITY> .LT. -1.)  THEN                HVAC   179
        CFMoa = AMAX1(POM * CFM, 1.0)                                           HVAC   180
        TphMax = TM - (<PREHEAT-CAPACITY>*CapRph)/(CONS(1)*CFMoa)               HVAC   181
        TM = AMAX1(TM, AMIN1(<PREHEAT-T>,TphMax))                               HVAC   182
      ENDIF                                                                     HVAC   183
C              MAKE SURE THE MIN MIX AIR TEMP IS NOT TOO LOW                    DKTEMP 703
      TM     = TM + DTF                                                         DKTEMP 704
C     IF (DEBUG)  PRINT 9006,TM                                                 DKTEMP 705
C9006 FORMAT(1X,5HTM = ,F10.3)                                                  DKTEMP 706
C              CALC MIX AIR HUMIDITY RATIO                                      DKTEMP 707
      WM = PO*WOA + (1.-PO)*PASTWR                                              DKTEMP 708
C              SAVE THE MIX AIR WETBULB TEMP                                    DKTEMP 709
      <CL_COIL_EWB> = WBFS(TM,WM,PATM)                                          HVAC1   98
      <CL_COIL_EDB> = TM                                                        HVAC1   99
      <PASTWOA> = WOA                                                           DKTEMP 712
c              estimate the start-up part load ratios for heating and           DKTEMP 713
c              cooling using the beginning of hour cfms                         DKTEMP 714
      <PASTPLRH> = 0.5                                                          DKTEMP 715
      <PASTPLRC> = 0.5                                                          DKTEMP 716
      IF(<COOL-SH-CAP> .NE. 0.0)                                                DKTEMP 717
     1  <PASTPLRC> = AMAX1(0.0,AMIN1(1.0,                                       DKTEMP 718
     2                      (TM-TC)*CONS(1)*CoilCFMc/<COOL-SH-CAP>))            HVAC1  100
C************************** run function : DKTEMP-2 ****************            DKTEMP 720
40    IF( MSYSF(22) .NE. 0 )   CALL  FINTS( MSYSF(22), 2. )                     DKTEMP 721
C*******************************************************************            DKTEMP 722
C              GET MIN TEMP OF AIR AFTER EVAP COOLING                           DKTEMP 723
      IF (<EVAP-CL-TYPE>.GT.0 .AND. ICODE.NE.26 .AND. CON.GT.0.) THEN           DKTEMP 724
          CALL ECONO(0,<COOL-SET-T>-DTS,POM)                                    DKTEMP 725
c              if preheat available                                             HVAC   184
          IF (HON .NE. 0.  .AND.  <PREHEAT-CAPACITY> .LT. -1.)  THEN            HVAC   185
            CFMoa = AMAX1(POM * CFM, 1.0)                                       HVAC   186
            TphMax = TM - (<PREHEAT-CAPACITY>*CapRph)/(CONS(1)*CFMoa)           HVAC   187
            TM = AMAX1(TM, AMIN1(<PREHEAT-T>,TphMax))                           HVAC   188
          ENDIF                                                                 HVAC   189
          TCMNEV = TM + DTF                                                     -042L5   1
      END IF                                                                    DKTEMP 728
C              SET ALL THE VARIABLES WE USED BACK TO ZERO                       DKTEMP 729
      TM = 0.0                                                                  DKTEMP 730
      WM     = 0.0                                                              DKTEMP 731
      PO     = 0.0                                                              DKTEMP 732
      TCHUM  = 0.0                                                              DKTEMP 733
      ECFM   = 0.0                                                              DKTEMP 734
      CFM    = 0.0                                                              DKTEMP 735
      CFMC   = 0.0                                                              DKTEMP 736
      CFMH   = 0.0                                                              DKTEMP 737
      ECFMP = 0.                                                                DKTEMP 738
      RCFM = 0.                                                                 DKTEMP 739
      SFKW = 0.                                                                 DKTEMP 740
      RFKW = 0.                                                                 DKTEMP 741
      POA = 0.                                                                  DKTEMP 742
C              INITIALIZE MIN COOLING AND MAX HEATING SUPPLY TEMPS              DKTEMP 743
C              TO THE MIN AND MAX MIX AIR TEMPS                                 DKTEMP 744
      TCMIN  = TMMIN                                                            DKTEMP 745
      THMAX  = TMMAX                                                            DKTEMP 746
      TC     = 0.0                                                              DKTEMP 747
      TH     = 0.0                                                              DKTEMP 748
C                                                                               DKTEMP 749
C              SET COLD SUPPLY TEMPERATURE                                      DKTEMP 750
C                                                                               DKTEMP 751
C               FOR EVAP COOL SYSTEM, ESTIMATE TCMIN AND THMAX                  DKTEMP 752
      IF (ICODE .EQ. 26) THEN                                                   DKTEMP 753
          PO = 1.0                                                              DKTEMP 754
          CFM = <EVAP-CFM>                                                      DKTEMP 755
          CALL EVAPPF(0,45.,DBT,HUMRAT,TCMIN,WCMIN,PEVA)                        DKTEMP 756
          THMAX = TPOMIN - <HEATING-CAPACITY>*CapRh                             HVAC   190
     $                          / (CONS(1)*<SUPPLY-CFM>*<MIN-CFM-RATIO>)        HVAC   191
          CFM = 0.                                                              DKTEMP 759
c     IF ((<ISYBUFP>.NE.0) .AND. (IRSCH.NE.0)                                   IREPRT  40
c    $                                 .AND. (IREPRT(2,35).NE.0))               IREPRT  41
c    1    WRITE(IOUTPT,9002) TCMIN,THMAX,POMIN,TPOMIN                           DKTEMP 761
c9002 FORMAT(11H --DKTEMP--,2X,7HTCMIN =,E12.6,2X,7HTHMAX =,E12.6,              DKTEMP 762
c    1                      2X,7HPOMIN =,E12.6,2X,7HTPOMIN=,E12.6)              DKTEMP 763
          PO = 0.0                                                              DKTEMP 764
          GO TO 45                                                              DKTEMP 765
      END IF                                                                    DKTEMP 766
C              IF COOLING IS OFF THEN SKIP                                      DKTEMP 767
      QCS    = 0.0                                                              DKTEMP 768
C              CALC THE THROTTLING RANGE EFFECT FOR THE COLD DECK CONTROLLER    DKTEMP 769
      TCR    = <COOL-CTRL-RANGE>*(<PASTPLRC>-0.5)                               DKTEMP 770
c              bottom of throttling range                                       DKTEMP 771
      TCRMIN = -<COOL-CTRL-RANGE> * 0.5                                         DKTEMP 772
      PASTM  = TMMIN                                                            -030    54
      IF (CON*CapRc .EQ. 0.) GO TO 45                                           HVAC12  36
C              SET REFERENCE TEMP                                               DKTEMP 774
C              FOR CHILLED WATER SYSTEMS USE ENTERING DRYBULB                   DKTEMP 775
C              FOR PACKAGED DX           USE OUTSIDE DRYBULB                    DKTEMP 776
      EDB    = TMMIN                                                            -030    55
      IF (ICODE.EQ.19 .OR. ICODE.EQ.20 .OR. ICODE.EQ.21 .OR.                    -044e  158
     &    ICODE.EQ.22 .OR. ICODE.EQ.27 .OR. ICODE.EQ.28 .OR.                    -044e  159
     &   (ICODE .EQ. 23 .AND. <COOL-SOURCE> .NE. 1)) EDB = DBT                  -044e  160
      IF (IPCCF .gt. 0)  EDB = PCCEDB                                           -045h   43
c              water-cooled condensers                                          HVAC12  37
      IF (<CW-LOOP> .GT. 0)  THEN                                               HVAC12  38
c              pointer to condenser water loop                                  HVAC12  39
        JLP    = <CW-LOOP>                                                      HVAC12  40
        EDB    = <lp;COIL_EWTest>                                               HVAC16  72
      ENDIF                                                                     HVAC12  42
c              water-side economizer                                            HVAC12  43
      IF (<WSE-LOOP> .GT. 0)  THEN                                              HVAC12  44
c              pointer to water-side econo loop                                 HVAC12  45
        JLP = <WSE-LOOP>                                                        HVAC12  46
c              difference between mixed air temp and loop temp                  HVAC12  47
        WSEDT  = PASTM - <lp;COIL_EWTest>                                       HVAC16  73
        IF (<lp;CTRL_MODE> .NE. -1                                              HVAC16  74
     $                         .AND.  WSEDT .GE. <WS-ECONO-MIN-DT>) THEN        HVAC12  50
c              heat exchanger capacities, airside and waterside                 HVAC12  51
          CAPAIR = CONS(1)*<SUPPLY-CFM> + .01                                   HVAC12  52
          CAPWTR = <lp;BTUH/GPM-F>*<WSEDESGPMS> + .01                           HVAC16  75
c              heat transfer thru heat exchanger                                HVAC12  54
          QCWSEM = AMIN1(CAPAIR,CAPWTR)*WSEDT*<WS-ECONO-XEFF>                   HVAC12  55
c              adjust mixed air temperature                                     HVAC12  56
          WSEDTA = QCWSEM / CAPAIR                                              HVAC12  57
          PASTM  = PASTM - WSEDTA                                               HVAC12  58
c              adjust water-side temperature entering the condenser (if any)    HVAC12  59
          IF (<CW-LOOP> .EQ. <WSE-LOOP>)  THEN                                  HVAC12  60
            WSEDTW = QCWSEM / CAPWTR                                            HVAC12  61
            EDB = <lp;COIL_EWTest> + WSEDTW                                     HVAC16  76
          ENDIF                                                                 HVAC12  63
        ENDIF                                                                   HVAC12  64
      ENDIF                                                                     HVAC12  65
      EDB    = AMAX1(EDB,<COOL-FT-MIN>)                                         HVAC12  66
C              CALC ADJUSTED TOTAL CAP                                          DKTEMP 800
      IF (<CONDENSER-TYPE> .eq. 3) THEN                                         -045h   44
        EWB  = Max(<CL_COIL_EWB>, <COOL-FT-MIN>)                                -045h   45
      ELSE                                                                      -045h   46
        EWB  = Max(<CL_COIL_EWB>, <COOL-FT-MIN>-10.)                            -045h   47
      ENDIF                                                                     -045h   48
      QCT    = <COOLING-CAPACITY>*CapRc*CVAL(<COOL-CAP-FT>,EWB,EDB)             HVAC   192
C              ADJUSTED SENSIBLE                                                DKTEMP 803
      QCS    = <COOL-SH-CAP>*CapRc*CVAL(<COOL-SH-FT>,EWB,EDB)                   HVAC   193
C              IF A PACKAGED UNIT ADJUST FOR ENTERING DRYBULB                   DKTEMP 805
      IF (ICODE.EQ.19 .OR. ICODE.EQ.20 .OR. ICODE.EQ.21 .OR.                    -034   149
     &    ICODE.EQ.27 .OR. ICODE.EQ.28 .OR.                                     -044e  161
     &   (ICODE .EQ. 23 .AND. <COOL-SOURCE> .NE. 1))                            -044e  162
     $   QCS = AMAX1( 0.0,                                                      -034   151
     $                QCS + CONS(1)*<SUPPLY-CFM>*(1.0-<COIL-BF>)                -034   152
     $                             *AMAX1(-20.0,AMIN1(20.,PASTM-80.0)) )        -034   153
C              MAKE SURE SENSIBLE <= TOTAL                                      DKTEMP 810
      QCS    = AMIN1(QCT,QCS)                                                   DKTEMP 811
C              CALC MIN SUPPLY TEMP                                             DKTEMP 812
      IF(PASTM .GT. <COOL-SET-T>+TCRMIN-DTSd)                                   -041d   27
     $  TCMIN  = AMAX1(<COOL-SET-T>+TCRMIN-DTSd,                                -041d   28
     $                 PASTM-(QCS/(CONS(1)*CoilCFMc)))                          -034   156
      IF (<EVAP-CL-TYPE>.GT.0 .AND. <EVAP-CL+M-SUP>.EQ.1)                       DKTEMP 814
     1    TCMIN = TCMNEV - (QCS/(CONS(1)*CoilCFMc))                             HVAC1  105
C            IF MAX-HUMIDITY HAS BEEN SPECIFIED WE NEED TO ESTIMATE THE         DKTEMP 816
C            COIL EXIT TEMPERATURE REQUIRED TO HOLD THE SETPOINT.  THIS         DKTEMP 817
C            MAY BE OFF IN THIS CALCULATION BUT IT WILL BE CORRECTED            DKTEMP 818
C            LATER.  THE MAIN FUNCTION HERE IS TO GET WITHIN A FEW DEGREES      DKTEMP 819
C            ANY TO OVERRIDE OTHER CONTROLS THAT MAY ASK FOR LITTLE OR          DKTEMP 820
C            NO COOLING THIS HOUR.                                              DKTEMP 821
      IF((<MAX-HUMIDITY>.LE.0.0).OR.(<MAX-HUMIDITY>.GE.99.))  GOTO 45           DKTEMP 822
      IF (<DESICCANT> .GT. 0.)  GOTO 45                                         ERV    144
      WM = POAMIN*WOA + (1.-POAMIN)*WRMAX                                       -030    60
c              what is needed off coil to maintain this                         DKTEMP 826
      IF (DDSTYPE .NE. 1)  THEN                                                 DKTEMP 827
c              all systems except single-fan dual-duct                          DKTEMP 828
        WCOL = (1.0+F+G)*WRMAX - DW - F*HUMRAT - GW                             DKTEMP 829
      ELSE                                                                      DKTEMP 830
c              single-fan dual-duct systems - heating and cooling CFM ratios    DKTEMP 831
        IF (<DUCT-ZTYPE> .EQ. 3)  THEN                                          RemPA  363
c              duct air lost to plenum is included in ratios                    DKTEMP 833
          PH = CoilCFMh / AMAX1(1., CoilCFMh + CoilCFMc)                        HVAC1  106
          PC = 1.0 - PH                                                         DKTEMP 835
        ELSE                                                                    DKTEMP 836
c              duct air lost to unconditioned zone is excluded                  DKTEMP 837
          PH = (CoilCFMh-CFMLh)                                                 HVAC1  107
     1                    / AMAX1(CoilCFMh+CoilCFMc-(CFML+CFMLh), 1.)           HVAC1  108
          PC = 1.0 - PH                                                         DKTEMP 840
        ENDIF                                                                   DKTEMP 841
        WCOL = ( (1.0+F)*WRMAX - PH*WM - F*HUMRAT - DW )                        DKTEMP 842
     1                                               / AMAX1(PC,1.E-6)          DKTEMP 843
      ENDIF                                                                     DKTEMP 844
C              IF WE CAN GET IT WITH MIN OA SKIP                                DKTEMP 845
      IF(WM .LE. WCOL)  GOTO 45                                                 DKTEMP 846
C             Check of OA can be used for humidity control (cooler              -030    61
C             and dryer outside)                                                -030    62
      POAMINs = POAMIN                                                          -030    63
      IF((DBOA.LE.TR) .and.                                                     -030    64
     $  (<ECONO-LIMIT-T>.EQ.UNFILD .OR. DBOA.LE.<ECONO-LIMIT-T>) .and.          -048m    3
     $  (<OA-CONTROL>.GT.0) .and.                                               -030    66
     $  (POAMIN.LT.<MAX-OA-FRACTION>)) THEN                                     -030    67
C             If OA humrat too low then mix and skip, else use max OA           -030    68
C             and continue on to see what coil needs to do                      -030    69
        IF(WOA .LT. WCOL) THEN                                                  -030    70
          X  = AMAX1(0.,AMIN1(<MAX-OA-FRACTION>,                                -030    71
     $           ((WM-WRMAX)/(WOA-WRMAX))))                                     -030    72
          TCHUM = X*DBOA + (1.-X)*TR                                            -030    73
          GOTO 45                                                               -030    74
        ELSE                                                                    -030    75
C              Re-calc min supply temps from new OA fraction                    -030    76
          POAMIN = <MAX-OA-FRACTION>                                            -030    77
C====     X      = POAMIN*DBOA + (1.-POAMIN)*TR                                 -030    78
C====     WM     = POAMIN*WOA  + (1.-POAMIN)*WRMAX                              -030    79
C====     IF (ICODE.NE.19 .and. ICODE.NE.20 .and. ICODE.NE.21 .and.             -030    80
C====$        ICODE.NE.22 .and. ICODE.NE.27 .and. ICODE.NE.28)                  -030    81
C====$    EDB = AMAX1(X,<COOL-FT-MIN>)                                          -030    82
C====     EWB = AMAX1(WBFS(X,WM,PATM),60.0)                                     -030    83
C====     QCT = <COOLING-CAPACITY>*CVAL(<COOL-CAP-FT>,EWB,EDB)                  -030    84
C====     QCS = <COOL-SH-CAP>*CVAL(<COOL-SH-FT>,EWB,EDB)                        -030    85
C====     IF(ICODE.EQ.19 .OR. ICODE.EQ.20 .OR. ICODE.EQ.21 .OR.                 -030    86
C====$       ICODE.EQ.27 .OR.ICODE.EQ.28)                                       -030    87
C====$      QCS = QCS + CONS(1)*<SUPPLY-CFM>*(1.0-<COIL-BF>)                    -030    88
C====$                         *AMAX1(-20.0,AMIN1(20.,PASTM-80.0))              -030    89
C====     QCS = AMIN1(QCT,QCS)                                                  -030    90
C ====    TCMIN= X -(QCS/(CONS(1)*<PASTCFM>))                                   -030    91
        ENDIF                                                                   -030    92
      ENDIF                                                                     -030    93
C              CALC COIL CONDITIONS AT MIN SUPPLY AND MAKE SURE WE              DKTEMP 847
C              DO NOT ASK FOR LOWER TEMP                                        DKTEMP 848
      CBF1   = CVAL(<COIL-BF-FT>,EWB,EDB)                                       DKTEMP 849
      CBF2   = CVAL(<COIL-BF-FCFM>,CoilCFMc/<RATED-CFM>,EDB)                    HVAC1  109
      CBF    = AMAX1(<COIL-BF>*CBF1*CBF2,0.001)                                 DKTEMP 851
      T      = AMAX1(TCMIN,AMIN1(PASTM,<COOL-SET-T>+TCRMIN-DTSd))               -034   157
      TSURFM = (T-CBF*PASTM)/(1.-CBF)                                           DKTEMP 853
      WSURFM = WFUNC(TSURFM,100.0,PATM)                                         DKTEMP 854
c              minimum humidity the coil can supply                             DKTEMP 855
      IF (DDSTYPE .NE. 1)  THEN                                                 DKTEMP 856
c              all systems except single-fan dual-duct                          DKTEMP 857
        WCOLM = (CBF*( (1.+F+G)*POAMIN*WOA + (1.-POAMIN)*                       -030    94
     1           (F*HUMRAT+DW+GW)) + (1.-CBF)*(1.+F+G)*WSURFM)                  DKTEMP 859
     2          / AMAX1(1.+F+G-CBF*(1.-POAMIN), 1.E-6)                          DKTEMP 860
      ELSE                                                                      DKTEMP 861
c              single-fan dual-duct                                             DKTEMP 862
        WCOLM = ( (1.-CBF)*(1.+F-PH*(1.-POAMIN))*WSURFM                         DKTEMP 863
     1            + CBF*(POAMIN*WOA + F*POAMIN*(WOA-HUMRAT)                     -030    95
     2                   + F*HUMRAT + (1.-POAMIN)*DW) ) /                       DKTEMP 865
     3                    AMAX1(1.+ F - (1.-POAMIN)*(PH+PC*CBF), 1.E-6)         DKTEMP 866
      ENDIF                                                                     DKTEMP 867
      WCOL   = AMAX1(WCOL,WCOLM)                                                DKTEMP 868
C              IF WE ARE AT THE MIN SET DEHUMIDIFICATION RESET TO IT AND        DKTEMP 869
C              GET OUT OF HERE                                                  DKTEMP 870
      TCHUM  = TCMIN                                                            DKTEMP 871
      IF(WCOL .LE. WCOLM)  GOTO 44                                              DKTEMP 872
C              OTHERWISE WE MUST CALC THE REQUIRED SURFACE SSATURATION          DKTEMP 873
C              AND LOOK FOR THE TEMPERATURE REQUIRED TO GET THIS                DKTEMP 874
c                                                                               DKTEMP 875
      IF (DDSTYPE .NE. 1)  THEN                                                 DKTEMP 876
c              all systems except single-fan dual-duct                          DKTEMP 877
        WSURF = ( (1.+F+G-CBF*(1.-POAMIN))*WCOL -                               DKTEMP 878
     1            CBF*( (1.+F+G)*POAMIN*WOA +                                   -030    96
     2                  (1.-POAMIN)*(F*HUMRAT+DW+GW) ) )                        DKTEMP 880
     3        / AMAX1( (1.-CBF)*(1.+F+G), 1.E-6)                                DKTEMP 881
      ELSE                                                                      DKTEMP 882
c              single-fan dual-duct                                             DKTEMP 883
        WSURF = ( (1.+ F - (1.-POAMIN)*(PH+PC*CBF))*WCOL -                      DKTEMP 884
     1            CBF*( POAMIN*WOA + F*POAMIN*(WOA-HUMRAT)                      -030    97
     2                  + F*HUMRAT + (1.-POAMIN)*DW) )                          DKTEMP 886
     3        / AMAX1( (1.-CBF)*(1.+F-PH*(1.-POAMIN)), 1.E-6 )                  DKTEMP 887
      ENDIF                                                                     DKTEMP 888
      WSURF2 = WSURFM                                                           DKTEMP 889
      DO 42 I=1,50                                                              DKTEMP 890
      TSURF  = TSURFM + FLOAT(I)                                                DKTEMP 891
      WSURF1 = WFUNC(TSURF,100.0,PATM)                                          DKTEMP 892
      IF(TSURF .GE. TMMAX)  GOTO 43                                             DKTEMP 893
      IF(WSURF1 .GE. WSURF)  GOTO 43                                            DKTEMP 894
      WSURF2 = WSURF1                                                           DKTEMP 895
   42 CONTINUE                                                                  DKTEMP 896
   43 TSURF  = TSURF - 1.0 + AMIN1(1.0,(WSURF-WSURF2)/(WSURF1-WSURF2))          DKTEMP 897
      TCHUM  = TSURF*(1.0-CBF)+CBF*PASTM                                        -030    98
   44 CBF1   = 0.0                                                              DKTEMP 899
      CBF2   = 0.0                                                              DKTEMP 900
      CBF    = 0.0                                                              DKTEMP 901
      TSURF  = 0.0                                                              DKTEMP 902
      TSURFM = 0.0                                                              DKTEMP 903
      WSURF  = 0.0                                                              DKTEMP 904
      WSURFM = 0.0                                                              DKTEMP 905
      POAMIN = POAMINs                                                          -030    99
   45 TR     = 0.0                                                              DKTEMP 906
      WM     = 0.0                                                              DKTEMP 907
      WRMAX  = 0.0                                                              DKTEMP 908
c                                                                               DKTEMP 909
c              Initial heating calcs                                            DKTEMP 910
c              entering heating coil temp                                       DKTEMP 911
      IF (DDSTYPE .LT. 2)  THEN                                                 DKTEMP 912
c              single-fan systems - set to last hours mixed air temp            DKTEMP 913
        SELECT CASE (ICODE)                                                     -041d   29
          CASE (2,17,19,26,27,28,29)  ! control-zone systems                    -041d   30
            THMIX = TMMAX                                                       -041d   31
          CASE DEFAULT                                                          -041d   32
            THMIX = <CL_COIL_EDB> + DTFh                                        -041d   33
        END SELECT                                                              -041d   34
      ELSE                                                                      DKTEMP 915
c              dual-fan system - set to return air temp                         DKTEMP 916
        THMIX = TRh + DTFh                                                      DKTEMP 917
      ENDIF                                                                     DKTEMP 918
c              calculate available heating capacity                             DKTEMP 919
      QHT    = 0.0                                                              DKTEMP 920
      QHTNS  = 0.0                                                              DKTEMP 921
      IF(<HEATING-CAPACITY>*HON .LT. -1.0)  THEN                                DKTEMP 922
        IF (.not. HeatPump) THEN                                                -044d   18
          QHT = <HEATING-CAPACITY> * CapRh                                      -044d   19
        ELSE  ! a heat pump                                                     -044d   20
c              pick up max elec heat cap                                        -044d   21
          QHT = <SUPP-HEAT-CAP>                                                 -044d   22
          IF (<CW-LOOP> .gt. 0) THEN  ! water-loop heat pump                    -048j    2
            Jlp = <CW-LOOP>                                                     -047k   28
            IF (CapRh .ne. 0.  .and.         ! set in Varvol if loop off        -047k   29
     &          <lp;COIL_EWTest> .ge. <MIN-HP-T>) THEN     ! warm enough        -047k   30
              QHTNS = <HEATING-CAPACITY>                                        -047k   31
     &              * Cval(<HEAT-CAP-FT>,THMIX,<lp;COIL_EWTest>)                -047k   32
c                if superheat recovered by dw-heater                            -047k   33
              IF (<HTREC-DW-HEATER> .gt. 0 .and.                                -047k   34
     &                                     <HEAT-SOURCE> .eq. 4) THEN           -047k   35
                WHM1 = CVAL(<HEAT-WH-FT>,THMIX,<lp;COIL_EWTest>)                -047k   36
                QWH  = WHM1*<HEAT-WASTE-HEAT>*QHTNS                             -047k   37
c                  reduce by amount requested                                   -047k   38
                Jdw   = <HTREC-DW-HEATER>                                       -047k   39
                QWH   = Max(QWH, <dw;Qask>)                                     -047k   40
                QHTNS = QHTNS - QWH                                             -047k   41
              ENDIF                                                             -047k   42
            ENDIF                                                               -047k   43
          ELSE  ! air-to-air heat pump                                          -044d   39
c              if supplemental heat locked out                                  -044d   40
            IF (DBT .gt. <MAX-HSUPP-T>)  QHT = 0.                               -044d   41
c              if heat pump can run                                             -044d   42
            IF (DBT .ge. <MIN-HP-T>) THEN                                       -044d   43
c                adjust for defrost operation                                   -044d   44
              DFM1 = 0.                                                         -044d   45
              IF(DBT .le. <DEFROST-T>  .and.  <DEFROST-FRAC-FT> .ne. 0)         -044d   46
     &          DFM1 = Cval(<DEFROST-FRAC-FT>,WBT,DBT)                          -044d   47
c                heatpump capacity with no supplemental heat                    -044d   48
              QHTNS = (1.0-DFM1) * <HEATING-CAPACITY>                           -044d   49
     &                           * Cval(<HEAT-CAP-FT>,THMIX,DBT)                -044d   50
            ENDIF                                                               -044d   51
c              if superheat recovered by dw-heater                              -044d   52
            IF (<HTREC-DW-HEATER> .gt. 0 .and.                                  -044d   53
     &                                   <HEAT-SOURCE> .eq. 4) THEN             -044d   54
              WHM1 = CVAL(<HEAT-WH-FT>,THMIX,DBT)                               -044d   55
              QWH  = WHM1*<HEAT-WASTE-HEAT>*QHTNS                               -044d   56
c                reduce by amount requested                                     -044d   57
              Jdw   = <HTREC-DW-HEATER>                                         -044d   58
              QWH   = Max(QWH, <dw;Qask>)                                       -044d   59
              QHTNS = QHTNS - QWH                                               -044d   60
            ENDIF                                                               -044d   61
          ENDIF                                                                 -044d   62
          QHT = QHT + QHTNS  ! supplemental + heatpump                          -044d   63
        ENDIF  ! HeatPump                                                       -044d   64
c              end of heating capacity calcs                                    DKTEMP 955
      ENDIF                                                                     DKTEMP 956
c                                                                               DKTEMP 957
c              change supply values to include fan heat                         DKTEMP 958
      DTF    = DTS * FLOAT(<FAN-PLACEMENT>)                                     DKTEMP 959
      IF (DDSTYPE .LT. 2)  THEN                                                 DKTEMP 960
        DTFh = DTF                                                              DKTEMP 961
      ELSE                                                                      DKTEMP 962
c              dual-fan dual-duct system                                        DKTEMP 963
        DTFh = DTSh * FLOAT(<HFAN-PLACEMENT>)                                   DKTEMP 964
      ENDIF                                                                     DKTEMP 965
      TCMIN  = TCMIN  + DTF                                                     DKTEMP 966
      TMMIN  = TMMIN  + DTF                                                     DKTEMP 967
      TMMAX  = TMMAX  + DTF                                                     DKTEMP 968
      TCMNEV = TCMNEV + DTF                                                     DKTEMP 969
      THMAX  = THMAX  + DTFh                                                    DKTEMP 970
      THMIX = THMIX + DTFh                                                      DKTEMP 971
c              make sure it is not below minimum                                DKTEMP 972
      TCMIN  = AMAX1(TCMIN,AMIN1(PASTM+DTF,<COOL-SET-T>+TCRMIN))                -041d   35
      IF (ICODE.EQ.26) RETURN                                                   DKTEMP 974
      TCMNEV = AMAX1(<COOL-SET-T>+TCRMIN,TCMNEV)                                DKTEMP 975
      TCMIN = AMIN1(TCMIN,TCMNEV)                                               DKTEMP 976
      IF(TCHUM .GT. 0.0)  TCHUM  = AMAX1(TCHUM+DTF,TCMIN)                       DKTEMP 977
c                                                                               DKTEMP 978
c              calculate cooling supply air temperature                         DKTEMP 979
      GOTO (500,400,200,200,99,99,100), (<COOL-CONTROL>+1)                      DKTEMP 980
C                                                                               DKTEMP 981
C              CONTROL IS RESET SCHEDULE                                        DKTEMP 982
C                                                                               DKTEMP 983
   99 TC     = DRSVAL(<COOL-RESET-SCH>)                                         -131   192
      TC     = AMAX1(TC+TCR,TCMIN)                                              DKTEMP 991
      GOTO 500                                                                  DKTEMP 992
C                                                                               DKTEMP 993
C              CONTROL IS SCHEDULED                                             DKTEMP 994
C                                                                               DKTEMP 995
  100 TC     = SchVal(<COOL-SET-SCH>, 1.)                                       Time   244
      TC     = AMAX1(TC+TCR,TCMIN)                                              DKTEMP 998
      GO TO 500                                                                 DKTEMP 999
c                                                                               DKTEMP1000
c              Control is by the zone needing the coldest air.                  DKTEMP1001
c              Initialize TC to the minimum and then look to see if all         DKTEMP1002
c              zones are in the reset range.  Use the signal from the           DKTEMP1003
c              zone that is the highest in its cooling throttling range.        DKTEMP1004
c              Minimum temperature at the diffusers                             DKTEMP1005
  200 TCDFSR = TCMIN + DUCTDT(TCMIN,CoilCFMc,2,1,0)                             HVAC1  112
c              maximum temperature at the diffusers (passing mixed air)         DKTEMP1007
      TPODFSR = TPOMIN + DUCTDT(TPOMIN,CoilCFMc,2,1,0)                          HVAC1  113
c              for dual-duct or multizone, estimate the temp of the             DKTEMP1009
c              hot deck air that may be mixing with the cooling cfm             DKTEMP1010
      IF ((DDSTYPE .NE. 0) .AND. (FONh .NE. 0.)) THEN                           DKTEMP1011
c              SameT = 0 when hot deck temp is the same as the cold deck        DKTEMP1012
        SameT = 1.                                                              DKTEMP1013
c              flag if dual-duct hot deck temp was adjusted                     DKTEMP1014
        IFLAG = 0                                                               DKTEMP1015
c              maximum hot deck temperature including duct losses               DKTEMP1016
        THMAX = THMIX - (QHT/(CONS(1)*AMAX1(CoilCFMh, 1.)))                     HVAC1  114
        THMAX = AMIN1(THMAX, <HEAT-SET-T>)                                      DKTEMP1018
        THMAX = THMAX + DUCTDT(THMAX,CoilCFMh,1,1,0)                            HVAC1  115
c              minimum hot deck temperature including duct losses               DKTEMP1020
        IF (DDSTYPE .EQ. 1)  THEN                                               DKTEMP1021
c              for single-fan, assume that min heating temp may be              DKTEMP1022
c              min mixed air temp.                                              DKTEMP1023
          THMIN = TMMIN + DUCTDT(TMMIN,CoilCFMh,1,1,0)                          HVAC1  116
        ELSE                                                                    DKTEMP1025
c              for dual-fan, the min heating temp is the return temp            DKTEMP1026
          THMIN = THMIX + DUCTDT(THMIX,CoilCFMh,1,1,0)                          HVAC1  117
        ENDIF                                                                   DKTEMP1028
c              get hot deck setpoint                                            DKTEMP1029
        IF (<HEAT-CONTROL> .EQ. 1)  THEN                                        DKTEMP1030
c              hot deck setpoint constant                                       DKTEMP1031
          TH = <HEAT-SET-T>                                                     DKTEMP1032
        ELSEIF ((<HEAT-CONTROL> .EQ. 2)                                         DKTEMP1033
     1                          .OR. (<HEAT-CONTROL> .EQ. 3))  THEN             DKTEMP1034
c              hot deck setpoint based on coldest zone - Coldest zone           DKTEMP1035
c              signal was saved in zone survey at beginning of DKTEMP           DKTEMP1036
          TSIGh = AMAX1(-1., AMIN1(1., TSIGh))                                  DKTEMP1037
          TH    = 0.5 * ( (THMIN+THMAX) + TSIGh*(THMIN-THMAX) )                 DKTEMP1038
          TH    = AMIN1(THMAX, AMAX1(TH, <HEAT-MIN-RESET-T>))                   DKTEMP1039
        ELSEIF ((<HEAT-CONTROL> .EQ. 4)                                         DKTEMP1040
     1                          .OR. (<HEAT-CONTROL> .EQ. 5))  THEN             DKTEMP1041
c              hot deck setpoint reset                                          DKTEMP1042
c              get hot deck setpoint reset value                                -131   193
          TH   = DRSVAL(<HEAT-RESET-SCH>)                                       -131   194
        ELSEIF (<HEAT-CONTROL> .EQ. 6)  THEN                                    DKTEMP1050
c              hot deck setpoint scheduled                                      DKTEMP1051
          TH   = SchVal(<HEAT-SET-SCH>, 1.)                                     Time   245
        ELSE                                                                    DKTEMP1053
        ENDIF                                                                   DKTEMP1054
        TH = AMIN1(THMAX, AMAX1(TH, THMIN))                                     DKTEMP1055
      ENDIF                                                                     DKTEMP1056
  299 TSIG = -1.0                                                               -038     1
      ZP1  = ISZ                                                                -038     2
      DO 300 NZ=1,NSZ                                                           DKTEMP1060
      ZP2    = <ZP2>                                                            DKTEMP1061
      IF((<CFMAX>.EQ.0.0).OR.(<COOL-TEMP-SCH>.EQ.0))  GOTO 300                  DKTEMP1062
C                                                                               DKTEMP1063
C              CALCULATE THE TRANSFER ACROSS THE INTERNAL                       DKTEMP1064
C              PARTITIONS INTO THIS ZONE                                        DKTEMP1065
C                                                                               DKTEMP1066
C              X WILL BE THE COMPONET FOR LAST HOUR                             DKTEMP1067
C              Y WILL BE THE COMPONET FOR TWO HOURS PAST                        DKTEMP1068
C              Z WILL                     THREE                                 DKTEMP1069
      X      = 0.                                                               DKTEMP1070
      Y      = 0.                                                               DKTEMP1071
      Z      = 0.                                                               DKTEMP1072
      CORINT = 0.                                                               DKTEMP1073
C              PICK UP THE NUMBER OF ATTACHMENTS                                DKTEMP1074
      IE     = <NATTCH>                                                         DKTEMP1075
C              IF NO ATTACHMENTS SKIP                                           DKTEMP1076
      IF(IE .EQ. 0) GOTO 8                                                      DKTEMP1077
C              LOOP THROUGH THE ATTACHMENTS                                     DKTEMP1078
      DO 7 J = 1,IE                                                             DKTEMP1079
C              CALC POINTER TO ATTACHMENT DATA                                  DKTEMP1080
      I1 = <IATTCH> + (J-1)*3                                                   DKTEMP1081
C              PICK UP NUM OF SPACE ON THE OTHER SIDE                           DKTEMP1082
      NATTSP = IA(I1)                                                           DKTEMP1083
C              CALC COMPONET FOR PREVIOUS HOURS                                 DKTEMP1084
      X      = X + AA(I1+1)*(TEMPS(1,NATTSP)-TEMPSL(NATTSP))                    RemPA  364
      Y      = Y + AA(I1+1)*(TEMPS(2,NATTSP)-TEMPSL(NATTSP))                    RemPA  365
      Z      = Z + AA(I1+1)*(TEMPS(3,NATTSP)-TEMPSL(NATTSP))                    RemPA  366
    7 CONTINUE                                                                  DKTEMP1088
C              CALC NET WEIGHTED ENERGY TRANSFERED                              DKTEMP1089
      CORINT = X + <P1>*Y + <P2>*Z                                              DKTEMP1090
    8 CONTINUE                                                                  DKTEMP1091
      G0     = <G0> * <AREA>                                                    XFC2   175
     &       +        (<CONDUCHR>      + CONS(1)*<CFMINF>)                      XFC2   176
      G1     = <G1> * <AREA>                                                    XFC2   177
     &       + <P1> * (<CONDUCHRPAST>  + CONS(1)*<VIPAST>)                      XFC2   178
      G2     = <G2> * <AREA>                                                    XFC2   179
     &       + <P2> * (<CONDUCHRPAST2> + CONS(1)*<VIPAST2>)                     XFC2   180
      G3     = <G3>*<AREA>                                                      DKTEMP1098
      SIGMAG = G0 + G1 + G2 + G3                                                DKTEMP1099
      JJ      = 1                                                               DKTEMP1100
      F      = <TLOADS>*SIGMAG                                                  XFC2   181
     &       +        (<QS>      + <QPNOW>   - <zn;QMechLossNow>)               XFC2   182
     &       + <P1> * (<QSPAST>  + <QPPAST>  - <QNOW>  - <QBPAST>               XFC2   183
     &                                       - <zn;QMechLossPast>)              XFC2   184
     &       -  G1  * <TNOW>                                                    XFC2   185
     &       + <P2> * (<QSPAST2> + <QPPAST2> - <QPAST> - <QBPAST2>              XFC2   186
     &                                       - <zn;QMechLossPas2>)              XFC2   187
     &       -  G2  * <TPAST>                                                   XFC2   188
      F      = F - G3*<TPAST2>                                                  DKTEMP1106
      F      = F + <FCOR>*CORINT                                                DKTEMP1107
C              CONDUCTION AND CONVECTION CONTRIB TO F FOR SUNSP OR              DKTEMP1108
C              SPACE ADJACENT TO A SUNSPACE                                     DKTEMP1109
      CSSVEC = 0.                                                               DKTEMP1110
      CSSCND = 0.                                                               DKTEMP1111
      IF (<ISUNSP>.NE.0) THEN                                                   -036   427
        CALL SSFCOR(2)                                                          -036   428
        IF(ABS(CSSCND+CSSVEC) .lt. G0*20.0)  THEN                               -036   429
          F = F + CSSCND + CSSVEC                                               -036   430
        ENDIF                                                                   -036   431
      IF( IwinReturn .ne. 0 ) RETURN                                            WinRet  41
      ENDIF                                                                     -036   432
c              pick up the cooling setpoint                                     DKTEMP1114
      THR  = <THROTTLING-RANGE>                                                 DKTEMP1115
      TSET = <TCZ>                                                              DKTEMP1116
c              calculate the minimum heat and cool CFMs for this zone.          DKTEMP1117
c              note that minimums for heat and cool may be different.           DKTEMP1118
      CFMINhMax = 0.                                                            DKTEMP1119
      CFMINhMin = 0.                                                            DKTEMP1120
      IF (DDSTYPE .EQ. 0)  THEN                                                 DKTEMP1121
        CFMINc = <CFMAX> * MAX(<MINCFMR>, <MIN-RESET-FLOW>) * CFMRAT            -038     3
      ELSE                                                                      DKTEMP1123
        CFMINc = <CFMAX> * MAX(<MINCFMRC>, <MIN-RESET-FLOW>) * CFMRAT           -038     4
      ENDIF                                                                     DKTEMP1125
      IF (DDSTYPE .GT. 0)  THEN                                                 CCIG7   58
c              for dual-duct boxes, calc the minimum hot deck cfm during        DKTEMP1127
c              minimum and maximum cooling.  No minimum if heating fan          DKTEMP1128
c              off.  Disregard minimum if hot deck temp same as cold            DKTEMP1129
        CFMINhMin = <CFMAXH> * <MINCFMRH> * CFMRATh * FONh * SameT              DKTEMP1130
        CFMINhMax = CFMINhMin                                                   DKTEMP1131
c              for dual-duct boxes, a minimum total at the box outlet           DKTEMP1132
c              may be specified.                                                DKTEMP1133
        IF (<MINCFMR> .GT. 0.)  THEN                                            DKTEMP1134
          CFMINt = 0.                                                           CCIG7   59
c              exhaust flow                                                     -044e  163
          IF (<EXHAUST-SOURCE> .eq. 1) THEN   ! makeup by system OA             -046   195
            Call ZoneExhaust(1, <CFMAXT>)     ! set EXCFM                       -046   196
          ELSE                                                                  -046   197
            EXCFM = 0.                                                          -046   198
          ENDIF                                                                 -046   199
          IF ( ((<CTRLTSTAT> .EQ. 1) .AND. (<MIN-CFM-SOURCEZ> .EQ. 0))          CCIG7   60
     1                          .OR. (<MIN-CFM-SOURCEZ> .EQ. 1) )  THEN         CCIG7   61
c              box minimum is made up by hot deck                               CCIG7   62
            IF (FONh .GT. 0.)                                                   CCIG7   63
     $        CFMINt = AMAX1(<CFMAXT>*<MINCFMR>, EXCFM)                         -044e  165
          ELSE                                                                  CCIG7   65
c              box minimum is made up by cold deck                              CCIG7   66
            IF (FON .GT. 0.)                                                    CCIG7   67
     $        CFMINt = AMAX1(<CFMAXT>*<MINCFMR>, EXCFM)                         -044e  166
          ENDIF                                                                 CCIG7   69
c              for constant-volume dual-duct box, the box is controlled         DKTEMP1136
c              on the heating schedule, and the temperature is reset on         DKTEMP1137
c              the cooling schedule.  Therefore, the CFM is constant during     DKTEMP1138
c              cooling reset.  (Also multizone)                                 DKTEMP1139
          IF (<MINCFMR> .GT. 0.99)  THEN                                        DKTEMP1140
            CFMINc = (CFMINt-CFMINhMin) * CFMRAT                                DKTEMP1141
          ELSE                                                                  DKTEMP1142
c              for variable-volume dual-duct, the makeup may be supplied        DKTEMP1143
c              by either the hot deck, cold deck, or snap between them          DKTEMP1144
            IF (<MIN-CFM-SOURCEZ> .EQ. 1)  THEN                                 DKTEMP1145
c              box minimum is made up by hot deck                               DKTEMP1146
              CFMINhMin = AMAX1(CFMINhMin,                                      DKTEMP1147
     1                          AMIN1(CFMINt-CFMINc, <CFMAXH>)*CFMRATh)         DKTEMP1148
     2                     * FONh * SameT                                       DKTEMP1149
c              heating cfm during maximum cooling                               DKTEMP1150
              CFMINhMax = AMAX1(CFMINhMax,                                      DKTEMP1151
     1                          AMIN1(CFMINt-<CFMAX>*CFMRAT,                    DKTEMP1152
     2                                <CFMAXH>*CFMRATh) )                       DKTEMP1153
     3                     * FONh * SameT                                       DKTEMP1154
            ELSE                                                                DKTEMP1155
c              box minimum is made up by cold deck or snap acting               DKTEMP1156
              CFMINc = AMAX1(CFMINc, (CFMINt-CFMINhMin)*CFMRAT)                 DKTEMP1157
            ENDIF                                                               DKTEMP1158
          ENDIF                                                                 DKTEMP1159
        ENDIF                                                                   DKTEMP1160
      ENDIF                                                                     DKTEMP1161
c              Calculate the maximum and minimum extraction rates in            DKTEMP1162
c              the reset range.  Portion of throttling range used is            DKTEMP1163
c              determined based on:                                             DKTEMP1164
c              RESET-PRIORITY = 1  Temp first, then CFM  Use top half           DKTEMP1165
c                             = 2  CFM first, then temp  Use bottom half        DKTEMP1166
c                             = 3  Both temp and CFM     Use full range         DKTEMP1167
c                             = *  but no VAV            Use full range         DKTEMP1168
      IF (<RESET-PRIORITY> .EQ. 1)  THEN                                        DKTEMP1169
c              reduce temperature first, then airflow.  Use top half            DKTEMP1170
c              of throttling range for temp reset in VAV zone.                  DKTEMP1171
        IF (CFMINc .LT. <CFMAX>*CFMRAT)  THEN                                   DKTEMP1172
          TSET = TSET + THR*0.5                                                 DKTEMP1173
          THR  = THR * 0.5                                                      DKTEMP1174
        ENDIF                                                                   DKTEMP1175
        ERMAX  = CONS(1) * (<CFMAX>*CFMRAT*RIIR * (<TNOW>-TCDFSR)               -131   195
     1                      + CFMINhMax * (<TNOW>-TH) )                         -131   196
        ERMIN  = CONS(1) * (<CFMAX>*CFMRAT*RIIR * (<TNOW>-TPODFSR)              -131   197
     1                      + CFMINhMax * (<TNOW>-TH) )                         -131   198
        X      = CONS(1) * (<CFMAX>*CFMRAT*RIIR + CFMINhMax) * 0.5              -131   199
        Z      = X                                                              DKTEMP1181
      ELSEIF (<RESET-PRIORITY> .EQ. 2)  THEN                                    DKTEMP1182
c              reduce airflow first, then temperature.  Use bottom half         DKTEMP1183
c              of throttling range for temp reset in VAV zone.                  DKTEMP1184
        IF (CFMINc .LT. <CFMAX>*CFMRAT)  THEN                                   DKTEMP1185
          TSET = TSET - THR*0.5                                                 DKTEMP1186
          THR  = THR * 0.5                                                      DKTEMP1187
        ENDIF                                                                   DKTEMP1188
        ERMAX  = CONS(1) * (CFMINc*RIIR * (<TNOW>-TCDFSR)                       -131   200
     1                      + CFMINhMin * (<TNOW>-TH) )                         -131   201
        ERMIN  = CONS(1) * (CFMINc*RIIR * (<TNOW>-TPODFSR)                      -131   202
     1                      + CFMINhMin * (<TNOW>-TH) )                         -131   203
        Z      = CONS(1) * (CFMINc*RIIR + CFMINhMin) * 0.5                      -131   204
        X      = Z                                                              DKTEMP1194
      ELSE                                                                      DKTEMP1195
c              reduce temperature and airflow simultaneously                    DKTEMP1196
        ERMAX  = CONS(1) * (<CFMAX>*CFMRAT*RIIR * (<TNOW>-TCDFSR)               -131   205
     1                      + CFMINhMax * (<TNOW>-TH) )                         -131   206
        ERMIN  = CONS(1) * (CFMINc*RIIR * (<TNOW>-TPODFSR)                      -131   207
     1                      + CFMINhMin * (<TNOW>-TH) )                         -131   208
        X      = CONS(1) * (<CFMAX>*CFMRAT*RIIR + CFMINhMax) * 0.5              -131   209
        Z      = CONS(1) * (CFMINc*RIIR + CFMINhMin) * 0.5                      -131   210
      ENDIF                                                                     DKTEMP1203
c              calculate the temp that will result using the extraction         DKTEMP1204
c              rate at the top of the reset range.                              DKTEMP1205
      TEND   = (F - ERMAX + X*<TNOW>) / (G0 + X)                                DKTEMP1206
c              if this zone temp is above the reset range, then no              DKTEMP1207
c              reset is possible.                                               DKTEMP1208
      IF (TEND .GE. TSET+THR)  THEN                                             DKTEMP1209
        TC = TCMIN                                                              DKTEMP1210
c              remember warmest zone                                            DKTEMP1211
        IWarmestZ = ZP1                                                         DKTEMP1212
        TC   = TCDFSR                                                           -035    68
        TSIG = 1.0                                                              -035    69
        GOTO 310                                                                -035    70
      ENDIF                                                                     DKTEMP1214
c              average maximum extraction rate for the hour                     DKTEMP1215
      ERMAX  = ERMAX - X*(<TNOW>-TEND)                                          DKTEMP1216
c              average minimum extraction rate for the hour                     DKTEMP1217
      TEND   = (F - ERMIN + Z*<TNOW>) / (G0 + Z)                                DKTEMP1218
      ERMIN  = ERMIN - Z*(<TNOW>-TEND)                                          DKTEMP1219
C              FIND THE SIMULTANEOUS SOLUTION OF THE LINEAR EQUS FOR            DKTEMP1220
C              THE THERMOSTAT ACTION AND SUPPLY RESET ACTION                    DKTEMP1221
      S      = (ERMAX-ERMIN)/(THR*2.0)                                          DKTEMP1222
      W      = 0.5*(ERMAX+ERMIN) - S*TSET                                       DKTEMP1223
      Q      = (G0*W + S*F)/(S + G0)                                            DKTEMP1224
C              MAKE SURE ERTRACTION (SUPPLY TEMP) IS WITHIN RANGE               DKTEMP1225
      Q      = AMAX1(ERMIN,AMIN1(ERMAX,Q))                                      DKTEMP1226
C              FIND RESULTANT ZONE TEMP                                         DKTEMP1227
      T      = (F-Q)/G0                                                         DKTEMP1228
C              CALC SIGNAL BACK TO AIRHANDLER FOR TEMP RESET                    DKTEMP1229
      TSIGN  = (T-TSET)/THR                                                     DKTEMP1230
      TSIGN  = AMIN1(1.0,AMAX1(-1.0,TSIGN))                                     DKTEMP1231
C              IF A PREVIOUS ZONE HAD A HIGHER SIGNAL IGNORE THIS ONE           DKTEMP1232
      IF(TSIGN .LT. TSIG)  GOTO 300                                             DKTEMP1233
      TSIG   = TSIGN                                                            DKTEMP1234
c              calculate the supply temperature for this zone                   DKTEMP1235
c              based on the zone reset signal                                   DKTEMP1236
      TC = 0.5 * ( (TPODFSR+TCDFSR) - TSIG*(TPODFSR-TCDFSR) )                   DKTEMP1237
      TC = AMAX1(TCDFSR, AMIN1(TPODFSR,TC))                                     DKTEMP1238
c              remember warmest zone                                            DKTEMP1239
      IWarmestZ = ZP1                                                           DKTEMP1240
  300 ZP1    = ZP1 + NZD                                                        DKTEMP1241
c              for single-fan dual-duct, check assumed heating temp             DKTEMP1242
C             add TSIGc to hourly reports at 268 in SYSTEM block                -044c  429
  310 <TSIGc> = TSIG                                                            -044c  430
      IF ((DDSTYPE .EQ. 1) .AND. (IFLAG .EQ. 0))  THEN                          -035    73
        IF (TC .GT. TH)  THEN                                                   DKTEMP1244
c              must be modulating the economizer.  TH floats with TC.           DKTEMP1245
          SameT = 0.                                                            DKTEMP1246
          IFLAG = 1                                                             DKTEMP1247
        ELSEIF (QHT .EQ. 0.)  THEN                                              DKTEMP1248
c              no heating available, TH is somewhere in mixed air range         DKTEMP1249
          IF (TC .GT. THMIN)  THEN                                              DKTEMP1250
c              economizer is modulating, TH floats with TC                      DKTEMP1251
            SameT = 0.                                                          DKTEMP1252
            IFLAG = 1                                                           DKTEMP1253
          ELSEIF (TH .GT. THMIN)  THEN                                          DKTEMP1254
c              economizer is fully open.  TH is min economizer temp             DKTEMP1255
            TH = THMIN                                                          DKTEMP1256
            IFLAG = 1                                                           DKTEMP1257
          ENDIF                                                                 DKTEMP1258
        ENDIF                                                                   DKTEMP1259
c              recalc TC with correct hot deck temp                             DKTEMP1260
        IF (IFLAG .EQ. 1)  GOTO 299                                             DKTEMP1261
      ENDIF                                                                     DKTEMP1262
c              now translate TC from diffuser temp to entering duct T           DKTEMP1263
      TC     = TC - DUCTDT(TC,CoilCFMc,2,2,0)                                   HVAC1  118
c              limit the reset                                                  -038     5
      TC     = AMAX1(TCMIN, MIN(    TC, <COOL-MAX-RESET-T>))                    -038     6
      TC     = AMAX1(   TC, MIN(TPOMIN, <COOL-MIN-RESET-T>))                    -038     7
      GOTO 500                                                                  DKTEMP1267
C                                                                               DKTEMP1268
C              CONTROL IS FIXED AIR TEMP                                        DKTEMP1269
C                                                                               DKTEMP1270
  400 TC = AMAX1( <COOL-SET-T>+TCR, TCMIN )                                     DKTEMP1271
C                                                                               DKTEMP1272
  500 CONTINUE                                                                  DKTEMP1273
      IF (ICODE.EQ.19 .OR. ICODE.EQ.21 .OR. ICODE.EQ.28 .OR.                    -044e  167
     &   (ICODE .EQ. 23 .AND. <COOL-SOURCE> .NE. 1) .AND.                       -044e  168
     $   (<MAX-COND-RCVRY>.GT.0.) )  GOTO 505                                   DKTEMP1275
      IF (<DESICCANT> .EQ. 0)  THEN                                             ERV    145
        IF((CON*CapRc.NE.0.0).AND.(TC.GT.TCHUM).AND.(TCHUM.GT.0.0).AND.         ERV    146
     &    ((<MAX-HUMIDITY>.GT.0.0).AND.(<MAX-HUMIDITY>.LT.99.)))                ERV    147
     &    TC = TCHUM                                                            ERV    148
        IF( ((ICODE.EQ.2).OR.(ICODE.EQ.19).OR.(ICODE.EQ.28)) .AND.              ERV    149
     &    ((<MAX-HUMIDITY>.GT.0.0).AND.(<MAX-HUMIDITY>.LT.99.0)))               ERV    150
     &    TC = TCHUM                                                            ERV    151
      ENDIF                                                                     ERV    152
  505 CONTINUE                                                                  DKTEMP1282
C              IF HEAT IS OFF OR THIS IS A TWO DUCT SYS THE MAX                 DKTEMP1283
C              SUPPLY TEMP IS LIMITED BY THE MIX AIR MAX TEMP                   DKTEMP1284
      IF((<HEATING-CAPACITY>*CapRh*HON.GE.-1.0).OR.(IDDS.NE.0))                 HVAC   195
     1TC     = AMIN1(TC,TMMAX)                                                  DKTEMP1286
c              Now re-adjust THMIX and THMAX based upon mixed air temp          -030   101
c              resulting from the just calc'd air-handler supply for            -030   102
c              single duct systems                                              -030   103
      IF((DDSTYPE .LT. 2).and.(<COOL-CONTROL> .NE. 0))  THEN                    -034   158
C             Use TC as heat coil estimated entering if TC was                  -036   433
C             calculated from COOL-CONTROL or from MAX-HUMIDITY,                -036   434
C             otherwise use mix air temp estimate                               -036   435
        IF(<COOL-CONTROL> .ne. 0) THEN                                          -036   436
          <CL_COIL_EDB>=AMAX1(TMMIN-DTF,AMIN1(TC-DTF,TMMAX-DTF))                -036   437
        ELSE                                                                    -036   438
          <CL_COIL_EDB>=AMAX1(TMMIN-DTF,AMIN1(<CL_COIL_EDB>,TMMAX-DTF))         -036   439
        ENDIF                                                                   -036   440
        THMIX = <CL_COIL_EDB> + DTFh                                            -034   160
        THMAX  = THMIX                                                          -034   161
      ENDIF                                                                     -030   108
c                                                                               DKTEMP1287
c              Calculate the heating supply temp.                               DKTEMP1288
c              first, maximum supply temp.                                      DKTEMP1289
      THMAX  = THMIX - (QHT/(CONS(1)*(CoilCFMh+1.E-6)))                         HVAC1  119
  521 IF((IDDS .EQ. 0).AND.(ICODE .NE. 16).AND.(ICODE.NE.2).AND.                DKTEMP1291
     $   (ICODE .NE. 19).AND.(ICODE .NE. 28).AND.(HON*CapRh.EQ.0.0) )           HVAC12  69
     2THMAX  = AMAX1(TMMIN,AMIN1(TC,TMMAX))                                     DKTEMP1293
      IF((HON*CapRh.EQ.0.0).AND.(ICODE .EQ. 16))                                HVAC12  70
     $  THMAX = AMAX1(THMAX,TMMAX)                                              HVAC12  71
C              MAKE SURE IT IS NOT > MAXIMUM                                    DKTEMP1295
      IF (DDSTYPE .NE. 2)  THEN                                                 DKTEMP1296
        THMAX  = AMIN1(THMAX,AMAX1(THMIX,<HEAT-SET-T>,TMMAX))                   DKTEMP1297
        THMAX  = AMAX1(THMAX,TCMIN)                                             DKTEMP1298
      ELSE                                                                      DKTEMP1299
        THMAX  = AMIN1(THMAX,AMAX1(THMIX,<HEAT-SET-T>))                         DKTEMP1300
      ENDIF                                                                     DKTEMP1301
C              FOR HEAT-PUMPS, ALSO CALCULATE THE MAX HEAT TEMP WITHOUT         DKTEMP1302
C              SUPPLEMENTAL HEAT                                                DKTEMP1303
      IF (HeatPump)  THEN                                                       StgVol  68
          THMXNS = THMIX - (QHTNS/(CONS(1)*(CoilCFMh+1.E-6)))                   -034   162
          IF((IDDS .EQ. 0).AND.                                                 -034   163
     $       (ICODE.ne.2).AND.(ICODE.ne.19).AND.(ICODE.ne.28).AND.              -034   164
     $       (HON*CapRh.EQ.0.0) )                                               -034   165
     $      THMXNS = AMAX1(TMMIN,AMIN1(TC,TMMAX))                               -034   166
          IF (DDSTYPE .NE. 2)  THEN                                             -034   167
            THMXNS  = AMIN1(THMXNS,AMAX1(THMIX,<HEAT-SET-T>,TMMAX))             -034   168
            THMXNS  = AMAX1(THMXNS,TCMIN)                                       -034   169
          ELSE                                                                  -034   170
            THMXNS  = AMIN1(THMXNS,AMAX1(THMIX,<HEAT-SET-T>))                   -034   171
          ENDIF                                                                 -034   172
      ELSE                                                                      DKTEMP1308
          THMXNS = THMAX                                                        DKTEMP1309
      END IF                                                                    DKTEMP1310
c              calculate heating supply air temperature                         DKTEMP1311
C              Don't use HEAT-CONTROL in RHFS/VAVS/PVAVS/PIU unless             -035    74
C              COOL-CONTROL was WARMEST and that resulted in no                 -035    75
C              cooling requirement                                              -035    76
      ISDAHUF = 0                                                               -035    77
      IF((ICODE.eq.13).OR.(ICODE.eq.14).OR.(ICODE.eq.21).OR.                    -035    78
     $   (ICODE.eq.23)) THEN                                                    -035    79
        IF(((<COOL-CONTROL>.ne.2).AND.(<COOL-CONTROL>.ne.3)) .or.               -035    80
     $     ((<HEAT-CONTROL>.ne.2).AND.(<HEAT-CONTROL>.ne.3))) GOTO 1000         -035    81
        IF(TSIG .GT. -1.0) GOTO 1000                                            -035    82
        ISDAHUF = 1                                                             -035    83
      ENDIF                                                                     -035    84
      GOTO (1000,900,700,700,599,599,600), (<HEAT-CONTROL>+1)                   DKTEMP1312
C                                                                               DKTEMP1313
C              CONTROL IS RESET SCHEDULE                                        DKTEMP1314
C                                                                               DKTEMP1315
C              PICK UP RESET SCHEDULE POINTER                                   DKTEMP1316
  599 TH     = DRSVAL(<HEAT-RESET-SCH>)                                         -131   211
      GOTO 810                                                                  DKTEMP1324
C                                                                               DKTEMP1325
C              CONTROL IS SCHEDULED                                             DKTEMP1326
C                                                                               DKTEMP1327
  600 TH = SchVal(<HEAT-SET-SCH>, 1.)                                           Time   246
      GO TO 810                                                                 DKTEMP1330
C                                                                               DKTEMP1331
C              CONTROL IS BY ZONE NEEDING THE WARMEST AIR                       DKTEMP1332
C                                                                               DKTEMP1333
c              Control is by the zone needing the warmest air.                  DKTEMP1334
c              Initialize TH to the maximum and then look to see if all         DKTEMP1335
c              zones are in the reset range.  Use the signal from the           DKTEMP1336
c              zone that is the lowest in its heating throttling range.         DKTEMP1337
c              Maximum temperature at the diffusers                             DKTEMP1338
  700 IF(ISDAHUF .eq. 1) THEN                                                   -035    85
        THDFSR = THMAX + DUCTDT(THMAX,CoilCFMc,2,1,0)                           -035    86
      ELSE                                                                      -035    87
        THDFSR = THMAX + DUCTDT(THMAX,CoilCFMh,1,1,0)                           -035    88
      ENDIF                                                                     -035    89
      THMAXm = THMAX                                                            -035    90
      TH     = THMAX                                                            DKTEMP1340
      TSIG   = 1.0                                                              DKTEMP1341
      ZP1    = ISZ                                                              DKTEMP1342
      DO 800 NZ=1,NSZ                                                           DKTEMP1343
      ZP2    = <ZP2>                                                            DKTEMP1344
      IF((<CFMAX>.EQ.0.0).OR.(<HEAT-TEMP-SCH>.EQ.0))  GOTO 800                  DKTEMP1345
C                                                                               DKTEMP1346
C              CALCULATE THE TRANSFER ACROSS THE INTERNAL                       DKTEMP1347
C              PARTITIONS INTO THIS ZONE                                        DKTEMP1348
C                                                                               DKTEMP1349
C              X WILL BE THE COMPONET FOR LAST HOUR                             DKTEMP1350
C              Y WILL BE THE COMPONET FOR TWO HOURS PAST                        DKTEMP1351
C              Z WILL                     THREE                                 DKTEMP1352
      X      = 0.                                                               DKTEMP1353
      Y      = 0.                                                               DKTEMP1354
      Z      = 0.                                                               DKTEMP1355
      CORINT = 0.                                                               DKTEMP1356
C              PICK UP THE NUMBER OF ATTACHMENTS                                DKTEMP1357
      IE     = <NATTCH>                                                         DKTEMP1358
C              IF NO ATTACHMENTS SKIP                                           DKTEMP1359
      IF(IE .EQ. 0) GOTO 6                                                      DKTEMP1360
C              LOOP THROUGH THE ATTACHMENTS                                     DKTEMP1361
      DO 5 J = 1,IE                                                             DKTEMP1362
C              CALC POINTER TO ATTACHMENT DATA                                  DKTEMP1363
      I1 = <IATTCH> + (J-1)*3                                                   DKTEMP1364
C              PICK UP NUM OF SPACE ON THE OTHER SIDE                           DKTEMP1365
      NATTSP = IA(I1)                                                           DKTEMP1366
C              CALC COMPONET FOR PREVIOUS HOURS                                 DKTEMP1367
      X      = X + AA(I1+1)*(TEMPS(1,NATTSP)-TEMPSL(NATTSP))                    RemPA  367
      Y      = Y + AA(I1+1)*(TEMPS(2,NATTSP)-TEMPSL(NATTSP))                    RemPA  368
      Z      = Z + AA(I1+1)*(TEMPS(3,NATTSP)-TEMPSL(NATTSP))                    RemPA  369
    5 CONTINUE                                                                  DKTEMP1371
C              CALC NET WEIGHTED ENERGY TRANSFERED                              DKTEMP1372
      CORINT = X + <P1>*Y + <P2>*Z                                              DKTEMP1373
    6 CONTINUE                                                                  DKTEMP1374
      G0     = <G0> * <AREA>                                                    XFC2   189
     &       +        (<CONDUCHR>      + CONS(1)*<CFMINF>)                      XFC2   190
      G1     = <G1> * <AREA>                                                    XFC2   191
     &       + <P1> * (<CONDUCHRPAST>  + CONS(1)*<VIPAST>)                      XFC2   192
      G2     = <G2> * <AREA>                                                    XFC2   193
     &       + <P2> * (<CONDUCHRPAST2> + CONS(1)*<VIPAST2>)                     XFC2   194
      G3     = <G3>*<AREA>                                                      DKTEMP1381
      SIGMAG = G0 + G1 + G2 + G3                                                DKTEMP1382
      JJ      = 1                                                               DKTEMP1383
      F      = <TLOADS>*SIGMAG                                                  XFC2   195
     &       +        (<QS>      +  <QPNOW>  - <zn;QMechLossNow>)               XFC2   196
     &       + <P1> * (<QSPAST>  +  <QPPAST> - <QNOW>  - <QBPAST>               XFC2   197
     &                                       - <zn;QMechLossPast>)              XFC2   198
     &       -  G1  * <TNOW>                                                    XFC2   199
     &       + <P2> * (<QSPAST2> + <QPPAST2> - <QPAST> - <QBPAST2>              XFC2   200
     &                                       - <zn;QMechLossPas2>)              XFC2   201
     &       -  G2  * <TPAST>                                                   XFC2   202
      F      = F - G3*<TPAST2>                                                  DKTEMP1389
      F      = F + <FCOR>*CORINT                                                DKTEMP1390
C              CONDUC AND CONVEC CONTRIB TO F FOR SUNSPACE OR SPACE             DKTEMP1391
C              ADJACENT TO  SUNSPACE                                            DKTEMP1392
      CSSVEC = 0.                                                               DKTEMP1393
      CSSCND = 0.                                                               DKTEMP1394
      IF (<ISUNSP>.NE.0) THEN                                                   -036   441
        CALL SSFCOR(2)                                                          -036   442
        IF(ABS(CSSCND+CSSVEC) .lt. G0*20.0)  THEN                               -036   443
          F = F + CSSCND + CSSVEC                                               -036   444
        ENDIF                                                                   -036   445
      IF( IwinReturn .ne. 0 ) RETURN                                            WinRet  42
      ENDIF                                                                     -036   446
C              FOR HVSYS WE WILL DO HEATING AND COOLING IN THE SAME RANGE       DKTEMP1397
C              FOR OTHER SYSTEMS WE SIMPLY GO TO NO HEATING AND PASS MIXED      DKTEMP1398
C              AIR AT WHATEVER TEMP THE COLD DUCT IS GETTING                    DKTEMP1399
      THMIN  = TMMIN                                                            DKTEMP1400
      IF(ICODE .NE. 16)  THMIN = AMAX1(TMMIN,AMIN1(TMMAX,TC))                   DKTEMP1401
c              for dual-fan dual-duct, the min temp is the return temp          DKTEMP1402
      IF (DDSTYPE .EQ. 2)  THMIN = THMIX                                        DKTEMP1403
c              THMIN must be the temperature at the diffuser                    DKTEMP1404
      IF(ISDAHUF .eq. 1) THEN                                                   -035    91
        THMIN = THMIN + DUCTDT(THMIN,CoilCFMc,2,1,0)                            -035    92
      ELSE                                                                      -035    93
        THMIN = THMIN + DUCTDT(THMIN,CoilCFMh,1,1,0)                            -035    94
      ENDIF                                                                     -035    95
c              pick up the heating setpoint                                     DKTEMP1406
      THR  = <THROTTLING-RANGE>                                                 DKTEMP1407
      TSET = <THZ>                                                              DKTEMP1408
c              calculate the minimum heat and cool CFMs for this zone.          DKTEMP1409
c              note that minimums for heat and cool may be different.           DKTEMP1410
      CFMINcMax = 0.                                                            DKTEMP1411
      CFMINcMin = 0.                                                            DKTEMP1412
      CFMINh    = Min(<CFMAXH>, <CFMAX> * <MINCFMRH> * CFMRATh)                 -048j    3
      IF (DDSTYPE .GT. 0)  THEN                                                 DKTEMP1414
c              for dual-duct boxes, calc the minimum cold deck cfm during       DKTEMP1415
c              maximum (top of THR) and minimum heat extraction                 DKTEMP1416
        CFMINcMax = <CFMAX> * <MINCFMRC> * CFMRAT * FON                         DKTEMP1417
        CFMINcMin = CFMINcMax                                                   DKTEMP1418
c              for dual-duct boxes, a minimum total at the box outlet           DKTEMP1419
c              may be specified.                                                DKTEMP1420
        IF (<MINCFMR> .GT. 0.)  THEN                                            DKTEMP1421
          CFMINt = 0.                                                           CCIG7   74
c              exhaust flow                                                     -044e  169
          IF (<EXHAUST-SOURCE> .eq. 1) THEN   ! makeup by system OA             -046   200
            Call ZoneExhaust(1, <CFMAXT>)     ! set EXCFM                       -046   201
          ELSE                                                                  -046   202
            EXCFM = 0.                                                          -046   203
          ENDIF                                                                 -046   204
          IF ( ((<CTRLTSTAT> .EQ. 1) .AND. (<MIN-CFM-SOURCEZ> .EQ. 0))          CCIG7   75
     1                          .OR. (<MIN-CFM-SOURCEZ> .EQ. 1) )  THEN         CCIG7   76
c              box minimum is made up by hot deck                               CCIG7   77
            IF (FONh .GT. 0.)                                                   CCIG7   78
     $        CFMINt = AMAX1(<CFMAXT>*<MINCFMR>, EXCFM)                         -044e  171
          ELSE                                                                  CCIG7   80
c              box minimum is made up by cold deck                              CCIG7   81
            IF (FON .GT. 0.)                                                    CCIG7   82
     $        CFMINt = AMAX1(<CFMAXT>*<MINCFMR>, EXCFM)                         -044e  172
          ENDIF                                                                 CCIG7   84
c              for constant-volume dual-duct or multizone                       DKTEMP1423
          IF (<MINCFMR> .GT. 0.99)  THEN                                        DKTEMP1424
            CFMINcMax = (CFMINt-CFMINh) * CFMRAT * FON                          DKTEMP1425
          ELSE                                                                  DKTEMP1426
c              for variable-volume dual-duct, the makeup may be supplied        DKTEMP1427
c              by either the hot deck, cold deck, or snap between them          DKTEMP1428
            IF (<MIN-CFM-SOURCEZ> .NE. 2) THEN                                  DKTEMP1429
c              box minimum is made up by hot deck or snap acting                DKTEMP1430
              CFMINh = AMAX1(CFMINh, (CFMINt-CFMINcMax)*CFMRATh)                DKTEMP1431
            ELSE                                                                DKTEMP1432
c              box minimum is made up by cold deck                              DKTEMP1433
              CFMINcMax = AMAX1(CFMINcMax,                                      DKTEMP1434
     1                          AMIN1(CFMINt-CFMINh, <CFMAX>)*CFMRAT )          DKTEMP1435
     2                                                             * FON        DKTEMP1436
c              cooling cfm during maximum heating (minimum extraction)          DKTEMP1437
              CFMINcMin = AMAX1(CFMINcMin,AMIN1(CFMINt-<CFMAXH>*CFMRATh,        DKTEMP1438
     1                                           <CFMAX>*CFMRAT)      )         DKTEMP1439
     2                                                             * FON        DKTEMP1440
            ENDIF                                                               DKTEMP1441
          ENDIF                                                                 DKTEMP1442
        ENDIF                                                                   DKTEMP1443
      ENDIF                                                                     DKTEMP1444
c              Calculate the minimum and maximum extraction rates in            DKTEMP1445
c              the reset range.  Range is determined based on:                  DKTEMP1446
c              RESET-PRIORITY = 1  Temp first, then CFM  Use bottom half        DKTEMP1447
c                             = 2  CFM first, then temp  Use top half           DKTEMP1448
c                             = 3  Both temp and CFM     Use full range         DKTEMP1449
c                             = *  but no VAV            Use full range         DKTEMP1450
      IF (<RESET-PRIORITY> .EQ. 1)  THEN                                        DKTEMP1451
c              reduce temperature first, then airflow.  Use bottom half         DKTEMP1452
c              of throttling range for temp reset in VAV zone.                  DKTEMP1453
        IF (<MINCFMRH> .LE. 0.99)  THEN                                         DKTEMP1454
          TSET = TSET - THR*0.5                                                 DKTEMP1455
          THR  = THR * 0.5                                                      DKTEMP1456
        ENDIF                                                                   DKTEMP1457
        ERMAX  = CONS(1) * (<CFMAXH>*CFMRATh * (<TNOW>-THMIN)                   DKTEMP1458
     1                      + CFMINcMin * (<TNOW>-TC) )                         DKTEMP1459
        ERMIN  = CONS(1) * (<CFMAXH>*CFMRATh * (<TNOW>-THDFSR)                  DKTEMP1460
     1                      + CFMINcMin * (<TNOW>-TC) )                         DKTEMP1461
        X      = CONS(1) * (<CFMAXH>*CFMRATh + CFMINcMin) * 0.5                 DKTEMP1462
        Z      = X                                                              DKTEMP1463
      ELSEIF (<RESET-PRIORITY> .EQ. 2)  THEN                                    DKTEMP1464
c              reduce airflow first, then temperature.  Use top half            DKTEMP1465
c              of throttling range for temp reset in VAV zone.                  DKTEMP1466
        IF (<MINCFMRH> .LE. 0.99)  THEN                                         DKTEMP1467
          TSET = TSET + THR*0.5                                                 DKTEMP1468
          THR  = THR * 0.5                                                      DKTEMP1469
        ENDIF                                                                   DKTEMP1470
        ERMAX  = CONS(1) * (CFMINh * (<TNOW>-THMIN)                             DKTEMP1471
     1                      + CFMINcMax * (<TNOW> - TC) )                       DKTEMP1472
        ERMIN  = CONS(1) * (CFMINh * (<TNOW>-THDFSR)                            DKTEMP1473
     1                      + CFMINcMax * (<TNOW> - TC) )                       DKTEMP1474
        Z      = CONS(1) * (CFMINh + CFMINcMax) * 0.5                           DKTEMP1475
        X      = Z                                                              DKTEMP1476
      ELSE                                                                      DKTEMP1477
c              reduce temperature and airflow simultaneously                    DKTEMP1478
        ERMAX  = CONS(1) * (CFMINh * (<TNOW>-THMIN)                             DKTEMP1479
     1                      + CFMINcMax * (<TNOW> - TC) )                       DKTEMP1480
        ERMIN  = CONS(1) * (<CFMAXH>*CFMRATh * (<TNOW>-THDFSR)                  DKTEMP1481
     1                      + CFMINcMin * (<TNOW>-TC) )                         DKTEMP1482
        X      = CONS(1) * (CFMINh + CFMINcMax) * 0.5                           DKTEMP1483
        Z      = CONS(1) * (<CFMAXH>*CFMRATh + CFMINcMin) * 0.5                 DKTEMP1484
      ENDIF                                                                     DKTEMP1485
c              calculate the temp that will result using the extraction         DKTEMP1486
c              rate at the bottom of the reset range.                           DKTEMP1487
      TEND   = (F - ERMIN + Z*<TNOW>) / (G0 + Z)                                DKTEMP1488
c              if this zone temp is below the reset range, then no              DKTEMP1489
c              reset is possible.                                               DKTEMP1490
      IF((TEND .LE. TSET-THR) .and. (ISDAHUF .eq. 0)) THEN                      -035    96
        TH = THDFSR                                                             -035    97
c              remember coldest zone                                            DKTEMP1493
        IColdestZ = ZP1                                                         DKTEMP1494
        TSIG = -1.0                                                             -035    98
        GOTO 805                                                                -035    99
      ENDIF                                                                     DKTEMP1496
C              If a single duct AHU with WARMEST also and the ERMIN             -035   100
C              value pushes the Zone T into the cooling THR, then               -035   101
C              we need to limit the upper reset to a temperature                -035   102
C              that does not produce a cooling demand                           -035   103
      IF((ISDAHUF .eq. 1) .AND.                                                 -035   104
     $   (TEND .gt. <TCZ>-0.5*<THROTTLING-RANGE>)) THEN                         -035   105
C             Now find THMAXx that is maximum temp that does not                -035   106
C             create a cooling demand and recalc ERMIN and                      -035   107
C             recalc the resulting ERMIN and TEND                               -035   108
        ERMIN = F - (<TCZ>-0.5*<THROTTLING-RANGE>)*(G0+Z) + Z*<TNOW>            -035   109
        IF (<RESET-PRIORITY> .EQ. 2)  THEN                                      -035   110
          C1 = CFMINh                                                           -035   111
        ELSE                                                                    -035   112
          C1 = <CFMAXH>*CFMRATh                                                 -035   113
        ENDIF                                                                   -035   114
        THMAXx = <TNOW> - (ERMIN/(CONS(1)*C1))                                  -035   115
        THMAXx = AMAX1(THMIN,AMIN1(THMAX,THMAXx))                               -035   116
        THMAXm = AMIN1(THMAXx,THMAXm)                                           -035   117
        ERMIN  = CONS(1) * C1 * (<TNOW>-THMAXm)                                 -035   118
        TEND   = (F - ERMIN + X*<TNOW>) / (G0 + X)                              -035   119
      ENDIF                                                                     -035   120
c              average minimum extraction rate for the hour                     DKTEMP1497
      ERMIN  = ERMIN - Z*(<TNOW>-TEND)                                          DKTEMP1498
c              average maximum extraction rate for the hour                     DKTEMP1499
      TEND   = (F - ERMAX + X*<TNOW>) / (G0 + X)                                DKTEMP1500
      ERMAX  = ERMAX - X*(<TNOW>-TEND)                                          DKTEMP1501
C              FIND THE SIMULTANEOUS SOLUTION OF THE LINEAR EQUS FOR            DKTEMP1502
C              THE THERMOSTAT ACTION AND SUPPLY RESET ACTION                    DKTEMP1503
      S      = (ERMAX-ERMIN)/(THR*2.0)                                          DKTEMP1504
      W      = 0.5*(ERMAX+ERMIN) - S*TSET                                       DKTEMP1505
      Q      = (G0*W + S*F)/(S + G0)                                            DKTEMP1506
C              MAKE SURE ERTRACTION (SUPPLY TEMP) IS WITHIN RANGE               DKTEMP1507
      Q      = AMAX1(ERMIN,AMIN1(ERMAX,Q))                                      DKTEMP1508
C              FIND RESULTANT ZONE TEMP                                         DKTEMP1509
      T      = (F-Q)/G0                                                         DKTEMP1510
C              CALC SIGNAL BACK TO AIRHANDLER FOR TEMP RESET                    DKTEMP1511
      TSIGN  = (T-TSET)/THR                                                     DKTEMP1512
      TSIGN  = AMIN1(1.0,AMAX1(-1.0,TSIGN))                                     DKTEMP1513
C              IF A PREVIOUS ZONE HAD A LOWER SIGNAL IGNORE THIS ONE            DKTEMP1514
      IF(TSIGN .GT. TSIG)  GOTO 800                                             DKTEMP1515
      TSIG   = TSIGN                                                            DKTEMP1516
c              calculate the supply temperature for this zone                   DKTEMP1517
c              based on the zone reset signal                                   DKTEMP1518
      TH     = 0.5 * ( (THMIN+THDFSR) + TSIG*(THMIN-THDFSR) )                   DKTEMP1519
      TH     = AMAX1(THMIN, AMIN1(THDFSR,TH))                                   DKTEMP1520
c              remember coldest zone                                            DKTEMP1521
      IColdestZ = ZP1                                                           DKTEMP1522
  800 ZP1    = ZP1 + NZD                                                        DKTEMP1523
C              If doing COLDEST for a RHFS/VAVS/PVAVS/PIU system with           -035   121
C              COOL-CONTROL=WARMEST use TH just calculated to replace TC        -035   122
C              (add TSIGh to hourly reports at 290 in SYSTEM block)             -044c  431
  805 <TSIGh> = TSIG                                                            -044c  432
      IF(ISDAHUF .eq. 1) THEN                                                   -035   125
        IF(TSIG .GE. 1.0) GOTO 1000                                             -035   126
C              Limit heating temperature to prevent cooling demand              -035   127
        TH     = AMIN1(TH,THMAXm)                                               -035   128
C              Translate temperature from diffuser temp to duct entering        -035   129
        TC = TH - DUCTDT(TH,CoilCFMc,2,2,0)                                     -035   130
c              limit to the maximum-minimum heat reset                          -035   131
        TC = Min(THMAX, <COOL-MAX-RESET-T>, Max(TC, <HEAT-MIN-RESET-T>))        -045c    7
      ENDIF                                                                     -035   133
c              now translate TH from diffuser temp to entering duct T           DKTEMP1524
      TH     = TH - DUCTDT(TH,CoilCFMh,1,2,0)                                   HVAC1  123
c              limit the maximum reset                                          DKTEMP1526
      TH     = AMIN1(THMAX, AMAX1(TH, <HEAT-MIN-RESET-T>))                      DKTEMP1527
      GOTO 1000                                                                 DKTEMP1528
C                                                                               DKTEMP1529
C              CONTROL IS FIXED SUPPLY TEMPERATURE                              DKTEMP1530
C                                                                               DKTEMP1531
  900 TH     = <HEAT-SET-T>                                                     DKTEMP1532
C               MAKE SUR THE HOT SUPPLY CAN NOT GO BELOW THE MIXED AIR          DKTEMP1533
C               SUPPLIED TO THE COOLING COIL.  THIS CHECK IS NOT NEEDED         DKTEMP1534
C               FOR THE HVSYS SYSTEM.                                           DKTEMP1535
  810 IF((ICODE.EQ.16).OR.(IDDS.EQ.0))  GOTO 820                                DKTEMP1536
      IF (DDSTYPE .EQ. 2)  THEN                                                 DKTEMP1537
        TH = AMAX1(THMIX, AMIN1(TH, THMAX) )                                    DKTEMP1538
        GOTO 1000                                                               DKTEMP1539
      ENDIF                                                                     DKTEMP1540
      TH     = AMAX1(TH,AMAX1(TMMIN,AMIN1(TC,TMMAX)))                           DKTEMP1541
      IF(<HEATING-CAPACITY>*CapRh*HON .GE. -1.0)                                HVAC   196
     1TH     = AMAX1(TMMIN,AMIN1(TC,TMMAX))                                     DKTEMP1543
  820 CONTINUE                                                                  DKTEMP1544
      TH     = AMIN1(TH,THMAX)                                                  DKTEMP1545
 1000 TH     = AMAX1(TH,TCMIN)                                                  DKTEMP1546
      IF(IDDS .EQ. 0)  TC = AMIN1(TC,THMAX)                                     DKTEMP1547
c                                                                               StgVol  69
c              PVVT staged-volume                                               StgVol  70
      IF (ICODE .EQ. 28  .AND.  <AIR/TEMP-CONTROL> .GT. 1)  THEN                -042f   46
c              Operating stages for staged-volume PSZ                           StgVol  72
c                            Cool                Heat                           StgVol  73
c              Stage = 1    Floating       1    Floating                        StgVol  74
c                      2    Economizer     2    Heating                         StgVol  75
c                      3    Compressor     to     staging                       StgVol  76
c                      to     staging      Max  High stage or hp supp           StgVol  77
c                      Max  High stage                                          StgVol  78
                                                                                -044e  173
c              Minimum flow ratio, adjusted for control-zone exhaust            -044e  174
        ZP1 = ISZ  ! control zone                                               -044e  175
        ZP2 = <ZP2>                                                             -044e  176
        IF (<EXHAUST-SOURCE> .eq. 1) THEN   ! makeup by system OA               -046   205
          Call ZoneExhaust(1, <CFMAX>)      ! set EXCFM                         -046   206
        ELSE                                                                    -046   207
          EXCFM = 0.                                                            -046   208
        ENDIF                                                                   -046   209
        CFMrMin = Min(CFMRAT, Max(<MIN-CFM-RATIO>, EXCFM/<CFMAX>))              -044e  178
c                                                                               StgVol  79
c              For a given stage, calculate the fraction of design              StgVol  80
c              airflow this stage can provide at the required supply            StgVol  81
c              setpoint.  If below minimum airflow, keep at minimum             StgVol  82
c              and float supply temperature.                                    StgVol  83
c              First, cooling                                                   StgVol  84
c                - Floating                                                     StgVol  85
        NV = 1  ! index into staging arrays                                     StgVol  86
        IF (<INDOOR-FAN-MODE> .EQ. 0)  THEN       ! continuous                  StgVol  87
          <sy.StgVCoolT> = TMMAX                                                StgVol  88
     &              + DuctDT(TMMAX, <SUPPLY-CFM>*CFMrMin, 2,1,0)                -044e  179
          <sy.StgVCoolCFMr> = CFMrMin                                           -044e  180
        ELSE                                      ! intermittent                StgVol  91
          <sy.StgVCoolCFMr> = 0.                                                StgVol  92
        ENDIF                                                                   StgVol  93
c                - Economizer                                                   StgVol  94
        NV = 2  ! index into staging arrays                                     StgVol  95
        IF (POMAX .GT. POM)  THEN                 ! econo active                StgVol  96
          CFMr = 1.0                                                            StgVol  97
        ELSEIF (<INDOOR-FAN-MODE> .EQ. 0)  THEN   ! continuous fan              StgVol  98
          CFMr = CFMrMin                                                        -044e  181
        ELSE                                      ! intermittent                StgVol 100
          CFMr = 0.                                                             StgVol 101
        ENDIF                                                                   StgVol 102
        <sy.StgVCoolT> = TMMIN + DuctDT(TMMIN,<SUPPLY-CFM>*CFMr, 2,1,0)         StgVol 103
        <sy.StgVCoolCFMr> = CFMr                                                StgVol 104
c                - Mechanical cooling                                           StgVol 105
        DO  NV=3,<sy;StgVNumClStgs>    ! index into staging arrays              StgVol 106
c              capacity and full-flow temperature of this stage                 StgVol 107
          Qstg   = QCS * <sy;StgVCoolPLR> / CONS(1)                             StgVol 108
          TCstg  = TMMIN - Qstg/<SUPPLY-CFM>                                    StgVol 109
          Tset = <sy;StgVCoolTset>                                              StgVol 110
          IF (TCHUM .GT. 0.) Tset = Min(TCHUM, Tset)                            StgVol 111
          IF (Qstg .eq. 0.)  THEN                                               -042k    1
            IF (<INDOOR-FAN-MODE> .EQ. 0)  THEN   ! continuous fan              -042k    2
              CFMr = CFMrMin                                                    -044e  182
            ELSE                                  ! intermittent                -042k    4
              CFMr = 0.                                                         -042k    5
            ENDIF                                                               -042k    6
          ELSEIF (<AIR/TEMP-CONTROL> .EQ. 3)  THEN                              -042k    7
c              Two-speed                                                        -042f   48
            IF (NV .EQ. 3)  THEN                                                -042f   49
              CFMr = CFMrMin                                                    -044e  183
            ELSE                                                                -042f   51
              CFMr = 1.                                                         -042f   52
            ENDIF                                                               -042f   53
          ELSEIF (TCstg .LE. Tset)  THEN                                        -042f   54
c              this stage can handle full flow                                  StgVol 113
            CFMR = 1.                                                           StgVol 114
          ELSE                                                                  StgVol 115
c              reduce airflow to maintain setpoint                              StgVol 116
            IF (Qstg .GT. 0.)  THEN                                             StgVol 117
              CFMr = Qstg / (<SUPPLY-CFM>*(TMMIN-Tset))                         StgVol 118
              CFMr = Max(CFMrMin, CFMr)                                         -044e  184
            ELSE  ! don't think should ever be here                             StgVol 120
              IF (<INDOOR-FAN-MODE> .EQ. 0)  THEN       ! continuous            StgVol 121
                CFMr = Max(<HMIN-CFM-RATIO>, EXCFM/<CFMAX>)                     -044e  185
              ELSE                                      ! intermittent          StgVol 123
                CFMr = 0.                                                       StgVol 124
              ENDIF                                                             StgVol 125
            ENDIF                                                               StgVol 126
          ENDIF                                                                 StgVol 127
          IF (CFMr .GT. 0.)  THEN                                               StgVol 128
            CFMstg         = <SUPPLY-CFM> * CFMr                                StgVol 129
            TCstg          = Max(<COOL-SET-T>+TCRMIN, TMMIN-Qstg/CFMstg)        -044e5   5
            <sy.StgVCoolT> = TCstg + DuctDT(TCstg, CFMstg, 2,1,0)               StgVol 131
          ENDIF                                                                 StgVol 132
          <sy.StgVCoolCFMr> = CFMr                                              StgVol 133
        ENDDO                                                                   StgVol 134
c                                                                               StgVol 135
c              Next, heating                                                    StgVol 136
c                - Floating                                                     StgVol 137
        NV = 1  ! index into staging arrays                                     StgVol 138
        IF (<INDOOR-FAN-MODE> .EQ. 0)  THEN       ! continuous                  StgVol 139
          <sy.StgVHeatT>    = <sy.StgVCoolT>                                    StgVol 140
          <sy.StgVHeatCFMr> = CFMrMin                                           -044e  186
        ELSE                                      ! intermittent                StgVol 142
          <sy.StgVHeatCFMr> = 0.                                                StgVol 143
        ENDIF                                                                   StgVol 144
c                - Mechanical heating - if a heat-pump, first stages are        StgVol 145
c                  compressor only; last stage is supplemental heat             StgVol 146
        IF (HeatPump)  THEN                                                     StgVol 147
          QHcap = QHTNS     ! heat-pump compressor; excluding supplemental      StgVol 148
        ELSE                                                                    StgVol 149
          QHcap = QHT       ! total capacity                                    StgVol 150
        ENDIF                                                                   StgVol 151
        DO  NV=2,<sy;StgVNumHtStgs>                                             StgVol 152
          IF (HeatPump  .AND.  NV .EQ. <sy;StgVNumHtStgs>)  QHcap = QHT         StgVol 153
c              capacity and full-flow temperature of this stage                 StgVol 154
          Qstg  = QHcap * <sy;StgVHeatPLR> / CONS(1)                            StgVol 155
          TCstg = THMIX - Qstg/<SUPPLY-CFM>                                     StgVol 156
          IF (Qstg .eq. 0.)  THEN                                               -042k    8
            IF (<INDOOR-FAN-MODE> .EQ. 0)  THEN   ! continuous fan              -042k    9
              CFMr = <HMIN-CFM-RATIO>                                           -042k   10
            ELSE                                  ! intermittent                -042k   11
              CFMr = 0.                                                         -042k   12
            ENDIF                                                               -042k   13
          ELSEIF (<AIR/TEMP-CONTROL> .EQ. 3)  THEN                              -042k   14
c              Two-speed                                                        -042f   56
            IF (NV .EQ. 2)  THEN                                                -042f   57
              CFMr = <HMIN-CFM-RATIO>                                           -042f   58
            ELSE                                                                -042f   59
              CFMr = 1.                                                         -042f   60
            ENDIF                                                               -042f   61
          ELSEIF (TCstg .GE. <sy;StgVHeatTset>)  THEN                           -042f   62
c              this stage can handle full flow                                  StgVol 158
            CFMr = 1.                                                           StgVol 159
          ELSE                                                                  StgVol 160
c              reduce airflow to maintain setpoint                              StgVol 161
            IF (Qstg .LT. 0.)  THEN                                             StgVol 162
              CFMr = Qstg / (<SUPPLY-CFM>*(THMIX-<sy;StgVHeatTset>))            StgVol 163
              CFMr = Max(<HMIN-CFM-RATIO>, CFMr)                                StgVol 164
            ELSE  ! must be a heat-pump running too cold                        StgVol 165
              IF (<INDOOR-FAN-MODE> .EQ. 0)  THEN       ! continuous            StgVol 166
                CFMr = <HMIN-CFM-RATIO>                                         StgVol 167
              ELSE                                      ! intermittent          StgVol 168
                CFMr = 0.                                                       StgVol 169
              ENDIF                                                             StgVol 170
            ENDIF                                                               StgVol 171
          ENDIF                                                                 StgVol 172
          IF (CFMr .GT. 0.)  THEN                                               StgVol 173
            CFMstg         = <SUPPLY-CFM> * CFMr                                StgVol 174
            TCstg          = Min(THMAX, THMIX - Qstg/CFMstg)                    -044d1  36
            <sy.StgVHeatT> = TCstg + DuctDT(TCstg, CFMstg, 2,1,0)               StgVol 176
          ENDIF                                                                 StgVol 177
          <sy.StgVHeatCFMr> = CFMr                                              StgVol 178
        ENDDO                                                                   StgVol 179
      ENDIF  ! Staged volume                                                    StgVol 180
c                                                                               DKTEMP1548
c              Convert the entering duct temps to diffuser temps for            DKTEMP1549
c              airflow calcs in VARVOL, etc.  Save the estimated duct           DKTEMP1550
c              temp change for use in calculating losses in TEMDEV.             DKTEMP1551
c              Systems which have a control zone will reset TC after            DKTEMP1552
c              TEMDEV; therefore these systems cannot have duct losses          DKTEMP1553
c              in the control zone.                                             DKTEMP1554
c              First cooling                                                    HVAC25  35
      X         = DUCTDT(TC,CoilCFMc,2,1,0)                                     HVAC25  37
      TC        = TC + X                                                        HVAC25  38
      DTDUCT    = X                                                             HVAC25  39
c              heating                                                          HVAC25  40
      X         = DUCTDT(TH,CoilCFMh,1,1,0)                                     HVAC25  42
      TH        = TH + X                                                        HVAC25  43
      DTDUCTh   = X                                                             HVAC25  44
c              miscellaneous variables which may be used to reset               DKTEMP1563
c              TH or TC                                                         DKTEMP1564
      TCMINcoil = TCMIN                                                         DKTEMP1565
      TCMIN  = TCMIN  + DUCTDT(TCMIN, CoilCFMc, 2,1,0)                          HVAC1  126
      IF (TCHUM .GT. 0.)                                                        DKTEMP1567
     1  TCHUM  = TCHUM  + DUCTDT(TCHUM, CoilCFMc, 2,1,0)                        HVAC1  127
      TCMNEV = TCMNEV + DUCTDT(TCMNEV, CoilCFMc, 2,1,0)                         HVAC1  128
      TPOMIN = TPOMIN + DUCTDT(TPOMIN, CoilCFMc, 2,1,0)                         HVAC1  129
      THMAXcoil = THMAX                                                         DKTEMP1571
      THMAX  = THMAX  + DUCTDT(THMAX, CoilCFMh,1,1,0)                           HVAC1  130
      THMXNS = THMXNS+ DUCTDT(THMXNS, CoilCFMh,1,1,0)                           -034   173
c              save estimated coil cfms                                         HVAC1  131
      <HT_COIL_CFM> = CoilCFMh                                                  HVAC1  132
      <CL_COIL_CFM> = CoilCFMc                                                  HVAC1  133
C************************** run function : DKTEMP-3 ****************            DKTEMP1573
      IF( MSYSF(23) .NE. 0 )   CALL  FINTS( MSYSF(23), 3. )                     DKTEMP1574
C*******************************************************************            DKTEMP1575
      RETURN                                                                    DKTEMP1576
      END                                                                       DKTEMP1577
      SUBROUTINE DOETRM                                                         DOETRM   2
C                                                                               DOETRM   3
C              THIS SUBROUTINE HOOKS UP THE VENTED TROMBE WALL                  DOETRM   4
C              ROUTINE WITH THE REST OF SYSTEMS                                 DOETRM   5
C                                                                               DOETRM   6
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                 IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                        /FILES/  3
     2               , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                   /FILES/  4
     3                 IHRREP(3), IHRPAS(2)                                     /FILES/  5
      common  /FNSYS/  ISKIPS, MSYSF(120)                                       /FNSYS/  2
      COMMON  /HRREP / Irb, Ihrp, Lrb, Lhrp, Nrb, Nhrp, IVTLIM(3,50),           HR       5
     &                 IGRPtr, IBRPtr, IRSch, IRSchT(5),                        HR       6
     &                 NHRTyp(3), ITBUF(3), ITBUFB(3), ITBUFE(3),               HR       7
     &                 IHREOF, ICDFLG                                           HR       8
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      COMMON  /REPORT/ IREPRT(4,37),IPRG,IUNIQV(100),IUNIQS(100),IUNIQL         HVAC14   4
      COMMON  /TIME  / IDOY, IYR, IMO, IDAY, IHR,                               Time     4
     &                 ISCMO, ISCDAY, ISCHR, IDOW, ISCDOW, iDSdates(6),         -044e5   1
     &                 iTimeFlg, iDSFlg, iDDFlg, InitialFlg, LeapYr,            Time     6
     &                 CLOCK(10), MONDSC(13), MONLEN(12), MONSDA(12)            HR      12
      COMMON  /TROMWL/ SUMDTX,SUMDTY,QCTOT,QLC0,QGK0,QCGUES,QVNTBG,             /TROMWL/ 2
     1                 VOLVNT,AMF,UCHAN,UCHANC,HRGW,TAIRIN,TZONE,               /TROMWL/ 3
     2                 TGOUT,QCVG,QCVW,IVMODE,TFO,RHO,MWH,FILMU,MRX,CTRM        /TROMWL/ 4
     1    , TAVR, TGLASS, TUNDER, UNIN1                                         /TROMWL/ 5
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
C                                                                               DOETRM  16
C********************* run function : DOETRM-0 *********************            DOETRM  17
      IF( MSYSF(24) .NE. 0 )   CALL  FINTS( MSYSF(24), 0. )                     DOETRM  18
C*******************************************************************            DOETRM  19
C              DEBUG PRINT.  DUMP QUANTITIES PASSED FROM HOURLY FILE.           DOETRM  20
c     IF ((IRSCH .NE. 0) .AND. (IREPRT(2,35) .NE. 0))                           IREPRT  42
c    1 WRITE(IOUTPT,9002)  (<ZONE-NAME>,II=1,4),<QABSW>,<QABSI>,                DOETRM  22
c    1             <QABSO>, <NIGHT-INSUL>                                       DOETRM  23
c9002 FORMAT(1X,4A4,4X,10H  QABSW  =,E10.4,10H  QABSI  =,E10.4,                 DOETRM  24
c    1                 10H  QABSO  =,E10.4,10H  NIGHTI =,E10.4)                 DOETRM  25
      FILMU = 0.84*0.0857E-8*(2.*DBTR)**3 + .2062*WNDSPD**.917                  DOETRM  26
C              DO SUMMATIONS FOR THIS HOUR                                      DOETRM  27
      SUMDTX = 0.                                                               DOETRM  28
      SUMDTY = 0.                                                               DOETRM  29
      NRESF  = <NRESFAC>                                                        DOETRM  30
      MWH = MTW + 35                                                            DOETRM  31
      MRX    = MWH + NRESF                                                      DOETRM  32
      MRY    = MRX + NRESF                                                      DOETRM  33
      DO 100 J=2,NRESF                                                          DOETRM  34
      SUMDTX = SUMDTX + (AA(J+MWH)-TZONE)*(AA(J+MRX)-AA(J+MRX-1)*               DOETRM  35
     1         <RFCOMRATIO>)                                                    DOETRM  36
      SUMDTY = SUMDTY + (AA(J+MWH)-TZONE)*(AA(J+MRY)-AA(J+MRY-1)*               DOETRM  37
     1         <RFCOMRATIO>)                                                    DOETRM  38
  100 CONTINUE                                                                  DOETRM  39
      SUMDTX = SUMDTX + <RFCOMRATIO>*<QXOLD>                                    DOETRM  40
      SUMDTY = SUMDTY + <RFCOMRATIO>*<QCOND>                                    DOETRM  41
C              CALL TSOLVE TO GET WALL TEMPERATURES AND SOLVE                   DOETRM  42
C              THERMOCIRCULATION                                                DOETRM  43
      CALL TSOLVE                                                               DOETRM  44
C              CALCULATE NEW WALL FLUXES USING THE NEW SURFACE                  DOETRM  45
C              TEMPERATURES                                                     DOETRM  46
      <QXOLD> = (AA(MWH+1)-TZONE)*AA(MRX+1) + SUMDTX                            DOETRM  47
      <QCOND> = (AA(MWH+1)-TZONE)*AA(MRY+1) + SUMDTY                            DOETRM  48
C              UPDATE THE WALL TEMPERATURE HISTORY                              DOETRM  49
      DO 200 J=2,NRESF                                                          DOETRM  50
      J1     = NRESF + MWH + 2 - J                                              DOETRM  51
      AA(J1) = AA(J1-1)                                                         DOETRM  52
  200 CONTINUE                                                                  DOETRM  53
      QLC0   = QCTOT*<GLASS-AREA>                                               DOETRM  54
      QGK0   = <QCOND>*<GLASS-AREA>                                             DOETRM  55
C********************* run function : DOETRM-1 *********************            DOETRM  56
      IF( MSYSF(25) .NE. 0 )   CALL  FINTS( MSYSF(25), 1. )                     DOETRM  57
C*******************************************************************            DOETRM  58
C              DEBUG PRINT FOR TROMBE WALLS                                     DOETRM  59
      IF ((IRSCH .EQ. 0)  .OR. (IREPRT(2,35) .EQ. 0))  RETURN                   IREPRT  43
c     WRITE (IOUTPT,9003) IHR,IDAY,IMO                                          DOETRM  61
c9003 FORMAT(1X,6HIHR = ,I2,4X,7HIDAY = ,I2,4X,6HIMO = ,I2)                     DOETRM  62
c     WRITE(IOUTPT,9001)  (<ZONE-NAME>,II=1,4),SUMDTX,SUMDTY,QCTOT,             DOETRM  63
c    1            QLC0, QGK0,                                                   DOETRM  64
c    2            QCGUES,QVNTBG,VOLVNT,AMF,UCHAN,UCHANC,HRGW,                   DOETRM  65
c    3            TAIRIN,TZONE,TGOUT,QCVG,QCVW,IVMODE,TFO,RHO,MWH,              DOETRM  66
c    4            FILMU,MRX,MTW,AA(MWH+1)                                       DOETRM  67
c9001 FORMAT(1X,4A4,4X,10H  SUMDTX =,E10.4,10H  SUMDTY =,E10.4,                 DOETRM  68
c    1                 10H  QCTOT  =,E10.4,10H  QLC0   =,E10.4,                 DOETRM  69
c    2                 10H  QGK0   =,E10.4 / 21X,                               DOETRM  70
c    3                 10H  QCGUES =,E10.4,10H  QVNTBG =,E10.4,                 DOETRM  71
c    4                 10H  VOLVNT =,E10.4,10H  AMF    =,E10.4,                 DOETRM  72
c    5                 10H  UCHAN  =,E10.4 / 21X,                               DOETRM  73
c    6                 10H  UCHANC =,E10.4,10H  HRGW   =,E10.4,                 DOETRM  74
c    7                 10H  TAIRIN =,E10.4,10H  TZONE  =,E10.4,                 DOETRM  75
c    8                 10H  TGOUT  =,E10.4 / 21X,                               DOETRM  76
c    9                 10H  QCVG   =,E10.4,10H  QCVW   =,E10.4,                 DOETRM  77
c    1                 10H  IVMODE =,I10  ,10H  TFO    =,E10.4,                 DOETRM  78
c    2                 10H  RHO    =,E10.4 / 21X,                               DOETRM  79
c    3                 10H  MWH    =,I10  ,10H  FILMU  =,E10.4,                 DOETRM  80
c    4                 10H  MRX    =,I10  ,10H  MTW    =,I10  ,                 DOETRM  81
c    5                 10H  TWALL  =,E10.4 /)                                   DOETRM  82
c     N1 = 36 + 3*NRESF                                                         DOETRM  83
c     CALL DUMPIT(20HT-W ARRAY            ,AA(MTW),N1)                          DOETRM  84
      RETURN                                                                    DOETRM  85
      END                                                                       DOETRM  86
      SUBROUTINE DOUBLE                                                         DOUBLE   2
C                                                                               DOUBLE   3
c                                                                               DOUBLE   4
c              This routine simulates both single-fan and dual-fan              DOUBLE   5
c              dual-duct systems.                                               DOUBLE   6
c                                                                               DOUBLE   7
C                                                                               DOUBLE   8
C              DEVELOPED BY                                                     -130     1
C                            J. J. Hirsch & S. D. Gates                         -130     2
C                            James J. Hirsch & Associates                       -130     3
C                            Camarillo, California                              -130     4
C              BASED UPON CODE DEVELOPED BY J. J. Hirsch and                    -130     5
C                            W. F. Buhl                                         -130     6
C                            A. E. Erdem                                        -130     7
C                            Lawrence Berkeley National Laboratory              -130     8
C                            University of California                           -130     9
Copyright (c) 1997 by James J. Hirsch. All Rights Reserved. Unpublished         -130    10
c rights reserved under the Copyright Laws of the United States.                -130    11
c RESTRICTED RIGHTS NOTICE: Government use, reproduction or disclosure          -130    12
c is subject to restrictions as set forth in Rights in Data (g)(3) in           -130    13
c UC/LBL purchase order 4607010 with J.J. Hirsch & Associates.                  -130    14
c                         MODIFIED FOR DUAL-FAN SYSTEMS BY                      DOUBLE  10
c                                      STEVEN GATES                             DOUBLE  11
c                                      J. HIRSCH & ASSOCIATES                   DOUBLE  12
c                                                                               DOUBLE  13
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON /DDSDAT/ FONh, SFKWh, DTSh, CFMRATh, FONNGTh, RCFMmix,             /DDSDAT/ 2
     1                RfanCFM, EXFIL, DTDUCT, DTDUCTh, TCDFSR, THDFSR,          /DDSDAT/ 3
     2                CFMINh, CFMINc, CFMINhm, CFMINcm, CFMINt,                 /DDSDAT/ 4
     3                TCMINcoil, THMAXcoil, IWarmestZ, IColdestZ                /DDSDAT/ 5
      DIMENSION       DDSDAT(21)                                                /DDSDAT/ 6
      EQUIVALENCE     (DDSDAT(1), FONh)                                         /DDSDAT/ 7
      COMMON  /DESHRQ/ NDESDY, IDDTYP(2), DESHRQ(360)                           Time     3
      COMMON  /ENDUSE/ SUPPKW, HEATKW                                           HVAC27   1
      COMMON /FFUEL/ FFUEL, FurnAuxFuel, FurnAuxkW, PLRF                        /FFUEL/  2
      common  /FNSYS/  ISKIPS, MSYSF(120)                                       /FNSYS/  2
      COMMON  /HRREP / Irb, Ihrp, Lrb, Lhrp, Nrb, Nhrp, IVTLIM(3,50),           HR       5
     &                 IGRPtr, IBRPtr, IRSch, IRSchT(5),                        HR       6
     &                 NHRTyp(3), ITBUF(3), ITBUFB(3), ITBUFE(3),               HR       7
     &                 IHREOF, ICDFLG                                           HR       8
      COMMON  /MISCD / TEMPS(4,9999),CONS(5),TEMPSL(9999),                      -048a   10
     1                 BLDGQH,BLDGQC,BLDGQL,BLDGP,BPMULT,                       /MISCD/  3
     $                 DBTMIN,DBTMAX,WMIN,WMAX,NSPZ(9999),                      -048a   11
     3                 DQ, DTP, DTR, DTS, FPI, PLRCC , POM, TC2, TDM,           /MISCD/  5
     4                 TRA,WCOL,WCOLM,WMM,YPI,KWBTU,BTUKW,UNFILD,Unusedm        RemPA   45
      REAL             KWBTU                                                    /MISCD/  7
      COMMON  /PLANTD/ QHMP,TMP,CFMP,QHPP,CFMPP,                                /PLANTD/ 2
     1                 QHZP,TZP,DHWPKW,DHWPLF,DHWQRP                            RemPA   46
      REAL             PLANTD(10)                                               RemPA   47
      EQUIVALENCE      (PLANTD(1), QHMP)                                        RemPA   48
      COMMON  /PTRPLT/ Ipm,Ilp,Ich,Ibl,Idw,Itw,Ipv,Ign,Itk,Ihx,                 PV       1
     &                 Iec,Ilm,Iem,Ifm,Ism,Icm,Imm,Imc,Igl,Isp2,                XFC2     1
     &                 Ispare(5),  Ipe,                                         HVAC19   3
     &                 Npm,Nlp,Nch,Nbl,Ndw,Ntw,Npv,Ngn,Ntk,Nhx,                 PV       2
     &                 Nec,Nlm,Nem,Nfm,Nsm,Ncm,Nmm,Nmc,Ngl,Nsp2,                XFC2     2
     &                 Nspare(5),  Npe,                                         HVAC19   6
     &                 Lpm,Llp,Lch,Lbl,Ldw,Ltw,Lpv,Lgn,Ltk,Lhx,                 PV       3
     &                 Lec,Llm,Lem,Lfm,Lsm,Lcm,Lmm,Lmc,Lgl,Lsp2,                XFC2     3
     &                 Lspare(5),  Lpe,                                         HVAC19   9
     &                 Jpm,Jlp,Jch,Jbl,Jdw,Jtw,Jpv,Jgn,Jtk,Jhx,                 PV       4
     &                 Jec,Jlm,Jem,Jfm,Jsm,Jcm,    Jmc,Jgl,                     HVAC19  11
     &                 Jpe, kpr, NumMeters, NumIntHX                            XFC1     1
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      COMMON  /SYSTD / TH,TC,TM,TR,QH,QC,QHZ,QCZ,QHB,QHP,QHUM,                  /SYSTD/  2
     1                 QDHUM,TCMIN,THMAX,QLSUM,QPSUM,CFM,CFMH,CFMC,             /SYSTD/  3
     2                 RCFM,ECFM,CINF,FON,HON,CON,BON,SCONS(3),PH,PC,           /SYSTD/  4
     3                 SKW,FANKW,unused1,WR,WM,WCOIL,WW,PO,D,                   -046f    1
     4                 FTEMP,TCR,QHR,RfanPumpKW,SGAS,SKWQH,SKWQC,QCLAT,         -131    23
     5                 SFKW,RFKW,FONNGT,WSURF,RWalkinQ,TSURF,TRh,               -131    24
     6                 CBF,CBF1,CBF2,EON,PLRCFM,PLRC,PLRH,QCM1,                 /SYSTD/  8
     7                 QCM2,QHM1,EIRM1,EIRM2,EIR,OFKW,QCT,QCS,                  /SYSTD/  9
     8                 WRMAX,WRMIN,CFMRAT,QdistG,QdistL,RON,QHT,                /SYSTD/ 10
     9                 TPOMIN,POMIN,QHSUP,QRSENS,QRLAT,QRREC,QRREJ,             /SYSTD/ 11
     1                 RCOMKW,RDEFKW,RAUXKW,ECFMP,CFMIN,CINFP,DT,DW,            /SYSTD/ 12
     2                 EWB,IC,NATTSP,Q,RETR,SLOAD,QLSUMP,T,TCHUM,TEND,          /SYSTD/ 13
     3                 TS,hgbmin,HPDefE,EconoOnly,TDuctEnv,                     -044e1   1
     4                 QCUNMT,CapRh,CapRph,CapRc                                HVAC25   3
      REAL             SYSTD(113)                                               HVAC19  13
      EQUIVALENCE      (SYSTD(1),TH)                                            RemPA   65
      COMMON  /TIME  / IDOY, IYR, IMO, IDAY, IHR,                               Time     4
     &                 ISCMO, ISCDAY, ISCHR, IDOW, ISCDOW, iDSdates(6),         -044e5   1
     &                 iTimeFlg, iDSFlg, iDDFlg, InitialFlg, LeapYr,            Time     6
     &                 CLOCK(10), MONDSC(13), MONLEN(12), MONSDA(12)            HR      12
      COMMON  /REPORT/ IREPRT(4,37),IPRG,IUNIQV(100),IUNIQS(100),IUNIQL         HVAC14   4
      COMMON /SSPDAT/  PLRCS,QCCKWS,QCCMPS,PLRHS,QHCKWS,QHCMPS                  /SSPDAT/ 2
     $                ,PLRFS,PLRFCS,PLRFHS,sspss                                /SSPDAT/ 3
     $                ,PLRCZ,QCCKWZ,QCCMPZ,PLRHZ,QHCKWZ,QHCMPZ                  /SSPDAT/ 4
     $                ,PLRFZ,PLRFCZ,PLRFHZ,sspsz                                /SSPDAT/ 5
     $                ,ISSPF,IWCCF,IPCCF,SSPSAV                                 /SSPDAT/ 6
      DIMENSION        SSPD(24)                                                 JJHfix   1
      EQUIVALENCE      (SSPD(1),PLRCS)                                          /SSPDAT/ 8
      COMMON  /ZONED / EXCFM,FH,FC,CFMZ,QHBZ,QOVER,THZ,TCZ,ERMAX,ERMIN,         /ZONED/  2
     1                 TRY,FTD,CORINT,G0,G1,G2,G3,SIGMAG,TL,ZQHR,TAVE,          /ZONED/  3
     2                 ZQH,ZQC,FCHPS(15),ACFM,ZKW,TCMINZ,THMAXZ,                /ZONED/  4
     3                 ERMAXM,ERMINM,THR,CSSCND,CSSVEC,HENOW,QGWIN,             /ZONED/  5
     4                 QSNABT,QGOPWL,QGVEC,CFMCVT,SSFPT,CFMVNT,ZFANKW,          /ZONED/  6
     5                 ZKWCBT,ZKWHBT,ZCapRbbrd, XC,ZC,XH,ZH                     -044e2   7
      REAL ZONED(63)                                                            -044e2   8
      EQUIVALENCE (ZONED(1),EXCFM)                                              /ZONED/  9
      INTEGER DDSTYPE                                                           DOUBLE  25
      COMMON  /LENS/   MWFLEN, MRLEN, MSHLEN, MWNLEN, MDRLEN, MXLEN,            /LENS/   2
     1                 MULEN, MZLEN, MIWLEN, MFLLEN,                            /LENS/   3
     2                 LMTB, LLDSOU, MSTLEN, LSTFT, MWLLEN                      /LENS/   4
      COMMON  /PTRBGN/ IWFB, IWPB, ICONSB, IGTB, IWLB, IGEOB, ISHADB,           /PTRBGN/ 2
     &                 IWINB, IDRB, IEWB, IUGB, ISPB, IIWPB, IIWB,              /PTRBGN/ 3
     &                 IFLB, ISPCDB, IOTHB, ILHB, IZQCMB, ISSHDB,               /PTRBGN/ 4
     &                 IOHFIB, IZLSK, IZLSL, ISTFB, ILSSH                       PV2      1
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     /PNTRS/  3
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        /PNTRS/  4
      COMMON  /SIZE/   LENGTH,NWF,NWPAR,NCONS,NGT,NWL,NGEO,                     /SIZE/   2
     1                 NGSHAD, NWIN, NDOOR, NEW, NUG, NSPl, NIWP, NIW,          /SIZE/   3
     &                 NFL, NBR, NOTH, NITH, NOPSRF,                            /SIZE/   4
     &                 NSURF, NSSHD, NSHTOT, NEWshade                           /SIZE/   5
C********************* run function : DOUBLE-0 *********************            DOUBLE  26
      IF( MSYSF(26) .NE. 0 )   CALL  FINTS( MSYSF(26), 0. )                     DOUBLE  27
C*******************************************************************            DOUBLE  28
      ISSPF = 0                                                                 -131   215
      IF((IREPRT(2,23).NE.0).OR.(IREPRT(2,27).NE.0))  ISSPF = 1                 -131   216
c                                                                               HVAC1  135
c              set circulation loop restrictions on heating and                 HVAC1  136
c              cooling capacity for use in DKTEMP.                              HVAC1  137
      IF (<HW-LOOP> .NE. 0)  THEN                                               HVAC1  138
c              heating coil is hot water - pointer to loop                      HVAC1  139
        JLP   = <HW-LOOP>                                                       HVAC1  140
        CapRh = <lp;HCAP_RATIO>                                                 HVAC16  78
      ELSE                                                                      HVAC1  142
        CapRh = 1.0                                                             HVAC1  143
      ENDIF                                                                     HVAC1  144
      IF (<PHW-LOOP> .NE. 0)  THEN                                              HVAC1  145
c              preheat coil is hot water - pointer to loop                      HVAC1  146
        JLP    = <PHW-LOOP>                                                     HVAC1  147
        CapRph = <lp;HCAP_RATIO>                                                HVAC16  79
      ELSE                                                                      HVAC1  149
        CapRph = 1.0                                                            HVAC1  150
      ENDIF                                                                     HVAC1  151
      IF (<CHW-LOOP> .NE. 0)  THEN                                              HVAC1  152
c              cooling coil is water - pointer to loop                          HVAC1  153
        JLP   = <CHW-LOOP>                                                      HVAC1  154
        CapRc = <lp;CCAP_RATIO>                                                 HVAC16  80
      ELSE                                                                      HVAC1  156
        CapRc = 1.0                                                             HVAC1  157
      ENDIF                                                                     HVAC1  158
c              DKTEMP calcs the hot (TH) and cold (TC) supply temps             HVAC1  159
      CALL DKTEMP                                                               DOUBLE  30
c                                                                               DOUBLE  31
c              If we are in a VAV system there is the possibiltiy that          DOUBLE  32
c              the zones can ask for more air than the fan can supply.          DOUBLE  33
c              This condition was checked for in DKTEMP, and the ratio          DOUBLE  34
c              of what the zones may ask for vs. the supply capacity is         DOUBLE  35
c              stored in CFMRAT and CFMRATh.  For single-fan                    DOUBLE  36
c              systems, CFMRATh has the same value as CFMRAT.                   DOUBLE  37
c                                                                               DOUBLE  38
c              Type of system  0 = single-duct (never here)                     DOUBLE  39
c              1 = single-fan dual-duct  2 = dual-fan dual-duct                 DOUBLE  40
      DDSTYPE = <DDS-TYPE>                                                      DOUBLE  41
      <DCVOAcfmS> = 0.0                                                         -044c  437
      <DCVOAcfmFracCrit> = 0.0                                                  -044c  438
c                                                                               DOUBLE  42
c              Total amount of heat extraction into return air                  DOUBLE  43
      QNOWR   = 0.                                                              DOUBLE  44
c              temporary calculation for return temp - this should not          DOUBLE  45
c              be in release version                                            DOUBLE  46
      TRQ     = 0.                                                              DOUBLE  47
C                                                                               DOUBLE  48
C              LOOP THROUGH THE ZONE AND CALCULATE HOT AND COLD                 DOUBLE  49
C              CFMS AS WELL AS OTHER LOADS                                      DOUBLE  50
C                                                                               DOUBLE  51
C              ZP1 POINTS TO FIRST ZONE                                         DOUBLE  52
      ZP1    = ISZ                                                              DOUBLE  53
      DO 10 NZ = 1,NSZ                                                          DOUBLE  54
C              ZERO THE ZONE DATA COMMON BLOCK                                  DOUBLE  55
      DO 111 I=1,63                                                             -044e2  20
  111 ZONED(I) = 0.0                                                            DOUBLE  57
      ZP2    = <ZP2>                                                            DOUBLE  58
      <ERMAX> = 0.0                                                             DOUBLE  59
      <ERMIN> = 0.0                                                             DOUBLE  60
c              if exhaust made up by infiltration                               -046   210
      IF (<EXHAUST-SOURCE> .eq. 2  .or.                                         -047b   18
     &    <EXHAUST-SOURCE> .eq. 3)  Call ZoneExhaust(9, xx)  ! power            -047b   19
C              SKIP IF FANS ON AND IT IS A PLENUM                               DOUBLE  61
      IF( ((FON .NE. 0.) .OR. (FONh .NE. 0.))                                   DOUBLE  62
     1                   .AND. (<ZONE-TYPE> .EQ. 3))  GOTO 10                   DOUBLE  63
C              PICK UP THE ZONE MULTIPLIER                                      DOUBLE  64
      ZMULT  = <MULTIPLIER>                                                     DOUBLE  65
      IF( ((FON.EQ.0.) .AND. (FONh .EQ. 0.) ) .OR. (<ZONE-TYPE>.NE.1))          DOUBLE  66
     1                                                            GOTO 3        DOUBLE  67
C              INITIALIZE COLD, HOT FLOWS                                       -044e  187
      FC     = 0.                                                               DOUBLE  70
      FH     = 0.                                                               DOUBLE  71
      ZKW    = 0.                                                               DOUBLE  72
c              exhaust flow                                                     -044e  188
      IF (<EXHAUST-SOURCE> .eq. 1)    ! makeup by system OA                     -046   212
     &  Call ZoneExhaust(1, <CFMAX>)  ! max exh flow                            -046   213
c              calculate the minimum heat and cool CFMs for this zone           DOUBLE  73
      CFMINh = <CFMAXH> * <MINCFMRH> * CFMRATh * FONh                           DOUBLE  74
      CFMINc = <CFMAX>  * <MINCFMRC> * CFMRAT  * FON                            DOUBLE  75
c              in dual-fan system, exhaust must be made up by cold deck         DOUBLE  78
c              to ensure sufficient return for hot deck                         DOUBLE  79
      IF (DDSTYPE .EQ. 2)  CFMINc = AMAX1(CFMINc, EXCFM)                        -044e  190
c              airflow rates in deadband                                        DOUBLE  81
      CFMINhm = CFMINh                                                          DOUBLE  82
      CFMINcm = CFMINc                                                          DOUBLE  83
c              if a total minimum at the box outlet is specified, the           DOUBLE  84
c              makeup may be supplied by either the hot deck, cold deck,        DOUBLE  85
c              or snap between the two.                                         DOUBLE  86
      CFMINt = 0.                                                               CCIG7   90
      IF (<MINCFMR> .GT. 0.)  THEN                                              CCIG7   91
        IF ( ((<CTRLTSTAT> .EQ. 1) .AND. (<MIN-CFM-SOURCEZ> .EQ. 0))            CCIG7   92
     1                          .OR. (<MIN-CFM-SOURCEZ> .EQ. 1) )  THEN         CCIG7   93
c              box minimum is made up by hot deck                               CCIG7   94
          IF (FONh .GT. 0.)  THEN                                               CCIG7   95
            CFMINt  = AMAX1(<CFMAXT>*<MINCFMR>, EXCFM)                          -044e  191
            CFMINhm = AMAX1(CFMINh, (CFMINt-CFMINc)*CFMRATh)                    CCIG7   97
          ENDIF                                                                 CCIG7   98
        ELSE                                                                    CCIG7   99
c              box minimum is made up by cold deck                              CCIG7  100
          IF (FON .GT. 0.)  THEN                                                CCIG7  101
            CFMINt  = AMAX1(<CFMAXT>*<MINCFMR>, EXCFM)                          -044e  192
            CFMINcm = AMAX1(CFMINc, (CFMINt-CFMINh)*CFMRAT)                     CCIG7  103
          ENDIF                                                                 CCIG7  104
        ENDIF                                                                   CCIG7  105
      ENDIF                                                                     CCIG7  106
      CFMINhm = CFMINhm * FONh                                                  DOUBLE  97
      CFMINcm = CFMINcm * FON                                                   DOUBLE  98
c              Calc min and max extraction rates.  All supply temps             DOUBLE  99
c              such as TC, TCHUM, TCMIN, TPOMIN, TH, and THMAX were             DOUBLE 100
c              adjusted in DKTEMP to include duct losses, and are the           DOUBLE 101
c              temperature entering the zone.  The extraction rates             DOUBLE 102
c              must include the minimum flow which occurs in the                DOUBLE 103
c              opposite deck.  The following solution requires that the         DOUBLE 104
c              hot and cold deck temps be warmer and colder respectively        DOUBLE 105
c              than the space.                                                  DOUBLE 106
c              Hot and cold deck temp differentials                             DOUBLE 107
      dTh = AMIN1(<TNOW>-TH, 0.)                                                DOUBLE 108
      dTc = AMAX1(<TNOW>-TC, 0.)                                                DOUBLE 109
      <ERMIN> = CONS(1) * (<CFMAXH>*CFMRATh * dTh * FONh                        DOUBLE 110
     1                             + CFMINc * dTc )                             DOUBLE 111
c              the deadband extraction when a snap is used will not             DOUBLE 112
c              be accurate the hour the snap occurs.  This cannot be            DOUBLE 113
c              helped.                                                          DOUBLE 114
      ERMINM  = CONS(1) * (CFMINhm*dTh + CFMINcm*dTc)                           DOUBLE 115
      ERMAXM  = ERMINM                                                          DOUBLE 116
      <ERMAX> = CONS(1) * (<CFMAX>*CFMRAT * dTc * FON                           DOUBLE 117
     1                           + CFMINh * dTh )                               DOUBLE 118
      XC     = CONS(1) * (<CFMAX> *CFMRAT *FON  + CFMINh)                       -044e2  21
      XH     = CONS(1) * (<CFMAXH>*CFMRATh*FONh + CFMINc)                       -044e2  22
      ZC     = CONS(1) * (CFMINhm + CFMINcm)                                    -044e2  23
      ZH     = ZC                                                               -044e2  24
      TCMINZ = TC                                                               DOUBLE 119
      THMAXZ = TH                                                               DOUBLE 120
    3 CALL TEMDEV(0)                                                            DOUBLE 121
c              average zone temperature during the hour                         DOUBLE 122
      TAVE   = (<TNOW>+<TPAST>)*0.5                                             DOUBLE 123
C              if fans are off or this is an unconditioned zone skip            DOUBLE 124
      IF (<ZONE-TYPE> .NE. 1) GOTO 8                                            DOUBLE 125
      IF ((FON .EQ. 0.) .AND. (FONh .EQ. 0.))  GOTO 5                           DOUBLE 126
c              recalculate hot and cold deck temp differentials using           DOUBLE 127
c              average zone temperature                                         DOUBLE 128
      dTh = TAVE-TH                                                             DOUBLE 129
      dTc = TAVE-TC                                                             DOUBLE 130
c              determine airflows for this zone                                 DOUBLE 131
c              first, minimum required airflow                                  DOUBLE 132
      FH = CFMINh                                                               DOUBLE 133
      FC = CFMINc                                                               DOUBLE 134
c              heat extraction not handled by minimum CFMs.  Note               DOUBLE 135
c              that heating min-cfm may increase cooling cfm, and               DOUBLE 136
c              vice versa.                                                      DOUBLE 137
      QLEFT = <QNOW> - CONS(1) * ( FH*dTh + FC*dTc )                            DOUBLE 138
c              airflow required to provide QLEFT                                DOUBLE 139
      IF (dTh .LT. -1.E-6)  FH = FH + AMAX1(0., QLEFT/(CONS(1)*dTh) )           DOUBLE 140
      IF (dTc .GT.  1.E-6)  FC = FC + AMAX1(0., QLEFT/(CONS(1)*dTc) )           DOUBLE 141
c              adjust CFMs if less than min box outlet cfm.                     DOUBLE 142
      IF (FC+FH .LT. CFMINt)  THEN                                              DOUBLE 143
c              additional cfm that must be allocated                            DOUBLE 144
        dCFMt = CFMINt - (FH+FC)                                                DOUBLE 145
c              cooling fraction for zero effect on QNOW                         DOUBLE 146
        IF ((TH-TC .GT. 0.) .AND. (TH-TAVE .GT. 0.))  THEN                      DOUBLE 147
          FRAC = AMAX1(0., AMIN1(1., (TH-TAVE) / (TH-TC)))                      DOUBLE 148
        ELSE                                                                    DOUBLE 149
          FRAC = 0.5                                                            DOUBLE 150
        ENDIF                                                                   DOUBLE 151
        FC = FC + dCFMt*FRAC                                                    DOUBLE 152
c              heat gets the rest                                               DOUBLE 153
        FH = FH + dCFMt*(1.0-FRAC)                                              DOUBLE 154
      ENDIF                                                                     DOUBLE 155
c              make sure CFMs are below maximum                                 DOUBLE 156
      FH = AMIN1(FH, <CFMAXH>*CFMRATh) * FONh                                   DOUBLE 157
      FC = AMIN1(FC, <CFMAX> *CFMRAT)  * FON                                    DOUBLE 158
C                                                                               DOUBLE 161
C              SUMMATION OF ZONE QUANTITIES FOR SYSTEM                          DOUBLE 162
C                                                                               DOUBLE 163
C              CFMH IS THE TOTAL HOT CFM FOR THE SYSTEM                         DOUBLE 164
      CFMH   = CFMH + FH*ZMULT                                                  DOUBLE 165
C              CFMC IS THE TOTAL COLD CFM FOR THE SYSTEM                        DOUBLE 166
      CFMC   = CFMC + FC*ZMULT                                                  DOUBLE 167
c              Exhaust kW                                                       -044e  193
      IF (<EXHAUST-SOURCE> .eq. 1)    ! makeup by system OA                     -046   214
     &  Call ZoneExhaust(9, FH+FC)    ! exhaust flow and power                  -046   215
      ECFM = ECFM + EXCFM*ZMULT                                                 -044e  195
C              TR IS THE RETURN AIR TEMPERATURE                                 DOUBLE 177
C              IT IS WEIGHTED BY THE ZONE CFM                                   DOUBLE 178
      TR     = TR + TAVE*(FH+FC-EXCFM)*ZMULT                                    DOUBLE 179
C              DCV - Calculate zone Occupancy based vent CFM and fraction       -044c  439
      IF((<MIN-OA-METHOD>.LT.0) .AND. (FH+FC .GT. 0.))  THEN                    -044c  440
        MZ = ISPB + (<NZSPACE>-1)*MZLEN                                         -044c  441
        <DCVOAcfmZ> = SchVal(<PEOPLE-SCHEDULE>, 1.)                             -045b   63
     &              * <ZPPLNO> * <OA-CFM/PER>                                   -045b   64
        IF(<MIN-OA-METHOD>.EQ.-1) <DCVOAcfmZ> = RETR*<DCVOAcfmZ>                -044c  443
        XX = <OUTSIDE-AIR-CFM>                                                  -044c  444
        IF(XX .EQ. 0.)                                                          -044c  445
     $     XX = AMAX1(<OA-FLOW/AREA>*<AREA>,<OA-CHANGES>*<VOLUME>/60.)          -044c  446
        IF((DDSTYPE .eq. 2) .AND. (FC .GT. 0.)) THEN                            -044c  447
          <DCVOAcfmZ> = AMAX1(<DCVOAcfmZ>,XX)                                   -044c  448
          <DCVOAcfmFrac> = AMIN1(1.,<DCVOAcfmZ>/FC)                             -044c  449
        ELSE                                                                    -044c  450
          <DCVOAcfmZ> = AMAX1(<DCVOAcfmZ>,XX)                                   -044c  451
          <DCVOAcfmFrac> =  AMIN1(1.,<DCVOAcfmZ>/FH)                            -044c  452
        ENDIF                                                                   -044c  453
        <DCVOAcfmS> = <DCVOAcfmS> + <DCVOAcfmZ>*ZMULT                           -044c  454
        <DCVOAcfmFracCrit> = AMAX1(<DCVOAcfmFracCrit>,<DCVOAcfmFrac>)           -044c  455
      ELSE                                                                      -044c  456
        <DCVOAcfmZ> = 0.0                                                       -044c  457
        <DCVOAcfmFrac> = 0.0                                                    -044c  458
      ENDIF                                                                     -044c  459
c              Pass baseboard energy onto source                                -035   134
    5 IF (<BASEBOARD-SOURCE> .LT. 0)  THEN                                      -035   135
c              hot-water or steam                                               -035   136
        <BBRD_EDB> = TAVE                                                       -035   137
        <BBRD_Q>   = QHBZ                                                       -035   138
      ELSEIF (<BASEBOARD-SOURCE> .EQ. 2)  THEN                                  -035   139
c              fuel-driven                                                      -035   140
        ZMULT = <MULTIPLIER>                                                    HVAC6  134
        CALL FURNAC(QHBZ,<BASEBOARD-RATING>,<BASEBOARD-SOURCE>,ZMULT)           HVAC6  135
        JEM       = <AUX-E-MZ>                                                  HVAC6  136
        <AUX-EM>  = <AUX-EM> + FurnAuxkW                                        HVAC6  137
        JFM       = <HEAT-F-MZ>                                                 HVAC6  138
        <HEAT-FM> = <HEAT-FM> - FFUEL                                           HVAC6  139
        <AUX-FM>  = <AUX-FM>  + FurnAuxFuel                                     HVAC6  140
      ELSEIF (<BASEBOARD-SOURCE> .EQ. 1)  THEN                                  -035   141
c              electric                                                         -035   142
        X      = QHBZ * KWBTU                                                   DOUBLE 186
        ZKW    = ZKW    - X                                                     DOUBLE 187
        SKWQH  = SKWQH  - X*ZMULT                                               DOUBLE 188
        JEM       = <HEAT-E-MZ>                                                 HVAC6  142
        <HEAT-EM> = <HEAT-EM> - X*ZMULT                                         HVAC6  143
      ENDIF                                                                     DOUBLE 190
C              RETR IS THE RATIO OF RETURN AIR TO SUPPLY                        DOUBLE 191
      RETR   = 1.                                                               DOUBLE 192
      IF(FH+FC .GT. 0.)  RETR = (1.0-EXCFM/(FH+FC))                             DOUBLE 193
C              QLSUM IS THE TOTAL LATENT LOAD IN ZONES                          DOUBLE 194
C              NOTE THAT PART OF LATENT IS EXHAUSTED                            DOUBLE 195
      QLSUM  = QLSUM + <QL>*RETR*ZMULT                                          DOUBLE 196
C              QPSUM IS THE TOTAL LIGHT HEAT TO RETURN DUCT                     DOUBLE 197
      QPSUM  = QPSUM + <QLIGHTRETURN> * ZMULT                                   DOUBLE 198
C              CINF IS THE TOTAL INFILTRATION CFM WHICH GETS                    DOUBLE 199
C              INTO THE RETURN AIR. NOTE THAT SOME OF THE                       DOUBLE 200
C              INFILTRATION AIR IS EXHAUSTED                                    DOUBLE 201
      CINF   = CINF   + <CFMINF>*RETR*ZMULT                                     DOUBLE 202
    8 CONTINUE                                                                  DOUBLE 203
      IF (<ZONE-TYPE>.EQ.3) GO TO 10                                            DOUBLE 204
      ZKW = ZKW + <ZKW>                                                         DOUBLE 205
      <SKW> = <SKW> + ZKW*ZMULT                                                 DOUBLE 206
C              SUM END-USE VARIABLES FOR THIS ZONE                              DOUBLE 207
      IF((<IZNBUFP>.NE.0).AND.(IRSCH.NE.0))  CALL USERZR(ZP1,ZP2)               DOUBLE 209
      IF(IRPZON .NE. 0)  CALL RPTZON                                            DOUBLE 210
   10 ZP1    = ZP1 + NZD                                                        DOUBLE 211
C                                                                               DOUBLE 212
C              CALCULATE TOTAL AIR QUANTITIES AND CALL ROUTINE                  DOUBLE 213
C              TO CALCULATE COIL LOADS FOR A DUAL DUCT SETUP                    DOUBLE 214
C                                                                               DOUBLE 215
C              CFM IS THE TOTAL SYSTEM CFM                                      DOUBLE 216
      CFM    = CFMH + CFMC                                                      DOUBLE 217
C              RCFM IS THE RETURN AIR CFM                                       DOUBLE 218
      RCFM   = CFM - ECFM                                                       DOUBLE 219
C              CALC THE RETURN AIR TEMP TO DUCT OR PLENUM                       DOUBLE 220
      TR     = TR/(RCFM+.01)                                                    DOUBLE 221
C********************* run function : DOUBLE-1 *********************            DOUBLE 222
      IF( MSYSF(27) .NE. 0 )   CALL  FINTS( MSYSF(27), 1. )                     DOUBLE 223
C*******************************************************************            DOUBLE 224
C              DDSF CALCULATES THE COIL LOADS                                   DOUBLE 225
      CALL DDSF                                                                 DOUBLE 226
C              RECALC RCFM TAKING INTO ACCO@UNT PLENUM EXH FOR USE IN HREP      DOUBLE 227
      RCFM = CFM - ECFM                                                         DOUBLE 228
C              IF THE MAIN HEAT SOURCE CAN NOT BE SOLAR SKIP                    DOUBLE 229
      IF(<HEAT-SOURCE> .GE. 0)  GOTO 171                                        DOUBLE 230
C              KEEP A SUM OF THE MAIN COIL LOADS THAT CAN BE SOLAR ASSIS        DOUBLE 231
      QHMP   = QHMP + QH                                                        DOUBLE 232
C              THE MIX AIR INTO THE COIL MUST BE WEIGHTED BY THE CFM            DOUBLE 233
      TMP    = TMP + TM*CFM                                                     DOUBLE 234
C              ASLO SUM THE CFM                                                 DOUBLE 235
      CFMP   = CFMP + CFM                                                       DOUBLE 236
C              IF THE PREHEAT COILS CAN NOT BE SOLAR SKIP                       DOUBLE 237
  171 IF(<PREHEAT-SOURCE> .GE. 0)  GOTO 172                                     DOUBLE 238
C              SAVE THE LOADS AND CFM                                           DOUBLE 239
      QHPP   = QHPP + QHP                                                       DOUBLE 240
      CFMPP  = CFMPP + PO*CFM                                                   DOUBLE 241
C              IF THE BASEBOARDS ARE NOT SOLAR SKIP                             DOUBLE 242
  172 IF(<BASEBOARD-SOURCE> .GE. 0)  GOTO 173                                   DOUBLE 243
C              SAVE THE LOAD                                                    DOUBLE 244
      QHBP   = QHBP + QHB                                                       DOUBLE 245
  173 CONTINUE                                                                  DOUBLE 246
C                  SAVE info on PLR for fans and compressors                    -131   217
      IF (ISSPF .EQ. 1  .AND.  InitialFlg .EQ. 0)  CALL REPSSP                  Time   247
      RETURN                                                                    DOUBLE 247
      END                                                                       DOUBLE 248
      FUNCTION DRSVAL(NSC)                                                      -045d    2
C                                                                               DRSVAL   3
C              Calculate the hour's value for the reset-schedule pointed        DRSVAL   4
C              to by NSC                                                        -045d    3
C                                                                               DRSVAL   6
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON  /BUF   / DBUF(52,9999), IZREF(9999),                              -048a    8
     &                 DAYMTR(61,24), ElecPeaks5(13,25,24)                      Time     2
      DIMENSION        IDBUF(52,9999), OBUF(42,24,4), IOBUF(42,24,4)            -048a    9
      EQUIVALENCE      (DBUF(1,1),IDBUF(1,1)),                                  /BUF/    5
     1                 (OBUF(1,1,1),DBUF(1,1)),                                 /BUF/    6
     2                 (OBUF(1,1,1),IOBUF(1,1,1))                               /BUF/    7
      COMMON  /DESHRQ/ NDESDY, IDDTYP(2), DESHRQ(360)                           Time     3
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                 IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                        /FILES/  3
     2               , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                   /FILES/  4
     3                 IHRREP(3), IHRPAS(2)                                     /FILES/  5
      COMMON  /IRUNPD/ NRUNPD, JRUNPD, IRUNPD(6,15)                             /IRUNPD/ 2
      COMMON  /TIME  / IDOY, IYR, IMO, IDAY, IHR,                               Time     4
     &                 ISCMO, ISCDAY, ISCHR, IDOW, ISCDOW, iDSdates(6),         -044e5   1
     &                 iTimeFlg, iDSFlg, iDDFlg, InitialFlg, LeapYr,            Time     6
     &                 CLOCK(10), MONDSC(13), MONLEN(12), MONSDA(12)            HR      12
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
C                                                                               DRSVAL  13
      DATA IRSERR/0/                                                            DRSVAL  14
      IF (JRUNPD .LE. 1  .AND.  InitialFlg .EQ. 7)  IRSERR=0                    Time   249
      ISCH   = <CURRENT-DAY>                                                    -045d    4
      IF(ISCH .eq. 0)  THEN                                                     DRSVAL  17
        DRSVAL = 0.                                                             DRSVAL  18
        SH     = 0.                                                             DRSVAL  19
        SL     = 0.                                                             DRSVAL  20
        RH     = 0.                                                             DRSVAL  21
        RL     = 0.                                                             DRSVAL  22
      ELSE                                                                      DRSVAL  23
       IF((ISCHR .LT. AA(ISCH+5)) .or. (ISCHR .GT. AA(ISCH+6))) THEN            DRSVAL  24
        SH     = AA(ISCH+9)                                                     DRSVAL  25
        SL     = AA(ISCH+10)                                                    DRSVAL  26
        RH     = AA(ISCH+7)                                                     DRSVAL  27
        RL     = AA(ISCH+8)                                                     DRSVAL  28
       ELSE                                                                     DRSVAL  29
        SH     = AA(ISCH+3)                                                     DRSVAL  30
        SL     = AA(ISCH+4)                                                     DRSVAL  31
        RH     = AA(ISCH+1)                                                     DRSVAL  32
        RL     = AA(ISCH+2)                                                     DRSVAL  33
       ENDIF                                                                    DRSVAL  34
       IF(RH .EQ. RL) THEN                                                      DRSVAL  35
        IF(IRSERR .EQ. 0)  THEN                                                 DRSVAL  36
          CALL MSGSIM(-1,II,II,II,II)                                           DRSVAL  37
          WRITE(IOUTPT,9999)                                                    DRSVAL  38
 9999 FORMAT(' **ERROR**** OUTSIDE-HI = OUTSIDE-LO in a RESET-SCHEDULE')        DRSVAL  39
          IRSERR = 1                                                            DRSVAL  40
        ENDIF                                                                   DRSVAL  41
        DRSVAL = SH                                                             DRSVAL  42
       ELSE                                                                     DRSVAL  43
C              CALC VALUE MAKING SURE IT IS LIMITED BY THE VALUES               DRSVAL  44
C              OF MAX-SUPPLY-TEMP AND MIN-SUPPLY-TEMP                           DRSVAL  45
        X      = AMAX1(SL,SH+((SL-SH)/(RH-RL))*(DBT-RL))                        DRSVAL  46
        DRSVAL = AMIN1(SH,X)                                                    DRSVAL  47
       ENDIF                                                                    DRSVAL  48
      ENDIF                                                                     DRSVAL  49
      RETURN                                                                    DRSVAL  55
      END                                                                       DRSVAL  56
      SUBROUTINE DSCPF1(ICALL)                                                  DSCPF1   2
C                                                                               DSCPF1   3
C              CALCULATE PERFORMANCE OF PACKAGED TOTAL GAS SOLID                DSCPF1   4
C              DESICCANT SYSTEM                                                 DSCPF1   5
C                                                                               DSCPF1   6
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
C              IMODE IS THE OPERATING MODE OF THE PTGSD SYSTEM                  /DSCTRL/ 2
      COMMON  /DSCTRL/  IMODE                                                   /DSCTRL/ 3
C              SYSTEM LEVEL VARIABLES FOR DESICCANT SYSTEMS, BOTH TOTAL         /DSYSTD/ 2
C              AND INTEGRATED                                                   /DSYSTD/ 3
      COMMON  /DSYSTD/  SCGAS, QREG, WBR, WB8, T8, W8, WB9, T9, W9, EFF,        /DSYSTD/ 4
     1                  DTON, DMODE(7), ERMAX4, ERMAX5, ERMAX6, OPMODE,         /DSYSTD/ 5
     2                  DBOA,WOA,DGAS,DKW,TCONDd,QCDTOT,QCDS,QCDL,              /DSYSTD/ 6
     3                  POA,DFANKW,RFANKW,DMOTKW,EVKW,QCEVT,QCEVS,              /DSYSTD/ 7
     4                  QCEVL,TCMNEV                                            /DSYSTD/ 8
      REAL DSYSTD(39)                                                           /DSYSTD/ 9
      EQUIVALENCE (DSYSTD(1), SCGAS)                                            /DSYSTD/10
      COMMON  /ENDUSE/ SUPPKW, HEATKW                                           HVAC27   1
      COMMON  /MISCD / TEMPS(4,9999),CONS(5),TEMPSL(9999),                      -048a   10
     1                 BLDGQH,BLDGQC,BLDGQL,BLDGP,BPMULT,                       /MISCD/  3
     $                 DBTMIN,DBTMAX,WMIN,WMAX,NSPZ(9999),                      -048a   11
     3                 DQ, DTP, DTR, DTS, FPI, PLRCC , POM, TC2, TDM,           /MISCD/  5
     4                 TRA,WCOL,WCOLM,WMM,YPI,KWBTU,BTUKW,UNFILD,Unusedm        RemPA   45
      REAL             KWBTU                                                    /MISCD/  7
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      COMMON  /REPORT/ IREPRT(4,37),IPRG,IUNIQV(100),IUNIQS(100),IUNIQL         HVAC14   4
      COMMON  /SYSTD / TH,TC,TM,TR,QH,QC,QHZ,QCZ,QHB,QHP,QHUM,                  /SYSTD/  2
     1                 QDHUM,TCMIN,THMAX,QLSUM,QPSUM,CFM,CFMH,CFMC,             /SYSTD/  3
     2                 RCFM,ECFM,CINF,FON,HON,CON,BON,SCONS(3),PH,PC,           /SYSTD/  4
     3                 SKW,FANKW,unused1,WR,WM,WCOIL,WW,PO,D,                   -046f    1
     4                 FTEMP,TCR,QHR,RfanPumpKW,SGAS,SKWQH,SKWQC,QCLAT,         -131    23
     5                 SFKW,RFKW,FONNGT,WSURF,RWalkinQ,TSURF,TRh,               -131    24
     6                 CBF,CBF1,CBF2,EON,PLRCFM,PLRC,PLRH,QCM1,                 /SYSTD/  8
     7                 QCM2,QHM1,EIRM1,EIRM2,EIR,OFKW,QCT,QCS,                  /SYSTD/  9
     8                 WRMAX,WRMIN,CFMRAT,QdistG,QdistL,RON,QHT,                /SYSTD/ 10
     9                 TPOMIN,POMIN,QHSUP,QRSENS,QRLAT,QRREC,QRREJ,             /SYSTD/ 11
     1                 RCOMKW,RDEFKW,RAUXKW,ECFMP,CFMIN,CINFP,DT,DW,            /SYSTD/ 12
     2                 EWB,IC,NATTSP,Q,RETR,SLOAD,QLSUMP,T,TCHUM,TEND,          /SYSTD/ 13
     3                 TS,hgbmin,HPDefE,EconoOnly,TDuctEnv,                     -044e1   1
     4                 QCUNMT,CapRh,CapRph,CapRc                                HVAC25   3
      REAL             SYSTD(113)                                               HVAC19  13
      EQUIVALENCE      (SYSTD(1),TH)                                            RemPA   65
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
      COMMON  /ZONED / EXCFM,FH,FC,CFMZ,QHBZ,QOVER,THZ,TCZ,ERMAX,ERMIN,         /ZONED/  2
     1                 TRY,FTD,CORINT,G0,G1,G2,G3,SIGMAG,TL,ZQHR,TAVE,          /ZONED/  3
     2                 ZQH,ZQC,FCHPS(15),ACFM,ZKW,TCMINZ,THMAXZ,                /ZONED/  4
     3                 ERMAXM,ERMINM,THR,CSSCND,CSSVEC,HENOW,QGWIN,             /ZONED/  5
     4                 QSNABT,QGOPWL,QGVEC,CFMCVT,SSFPT,CFMVNT,ZFANKW,          /ZONED/  6
     5                 ZKWCBT,ZKWHBT,ZCapRbbrd, XC,ZC,XH,ZH                     -044e2   7
      REAL ZONED(63)                                                            -044e2   8
      EQUIVALENCE (ZONED(1),EXCFM)                                              /ZONED/  9
C                                                                               DSCPF1  17
C              IMODE=1   NORMAL HEATING, MINIMUM OUTSIDE AIR                    DSCPF1  18
C              IMODE=2   FANS CYCLE ON AT NIGHT FOR HEATING,                    DSCPF1  19
C                        NO OUTSIDE AIR                                         DSCPF1  20
C              IMODE=3   DEADBAND, NO HEATING OR COOLING                        DSCPF1  21
C              IMODE=4   VENTILATION, FAN AT HEATING CFM                        DSCPF1  22
C              IMODE=5   VENTILATION, 100% OUTSIDE AIR, FAN UP TO               DSCPF1  23
C                        MAXIMUM CFM                                            DSCPF1  24
C              IMODE=6   EVAPORATIVE COOLING ONLY                               DSCPF1  25
C              IMODE=7   FULL COOLING                                           DSCPF1  26
C                                                                               DSCPF1  27
C              ICALL=1   SUBROUTINE CALLED FROM DKTEMP                          DSCPF1  28
C              ICALL=2   CALLED FROM                                            DSCPF1  29
C              ICALL=3   CALLED FROM SDSF                                       DSCPF1  30
C                                                                               DSCPF1  31
C                                                                               DSCPF1  32
      DIMENSION DESCKW(5), DESCPL(5)                                            DSCPF1  33
C              TABLE GIVING AUXILIARY KW PER CFM AS A FUNCTION OF               DSCPF1  34
C              PART LOAD RATIO                                                  DSCPF1  35
      DATA DESCKW / .0000611, .000244, .000550, .000978, .00153 /               DSCPF1  36
      DATA DESCPL / .25,   .50,  .75,  1.0,  1.25 /                             DSCPF1  37
      H(DB,W) = 0.24*DB + (1061.0+0.444*DB)*W                                   H        2
      V(DB,W,P) = 0.754*(DB+459.7)*(1.0+1.605*W)/P                              V        2
      BRACKT(AMN,A,AMX) = AMAX1(AMN,AMIN1(AMX,A))                               DSCPF1  40
      DTON = 1.0                                                                DSCPF1  41
C              INITIALIZE VARIABLES DEPENDING ON WHETHER DSCPF1 IS CALLED       DSCPF1  42
C              FROM DKTEMP, DESICC, OR SDSF                                     DSCPF1  43
      GO TO (10,20,30) ICALL                                                    DSCPF1  44
   10 ZP1 = ISZ                                                                 DSCPF1  45
      ZP2 = <ZP2>                                                               DSCPF1  46
      WR = <PASTWR>                                                             DSCPF1  47
      TCZ = <TPAST>                                                             DSCPF1  48
      ERCZ = <QPAST>                                                            DSCPF1  49
      IF (<sy.FanOnPast> .gt. 0.)  GO TO 80                                     -044c2  43
      WF = Min(.25, -<sy.FanOnPast>*0.2)                                        -044c2  44
      WR = <PASTWR> + WF*(HUMRAT-<PASTWR>)                                      DSCPF1  52
      GO TO 80                                                                  DSCPF1  53
   20 TCZ = TAVE                                                                DSCPF1  54
      ERCZ = <QNOW>                                                             DSCPF1  55
      GO TO 80                                                                  DSCPF1  56
   30 ZP1 = ISZ                                                                 DSCPF1  57
      ZP2 = <ZP2>                                                               DSCPF1  58
      TCZ = TAVE                                                                DSCPF1  59
      ERCZ = <QNOW>                                                             DSCPF1  60
      CFMTOT = CFM                                                              DSCPF1  61
      IF ((IMODE .EQ. 5) .OR. (IMODE .EQ. 6))  GO TO 1000                       DSCPF1  62
C              ESTIMATE RETURN HUMIDITY RATIO                                   DSCPF1  63
      WR = (CFM*W9 + CINF*HUMRAT + QLSUM/CONS(2))/(CFM + CINF)                  DSCPF1  64
C              SET MINIMUM CFM                                                  DSCPF1  65
   80 ZCFMMN = <MINCFMR>*<CFMAX>                                                DSCPF1  66
C              SET DEADBAND VARIABLES                                           DSCPF1  67
      CFMIN = <SUPPLY-CFM>*<MINCFMR>                                            DSCPF1  68
      CALL FANPWR(0,CFMIN,0.,CFMIN,DTS,DTSh,DTR)                                DSCPF1  69
      DTFDB = DTS*<SUPPLY-DELTA-T>*CONS(3)                                      DSCPF1  70
      TDBND = DBT*POMIN + (1.-POMIN)*TR + DTFDB                                 DSCPF1  71
      HRDBND = HUMRAT*POMIN + (1.-POMIN)*WR                                     DSCPF1  72
      ERDBND = CONS(1)*ZCFMMN*(TCZ-TDBND)                                       DSCPF1  73
      GO TO (100, 100, 300, 400, 500, 600, 700) IMODE                           DSCPF1  74
C              MODE 1 AND 2 CALCULATIONS                                        DSCPF1  75
  100 CFMTOT = <SUPPLY-CFM>*<MINCFMR>                                           DSCPF1  76
      PLRCFM = <MINCFMR>                                                        DSCPF1  77
      DTF = DTFDB                                                               DSCPF1  78
C              OUTSIDE AIR RATIO                                                DSCPF1  79
      PO = POMIN                                                                DSCPF1  80
      IF (FONNGT .EQ. -1.0)  PO = 0.                                            DSCPF1  81
C              MIXED AIR TEMPERATURE                                            DSCPF1  82
      TM = PO*DBT + (1.-PO)*TR + DTF                                            DSCPF1  83
      ZQHR = <CFMAXH>*CONS(1)*(TM-TCZ)                                          DSCPF1  84
C              TOTAL HEATING REQUIREMENT                                        DSCPF1  85
      ZQH = AMIN1(0.,ERCZ+ZQHR)                                                 DSCPF1  86
      IF (HON .EQ. 0.)  ZQH = 0.                                                DSCPF1  87
      IF (ZQH .EQ. 0.)  GO TO 120                                               DSCPF1  88
C              USE BASEBOARDS IF POSSIBLE                                       DSCPF1  89
      IF ((<BASEBOARD-RATING> .GE. 0.) .OR. (<BASEBOARD-CTRL> .NE. 1))          DSCPF1  90
     1 GO TO 120                                                                DSCPF1  91
      Q = AMAX1(<BASEBOARD-RATING>*ZCapRbbrd-QHBZ,ZQH)                          -044e  196
      ZQH = ZQH - Q                                                             DSCPF1  93
  120 T9 = TM - ZQH/(CONS(1)*<CFMAXH>)                                          DSCPF1  94
C              REST OF HEATING DONE BY HYDRONIC HEATER                          DSCPF1  95
      QH = ((T9-TM)/<REHEAT-DELTA-T>)*<HEATING-CAPACITY>                        DSCPF1  96
      QH = AMIN1(0.,QH)                                                         DSCPF1  97
      QC = 0.                                                                   DSCPF1  98
      QREG = 0.                                                                 DSCPF1  99
      W9 = PO*HUMRAT + (1.-PO)*WR                                               DSCPF1 100
      WB9 = WBFS(T9,W9,PATM)                                                    DSCPF1 101
C              GAS USED FOR HEATING                                             DSCPF1 102
      IF (ICALL .EQ. 3) THEN                                                    DSCPF1 103
        IF (<HW-LOOP> .GT. 0)  THEN                                             HVAC13  42
c              heating goes to a circulation loop                               HVAC13  43
          <HT_COIL_Q> = QH                                                      HVAC13  44
        ELSE                                                                    HVAC13  45
c              heating provided by gas                                          HVAC13  46
          SGAS      = SGAS - QH/.85                                             HVAC13  47
          JFM       = <HEAT-F-MS>                                               HVAC13  48
          <HEAT-FM> = <HEAT-FM> - QH/.85                                        HVAC13  49
        ENDIF                                                                   HVAC13  50
      ENDIF                                                                     DSCPF1 106
      GO TO 1000                                                                DSCPF1 107
C              MODE 3 (DEADBAND) CALCULATIONS                                   DSCPF1 108
  300 IMODE = 3                                                                 DSCPF1 109
      PO = POMIN                                                                DSCPF1 110
      CFMTOT = <SUPPLY-CFM>*<MINCFMR>                                           DSCPF1 111
      PLRCFM = <MINCFMR>                                                        DSCPF1 112
      DTF = DTFDB                                                               DSCPF1 113
      T9 = TDBND                                                                DSCPF1 114
      W9 = HRDBND                                                               DSCPF1 115
      QH = 0.                                                                   DSCPF1 116
      QC = 0.                                                                   DSCPF1 117
      QREG = 0.                                                                 DSCPF1 118
      GO TO 1000                                                                DSCPF1 119
C              MODE 4 CALCULATIONS                                              DSCPF1 120
  400 IMODE = 4                                                                 DSCPF1 121
      CFMTOT = <SUPPLY-CFM>*<MINCFMR>                                           DSCPF1 122
      PLRCFM = <MINCFMR>                                                        DSCPF1 123
      DTF = DTFDB                                                               DSCPF1 124
C              OUTSIDE AIR SET DEPENDING ON ZONE COOLING REQUIREMENT            DSCPF1 125
      PO = (ERCZ/(CONS(1)*<CFMAXH>) + TR + DTF - TCZ)/                          DSCPF1 126
     1     AMAX1(TR-DBT,1.0E-6)                                                 DSCPF1 127
      PO = BRACKT(POMIN,PO,1.0)                                                 DSCPF1 128
      IF (PO .EQ. POMIN)  GO TO 300                                             DSCPF1 129
      T9 = DBT*PO + (1.-PO)*TR + DTF                                            DSCPF1 130
      W9 = HUMRAT*PO + WR*(1.-PO)                                               DSCPF1 131
      QH = 0.                                                                   DSCPF1 132
      QC = 0.                                                                   DSCPF1 133
      QREG = 0.                                                                 DSCPF1 134
      GO TO 1000                                                                DSCPF1 135
C              MODE 5 CALCULATIONS                                              DSCPF1 136
  500 PLRCFM = 1.                                                               DSCPF1 137
      ITER = 0                                                                  DSCPF1 138
      CFMTOT = <SUPPLY-CFM>                                                     DSCPF1 139
  510 CALL FANPWR(0,CFMTOT,0.,CFMTOT,DTS,DTSh,DTR)                              DSCPF1 140
      DTF = <SUPPLY-DELTA-T>*CONS(3)*DTS                                        DSCPF1 141
C              100% OUTSIDE AIR.  CFM ADJUSTED TO MEET COOLING LOAD.            DSCPF1 142
      ZCFM = ERCZ/(CONS(1)*AMAX1(TCZ-DBT-DTF,1.0E-6))                           DSCPF1 143
      ZCFM = BRACKT(ZCFMMN,ZCFM,<CFMAX>)                                        DSCPF1 144
      PLRCFM = ZCFM/<CFMAX>                                                     DSCPF1 145
      CFMTOT = <SUPPLY-CFM>*PLRCFM                                              DSCPF1 146
      ITER = ITER + 1                                                           DSCPF1 147
C              ITERATE SINCE FAN HEAT DEPENDS ON CFM.  THIS COULD               DSCPF1 148
C              PROBABLY BE SKIPPED                                              DSCPF1 149
      IF (ITER .EQ. 1)  GO TO 510                                               DSCPF1 150
      IF (ZCFM .EQ. ZCFMMN)  GO TO 400                                          DSCPF1 151
      PO = 1.                                                                   DSCPF1 152
      QH = 0.                                                                   DSCPF1 153
      QC = 0.                                                                   DSCPF1 154
      QREG = 0.                                                                 DSCPF1 155
      T9 = DBT + DTF*PLRCFM                                                     DSCPF1 156
      W9 = HUMRAT                                                               DSCPF1 157
      GO TO 1000                                                                DSCPF1 158
C              MODE 6 CALCULATIONS                                              DSCPF1 159
  600 PLRCFM = 1.                                                               DSCPF1 160
      ITER = 0                                                                  DSCPF1 161
      CFMTOT = <SUPPLY-CFM>                                                     DSCPF1 162
  610 CALL FANPWR(0,CFMTOT,0.,CFMTOT,DTS,DTSh,DTR)                              DSCPF1 163
      DTF = <SUPPLY-DELTA-T>*CONS(3)*DTS                                        DSCPF1 164
      ITER = ITER + 1                                                           DSCPF1 165
      II = 1                                                                    DSCPF1 166
C              GET INDIRECT EVAP PERFORMANCE                                    DSCPF1 167
      CALL EVINDR(CFMTOT,DTF,T8,WB8,W8)                                         DSCPF1 168
C              CALL THE EVAPORATIVE COOLER PERFORMANCE SUBROUTINE TO            DSCPF1 169
C              ESTIMATE SUPPLY CONDITIONS (T9, WB9)                             DSCPF1 170
      CALL EVAPDR(<SUPPLY-CFM>,<DIRECT-EFF>,CFMTOT,T8,WB8,                      DSCPF1 171
     1            EFF,T9,WB9)                                                   DSCPF1 172
C              CALCULATE CFM TO ZONE                                            DSCPF1 173
      ZCFM = ERCZ/(CONS(1)*AMAX1(TCZ-T9,1.0E-6))                                DSCPF1 174
      ZCFM = BRACKT(ZCFMMN,ZCFM,<CFMAX>*1.25)                                   DSCPF1 175
C              PART LOAD RATIO OF FAN                                           DSCPF1 176
      PLRCFM = ZCFM/<CFMAX>                                                     DSCPF1 177
C              TOTAL CFM                                                        DSCPF1 178
      CFMTOT = PLRCFM*<SUPPLY-CFM>                                              DSCPF1 179
C              ITERATE SINCE T9 AND WB9 DEPEND ON CFM                           DSCPF1 180
      IF (ITER .EQ. 1) GO TO 610                                                DSCPF1 181
      PO = 1.                                                                   DSCPF1 182
      QH = 0.                                                                   DSCPF1 183
      QC = 0.                                                                   DSCPF1 184
      QREG = 0.                                                                 DSCPF1 185
      W9 = WFDBWB(T9,WB9,PATM)                                                  DSCPF1 186
      IF (ZCFM .GT. ZCFMMN)  GO TO 650                                          DSCPF1 187
      ERMN = CONS(1)*ZCFMMN*(TCZ-T9)                                            DSCPF1 188
C              ESTIMATE FRACTION OF HOUR SYSTEM WOULD BE ON TO MEET             DSCPF1 189
C              THE COOLING REQUIREMENT.  ASSUME REST OF HOUR SYSTEM IS          DSCPF1 190
C              IN MODE 3.                                                       DSCPF1 191
      DTON = (ERCZ-ERDBND)/AMAX1(ERMN-ERDBND,1.0E-6)                            DSCPF1 192
      DTON = BRACKT(0.,DTON,1.)                                                 DSCPF1 193
      T9 = DTON*T9 + (1.-DTON)*TDBND                                            DSCPF1 194
      W9 = DTON*W9 + (1.-DTON)*HRDBND                                           DSCPF1 195
      WB9 = WBFS(T9,W9,PATM)                                                    DSCPF1 196
  650 WW = (HUMRAT-W9)*CFMTOT*DENSTY                                            DSCPF1 197
      II = 1                                                                    DSCPF1 198
C              GET EVAPORATIVE COOLER PERFORMANCE AT FULL LOAD FOR              DSCPF1 199
C              CAPACITY CALCULATIONS                                            DSCPF1 200
      CALL EVINDR(<SUPPLY-CFM>,<SUPPLY-DELTA-T>*CONS(3),T8F,WB8F,W8F)           DSCPF1 201
      CALL EVAPDR(<SUPPLY-CFM>,<DIRECT-EFF>,<SUPPLY-CFM>,T8F,                   DSCPF1 202
     1            WB8F, EFF, T9F, WB9F)                                         DSCPF1 203
      GO TO 1000                                                                DSCPF1 204
C              MODE 7 (DESICCANT COOLING) CALCULATIONS                          DSCPF1 205
  700 CFMTOT = <SUPPLY-CFM>                                                     DSCPF1 206
C              WET BULB TEMP AT POINT 1 CAN BE A MIXTURE OF RETURN              DSCPF1 207
C              AND OUTSIDE AIR IF THERE ARE EXHAUST FANS IN THE ZONES           DSCPF1 208
C              GET FULL LOAD PERFORMANCE USING THE FULL LOAD CURVES             DSCPF1 209
      T1F = (AMAX1(CFMTOT-ECFM,0.)*TR+AMIN1(ECFM,CFMTOT)*DBT)                   DSCPF1 210
     1     /AMAX1(CFMTOT,1.E-6)                                                 DSCPF1 211
      W1F = (AMAX1(CFMTOT-ECFM,0.)*WR+AMIN1(ECFM,CFMTOT)*HUMRAT)                DSCPF1 212
     1     /AMAX1(CFMTOT,1.E-6)                                                 DSCPF1 213
      WB1F = WBFS(T1F,W1F,PATM)                                                 DSCPF1 214
      T8F = CVAL(<T8-FWB1WB6>,WB1F,WBT)                                         DSCPF1 215
      HR8F = .0001*EXP(CVAL(<HR8-FWB1WB6>,WB1F,WBT))                            DSCPF1 216
      WB8F = WBFS(T8F,HR8F,PATM)                                                DSCPF1 217
      QREGF = CVAL(<QREG-FWB1WB6>,WB1F,WBT)                                     DSCPF1 218
C              GET 25% PART LOAD PERFORMANCE FROM PART LOAD CURVES              DSCPF1 219
      CFMTOT = 0.25*<SUPPLY-CFM>                                                DSCPF1 220
      T1PL = (AMAX1(CFMTOT-ECFM,0.)*TR+AMIN1(ECFM,CFMTOT)*DBT)                  DSCPF1 221
     1     /AMAX1(CFMTOT,1.E-6)                                                 DSCPF1 222
      W1PL = (AMAX1(CFMTOT-ECFM,0.)*WR+AMIN1(ECFM,CFMTOT)*HUMRAT)               DSCPF1 223
     1     /AMAX1(CFMTOT,1.E-6)                                                 DSCPF1 224
      WB1PL = WBFS(T1PL,W1PL,PATM)                                              DSCPF1 225
      T8PL = CVAL(<T8PL-FWB1WB6>,WB1PL,WBT)                                     DSCPF1 226
      HR8PL = .0001*EXP(CVAL(<HR8PL-FWB1WB6>,WB1PL,WBT))                        DSCPF1 227
      QREGPL = CVAL(<QREGPL-FWB1WB6>,WB1PL,WBT)                                 DSCPF1 228
C              INITIALIZE CFM AND PART LOAD, CONDITIONS INTO EVAP COOLER        DSCPF1 229
      CFMTOT = CFM                                                              DSCPF1 230
      PLRCFM = CFMTOT/<SUPPLY-CFM>                                              DSCPF1 231
      T8 = T8F                                                                  DSCPF1 232
      WB8 = WB8F                                                                DSCPF1 233
      ITER = 0                                                                  DSCPF1 234
      IF (ICALL .NE. 2)  GO TO 720                                              DSCPF1 235
C              IF DSCPF1 CALLED FROM DESICC, CALL EVAP COOLER ROUTINE           DSCPF1 236
C              AND CALCULATE CFM NEEDED TO MEET LOAD.                           DSCPF1 237
  710 II = 1                                                                    DSCPF1 238
      CALL EVAPDR(<SUPPLY-CFM>,<DIRECT-EFF>,CFMTOT,T8,WB8,                      DSCPF1 239
     1            EFF,T9,WB9)                                                   DSCPF1 240
      ZCFM = ERCZ/(CONS(1)*AMAX1(TCZ-T9,1.0E-6))                                DSCPF1 241
      ZCFM = BRACKT(ZCFMMN,ZCFM,<CFMAX>*1.25)                                   DSCPF1 242
      PLRCFM = ZCFM/<CFMAX>                                                     DSCPF1 243
      CFMTOT = <SUPPLY-CFM>*PLRCFM                                              DSCPF1 244
      ITER = ITER + 1                                                           DSCPF1 245
C              USING CALCULTED CFM, INTERPOLATE BETWEEN 100% AND                DSCPF1 246
C              25% PARTLOAD TO GET ACTUAL PERFORMANCE                           DSCPF1 247
  720 T8 = FINTRP(PLRCFM,0.25,1.0,T8PL,T8F)                                     DSCPF1 248
      W8 = FINTRP(PLRCFM,0.25,1.0,HR8PL,HR8F)                                   DSCPF1 249
      WB8 = WBFS(T8,W8,PATM)                                                    DSCPF1 250
C              ITERATE SINCE PERFORMANCE OF UNIT DEPENDS ON CFM                 DSCPF1 251
      IF ((ITER .EQ. 1) .AND. (ICALL .EQ. 2))  GO TO 710                        DSCPF1 252
      QREG = FINTRP(PLRCFM,0.25,1.0,QREGPL,QREGF)                               DSCPF1 253
      QREG = QREG*<SUPPLY-CFM>                                                  DSCPF1 254
      QH = 0.                                                                   DSCPF1 255
      PO = 1.                                                                   DSCPF1 256
      II = 1                                                                    DSCPF1 257
C              FINAL CALCULATION OF UNIT EXIT CONDITIONS                        DSCPF1 258
      CALL EVAPDR(<SUPPLY-CFM>,<DIRECT-EFF>,CFMTOT,T8,WB8,                      DSCPF1 259
     1            EFF,T9,WB9)                                                   DSCPF1 260
      W9 = WFDBWB(T9,WB9,PATM)                                                  DSCPF1 261
      IF (ICALL .EQ. 1) GO TO 750                                               DSCPF1 262
      ERMN = CONS(1)*ZCFMMN*(TCZ-T9)                                            DSCPF1 263
      IF (ERCZ .GT. ERMN) GO TO 750                                             DSCPF1 264
C              ESTIMATE FRACTION OF HOUR UNIT IS ON TO MEET COOLING             DSCPF1 265
C              REQUIREMENT.  WHEN OFF USE MODE 3.                               DSCPF1 266
      DTON = (ERCZ-ERDBND)/AMAX1(ERMN-ERDBND,1.0E-6)                            DSCPF1 267
      DTON = BRACKT(0.,DTON,1.0)                                                DSCPF1 268
      T9 = DTON*T9 + (1.-DTON)*TDBND                                            DSCPF1 269
      W9 = DTON*W9 + (1.-DTON)*HRDBND                                           DSCPF1 270
      WB9 = WBFS(T9,W9,PATM)                                                    DSCPF1 271
      QREG = QREG*DTON                                                          DSCPF1 272
C             ACCOUNT FOR GAS USED FOR COOLING                                  DSCPF1 273
  750 IF (ICALL .EQ. 3)  THEN                                                   DSCPF1 274
        IF (<DESC-LOOP> .GT. 0)  THEN                                           HVAC14  40
c              heat for cooling goes to a circulation loop                      HVAC13  52
          <DESC_COIL_Q> = -QREG                                                 HVAC14  41
        ELSE                                                                    HVAC13  54
c              cooling heat provided by gas                                     HVAC13  55
          SCGAS     = SCGAS + QREG/.85                                          HVAC13  56
          JFM       = <COOL-F-MS>                                               HVAC13  57
          <COOL-FM> = <COOL-FM> + QREG/.85                                      HVAC13  58
        ENDIF                                                                   HVAC13  59
      ENDIF                                                                     DSCPF1 277
C              TOTAL ENTHALPY CHANGE                                            DSCPF1 278
      DQ = H(DBT,HUMRAT) - H(T9,W9)                                             DSCPF1 279
C              COOLING ENERGY                                                   DSCPF1 280
      QC = 60.*CFMTOT*DQ*DENSTY                                                 DSCPF1 281
C              HUMIDITY CHANGE                                                  DSCPF1 282
      WW = (HUMRAT-W9)*CFMTOT*DENSTY                                            DSCPF1 283
C              PERFORMANCE AT FULL LOAD FOR CAPACITY CALCULATION                DSCPF1 284
      II = 1                                                                    DSCPF1 285
      CALL EVAPDR(<SUPPLY-CFM>,<DIRECT-EFF>,<SUPPLY-CFM>,T8F,WB8F,              DSCPF1 286
     1            EFF,T9F,WB9F)                                                 DSCPF1 287
      IF (ICALL .NE. 3)  GO TO 1000                                             DSCPF1 288
 1000 CONTINUE                                                                  DSCPF1 289
CDEBUG                                                                          DSCPF1 290
c     IF (IREPRT(2,35) .NE. 0) PRINT 901, IMODE, ICALL, CFMTOT, T9, WB9,        IREPRT  44
c    1 W9, CINF, HUMRAT, QLSUM, CONS(2), QC, QH, PO, PLRCFM, QREG,              DSCPF1 292
c    2 DBT, WBT, TR, WR                                                         DSCPF1 293
c 901 FORMAT(1X 'IMODE = 'I1'  ICALL = 'I1'  CFMTOT = 'F9.1 /                   DSCPF1 294
c    1 1X 'T9 = 'F7.3'  WB9 = 'F7.3'  W9 = 'F6.4 /                              DSCPF1 295
c    2 1X 'CINF = 'F9.1'  HUMRAT = 'F6.4'  QLSUM = 'F10.0 /                     DSCPF1 296
c    3 1X 'CONS(2) = 'F7.1'  QC = 'F10.0'  QH = 'F10.0 /                        DSCPF1 297
c    4 1X 'PO = 'F6.3'  PLRCFM = 'F6.3'  QREG = 'F10.0 /                        DSCPF1 298
c    5 1X 'DBT = 'F7.3'  WBT = 'F7.3'  TR = 'F7.3 /                             DSCPF1 299
c    6 1X 'WR = 'F6.4 )                                                         DSCPF1 300
      IF (ICALL .EQ. 1)  RETURN                                                 DSCPF1 301
C              GET WR (FROM HUMIDITY BALANCE)                                   DSCPF1 302
      HRRET = (CFMTOT*W9 + CINF*HUMRAT + QLSUM/CONS(2))/(CFMTOT+CINF)           DSCPF1 303
      WRMAX = WFUNC(TR,<MAX-HUMIDITY>,PATM)                                     DSCPF1 304
      IF ((ICALL .EQ. 3) .OR. (IMODE .NE. 6))  GO TO 1100                       DSCPF1 305
C              IF RETURN HUMIDITY GREATER THAN SET POINT, USE MODE 7            DSCPF1 306
C              INSTEAD OF MODE 6                                                DSCPF1 307
      IF (HRRET .GT. WRMAX)  IMODE = 7                                          DSCPF1 308
      IF (HRRET .GT. WRMAX)  GO TO 700                                          DSCPF1 309
 1100 WR = HRRET                                                                DSCPF1 310
      WBR = WBFS(TR,WR,PATM)                                                    DSCPF1 311
      CFM = CFMTOT                                                              DSCPF1 312
      IF (ICALL .LT. 3) RETURN                                                  DSCPF1 313
C              ACCOUNT FOR ELECTRICITY USE                                      DSCPF1 314
      SFKW =0.5*<SUPPLY-CFM>*TABLE1(5,DESCPL,DESCKW,PLRCFM)                     DSCPF1 315
      RFKW = SFKW                                                               DSCPF1 316
      FANKW = FANKW + RFKW + SFKW                                               DSCPF1 317
      <SKW> = <SKW> + RFKW + SFKW                                               DSCPF1 318
      JEM       = <VENT-E-MS>                                                   HVAC6  148
      <VENT-EM> = <VENT-EM> + RFKW + SFKW                                       HVAC6  149
      QCT = 0.                                                                  DSCPF1 320
      QCS = 0.                                                                  DSCPF1 321
C              CALCULATE TOTAL AND SENSIBLE COOLING CAPACITIES                  DSCPF1 322
      IF (IMODE .GE. 6)  QCT = 60.*<SUPPLY-CFM>*(H(TR,WR)-H(T8F,HR8F))/         DSCPF1 323
     1                   V(T8F,HR8F,PATM)                                       DSCPF1 324
      IF (IMODE .GE. 6)  QCS = CONS(1)*<SUPPLY-CFM>*(TR-T9F)                    DSCPF1 325
      QCLAT = AMAX1(0.,WW*1061.)                                                DSCPF1 326
      TC = T9                                                                   DSCPF1 327
      WCOIL = W9                                                                DSCPF1 328
C              SAVE RETURN HUMIDITY RATIO, CFM, AND MIXED AIR TEMP              DSCPF1 329
C              FOR INITIALIZING NEXT HOUR'S CALCULATION                         DSCPF1 330
      <PASTWR> = WR                                                             DSCPF1 331
      RETURN                                                                    DSCPF1 334
      END                                                                       DSCPF1 335
      SUBROUTINE DSCPF2(DCFMD,CFM,PO,DBIN,WIN,DBOUT,WOUT,GASUSE,AUXKW)          DSCPF2   2
C                                                                               DSCPF2   3
C     GET PERFORMANCE OF TECOGEN LIQUID INTEGRATED DESICCANT UNIT               DSCPF2   4
C                                                                               DSCPF2   5
C              THE PERFORMANCE IS DEFINED BY A PERFORMANCE MAP.  THE            DSCPF2   6
C              INDEPENDENT VARIABLES OF THE MAP ARE DBINP, WINP,                DSCPF2   7
C              AND CFMINP (THE ENTERING DRYBULB, HUMIDITY RATIO, AND            DSCPF2   8
C              CFM).  THE DEPENDENT VARIABLES ARE DBODAT, WODAT,                DSCPF2   9
C              GASDAT, AND KWDAT (THE OUTLET DRYBULB AND HUMIDITY               DSCPF2  10
C              RATIO, THE GAS AND ELECTRICITY USED).                            DSCPF2  11
C                                                                               DSCPF2  12
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      REAL      DBINP(5), WINP(7,5), CFMINP(3)                                  DSCPF2  15
      INTEGER   NBW(5)                                                          DSCPF2  16
      REAL      DBODAT(105), WODAT(105), GASDAT(105), KWDAT(105)                DSCPF2  17
      DIMENSION DUM1(63), DUM2(42), DUM3(63), DUM4(42), DUM5(63),               DSCPF2  18
     1          DUM6(42), DUM7(63), DUM8(42)                                    DSCPF2  19
      EQUIVALENCE (DUM1(1),WODAT(1)), (DUM2(1),WODAT(64))                       DSCPF2  20
      EQUIVALENCE (DUM3(1),DBODAT(1)), (DUM4(1),DBODAT(64))                     DSCPF2  21
      EQUIVALENCE (DUM5(1),GASDAT(1)), (DUM6(1),GASDAT(64))                     DSCPF2  22
      EQUIVALENCE (DUM7(1),KWDAT(1)), (DUM8(1),KWDAT(64))                       DSCPF2  23
C                                                                               DSCPF2  24
      DATA DBINP / 65., 75., 85., 95., 105. /                                   DSCPF2  25
      DATA WINP / .009, .011, .013, .014, .015, .017, .019,                     DSCPF2  26
     1            .009, .011, .013, .014, .015, .017, .019,                     DSCPF2  27
     2            .009, .011, .013, .014, .015, .017, .019,                     DSCPF2  28
     3            .009, .011, .013, .014, .015, .017, .019,                     DSCPF2  29
     4            .009, .011, .013, .014, .015, .017, .019 /                    DSCPF2  30
      DATA CFMINP / 2500., 3500., 4500. /                                       DSCPF2  31
      DATA NBW / 2, 6, 7, 7, 7 /                                                DSCPF2  32
C                                                                               DSCPF2  33
      DATA DUM1 / .0032, .0038, -999., -999.,  -999., -999., -999.,             DSCPF2  34
     1            .0037, .0044, .0050, .00535, .0057, .0065, -999.,             DSCPF2  35
     2            .0042, .0049, .0056, .00595, .0063, .0071, .0078,             DSCPF2  36
     3            .0048, .0055, .0062, .0066,  .0070, .0078, .0086,             DSCPF2  37
     4            .0054, .0061, .0069, .0073,  .0077, .0086, .0094,             DSCPF2  38
     5            .0034, .0040, -999., -999.,  -999., -999., -999.,             DSCPF2  39
     6            .0038, .0046, .0053, .00565, .0060, .0069, -999.,             DSCPF2  40
     7            .0044, .0052, .0059, .0063,  .0067, .0076, .0083,             DSCPF2  41
     8            .0051, .0058, .0066, .0070,  .0075, .0083, .0091 /            DSCPF2  42
      DATA DUM2 /                                                               DSCPF2  43
     1            .0058, .0065, .0074, .00785, .0083, .0092, .0100,             DSCPF2  44
     2            .0035, .0042, -999., -999.,  -999., -999., -999.,             DSCPF2  45
     3            .0041, .0048, .0056, .00595, .0063, .0071, -999.,             DSCPF2  46
     4            .0042, .0054, .0062, .0066,  .0070, .0079, .0087,             DSCPF2  47
     5            .0053, .0061, .0069, .0073,  .0078, .0087, .0097,             DSCPF2  48
     6            .0061, .0069, .0078, .00825, .0087, .0096, .0105 /            DSCPF2  49
      DATA DUM3 /  67.5,  71.5,  -999., -999.,  -999., -999., -999.,            DSCPF2  50
     1             71.6,  75.6,  79.2,  80.5,   82.6,  85.9, -999.,             DSCPF2  51
     2             75.8,  79.5,  82.8,  84.45,  86.1,  89.2,  92.1,             DSCPF2  52
     3             79.5,  83.0,  86.3,  87.8,   89.5,  92.4,  95.1,             DSCPF2  53
     4             83.2,  86.5,  89.7,  91.15,  92.6,  95.5,  98.2,             DSCPF2  54
     5             68.9,  72.9,  -999., -999.,  -999., -999., -999.,            DSCPF2  55
     6             73.2,  77.1,  80.8,  82.6,   84.4,  87.8,  -999.,            DSCPF2  56
     7             77.3,  81.1,  84.5,  86.2,   87.9,  91.1,  94.0,             DSCPF2  57
     8             81.2,  84.7,  88.1,  89.7,   91.4,  94.5,  97.3 /            DSCPF2  58
      DATA DUM4 /  84.8,  88.2,  91.4,  92.95,  94.5,  97.5, 100.2,             DSCPF2  59
     1             70.0,  74.2,  -999., -999.,  -999., -999., -999.,            DSCPF2  60
     2             74.3,  78.4,  82.3,  84.05,  85.8,  89.2,  -999.,            DSCPF2  61
     3             78.8,  82.5,  86.0,  87.75,  89.5,  92.8,  95.9,             DSCPF2  62
     4             82.6,  86.3,  89.6,  91.2,   92.9,  96.0,  99.0,             DSCPF2  63
     5             86.2,  89.8,  93.1,  94.65,  96.2,  99.1, 101.9 /            DSCPF2  64
      DATA DUM5 / 134085.,167516.,-999.,-999.,-999.,-999.,-999.,                DSCPF2  65
     1  120657.,151636.,179877.,194564.,209250.,239449.,  -999.,                DSCPF2  66
     2  106146.,134611.,163440.,177192.,190944.,217905.,244531.,                DSCPF2  67
     3   91162.,119182.,145769.,158331.,172505.,197867.,221691.,                DSCPF2  68
     4   75787.,100866.,127857.,140378.,152900.,176909.,200316.,                DSCPF2  69
     5  183479.,226263.,  -999.,  -999.,  -999.,  -999.,  -999.,                DSCPF2  70
     6  160643.,201025.,241548.,261284.,281019.,320453.,  -999.,                DSCPF2  71
     7  138421.,179514.,216468.,235984.,255500.,290306.,324771.,                DSCPF2  72
     8  118339.,154392.,190239.,209000.,226432.,259663.,291205. /               DSCPF2  73
      DATA DUM6 /                                                               DSCPF2  74
     1   94187.,130802.,165344.,181400.,197456.,229590.,260023.,                DSCPF2  75
     2  226863.,281803.,  -999.,  -999.,  -999.,  -999.,  -999.,                DSCPF2  76
     3  200525.,248984.,301443.,325404.,349365.,396711.,  -999.,                DSCPF2  77
     4  171871.,218681.,265651.,288874.,312097.,355794.,399290.,                DSCPF2  78
     5  141547.,185525.,230252.,253239.,275746.,316952.,356956.,                DSCPF2  79
     6  110041.,150947.,196188.,216764.,237341.,277756.,312275. /               DSCPF2  80
      DATA DUM7 /  2.03,  2.10, -999., -999., -999., -999., -999.,              DSCPF2  81
     1             2.01,  2.07,  2.12, 2.145,  2.17,  2.23,  -999.,             DSCPF2  82
     2             1.98,  2.04,  2.09, 2.115,  2.14,  2.19,  2.24,              DSCPF2  83
     3             1.96,  2.01,  2.06,  2.08,  2.10,  2.15,  2.19,              DSCPF2  84
     4             1.93,  1.97,  2.02, 2.045,  2.07,  2.11,  2.15,              DSCPF2  85
     5             2.68,  2.76, -999., -999., -999., -999., -999.,              DSCPF2  86
     6             2.64,  2.72,  2.79, 2.825,  2.86,  2.93, -999.,              DSCPF2  87
     7             2.60,  2.68,  2.74, 2.775,  2.81,  2.88,  2.94,              DSCPF2  88
     8             2.56,  2.63,  2.70,  2.73,  2.76,  2.82,  2.88 /             DSCPF2  89
      DATA DUM8 /                                                               DSCPF2  90
     1             2.52,  2.59,  2.65,  2.68,  2.71,  2.77,  2.82,              DSCPF2  91
     2             3.47,  3.57, -999., -999., -999., -999., -999.,              DSCPF2  92
     3             3.42,  3.51,  3.60, 3.645,  3.69,  3.78, -999.,              DSCPF2  93
     4             3.37,  3.45,  3.54,  3.58,  3.62,  3.70,  3.78,              DSCPF2  94
     5             3.31,  3.39,  3.48,  3.52,  3.56,  3.63,  3.71,              DSCPF2  95
     6             3.26,  3.33,  3.41,  3.45,  3.49,  3.56,  3.62 /             DSCPF2  96
C                                                                               DSCPF2  97
C     CFMR = <DESC-NOM-CFM>*PO*CFM/DCFMD                                        DSCPF2  98
C              GET OUTLET CONDITIONS, REGEN GAS USE, AND AUXILLIARY             DSCPF2  99
C              KW FROM CURVES                                                   DSCPF2 100
      WIN4 = WIN*10000.                                                         DSCPF2 101
      WOUT = .0001*CVAL(<DESC-W-FTW>,DBIN,WIN4)                                 DSCPF2 102
      DBOUT = CVAL(<DESC-T-FTW>,DBIN,WIN4)                                      DSCPF2 103
      GASUSE = CVAL(<DESC-GAS-FTW>,DBIN,WIN4)                                   DSCPF2 104
      AUXKW = CVAL(<DESC-KW-FTW>,DBIN,WIN4)                                     DSCPF2 105
      GASUSE = GASUSE*(DCFMD/<DESC-NOM-CFM>)                                    DSCPF2 106
      AUXKW = AUXKW*(DCFMD/<DESC-NOM-CFM>)                                      DSCPF2 107
      RETURN                                                                    DSCPF2 108
      END                                                                       DSCPF2 109
      SUBROUTINE DSCPF3(DCFMD,CFM,PO,DBIN,WIN,WOUT,DBOUT,QIN,AUXKW,             DSCPF3   2
     1                  TCONDx)                                                 DSCPF3   3
C                                                                               DSCPF3   4
C              GET PERFORMANCE OF DESICCANT SUBSYSTEM OF DUBLSORB               DSCPF3   5
C              COOLING UNIT                                                     DSCPF3   6
C                                                                               DSCPF3   7
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON  /DPLTD /  DPLTDisUnused                                           HVAC15   1
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      REAL DBODAT(3,3,5), QINDAT(3,3,5), TCNDAT(3,3,5)                          DSCPF3  11
      REAL DBINP(5), WINP(3,5), WOP(3,3,5)                                      DSCPF3  12
C              DEFINE A PERFORMANCE MAP FOR DESC UNIT                           DSCPF3  13
C              DBINP ARE THE INLET TEMPERATURE POINTS                           DSCPF3  14
      DATA DBINP /60.,70.,80.,90.,100./                                         DSCPF3  15
C              WINP ARE THE INLET HUMIDITY RATIO POINTS                         DSCPF3  16
      DATA WINP /.00547,.00992,-999.,.00543,.00778,.01415,                      DSCPF3  17
     1           .00541,.01092,.01994,.00597,.01515,.02142,                     DSCPF3  18
     2           .00609,.02078,-999./                                           DSCPF3  19
C              WOP ARE THE OUTLET HUMIDITY RATIO POINTS.  THESE ARE             DSCPF3  20
C              INPUT TO DSCPF3 SINCE THE OUTLET HUMIDITY IS A CONTROL           DSCPF3  21
C              VARIABLE                                                         DSCPF3  22
      DATA WOP /.0025,.0030,.0050,.0037,.0044,.0065,-999.,-999.,-999.,          DSCPF3  23
     1          .0028,.0033,.0054,.0034,.0041,.0056,.0053,.0058,.0072,          DSCPF3  24
     2          .0031,.0037,.0050,.0047,.0051,.0064,.0071,.0076,.0082,          DSCPF3  25
     3          .0036,.0042,.0057,.0065,.0069,.0080,.0075,.0080,.0085,          DSCPF3  26
     4          .0040,.0046,.0061,.0067,.0082,.0088,-999.,-999.,-999./          DSCPF3  27
C              DBODAT IS THE OUTLET TEMPERATURE DATA                            DSCPF3  28
      DATA DBODAT /59.8,59.7,59.3,67.3,67.2,66.8,-999.,-999.,-999.,             DSCPF3  29
     1             63.9,63.8,63.4,67.7,67.6,67.3,76.6,76.5,76.2,                DSCPF3  30
     2             67.7,67.6,67.3,75.6,75.5,75.3,86.1,86.0,85.9,                DSCPF3  31
     3             72.1,72.0,71.7,83.6,83.5,83.3,90.1,90.0,89.9,                DSCPF3  32
     4             75.6,75.5,75.2,92.1,91.8,91.7,-999.,-999.,-999./             DSCPF3  33
C              QINDAT IS THE REGEN GAS LOAD DATA                                DSCPF3  34
      DATA QINDAT /238288.,217492.,139047.,259533.,235219.,161560.,             DSCPF3  35
     1             -999.,-999.,-999.,218469.,196533.,113897.,                   DSCPF3  36
     2             229859.,205326.,148932.,255505.,241579.,194724.,             DSCPF3  37
     3             198956.,175099.,120979.,222465.,209061.,164510.,             DSCPF3  38
     4             269208.,253631.,236998.,182561.,156570.,99737.,              DSCPF3  39
     5             217541.,201853.,168309.,269265.,253545.,236912.,             DSCPF3  40
     6             162057.,136729.,78172.,277933.,231344.,214306.,              DSCPF3  41
     7             -999.,-999.,-999./                                           DSCPF3  42
C              TCNDAT IS THE EXIT HYDRONIC TEMPERATURE DATA.  THIS              DSCPF3  43
C              IS PASSED TO PLANT                                               DSCPF3  44
      DATA TCNDAT /126.0,116.7,89.3,131.3,122.2,99.6,-999.,-999.,-999.,         DSCPF3  45
     1             125.7,116.4,89.1,128.7,119.5,101.4,135.4,130.8,117.4,        DSCPF3  46
     2             125.3,116.1,97.9,131.9,127.3,113.8,135.8,144.8,140.3,        DSCPF3  47
     3             125.5,116.4,98.3,135.8,131.4,122.5,150.3,145.8,141.4,        DSCPF3  48
     4             125.1,116.0,97.9,158.6,145.1,140.7,-999.,-999.,-999./        DSCPF3  49
C              CALL THE TABLE LOOKUP ROUTINE TO GET EXIT AIR TEMP,              DSCPF3  50
C              REGEN GAS USE, AND HYDRONIC TEMP GIVEN WOUT, WIN, DBIN           DSCPF3  51
      DBOUT = TABLE3(3,3,5,WOP,WINP,DBINP,DBODAT,WOUT,WIN,DBIN)                 DSCPF3  52
      QIN = TABLE3(3,3,5,WOP,WINP,DBINP,QINDAT,WOUT,WIN,DBIN)                   DSCPF3  53
      TCONDx = TABLE3(3,3,5,WOP,WINP,DBINP,TCNDAT,WOUT,WIN,DBIN)                DSCPF3  54
      AUXKW = 1.90*DCFMD/<DESC-NOM-CFM>                                         DSCPF3  55
      QIN = QIN*DCFMD/<DESC-NOM-CFM>                                            DSCPF3  56
      RETURN                                                                    DSCPF3  57
      END                                                                       DSCPF3  58
      SUBROUTINE DSCPF4(PABIN,PA,PVEL,VR,TRI,TPI,MPI,WBPI,IML,MCL,HE            DSCPF4   2
     1                 ,PKW,RKW,DKW,TOTKW,HXE,EVEFFR,MODE,TPO,MPO               DSCPF4   3
     2                 ,ARBTU,BINPKW,BINRKW,BINDKW,BINKW,EXCAP)                 DSCPF4   4
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                 IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                        /FILES/  3
     2               , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                   /FILES/  4
     3                 IHRREP(3), IHRPAS(2)                                     /FILES/  5
      COMMON  /HRREP / Irb, Ihrp, Lrb, Lhrp, Nrb, Nhrp, IVTLIM(3,50),           HR       5
     &                 IGRPtr, IBRPtr, IRSch, IRSchT(5),                        HR       6
     &                 NHRTyp(3), ITBUF(3), ITBUFB(3), ITBUFE(3),               HR       7
     &                 IHREOF, ICDFLG                                           HR       8
      COMMON  /SYSTD / TH,TC,TM,TR,QH,QC,QHZ,QCZ,QHB,QHP,QHUM,                  /SYSTD/  2
     1                 QDHUM,TCMIN,THMAX,QLSUM,QPSUM,CFM,CFMH,CFMC,             /SYSTD/  3
     2                 RCFM,ECFM,CINF,FON,HON,CON,BON,SCONS(3),PH,PC,           /SYSTD/  4
     3                 SKW,FANKW,unused1,WR,WM,WCOIL,WW,PO,D,                   -046f    1
     4                 FTEMP,TCR,QHR,RfanPumpKW,SGAS,SKWQH,SKWQC,QCLAT,         -131    23
     5                 SFKW,RFKW,FONNGT,WSURF,RWalkinQ,TSURF,TRh,               -131    24
     6                 CBF,CBF1,CBF2,EON,PLRCFM,PLRC,PLRH,QCM1,                 /SYSTD/  8
     7                 QCM2,QHM1,EIRM1,EIRM2,EIR,OFKW,QCT,QCS,                  /SYSTD/  9
     8                 WRMAX,WRMIN,CFMRAT,QdistG,QdistL,RON,QHT,                /SYSTD/ 10
     9                 TPOMIN,POMIN,QHSUP,QRSENS,QRLAT,QRREC,QRREJ,             /SYSTD/ 11
     1                 RCOMKW,RDEFKW,RAUXKW,ECFMP,CFMIN,CINFP,DT,DW,            /SYSTD/ 12
     2                 EWB,IC,NATTSP,Q,RETR,SLOAD,QLSUMP,T,TCHUM,TEND,          /SYSTD/ 13
     3                 TS,hgbmin,HPDefE,EconoOnly,TDuctEnv,                     -044e1   1
     4                 QCUNMT,CapRh,CapRph,CapRc                                HVAC25   3
      REAL             SYSTD(113)                                               HVAC19  13
      EQUIVALENCE      (SYSTD(1),TH)                                            RemPA   65
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      COMMON  /TIME  / IDOY, IYR, IMO, IDAY, IHR,                               Time     4
     &                 ISCMO, ISCDAY, ISCHR, IDOW, ISCDOW, iDSdates(6),         -044e5   1
     &                 iTimeFlg, iDSFlg, iDDFlg, InitialFlg, LeapYr,            Time     6
     &                 CLOCK(10), MONDSC(13), MONLEN(12), MONSDA(12)            HR      12
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
C                                                                               DSCPF4  12
C       Written by:                                                             DSCPF4  13
C     R. L. Hedrick, Chamberlain Manufacturing, GARD Division, 2/3/88           DSCPF4  14
C                            Heat exchanger additions  5/12/89                  DSCPF4  15
C                                                                               DSCPF4  16
C     Based on algorithms supplied by                                           DSCPF4  17
C     Lew Harriman, Mason-Grant, in letter dated 1/27/88                        DSCPF4  18
C                                                                               DSCPF4  19
C       This subroutine is to calculate part load energy consumption            DSCPF4  20
C     of a CargoCaire desiccant wheel system.  The design conditions            DSCPF4  21
C     for the building will have been used to select the unit in                DSCPF4  22
C     SUBROUTINE CairPick.  This routine assumes that the unit will             DSCPF4  23
C     meet the part load by running at design conditions for part of            DSCPF4  24
C     the hour, in proportion to actual load/full load.  In reality,            DSCPF4  25
C     the unit will modulate the amount of OA going through the unit,           DSCPF4  26
C     bypassing the remaining Minimum required OA volume around the             DSCPF4  27
C     wheel.  This assumption for calculational simplicity is accurate          DSCPF4  28
C     to within +or- 2.09 Gr/lb on process leaving moisture, and                DSCPF4  29
C       +or- 2.26 F on process (supply) leaving air temperature.                DSCPF4  30
C     Accuracy is greatest with moderate inlet conditions, and approach         DSCPF4  31
C     the 2.26 F limit as inlet conditions approach the hot or cold             DSCPF4  32
C     extremes.                                                                 DSCPF4  33
C                                                                               DSCPF4  34
C     Input variables either from the user or SUBROUTINE CairPick               DSCPF4  35
C     are:                                                                      DSCPF4  36
C      PABIN  Outside air volume (cfm) this hour                                DSCPF4  37
C      PA     Design Outside Air Volume (Process Air) (SCFM)                    DSCPF4  38
C      PVEL   Outside Air Velocity through the wheel at design (fpm)            DSCPF4  39
C      VR     Reactivation air volume at design (SCFM)                          DSCPF4  40
C      TRI    Reactivation air temperature required at design (F)               DSCPF4  41
C      TPI    Air temperature at drier inlet, supply airstream (OAT) (F)        DSCPF4  42
C      MPI    Air moisture at drier inlet, supply airstream (OAW) (Gr/lb)       DSCPF4  43
C      IML    Internal moisture load to be picked up (lb/hr)                    DSCPF4  44
C      TCL    Occupied area temperature control point (F)                       DSCPF4  45
C      MCL    Occupied area moisture control point (Gr/lb)                      DSCPF4  46
C      HE     Reactivation heater conversion efficiency                         DSCPF4  47
C      PKW    Process fan energy at design (KW)                                 DSCPF4  48
C      RKW    Reactivation fan energy at design (KW)                            DSCPF4  49
C      DKW    Desiccant wheel motor energy at design (KW)                       DSCPF4  50
C      TOTKW  Total system electrical energy at design (KW)                     DSCPF4  51
C      HXE    Heat exchanger effectiveness                                      DSCPF4  52
C      EVEFFR Evaporative cooler effectiveness                                  DSCPF4  53
C      MODE   Specifies the heat exchanger configuration (0,1,2,3)              DSCPF4  54
C                                                                               DSCPF4  55
C     Output from this routine is:                                              DSCPF4  56
C      TPO    Air temp leaving the wheel, supply airstream (F)                  DSCPF4  57
C      MPO    Air moisture leaving the wheel, supply airstream (Gr/lb)          DSCPF4  58
C      ARBTU  Actual reactivation input energy for this hour (BTUH)             DSCPF4  59
C      CBTU   Cooling btus required to bring supply air to temperature          DSCPF4  60
C                 point for the hour (BTUH)                                     DSCPF4  61
C      BINPKW   Process fan energy for the hour (KW)                            DSCPF4  62
C      BINRKW   Reactivation fan energy for the hour (KW)                       DSCPF4  63
C      BINDKW   Desiccant wheel motor energy for the hour (KW)                  DSCPF4  64
C      BINKW    Total system electrical energy for the hour (KW)                DSCPF4  65
C                                                                               DSCPF4  66
C                                                                               DSCPF4  67
C     NOTE:   The system assumes a "process" fan to overcome the wheel          DSCPF4  68
C             static pressure drop for the OA going through the wheel           DSCPF4  69
C             only.  The air handling system supply fan is outside the          DSCPF4  70
C             scope of this routine.                                            DSCPF4  71
C                                                                               DSCPF4  72
C             The system is set up for including a heat exchanger on the        DSCPF4  73
C             process air, downstream of the desiccant wheel.  There are        DSCPF4  74
C             4 options, indicated by the value of MODE:                        DSCPF4  75
C                 0 - No heat exchanger                                         DSCPF4  76
C                 1 - A sensible heat exchanger with process air on one         DSCPF4  77
C                     side and the inlet air to the regenerator (OA             DSCPF4  78
C                     conditions) on the other.  The air volume required        DSCPF4  79
C                     for the regenerator (VR) is only a fraction of the        DSCPF4  80
C                     process air volume (PA).  In order to get balanced        DSCPF4  81
C                     flow for the heat exchanger, the regeneration air         DSCPF4  82
C                     fan blows a volume equal to PA, and the excess is         DSCPF4  83
C                     exhausted.  In the KW equation for this fan, then,        DSCPF4  84
C                     VR is replaced by PA.  In addition, for both the          DSCPF4  85
C                     process and regenerator fans the static pressure is       DSCPF4  86
C                     increased by DELPHX.                                      DSCPF4  87
C                 2 - A sensible heat exchanger with heat rejected to           DSCPF4  88
C                     ambient.  There is an extra fan added that                DSCPF4  89
C                     blows OA thru a heat exchanger to cool the process        DSCPF4  90
C                     air.  The regeneration air has its own fan with           DSCPF4  91
C                     volume VR, the same as in MODE 0.  The heat exchanger     DSCPF4  92
C                     fan will move volume PA across a pressure drop of         DSCPF4  93
C                     DELPHX.  The static pressure for the process fan is       DSCPF4  94
C                     also increased by DELPHX.  The KW for the heat            DSCPF4  95
C                     exchanger fan is included with RKW, the KW for the        DSCPF4  96
C                     regeneration air fan.                                     DSCPF4  97
C                 3 - An indirect evaporative cooler is used to cool the        DSCPF4  98
C                     process air.  This mode is the same as 2 except that      DSCPF4  99
C                     the outdoor air is evaporatively cooled before going      DSCPF4 100
C                     through the heat exchanger.                               DSCPF4 101
C                                                                               DSCPF4 102
C             The fans are assumed to be draw-through, in that fan heat has     DSCPF4 103
C             not been added to the air prior to the heat exchangers.           DSCPF4 104
C             This is only a problem in the calculation of the regeneration     DSCPF4 105
C             heat required, in that the fan heat has been increased by the     DSCPF4 106
C             additional static pressure drop over the heat exchange coil.      DSCPF4 107
C                                                                               DSCPF4 108
C                                                                               DSCPF4 109
C                                                                               DSCPF4 110
C========================Declare Variables                                      DSCPF4 111
C                                                                               DSCPF4 112
C             Input Variables                                                   DSCPF4 113
      REAL*4        PABIN                                                       DSCPF4 114
      REAL*4        PA                                                          DSCPF4 115
      REAL*4        PVEL                                                        DSCPF4 116
      REAL*4        VR                                                          DSCPF4 117
      REAL*4        TRI                                                         DSCPF4 118
      REAL*4        TPI                                                         DSCPF4 119
      REAL*4        MPI                                                         DSCPF4 120
      REAL*4        IML                                                         DSCPF4 121
      REAL*4        MCL                                                         DSCPF4 122
      REAL*4        HE                                                          DSCPF4 123
      REAL*4        PKW                                                         DSCPF4 124
      REAL*4        RKW                                                         DSCPF4 125
      REAL*4        DKW                                                         DSCPF4 126
      REAL*4        TOTKW                                                       DSCPF4 127
      REAL*4        HXE                                                         DSCPF4 128
      REAL*4        EVEFFR                                                      DSCPF4 129
      INTEGER       MODE                                                        DSCPF4 130
C                                                                               DSCPF4 131
C             Output Variables                                                  DSCPF4 132
      REAL*4        TPO                                                         DSCPF4 133
      REAL*4        MPO                                                         DSCPF4 134
      REAL*4        ARBTU                                                       DSCPF4 135
      REAL*4        BINPKW                                                      DSCPF4 136
      REAL*4        BINRKW                                                      DSCPF4 137
      REAL*4        BINDKW                                                      DSCPF4 138
      REAL*4        BINKW                                                       DSCPF4 139
C                                                                               DSCPF4 140
C             Intermediate Variables                                            DSCPF4 141
      REAL*4        TPU                                                         DSCPF4 142
      REAL*4        TPI2                                                        DSCPF4 143
      REAL*4        RBTU                                                        DSCPF4 144
      REAL*4        RRBTU                                                       DSCPF4 145
      REAL*4        IMR                                                         DSCPF4 146
      REAL*4        PL                                                          DSCPF4 147
      REAL*4 IML1,IML2                                                          DSCPF4 148
                                                                                DSCPF4 149
                                                                                DSCPF4 150
C==================================BODY OF PROGRAM                              DSCPF4 151
C                                                                               DSCPF4 152
C----------------------Calculate full load capacity based on current            DSCPF4 153
C                      OA conditions.                                           DSCPF4 154
C                                                                               DSCPF4 155
C     PRINT 901,TRI,TPI,PVEL                                                    DSCPF4 156
C 901 FORMAT('  TRI = 'E11.4'  TPI = 'E11.4'  PVEL = 'E11.4)                    DSCPF4 157
C     PRINT 902,IMO,IDAY,IDOW,IHR,ISCHR                                         DSCPF4 158
C 902 FORMAT('  IMO = 'I2'  IDAY = 'I2'  IDOW = 'I2'  IHR = 'I2                 DSCPF4 159
C    1       'ISCHR = 'I2)                                                      DSCPF4 160
      MPO= -48.169 + PVEL*0.022 + TPI*0.687 + MPI*0.318 - TRI*0.058             DSCPF4 161
      TPO= -1.675 + TPI*1.008 + 0.65*(MPI-MPO)*1.15                             DSCPF4 162
     .   + 1./(PVEL*(TRI-TPI)*14.544)                                           DSCPF4 163
      TPU= -3.967 + TRI*0.848 + TPI*0.028                                       DSCPF4 164
      TPI2 = TPI                                                                DSCPF4 165
C              mode 1 - the sensible heat exchanger is used to                  DSCPF4 166
C              preheat the regeneration air stream as well as cool              DSCPF4 167
C              the process air                                                  DSCPF4 168
      IF (MODE .EQ. 1)  TPI2 = DBT + (TPO-DBT)*HXE                              DSCPF4 169
C              regeneration energy at full load                                 DSCPF4 170
      RBTU = 1.08*VR*(TRI-TPI2) - 1.08*PA*(15./264.)*(TRI-TPU)                  DSCPF4 171
      RRBTU = RBTU/HE                                                           DSCPF4 172
C              run the desiccant unit to meet the latent load                   DSCPF4 173
C              total latent cooling is:                                         DSCPF4 174
      IMR = 4.5*PA*(MPI-MPO)/7000.                                              DSCPF4 175
      IMR = AMAX1(0.01,IMR)                                                     DSCPF4 176
C              the latent load is the interior moisture gain plus               DSCPF4 177
C              the moisture that must be removed from the outside               DSCPF4 178
C              air stream to meet the humidity setpoint                         DSCPF4 179
      IML1 = IML                                                                DSCPF4 180
      IML2 = 4.5*PO*CFM*(HUMRAT-MCL/7000.)                                      DSCPF4 181
      IML = IML1 + IML2                                                         DSCPF4 182
C              note that if MPI<MCL the outside air provides free               DSCPF4 183
C              drying; that is, it acts to reduce the internal latent           DSCPF4 184
C              load.  But we must make sure IML isn't negative:                 DSCPF4 185
      IML = AMAX1(0.0,IML)                                                      DSCPF4 186
C              calculate the latent part load                                   DSCPF4 187
      PL = IML/IMR                                                              DSCPF4 188
      PL = AMAX1(0.,AMIN1(1.,PL))                                               DSCPF4 189
C              adjust outlet conditions and energy consumption for              DSCPF4 190
C              part load                                                        DSCPF4 191
      ARBTU = RRBTU*PL                                                          DSCPF4 192
      BINPKW = PKW*PL                                                           DSCPF4 193
      BINRKW = RKW*PL                                                           DSCPF4 194
      BINDKW = DKW*PL                                                           DSCPF4 195
      BINKW = TOTKW*PL                                                          DSCPF4 196
      MPO = MPI - (MPI-MPO)*PL                                                  DSCPF4 197
      TPO = TPI + (TPO-TPI)*PL                                                  DSCPF4 198
C              now run the outlet air through a sensible heat                   DSCPF4 199
C              exchanger, or an indirect evaporative cooler                     DSCPF4 200
      IF ((MODE .EQ. 1) .OR. (MODE .EQ. 2)) THEN                                DSCPF4 201
          TPO = TPO - (TPO-DBT)*HXE                                             DSCPF4 202
      ELSE IF (MODE .EQ. 3) THEN                                                DSCPF4 203
      CALL EVAPDR(PA,EVEFFR,PABIN,DBT,WBT,EFF,DBO,WBO)                          DSCPF4 204
          TPO = TPO - (TPO-DBO)*HXE                                             DSCPF4 205
      END IF                                                                    DSCPF4 206
      RETURN                                                                    DSCPF4 207
      END                                                                       DSCPF4 208
      FUNCTION DUCTDT(Tduct,CFMduct,IHC,Ilocn,Mode)                             XFC1   100
c                                                                               DUCTDT   3
c              Calculates the temperature rise through a duct,                  DUCTDT   4
c              or the log mean temperature of the air in the duct.              XFC1   101
c                                                                               XFC1   102
c              This algorithm uses the NTU/effectiveness heat-exchanger         XFC1   103
c              equations, and assumes that the environmental temperature        XFC1   104
c              along and around the duct is uniform.  The solution is           XFC1   105
c              then the same as for a condensing fluid on one side of           XFC1   106
c              a heat-exchanger.                                                XFC1   107
c                                                                               XFC1   108
c              When duct air losses occur simultaneously with thermal           HVAC29  31
c              losses, the air losses are presumed to occur at the              HVAC29  32
c              duct outlet.                                                     HVAC29  33
c                                                                               HVAC29  34
c                                                                               DUCTDT   6
C              DEVELOPED BY                                                     -130    15
C                            J. J. Hirsch & S. D. Gates                         -130    16
C                            James J. Hirsch & Associates                       -130    17
C                            Camarillo, California                              -130    18
C                                                                               -130    19
Copyright (c) 1997 by James J. Hirsch. All Rights Reserved. Unpublished         -130    20
c rights reserved under the Copyright Laws of the United States.                -130    21
c RESTRICTED RIGHTS NOTICE: Government use, reproduction or disclosure          -130    22
c is subject to restrictions as set forth in Rights in Data (g)(3) in           -130    23
c UC/LBL purchase order 4607010 with J.J. Hirsch & Associates.                  -130    24
C                                                                               -130    25
c                                                                               DUCTDT   8
c              IHC = 1  Heating (only for dual-duct)                            DUCTDT   9
c                    2  Cooling                                                 DUCTDT  10
c                    3  Return duct                                             -044c4  29
c                                                                               DUCTDT  11
c            ILOCN = 1  Tduct is entering duct (air handler temp)               DUCTDT  12
c                    2  Tduct is leaving diffuser                               DUCTDT  13
c                                                                               DUCTDT  14
c             Mode = 0  Returns the duct temperature rise                       XFC1   109
c                    1  Returns the log mean temperature of the air in          XFC1   110
c                       the duct                                                XFC1   111
c                    2  Returns the duct heat gain (or zone extraction          XFC1   112
c                         rate - positive is zone cooling effect)               XFC1   113
c                                                                               XFC1   114
C              DEVELOPED BY                                                     -130    15
C                            J. J. Hirsch & S. D. Gates                         -130    16
C                            James J. Hirsch & Associates                       -130    17
C                            Camarillo, California                              -130    18
C                                                                               -130    19
Copyright (c) 1997 by James J. Hirsch. All Rights Reserved. Unpublished         -130    20
c rights reserved under the Copyright Laws of the United States.                -130    21
c RESTRICTED RIGHTS NOTICE: Government use, reproduction or disclosure          -130    22
c is subject to restrictions as set forth in Rights in Data (g)(3) in           -130    23
c UC/LBL purchase order 4607010 with J.J. Hirsch & Associates.                  -130    24
C                                                                               -130    25
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON  /MISCD / TEMPS(4,9999),CONS(5),TEMPSL(9999),                      -048a   10
     1                 BLDGQH,BLDGQC,BLDGQL,BLDGP,BPMULT,                       /MISCD/  3
     $                 DBTMIN,DBTMAX,WMIN,WMAX,NSPZ(9999),                      -048a   11
     3                 DQ, DTP, DTR, DTS, FPI, PLRCC , POM, TC2, TDM,           /MISCD/  5
     4                 TRA,WCOL,WCOLM,WMM,YPI,KWBTU,BTUKW,UNFILD,Unusedm        RemPA   45
      REAL             KWBTU                                                    /MISCD/  7
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      COMMON  /SYSTD / TH,TC,TM,TR,QH,QC,QHZ,QCZ,QHB,QHP,QHUM,                  /SYSTD/  2
     1                 QDHUM,TCMIN,THMAX,QLSUM,QPSUM,CFM,CFMH,CFMC,             /SYSTD/  3
     2                 RCFM,ECFM,CINF,FON,HON,CON,BON,SCONS(3),PH,PC,           /SYSTD/  4
     3                 SKW,FANKW,unused1,WR,WM,WCOIL,WW,PO,D,                   -046f    1
     4                 FTEMP,TCR,QHR,RfanPumpKW,SGAS,SKWQH,SKWQC,QCLAT,         -131    23
     5                 SFKW,RFKW,FONNGT,WSURF,RWalkinQ,TSURF,TRh,               -131    24
     6                 CBF,CBF1,CBF2,EON,PLRCFM,PLRC,PLRH,QCM1,                 /SYSTD/  8
     7                 QCM2,QHM1,EIRM1,EIRM2,EIR,OFKW,QCT,QCS,                  /SYSTD/  9
     8                 WRMAX,WRMIN,CFMRAT,QdistG,QdistL,RON,QHT,                /SYSTD/ 10
     9                 TPOMIN,POMIN,QHSUP,QRSENS,QRLAT,QRREC,QRREJ,             /SYSTD/ 11
     1                 RCOMKW,RDEFKW,RAUXKW,ECFMP,CFMIN,CINFP,DT,DW,            /SYSTD/ 12
     2                 EWB,IC,NATTSP,Q,RETR,SLOAD,QLSUMP,T,TCHUM,TEND,          /SYSTD/ 13
     3                 TS,hgbmin,HPDefE,EconoOnly,TDuctEnv,                     -044e1   1
     4                 QCUNMT,CapRh,CapRph,CapRc                                HVAC25   3
      REAL             SYSTD(113)                                               HVAC19  13
      EQUIVALENCE      (SYSTD(1),TH)                                            RemPA   65
c                                                                               XFC1   120
c              If no duct losses                                                XFC1   121
      DuctDT = 0.                                                               -044c4  30
      IF (CFMduct .LT. 1.)  Return                                              -044c4  31
c                                                                               XFC1   126
c              Duct UA                                                          -044c4  32
      SELECT CASE (IHC)                                                         -044c4  33
      CASE (1)  ! Hot duct                                                      -044c4  34
        IF (ICODE .EQ. 4)  THEN  ! dual-duct hot duct                           -044c4  35
          DuctUA = <HOTDUCTUA>                                                  -044c4  36
        ELSE                                                                    -044c4  37
          DuctUA = <DUCTUA>                                                     -044c4  38
        ENDIF                                                                   -044c4  39
      CASE (2)  ! Single-duct supply                                            -044c4  40
        DuctUA = <DUCTUA>                                                       -044c4  41
      CASE (3)  ! Return duct                                                   -044c4  42
        DuctUA = <sy:RETURN-UA>                                                 -044c4  43
      END SELECT                                                                -044c4  44
      IF (DuctUA .eq. 0.)  Return                                               -044c4  45
c              ratio of the duct UA to the duct heat transport capacity.        XFC1   131
      RUACFM = DuctUA / (CONS(1) * CFMduct)                                     XFC1   132
c              heat-exchanger effectiveness (assumes condensing fluid)          XFC1   133
      Eff    = 1.0 - EXP(-RUACFM)                                               XFC1   134
c                                                                               XFC1   135
c              duct temperature rise for temperature entering duct              XFC1   136
      DUCTDT = Eff * (TDuctEnv - Tduct)                                         XFC1   137
c              duct temperature rise for temperature leaving duct               XFC1   138
      IF (Ilocn .EQ. 2)  DUCTDT = DUCTDT / (1.0 - Eff)                          XFC1   139
c                                                                               XFC1   140
      IF (Mode .GT. 0)  THEN                                                    XFC1   141
c              Log mean temperature difference (zone-duct)                      XFC1   142
        DUCTDT = DUCTDT / RUACFM                                                XFC1   143
        IF (Mode .EQ. 1)  THEN                                                  XFC1   144
c              log mean temperature of air in duct                              XFC1   145
          DUCTDT = TDuctEnv - DUCTDT                                            XFC1   146
        ELSE                                                                    XFC1   147
c              duct loss (relative to zone)                                     XFC1   148
          DUCTDT = DuctUA * DUCTDT                                              XFC1   149
        ENDIF                                                                   XFC1   150
      ENDIF                                                                     XFC1   151
c                                                                               XFC1   152
      RETURN                                                                    DUCTDT 103
      END                                                                       DUCTDT 104
      SUBROUTINE EBAL                                                           EBAL     2
C                                                                               EBAL     3
C              THIS ROUTINE TAKES THE ENVIRONMENTAL INPUT AND A                 EBAL     4
C              GUESS OF THE AMOUNT OF CONVECTIVE ENERGY LEAVING THE             EBAL     5
C              GLASS AND WALL, AND CALCULATES THE GLASS AND WALL                EBAL     6
C              TEMPERATURES.  THE CONVECTION FROM GLASS AND WALL ARE            EBAL     7
C              DIVIDED UP PROPORTIONATELY TO THEIR PREVIOUS                     EBAL     8
C              TEMPERATURES.                                                    EBAL     9
C                                                                               EBAL    10
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      common  /FNSYS/  ISKIPS, MSYSF(120)                                       /FNSYS/  2
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      COMMON  /TROMWL/ SUMDTX,SUMDTY,QCTOT,QLC0,QGK0,QCGUES,QVNTBG,             /TROMWL/ 2
     1                 VOLVNT,AMF,UCHAN,UCHANC,HRGW,TAIRIN,TZONE,               /TROMWL/ 3
     2                 TGOUT,QCVG,QCVW,IVMODE,TFO,RHO,MWH,FILMU,MRX,CTRM        /TROMWL/ 4
     1    , TAVR, TGLASS, TUNDER, UNIN1                                         /TROMWL/ 5
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
C                                                                               EBAL    16
C********************** run function : EBAL-0 **********************            EBAL    17
      IF( MSYSF(28) .NE. 0 )   CALL  FINTS( MSYSF(28), 0. )                     EBAL    18
      IF( ISKIPS .NE. 0 )   GOTO  9990                                          EBAL    19
C*******************************************************************            EBAL    20
      UWIN1  = <U-WINDOW>                                                       EBAL    21
      IF (<NIGHT-INSUL> .NE. 0.)  UWIN1 = UWIN1*<NIGHT-INSUL>                   EBAL    22
      TAVR   = 460. + (<TGLASSIN> + AA(MWH+1))/2.                               EBAL    23
      HRGW   = (4.*.1712E-8*TAVR**3)/(1./<SURF-EMISS>+1./.9-1.)                 EBAL    24
C              ADD RADIATIVE AND CONVECTIVE CONDUCTANCES                        EBAL    25
      UCHAN  = UCHANC + HRGW                                                    EBAL    26
C              DIVIDE CONVECTION BASED ON SURFACE TEMPERATURES                  EBAL    27
      QCVW   = 0.                                                               EBAL    28
      QCVG   = 0.                                                               EBAL    29
      TGLASS = <TGLASSIN>                                                       EBAL    30
      IF(TGLASS.LT.TAIRIN) TGLASS = TAIRIN                                      EBAL    31
      TUNDER = TGLASS + AA(MWH+1) - 2 * TAIRIN                                  EBAL    32
      IF(TUNDER.EQ.0.) GO TO 10                                                 EBAL    33
      QCVW   = QCGUES*(AA(MWH+1)-TAIRIN)/TUNDER                                 EBAL    34
      QCVG   = QCGUES*(TGLASS-TAIRIN)/TUNDER                                    EBAL    35
   10 CONTINUE                                                                  EBAL    36
C              SOLVE HEAT BALANCE FOR THREE EQUATIONS AND THREE                 EBAL    37
C              UNKNOWNS                                                         EBAL    38
      A1     = FILMU+UWIN1                                                      EBAL    39
      B1     = -UWIN1                                                           EBAL    40
      A2     = UWIN1                                                            EBAL    41
      A12    = A1/A2                                                            EBAL    42
      D1     = <QABSO> + DBT*FILMU                                              EBAL    43
      B2     = -(UWIN1+UCHAN)                                                   EBAL    44
      C2     = UCHAN                                                            EBAL    45
      D2     = -<QABSI> + QCVG                                                  EBAL    46
      B3     = UCHAN                                                            EBAL    47
      C3     = -(UCHAN+AA(MRX+1))                                               EBAL    48
      D3     = -TZONE*AA(MRX+1) - <QABSW> +QCVW +SUMDTX                         EBAL    49
      AA(MWH+1)=(D1-A12*D2-B1*D3/B3+A12*B2*D3/B3)/                              EBAL    50
     1   (-A12*C2-B1*C3/B3+A12*B2*C3/B3)                                        EBAL    51
      <TGLASSIN>=(D1-A12*D2+A12*C2*AA(MWH+1))/(B1-A12*B2)                       EBAL    52
      TGOUT  = (D1-B1*<TGLASSIN>)/A1                                            EBAL    53
C********************** run function : EBAL-1 **********************            EBAL    54
9990  IF( MSYSF(29) .NE. 0 )   CALL  FINTS( MSYSF(29), 1. )                     EBAL    55
C*******************************************************************            EBAL    56
      RETURN                                                                    EBAL    57
      END                                                                       EBAL    58
      SUBROUTINE  ECONO ( ICALL, TAPP, POMxx )                                  ECONO    2
C                                                                               ECONO    3
C                            ECONOMIZER FOR OUTSIDE AIR + HEAT RECOVERY         ECONO    4
C                                                                               ECONO    5
C              DEVELOPED BY                                                     -130     1
C                            J. J. Hirsch & S. D. Gates                         -130     2
C                            James J. Hirsch & Associates                       -130     3
C                            Camarillo, California                              -130     4
C              BASED UPON CODE DEVELOPED BY J. J. Hirsch and                    -130     5
C                            W. F. Buhl                                         -130     6
C                            A. E. Erdem                                        -130     7
C                            Lawrence Berkeley National Laboratory              -130     8
C                            University of California                           -130     9
Copyright (c) 1997 by James J. Hirsch. All Rights Reserved. Unpublished         -130    10
c rights reserved under the Copyright Laws of the United States.                -130    11
c RESTRICTED RIGHTS NOTICE: Government use, reproduction or disclosure          -130    12
c is subject to restrictions as set forth in Rights in Data (g)(3) in           -130    13
c UC/LBL purchase order 4607010 with J.J. Hirsch & Associates.                  -130    14
C                                                                               ECONO    7
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON  /DPLTD /  DPLTDisUnused                                           HVAC15   1
C              SYSTEM LEVEL VARIABLES FOR DESICCANT SYSTEMS, BOTH TOTAL         /DSYSTD/ 2
C              AND INTEGRATED                                                   /DSYSTD/ 3
      COMMON  /DSYSTD/  SCGAS, QREG, WBR, WB8, T8, W8, WB9, T9, W9, EFF,        /DSYSTD/ 4
     1                  DTON, DMODE(7), ERMAX4, ERMAX5, ERMAX6, OPMODE,         /DSYSTD/ 5
     2                  DBOA,WOA,DGAS,DKW,TCONDd,QCDTOT,QCDS,QCDL,              /DSYSTD/ 6
     3                  POA,DFANKW,RFANKW,DMOTKW,EVKW,QCEVT,QCEVS,              /DSYSTD/ 7
     4                  QCEVL,TCMNEV                                            /DSYSTD/ 8
      REAL DSYSTD(39)                                                           /DSYSTD/ 9
      EQUIVALENCE (DSYSTD(1), SCGAS)                                            /DSYSTD/10
      COMMON  /TIME  / IDOY, IYR, IMO, IDAY, IHR,                               Time     4
     &                 ISCMO, ISCDAY, ISCHR, IDOW, ISCDOW, iDSdates(6),         -044e5   1
     &                 iTimeFlg, iDSFlg, iDDFlg, InitialFlg, LeapYr,            Time     6
     &                 CLOCK(10), MONDSC(13), MONLEN(12), MONSDA(12)            HR      12
      common  /FNSYS/  ISKIPS, MSYSF(120)                                       /FNSYS/  2
      COMMON  /FZZZ1/   CAPXXX, CORINX, CWIDTX, ERMNXX, ERMXXX, FTDEVX          /FZZZ1/  2
     1                , FXXXXX, HEIGHX, HEXXXX, HPCAPX, HPKWXX, IFLGXX          /FZZZ1/  3
     2, IFUELX, ISHXXX, LSR2XX, LSR3XX, PATMXX, PLRXXX, PLSXXX, POMXXX          /FZZZ1/  4
     3, QHFXXX, QMULTX, QNOWXX, SLOADX, TAPPXX, TGINXX, TLOADX, TNOWXX          /FZZZ1/  5
     4, TSETXX, TWOUTX, UCHANX, ICALLX                                          /FZZZ1/  6
      REAL              LSR2XX, LSR3XX                                          /FZZZ1/  7
      COMMON  /HRREP / Irb, Ihrp, Lrb, Lhrp, Nrb, Nhrp, IVTLIM(3,50),           HR       5
     &                 IGRPtr, IBRPtr, IRSch, IRSchT(5),                        HR       6
     &                 NHRTyp(3), ITBUF(3), ITBUFB(3), ITBUFE(3),               HR       7
     &                 IHREOF, ICDFLG                                           HR       8
      COMMON  /MISCD / TEMPS(4,9999),CONS(5),TEMPSL(9999),                      -048a   10
     1                 BLDGQH,BLDGQC,BLDGQL,BLDGP,BPMULT,                       /MISCD/  3
     $                 DBTMIN,DBTMAX,WMIN,WMAX,NSPZ(9999),                      -048a   11
     3                 DQ, DTP, DTR, DTS, FPI, PLRCC , POM, TC2, TDM,           /MISCD/  5
     4                 TRA,WCOL,WCOLM,WMM,YPI,KWBTU,BTUKW,UNFILD,Unusedm        RemPA   45
      REAL             KWBTU                                                    /MISCD/  7
      COMMON  /PLANTD/ QHMP,TMP,CFMP,QHPP,CFMPP,                                /PLANTD/ 2
     1                 QHZP,TZP,DHWPKW,DHWPLF,DHWQRP                            RemPA   46
      REAL             PLANTD(10)                                               RemPA   47
      EQUIVALENCE      (PLANTD(1), QHMP)                                        RemPA   48
      COMMON /SHP   / QCRUN,QCLOAD,QCGAS,QCAUX,QCGSLD,QCGSUP,                   /SHP/    2
     1                QCWAS,QCWASU,QCGSAV,QCFAN,                                /SHP/    3
     2                QHRUN,QHLOAD,QHGAS,QHAUX,QHGSLD,QHGSUP,                   /SHP/    4
     3                QHWAS,QHWASU,QHGDFR,QHFAN,          CUR(25),              /SHP/    5
     4                GSAV1,GASV2,PCH,ISZCZ,GCAP(2),GEDB,QHDFRG,                -044c1   1
     5                GRPM,PLRSUP,CFMCYC,CLPLR,CFMVVT,QHZHP,PCCEDB,             /SHP/    7
     6                IHPREP,IHPOUT,IHPHRR,IHPHRN,IRST,IREN                     /SHP/    8
      COMMON /SHPZ  / QCRUNZ,QCLOADZ,QCGASZ,QCAUXZ,QCGSLDZ,QCGSUPZ,             /SHP/    9
     1                QCWASZ,QCWASUZ,QCGSAVZ,QCFANZ,                            /SHP/   10
     2                QHRUNZ,QHLOADZ,QHGASZ,QHAUXZ,QHGSLDZ,QHGSUPZ,             /SHP/   11
     3                QHWASZ,QHWASUZ,QHGDFRZ,QHFANZ                             /SHP/   12
      DIMENSION       SHP(60),SHPZ(20)                                          /SHP/   13
      EQUIVALENCE     (SHP,QCRUN),(SHPZ,QCRUNZ)                                 /SHP/   14
     1               ,(DFM1,CUR(18)),(DFM2,CUR(19)),(DFM3,CUR(20))              /SHP/   15
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      COMMON  /SYSTD / TH,TC,TM,TR,QH,QC,QHZ,QCZ,QHB,QHP,QHUM,                  /SYSTD/  2
     1                 QDHUM,TCMIN,THMAX,QLSUM,QPSUM,CFM,CFMH,CFMC,             /SYSTD/  3
     2                 RCFM,ECFM,CINF,FON,HON,CON,BON,SCONS(3),PH,PC,           /SYSTD/  4
     3                 SKW,FANKW,unused1,WR,WM,WCOIL,WW,PO,D,                   -046f    1
     4                 FTEMP,TCR,QHR,RfanPumpKW,SGAS,SKWQH,SKWQC,QCLAT,         -131    23
     5                 SFKW,RFKW,FONNGT,WSURF,RWalkinQ,TSURF,TRh,               -131    24
     6                 CBF,CBF1,CBF2,EON,PLRCFM,PLRC,PLRH,QCM1,                 /SYSTD/  8
     7                 QCM2,QHM1,EIRM1,EIRM2,EIR,OFKW,QCT,QCS,                  /SYSTD/  9
     8                 WRMAX,WRMIN,CFMRAT,QdistG,QdistL,RON,QHT,                /SYSTD/ 10
     9                 TPOMIN,POMIN,QHSUP,QRSENS,QRLAT,QRREC,QRREJ,             /SYSTD/ 11
     1                 RCOMKW,RDEFKW,RAUXKW,ECFMP,CFMIN,CINFP,DT,DW,            /SYSTD/ 12
     2                 EWB,IC,NATTSP,Q,RETR,SLOAD,QLSUMP,T,TCHUM,TEND,          /SYSTD/ 13
     3                 TS,hgbmin,HPDefE,EconoOnly,TDuctEnv,                     -044e1   1
     4                 QCUNMT,CapRh,CapRph,CapRc                                HVAC25   3
      REAL             SYSTD(113)                                               HVAC19  13
      EQUIVALENCE      (SYSTD(1),TH)                                            RemPA   65
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
      COMMON  /ZONED / EXCFM,FH,FC,CFMZ,QHBZ,QOVER,THZ,TCZ,ERMAX,ERMIN,         /ZONED/  2
     1                 TRY,FTD,CORINT,G0,G1,G2,G3,SIGMAG,TL,ZQHR,TAVE,          /ZONED/  3
     2                 ZQH,ZQC,FCHPS(15),ACFM,ZKW,TCMINZ,THMAXZ,                /ZONED/  4
     3                 ERMAXM,ERMINM,THR,CSSCND,CSSVEC,HENOW,QGWIN,             /ZONED/  5
     4                 QSNABT,QGOPWL,QGVEC,CFMCVT,SSFPT,CFMVNT,ZFANKW,          /ZONED/  6
     5                 ZKWCBT,ZKWHBT,ZCapRbbrd, XC,ZC,XH,ZH                     -044e2   7
      REAL ZONED(63)                                                            -044e2   8
      EQUIVALENCE (ZONED(1),EXCFM)                                              /ZONED/  9
      H(DB,W) = 0.24*DB + (1061.0+0.444*DB)*W                                   H        2
c                                                                               ECONO   23
c     ICALLX =1 : if called from DKTEMP, =2 : if called from HVUNIT,SDSF        ECONO   24
      ICALLX = ICALL                                                            ECONO   26
      TAPPXX = TAPP                                                             ECONO   27
      POMXXX = POMxx                                                            ECONO   28
c---- initialize hgbmin                                                         ECONO   29
      hgbmin = <MIN-HGB-RATIO>                                                  ECONO   30
c                                                                               ERV    153
c              Initialize outside air fraction                                  ERV    154
      PO  = POMxx                                                               ERV    155
      POA = POMxx                                                               ERV    156
c                                                                               ERV    157
c********************** run function : ECONO-1 *********************            ERV    158
      IF( MSYSF(30) .ne. 0 )    CALL  FINTS( MSYSF(30), 1. )                    ERV    159
c*******************************************************************            ERV    160
c                                                                               ERV    161
c              Skip if no outside air allowed                                   ERV    162
      IF (PO .EQ. 0.)  THEN                                                     ERV    163
        TM  = TR                                                                ERV    164
        GOTO 600                                                                ERV    165
      ENDIF                                                                     ERV    166
c                                                                               ERV    167
c              Check if economizer schedule allows operation                    ERV    168
      IF (SchSnap(1, <ECONO-SCHEDULE>, DBT, 1.) .EQ. 1.)  THEN                  ERV    169
c              Check if economizer operation enabled                            ERV    170
        SELECT CASE (<OA-CONTROL>)                                              ERV    171
          CASE (0)  ! Fixed                                                     ERV    172
          CASE (1)  ! OA Temperature                                            ERV1     1
            Call MixedAirCtrl                                                   -048    17
          CASE (2)  ! OA Enthalpy                                               ERV1     3
            Call MixedAirCtrl                                                   -048    18
          CASE (3)  ! Dual Temperature                                          ERV1     5
            IF (DBT .LE. TR-<sy:DUAL-TEMP-DT>)  Call MixedAirCtrl               -048    19
          CASE (4)  ! Dual Enthalpy                                             ERV1     7
            Hreturn = H(TR, <PASTWR>)                                           ERV1     8
            IF (ENTHAL .LE. Hreturn-<sy:DUAL-ENTH-DH>)                          ERV1     9
     &                                          Call MixedAirCtrl               -048    20
        END SELECT  ! OA-CONTROL                                                ERV    183
      ENDIF  ! SchSnap                                                          ERV    184
c                                                                               ERV    185
c              Mixed-air temperature                                            ERV    186
      TM = PO*DBT + (1.-PO)*TR                                                  ERV    187
c                                                                               ERV    188
c              For EVAP-COOL, PO stays at 1.0 above TAPP                        -044e4   1
      IF (ICODE .EQ. 26  .AND.  DBT .GE. TAPP)  PO = 1.0                        -044e4   2
c                                                                               ERV    191
c********************** run function : ECONO-2 *********************            ERV    192
      IF( MSYSF(101) .ne. 0 )    CALL  FINTS( MSYSF(101), 2. )                  ERV    193
c*******************************************************************            ERV    194
c                                                                               ERV    195
c              Check for air from another system                                ERV    196
      CALL FRMSYS(DBIN0,WIN0,WBIN0)                                             ERV    197
c                                                                               ERV    198
c               Check for exhaust air heat recovery                             ERV    199
      IF (<sy:RECOVER-EXH> .EQ. 1)                                              Bug40   10
     &  CALL ERVentilator(30, <sy;ERVentilator>, PO, POMxx, TAPP,               ERV    201
     &                                               DBIN0, WIN0, dTmix)        ERV    202
c                                                                               ERV    203
c              Set dry bulb and humidity ratio used in the moisture             ERV    204
c              balance calculations                                             ERV    205
      WOA  = WIN0                                                               ERV    206
      DBOA = DBIN0                                                              ERV    207
      POA  = PO                                                                 ERV    208
c                                                                               ERV    209
c********************** run function : ECONO-3 *********************            ERV    210
      IF( MSYSF(102) .ne. 0 )    CALL  FINTS( MSYSF(102), 3. )                  ERV    211
c*******************************************************************            ERV    212
c                                                                               ERV    213
c              Check for desiccant unit.  If operating, POA, WOA and            ERV    214
c              DBOA are reset inside DESCPF.  Only run if not full              ERV    215
c              economizer mode.                                                 ERV    216
      IF (<DESICCANT> .GT. 0  .AND.                                             ERV    217
     &                            (POA .EQ. POMxx  .OR.  TM .GT. TAPP))         ERV    218
     &  CALL DESCPF(ICALL,DBIN0,WIN0)                                           ERV    219
c                                                                               ERV    220
c              Check for evaporative precooling                                 ERV    221
      IF (<EVAP-CL-TYPE> .GT. 0  .AND.  ICODE .NE. 26)  THEN                    ERV    222
        CALL EVAPPF(ICALL,TAPP,DBIN0,WIN0,DBOUT,WOUT,PEVA)                      ERV    227
        DBOA = DBOUT                                                            ERV    228
        WOA  = WOUT                                                             ERV    229
        POA  = PEVA                                                             ERV    230
      ENDIF                                                                     ERV    231
c                                                                               ERV    232
c              Mixed air temperature                                            ERV    233
      TM = POA*DBOA + (1.-POA)*TR                                               ERV    234
c              When deviation is less than 0.2F from setpoint, set to           PV2      2
c              setpoint.  Otherwise mechanical equipment will run at            PV2      3
c              unrealistically small loads.                                     PV2      4
      IF (ABS(TM-TAPP) .LT. 0.2  .and.  EconoOnly .eq. 0.)  TM = TAPP           -044e1   2
c              adjust for fan heat penalty of ERV                               ERV    235
      IF (<sy;ERVentilator> .GT. 0)  TM = TM + dTmix                            ERV    236
  600 CONTINUE                                                                  ERV    237
c                                                                               ERV    238
      IF( MSYSF(103) .EQ. 0 )  RETURN                                           ERV    239
c********************** run function : ECONO-4 *********************            ERV    240
           CALL  FINTS( MSYSF(103), 4. )                                        ERV    241
c*******************************************************************            ERV    242
c                                                                               ERV    243
      RETURN                                                                    ERV    244
c                                                                               ERV    245
c                                                                               ERV    246
      CONTAINS                                                                  -048    21
c=============== MixedAirCtrl ================================================= -048    22
      SUBROUTINE MixedAirCtrl                                                   -048    23
c                                                                               ERV    249
c              Simulates a mixed-air temperature controller                     ERV    250
c                                                                               ERV    251
c              Check if needed                                                  ERV1    11
      IF (TR .LE. TAPP)  Return                                                 -048    24
c              Check for hi/low limits                                          ERV1    13
c                - high OA temperature                                          ERV1    14
      IF (<ECONO-LIMIT-T> .NE. UNFILD                                           ERV1    15
     &                        .AND.  DBT .GT. <ECONO-LIMIT-T>)    Return        -048    25
c                - low OA temperature                                           ERV1    17
      IF (<ECONO-LOW-LIMIT> .NE. UNFILD                                         ERV1    18
     &                        .AND.  DBT .LT. <ECONO-LOW-LIMIT>)  Return        -048    26
c                - high OA enthalpy                                             ERV1    20
      IF (<ENTHALPY-LIMIT> .NE. UNFILD                                          ERV1    21
     &                      .AND.  ENTHAL .GT. <ENTHALPY-LIMIT>)  Return        -048    27
c                - high OA humidity ratio                                       ERV1    23
      IF (<sy:ECONO-MAX-W> .NE. UNFILD                                          ERV1    24
     &                      .AND.  HUMRAT .GT. <sy:ECONO-MAX-W>)  Return        -048    28
c                                                                               ERV1    26
c              Economizer enabled                                               ERV1    27
c              Required and maximum mixed-air temperature drop                  ERV1    28
      dTreqd = TR - TAPP                                                        ERV1    29
      dTmax  = TR - DBT                                                         ERV1    30
c              reqd OA fraction to meet setpoint                                ERV1    31
      IF (dTmax .GT. dTreqd)  THEN                                              ERV1    32
        PO = dTreqd / dTmax                                                     ERV1    33
      ELSE                                                                      ERV1    34
        PO = 1.0                                                                ERV1    35
      ENDIF                                                                     ERV1    36
c                                                                               ERV1    37
c              Minimum mixed-air humidity ratio override                        ERV1    38
      IF (<sy:ECONO-MIN-W> .NE. UNFILD)  THEN                                   ERV1    39
        WM = PO*HUMRAT + (1.-PO)*<PASTWR>                                       ERV1    40
        IF (WM .LT. <sy:ECONO-MIN-W>)  THEN                                     ERV1    41
          dWreqd = <PASTWR> - <sy:ECONO-MIN-W>                                  ERV1    42
          IF (dWreqd .LT. 0.)  THEN                                             ERV1    43
            PO = POMxx                                                          ERV1    44
          ELSE                                                                  ERV1    45
            dWmax = <PASTWR> - HUMRAT                                           ERV1    46
            IF (dWmax .LT. 0.)  THEN                                            ERV1    47
              PO = POMxx                                                        ERV1    48
            ELSE                                                                ERV1    49
              POw = dWreqd / dWmax                                              ERV1    50
              PO  = MIN(POw, PO)                                                ERV1    51
            ENDIF                                                               ERV1    52
          ENDIF                                                                 ERV1    53
        ENDIF                                                                   ERV1    54
      ENDIF  ! sy:ECONO-MIN-W                                                   ERV1    55
c                                                                               ERV1    56
c              Adjust by outside air limits, minimum and maximum                ERV1    57
      PO = MIN(1., MAX(POMxx, PO))                                              ERV1    58
      IF (<MAX-OA-FRACTION> .GT. 0.)  THEN                                      ERV1    59
        POmax = <MAX-OA-FRACTION> * <SUPPLY-CFM>*CFMCYC/(CFM+1.E-5)             ERV1    60
        PO    = MIN(POmax, PO)                                                  ERV1    61
      ENDIF                                                                     ERV1    62
c                                                                               ERV1    63
c              Check if economizer operation integrated with compressor         ERV1    64
      IF (<ECON-LOCKOUT> .eq. 1  .and.  CON .gt. 0.                             -044e1   3
     &                           .and.  EconoOnly .eq. 0.) THEN                 -044e1   4
        TM = PO*DBT + (1.-PO)*TR                                                ERV1    66
c              do not force cooling to run with unrealistically                 -044e1   5
c              small load                                                       -044e1   6
        IF (TM .gt. TAPP+0.2)  PO = POMxx                                       -044e1   7
      ENDIF                                                                     ERV1    68
c                                                                               ERV    302
      END Subroutine MixedAirCtrl                                               -048    29
c                                                                               ERV    304
      END                                                                       ECONO  244
      SUBROUTINE ERVentilator(Mode, Jrv, OAfrac, OAerv, TMreqd,                 ERVnt    2
     &                                             Toa, Woa, dTmix)             ERVnt    3
c                                                                               ERVnt    4
c              Simulates an air-to-air sensible and/or latent energy            ERVnt    5
c              recovery ventilator (ERV)                                        ERVnt    6
c                                                                               ERVnt    7
c              Mode     Calling mode                                            ERVnt    8
c              Jrv      Pointer to energy recovery ventilator                   ERVnt    9
c              OAfrac   Fraction of supply flow thru ERV and economizer         ERVnt   10
c              OAerv    Fraction of supply flow thru ERV only                   ERVnt   11
c              TMreqd   Desired mixed air temperature                           ERVnt   12
c              Toa      Drybulb temperature supplied to HVAC system             ERVnt   13
c              Woa      Humidity ratio supplied to HVAC system                  ERVnt   14
c              dTmix    Fan heat penalty added to mixed-air temperature         ERVnt   15
c                                                                               ERVnt   16
C              DEVELOPED BY                                                     -130    15
C                            J. J. Hirsch & S. D. Gates                         -130    16
C                            James J. Hirsch & Associates                       -130    17
C                            Camarillo, California                              -130    18
C                                                                               -130    19
Copyright (c) 1997 by James J. Hirsch. All Rights Reserved. Unpublished         -130    20
c rights reserved under the Copyright Laws of the United States.                -130    21
c RESTRICTED RIGHTS NOTICE: Government use, reproduction or disclosure          -130    22
c is subject to restrictions as set forth in Rights in Data (g)(3) in           -130    23
c UC/LBL purchase order 4607010 with J.J. Hirsch & Associates.                  -130    24
C                                                                               -130    25
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON /DDSDAT/ FONh, SFKWh, DTSh, CFMRATh, FONNGTh, RCFMmix,             /DDSDAT/ 2
     1                RfanCFM, EXFIL, DTDUCT, DTDUCTh, TCDFSR, THDFSR,          /DDSDAT/ 3
     2                CFMINh, CFMINc, CFMINhm, CFMINcm, CFMINt,                 /DDSDAT/ 4
     3                TCMINcoil, THMAXcoil, IWarmestZ, IColdestZ                /DDSDAT/ 5
      DIMENSION       DDSDAT(21)                                                /DDSDAT/ 6
      EQUIVALENCE     (DDSDAT(1), FONh)                                         /DDSDAT/ 7
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                 IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                        /FILES/  3
     2               , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                   /FILES/  4
     3                 IHRREP(3), IHRPAS(2)                                     /FILES/  5
      COMMON  /MISCD / TEMPS(4,9999),CONS(5),TEMPSL(9999),                      -048a   10
     1                 BLDGQH,BLDGQC,BLDGQL,BLDGP,BPMULT,                       /MISCD/  3
     $                 DBTMIN,DBTMAX,WMIN,WMAX,NSPZ(9999),                      -048a   11
     3                 DQ, DTP, DTR, DTS, FPI, PLRCC , POM, TC2, TDM,           /MISCD/  5
     4                 TRA,WCOL,WCOLM,WMM,YPI,KWBTU,BTUKW,UNFILD,Unusedm        RemPA   45
      REAL             KWBTU                                                    /MISCD/  7
      COMMON  /PTRPLT/ Ipm,Ilp,Ich,Ibl,Idw,Itw,Ipv,Ign,Itk,Ihx,                 PV       1
     &                 Iec,Ilm,Iem,Ifm,Ism,Icm,Imm,Imc,Igl,Isp2,                XFC2     1
     &                 Ispare(5),  Ipe,                                         HVAC19   3
     &                 Npm,Nlp,Nch,Nbl,Ndw,Ntw,Npv,Ngn,Ntk,Nhx,                 PV       2
     &                 Nec,Nlm,Nem,Nfm,Nsm,Ncm,Nmm,Nmc,Ngl,Nsp2,                XFC2     2
     &                 Nspare(5),  Npe,                                         HVAC19   6
     &                 Lpm,Llp,Lch,Lbl,Ldw,Ltw,Lpv,Lgn,Ltk,Lhx,                 PV       3
     &                 Lec,Llm,Lem,Lfm,Lsm,Lcm,Lmm,Lmc,Lgl,Lsp2,                XFC2     3
     &                 Lspare(5),  Lpe,                                         HVAC19   9
     &                 Jpm,Jlp,Jch,Jbl,Jdw,Jtw,Jpv,Jgn,Jtk,Jhx,                 PV       4
     &                 Jec,Jlm,Jem,Jfm,Jsm,Jcm,    Jmc,Jgl,                     HVAC19  11
     &                 Jpe, kpr, NumMeters, NumIntHX                            XFC1     1
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      COMMON  /REPRT1/ IREFG, Iuniq                                             XFC1     2
      COMMON  /SYSTD / TH,TC,TM,TR,QH,QC,QHZ,QCZ,QHB,QHP,QHUM,                  /SYSTD/  2
     1                 QDHUM,TCMIN,THMAX,QLSUM,QPSUM,CFM,CFMH,CFMC,             /SYSTD/  3
     2                 RCFM,ECFM,CINF,FON,HON,CON,BON,SCONS(3),PH,PC,           /SYSTD/  4
     3                 SKW,FANKW,unused1,WR,WM,WCOIL,WW,PO,D,                   -046f    1
     4                 FTEMP,TCR,QHR,RfanPumpKW,SGAS,SKWQH,SKWQC,QCLAT,         -131    23
     5                 SFKW,RFKW,FONNGT,WSURF,RWalkinQ,TSURF,TRh,               -131    24
     6                 CBF,CBF1,CBF2,EON,PLRCFM,PLRC,PLRH,QCM1,                 /SYSTD/  8
     7                 QCM2,QHM1,EIRM1,EIRM2,EIR,OFKW,QCT,QCS,                  /SYSTD/  9
     8                 WRMAX,WRMIN,CFMRAT,QdistG,QdistL,RON,QHT,                /SYSTD/ 10
     9                 TPOMIN,POMIN,QHSUP,QRSENS,QRLAT,QRREC,QRREJ,             /SYSTD/ 11
     1                 RCOMKW,RDEFKW,RAUXKW,ECFMP,CFMIN,CINFP,DT,DW,            /SYSTD/ 12
     2                 EWB,IC,NATTSP,Q,RETR,SLOAD,QLSUMP,T,TCHUM,TEND,          /SYSTD/ 13
     3                 TS,hgbmin,HPDefE,EconoOnly,TDuctEnv,                     -044e1   1
     4                 QCUNMT,CapRh,CapRph,CapRc                                HVAC25   3
      REAL             SYSTD(113)                                               HVAC19  13
      EQUIVALENCE      (SYSTD(1),TH)                                            RemPA   65
      COMMON  /TIME  / IDOY, IYR, IMO, IDAY, IHR,                               Time     4
     &                 ISCMO, ISCDAY, ISCHR, IDOW, ISCDOW, iDSdates(6),         -044e5   1
     &                 iTimeFlg, iDSFlg, iDDFlg, InitialFlg, LeapYr,            Time     6
     &                 CLOCK(10), MONDSC(13), MONLEN(12), MONSDA(12)            HR      12
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
c                                                                               ERVnt   28
      REAL    NTU, NTUmax, NTUmin                                               ERVnt   29
      INTEGER TitleSSERV(9), Blank3(3), CapCtrl                                 ERVnt   30
      DATA    TitleSSERV /4HERV , 4HEner, 4Hgy R, 4Hecov,                       ERVnt   31
     &                    4Hery , 4HSumm, 4Hary , 4Hfor:, 4H    /               ERVnt   32
      DATA    Blank3     /4H    , 4H    , 4H    /                               ERVnt   33
      DATA    ModeOff, ModeHeat, ModeCool /0, 1, 2/                             ERVnt   34
      SAVE    LenHrZero, LenMoZero                                              ERVnt   35
c                                                                               ERVnt   36
      H(DB,W) = 0.24*DB + (1061.0+0.444*DB)*W                                   H        2
c                                                                               ERVnt   38
c                                                                               ERVnt   39
      SELECT CASE (Mode)                                                        ERVnt   40
c                                                                               ERVnt   41
c                                                                               ERVnt   42
c ============ HOURLY INITIALIZATION ========================================== ERVnt   43
      CASE (10)                                                                 ERVnt   44
c                                                                               ERVnt   45
      CALL FILLN(0., <rv.HrZeroStart..>, LenHrZero)                             ERVnt   46
c                                                                               ERVnt   47
c                                                                               ERVnt   48
c ============ HOURLY SIMULATION - PERFORMANCE ================================ ERVnt   49
      CASE (30)                                                                 ERVnt   50
c                                                                               ERVnt   51
      CALL FILLN(0., <rv.HrZeroStart..>, LenHrZero)                             ERVnt   52
c                                                                               ERVnt   53
c               Skip if HVAC fans off                                           ERVnt   54
      IF (FON .EQ. 0.  .OR.  OAfrac .EQ. 0.)  RETURN                            ERVnt   55
c                                                                               ERVnt   56
c                                                                               ERVnt   57
c              Outdoor and exhaust airflows thru ERV                            ERVnt   58
      <rv;CFMoa>  = CFM * OAerv                                                 ERVnt   59
      <rv;CFMexh> = Max(0., <rv;CFMoa> - EXFIL)                                 -042     6
c                                                                               ERVnt   61
      TMset    = TMreqd                           ! Mixed-air setpoint          ERVnt   62
      ToaHXi   = Toa                              ! HX oa inlet T               ERVnt   63
      TexhHXi  = TR                               ! HX exhaust inlet T          ERVnt   64
      dTmix    = 0.                               ! Fan dT in mixed air         ERVnt   65
      TsurfOld = -88888.                                                        ERVnt   66
c                                                                               ERVnt   67
c              Fan power, supply and exhaust.  Note that purge is               ERVnt   68
c              allowed only for ERVs with self-contained fans.                  ERVnt   69
      IF (<rv:FAN-CONFIG> .EQ. 1)  THEN                                         ERVnt   70
c              ERV relies on HVAC supply/return fans.  First, pressure          ERVnt   71
c              drops thru ERV media                                             ERVnt   72
        dPoa  = <rv:OA-STATIC>                                                  ERVnt   73
     &              * (<rv;CFMoa>/<rv;CFMoaDes>)**<rv:STATIC-EXP>               ERVnt   74
        dPexh = <rv:EXH-STATIC>                                                 ERVnt   75
     &              * (<rv;CFMexh>/<rv;CFMexhDes>)**<rv:STATIC-EXP>             ERVnt   76
        IF (<RETURN-KW> .GT. 0.  .AND.  RCFM .GT. 0.)  THEN                     ERVnt   77
c              put exhaust penalty on return fan, adjust return temp            ERVnt   78
c              for fan heat                                                     ERVnt   79
          <rv;kWexh> = RCFM * dPexh * <rv;RetkW/CFMdP>                          ERVnt   80
          dTfan      = <rv;kWexh> * BtuKW / (CONS(1) * RCFM)                    ERVnt   81
          TexhHXi    = TexhHXi + dTfan                                          ERVnt   82
        ELSE                                                                    ERVnt   83
c              put exhaust penalty on supply fan                                ERVnt   84
          dPoa  = dPoa + dPexh                                                  ERVnt   85
          dPexh = 0.                                                            ERVnt   86
        ENDIF                                                                   ERVnt   87
c              supply fan                                                       ERVnt   88
        IF (<DDS-TYPE> .NE. 2)  THEN                                            ERVnt   89
c              all single-fan systems, kW penalty and fan heat                  ERVnt   90
          <rv;kWoa>  = CFM  * dPoa * <rv;SupkW/CFMdP>                           ERVnt   91
          dTmix      = <rv;kWoa> * BtuKW / (CONS(1) * CFM)                      ERVnt   92
          TMset      = TMset - dTmix                                            ERVnt   93
        ELSE                                                                    ERVnt   94
c              dual-fan dual-duct system - put penalty on cold deck fan         ERVnt   95
          <rv;kWoa>  = CFMC * dPoa * <rv;SupkW/CFMdP>                           ERVnt   96
          dTmix      = <rv;kWoa> * BtuKW / (CONS(1) * CFMC)                     ERVnt   97
          TMset      = TMset - dTmix                                            ERVnt   98
        ENDIF                                                                   ERVnt   99
      ELSE                                                                      ERVnt  100
c              ERV has self-contained fans - assume OA fan is on inlet          ERVnt  101
c              side of hx, exhaust is on outlet side.  Therefore, OA fan        ERVnt  102
c              heat raises OA temperature, while exhaust has no effect.         ERVnt  103
c              First, exhaust fan                                               ERVnt  104
        CFMexh     = <rv;CFMexh> + <rv;CFMpurge>                                -041h    1
        PLR        = CFMexh / <rv;CFMexhDes>                                    -041h    2
        <rv;kWexh> = <rv;kWexhDes> * CVAL(<rv:FAN-KW-FFLOW>,PLR,PLR)            ERVnt  107
c              repeat for OA fan, kW and adjustment for fan heat                ERVnt  108
        CFMoa      = <rv;CFMoa> + <rv;CFMpurge>                                 -041h    3
        PLR        = CFMoa / <rv;CFMoaDes>                                      -041h    4
        <rv;kWoa>  = <rv;kWoaDes> * CVAL(<rv:FAN-KW-FFLOW>,PLR,PLR)             ERVnt  111
        dTfan      = <rv;kWoa> * BtuKW / (CONS(1) * CFMoa)                      -041h    5
        ToaHXi     = ToaHXi + dTfan                                             ERVnt  113
      ENDIF                                                                     ERVnt  114
c                                                                               ERVnt  115
c              Required ERV outlet temperature to achieve desired               ERVnt  116
c              mixed-air temperature                                            ERVnt  117
      <rv;TervReqd> = (TMset                                                    ERVnt  118
     &             - ((1.-OAfrac)*TexhHXi + (OAfrac-OAerv)*Toa)) / OAerv        ERVnt  119
c              Actual outlet setpoint                                           ERVnt  120
      SELECT CASE (<rv:TEMP-CTRL>)                                              ERVnt  121
        CASE (0)  ! Floating                                                    ERVnt  122
          TervSetpt = <rv;TervReqd>                                             -041h    6
          CapCtrl   = 0                                                         ERVnt  124
        CASE (1)  ! Fixed setpoint                                              ERVnt  125
          IF (TMreqd .GT. TexhHXi)  THEN          ! AHU in heating mode         ERVnt  126
            TervSetpt = <rv:OA-HEAT-SETPT>                                      ERVnt  127
          ELSE                                    ! AHU in cooling mode         ERVnt  128
            TervSetpt = <rv:OA-COOL-SETPT>                                      ERVnt  129
          ENDIF                                                                 ERVnt  130
          CapCtrl = <rv:CAP-CTRL>                                               ERVnt  131
        CASE (2)  ! Mixed air reset                                             ERVnt  132
          TervSetpt = <rv;TervReqd>                                             ERVnt  133
          CapCtrl   = <rv:CAP-CTRL>                                             ERVnt  134
      END SELECT                                                                ERVnt  135
c                                                                               ERVnt  136
c              Desired control mode                                             ERVnt  137
      IF (<rv:TEMP-CTRL> .eq. 0)  THEN         ! floating                       -041h    7
        IF (Toa .LT. TexhHXi)  THEN                                             -041h    8
          <rv;CtrlMode> = ModeHeat                                              -041h    9
        ELSE                                                                    -041h   10
          <rv;CtrlMode> = ModeCool                                              -041h   11
        ENDIF                                                                   -041h   12
      ELSEIF (TervSetpt .GT. Toa)  THEN        ! ERV should heat OA             -041h   13
        IF (Toa .LT. TexhHXi)  THEN                                             ERVnt  139
          <rv;CtrlMode> = ModeHeat                                              ERVnt  140
        ELSE                                                                    ERVnt  141
          <rv;CtrlMode> = ModeOff                                               ERVnt  142
        ENDIF                                                                   ERVnt  143
      ELSE                                     ! ERV should cool OA             ERVnt  144
        IF (Toa .GT. TexhHXi)  THEN                                             ERVnt  145
          <rv;CtrlMode> = ModeCool                                              ERVnt  146
        ELSE                                                                    ERVnt  147
          <rv;CtrlMode> = ModeOff                                               ERVnt  148
        ENDIF                                                                   ERVnt  149
      ENDIF                                                                     ERVnt  150
c                                                                               ERVnt  151
c               Check if ERV active                                             ERVnt  152
      SELECT CASE (<rv:RUN-CTRL>)                                               ERVnt  153
        CASE (1)  ! When fan on                                                 ERVnt  154
          RON = 1.                                                              ERVnt  155
        CASE (2)  ! When OA at minimum                                          ERVnt  156
          IF (OAfrac .GT. OAerv)  THEN                                          ERVnt  157
            RON = 0.                                                            ERVnt  158
          ELSE                                                                  ERVnt  159
            RON = 1.                                                            ERVnt  160
          ENDIF                                                                 ERVnt  161
        CASE (3)  ! Scheduled                                                   ERVnt  162
          RON = SchVal(<rv:SCHEDULE>, 1.)                                       ERVnt  163
        CASE (4)  ! Delta-T                                                     ERVnt  164
          dT = TR - Toa                                                         ERVnt  165
          IF (ABS(dT) .LT. <rv:OA-EXHAUST-DT>)  THEN                            ERVnt  166
            RON = 0.                                                            ERVnt  167
          ELSE                                                                  ERVnt  168
            RON = 1.                                                            ERVnt  169
            IF (<rv;CtrlMode> .EQ. ModeHeat)  THEN       ! heating mode         ERVnt  170
              IF (<rv:RECOVERY-MODE> .EQ. ModeCool                              ERVnt  171
     &                       .OR.  dT .LT. 0.)  RON = 0.                        ERVnt  172
            ELSE                                         ! cooling mode         ERVnt  173
              IF (<rv:RECOVERY-MODE> .EQ. ModeHeat                              ERVnt  174
     &                       .OR.  dT .GT. 0.)  RON = 0.                        ERVnt  175
            ENDIF                                                               ERVnt  176
          ENDIF                                                                 ERVnt  177
        CASE (5)  ! Delta-H                                                     ERVnt  178
          Hreturn = H(TR,  <PASTWR>)                                            ERVnt  179
          Hoa     = H(Toa, Woa)                                                 ERVnt  180
          dH      = Hreturn - Hoa                                               ERVnt  181
          IF (ABS(dH) .LT. <rv:OA-EXHAUST-DH>)  THEN                            ERVnt  182
            RON = 0.                                                            ERVnt  183
          ELSE                                                                  ERVnt  184
            RON = 1.                                                            ERVnt  185
            IF (<rv;CtrlMode> .EQ. ModeHeat)  THEN       ! heating mode         ERVnt  186
              IF (<rv:RECOVERY-MODE> .EQ. ModeCool                              ERVnt  187
     &                       .OR.  dH .LT. 0.)  RON = 0.                        ERVnt  188
            ELSE                                         ! cooling mode         ERVnt  189
              IF (<rv:RECOVERY-MODE> .EQ. ModeHeat                              ERVnt  190
     &                       .OR.  dH .GT. 0.)  RON = 0.                        ERVnt  191
            ENDIF                                                               ERVnt  192
          ENDIF                                                                 ERVnt  193
      END SELECT  ! rv:RUN-CTRL                                                 ERVnt  194
c                                                                               -042     7
      IF (<rv;CFMoa> .EQ. 0.  .OR.  <rv;CtrlMode> .EQ. 0)  RON = 0.             -042     8
      IF (RON .NE. 0.  .AND.  <rv;CFMexh> .EQ. 0.)  THEN                        -042     9
c              No exhaust flow - issue warning                                  -042    10
        RON = 0.                                                                -042    11
        IF (<rv;NoExhaustFlag> .EQ. 0)  THEN                                    -042    12
          <rv;NoExhaustFlag> = 1                                                -042    13
          CALL MSGSIM(-2,II,II,II,II)                                           -042    14
          WRITE (IOUTPT, 9105) (<SYSTEM-NAME>,II=1,8),                          -042    15
     &                         IMO, IDAY, IHR                                   -042    16
        ENDIF                                                                   -042    17
      ENDIF                                                                     -042    18
c              Skip if recovery not allowed                                     -042    19
      IF (RON .EQ. 0.)  THEN                                                    -042    20
        <rv;CtrlMode> = 0                                                       -042    21
        RETURN                                                                  -042    26
      ENDIF                                                                     -042    27
c              Warn if low exhaust flow                                         -042    28
      IF (<rv;CFMoa>*0.5 .GT. <rv;CFMexh>)  THEN                                -042    29
        IF (<rv;LowExhaustFlg> .EQ. 0)  THEN                                    -042    30
          <rv;LowExhaustFlg> = 1                                                -042    31
          CALL MSGSIM(-3,II,II,II,II)                                           -042    32
          WRITE (IOUTPT, 9106) (<SYSTEM-NAME>,II=1,8),                          -042    33
     &      <rv;CFMoa>, <rv;CFMexh>, IMO, IDAY, IHR                             -042    34
        ENDIF                                                                   -042    35
      ENDIF                                                                     -042    36
c                                                                               ERVnt  205
c              ERV is running - adjust return temperature for return fan        ERVnt  206
c              heat penalty.  Mixed air will be adjusted for supply fan         ERVnt  207
c              heat penalty outside of this routine.                            ERVnt  208
      TR = TexhHXi                                                              ERVnt  209
c                                                                               ERVnt  210
c              Adjust airflow for a purge cycle.  Assume only half              ERVnt  211
c              the purge flow on the return side, as not all of the purge       ERVnt  212
c              heat gain can be recovered on the return due to the difference   ERVnt  213
c              in purge vs. return temperature                                  ERVnt  214
      CFMoa  = <rv;CFMoa>  + <rv;CFMpurge>                                      ERVnt  215
      CFMexh = <rv;CFMexh> + <rv;CFMpurge/2>                                    ERVnt  216
c                                                                               -041M    1
c              Limit indoor/outdoor humidities to 95%                           -041M    2
      WexhHXi = Wfunc(TexhHXi, 95., Patm)                                       -041M    3
      WexhHXi = Min(<PASTWR>, WexhHXi)                                          -041M    4
      WoaHXi  = Wfunc(ToaHXi, 95., Patm)                                        -041M    5
      WoaHXi  = Min(Woa, WoaHXi)                                                -042e    1
c                                                                               ERVnt  217
c              Initial preheat coil calculations                                ERVnt  218
      SELECT CASE (<rv:FROST-CTRL>)                                             ERVnt  219
        CASE (1,2)  ! OA or exhaust preheat                                     ERVnt  220
c              heating coil capacity ratio                                      ERVnt  221
          IF (<rv:PREHEAT-SOURC> .EQ. 2)  THEN                                  ERVnt  222
            Jlp   = <rv;PreheatLoop>                                            ERVnt  223
            CapRh = <lp;HCAP_RATIO>                                             ERVnt  224
          ELSE                                                                  ERVnt  225
            CapRh = 1.                                                          ERVnt  226
          ENDIF                                                                 ERVnt  227
          IF (<rv:FROST-CTRL> .EQ. 1)  THEN                                     ERVnt  228
c              Preheat OA                                                       ERVnt  229
            <rv;TairPreheat> = ToaHXi                                           ERVnt  230
            <rv;CairPreheat> = CONS(1) * CFMoa                                  ERVnt  231
            IF (<rv:PREHEAT-CTRL> .EQ. 1  .AND.                                 ERVnt  232
     &                         ToaHXi .LT. <rv:PREHEAT-T>)  THEN                ERVnt  233
c                 fixed setpoint control                                        ERVnt  234
              <rv;Qpreheat> = <rv;CairPreheat> *                                ERVnt  235
     &                                   (ToaHXi-<rv:PREHEAT-T>)                ERVnt  236
              <rv;Qpreheat> = MAX(<rv;Qpreheat>,                                ERVnt  237
     &                            <rv;QpreheatDes>*CapRh)                       ERVnt  238
              dT            = <rv;Qpreheat> / <rv;CairPreheat>                  ERVnt  239
              ToaHXi        = ToaHXi - dT                                       ERVnt  240
              <rv;WetCtrl>  = 1                                                 ERVnt  241
            ENDIF                                                               ERVnt  242
          ELSE                                                                  ERVnt  243
c              Preheat exhaust                                                  ERVnt  244
            <rv;TairPreheat> = TexhHXi                                          ERVnt  245
            <rv;CairPreheat> = CONS(1) * <rv;CFMexh>                            ERVnt  246
            IF (<rv:PREHEAT-CTRL> .EQ. 1  .AND.                                 ERVnt  247
     &                         TexhHXi .LT. <rv:PREHEAT-T>)  THEN               ERVnt  248
c                 fixed setpoint control                                        ERVnt  249
              <rv;Qpreheat> = <rv;CairPreheat> *                                ERVnt  250
     &                                 (TexhHXi-<rv:PREHEAT-T>)                 ERVnt  251
              <rv;Qpreheat> = MAX(<rv;Qpreheat>,                                ERVnt  252
     &                            <rv;QpreheatDes>*CapRh)                       ERVnt  253
              dT            = <rv;Qpreheat> / <rv;CairPreheat>                  ERVnt  254
              TexhHXi       = TexhHXi  - dT                                     ERVnt  255
              <rv;WetCtrl>  = 1                                                 ERVnt  256
            ENDIF                                                               ERVnt  257
          ENDIF                                                                 ERVnt  258
      END SELECT  ! rv:FROST-CTRL                                               ERVnt  259
c                                                                               ERVnt  260
c              Re-entry point when condensate/frost detected on HX and          ERVnt  261
c              control is active                                                ERVnt  262
 3010 CONTINUE                                                                  ERVnt  263
c                                                                               ERVnt  264
c              Sensible heat recovery                                           ERVnt  265
      CFMoa  = <rv;CFMoa>  + <rv;CFMpurge>                                      ERVnt  266
      UAoa   = <rv;UAfilmCoef>                    ! OA film cond                ERVnt  267
     &       * MAX(CFMoa, <rv;MinFlow>)                                         ERVnt  268
     &                    **<rv:SEN-FILM-EXP>                                   ERVnt  269
      Roa    = 1. / UAoa                          ! OA film res                 ERVnt  270
      CFMexh = <rv;CFMexh> + <rv;CFMpurge/2>                                    ERVnt  271
      UAexh  = <rv;UAfilmCoef>                    ! exh film cond               ERVnt  272
     &       * MAX(CFMexh, <rv;MinFlow>)                                        ERVnt  273
     &                    **<rv:SEN-FILM-EXP>                                   ERVnt  274
      Rexh   = 1. / UAexh                         ! exh film res                ERVnt  275
      Rhx    = Roa + <rv;Rmedia> + Rexh           ! HX res                      ERVnt  276
      UA     = 1. / Rhx                           ! HX sensible UA              ERVnt  277
      Coa    = CONS(1) * CFMoa                    ! OA cap                      ERVnt  278
      Cexh   = CONS(1) * CFMexh                   ! exh cap                     ERVnt  279
      Cmin   = MIN(Coa, Cexh)                                                   ERVnt  280
      Cmax   = MAX(Coa, Cexh)                                                   ERVnt  281
      C      = Cmin / Cmax                        ! capacity ratio              ERVnt  282
      NTU    = UA / Cmin                          ! transfer units              ERVnt  283
      Call Effectiveness                          ! HX effectiveness            -048    30
      Qsens  = eff * Cmin * (ToaHXi-TexhHXi)      ! heat transfered             ERVnt  285
      dToaHX = -Qsens/Coa                         ! OA deltaT                   ERVnt  286
      ToaHXo = ToaHXi + dToaHX                    ! OA leaving HX               ERVnt  287
      Terv   = ToaHXo                             ! OA leaving ERV              ERVnt  288
c                                                                               ERVnt  289
c              Adjust outlet temperature                                        ERVnt  290
c              for control mechanism                                            ERVnt  291
      <rv;PLRhx> = 1.                             ! full HX capacity            ERVnt  292
      SELECT CASE (<rv;CtrlMode>)                                               ERVnt  293
        CASE (0)                                                                ERVnt  294
c              No heat transfer is desired                                      ERVnt  295
          SELECT CASE (CapCtrl)                                                 ERVnt  296
            CASE (0)  ! None                                                    ERVnt  297
            CASE (1)  ! Trim economizer                                         ERVnt  298
              <rv;OAecono>   = 1. - OAerv         ! full economizer             ERVnt  299
              <rv;OAecono>   = MIN(<MAX-OA-FRACTION>-OAerv,<rv;OAecono>)        ERVnt  300
              <rv;OAecono>   = MAX(0., <rv;OAecono>)                            ERVnt  301
              OAfrac         = OAerv + <rv;OAecono>                             ERVnt  302
              Terv           = (Terv*OAerv + Toa*<rv;OAecono>) / OAfrac         ERVnt  303
            CASE (2:4)                                                          -043a1   1
              Call BypassERV                                                    -048    31
          END SELECT  ! CapCtrl                                                 ERVnt  318
c              Check for excess heating or cooling of supply air                ERVnt  319
          <rv;QHexcess> = MIN(0., Qsens)                                        ERVnt  320
          <rv;QCexcess> = MAX(0., Qsens)                                        ERVnt  321
        CASE (1)                                                                ERVnt  322
c              Outdoor air is being heated                                      ERVnt  323
          SELECT CASE (CapCtrl)                                                 ERVnt  324
            CASE (0)  ! None                                                    ERVnt  325
            CASE (1)  ! Trim economizer                                         ERVnt  326
              IF (Terv .GT. TervSetpt)  THEN      ! excess recovery             ERVnt  327
                IF (Toa .LT. TervSetpt)  THEN     ! trim economizer             ERVnt  328
                  <rv;OAecono> = (TervSetpt-Terv)*OAerv                         ERVnt  329
     &                                   / (Toa-TervSetpt)                      ERVnt  330
                ELSE                              ! full economizer             ERVnt  331
                  <rv;OAecono> = 1. - OAerv                                     ERVnt  332
                ENDIF                                                           ERVnt  333
                <rv;OAecono> = MIN(<MAX-OA-FRACTION>-OAerv,<rv;OAecono>)        ERVnt  334
                <rv;OAecono> = MAX(0., <rv;OAecono>)                            ERVnt  335
                OAfrac       = OAerv + <rv;OAecono>                             ERVnt  336
                Terv         = (Terv*OAerv+Toa*<rv;OAecono>) / OAfrac           ERVnt  337
              ENDIF                                                             ERVnt  338
            CASE (2)  ! Bypass OA around HX                                     ERVnt  339
              IF (Terv .GT. TervSetpt)  THEN      ! excess recovery             ERVnt  340
                IF (ToaHXi .LT. TervSetpt) THEN   ! partial OA bypass           ERVnt  341
                  Call BypassOA                                                 -048    32
                ELSE                              ! full OA bypass              ERVnt  343
                  Call BypassERV                                                -048    33
                ENDIF                                                           ERVnt  348
              ENDIF                                                             ERVnt  349
            CASE (3)  ! Bypass exhaust around HX                                ERVnt  350
              IF (Terv .GT. TervSetpt)  THEN      ! excess recovery             ERVnt  351
                IF (ToaHXi .LT. TervSetpt) THEN   ! partial exh bypass          ERVnt  352
                  Call BypassExh                                                -048    34
                ELSE                              ! full exh bypass             ERVnt  354
                  Call BypassERV                                                -048    35
                ENDIF                                                           ERVnt  359
              ENDIF                                                             ERVnt  360
            CASE (4)  ! Modulate HX                                             ERVnt  361
              IF (Terv .GT. TervSetpt)  THEN      ! excess recovery             ERVnt  362
                IF (ToaHXi .LT. TervSetpt) THEN   ! wheel modulates             ERVnt  363
                  Call WheelSpeed                                               -048    36
                ELSE                              ! wheel is off                ERVnt  365
                  Call BypassERV                                                -048    37
                ENDIF                                                           ERVnt  369
              ENDIF                                                             ERVnt  370
          END SELECT  ! CapCtrl                                                 ERVnt  371
c              Check for excess heating or cooling of supply air                ERVnt  372
          <rv;QHexcess> = Coa * MIN(0.,MAX(ToaHXi, <rv;TervReqd>)-Terv)         ERVnt  373
          <rv;QCexcess> = Coa * MAX(0., ToaHXi-Terv)                            ERVnt  374
        CASE (2)                                                                ERVnt  375
c              Outdoor air must be cooled                                       ERVnt  376
          SELECT CASE (CapCtrl)                                                 ERVnt  377
            CASE (0)  ! None                                                    ERVnt  378
            CASE (1)  ! Trim economizer                                         ERVnt  379
              IF (Terv .LT. TervSetpt)  THEN      ! excess recovery             ERVnt  380
                IF (Toa .GT. TervSetpt)  THEN     ! trim economizer             ERVnt  381
                  <rv;OAecono> = (TervSetpt-Terv)*OAerv                         ERVnt  382
     &                                   / (Toa-TervSetpt)                      ERVnt  383
                ELSE                              ! full economizer             ERVnt  384
                  <rv;OAecono> = 1. - OAerv                                     ERVnt  385
                ENDIF                                                           ERVnt  386
                <rv;OAecono> = MIN(<MAX-OA-FRACTION>-OAerv,<rv;OAecono>)        ERVnt  387
                <rv;OAecono> = MAX(0., <rv;OAecono>)                            ERVnt  388
                OAfrac       = OAerv + <rv;OAecono>                             ERVnt  389
                Terv         = (Terv*OAerv+Toa*<rv;OAecono>) / OAfrac           ERVnt  390
              ENDIF                                                             ERVnt  391
            CASE (2)  ! Bypass OA around HX                                     ERVnt  392
              IF (Terv .LT. TervSetpt)  THEN      ! excess recovery             ERVnt  393
                IF (ToaHXi .GT. TervSetpt) THEN   ! partial OA bypass           ERVnt  394
                  Call BypassOA                                                 -048    38
                ELSE                              ! full OA bypass              ERVnt  396
                  Call BypassERV                                                -048    39
                ENDIF                                                           ERVnt  401
              ENDIF                                                             ERVnt  402
            CASE (3)  ! Bypass exhaust around HX                                ERVnt  403
              IF (Terv .LT. TervSetpt)  THEN      ! excess recovery             ERVnt  404
                IF (ToaHXi .GT. TervSetpt) THEN   ! partial exh bypass          ERVnt  405
                  Call BypassExh                                                -048    40
                ELSE                              ! full exh bypass             ERVnt  407
                  Call BypassERV                                                -048    41
                ENDIF                                                           ERVnt  412
              ENDIF                                                             ERVnt  413
            CASE (4)  ! Modulate HX                                             ERVnt  414
              IF (Terv .LT. TervSetpt)  THEN      ! excess recovery             ERVnt  415
                IF (ToaHXi .GT. TervSetpt) THEN   ! wheel modulates             ERVnt  416
                  Call WheelSpeed                                               -048    42
                ELSE                              ! wheel is off                ERVnt  418
                  Call BypassERV                                                -048    43
                ENDIF                                                           ERVnt  422
              ENDIF                                                             ERVnt  423
          END SELECT  ! CapCtrl                                                 ERVnt  424
c              Check for excess heating or cooling of supply air                ERVnt  425
          <rv;QHexcess> = Coa * MIN(0., ToaHXi-Terv)                            ERVnt  426
          <rv;QCexcess> = Coa * MAX(0.,MIN(ToaHXi, <rv;TervReqd>)-Terv)         ERVnt  427
      END SELECT  ! rv;CtrlMode                                                 ERVnt  428
c                                                                               ERVnt  429
      <rv;effSensible> = eff                                                    ERVnt  430
      <rv;TexhHXo>     = TexhHXi + Qsens/Cexh                                   ERVnt  431
c              Surface temperature at OA and exhaust outlets                    ERVnt  432
      dTsurf           = (TexhHXi - ToaHXo) * Roa/Rhx                           ERVnt  433
      <rv;ToaHXos>     = ToaHXo + dTsurf                                        ERVnt  434
      dTsurf           = (ToaHXi-<rv;TexhHXo>) * Rexh/Rhx                       ERVnt  435
      <rv;TexhHXos>    = <rv;TexhHXo> + dTsurf                                  ERVnt  436
c                                                                               ERVnt  437
      IF (<rv:FROST-CTRL> .GT. 0)  THEN                                         ERVnt  438
c              Terms for frost control, if required later                       ERVnt  439
        Xexh = eff * Cmin / Cexh                                                ERVnt  440
        Xoa  = eff * Cmin / Coa                                                 ERVnt  441
        Yexh = Rexh / Rhx                                                       ERVnt  442
        Yoa  = Roa  / Rhx                                                       ERVnt  443
      ENDIF                                                                     ERVnt  444
c                                                                               ERVnt  445
c                                                                               ERVnt  446
c              Latent heat recovery                                             ERVnt  447
      IF (<rv:LATENT-EFF> .EQ. 0.  .OR.      <rv;PLRhx> .EQ. 0.  .OR.           ERVnt  448
     &      <rv;OAbypass> .EQ. 1.  .OR.  <rv;ExhBypass> .EQ. 1.)  THEN          ERVnt  449
        Werv          = WoaHXi                                                  -041M    7
        Qlat          = 0.                                                      -041M    8
        <rv;WexhHXi>  = WexhHXi                                                 -041M    9
        <rv;WoaHXos>  = WoaHXi                                                  -041M   10
        <rv;WexhHXos> = WexhHXi                                                 -041M   11
      ELSE                                                                      ERVnt  455
        UAoa    = <rv;FilmCoefLat>                ! OA film cond                ERVnt  456
     &          * MAX(CFMoa, <rv;MinFlow>)                                      ERVnt  457
     &                     **<rv:LAT-FILM-EXP>                                  ERVnt  458
        Roa     = 1. / UAoa                       ! OA film res                 ERVnt  459
        UAexh   = <rv;FilmCoefLat>                ! exh film cond               ERVnt  460
     &          * MAX(CFMexh, <rv;MinFlow>)                                     ERVnt  461
     &                     **<rv:LAT-FILM-EXP>                                  ERVnt  462
        Rexh    = 1. / UAexh                      ! exh film res                ERVnt  463
        Rmedia  = <rv;RmediaLat> / <rv;PLRhx>     ! media res                   ERVnt  464
        Rhx     = Roa + Rmedia + Rexh             ! HX res                      ERVnt  465
        UA      = 1. / Rhx                        ! HX latent "UA"              ERVnt  466
        Coa     = CONS(2) * CFMoa                 ! OA transport cap            ERVnt  467
        Cexh    = CONS(2) * CFMexh                ! exh transport cap           ERVnt  468
        Cmin    = MIN(Coa, Cexh)                                                ERVnt  469
        Cmax    = MAX(Coa, Cexh)                                                ERVnt  470
        C       = Cmin / Cmax                     ! capacity ratio              ERVnt  471
        NTU     = UA / Cmin                       ! transfer units              ERVnt  472
        Call Effectiveness                        ! HX effectiveness            -048    44
        Qlat    = eff * Cmin * (WoaHXi-WexhHXi)   ! latent heat                 -041M   12
        dWoaHX  = -Qlat/Coa                       ! OA deltaW                   -041M   13
        WoaHXo  = WoaHXi + dWoaHX                 ! supply humidity             -041M   14
        <rv;WexhHXo> = WexhHXi + Qlat/Cexh        ! exhaust humidity            -041M   15
c              Surface humidity at OA and exhaust outlets                       -041M   16
        dWsurf         = (WexhHXi - WoaHXo) * Roa/Rhx                           -041M   17
        <rv;WoaHXos>   = WoaHXo + dWsurf                                        -041M   18
        dWsurf         = (WoaHXi-<rv;WexhHXo>) * Rexh/Rhx                       -041M   19
        <rv;WexhHXos>  = <rv;WexhHXo> + dWsurf                                  ERVnt  482
        <rv;effLatent> = eff                                                    ERVnt  483
c              ERV outlet humidity adjusted for bypassed OA and                 ERVnt  484
c              economizer trim                                                  ERVnt  485
        Werv = WoaHXi*<rv;OAbypass> + WoaHXo * (1.-<rv;OAbypass>)               -041M   20
        IF (<rv;OAecono> .GT. 0.)                                               -041M   21
     &    Werv = (Werv*OAerv + WoaHXi*<rv;OAecono>) / OAfrac                    -041M   22
      ENDIF                                                                     ERVnt  489
c                                                                               ERVnt  490
c              Check for wet/frosted exhaust outlet                             ERVnt  491
      TexhDew = Dewpt(<rv;WexhHXos>, Patm)                                      ERVnt  492
      IF (<rv;TexhHXos> .LT. TexhDew-0.05  .AND.  <rv;PLRhx> .GT. 0.            ERVnt  493
     &     .AND.  <rv;OAbypass> .LT. 1.  .AND.  <rv;ExhBypass> .LT. 1.)         ERVnt  494
     &  <rv;WetExhCtrl> = 1                                                     ERVnt  495
      IF (<rv;WetExhCtrl> .GT. 0)  THEN                                         ERVnt  496
c              HX is wet, use anti-condensate control                           ERVnt  497
        SELECT CASE (<rv:FROST-CTRL>)                                           ERVnt  498
          CASE (1,2)  ! OA or exhaust preheat                                   ERVnt  499
            IF (<rv:PREHEAT-CTRL> .EQ. 2)  THEN                                 ERVnt  500
c                 variable setpoint control - calc setpoint                     ERVnt  501
              IF (<rv:FROST-CTRL> .EQ. 1)  THEN                                 ERVnt  502
c                 preheat OA                                                    ERVnt  503
                ToaHXi   = (TexhDew - TexhHXi*(1.-Yexh)*(1.-Xexh))              ERVnt  504
     &                                           / (Yexh+Xexh*(1.-Yexh))        ERVnt  505
                Qpreheat = <rv;CairPreheat>*(<rv;TairPreheat>-ToaHXi)           ERVnt  506
                Qpreheat = MAX(Qpreheat, <rv;QpreheatDes>*CapRh)                ERVnt  507
                dT       = Qpreheat / <rv;CairPreheat>                          ERVnt  508
                ToaHXi   = <rv;TairPreheat> - dT                                ERVnt  509
              ELSE  ! preheat exhaust                                           ERVnt  510
                TexhHXi  = (TexhDew - ToaHXi*(Yexh+Xexh*(1.-Yexh)))             ERVnt  511
     &                                           / ((1.-Yexh)*(1.-Xexh))        ERVnt  512
                Qpreheat = <rv;CairPreheat> * (<rv;TairPreheat>-TexhHXi)        ERVnt  513
                Qpreheat = MAX(Qpreheat, <rv;QpreheatDes>*CapRh)                ERVnt  514
                dT       = Qpreheat / <rv;CairPreheat>                          ERVnt  515
                TexhHXi  = <rv;TairPreheat> - dT                                ERVnt  516
              ENDIF                                                             ERVnt  517
              Qerror        = Qpreheat - <rv;Qpreheat>                          ERVnt  518
              <rv;Qpreheat> = Qpreheat                                          ERVnt  519
              IF (ABS(Qerror/Qpreheat) .GT. 0.01)  GOTO 3010                    ERVnt  520
            ENDIF  ! rv:PREHEAT-CTRL                                            ERVnt  521
          CASE (3)  ! OA bypass, exhaust bypass, or modulate hx                 ERVnt  522
            IF (<rv;TexhHXos> .lt. TexhDew-0.05) THEN                           -047k   44
              CapCtrl = <rv:CAP-CTRL>                                           -047k   45
              IF (ABS(<rv;TexhHXos>-TsurfOld) .GT. 0.05)  THEN                  -047k   46
                TsurfOld = <rv;TexhHXos>                                        -047k   47
                dT       = <rv;TexhHXos> - TexhDew                              -047k   48
                IF (CapCtrl .EQ. 3)  dT = -dT                                   -047k   49
                TervSetpt = Terv + dT                                           -047k   50
                TervSetpt = MAX(TervSetpt, ToaHXi+0.1)                          -047k   51
                GOTO 3010                                                       -047k   52
              ENDIF                                                             -047k   53
            ENDIF                                                               -047k   54
        END SELECT  ! rv:FROST-CTRL                                             ERVnt  533
      ENDIF  ! rv;WetCtrlFlag                                                   ERVnt  534
c                                                                               ERVnt  535
c              Check for wet/frosted OA outlet - this can only happen if        ERVnt  536
c              the exhaust is extremely cold, such as from a refrigerated       ERVnt  537
c              warehouse                                                        ERVnt  538
      ToaDew = Dewpt(<rv;WoaHXos>, Patm)                                        ERVnt  539
      IF (<rv;ToaHXos> .LT. ToaDew-0.05  .AND.  <rv;PLRhx> .GT. 0.              ERVnt  540
     &     .AND.  <rv;OAbypass> .LT. 1.  .AND.  <rv;ExhBypass> .LT. 1.)         ERVnt  541
     &  <rv;WetOACtrl> = 1                                                      ERVnt  542
      IF (<rv;WetOACtrl> .GT. 0)  THEN                                          ERVnt  543
c              HX is wet, use anti-condensate control                           ERVnt  544
        SELECT CASE (<rv:FROST-CTRL>)                                           ERVnt  545
          CASE (1,2)  ! OA or exhaust preheat                                   ERVnt  546
            IF (<rv:PREHEAT-CTRL> .EQ. 2)  THEN                                 ERVnt  547
c                 variable setpoint control - calc setpoint                     ERVnt  548
              IF (<rv:FROST-CTRL> .EQ. 1)  THEN                                 ERVnt  549
c                 preheat OA                                                    ERVnt  550
                ToaHXi   = (ToaDew - TexhHXi*(Yoa+Xoa*(1.-Yoa)))                ERVnt  551
     &                                             / ((1.-Yoa)*(1.-Xoa))        ERVnt  552
                Qpreheat = <rv;CairPreheat>*(<rv;TairPreheat>-ToaHXi)           ERVnt  553
                Qpreheat = MAX(Qpreheat, <rv;QpreheatDes>*CapRh)                ERVnt  554
                dT       = Qpreheat / <rv;CairPreheat>                          ERVnt  555
                ToaHXi   = <rv;TairPreheat> - dT                                ERVnt  556
              ELSE  ! preheat exhaust                                           ERVnt  557
                TexhHXi  = (ToaDew - ToaHXi*(1.-Yoa)*(1.-Xoa))                  ERVnt  558
     &                                            / (Yoa+Xoa*(1.-Yoa))          ERVnt  559
                Qpreheat = <rv;CairPreheat> * (<rv;TairPreheat>-TexhHXi)        ERVnt  560
                Qpreheat = MAX(Qpreheat, <rv;QpreheatDes>*CapRh)                ERVnt  561
                dT       = Qpreheat / <rv;CairPreheat>                          ERVnt  562
                TexhHXi  = <rv;TairPreheat> - dT                                ERVnt  563
              ENDIF                                                             ERVnt  564
              Qerror        = Qpreheat - <rv;Qpreheat>                          ERVnt  565
              <rv;Qpreheat> = Qpreheat                                          ERVnt  566
              IF (ABS(Qerror/Qpreheat) .GT. 0.01)  GOTO 3010                    ERVnt  567
            ENDIF  ! rv:PREHEAT-CTRL                                            ERVnt  568
          CASE (3)  ! OA bypass, exhaust bypass, or modulate hx                 ERVnt  569
            CapCtrl = <rv:CAP-CTRL>                                             ERVnt  570
            IF (ABS(<rv;ToaHXos>-TsurfOld) .GT. 0.05)  THEN                     ERVnt  572
              TsurfOld = <rv;ToaHXos>                                           ERVnt  573
              dT       = ToaDew - <rv;ToaHXos>                                  ERVnt  574
              IF (CapCtrl .EQ. 2)  dT = -dT                                     ERVnt  575
              TervSetpt = Terv + dT                                             -041M   24
              TervSetpt = MIN(TervSetpt, ToaHXi-0.1)                            ERVnt  577
              GOTO 3010                                                         ERVnt  578
            ENDIF                                                               ERVnt  579
        END SELECT  ! rv:FROST-CTRL                                             ERVnt  580
      ENDIF  ! rv;WetCtrlFlag                                                   ERVnt  581
c                                                                               ERVnt  582
c              Check for moisture after active condensation/frost control       ERVnt  583
      IF (<rv;PLRhx> .GT. 0.  .AND.  <rv;OAbypass> .LT. 1.  .AND.               ERVnt  584
     &                                    <rv;ExhBypass> .LT. 1.)  THEN         ERVnt  585
        IF (<rv;TexhHXos> .LT. TexhDew-0.05)  THEN                              -041h   17
c              Exhaust outlet is wet or frozen                                  ERVnt  587
          <rv;ExhWetFlag>  = 1                                                  ERVnt  588
          IF (<rv;TexhHXos> .LT. 32.)  <rv;ExhWetFlag> = 2                      ERVnt  589
        ENDIF                                                                   ERVnt  590
        IF (<rv;ToaHXos> .LT. ToaDew-0.05)  THEN                                -041h   18
c              OA outlet is wet or frozen                                       ERVnt  592
          <rv;OAWetFlag>  = 1                                                   ERVnt  593
          IF (<rv;ToaHXos> .LT. 32.)  <rv;OAWetFlag> = 2                        ERVnt  594
        ENDIF                                                                   ERVnt  595
      ENDIF                                                                     ERVnt  596
c                                                                               ERVnt  597
c              Store values                                                     ERVnt  598
      <rv;Qsensible> = Qsens                                                    ERVnt  599
      <rv;Qlatent>   = Qlat                                                     ERVnt  600
      <rv;TervSetpt> = TervSetpt                                                ERVnt  601
      <rv;Terv>      = Terv                                                     ERVnt  602
      <rv;Werv>      = Werv                                                     ERVnt  603
      <rv;ToaHXi>    = ToaHXi                                                   ERVnt  604
      <rv;WoaHXi>    = WoaHXi                                                   -041M   25
      <rv;ToaHXo>    = ToaHXo                                                   ERVnt  606
      <rv;WoaHXo>    = WoaHXo                                                   ERVnt  607
      <rv;TexhHXi>   = TexhHXi                                                  ERVnt  608
      <rv;WexhHXi>   = WexhHXi                                                  -041M   26
c                                                                               ERVnt  610
c              Pass back supply temperature and humidity                        ERVnt  611
      Toa = Terv                                                                ERVnt  612
      Woa = Werv                                                                ERVnt  613
c                                                                               ERVnt  614
c                                                                               ERVnt  615
c ============ HOURLY SIMULATION - ENERGY CONSUMPTION ========================= ERVnt  616
      CASE (31)                                                                 ERVnt  617
c                                                                               ERVnt  618
      IF (<rv;CtrlMode> .EQ. 0)  THEN                                           -043a1   9
        <rv;CFMoa>    = 0.                                                      -043a1  10
        <rv;CFMexh>   = 0.                                                      -043a1  11
        <rv;kWoa>     = 0.                                                      -043a1  12
        <rv;kWexh>    = 0.                                                      -043a1  13
        RETURN                                                                  -043a1  14
      ENDIF                                                                     -043a1  15
c                                                                               ERVnt  620
c              Fan energy                                                       ERVnt  621
      Jem       = <VENT-E-MS>                                                   ERVnt  622
      <em;VENT> = <em;VENT> + <rv;kWoa> + <rv;kWexh>                            ERVnt  623
      FANKW     = FANKW     + <rv;kWoa> + <rv;kWexh>                            ERVnt  624
      <SKW>     = <SKW>     + <rv;kWoa> + <rv;kWexh>                            ERVnt  625
c                                                                               ERVnt  626
c              Heat wheel motor                                                 ERVnt  627
      <rv;kWhx> = <rv;kWhxDes> * CVAL(<rv:HX-KW-FPLR>,<rv;PLRhx>,xx)            ERVnt  628
      Jem       = <AUX-E-MS>                                                    ERVnt  629
      <AUX-EM>  = <AUX-EM> + <rv;kWhx>                                          ERVnt  630
c                                                                               ERVnt  631
c              Anti-condensate heat                                             ERVnt  632
      IF (<rv;Qpreheat> .LT. 0.  .AND.  <rv:PREHEAT-SOURC> .EQ. 1)  THEN        ERVnt  633
c              Electric heat                                                    ERVnt  634
        <rv;kWpreheat> = -<rv;Qpreheat>*KWBTU                                   ERVnt  635
        <rv;Qpreheat>  = 0.                                                     ERVnt  636
        Jem            = <HEAT-E-MS>                                            ERVnt  637
        <em;HEAT>      = <em;HEAT> + <rv;kWpreheat>                             ERVnt  638
      ENDIF                                                                     ERVnt  639
c                                                                               ERVnt  640
c                                                                               ERVnt  641
c ============ HOURLY STATISTICS ============================================== ERVnt  642
      CASE (42)                                                                 ERVnt  643
c                                                                               ERVnt  644
      IF (<rv;CtrlMode> .EQ. 0)  RETURN                                         ERVnt  645
      IF (iDDFlg .GT. 0  .OR.  InitialFlg .GT. 0)  RETURN                       ERVnt  646
c                                                                               ERVnt  647
c              Hours exhaust outlet wet/frosted                                 ERVnt  648
      IF (<rv;ExhWetFlag> .EQ. 2)  THEN                                         ERVnt  649
        <rv;HrsExhFrost> = <rv;HrsExhFrost> + 1                                 ERVnt  650
        IF (<rv;HrsExhFrost> .EQ. 1)  THEN                                      ERVnt  651
          CALL MSGSIM(-2,II,II,II,II)                                           ERVnt  652
          WRITE (IOUTPT, 9101)  (<SYSTEM-NAME>,II=1,8),                         ERVnt  653
     &                 IMO, IDAY, IHR,                                          ERVnt  654
     &                 <rv;ToaHXi>, <rv;WoaHXi>, <rv;TexhHXi>, <PASTWR>         ERVnt  655
        ENDIF                                                                   ERVnt  656
      ELSEIF (<rv;ExhWetFlag> .EQ. 1)  THEN                                     ERVnt  657
        <rv;HrsExhWet> = <rv;HrsExhWet> + 1                                     ERVnt  658
        IF (<rv;HrsExhWet> .EQ. 1)  THEN                                        ERVnt  659
          CALL MSGSIM(-2,II,II,II,II)                                           ERVnt  660
          WRITE (IOUTPT, 9102)  (<SYSTEM-NAME>,II=1,8),                         ERVnt  661
     &                 IMO, IDAY, IHR,                                          ERVnt  662
     &                 <rv;ToaHXi>, <rv;WoaHXi>, <rv;TexhHXi>, <PASTWR>         ERVnt  663
        ENDIF                                                                   ERVnt  664
      ENDIF                                                                     ERVnt  665
c              Hours OA outlet wet/frosted                                      ERVnt  666
      IF (<rv;OAWetFlag> .EQ. 2)  THEN                                          ERVnt  667
        <rv;HrsOAFrost> = <rv;HrsOAFrost> + 1                                   ERVnt  668
        IF (<rv;HrsOAFrost> .EQ. 1)  THEN                                       ERVnt  669
          CALL MSGSIM(-2,II,II,II,II)                                           ERVnt  670
          WRITE (IOUTPT, 9103)  (<SYSTEM-NAME>,II=1,8),                         ERVnt  671
     &                 IMO, IDAY, IHR,                                          ERVnt  672
     &                 <rv;ToaHXi>, <rv;WoaHXi>, <rv;TexhHXi>, <PASTWR>         ERVnt  673
        ENDIF                                                                   ERVnt  674
      ELSEIF (<rv;OAWetFlag> .EQ. 1)  THEN                                      ERVnt  675
        <rv;HrsOAWet> = <rv;HrsOAWet> + 1                                       ERVnt  676
        IF (<rv;HrsOAWet> .EQ. 1)  THEN                                         ERVnt  677
          CALL MSGSIM(-2,II,II,II,II)                                           ERVnt  678
          WRITE (IOUTPT, 9104)  (<SYSTEM-NAME>,II=1,8),                         ERVnt  679
     &                 IMO, IDAY, IHR,                                          ERVnt  680
     &                 <rv;ToaHXi>, <rv;WoaHXi>, <rv;TexhHXi>, <PASTWR>         ERVnt  681
        ENDIF                                                                   ERVnt  682
      ENDIF                                                                     ERVnt  683
      <rv;HrsWetCtrl> = <rv;HrsWetCtrl> + <rv;WetCtrl>                          ERVnt  684
     &                + <rv;WetExhCtrl> + <rv;WetOACtrl>                        ERVnt  685
c                                                                               ERVnt  686
c              Values for SS-ERV                                                ERVnt  687
      <rv;QHsens>  = MIN(0., <rv;Qsensible>)                                    ERVnt  688
      <rv;QCsens>  = MAX(0., <rv;Qsensible>)                                    ERVnt  689
      <rv;QHtotal> = MIN(0., <rv;Qsensible>+<rv;Qlatent>)                       ERVnt  690
      <rv;QCtotal> = MAX(0., <rv;Qsensible>+<rv;Qlatent>)                       ERVnt  691
      <rv;kWtotal> = <rv;kWoa> + <rv;kWexh> + <rv;kWhx>                         ERVnt  692
c                                                                               ERVnt  693
      DO  II=1,9                                                                ERVnt  694
        X            = <rv;ReportVars>               ! hourly value             ERVnt  695
        <rv;TotalMo> = <rv;TotalMo> + X              ! monthly total            ERVnt  696
        IF (ABS(X) .GT. ABS(<rv;PeakMo>))  THEN                                 ERVnt  697
          <rv;PeakMo>   = X                          ! monthly peak             ERVnt  698
          <rv;PeakDyMo> = IDAY                       ! peak day                 ERVnt  699
          <rv;PeakHrMo> = ISCHR                      ! peak hour                ERVnt  700
        ENDIF                                                                   ERVnt  701
      ENDDO                                                                     ERVnt  702
c                                                                               ERVnt  703
      II = <rv;CtrlMode>                             ! heat/cool hours          ERVnt  704
      <rv;OperHoursMo> = <rv;OperHoursMo> + 1                                   ERVnt  705
c                                                                               ERVnt  706
c                                                                               ERVnt  707
c ============ MONTHLY STATISTICS ============================================= ERVnt  708
      CASE (45)                                                                 ERVnt  709
c                                                                               ERVnt  710
c              Yearly values for SS-ERV                                         ERVnt  711
      DO  II=1,9                                                                ERVnt  712
        <rv;TotalYr> = <rv;TotalYr> + <rv;TotalMo>   ! total                    ERVnt  713
        IF (ABS(<rv;PeakMo>)                                                    ERVnt  714
     &              .GT. ABS(<rv;PeakYr>))  THEN                                ERVnt  715
          <rv;PeakYr>   = <rv;PeakMo>                ! peak                     ERVnt  716
          <rv;PeakMoYr> = IMO                        ! month                    ERVnt  717
          <rv;PeakDyYr> = <rv;PeakDyMo>              ! hour                     ERVnt  718
        ENDIF                                                                   ERVnt  719
      ENDDO                                                                     ERVnt  720
c                                                                               ERVnt  721
      DO  II=1,2                                     ! heat/cool hours          ERVnt  722
        <rv;OperHoursYr> = <rv;OperHoursYr> + <rv;OperHoursMo>                  ERVnt  723
      ENDDO                                                                     ERVnt  724
c                                                                               ERVnt  725
c              Zero monthly values                                              ERVnt  726
      CALL FILLN (0., <rv.MoZeroStart..>, LenMoZero)                            ERVnt  727
c                                                                               ERVnt  728
c                                                                               ERVnt  729
c ============ REPORT CREATION ================================================ ERVnt  730
      CASE (52)                                                                 ERVnt  731
c                                                                               ERVnt  732
c              Create the ERV summary report                                    ERVnt  733
      IF (<rv;Iuniq_SS-ERV> .EQ. 0)  THEN                                       ERVnt  734
        WRITE (IREPFL)  4, Iuniq, 4, 88, 1                                      ERVnt  735
c              store the unique report number for this report                   ERVnt  736
        <rv;Iuniq_SS-ERV> = Iuniq                                               ERVnt  737
      ENDIF                                                                     ERVnt  738
c              increment the unique report number for the next report           ERVnt  739
      Iuniq = Iuniq + 1                                                         ERVnt  740
c                                                                               ERVnt  741
c                                                                               ERVnt  742
c ============ REPORT TITLE =================================================== ERVnt  743
      CASE (53)                                                                 ERVnt  744
c                                                                               ERVnt  745
      IF (<rv;Iuniq_SS-ERV> .GT. 0)  THEN                                       ERVnt  746
        WRITE (IREPFL) 22, <rv;Iuniq_SS-ERV>, 6,                                ERVnt  747
     &    TitleSSERV, (<SYSTEM-NAME>,II=1,8), Blank3                            ERVnt  748
      ENDIF                                                                     ERVnt  749
c                                                                               ERVnt  750
c                                                                               ERVnt  751
c ============ REPORTS - VERIFICATION DATA ==================================== ERVnt  752
      CASE (54)                                                                 ERVnt  753
c                                                                               ERVnt  754
c              Output design information                                        ERVnt  755
      IF (<rv;Iuniq_SS-ERV> .GT. 0)  THEN                                       ERVnt  756
        WRITE (IREPFL)  11, <rv;Iuniq_SS-ERV>, 1, 1, 7,                         ERVnt  757
     &    <rv;CFMoaDes>, <rv;CFMexhDes>, <rv;CFMpurge>,                         ERVnt  758
     &    <rv;kWoaDes>, <rv;kWexhDes>, <rv;kWhxDes>, <rv;QpreheatDes>           ERVnt  759
c              Header for monthly data                                          ERVnt  760
        WRITE (IREPFL)  4, <rv;Iuniq_SS-ERV>, 1, 2, 0                           ERVnt  761
      ENDIF                                                                     ERVnt  762
c                                                                               ERVnt  763
c                                                                               ERVnt  764
c ============ REPORTS - MONTHLY DATA ========================================= ERVnt  765
      CASE (55)                                                                 ERVnt  766
c                                                                               ERVnt  767
      IF (iDDFlg .GT. 0  .OR.  InitialFlg .GT. 0)  RETURN                       ERVnt  768
c                                                                               ERVnt  769
      IF (<rv;Iuniq_SS-ERV> .GT. 0)  THEN                                       ERVnt  770
        WRITE (IREPFL) 43,<rv;Iuniq_SS-ERV>,1,3,39,                             ERVnt  771
     &    MONDSC(IMO), (<rv;TotalMo>,II=1,9),                                   ERVnt  772
     &                 (<rv;OperHoursMo>,II=1,2),                               ERVnt  773
     &                 (<rv;PeakMo>, II=1,9),                                   ERVnt  774
     &                 (<rv;PeakDyMo>,<rv;PeakHrMo>,II=1,9)                     ERVnt  775
      ENDIF                                                                     ERVnt  776
c                                                                               ERVnt  777
c                                                                               ERVnt  778
c ============ REPORTS - YEARLY DATA ========================================== ERVnt  779
      CASE (57)                                                                 ERVnt  780
c                                                                               ERVnt  781
      IF (iDDFlg .GT. 0  .OR.  InitialFlg .GT. 0)  RETURN                       ERVnt  782
c                                                                               ERVnt  783
      IF (<rv;Iuniq_SS-ERV> .GT. 0)  THEN                                       ERVnt  784
        WRITE (IREPFL) 43,<rv;Iuniq_SS-ERV>,1,4,39,                             ERVnt  785
     &    MONDSC(13), (<rv;TotalYr>,II=1,9),                                    ERVnt  786
     &                (<rv;OperHoursYr>,II=1,2),                                ERVnt  787
     &                (<rv;PeakYr>, II=1,9),                                    ERVnt  788
     &                (<rv;PeakMoYr>,<rv;PeakDyYr>,II=1,9)                      ERVnt  789
        WRITE (IREPFL) 9,<rv;Iuniq_SS-ERV>,1,5,5,                               ERVnt  790
     &                <rv;HrsExhWet>, <rv;HrsExhFrost>,                         ERVnt  791
     &                <rv;HrsOAWet>, <rv;HrsOAFrost>, <rv;HrsWetCtrl>           ERVnt  792
        WRITE (IREPFL)  2, <rv;Iuniq_SS-ERV>, 7                                 ERVnt  793
      ENDIF                                                                     ERVnt  794
c                                                                               ERVnt  795
c                                                                               ERVnt  796
c ============ HOURLY REPORTS - HOURLY DATA =================================== ERVnt  797
      CASE (62)                                                                 ERVnt  798
c                                                                               ERVnt  799
      IAptr = <ISYBUFP> + 290                                                   ERVnt  800
c                                                                               ERVnt  801
      AA(IAptr+ 1) = <rv;CFMoa>                                                 ERVnt  802
      AA(IAptr+ 2) = <rv;CFMexh>                                                ERVnt  803
      AA(IAptr+ 3) = <rv;effSensible>                                           ERVnt  804
      AA(IAptr+ 4) = <rv;effLatent>                                             ERVnt  805
      AA(IAptr+ 5) = <rv;Qsensible>                                             ERVnt  806
      AA(IAptr+ 6) = <rv;Qlatent>                                               ERVnt  807
      AA(IAptr+ 7) = <rv;QHexcess>                                              ERVnt  808
      AA(IAptr+ 8) = <rv;QCexcess>                                              ERVnt  809
      AA(IAptr+ 9) = <rv;TervReqd>                                              ERVnt  810
      AA(IAptr+10) = <rv;TervSetpt>                                             ERVnt  811
      AA(IAptr+11) = <rv;ToaHXi>                                                ERVnt  812
      AA(IAptr+12) = <rv;ToaHXo>                                                ERVnt  813
      AA(IAptr+13) = <rv;TexhHXi>                                               ERVnt  814
      AA(IAptr+14) = <rv;TexhHXo>                                               ERVnt  815
      AA(IAptr+15) = <rv;WoaHXi>                                                ERVnt  816
      AA(IAptr+16) = <rv;WoaHXo>                                                ERVnt  817
      AA(IAptr+17) = <rv;WexhHXi>                                               ERVnt  818
      AA(IAptr+18) = <rv;WexhHXo>                                               ERVnt  819
      AA(IAptr+19) = <rv;PLRhx>                                                 ERVnt  820
      IF (<rv:CAP-CTRL> .EQ. 2)  THEN                                           ERVnt  821
        AA(IAptr+20) = <rv;OAbypass>                                            ERVnt  822
      ELSE                                                                      ERVnt  823
        AA(IAptr+20) = <rv;ExhBypass>                                           ERVnt  824
      ENDIF                                                                     ERVnt  825
      AA(IAptr+21) = <rv;OAecono>                                               ERVnt  826
      AA(IAptr+22) = <rv;kWoa> + <rv;kWexh>                                     ERVnt  827
      AA(IAptr+23) = <rv;kWhx>                                                  ERVnt  828
      AA(IAptr+24) = <rv;kWpreheat>                                             ERVnt  829
      AA(IAptr+25) = <rv;Qpreheat>                                              ERVnt  830
      IA(IAptr+26) = <rv;ExhWetFlag>                                            ERVnt  831
      IA(IAptr+27) = <rv;OAWetFlag>                                             ERVnt  832
c                                                                               ERVnt  833
c                                                                               ERVnt  834
c                                                                               ERVnt  835
c ============ DESIGN CALCULATIONS ============================================ ERVnt  836
      CASE (100)                                                                ERVnt  837
c                                                                               ERVnt  838
c              Actual airflows                                                  ERVnt  839
      <rv;CFMoa>  = <SUPPLY-CFM> * OAerv                                        ERVnt  840
      <rv;CFMexh> = <rv;CFMoa> - EXFIL                                          ERVnt  841
c                                                                               ERVnt  842
c              Rated airflows, outdoor and exhaust                              ERVnt  843
      IF (<rv:OA-FLOW> .GT. 0.)  THEN                                           ERVnt  844
        <rv;CFMoaDes> = <rv:OA-FLOW>                                            ERVnt  845
      ELSE                                                                      ERVnt  846
        <rv;CFMoaDes> = <rv;CFMoa>                                              ERVnt  847
      ENDIF                                                                     ERVnt  848
      IF (<rv;CFMoaDes> .EQ. 0.)  THEN                                          ERVnt  849
c              No outside air                                                   ERVnt  850
        CALL MSGSIM(-2,II,II,II,II)                                             ERVnt  851
        WRITE (IOUTPT, 9001)  (<SYSTEM-NAME>,II=1,8)                            ERVnt  852
        <sy:RECOVER-EXH> = 0                                                    Bug40   11
        RETURN                                                                  ERVnt  853
      ENDIF                                                                     ERVnt  854
      IF (<rv:EXH-FLOW> .GT. 0.)  THEN                                          ERVnt  855
        <rv;CFMexhDes> = <rv:EXH-FLOW>                                          ERVnt  856
      ELSE                                                                      ERVnt  857
        <rv;CFMexhDes> = <rv;CFMoaDes>                                          -042    37
      ENDIF                                                                     ERVnt  859
c                                                                               ERVnt  860
c              Given the sensible effectiveness, solve for the UA               ERVnt  861
c              Since manufacturers normally publish effectiveness values        ERVnt  862
c              assuming equal OA/exhaust flows, assume the same here            ERVnt  863
      Cmin   = CONS(1) * <rv;CFMoaDes>         ! air heat transport cap         ERVnt  864
      C      = 1.0                             ! capacity ratio                 ERVnt  865
      effDes = <rv:SENSIBLE-EFF>               ! design effectiveness           ERVnt  866
      Call UAdesign                            ! calculate the design UA        -048    45
      <rv;UAsens> = UA                                                          ERVnt  868
c              Break down UA into its component resistances                     ERVnt  869
      Rtotal          = 1. / UA                                                 ERVnt  870
      <rv;Rmedia>     = Rtotal * (1.0-<rv:SEN-FILM-RES>)                        ERVnt  871
      Rfilm           = (Rtotal-<rv;Rmedia>) * 0.5    ! 1 side of HX            ERVnt  872
      UAfilm          = 1. / Rfilm                                              ERVnt  873
      <rv;UAfilmCoef> = UAfilm / (<rv;CFMoaDes>**<rv:SEN-FILM-EXP>)             ERVnt  874
      <rv;MinFlow>    = <rv;CFMoaDes> * 0.3                                     ERVnt  875
c                                                                               ERVnt  876
c              Latent exchange                                                  ERVnt  877
      IF (<rv:LATENT-EFF> .GT. 0.)  THEN                                        ERVnt  878
c              Given the latent effectiveness, solve for the latent "UA"        ERVnt  879
        Cmin   = CONS(2) * <rv;CFMoaDes>       ! air heat transport cap         ERVnt  880
        C      = 1.0                           ! capacity ratio                 ERVnt  881
        effDes = <rv:LATENT-EFF>               ! design effectiveness           ERVnt  882
        Call UAdesign                          ! calculate the design UA        -048    46
        <rv;UAlatent> = UA                                                      ERVnt  884
c              Break down "UA" into its component resistances                   ERVnt  885
        Rtotal           = 1. / UA                                              ERVnt  886
        <rv;RmediaLat>   = Rtotal * (1.0-<rv:LAT-FILM-RES>)                     ERVnt  887
        Rfilm            = (Rtotal-<rv;RmediaLat>) * 0.5    ! 1 side of HX      ERVnt  888
        UAfilm           = 1. / Rfilm                                           ERVnt  889
        <rv;FilmCoefLat> = UAfilm / (<rv;CFMoaDes>**<rv:LAT-FILM-EXP>)          ERVnt  890
      ENDIF                                                                     ERVnt  891
c                                                                               ERVnt  892
c              Purge flow                                                       ERVnt  893
      IF (<rv:PURGE> .GT. 0.)  THEN                                             ERVnt  894
        IF (<rv:FAN-CONFIG> .EQ. 2)  THEN                                       ERVnt  895
          <rv;CFMpurge>   = <rv;CFMoaDes> * <rv:PURGE>                          ERVnt  896
          <rv;CFMpurge/2> = <rv;CFMpurge> / 2.                                  ERVnt  897
        ELSE                                                                    ERVnt  898
c              no purge possible unless self-contained fans                     ERVnt  899
          CALL MSGSIM(-2,II,II,II,II)                                           ERVnt  900
          WRITE (IOUTPT, 9002)  (<SYSTEM-NAME>,II=1,8)                          ERVnt  901
        ENDIF                                                                   ERVnt  902
      ENDIF                                                                     ERVnt  903
c                                                                               ERVnt  904
c              Fan power consumption                                            ERVnt  905
      IF (<rv:FAN-CONFIG> .EQ. 1)  THEN                                         ERVnt  906
c              ERV relies on HVAC supply/return fans                            ERVnt  907
        Eff = 0.9                                                               ERVnt  908
        DO  I=1,3                                                               ERVnt  909
          HP  = <SUPPLY-KW> * Eff / 0.746                                       ERVnt  910
          Eff = EffMotor(HP, <rv:MOTOR-CLASS>)                                  ERVnt  911
        ENDDO                                                                   ERVnt  912
        <rv;SupkW/CFMdP> = 0.746 / (6356. * <rv:FAN-MECH-EFF> * Eff)            ERVnt  913
c              repeat for return fan                                            ERVnt  914
        IF (<RETURN-KW> .GT. 0.)  THEN                                          ERVnt  915
          DO  I=1,3                                                             ERVnt  916
            HP  = <RETURN-KW> * Eff / 0.746                                     ERVnt  917
            Eff = EffMotor(HP, <rv:MOTOR-CLASS>)                                ERVnt  918
          ENDDO                                                                 ERVnt  919
          <rv;RetkW/CFMdP> = 0.746 / (6356. * <rv:FAN-MECH-EFF> * Eff)          ERVnt  920
        ENDIF                                                                   ERVnt  921
      ELSE                                                                      ERVnt  922
c              ERV has its own fans                                             ERVnt  923
        IF (<rv;CFMpurge> .GT. 0.)  THEN                                        ERVnt  924
c              power adjustment factors to account for increased static         ERVnt  925
c              pressure due to purge flow, makeup and exhaust                   ERVnt  926
          dKWpurgeOA  = (<rv;CFMoaDes>+<rv;CFMpurge>) / <rv;CFMoaDes>           ERVnt  927
          dKWpurgeOA  = dKWpurgeOA * dKWpurgeOA**<rv:STATIC-EXP>                ERVnt  928
          dKWpurgeExh = (<rv;CFMexhDes>+<rv;CFMpurge>) / <rv;CFMexhDes>         ERVnt  929
          dKWpurgeExh = dKWpurgeExh * dKWpurgeExh**<rv:STATIC-EXP>              ERVnt  930
        ELSE                                                                    ERVnt  931
          dKWpurgeOA  = 1.                                                      ERVnt  932
          dKWpurgeExh = 1.                                                      ERVnt  933
        ENDIF                                                                   ERVnt  934
c              outdoor air fan                                                  ERVnt  935
        IF (<rv:OA-FAN-KW> .GT. 0.)  THEN                                       ERVnt  936
          <rv;kWoaDes> = <rv:OA-FAN-KW> * dKWpurgeOA                            ERVnt  937
        ELSEIF (<rv:OA-FAN-KW/FLO> .GT. 0.)  THEN                               ERVnt  938
          <rv;kWoaDes> = <rv:OA-FAN-KW/FLO>*<rv;CFMoaDes> * dKWpurgeOA          ERVnt  939
        ELSE                                                                    ERVnt  940
c              Fan power not specified, calc using static and flow,             ERVnt  941
c              assume motor 20% larger than BHP                                 ERVnt  942
          BHP = <rv:OA-STATIC>*<rv;CFMoaDes> * dKWpurgeOA                       ERVnt  943
     &                                    / (6356. * <rv:FAN-MECH-EFF>)         ERVnt  944
          HP  = BHP * 1.2                                                       ERVnt  945
          Eff = EffMotor(HP, <rv:MOTOR-CLASS>)                                  ERVnt  946
          <rv;kWoaDes> = BHP * 0.746 / Eff                                      ERVnt  947
        ENDIF                                                                   ERVnt  948
c              repeat for exhaust air fan                                       ERVnt  949
        IF (<rv:EXH-FAN-KW> .GT. 0.)  THEN                                      ERVnt  950
          <rv;kWexhDes> = <rv:EXH-FAN-KW> * dKWpurgeExh                         ERVnt  951
        ELSEIF (<rv:EXH-FAN-KW/FL> .GT. 0.)  THEN                               ERVnt  952
          <rv;kWexhDes> = <rv:EXH-FAN-KW/FL>*<rv;CFMexhDes>*dKWpurgeExh         ERVnt  953
        ELSE                                                                    ERVnt  954
          BHP = <rv:EXH-STATIC>*<rv;CFMexhDes> * dKWpurgeExh                    ERVnt  955
     &                                    / (6356. * <rv:FAN-MECH-EFF>)         ERVnt  956
          HP  = BHP * 1.2                                                       ERVnt  957
          Eff = EffMotor(HP, <rv:MOTOR-CLASS>)                                  ERVnt  958
          <rv;kWexhDes> = BHP * 0.746 / Eff                                     ERVnt  959
        ENDIF                                                                   ERVnt  960
      ENDIF                                                                     ERVnt  961
c              Adjust design flows for purge                                    ERVnt  962
      <rv;CFMoaDes>  = <rv;CFMoaDes>  + <rv;CFMpurge>                           ERVnt  963
      <rv;CFMexhDes> = <rv;CFMexhDes> + <rv;CFMpurge>                           ERVnt  964
c                                                                               ERVnt  965
c              HX power consumption                                             ERVnt  966
      IF (<rv:HX-KW> .GT. 0.)  THEN                                             ERVnt  967
        <rv;kWhxDes> = <rv:HX-KW>                                               ERVnt  968
      ELSE                                                                      ERVnt  969
        <rv;kWhxDes> = <rv:HX-KW/FLOW> * <rv;CFMoaDes>                          ERVnt  970
      ENDIF                                                                     ERVnt  971
c                                                                               ERVnt  972
c              Anti-condensate preheat coil                                     ERVnt  973
      IF (<rv:FROST-CTRL> .EQ. 1)  THEN                                         ERVnt  974
        <rv;QpreheatDes> = -CONS(1) * <rv;CFMoaDes> * <rv:PREHEAT-DT>           ERVnt  975
      ELSEIF (<rv:FROST-CTRL> .EQ. 2)  THEN                                     ERVnt  976
        <rv;QpreheatDes> = -CONS(1) * <rv;CFMexhDes> * <rv:PREHEAT-DT>          ERVnt  977
      ENDIF                                                                     ERVnt  978
c                                                                               ERVnt  979
c              Check for legal control strategies                               ERVnt  980
      IF (<rv:FROST-CTRL> .EQ. 3  .AND.  <rv:CAP-CTRL> .LT. 2)  THEN            ERVnt  981
c              TRIM-ECONOMIZER capacity control is incompatible                 ERVnt  982
c              with frost control                                               ERVnt  983
        CALL MSGSIM(-3,II,II,II,II)                                             ERVnt  984
        WRITE (IOUTPT, 9004)  (<SYSTEM-NAME>,II=1,8)                            ERVnt  985
        <rv:FROST-CTRL> = 0                                                     ERVnt  986
      ENDIF                                                                     ERVnt  987
c                                                                               ERVnt  988
      SELECT CASE (<rv:CAP-CTRL>)                                               ERVnt  989
        CASE (0)  ! None                                                        ERVnt  990
        CASE (1)  ! Trim economizer                                             ERVnt  991
          IF (<OA-CONTROL> .EQ. 0)  THEN                                        ERVnt  992
c              no economizer - reset to floating mode                           ERVnt  993
            <rv:CAP-CTRL> = 0                                                   ERVnt  994
            CALL MSGSIM(-2,II,II,II,II)                                         ERVnt  995
            WRITE (IOUTPT, 9005)  (<SYSTEM-NAME>,II=1,8)                        ERVnt  996
          ENDIF                                                                 ERVnt  997
        CASE (3)  ! Bypass OA around HX                                         ERVnt  998
        CASE (4)  ! Bypass exhaust around HX                                    ERVnt  999
        CASE (5)  ! Modulate HX                                                 ERVnt 1000
          IF (<rv:TYPE> .NE. 3  .AND.  <rv:TYPE> .NE. 4)  THEN                  ERVnt 1001
c              not a heat wheel - reset to OA bypass                            ERVnt 1002
            <rv:CAP-CTRL> = 2                                                   ERVnt 1003
            CALL MSGSIM(-2,II,II,II,II)                                         ERVnt 1004
            WRITE (IOUTPT, 9006)  (<SYSTEM-NAME>,II=1,8)                        ERVnt 1005
          ENDIF                                                                 ERVnt 1006
      END SELECT  ! rv:CAP-CTRL                                                 ERVnt 1007
c                                                                               ERVnt 1008
c                                                                               ERVnt 1009
c ============ DESIGN CALCULATIONS ============================================ ERVnt 1010
      CASE (101)                                                                ERVnt 1011
c                                                                               ERVnt 1012
c              hot-water preheat                                                ERVnt 1013
      IF (<rv:PREHEAT-SOURC> .EQ. 2)  THEN                                      ERVnt 1014
        Jlp = <rv;PreheatLoop>                                                  ERVnt 1015
        <rv;GPMpreheatDes> = ABS(<rv;QpreheatDes>                               ERVnt 1016
     &                           / (<lp;BTUH/GPM-F>*<rv:PREHEAT-HW-DT>))        ERVnt 1017
      ENDIF                                                                     ERVnt 1018
c                                                                               ERVnt 1019
c                                                                               ERVnt 1020
c ============ ATTACHMENTS ==================================================== ERVnt 1021
c                                                                               ERVnt 1022
c              Initial attachments                                              ERVnt 1023
      CASE (201)                                                                ERVnt 1024
c                                                                               ERVnt 1025
        <rv:SCHEDULE>      = Jsched(<rv:SCHEDULE>)                              ERVnt 1026
        <rv:HX-KW-FPLR>   = Jcurve(<rv:HX-KW-FPLR>)                             -045b   65
        <rv:FAN-KW-FFLOW> = Jcurve(<rv:FAN-KW-FFLOW>)                           -045b   66
        IF (<PHW-LOOP> .GT. 0)                                                  ERVnt 1029
     &    <rv;PreheatLoop> = Ilp + (<PHW-LOOP>-1)*Llp                           ERVnt 1030
c                                                                               ERVnt 1031
c              Create nodes                                                     ERVnt 1032
      CASE (203)                                                                ERVnt 1033
c                                                                               ERVnt 1034
c              Length of statistics zeroes                                      ERVnt 1035
        LenHrZero = <+rv.HrZeroEnd....> - <+rv.HrZeroStart..> + 1               ERVnt 1036
        LenMoZero = <+rv.MoZeroEnd....> - <+rv.MoZeroStart..> + 1               ERVnt 1037
c                                                                               ERVnt 1038
c                                                                               ERVnt 1039
      END SELECT  ! Mode                                                        ERVnt 1040
c                                                                               ERVnt 1041
      RETURN                                                                    ERVnt 1042
c                                                                               ERVnt 1043
c              Message formats                                                  -048    47
 9001 FORMAT(                                                                   -048    48
     &14x,'Energy-recovery ventilator: ',8A4,' has '                   /        -048    49
     &14x,'zero outside air.  Ventilation energy-recovery will be'     /        -048    50
     &14x,'disabled.'                                                  )        -048    51
 9002 FORMAT(                                                                   -048    52
     &14x,'Energy-recovery ventilator: ',8A4,' has a purge'            /        -048    53
     &14x,'specified, but does not have self-contained fans.  Purge'   /        -048    54
     &14x,'volume will be reset to zero.'                              )        -048    55
 9004 FORMAT(                                                                   -048    56
     &14x,'Energy-recovery ventilator: ',8A4,' has'                    /        -048    57
     &14x,'CAP-CTRL=TRIM-ECONOMIZER and FROST-CTRL=USE-CAP-CTRL.'      /        -048    58
     &14x,'TRIM-ECONOMIZER cannot be used for frost control. No frost' /        -048    59
     $14x,'control will be simulated.'                                 )        -048    60
 9005 FORMAT(                                                                   -048    61
     &14x,'Energy-recovery ventilator: ',8A4,' has'                    /        -048    62
     &14x,'TRIM-ECONOMIZER specified, but no economizer exists.'       /        -048    63
     &14x,'Outlet temperature will float.'                             )        -048    64
 9006 FORMAT(                                                                   -048    65
     &14x,'Energy-recovery ventilator: ',8A4,' has MODULATE-HX'        /        -048    66
     &14x,'specified, but is not a heat wheel.  Control will be reset' /        -048    67
     &14x,'to BYPASS-OA.'                                              )        -048    68
 9101 FORMAT(                                                                   -048    69
     &14x,'Energy-recovery ventilator: ',8A4,' has'                    /        -048    70
     &14x,'frost on the exhaust outlet.  First occurrence:',3I3        /        -048    71
     &14x,'OA T&W: ',F5.1,F8.4,'   Return T&W: ',F5.1,F8.4             )        -048    72
 9102 FORMAT(                                                                   -048    73
     &14x,'Energy-recovery ventilator: ',8A4,' has'                    /        -048    74
     &14x,'condensation on the exhaust outlet.  First occurrence:',3I3 /        -048    75
     &14x,'OA T&W: ',F5.1,F8.4,'   Return T&W: ',F5.1,F8.4             )        -048    76
 9103 FORMAT(                                                                   -048    77
     &14x,'Energy-recovery ventilator: ',8A4,' has'                    /        -048    78
     &14x,'frost on the OA outlet.  First occurrence:',3I3             /        -048    79
     &14x,'OA T&W: ',F5.1,F8.4,'   Return T&W: ',F5.1,F8.4             )        -048    80
 9104 FORMAT(                                                                   -048    81
     &14x,'Energy-recovery ventilator: ',8A4,' has'                    /        -048    82
     &14x,'condensation on the OA outlet.  First occurrence:',3I3      /        -048    83
     &14x,'OA T&W: ',F5.1,F8.4,'   Return T&W: ',F5.1,F8.4             )        -048    84
 9105 FORMAT(                                                                   -048    85
     &14x,'Energy-recovery ventilator: ',8A4,' is'                     /        -048    86
     &14x,'enabled to run, but cannot run because there is no central' /        -048    87
     &14x,'exhaust flow.  First occurrence: ',I2,'/',I2,'/',I2         )        -048    88
 9106 FORMAT(                                                                   -048    89
     &14x,'Energy-recovery ventilator: ',8A4,' has an'                 /        -048    90
     &14x,'exhaust flow less than 50% of the supply flow.  Performance'/        -048    91
     &14x,'may be compromised.  OA & Exhaust:',2F10.0                  /        -048    92
     &14x,'First occurrence: ',I2,'/',I2,'/',I2                        )        -048    93
                                                                                -048    94
                                                                                -048    95
      CONTAINS                                                                  -048    96
c=============== Effectiveness ================================================ -048    97
      Subroutine Effectiveness                                                  -048    98
c                                                                               ERVnt 1047
c              Calculates the effectiveness of a heat exchanger.                ERVnt 1048
c                                                                               ERVnt 1049
      SELECT CASE (<rv:HX-CONFIG>)                                              ERVnt 1050
        CASE (1)  ! Counterflow                                                 ERVnt 1051
          IF (C .LT. .9999)  THEN                                               ERVnt 1052
            x   = EXP(-NTU*(1.-C))                                              ERVnt 1053
            eff = (1.0 - x) / (1.0 - C*x)                                       ERVnt 1054
          ELSE                                                                  ERVnt 1055
            eff = NTU / (1.+NTU)                                                ERVnt 1056
          ENDIF                                                                 ERVnt 1057
        CASE (2)  ! Parallel flow                                               ERVnt 1058
          eff = (1.0 - EXP(-NTU*(1.+C))) / (1.0 + C)                            ERVnt 1059
        CASE (3)  ! Crossflow with no mixing                                    ERVnt 1060
          x   = NTU**(-0.22)                                                    ERVnt 1061
          eff = 1. - EXP((EXP(-NTU*C*x)-1.)/(C*x))                              ERVnt 1062
        CASE (4)  ! Crossflow with both streams mixed                           ERVnt 1063
          eff = 1. / (1./(1.-EXP(-NTU)) + C/(1.-EXP(-NTU*C)) - 1./NTU)          ERVnt 1064
        CASE (5)  ! Crossflow with demand side mixed                            ERVnt 1065
          IF (Coa .EQ. Cmin)  THEN                 ! Cmin is mixed              ERVnt 1066
            eff = 1. - EXP(-(1.-EXP(-NTU*C)) / C)                               ERVnt 1067
          ELSE                                     ! Cmax is mixed              ERVnt 1068
            eff = (1.-EXP(-C*(1.-EXP(-NTU)))) / C                               ERVnt 1069
          ENDIF                                                                 ERVnt 1070
        CASE (6)  ! Crossflow with supply side mixed                            ERVnt 1071
          IF (Cexh .EQ. Cmin)  THEN                ! Cmin is mixed              ERVnt 1072
            eff = 1. - EXP(-(1.-EXP(-NTU*C)) / C)                               ERVnt 1073
          ELSE                                     ! Cmax is mixed              ERVnt 1074
            eff = (1.-EXP(-C*(1.-EXP(-NTU)))) / C                               ERVnt 1075
          ENDIF                                                                 ERVnt 1076
        CASE (7)  ! 1-2 Parallel-Counterflow                                    ERVnt 1077
          y   = (1.+C*C)**0.5                                                   ERVnt 1078
          x   = -NTU*Y                                                          ERVnt 1079
          eff = 2. / (1.+C + y*(1.+EXP(x))/(1.-EXP(x)) )                        ERVnt 1080
      END SELECT  ! rv:HX-CONFIG                                                ERVnt 1081
c                                                                               ERVnt 1082
      End Subroutine Effectiveness                                              -048    99
c                                                                               -043a1  16
c                                                                               -043a1  17
c=============== BypassERV ==================================================== -048   100
      Subroutine BypassERV                                                      -048   101
c                                                                               -043a1  20
c              For an ERV with active capacity control, shuts down              -043a1  21
c              the ERV                                                          -043a1  22
c                                                                               -043a1  23
      <rv;PLRhx>     = 0.                                                       -043a1  24
      <rv;ExhBypass> = 1.                                                       -043a1  25
      <rv;OAbypass>  = 1.                                                       -043a1  26
      Qsens          = 0.                                                       -043a1  27
      <rv;WetExhCtrl> = 0                                                       -044c4  47
c                                                                               -043a1  28
      IF (<rv;CtrlMode> .ne. ModeHeat  .or.  Toa .ge. TervSetpt)  THEN          -043a1  29
        <rv;CtrlMode> = 0.                                                      -043a1  30
        Terv          = Toa                                                     -043a1  31
        ToaHXi        = Toa                                                     -043a1  32
        TexhHXi       = TR                                                      -043a1  33
      ELSE                                                                      -043a1  34
c              Heating mode; ERV fan heat is sufficient with no HX.             -043a1  35
c              Assume fan cycles with no additional HX                          -043a1  36
        FracOn     = (TervSetpt-Toa) / (ToaHXi-Toa)                             -043a1  37
        <rv;kWexh> = <rv;kWexh> * FracOn                                        -043a1  38
        <rv;kWoa>  = <rv;kWoa> * FracOn                                         -043a1  39
        Terv       = TervSetpt                                                  -043a1  40
      ENDIF                                                                     -043a1  41
c                                                                               -043a1  42
      End Subroutine BypassERV                                                  -048   102
c                                                                               ERVnt 1084
c                                                                               ERVnt 1085
c=============== BypassExh ==================================================== -048   103
      Subroutine BypassExh                                                      -048   104
c                                                                               ERVnt 1088
c              Calculates the amount of exhaust air that must be                ERVnt 1089
c              bypassed around the heat exchanger in order to meet the          ERVnt 1090
c              mixed air setpoint.                                              ERVnt 1091
c              Solves using an interpolating bi-sectional search                ERVnt 1092
      Tmax   = ToaHXo                                                           ERVnt 1093
      CFMmax = <rv;CFMexh> + <rv;CFMpurge/2>                                    -047g    1
      Tmin   = ToaHXi                                                           ERVnt 1095
      CFMmin = 0.                                                               ERVnt 1096
      CFMinv = 1. / <rv;CFMexh>                                                 ERVnt 1097
      CFMxx  = 0.                                                               -047g    2
      DO                                                                        ERVnt 1098
        Ratio     = (TervSetpt-Tmin) / (Tmax-Tmin)                              ERVnt 1099
        CFMexh    = CFMmin                        ! exh thru hx                 ERVnt 1100
     &            + (CFMmax-CFMmin)*Ratio                                       ERVnt 1101
        CFMexh    = Max(CFMexh, <rv;CFMpurge/2>)                                -047g    3
        CFMbypass = <rv;CFMexh>                   ! exh bypassing HX            -047g    4
     &            - (CFMexh - <rv;CFMpurge/2>)                                  -047g    5
        UAexh     = <rv;UAfilmCoef>               ! exh film cond               ERVnt 1104
     &            * MAX(CFMexh, <rv;MinFlow>)                                   ERVnt 1105
     &                    **<rv:SEN-FILM-EXP>                                   ERVnt 1106
        Rexh      = 1. / UAexh                    ! exh film res                ERVnt 1107
        Rhx       = Roa + <rv;Rmedia> + Rexh      ! HX resistance               ERVnt 1108
        UA        = 1. / Rhx                      ! sensible UA                 ERVnt 1109
        Cexh      = CONS(1) * CFMexh              ! exh transport cap           ERVnt 1110
        Cmin      = MIN(Cexh, Coa)                                              ERVnt 1111
        Cmax      = MAX(Cexh, Coa)                                              ERVnt 1112
        C         = Cmin / Cmax                   ! capacity ratio              ERVnt 1113
        NTU       = UA / Cmin                     ! transfer units              ERVnt 1114
        Call Effectiveness                        ! HX effectiveness            -048   105
        Qsens     = eff*Cmin*(ToaHXi-TexhHXi)     ! sensible heat               ERVnt 1116
        ToaHXo    = ToaHXi - Qsens/Coa            ! HX OA outlet T              ERVnt 1117
c                                                                               ERVnt 1119
        IF (ABS(ToaHXo-TervSetpt) .LT. 0.1)  EXIT                               ERVnt 1120
        IF (Abs(1.-CFMxx/CFMbypass) .lt. 0.01)  EXIT                            -047g    6
        CFMxx = CFMbypass                                                       -047g    7
        IF ((Qsens .LT. 0.  .AND.  ToaHXo .LT. TervSetpt)  .OR.                 ERVnt 1121
     &      (Qsens .GT. 0.  .AND.  ToaHXo .GT. TervSetpt))  THEN                ERVnt 1122
          Tmin   = ToaHXo                                                       ERVnt 1123
          CFMmin = CFMexh                                                       ERVnt 1124
        ELSE                                                                    ERVnt 1125
          Tmax   = ToaHXo                                                       ERVnt 1126
          CFMmax = CFMexh                                                       ERVnt 1127
        ENDIF                                                                   ERVnt 1128
      ENDDO                                                                     ERVnt 1129
      <rv;ExhBypass> = CFMbypass * CFMinv                                       ERVnt 1130
      Terv           = TervSetpt                                                ERVnt 1132
c                                                                               ERVnt 1133
      End Subroutine BypassExh                                                  -048   106
c                                                                               ERVnt 1135
c                                                                               ERVnt 1136
c=============== BypassOA ===================================================== -048   107
      Subroutine BypassOA                                                       -048   108
c                                                                               ERVnt 1139
c              Calculates the amount of outside air that must be                ERVnt 1140
c              bypassed around the heat exchanger in order to meet the          ERVnt 1141
c              mixed air setpoint.                                              ERVnt 1142
c              Solves using an interpolating bi-sectional search                ERVnt 1143
      Tmax   = ToaHXo                                                           ERVnt 1144
      CFMmax = <rv;CFMoa> + <rv;CFMpurge>                                       -047g    8
      Tmin   = ToaHXi                                                           ERVnt 1146
      CFMmin = 0.                                                               ERVnt 1147
      CFMinv = 1. / <rv;CFMoa>                                                  ERVnt 1148
      CFMxx  = 0.                                                               -047g    9
      DO                                                                        ERVnt 1149
        Ratio     = (TervSetpt-Tmin) / (Tmax-Tmin)                              ERVnt 1150
        CFMoa     = CFMmin                        ! OA thru hx                  ERVnt 1151
     &            + (CFMmax-CFMmin)*Ratio                                       ERVnt 1152
        CFMoa     = Max(CFMoa, <rv;CFMpurge>)                                   -047g   10
        CFMbypass = <rv;CFMoa>                    ! OA bypassing HX             -047g   11
     &            - (CFMoa-<rv;CFMpurge>)                                       -047g   12
        UAoa      = <rv;UAfilmCoef>               ! OA film cond                ERVnt 1155
     &            * MAX(CFMoa, <rv;MinFlow>)                                    ERVnt 1156
     &                    **<rv:SEN-FILM-EXP>                                   ERVnt 1157
        Roa       = 1. / UAoa                     ! OA film res                 ERVnt 1158
        Rhx       = Roa + <rv;Rmedia> + Rexh      ! HX resistance               ERVnt 1159
        UA        = 1. / Rhx                      ! sensible UA                 ERVnt 1160
        Coa       = CONS(1) * CFMoa               ! OA transport cap            ERVnt 1161
        Cmin      = MIN(Cexh, Coa)                                              ERVnt 1162
        Cmax      = MAX(Cexh, Coa)                                              ERVnt 1163
        C         = Cmin / Cmax                   ! capacity ratio              ERVnt 1164
        NTU       = UA / Cmin                     ! transfer units              ERVnt 1165
        Call Effectiveness                        ! HX effectiveness            -048   109
        Qsens     = eff*Cmin*(ToaHXi-TexhHXi)     ! sensible heat               ERVnt 1167
        ToaHXo    = ToaHXi - Qsens/Coa            ! HX OA outlet T              ERVnt 1168
        Terv      = (ToaHXo*CFMoa                 ! supply T                    ERVnt 1170
     &               + ToaHXi*CFMbypass) * CFMinv                               ERVnt 1171
c                                                                               ERVnt 1172
        IF (ABS(Terv-TervSetpt) .LT. 0.1)  EXIT                                 ERVnt 1173
        IF (Abs(1.-CFMxx/CFMbypass) .lt. 0.01)  EXIT                            -047g   13
        CFMxx = CFMbypass                                                       -047g   14
        IF ((Qsens .LT. 0.  .AND.  Terv .LT. TervSetpt)  .OR.                   ERVnt 1174
     &      (Qsens .GT. 0.  .AND.  Terv .GT. TervSetpt))  THEN                  ERVnt 1175
          Tmin   = Terv                                                         ERVnt 1176
          CFMmin = CFMoa                                                        ERVnt 1177
        ELSE                                                                    ERVnt 1178
          Tmax   = Terv                                                         ERVnt 1179
          CFMmax = CFMoa                                                        ERVnt 1180
        ENDIF                                                                   ERVnt 1181
      ENDDO                                                                     ERVnt 1182
      <rv;OAbypass> = CFMbypass * CFMinv                                        ERVnt 1183
      Terv          = TervSetpt                                                 ERVnt 1185
c                                                                               ERVnt 1186
      End Subroutine BypassOA                                                   -048   110
c                                                                               ERVnt 1188
c                                                                               ERVnt 1189
c=============== UAdesign ===================================================== -048   111
      Subroutine UAdesign                                                       -048   112
c                                                                               ERVnt 1192
c              Calculates the design UA given the design effectiveness,         ERVnt 1193
c              Cmin, and Cmax                                                   ERVnt 1194
c                                                                               ERVnt 1195
c              Maximum possible effectiveness                                   -044c8   1
      NTU    = 1000.                                                            -044c8   2
      Call Effectiveness                                                        -048   113
c              Cannot exceed maximum theoretical for equal flows                -044c8   4
      IF (eff .le. effDes) THEN                                                 -044c8   5
        Call MsgSim(-2,ii,ii,ii,ii)                                             -044c8   6
        Write (iOutpt, 9007) (<SYSTEM-NAME>,II=1,8), effDes, eff,               -044c8   7
     &                                                       eff*0.90           -044c8   8
        effDes = eff * 0.90                                                     -044c8   9
      ENDIF                                                                     -044c8  10
      effMax = eff                             ! maximum possible eff           -044c8  11
      NTUmax = 1000.                           ! NTU at maximum eff             -044c8  12
      effMin = 0.                              ! minimum possible eff           -044c8  13
      NTUmin = 0.                              ! NTU at minimum eff             -044c8  14
      NTU    = 5.                              ! first guess                    -044c8  15
c              Find NTU using an interpolating bi-sectional search              -044c8  16
      DO                                                                        -044c8  17
        Call Effectiveness                                                      -048   114
        IF (ABS(eff-effDes) .LT. 0.001)  EXIT                                   -044c8  19
        IF (eff .LT. effDes)  THEN                                              -044c8  20
          effMin = eff                                                          -044c8  21
          NTUmin = NTU                                                          -044c8  22
        ELSE                                                                    -044c8  23
          effMax = eff                                                          -044c8  24
          NTUmax = NTU                                                          -044c8  25
        ENDIF                                                                   -044c8  26
        Ratio = (effDes - effMin) / (effMax - effMin)                           -044c8  27
        NTU   = NTUmin + (NTUmax-NTUmin)*Ratio                                  -044c8  28
      ENDDO                                                                     -044c8  29
c                                                                               ERVnt 1214
      UA = NTU * Cmin                                                           ERVnt 1215
c                                                                               ERVnt 1216
 9007 FORMAT(                                                                   -048   115
     &14x,'Energy-recovery ventilator: ',8A4,' has a design'           /        -048   116
     &14x,'effectiveness of:',F5.2,' but the maximum theoretical'      /        -048   117
     &14x,'effectiveness for the specified heat exchanger is:',F5.2    /        -048   118
     &14x,'The design effectiveness will be changed to:',F5.2          )        -048   119
                                                                                -048   120
      End Subroutine UAdesign                                                   -048   121
c                                                                               ERVnt 1218
c                                                                               ERVnt 1219
c=============== WheelSpeed =================================================== -048   122
      Subroutine WheelSpeed                                                     -048   123
c                                                                               ERVnt 1222
c              For a heat wheel, calculates the wheel speed required            ERVnt 1223
c              to meet the setpoint.  Assumes the wheel's media UA is           ERVnt 1224
c              linear with the speed.                                           ERVnt 1225
c              Solves using an interpolating bi-sectional search.               ERVnt 1226
      Tmax   = ToaHXo                                                           ERVnt 1227
      RPMmax = 1.                                                               ERVnt 1228
      Tmin   = ToaHXi                                                           ERVnt 1229
      RPMmin = 0.                                                               ERVnt 1230
      DO                                                                        ERVnt 1231
        Ratio   = (TervSetpt-Tmin) / (Tmax-Tmin)                                ERVnt 1232
        Ratio   = Ratio * Ratio                                                 ERVnt 1233
        RPM     = RPMmin + (RPMmax-RPMmin)*Ratio                                ERVnt 1234
        Rhx     = Roa + <rv;Rmedia>/RPM + Rexh                                  ERVnt 1235
        UA      = 1. / Rhx                                                      ERVnt 1236
        NTU     = UA / Cmin                                                     ERVnt 1237
        Call Effectiveness                                                      -048   124
        Qsens   = eff * Cmin * (ToaHXi-TexhHXi)                                 ERVnt 1239
        ToaHXo  = ToaHXi - Qsens/Coa                                            ERVnt 1240
        IF (ABS(ToaHXo-TervSetpt) .LT. 0.05)  EXIT                              -048j    4
        IF ((Qsens .LT. 0.  .AND.  ToaHXo .LT. TervSetpt)  .OR.                 ERVnt 1242
     &      (Qsens .GT. 0.  .AND.  ToaHXo .GT. TervSetpt))  THEN                ERVnt 1243
          Tmin   = ToaHXo                                                       ERVnt 1244
          RPMmin = RPM                                                          ERVnt 1245
        ELSE                                                                    ERVnt 1246
          Tmax   = ToaHXo                                                       ERVnt 1247
          RPMmax = RPM                                                          ERVnt 1248
        ENDIF                                                                   ERVnt 1249
      ENDDO                                                                     ERVnt 1250
      <rv;PLRhx> = RPM                                                          ERVnt 1251
      Terv       = TervSetpt                                                    ERVnt 1252
      ToaHXo     = TervSetpt                                                    -048j    5
      Qsens      = Coa * (ToaHXi - ToaHXo)                                      -048j    6
      eff        = Qsens / (Cmin * (ToaHXi-TexhHXi))                            -048j    7
c                                                                               ERVnt 1253
      End Subroutine WheelSpeed                                                 -048   125
c                                                                               ERVnt 1255
c                                                                               ERVnt 1294
      END                                                                       ERVnt 1295
      FUNCTION NewERVentilator(Keywords)                                        NewERV   2
c                                                                               NewERV   3
c              Spins off an energy recovery ventilator as a separate            NewERV   4
c              component from the system in which it was defined.               NewERV   5
c                                                                               NewERV   6
C              DEVELOPED BY                                                     -130    15
C                            J. J. Hirsch & S. D. Gates                         -130    16
C                            James J. Hirsch & Associates                       -130    17
C                            Camarillo, California                              -130    18
C                                                                               -130    19
Copyright (c) 1997 by James J. Hirsch. All Rights Reserved. Unpublished         -130    20
c rights reserved under the Copyright Laws of the United States.                -130    21
c RESTRICTED RIGHTS NOTICE: Government use, reproduction or disclosure          -130    22
c is subject to restrictions as set forth in Rights in Data (g)(3) in           -130    23
c UC/LBL purchase order 4607010 with J.J. Hirsch & Associates.                  -130    24
C                                                                               -130    25
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
c                                                                               NewERV   9
      REAL Keywords(1)                                                          NewERV  10
c                                                                               NewERV  11
c              Create the block                                                 NewERV  12
      Jrv = NewBlockPtr(<+rv;Len>)                                              NewERV  13
c                                                                               NewERV  14
c              Transfer the keywords from the system command                    NewERV  15
      DO  I=1,<+rv***Pointers***>                                               NewERV  16
        AA(Jrv+I-1) = Keywords(I)                                               NewERV  17
      ENDDO                                                                     NewERV  18
c                                                                               NewERV  19
      NewERVentilator = Jrv                                                     NewERV  20
c                                                                               NewERV  21
      RETURN                                                                    NewERV  22
      END                                                                       NewERV  23
      SUBROUTINE EVAPDS(ICALL)                                                  EVAPDS   2
C                                                                               EVAPDS   3
C               DESIGN CALCULATIONS FOR EVAP-COOL SYSTEM                        EVAPDS   4
C                                                                               EVAPDS   5
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
C              SYSTEM LEVEL VARIABLES FOR DESICCANT SYSTEMS, BOTH TOTAL         /DSYSTD/ 2
C              AND INTEGRATED                                                   /DSYSTD/ 3
      COMMON  /DSYSTD/  SCGAS, QREG, WBR, WB8, T8, W8, WB9, T9, W9, EFF,        /DSYSTD/ 4
     1                  DTON, DMODE(7), ERMAX4, ERMAX5, ERMAX6, OPMODE,         /DSYSTD/ 5
     2                  DBOA,WOA,DGAS,DKW,TCONDd,QCDTOT,QCDS,QCDL,              /DSYSTD/ 6
     3                  POA,DFANKW,RFANKW,DMOTKW,EVKW,QCEVT,QCEVS,              /DSYSTD/ 7
     4                  QCEVL,TCMNEV                                            /DSYSTD/ 8
      REAL DSYSTD(39)                                                           /DSYSTD/ 9
      EQUIVALENCE (DSYSTD(1), SCGAS)                                            /DSYSTD/10
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                 IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                        /FILES/  3
     2               , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                   /FILES/  4
     3                 IHRREP(3), IHRPAS(2)                                     /FILES/  5
      COMMON  /MISCD / TEMPS(4,9999),CONS(5),TEMPSL(9999),                      -048a   10
     1                 BLDGQH,BLDGQC,BLDGQL,BLDGP,BPMULT,                       /MISCD/  3
     $                 DBTMIN,DBTMAX,WMIN,WMAX,NSPZ(9999),                      -048a   11
     3                 DQ, DTP, DTR, DTS, FPI, PLRCC , POM, TC2, TDM,           /MISCD/  5
     4                 TRA,WCOL,WCOLM,WMM,YPI,KWBTU,BTUKW,UNFILD,Unusedm        RemPA   45
      REAL             KWBTU                                                    /MISCD/  7
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      COMMON  /REPORT/ IREPRT(4,37),IPRG,IUNIQV(100),IUNIQS(100),IUNIQL         HVAC14   4
      COMMON  /SYSTD / TH,TC,TM,TR,QH,QC,QHZ,QCZ,QHB,QHP,QHUM,                  /SYSTD/  2
     1                 QDHUM,TCMIN,THMAX,QLSUM,QPSUM,CFM,CFMH,CFMC,             /SYSTD/  3
     2                 RCFM,ECFM,CINF,FON,HON,CON,BON,SCONS(3),PH,PC,           /SYSTD/  4
     3                 SKW,FANKW,unused1,WR,WM,WCOIL,WW,PO,D,                   -046f    1
     4                 FTEMP,TCR,QHR,RfanPumpKW,SGAS,SKWQH,SKWQC,QCLAT,         -131    23
     5                 SFKW,RFKW,FONNGT,WSURF,RWalkinQ,TSURF,TRh,               -131    24
     6                 CBF,CBF1,CBF2,EON,PLRCFM,PLRC,PLRH,QCM1,                 /SYSTD/  8
     7                 QCM2,QHM1,EIRM1,EIRM2,EIR,OFKW,QCT,QCS,                  /SYSTD/  9
     8                 WRMAX,WRMIN,CFMRAT,QdistG,QdistL,RON,QHT,                /SYSTD/ 10
     9                 TPOMIN,POMIN,QHSUP,QRSENS,QRLAT,QRREC,QRREJ,             /SYSTD/ 11
     1                 RCOMKW,RDEFKW,RAUXKW,ECFMP,CFMIN,CINFP,DT,DW,            /SYSTD/ 12
     2                 EWB,IC,NATTSP,Q,RETR,SLOAD,QLSUMP,T,TCHUM,TEND,          /SYSTD/ 13
     3                 TS,hgbmin,HPDefE,EconoOnly,TDuctEnv,                     -044e1   1
     4                 QCUNMT,CapRh,CapRph,CapRc                                HVAC25   3
      REAL             SYSTD(113)                                               HVAC19  13
      EQUIVALENCE      (SYSTD(1),TH)                                            RemPA   65
      COMMON  /ZONED / EXCFM,FH,FC,CFMZ,QHBZ,QOVER,THZ,TCZ,ERMAX,ERMIN,         /ZONED/  2
     1                 TRY,FTD,CORINT,G0,G1,G2,G3,SIGMAG,TL,ZQHR,TAVE,          /ZONED/  3
     2                 ZQH,ZQC,FCHPS(15),ACFM,ZKW,TCMINZ,THMAXZ,                /ZONED/  4
     3                 ERMAXM,ERMINM,THR,CSSCND,CSSVEC,HENOW,QGWIN,             /ZONED/  5
     4                 QSNABT,QGOPWL,QGVEC,CFMCVT,SSFPT,CFMVNT,ZFANKW,          /ZONED/  6
     5                 ZKWCBT,ZKWHBT,ZCapRbbrd, XC,ZC,XH,ZH                     -044e2   7
      REAL ZONED(63)                                                            -044e2   8
      EQUIVALENCE (ZONED(1),EXCFM)                                              /ZONED/  9
      H(DB,W) = 0.24*DB + (1061.0+0.444*DB)*W                                   H        2
      V(DB,W,P) = 0.754*(DB+459.7)*(1.0+1.605*W)/P                              V        2
C                                                                               EVAPDS  16
      DBIN = 95.                                                                EVAPDS  17
      WBIN = 75.                                                                EVAPDS  18
      WIN = WFDBWB(DBIN,WBIN,BLDGP)                                             EVAPDS  19
c     IF (IREPRT(2,35) .NE. 0)                                                  IREPRT  45
c    1    WRITE(IOUTPT,9001) ICALL,DBIN,WIN,WBIN                                EVAPDS  21
c9001 FORMAT(1X,7HICALL =,   I2,2X,7HDBIN  =,E12.6,2X,7HWIN   =,E12.6,          EVAPDS  22
c    1       2X,7HWBIN  =,E12.6)                                                EVAPDS  23
      IF (<SWAMP-COOLER> .EQ. 0) THEN                                           EVAPDS  24
          CALL EVAPID(1.,<INDIR-EFF>,1.,DBIN,WBIN,WIN,EFFID,DB2,WB2,W2)         EVAPDS  25
      ELSE                                                                      EVAPDS  26
          DB2 = DBIN                                                            EVAPDS  27
          W2 = WIN                                                              EVAPDS  28
          WB2 = WBFS(DB2,W2,BLDGP)                                              EVAPDS  29
      END IF                                                                    EVAPDS  30
c     IF (IREPRT(2,35) .NE. 0)                                                  IREPRT  46
c    1    WRITE(IOUTPT,9002) EFFID,DB2,WB2,W2                                   EVAPDS  32
c9002 FORMAT(1X,7HEFFID =,E12.6,2X,7HDB2   =,E12.6,2X,7HWB2   =,E12.6,          EVAPDS  33
c    1       2X,7HW2    =,E12.6)                                                EVAPDS  34
      IF ((<EVAP-CL-TYPE> .EQ. 2) .OR. (<SWAMP-COOLER> .EQ. 1)) THEN            EVAPDS  35
          CALL EVAPDR(1.,<DIRECT-EFF>,1.,DB2,WB2,EFFDR,DB3,WB3)                 EVAPDS  36
          W3 = WFDBWB(DB3,WB3,BLDGP)                                            EVAPDS  37
      ELSE                                                                      EVAPDS  38
          DB3 = DB2                                                             EVAPDS  39
          WB3 = WB2                                                             EVAPDS  40
          W3 = W2                                                               EVAPDS  41
      END IF                                                                    EVAPDS  42
c     IF (IREPRT(2,35) .NE. 0)                                                  IREPRT  47
c    1    WRITE(IOUTPT,9003) EFFDR,DB3,WB3,W3                                   EVAPDS  44
c9003 FORMAT(1X,7HEFFDR =,E12.6,2X,7HDB3   =,E12.6,2X,7HWB3   =,E12.6,          EVAPDS  45
c    1       2X,7HW3    =,E12.6)                                                EVAPDS  46
      IF (ICALL .EQ. 1) THEN                                                    EVAPDS  47
          <MIN-SUPPLY-T> = DB3                                                  EVAPDS  48
          IF (<SWAMP-COOLER> .EQ. 0) THEN                                       EVAPDS  49
              PO = <MIN-OUTSIDE-AIR>                                            EVAPDS  50
          ELSE                                                                  EVAPDS  51
              PO = 1.0                                                          EVAPDS  52
          END IF                                                                EVAPDS  53
          TMMIN = (1.-PO)*80. + PO*DBTMIN                                       EVAPDS  54
          IF (<SWAMP-COOLER> .EQ. 0) THEN                                       EVAPDS  55
              dThcoil= -<HEATING-CAPACITY>/(CONS(1)*<SUPPLY-CFM>*               CCIG7  107
     1              <MIN-CFM-RATIO>)                                            CCIG7  108
              <MAX-SUPPLY-T> = TMMIN + dThcoil                                  CCIG7  109
          END IF                                                                EVAPDS  59
c     IF (IREPRT(2,35) .NE. 0)                                                  IREPRT  48
c    1    WRITE(IOUTPT,9004) <MIN-SUPPLY-T>,PO,TMMIN,dThcoil,                   CCIG7  110
c    $                       <MAX-SUPPLY-T>                                     CCIG7  111
c9004 FORMAT(1X,7HMINST =,E12.6,2X,7HPO    =,E12.6,2X,7HTMMIN =,E12.6/          EVAPDS  62
c    1       1X,7HDTH   =,E12.6,2x,7HMAXST =,E12.6)                             EVAPDS  63
      ELSE                                                                      EVAPDS  64
          WR = WFDBWB(80.,67.,BLDGP)                                            EVAPDS  65
          IF (<SWAMP-COOLER> .EQ. 0) THEN                                       EVAPDS  66
              <COOLING-CAPACITY> = <SUPPLY-CFM>*(H(DBIN,WIN)-H(DB3,W3))*        EVAPDS  67
     1        60./V(DBIN,WIN,BLDGP)                                             EVAPDS  68
          ELSE                                                                  EVAPDS  69
              <COOLING-CAPACITY> = 0.                                           EVAPDS  70
          END IF                                                                EVAPDS  71
          <COOL-SH-CAP> = CONS(1)*<SUPPLY-CFM>*(DBIN-DB3)                       EVAPDS  72
c     IF (IREPRT(2,35) .NE. 0)                                                  IREPRT  49
c    1    WRITE(IOUTPT,9005) WR,<COOLING-CAPACITY>,<COOL-SH-CAP>                EVAPDS  74
c9005 FORMAT(1X,7HWR    =,E12.6,2X,7HCL-CAP=,E12.6,2X,7HSC-CAP=,E12.6)          EVAPDS  75
      END IF                                                                    EVAPDS  76
      RETURN                                                                    EVAPDS  77
      END                                                                       EVAPDS  78
      SUBROUTINE EVAPID(CFMR,EFFR,CFM,DBIN,WBSEC,WIN,                           EVAPID   2
     1                  EFF,DBOUT,WBOUT,WOUT)                                   EVAPID   3
C                                                                               EVAPID   4
C               INDIRECT EVAPORATIVE COOLER PERFORMANCE                         EVAPID   5
C                                                                               EVAPID   6
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
C                                                                               EVAPID  10
C               PART LOAD                                                       EVAPID  11
      PLR = CFM/CFMR                                                            EVAPID  12
C               GET EFFECTIVENESS MULTIPLIER (FUNCTION OF PART LOAD) FROM CURVE EVAPID  13
      EFFM1 = CVAL(<INDIR-EFF-FCFM>,PLR,0.)                                     EVAPID  14
C               EFFECTIVENESS                                                   EVAPID  15
      EFF = AMIN1(EFFR*EFFM1,0.99)                                              EVAPID  16
C               OUTLET DRYBULB                                                  EVAPID  17
      DBOUT = DBIN - EFF*(DBIN-WBSEC)                                           EVAPID  18
C               OUTLET HUMIDITY RATIO                                           EVAPID  19
      WOUT = WIN                                                                EVAPID  20
C               OUTLET WETBULB                                                  EVAPID  21
      WBOUT = WBFS(DBOUT,WOUT,PATM)                                             EVAPID  22
      RETURN                                                                    EVAPID  23
      END                                                                       EVAPID  24
      SUBROUTINE EVAPDR(CFMR,EFFR,CFM,DBIN,WBIN,EFF,DBOUT,WBOUT)                EVAPDR   2
C                                                                               EVAPDR   3
C               DIRECT EVAPORATIVE COOLER PERFORMANCE                           EVAPDR   4
C                                                                               EVAPDR   5
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
C                                                                               EVAPDR   8
C               PART LOAD RATIO                                                 EVAPDR   9
      PLR = CFM/CFMR                                                            EVAPDR  10
C               GET EFFECTIVENESS MULTIPLIER (FUNC OF PART LOAD) FROM CURVE     EVAPDR  11
      EFFM1 = CVAL(<DIRECT-EFF-FCFM>,PLR,0.)                                    EVAPDR  12
C               EFFECTIVENESS                                                   EVAPDR  13
      EFF = AMIN1(EFFR*EFFM1,0.99)                                              EVAPDR  14
C               EXIT WETBULB                                                    EVAPDR  15
      WBOUT = WBIN                                                              EVAPDR  16
C               EXIT DRYBULB                                                    EVAPDR  17
      DBOUT = DBIN - EFF*(DBIN-WBIN)                                            EVAPDR  18
      RETURN                                                                    EVAPDR  19
      END                                                                       EVAPDR  20
      SUBROUTINE EVAPPF(ISUM,TSUP,DBIN0,WIN0,DBOUT,WOUT,PEVA)                   EVAPPF   2
C                                                                               EVAPPF   3
C               SIMULATE THE CONTROL OF THE EVAPORATIVE COOLER UNIT.            EVAPPF   4
C               CALCULATE THE OUTLET HUMIDITY AND TEMPERATURE - WOUT            EVAPPF   5
C               AND DBOUT.                                                      EVAPPF   6
C                                                                               EVAPPF   7
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON  /DPLTD /  DPLTDisUnused                                           HVAC15   1
C              SYSTEM LEVEL VARIABLES FOR DESICCANT SYSTEMS, BOTH TOTAL         /DSYSTD/ 2
C              AND INTEGRATED                                                   /DSYSTD/ 3
      COMMON  /DSYSTD/  SCGAS, QREG, WBR, WB8, T8, W8, WB9, T9, W9, EFF,        /DSYSTD/ 4
     1                  DTON, DMODE(7), ERMAX4, ERMAX5, ERMAX6, OPMODE,         /DSYSTD/ 5
     2                  DBOA,WOA,DGAS,DKW,TCONDd,QCDTOT,QCDS,QCDL,              /DSYSTD/ 6
     3                  POA,DFANKW,RFANKW,DMOTKW,EVKW,QCEVT,QCEVS,              /DSYSTD/ 7
     4                  QCEVL,TCMNEV                                            /DSYSTD/ 8
      REAL DSYSTD(39)                                                           /DSYSTD/ 9
      EQUIVALENCE (DSYSTD(1), SCGAS)                                            /DSYSTD/10
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                 IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                        /FILES/  3
     2               , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                   /FILES/  4
     3                 IHRREP(3), IHRPAS(2)                                     /FILES/  5
      COMMON  /ENDUSE/ SUPPKW, HEATKW                                           HVAC27   1
      COMMON  /HRREP / Irb, Ihrp, Lrb, Lhrp, Nrb, Nhrp, IVTLIM(3,50),           HR       5
     &                 IGRPtr, IBRPtr, IRSch, IRSchT(5),                        HR       6
     &                 NHRTyp(3), ITBUF(3), ITBUFB(3), ITBUFE(3),               HR       7
     &                 IHREOF, ICDFLG                                           HR       8
      COMMON  /MISCD / TEMPS(4,9999),CONS(5),TEMPSL(9999),                      -048a   10
     1                 BLDGQH,BLDGQC,BLDGQL,BLDGP,BPMULT,                       /MISCD/  3
     $                 DBTMIN,DBTMAX,WMIN,WMAX,NSPZ(9999),                      -048a   11
     3                 DQ, DTP, DTR, DTS, FPI, PLRCC , POM, TC2, TDM,           /MISCD/  5
     4                 TRA,WCOL,WCOLM,WMM,YPI,KWBTU,BTUKW,UNFILD,Unusedm        RemPA   45
      REAL             KWBTU                                                    /MISCD/  7
      COMMON  /PLANTD/ QHMP,TMP,CFMP,QHPP,CFMPP,                                /PLANTD/ 2
     1                 QHZP,TZP,DHWPKW,DHWPLF,DHWQRP                            RemPA   46
      REAL             PLANTD(10)                                               RemPA   47
      EQUIVALENCE      (PLANTD(1), QHMP)                                        RemPA   48
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      COMMON  /REPORT/ IREPRT(4,37),IPRG,IUNIQV(100),IUNIQS(100),IUNIQL         HVAC14   4
      COMMON /SHP   / QCRUN,QCLOAD,QCGAS,QCAUX,QCGSLD,QCGSUP,                   /SHP/    2
     1                QCWAS,QCWASU,QCGSAV,QCFAN,                                /SHP/    3
     2                QHRUN,QHLOAD,QHGAS,QHAUX,QHGSLD,QHGSUP,                   /SHP/    4
     3                QHWAS,QHWASU,QHGDFR,QHFAN,          CUR(25),              /SHP/    5
     4                GSAV1,GASV2,PCH,ISZCZ,GCAP(2),GEDB,QHDFRG,                -044c1   1
     5                GRPM,PLRSUP,CFMCYC,CLPLR,CFMVVT,QHZHP,PCCEDB,             /SHP/    7
     6                IHPREP,IHPOUT,IHPHRR,IHPHRN,IRST,IREN                     /SHP/    8
      COMMON /SHPZ  / QCRUNZ,QCLOADZ,QCGASZ,QCAUXZ,QCGSLDZ,QCGSUPZ,             /SHP/    9
     1                QCWASZ,QCWASUZ,QCGSAVZ,QCFANZ,                            /SHP/   10
     2                QHRUNZ,QHLOADZ,QHGASZ,QHAUXZ,QHGSLDZ,QHGSUPZ,             /SHP/   11
     3                QHWASZ,QHWASUZ,QHGDFRZ,QHFANZ                             /SHP/   12
      DIMENSION       SHP(60),SHPZ(20)                                          /SHP/   13
      EQUIVALENCE     (SHP,QCRUN),(SHPZ,QCRUNZ)                                 /SHP/   14
     1               ,(DFM1,CUR(18)),(DFM2,CUR(19)),(DFM3,CUR(20))              /SHP/   15
      COMMON  /SYSTD / TH,TC,TM,TR,QH,QC,QHZ,QCZ,QHB,QHP,QHUM,                  /SYSTD/  2
     1                 QDHUM,TCMIN,THMAX,QLSUM,QPSUM,CFM,CFMH,CFMC,             /SYSTD/  3
     2                 RCFM,ECFM,CINF,FON,HON,CON,BON,SCONS(3),PH,PC,           /SYSTD/  4
     3                 SKW,FANKW,unused1,WR,WM,WCOIL,WW,PO,D,                   -046f    1
     4                 FTEMP,TCR,QHR,RfanPumpKW,SGAS,SKWQH,SKWQC,QCLAT,         -131    23
     5                 SFKW,RFKW,FONNGT,WSURF,RWalkinQ,TSURF,TRh,               -131    24
     6                 CBF,CBF1,CBF2,EON,PLRCFM,PLRC,PLRH,QCM1,                 /SYSTD/  8
     7                 QCM2,QHM1,EIRM1,EIRM2,EIR,OFKW,QCT,QCS,                  /SYSTD/  9
     8                 WRMAX,WRMIN,CFMRAT,QdistG,QdistL,RON,QHT,                /SYSTD/ 10
     9                 TPOMIN,POMIN,QHSUP,QRSENS,QRLAT,QRREC,QRREJ,             /SYSTD/ 11
     1                 RCOMKW,RDEFKW,RAUXKW,ECFMP,CFMIN,CINFP,DT,DW,            /SYSTD/ 12
     2                 EWB,IC,NATTSP,Q,RETR,SLOAD,QLSUMP,T,TCHUM,TEND,          /SYSTD/ 13
     3                 TS,hgbmin,HPDefE,EconoOnly,TDuctEnv,                     -044e1   1
     4                 QCUNMT,CapRh,CapRph,CapRc                                HVAC25   3
      REAL             SYSTD(113)                                               HVAC19  13
      EQUIVALENCE      (SYSTD(1),TH)                                            RemPA   65
      COMMON  /TIME  / IDOY, IYR, IMO, IDAY, IHR,                               Time     4
     &                 ISCMO, ISCDAY, ISCHR, IDOW, ISCDOW, iDSdates(6),         -044e5   1
     &                 iTimeFlg, iDSFlg, iDDFlg, InitialFlg, LeapYr,            Time     6
     &                 CLOCK(10), MONDSC(13), MONLEN(12), MONSDA(12)            HR      12
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
      COMMON  /ZONED / EXCFM,FH,FC,CFMZ,QHBZ,QOVER,THZ,TCZ,ERMAX,ERMIN,         /ZONED/  2
     1                 TRY,FTD,CORINT,G0,G1,G2,G3,SIGMAG,TL,ZQHR,TAVE,          /ZONED/  3
     2                 ZQH,ZQC,FCHPS(15),ACFM,ZKW,TCMINZ,THMAXZ,                /ZONED/  4
     3                 ERMAXM,ERMINM,THR,CSSCND,CSSVEC,HENOW,QGWIN,             /ZONED/  5
     4                 QSNABT,QGOPWL,QGVEC,CFMCVT,SSFPT,CFMVNT,ZFANKW,          /ZONED/  6
     5                 ZKWCBT,ZKWHBT,ZCapRbbrd, XC,ZC,XH,ZH                     -044e2   7
      REAL ZONED(63)                                                            -044e2   8
      EQUIVALENCE (ZONED(1),EXCFM)                                              /ZONED/  9
C                                                                               EVAPPF  23
      H(DB,W) = 0.24*DB + (1061.0+0.444*DB)*W                                   H        2
      V(DB,W,P) = 0.754*(DB+459.7)*(1.0+1.605*W)/P                              V        2
C                                                                               EVAPPF  26
C              SET CFM THROUGH EVAP UNIT                                        EVAPPF  27
C              SET FRACTION OF SUPPLY AIR THROUGH UNIT                          EVAPPF  28
      IF (<INDOOR-FAN-MODE>.EQ.1) THEN                                          EVAPPF  29
          <EVAP-CFM> = <EVAP-CFMD>                                              EVAPPF  30
          PEVA = <EVAP-CFMD>/<SUPPLY-CFM>                                       EVAPPF  31
      ELSE                                                                      EVAPPF  32
          <EVAP-CFM> = AMIN1(<EVAP-CFMD>,CFM)                                   EVAPPF  33
          PEVA = <EVAP-CFM>/CFM                                                 EVAPPF  34
          PEVA = AMAX1(0.,AMIN1(1.,PEVA))                                       EVAPPF  35
          IF (PEVA.GT.0.99) PEVA = 1.0                                          EVAPPF  36
          IF (ABS(PEVA-PO).LT.0.01) PEVA=PO                                     EVAPPF  37
      END IF                                                                    EVAPPF  38
      IF (PEVA .GT. PO)  THEN                                                   EVAPPF  39
          DB1 = ((PEVA-PO)*TR + PO*DBIN0)/PEVA                                  EVAPPF  40
          W1 = ((PEVA-PO)*<PASTWR> + PO*WIN0)/PEVA                              EVAPPF  41
      ELSE                                                                      EVAPPF  42
          DB1 = DBIN0                                                           EVAPPF  43
          W1 = WIN0                                                             EVAPPF  44
      END IF                                                                    EVAPPF  45
      WB1 = WBFS(DB1,W1,PATM)                                                   EVAPPF  46
C     INITIALIZE THE OUTPUT VARIABLES                                           EVAPPF  47
      DTON = 0.                                                                 EVAPPF  48
      DBOUT = DB1                                                               EVAPPF  49
      WOUT = W1                                                                 EVAPPF  50
C               CALC THE MIXED AIR TEMP WITH NO EVAP UNIT                       EVAPPF  51
      TM0 = PO*DBIN0 + (1.-PO)*TR                                               EVAPPF  52
c     IF ((<ISYBUFP>.NE.0) .AND. (IRSCH.NE.0)                                   IREPRT  50
c    $                                  .AND. (IREPRT(2,35).NE.0))              IREPRT  51
c    1    WRITE(IOUTPT,9001) PO,DBIN0,TR,TM0,TSUP,DBT,WBT,HUMRAT                EVAPPF  54
c9001 FORMAT(1X,7HPO    =,E12.6,2X,7HDBIN0 =,E12.6,2X,7HTR    =,E12.6/          EVAPPF  55
c    1       1X,7HTM0   =,E12.6,2X,7HTSUP  =,E12.6,2X,7HDBT   =,E12.6/          EVAPPF  56
c    2       1X,7HWBT   =,E12.6,2X,7HHUMRAT=,E12.6)                             EVAPPF  57
c     IF ((<ISYBUFP>.NE.0) .AND. (IRSCH.NE.0)                                   IREPRT  52
c    $                                  .AND. (IREPRT(2,35).NE.0))              IREPRT  53
c    1    WRITE(IOUTPT,9002) <EVAP-CFM>,CFM,PEVA,<PASTWR>,DB1,W1,WB1            EVAPPF  59
c9002 FORMAT(1X,7HEVPCFM=,E12.6,2X,7HCFM   =,E12.6,2X,7HPEVA  =,E12.6/          EVAPPF  60
c    1       1X,7HPASTWR=,E12.6,2X,7HDB1   =,E12.6,2X,7HW1    =,E12.6/          EVAPPF  61
c    2       1X,7HWB1   =,E12.6)                                                EVAPPF  62
C               IF ENTERING TEMP GREATER THAN EVAP LIMIT, NO COOLING            EVAPPF  63
      IF (DBIN0 .GT. <EVAP-CL-LIMIT-T>)  GO TO 1000                             EVAPPF  64
C               IF TM0 IS LESS THAN THE NEEDED SUPPLY TEMP, EVAP                EVAPPF  65
C               COOLING IS NOT NECESSARY                                        EVAPPF  66
      IF (TM0 .LE. TSUP+0.1) GO TO 1000                                         EVAPPF  67
C               CHECK WHETHER SECONDARY AIR IS OUTSIDE AIR OR RETURN AIR        EVAPPF  68
      IF (<EVAP-CL+REC-RA> .EQ. 1) THEN                                         EVAPPF  69
          WBSEC = WBFS(TR,<PASTWR>,PATM)                                        EVAPPF  70
      ELSE                                                                      EVAPPF  71
          WBSEC = WBT                                                           EVAPPF  72
      END IF                                                                    EVAPPF  73
                                                                                EVAPPF  74
C              IF THERE IS AN INDIRECT EVAP COOLER, CALCULATE ITS EXIT          EVAPPF  75
C              CONDITION ASSUMING IT RUNS FOR THE ENTIRE HOUR                   EVAPPF  76
      IF (<EVAP-CL-TYPE>.EQ.1 .OR. <EVAP-CL-TYPE>.EQ.2) THEN                    EVAPPF  77
          CALL EVAPID(<EVAP-CFMD>,<INDIR-EFF>,<EVAP-CFM>,DB1,WBSEC,W1,          EVAPPF  78
     1                EFFID,DB2,WB2,W2)                                         EVAPPF  79
      ELSE                                                                      EVAPPF  80
          DB2 = DB1                                                             EVAPPF  81
          WB2 = WB1                                                             EVAPPF  82
          W2 = W1                                                               EVAPPF  83
      END IF                                                                    EVAPPF  84
c     IF ((<ISYBUFP>.NE.0) .AND. (IRSCH.NE.0)                                   IREPRT  54
c    $                                  .AND. (IREPRT(2,35).NE.0))              IREPRT  55
c    1    WRITE(IOUTPT,9003) EFFID,DB2,WB2,W2                                   EVAPPF  86
c9003 FORMAT(1X,7HEFFID =,E12.6,2X,7HDB2   =,E12.6,2X,7HWB2   =,E12.6/          EVAPPF  87
c    1       1X,7HW2    =,E12.6)                                                EVAPPF  88
C               CHECK WHETHER THERE IS A DIRECT EVAP COOLER AND                 EVAPPF  89
C               GET ITS EXIT CONDITIONS                                         EVAPPF  90
      IF (<EVAP-CL-TYPE>.EQ.2 .OR. <EVAP-CL-TYPE>.EQ.3) THEN                    EVAPPF  91
          CALL EVAPDR(<EVAP-CFMD>,<DIRECT-EFF>,<EVAP-CFM>,DB2,WB2,              EVAPPF  92
     1                EFFDR,DB3,WB3)                                            EVAPPF  93
          W3 = WFDBWB(DB3,WB3,PATM)                                             EVAPPF  94
      ELSE                                                                      EVAPPF  95
          DB3 = DB2                                                             EVAPPF  96
          WB3 = WB2                                                             EVAPPF  97
          W3 = W2                                                               EVAPPF  98
      END IF                                                                    EVAPPF  99
c     IF ((<ISYBUFP>.NE.0) .AND. (IRSCH.NE.0)                                   IREPRT  56
c    $                                  .AND. (IREPRT(2,35).NE.0))              IREPRT  57
c    1    WRITE(IOUTPT,9004) EFFDR,DB3,WB3,W3                                   EVAPPF 101
c9004 FORMAT(1X,7HEFFDR =,E12.6,2X,7HDB3   =,E12.6,2X,7HWB3   =,E12.6/          EVAPPF 102
c    1       1X,7HW3    =,E12.6)                                                EVAPPF 103
C               NOW CALCULATE THE MIXED AIR TEMPERATURE ASSUMING THE            EVAPPF 104
C               EVAP COOLER HAS BEEN RUNNING (THE ENTIRE HOUR)                  EVAPPF 105
      IF (PEVA .GE. PO) THEN                                                    EVAPPF 106
          TM1 = PEVA*DB3 + (1.-PEVA)*TR                                         EVAPPF 107
      ELSE                                                                      EVAPPF 108
          TM1 = PEVA*DB3 + (PO-PEVA)*DBIN0 + (1.-PO)*TR                         EVAPPF 109
      END IF                                                                    EVAPPF 110
C              If this is a call to estimate the min supply temp                -042f   63
C              run the Evap Cool for entire hour                                -042f   64
      IF (ISUM.EQ.0) THEN                                                       -042f   65
          DTON = 1.0                                                            -042f   66
C              If not min est. call, and If Evap Cool can satisfy               -042f   67
C              the full requirement use it                                      -042f   68
      ELSE IF (TM1.LE.TSUP) THEN                                                -042f   69
          DTON = (TM0-TSUP)/(TM0-TM1)                                           -042f   70
C              If Evap Cool cannot satisfy the entire requirement ...           -042f   71
C              IF Evap and Mechanical are SEPERATE operation and                -042f   72
C              mechanical is ON, use only the mechanical                        -042f   73
      ELSE IF (<EVAP-CL+M-SUP>.EQ.0 .AND. CON.GT.0.) THEN                       -042f   74
          DTON = 0.0                                                            -042f   75
C              otherwise use full evap here (mechanical supp. later)            -042f   76
      ELSE                                                                      -042f   77
          DTON = 1.0                                                            -042f   78
      END IF                                                                    -042f   79
C               NOW CALCULATE THE AVERAGE EVAP COOLER EXIT CONDITIONS           EVAPPF 123
      DBOUT = DTON*DB3 + (1.-DTON)*DB1                                          EVAPPF 124
      WOUT = DTON*W3 + (1.-DTON)*W1                                             EVAPPF 125
c     IF ((<ISYBUFP>.NE.0) .AND. (IRSCH.NE.0)                                   IREPRT  58
c    $                                  .AND. (IREPRT(2,35).NE.0))              IREPRT  59
c    1    WRITE(IOUTPT,9005) TM1,DTON,DBOUT,WOUT                                EVAPPF 127
c9005 FORMAT(1X,7HTM1   =,E12.6,2X,7HDTON  =,E12.6,2X,7HDBOUT =,E12.6/          EVAPPF 128
c    1       1X,7HWOUT  =,E12.6)                                                EVAPPF 129
C               CALCULATE THE COOLING DONE AND THE ENERGY USED                  EVAPPF 130
      IF (ISUM .EQ. 2) THEN                                                     EVAPPF 131
          EVKW = <EVAP-CL-KW>*<EVAP-CFM>*CFMCYC*DTON                            EVAPPF 132
          SKWQC = SKWQC + EVKW                                                  EVAPPF 133
          <SKW> = <SKW> + EVKW                                                  EVAPPF 134
          JEM       = <COOL-E-MS>                                               HVAC6  152
          <COOL-EM> = <COOL-EM> + EVKW                                          HVAC6  153
          D = 1./V(DB1,W1,PATM)                                                 EVAPPF 136
          DQEV = H(DB1,W1) - H(DBOUT,WOUT)                                      EVAPPF 137
          QCEVT = 60.*<EVAP-CFM>*D*DQEV*CFMCYC                                  EVAPPF 138
          CONS1 = (.24+.44*W1)*60.*D                                            EVAPPF 139
          QCEVS = CONS1*<EVAP-CFM>*(DB1-DBOUT)*CFMCYC                           EVAPPF 140
          QCEVL = QCEVT - QCEVS                                                 EVAPPF 141
          IF (<EVAP-CL-TYPE> .EQ. 1) THEN                                       EVAPPF 142
              QCEVS = QCEVT                                                     EVAPPF 143
              QCEVL = 0.                                                        EVAPPF 144
          END IF                                                                EVAPPF 145
      IF (ICODE.NE.25) THEN                                                     EVAPPF 146
          T8 = TCMNEV                                                           EVAPPF 147
          T9 = TM1                                                              EVAPPF 148
      END IF                                                                    EVAPPF 149
      TCONDd = TM0                                                              EVAPPF 150
      END IF                                                                    EVAPPF 151
C               IF ONLY PART OF THE OUTSIDE AIR GOES THROUGH THE EVAP           EVAPPF 152
C               COOLER, REDEFINE DBOUT AND WOUT AS THE TEMP AND HUM RATIO       EVAPPF 153
C               OF THE MIXED EVAP OUTLET AND REMAINING OUTSIDE AIR STREAMS      EVAPPF 154
      IF (PEVA .LT. PO) THEN                                                    EVAPPF 155
          DBOUT = ((PO-PEVA)*DBIN0 + PEVA*DBOUT)/PO                             EVAPPF 156
          WOUT = ((PO-PEVA)*WIN0 + PEVA*WOUT)/PO                                EVAPPF 157
      END IF                                                                    EVAPPF 158
C               REDEFINE PEVA SIMILARLY                                         EVAPPF 159
 1000 IF (PEVA .LT. PO)  PEVA = PO                                              EVAPPF 160
c     IF ((<ISYBUFP>.NE.0) .AND. (IRSCH.NE.0)                                   IREPRT  60
c    $                                  .AND. (IREPRT(2,35).NE.0))              IREPRT  61
c    1    WRITE(IOUTPT,9006) DBOUT,WOUT,PEVA                                    EVAPPF 162
c9006 FORMAT(1X,7HDBOUT =,E12.6,2X,7HWOUT  =,E12.6,2X,7HPEVA  =,E12.6)          EVAPPF 163
      RETURN                                                                    EVAPPF 164
      END                                                                       EVAPPF 165
      SUBROUTINE EVINDR(CFMT,DTF,DRY8,WET8,HUMR8)                               EVINDR   2
C                                                                               EVINDR   3
C              SIMULATE INDIRECT EVAP COOLER IN DCS (TYPE 25) SYSTEM            EVINDR   4
C                                                                               EVINDR   5
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
C              SYSTEM LEVEL VARIABLES FOR DESICCANT SYSTEMS, BOTH TOTAL         /DSYSTD/ 2
C              AND INTEGRATED                                                   /DSYSTD/ 3
      COMMON  /DSYSTD/  SCGAS, QREG, WBR, WB8, T8, W8, WB9, T9, W9, EFF,        /DSYSTD/ 4
     1                  DTON, DMODE(7), ERMAX4, ERMAX5, ERMAX6, OPMODE,         /DSYSTD/ 5
     2                  DBOA,WOA,DGAS,DKW,TCONDd,QCDTOT,QCDS,QCDL,              /DSYSTD/ 6
     3                  POA,DFANKW,RFANKW,DMOTKW,EVKW,QCEVT,QCEVS,              /DSYSTD/ 7
     4                  QCEVL,TCMNEV                                            /DSYSTD/ 8
      REAL DSYSTD(39)                                                           /DSYSTD/ 9
      EQUIVALENCE (DSYSTD(1), SCGAS)                                            /DSYSTD/10
      COMMON  /MISCD / TEMPS(4,9999),CONS(5),TEMPSL(9999),                      -048a   10
     1                 BLDGQH,BLDGQC,BLDGQL,BLDGP,BPMULT,                       /MISCD/  3
     $                 DBTMIN,DBTMAX,WMIN,WMAX,NSPZ(9999),                      -048a   11
     3                 DQ, DTP, DTR, DTS, FPI, PLRCC , POM, TC2, TDM,           /MISCD/  5
     4                 TRA,WCOL,WCOLM,WMM,YPI,KWBTU,BTUKW,UNFILD,Unusedm        RemPA   45
      REAL             KWBTU                                                    /MISCD/  7
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      COMMON  /SYSTD / TH,TC,TM,TR,QH,QC,QHZ,QCZ,QHB,QHP,QHUM,                  /SYSTD/  2
     1                 QDHUM,TCMIN,THMAX,QLSUM,QPSUM,CFM,CFMH,CFMC,             /SYSTD/  3
     2                 RCFM,ECFM,CINF,FON,HON,CON,BON,SCONS(3),PH,PC,           /SYSTD/  4
     3                 SKW,FANKW,unused1,WR,WM,WCOIL,WW,PO,D,                   -046f    1
     4                 FTEMP,TCR,QHR,RfanPumpKW,SGAS,SKWQH,SKWQC,QCLAT,         -131    23
     5                 SFKW,RFKW,FONNGT,WSURF,RWalkinQ,TSURF,TRh,               -131    24
     6                 CBF,CBF1,CBF2,EON,PLRCFM,PLRC,PLRH,QCM1,                 /SYSTD/  8
     7                 QCM2,QHM1,EIRM1,EIRM2,EIR,OFKW,QCT,QCS,                  /SYSTD/  9
     8                 WRMAX,WRMIN,CFMRAT,QdistG,QdistL,RON,QHT,                /SYSTD/ 10
     9                 TPOMIN,POMIN,QHSUP,QRSENS,QRLAT,QRREC,QRREJ,             /SYSTD/ 11
     1                 RCOMKW,RDEFKW,RAUXKW,ECFMP,CFMIN,CINFP,DT,DW,            /SYSTD/ 12
     2                 EWB,IC,NATTSP,Q,RETR,SLOAD,QLSUMP,T,TCHUM,TEND,          /SYSTD/ 13
     3                 TS,hgbmin,HPDefE,EconoOnly,TDuctEnv,                     -044e1   1
     4                 QCUNMT,CapRh,CapRph,CapRc                                HVAC25   3
      REAL             SYSTD(113)                                               HVAC19  13
      EQUIVALENCE      (SYSTD(1),TH)                                            RemPA   65
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
      COMMON  /ZONED / EXCFM,FH,FC,CFMZ,QHBZ,QOVER,THZ,TCZ,ERMAX,ERMIN,         /ZONED/  2
     1                 TRY,FTD,CORINT,G0,G1,G2,G3,SIGMAG,TL,ZQHR,TAVE,          /ZONED/  3
     2                 ZQH,ZQC,FCHPS(15),ACFM,ZKW,TCMINZ,THMAXZ,                /ZONED/  4
     3                 ERMAXM,ERMINM,THR,CSSCND,CSSVEC,HENOW,QGWIN,             /ZONED/  5
     4                 QSNABT,QGOPWL,QGVEC,CFMCVT,SSFPT,CFMVNT,ZFANKW,          /ZONED/  6
     5                 ZKWCBT,ZKWHBT,ZCapRbbrd, XC,ZC,XH,ZH                     -044e2   7
      REAL ZONED(63)                                                            -044e2   8
      EQUIVALENCE (ZONED(1),EXCFM)                                              /ZONED/  9
C                                                                               EVINDR  13
      II = 1                                                                    EVINDR  14
C              THE AIR ENTERING THE RETURN AIR EVAP COOLER (POINT 1)            EVINDR  15
C              WILL BE A MIXTURE OF RETURN AIR AND OUTSIDE MAKEUP AIR           EVINDR  16
C              WHEN EXHAUST FANS ARE PRESENT                                    EVINDR  17
      T1 = (AMAX1(CFMT-ECFM,0.)*TR+AMIN1(ECFM,CFMT)*DBT)                        EVINDR  18
     1     /AMAX1(CFMT,1.E-6)                                                   EVINDR  19
      W1 = (AMAX1(CFMT-ECFM,0.)*WR+AMIN1(ECFM,CFMT)*HUMRAT)                     EVINDR  20
     1     /AMAX1(CFMT,1.E-6)                                                   EVINDR  21
      WB1 = WBFS(T1,W1,PATM)                                                    EVINDR  22
C              CALL EVAP COOLER MODEL TO GET CONDITIONS AT OUTLET OF            EVINDR  23
C              RETURN AIR EVAP COOLER (POINT 2)                                 EVINDR  24
      CALL EVAPDR(<SUPPLY-CFM>,<DIRECT-EFF>,CFMT,T1,WB1,EFF2,T2,WB2)            EVINDR  25
C              GET HEAT EXCHANGER EFFICIENCY                                    EVINDR  26
      HXEFF = HXEFFF(<SUPPLY-CFM>,CFMT)                                         EVINDR  27
C              CALCULATE TEMPERATURE OF SUPPLY AIR AT OUTLET OF                 EVINDR  28
C              HEAT EXCHANGER (POINT 8)                                         EVINDR  29
      T7 = DBT + DTF                                                            EVINDR  30
      DRY8 = T7 - HXEFF*(T7-T2)                                                 EVINDR  31
C              PREVENT COOLING BELOW DEWPOINT                                   EVINDR  32
      DP8 = DEWPT(HUMRAT,PATM)                                                  EVINDR  33
      DRY8 = AMAX1(DP8,DRY8)                                                    EVINDR  34
      HUMR8 = HUMRAT                                                            EVINDR  35
C              WET BULB AT POINT 8                                              EVINDR  36
      WET8 = WBFS(DRY8,HUMR8,PATM)                                              EVINDR  37
      WET8 = AMIN1(WET8,DRY8)                                                   EVINDR  38
C     PRINT 99,ECFM,CFMT,<SUPPLY-CFM>,TR,WR,DBT,HUMRAT,T1,W1,WB1,               EVINDR  39
C    1 EFF2,T2,WB2,HXEFF,T7,DRY8,HUMSAT,HUMR8,WET8,PATM,DP8                     EVINDR  40
   99 FORMAT('  ECFM='E10.4'  CFMT='E10.4'  S-CFM='E10.4'  TR='E10.4/           EVINDR  41
     1 '  WR='E10.4'  DBT='E10.4'  HUMRAT='E10.4'  T1='E10.4/                   EVINDR  42
     2 '  W1='E10.4'  WB1='E10.4'  EFF2='  E10.4'  T2='E10.4/                   EVINDR  43
     3 '  WB2='E10.4'  HXEFF='E10.4'  T7='E10.4'  DRY8='E10.4/                  EVINDR  44
     4 '  HUMSAT='E10.4'  HUMR8='E10.4'  WET8='E10.4'  PATM='E10.4/             EVINDR  45
     5 '  DP8='E10.4)                                                           EVINDR  46
      RETURN                                                                    EVINDR  47
      END                                                                       EVINDR  48
      SUBROUTINE FANPWR(KWFLAG,CFMT,CFMhd,RCFMT,PLS,PLSh,PLR)                   FANPWR   2
C                                                                               FANPWR   3
c              Fan power calculation                                            FANPWR   4
c                 KWFLAG         0  Estimation call                             FANPWR   5
c                                1  Relief fan simulation only                  FANPWR   6
c                                2  Supply/return fan simulation                FANPWR   7
c                                                                               FANPWR   8
c                 CFMT   PLS     Supply cfm and power of single-duct            FANPWR   9
c                                    or cold deck of dual-duct                  FANPWR  10
c                 CFMhd  PLSh    Supply cfm and power of dual-duct              FANPWR  11
c                                    with separate hot-deck fan                 FANPWR  12
c                 RCFMT  PLR     Return or relief fan cfm and power             FANPWR  13
C                                                                               FANPWR  14
C              DEVELOPED BY                                                     -130     1
C                            J. J. Hirsch & S. D. Gates                         -130     2
C                            James J. Hirsch & Associates                       -130     3
C                            Camarillo, California                              -130     4
C              BASED UPON CODE DEVELOPED BY J. J. Hirsch and                    -130     5
C                            W. F. Buhl                                         -130     6
C                            A. E. Erdem                                        -130     7
C                            Lawrence Berkeley National Laboratory              -130     8
C                            University of California                           -130     9
Copyright (c) 1997 by James J. Hirsch. All Rights Reserved. Unpublished         -130    10
c rights reserved under the Copyright Laws of the United States.                -130    11
c RESTRICTED RIGHTS NOTICE: Government use, reproduction or disclosure          -130    12
c is subject to restrictions as set forth in Rights in Data (g)(3) in           -130    13
c UC/LBL purchase order 4607010 with J.J. Hirsch & Associates.                  -130    14
C                                                                               FANPWR  16
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON /DDSDAT/ FONh, SFKWh, DTSh, CFMRATh, FONNGTh, RCFMmix,             /DDSDAT/ 2
     1                RfanCFM, EXFIL, DTDUCT, DTDUCTh, TCDFSR, THDFSR,          /DDSDAT/ 3
     2                CFMINh, CFMINc, CFMINhm, CFMINcm, CFMINt,                 /DDSDAT/ 4
     3                TCMINcoil, THMAXcoil, IWarmestZ, IColdestZ                /DDSDAT/ 5
      DIMENSION       DDSDAT(21)                                                /DDSDAT/ 6
      EQUIVALENCE     (DDSDAT(1), FONh)                                         /DDSDAT/ 7
      COMMON  /ENDUSE/ SUPPKW, HEATKW                                           HVAC27   1
      common  /FNSYS/  ISKIPS, MSYSF(120)                                       /FNSYS/  2
      COMMON  /FZZZ1/   CAPXXX, CORINX, CWIDTX, ERMNXX, ERMXXX, FTDEVX          /FZZZ1/  2
     1                , FXXXXX, HEIGHX, HEXXXX, HPCAPX, HPKWXX, IFLGXX          /FZZZ1/  3
     2, IFUELX, ISHXXX, LSR2XX, LSR3XX, PATMXX, PLRXXX, PLSXXX, POMXXX          /FZZZ1/  4
     3, QHFXXX, QMULTX, QNOWXX, SLOADX, TAPPXX, TGINXX, TLOADX, TNOWXX          /FZZZ1/  5
     4, TSETXX, TWOUTX, UCHANX, ICALLX                                          /FZZZ1/  6
      REAL              LSR2XX, LSR3XX                                          /FZZZ1/  7
      COMMON  /HRREP / Irb, Ihrp, Lrb, Lhrp, Nrb, Nhrp, IVTLIM(3,50),           HR       5
     &                 IGRPtr, IBRPtr, IRSch, IRSchT(5),                        HR       6
     &                 NHRTyp(3), ITBUF(3), ITBUFB(3), ITBUFE(3),               HR       7
     &                 IHREOF, ICDFLG                                           HR       8
      COMMON  /MISCD / TEMPS(4,9999),CONS(5),TEMPSL(9999),                      -048a   10
     1                 BLDGQH,BLDGQC,BLDGQL,BLDGP,BPMULT,                       /MISCD/  3
     $                 DBTMIN,DBTMAX,WMIN,WMAX,NSPZ(9999),                      -048a   11
     3                 DQ, DTP, DTR, DTS, FPI, PLRCC , POM, TC2, TDM,           /MISCD/  5
     4                 TRA,WCOL,WCOLM,WMM,YPI,KWBTU,BTUKW,UNFILD,Unusedm        RemPA   45
      REAL             KWBTU                                                    /MISCD/  7
      COMMON  /PLANTD/ QHMP,TMP,CFMP,QHPP,CFMPP,                                /PLANTD/ 2
     1                 QHZP,TZP,DHWPKW,DHWPLF,DHWQRP                            RemPA   46
      REAL             PLANTD(10)                                               RemPA   47
      EQUIVALENCE      (PLANTD(1), QHMP)                                        RemPA   48
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      COMMON /RSVVTD/ CONFRC,HONFRC,NOWFRC,THMXNS                               /RSVVTD/ 2
      REAL NOWFRC                                                               /RSVVTD/ 3
      COMMON /SHP   / QCRUN,QCLOAD,QCGAS,QCAUX,QCGSLD,QCGSUP,                   /SHP/    2
     1                QCWAS,QCWASU,QCGSAV,QCFAN,                                /SHP/    3
     2                QHRUN,QHLOAD,QHGAS,QHAUX,QHGSLD,QHGSUP,                   /SHP/    4
     3                QHWAS,QHWASU,QHGDFR,QHFAN,          CUR(25),              /SHP/    5
     4                GSAV1,GASV2,PCH,ISZCZ,GCAP(2),GEDB,QHDFRG,                -044c1   1
     5                GRPM,PLRSUP,CFMCYC,CLPLR,CFMVVT,QHZHP,PCCEDB,             /SHP/    7
     6                IHPREP,IHPOUT,IHPHRR,IHPHRN,IRST,IREN                     /SHP/    8
      COMMON /SHPZ  / QCRUNZ,QCLOADZ,QCGASZ,QCAUXZ,QCGSLDZ,QCGSUPZ,             /SHP/    9
     1                QCWASZ,QCWASUZ,QCGSAVZ,QCFANZ,                            /SHP/   10
     2                QHRUNZ,QHLOADZ,QHGASZ,QHAUXZ,QHGSLDZ,QHGSUPZ,             /SHP/   11
     3                QHWASZ,QHWASUZ,QHGDFRZ,QHFANZ                             /SHP/   12
      DIMENSION       SHP(60),SHPZ(20)                                          /SHP/   13
      EQUIVALENCE     (SHP,QCRUN),(SHPZ,QCRUNZ)                                 /SHP/   14
     1               ,(DFM1,CUR(18)),(DFM2,CUR(19)),(DFM3,CUR(20))              /SHP/   15
      COMMON  /SYSTD / TH,TC,TM,TR,QH,QC,QHZ,QCZ,QHB,QHP,QHUM,                  /SYSTD/  2
     1                 QDHUM,TCMIN,THMAX,QLSUM,QPSUM,CFM,CFMH,CFMC,             /SYSTD/  3
     2                 RCFM,ECFM,CINF,FON,HON,CON,BON,SCONS(3),PH,PC,           /SYSTD/  4
     3                 SKW,FANKW,unused1,WR,WM,WCOIL,WW,PO,D,                   -046f    1
     4                 FTEMP,TCR,QHR,RfanPumpKW,SGAS,SKWQH,SKWQC,QCLAT,         -131    23
     5                 SFKW,RFKW,FONNGT,WSURF,RWalkinQ,TSURF,TRh,               -131    24
     6                 CBF,CBF1,CBF2,EON,PLRCFM,PLRC,PLRH,QCM1,                 /SYSTD/  8
     7                 QCM2,QHM1,EIRM1,EIRM2,EIR,OFKW,QCT,QCS,                  /SYSTD/  9
     8                 WRMAX,WRMIN,CFMRAT,QdistG,QdistL,RON,QHT,                /SYSTD/ 10
     9                 TPOMIN,POMIN,QHSUP,QRSENS,QRLAT,QRREC,QRREJ,             /SYSTD/ 11
     1                 RCOMKW,RDEFKW,RAUXKW,ECFMP,CFMIN,CINFP,DT,DW,            /SYSTD/ 12
     2                 EWB,IC,NATTSP,Q,RETR,SLOAD,QLSUMP,T,TCHUM,TEND,          /SYSTD/ 13
     3                 TS,hgbmin,HPDefE,EconoOnly,TDuctEnv,                     -044e1   1
     4                 QCUNMT,CapRh,CapRph,CapRc                                HVAC25   3
      REAL             SYSTD(113)                                               HVAC19  13
      EQUIVALENCE      (SYSTD(1),TH)                                            RemPA   65
      COMMON  /ZONED / EXCFM,FH,FC,CFMZ,QHBZ,QOVER,THZ,TCZ,ERMAX,ERMIN,         /ZONED/  2
     1                 TRY,FTD,CORINT,G0,G1,G2,G3,SIGMAG,TL,ZQHR,TAVE,          /ZONED/  3
     2                 ZQH,ZQC,FCHPS(15),ACFM,ZKW,TCMINZ,THMAXZ,                /ZONED/  4
     3                 ERMAXM,ERMINM,THR,CSSCND,CSSVEC,HENOW,QGWIN,             /ZONED/  5
     4                 QSNABT,QGOPWL,QGVEC,CFMCVT,SSFPT,CFMVNT,ZFANKW,          /ZONED/  6
     5                 ZKWCBT,ZKWHBT,ZCapRbbrd, XC,ZC,XH,ZH                     -044e2   7
      REAL ZONED(63)                                                            -044e2   8
      EQUIVALENCE (ZONED(1),EXCFM)                                              /ZONED/  9
      DIMENSION PTLD(4,4)                                                       FANPWR  30
      DATA PTLD /.00153028  ,.00520806  ,1.1086242,-.11635563,                  FANPWR  31
     1           .35071223  ,.3080535   ,-.5413736, .87198823,                  FANPWR  32
     2           .37073425  ,.97250253  ,-.3424076,0.0        ,                 FANPWR  33
     3           0.0        ,1.0        ,0.0      ,0.0        /                 FANPWR  34
c              initialize return kW for the hour                                FANPWR  35
      RFKW   = 0.                                                               FANPWR  36
      PLR    = 0.                                                               FANPWR  37
c              initialize supply kW(s) if not a call to simulate                FANPWR  38
c              relief fan only                                                  FANPWR  39
      IF (KWFLAG .NE. 1)  THEN                                                  FANPWR  40
        SFKW  = 0.                                                              FANPWR  41
        SFKWh = 0.                                                              FANPWR  42
        PLS   = 0.                                                              FANPWR  43
        PLSh  = 0.                                                              FANPWR  44
      ENDIF                                                                     FANPWR  45
c                                                                               FANPWR  46
c              Supply fan of single-fan system, or cold-deck fan of             FANPWR  47
c              dual-fan, dual-duct system.  Skip if no airflow or               FANPWR  48
c              relief fan call                                                  FANPWR  49
      IF ((CFMT .GT. 0.) .AND. (KWFLAG .NE. 1))  THEN                           FANPWR  50
c              Pick up FAN-CONTROL type                                         FANPWR  51
        I    = <FAN-CONTROL>                                                    FANPWR  52
        IF (((I .GE. 1).AND.(I .LE. 4)).OR.(I .EQ. 11))  THEN                   FANPWR  53
c              variable-volume - calculate the fan part load ratio              FANPWR  54
          PL = CFMT / (<SUPPLY-CFM>*CFMCYC + 0.0001)                            FANPWR  55
c              make sure it is within the allowed range                         FANPWR  56
          PL = AMAX1(<MIN-FAN-RATIO>,AMIN1(<MAX-FAN-RATIO>,PL))                 FANPWR  57
          IF (ICODE .NE. 28  .OR.  <AIR/TEMP-CONTROL> .LT. 2                    -042f   80
     &                       .OR.  KWFLAG .EQ. 0)  THEN                         StgVol 182
c              calculate the kW                                                 StgVol 183
            IF (I .LE. 4)  THEN                                                 StgVol 184
c              default curves                                                   StgVol 185
              PLS = PTLD(1,I)+PL*(PTLD(2,I)                                     StgVol 186
     1                       +PL*(PTLD(3,I)+PL*PTLD(4,I)))                      StgVol 187
            ELSEIF (I .EQ. 11)   THEN                                           StgVol 188
c                 user-defined performance                                      StgVol 189
              PLS = CVAL(<FAN-EIR-FPLR>,PL,PL)                                  StgVol 190
            ENDIF                                                               StgVol 191
          ELSE  ! staged-volume PVVT                                            StgVol 192
c              kW on high stage                                                 StgVol 193
            PLhi = Max(<MIN-FAN-RATIO>,                                         StgVol 194
     &                 Min(<MAX-FAN-RATIO>,<sy.StgVCFMrHi>))                    StgVol 195
            IF (I .LE. 4)  THEN  ! default curves                               StgVol 196
              PLhi = PTLD(1,I)+PLhi*(PTLD(2,I)                                  StgVol 197
     1                        +PLhi*(PTLD(3,I)+PLhi*PTLD(4,I)))                 StgVol 198
            ELSEIF (I .EQ. 11)  THEN  ! user defined                            StgVol 199
              PLhi = CVAL(<FAN-EIR-FPLR>,PLhi,PLhi)                             StgVol 200
            ENDIF                                                               StgVol 201
c              repeat for low stage                                             StgVol 202
            PLlo = Max(<MIN-FAN-RATIO>,                                         StgVol 203
     &                 Min(<MAX-FAN-RATIO>,<sy.StgVCFMrLo>))                    StgVol 204
            IF (I .LE. 4)  THEN  ! default curves                               StgVol 205
              PLlo = PTLD(1,I)+PLlo*(PTLD(2,I)                                  StgVol 206
     1                        +PLlo*(PTLD(3,I)+PLlo*PTLD(4,I)))                 StgVol 207
            ELSEIF (I .EQ. 11)  THEN  ! user defined                            StgVol 208
              PLlo = CVAL(<FAN-EIR-FPLR>,PLlo,PLlo)                             StgVol 209
            ENDIF                                                               StgVol 210
            PLS = PLhi*<sy.StgVFracHi> + PLlo*(1.-<sy.StgVFracHi>)              StgVol 211
          ENDIF                                                                 StgVol 212
          SFKW = PLS*<SUPPLY-KW>*CFMCYC                                         FANPWR  67
          PLS  = PLS/PL                                                         FANPWR  68
        ELSE                                                                    FANPWR  69
c              constant-volume                                                  FANPWR  70
          SFKW = <SUPPLY-KW>*CFMCYC                                             FANPWR  71
          PLS  = 1.0                                                            FANPWR  72
        ENDIF                                                                   FANPWR  73
      ENDIF                                                                     FANPWR  74
c                                                                               FANPWR  75
c              Hot deck supply fan of dual-fan, dual-duct system.  Skip         FANPWR  76
c              if no airflow or relief fan call                                 FANPWR  77
      IF ((<DDS-TYPE> .EQ. 2) .AND. (CFMhd .GT. 0.)                             FANPWR  78
     1                        .AND. (KWFLAG .NE. 1) )  THEN                     FANPWR  79
c              pick up FAN-CONTROL type                                         FANPWR  80
        I    = <HFAN-CONTROL>                                                   FANPWR  81
        IF (((I .GE. 1).AND.(I .LE. 4)).OR.(I .EQ. 11))  THEN                   FANPWR  82
c              variable-volume - calculate the fan part load ratio              FANPWR  83
          PL = CFMhd/(<HSUPPLY-CFM>*CFMCYC + 0.0001)                            FANPWR  84
c              make sure it is within the allowed range                         FANPWR  85
          PL = AMAX1(<HMIN-FAN-RATIO>,AMIN1(<HMAX-FAN-RATIO>,PL))               FANPWR  86
c              calculate the kW                                                 FANPWR  87
          IF (I .LE. 4)  THEN                                                   FANPWR  88
c              default curves                                                   FANPWR  89
            PLSh = (PTLD(1,I)+PL*(PTLD(2,I)                                     FANPWR  90
     1                       +PL*(PTLD(3,I)+PL*PTLD(4,I))))                     FANPWR  91
          ELSEIF (I .EQ. 11)  THEN                                              FANPWR  92
c              user-defined performance                                         FANPWR  93
            PLSh = CVAL(<HFAN-EIR-FPLR>,PL,PL)                                  FANPWR  94
          ENDIF                                                                 FANPWR  95
          SFKWh = PLSh*<HSUPPLY-KW>*CFMCYC                                      FANPWR  96
          PLSh  = PLSh/PL                                                       FANPWR  97
        ELSE                                                                    FANPWR  98
c              constant-volume                                                  FANPWR  99
          SFKWh = <HSUPPLY-KW>*CFMCYC                                           FANPWR 100
          PLSh  = 1.0                                                           FANPWR 101
        ENDIF                                                                   FANPWR 102
      ENDIF                                                                     FANPWR 103
c                                                                               FANPWR 104
c              Return fan.  Skip if no airflow or if a relief fan               FANPWR 105
c              and supply/return fan call.                                      FANPWR 106
      IF ( ((<RETURN-CFM> .GT. 0.) .AND. (RCFMT .GT. 0.)) .AND.                 FANPWR 107
     1     ( (<RETURN-FAN-LOC> .NE. 3) .OR.                                     FANPWR 108
     2      ((<RETURN-FAN-LOC> .EQ. 3) .AND. (KWFLAG .EQ. 1)) ) )  THEN         FANPWR 109
c              pick up FAN-CONTROL type                                         FANPWR 110
        I    = <RETURN-FAN-CONTR>                                               FANPWR 111
        IF (((I .GE. 1).AND.(I .LE. 4)).OR.(I .EQ. 11))  THEN                   FANPWR 112
c              variable-volume - calculate the fan part load ratio              FANPWR 113
          PL = RCFMT/(<RETURN-CFM>*CFMCYC + 0.0001)                             FANPWR 114
c              make sure it is within the allowed range                         FANPWR 115
          PL = AMAX1(<MIN-FAN-RATIO>,AMIN1(<MAX-FAN-RATIO>,PL))                 FANPWR 116
          IF (ICODE .NE. 28  .OR.  <AIR/TEMP-CONTROL> .LT. 2                    -042f   81
     &                       .OR.  KWFLAG .EQ. 0)  THEN                         StgVol 214
c              calculate the kW                                                 StgVol 215
            IF (I .LE. 4)  THEN                                                 StgVol 216
c                 default curves                                                StgVol 217
              PLR = PTLD(1,I)+PL*(PTLD(2,I)                                     StgVol 218
     1                       +PL*(PTLD(3,I)+PL*PTLD(4,I)))                      StgVol 219
            ELSEIF (I .EQ. 11)  THEN                                            StgVol 220
c                 user-defined performance                                      StgVol 221
              PLR = CVAL(<RETURN-EIR-FPLR>,PL,PL)                               StgVol 222
            ENDIF                                                               StgVol 223
          ELSE  ! staged-volume PVVT                                            StgVol 224
c              kW on high stage                                                 StgVol 225
            PLhi = Max(<MIN-FAN-RATIO>,                                         StgVol 226
     &                 Min(<MAX-FAN-RATIO>,<sy.StgVCFMrHi>))                    StgVol 227
            IF (I .LE. 4)  THEN  ! default curves                               StgVol 228
              PLhi = PTLD(1,I)+PLhi*(PTLD(2,I)                                  StgVol 229
     1                        +PLhi*(PTLD(3,I)+PLhi*PTLD(4,I)))                 StgVol 230
            ELSEIF (I .EQ. 11)  THEN  ! user defined                            StgVol 231
              PLhi = CVAL(<RETURN-EIR-FPLR>,PLhi,PLhi)                          StgVol 232
            ENDIF                                                               StgVol 233
c              repeat for low stage                                             StgVol 234
            PLlo = Max(<MIN-FAN-RATIO>,                                         StgVol 235
     &                 Min(<MAX-FAN-RATIO>,<sy.StgVCFMrLo>))                    StgVol 236
            IF (I .LE. 4)  THEN  ! default curves                               StgVol 237
              PLlo = PTLD(1,I)+PLlo*(PTLD(2,I)                                  StgVol 238
     1                        +PLlo*(PTLD(3,I)+PLlo*PTLD(4,I)))                 StgVol 239
            ELSEIF (I .EQ. 11)  THEN  ! user defined                            StgVol 240
              PLlo = CVAL(<RETURN-EIR-FPLR>,PLlo,PLlo)                          StgVol 241
            ENDIF                                                               StgVol 242
            PLR = PLhi*<sy.StgVFracHi> + PLlo*(1.-<sy.StgVFracHi>)              StgVol 243
          ENDIF                                                                 StgVol 244
          RFKW  = PLR*<RETURN-KW>*CFMCYC                                        FANPWR 127
          PLR   = PLR/PL                                                        FANPWR 128
        ELSE                                                                    FANPWR 129
c              constant-volume                                                  FANPWR 130
          RFKW  = <RETURN-KW>*CFMCYC                                            FANPWR 131
          PLR   = 1.0                                                           FANPWR 132
        ENDIF                                                                   FANPWR 133
      ENDIF                                                                     FANPWR 134
c                                                                               FANPWR 135
      IF (KWFLAG .GT. 0)  THEN                                                  FANPWR 136
        RFKW  = RFKW  * NOWFRC                                                  FANPWR 137
        IF (KWFLAG .EQ. 2)  THEN                                                FANPWR 138
          SFKW  = SFKW  * NOWFRC                                                FANPWR 139
          SFKWh = SFKWh * NOWFRC                                                FANPWR 140
        ENDIF                                                                   FANPWR 141
      ENDIF                                                                     FANPWR 142
c                                                                               FANPWR 143
      IF( MSYSF(31) .ne. 0 )     then                                           FANPWR 144
C********************** run function : FANPWR-1 ************************        FANPWR 145
          PLSXXX = PLS                                                          FANPWR 146
          PLRXXX = PLR                                                          FANPWR 147
          CALL  FINTS( MSYSF(31), 0. )                                          FANPWR 148
C***********************************************************************        FANPWR 149
      endif                                                                     FANPWR 150
c              save total fan kW for supply + return in FANKW                   FANPWR 151
c              Skip if this is a fan coil system                                -044c1   2
      IF(ICODE .eq. 9) RETURN                                                   -044c1   3
      IF (KWFLAG .GT. 0)  THEN                                                  FANPWR 152
        FANKW  = FANKW  + RFKW                                                  FANPWR 153
        <SKW>  = <SKW>  + RFKW                                                  FANPWR 154
c              assign electric loads to meters                                  HVAC22  79
        CALL PeakFanDist(3, RFKW,<MAX_RETURN_KW>, <VENT-E-MS>)                  HVAC22  80
        IF (KWFLAG .EQ. 2)  THEN                                                FANPWR 156
          FANKW  = FANKW  + SFKW + SFKWh                                        FANPWR 157
          <SKW>  = <SKW>  + SFKW + SFKWh                                        FANPWR 158
          Call PeakFanDist(1, SFKW,<MAX_SUPPLY_KW>, <VENT-E-MS>)                HVAC22  81
          IF (SFKWh .GT. 0)                                                     HVAC22  82
     &      Call PeakFanDist(2, SFKWh,<MAX_HSUPPLY_KW>, <VENT-E-MS>)            HVAC22  83
        ENDIF                                                                   FANPWR 160
      ENDIF                                                                     FANPWR 161
      RETURN                                                                    FANPWR 162
      END                                                                       FANPWR 163
      SUBROUTINE FANPWR_Design                                                  FANPWD   2
c                                                                               FANPWD   3
c              Calculates the maximum possible fan power for use                FANPWD   4
c              in the 5-minute load distribution calculations                   FANPWD   5
c                                                                               FANPWD   6
c                                                                               FANPWD   7
C              DEVELOPED BY                                                     -130    15
C                            J. J. Hirsch & S. D. Gates                         -130    16
C                            James J. Hirsch & Associates                       -130    17
C                            Camarillo, California                              -130    18
C                                                                               -130    19
Copyright (c) 1997 by James J. Hirsch. All Rights Reserved. Unpublished         -130    20
c rights reserved under the Copyright Laws of the United States.                -130    21
c RESTRICTED RIGHTS NOTICE: Government use, reproduction or disclosure          -130    22
c is subject to restrictions as set forth in Rights in Data (g)(3) in           -130    23
c UC/LBL purchase order 4607010 with J.J. Hirsch & Associates.                  -130    24
C                                                                               -130    25
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
c                                                                               FANPWD  11
      DIMENSION PTLD(4,4)                                                       FANPWD  12
      DATA PTLD /.00153028  ,.00520806  ,1.1086242,-.11635563,                  FANPWD  13
     1           .35071223  ,.3080535   ,-.5413736, .87198823,                  FANPWD  14
     2           .37073425  ,.97250253  ,-.3424076,0.0        ,                 FANPWD  15
     3           0.0        ,1.0        ,0.0      ,0.0        /                 FANPWD  16
c                                                                               FANPWD  17
c                                                                               FANPWD  18
      IF (<SUPPLY-KW> .GT. 0.)  THEN                                            FANPWD  19
c              Supply fan of single-fan system, or cold-deck fan of             FANPWD  20
c              dual-fan, dual-duct system.                                      FANPWD  21
c              Pick up FAN-CONTROL type                                         FANPWD  22
        I    = <FAN-CONTROL>                                                    FANPWD  23
        IF (((I .GE. 1).AND.(I .LE. 4)).OR.(I .EQ. 11))  THEN                   FANPWD  24
c              variable-volume - calculate the fan part load ratio              FANPWD  25
          PL = <MAX-FAN-RATIO>                                                  FANPWD  26
c              calculate the kW                                                 FANPWD  27
          IF (I .LE. 4)  THEN                                                   FANPWD  28
c              default curves                                                   FANPWD  29
            PLS = (PTLD(1,I)+PL*(PTLD(2,I)                                      FANPWD  30
     1                      +PL*(PTLD(3,I)+PL*PTLD(4,I))))                      FANPWD  31
          ELSEIF (I .EQ. 11)   THEN                                             FANPWD  32
c              user-defined performance                                         FANPWD  33
            PLS = CVAL(<FAN-EIR-FPLR>,PL,PL)                                    FANPWD  34
          ENDIF                                                                 FANPWD  35
          <MAX_SUPPLY_KW> = <SUPPLY-KW> * PLS                                   FANPWD  36
        ELSE                                                                    FANPWD  37
c              constant-volume                                                  FANPWD  38
          <MAX_SUPPLY_KW> = <SUPPLY-KW>                                         FANPWD  39
        ENDIF                                                                   FANPWD  40
      ENDIF                                                                     FANPWD  41
c                                                                               FANPWD  42
      IF (<HSUPPLY-KW> .GT. 0.)  THEN                                           FANPWD  43
c              Hot deck fan of dual-fan dual-duct system                        FANPWD  44
        I    = <HFAN-CONTROL>                                                   FANPWD  45
        IF (((I .GE. 1).AND.(I .LE. 4)).OR.(I .EQ. 11))  THEN                   FANPWD  46
c              variable-volume - calculate the fan part load ratio              FANPWD  47
          PL = <HMAX-FAN-RATIO>                                                 FANPWD  48
c              calculate the kW                                                 FANPWD  49
          IF (I .LE. 4)  THEN                                                   FANPWD  50
c              default curves                                                   FANPWD  51
            PLS = (PTLD(1,I)+PL*(PTLD(2,I)                                      FANPWD  52
     1                      +PL*(PTLD(3,I)+PL*PTLD(4,I))))                      FANPWD  53
          ELSEIF (I .EQ. 11)   THEN                                             FANPWD  54
c              user-defined performance                                         FANPWD  55
            PLS = CVAL(<HFAN-EIR-FPLR>,PL,PL)                                   FANPWD  56
          ENDIF                                                                 FANPWD  57
          <MAX_HSUPPLY_KW> = <HSUPPLY-KW> * PLS                                 FANPWD  58
        ELSE                                                                    FANPWD  59
c              constant-volume                                                  FANPWD  60
          <MAX_HSUPPLY_KW> = <HSUPPLY-KW>                                       FANPWD  61
        ENDIF                                                                   FANPWD  62
      ENDIF                                                                     FANPWD  63
c                                                                               FANPWD  64
      IF (<RETURN-KW> .GT. 0.)  THEN                                            FANPWD  65
c              Return fan                                                       FANPWD  66
        I    = <RETURN-FAN-CONTR>                                               FANPWD  67
        IF (((I .GE. 1).AND.(I .LE. 4)).OR.(I .EQ. 11))  THEN                   FANPWD  68
c              variable-volume - calculate the fan part load ratio              FANPWD  69
          PL = <MAX-FAN-RATIO>                                                  FANPWD  70
c              calculate the kW                                                 FANPWD  71
          IF (I .LE. 4)  THEN                                                   FANPWD  72
c              default curves                                                   FANPWD  73
            PLS = (PTLD(1,I)+PL*(PTLD(2,I)                                      FANPWD  74
     1                      +PL*(PTLD(3,I)+PL*PTLD(4,I))))                      FANPWD  75
          ELSEIF (I .EQ. 11)   THEN                                             FANPWD  76
c              user-defined performance                                         FANPWD  77
            PLS = CVAL(<RETURN-EIR-FPLR>,PL,PL)                                 FANPWD  78
          ENDIF                                                                 FANPWD  79
          <MAX_RETURN_KW> = <RETURN-KW> * PLS                                   FANPWD  80
        ELSE                                                                    FANPWD  81
c              constant-volume                                                  FANPWD  82
          <MAX_RETURN_KW> = <RETURN-KW>                                         FANPWD  83
        ENDIF                                                                   FANPWD  84
      ENDIF                                                                     FANPWD  85
c                                                                               FANPWD  86
      RETURN                                                                    FANPWD  87
      END                                                                       FANPWD  88
      SUBROUTINE FCOIL                                                          FCOIL    2
C                                                                               FCOIL    3
C                            FAN-COIL UNITS                                     FCOIL    4
C                                                                               FCOIL    5
C              DEVELOPED BY                                                     -130     1
C                            J. J. Hirsch & S. D. Gates                         -130     2
C                            James J. Hirsch & Associates                       -130     3
C                            Camarillo, California                              -130     4
C              BASED UPON CODE DEVELOPED BY J. J. Hirsch and                    -130     5
C                            W. F. Buhl                                         -130     6
C                            A. E. Erdem                                        -130     7
C                            Lawrence Berkeley National Laboratory              -130     8
C                            University of California                           -130     9
Copyright (c) 1997 by James J. Hirsch. All Rights Reserved. Unpublished         -130    10
c rights reserved under the Copyright Laws of the United States.                -130    11
c RESTRICTED RIGHTS NOTICE: Government use, reproduction or disclosure          -130    12
c is subject to restrictions as set forth in Rights in Data (g)(3) in           -130    13
c UC/LBL purchase order 4607010 with J.J. Hirsch & Associates.                  -130    14
C                                                                               FCOIL    7
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON  /ENDUSE/ SUPPKW, HEATKW                                           HVAC27   1
C              SYSTEM LEVEL VARIABLES FOR DESICCANT SYSTEMS, BOTH TOTAL         /DSYSTD/ 2
C              AND INTEGRATED                                                   /DSYSTD/ 3
      COMMON  /DSYSTD/  SCGAS, QREG, WBR, WB8, T8, W8, WB9, T9, W9, EFF,        /DSYSTD/ 4
     1                  DTON, DMODE(7), ERMAX4, ERMAX5, ERMAX6, OPMODE,         /DSYSTD/ 5
     2                  DBOA,WOA,DGAS,DKW,TCONDd,QCDTOT,QCDS,QCDL,              /DSYSTD/ 6
     3                  POA,DFANKW,RFANKW,DMOTKW,EVKW,QCEVT,QCEVS,              /DSYSTD/ 7
     4                  QCEVL,TCMNEV                                            /DSYSTD/ 8
      REAL DSYSTD(39)                                                           /DSYSTD/ 9
      EQUIVALENCE (DSYSTD(1), SCGAS)                                            /DSYSTD/10
      COMMON /FFUEL/ FFUEL, FurnAuxFuel, FurnAuxkW, PLRF                        /FFUEL/  2
      common  /FNSYS/  ISKIPS, MSYSF(120)                                       /FNSYS/  2
      COMMON  /HRREP / Irb, Ihrp, Lrb, Lhrp, Nrb, Nhrp, IVTLIM(3,50),           HR       5
     &                 IGRPtr, IBRPtr, IRSch, IRSchT(5),                        HR       6
     &                 NHRTyp(3), ITBUF(3), ITBUFB(3), ITBUFE(3),               HR       7
     &                 IHREOF, ICDFLG                                           HR       8
      COMMON  /MISCD / TEMPS(4,9999),CONS(5),TEMPSL(9999),                      -048a   10
     1                 BLDGQH,BLDGQC,BLDGQL,BLDGP,BPMULT,                       /MISCD/  3
     $                 DBTMIN,DBTMAX,WMIN,WMAX,NSPZ(9999),                      -048a   11
     3                 DQ, DTP, DTR, DTS, FPI, PLRCC , POM, TC2, TDM,           /MISCD/  5
     4                 TRA,WCOL,WCOLM,WMM,YPI,KWBTU,BTUKW,UNFILD,Unusedm        RemPA   45
      REAL             KWBTU                                                    /MISCD/  7
      COMMON  /PLANTD/ QHMP,TMP,CFMP,QHPP,CFMPP,                                /PLANTD/ 2
     1                 QHZP,TZP,DHWPKW,DHWPLF,DHWQRP                            RemPA   46
      REAL             PLANTD(10)                                               RemPA   47
      EQUIVALENCE      (PLANTD(1), QHMP)                                        RemPA   48
      COMMON  /PTRPLT/ Ipm,Ilp,Ich,Ibl,Idw,Itw,Ipv,Ign,Itk,Ihx,                 PV       1
     &                 Iec,Ilm,Iem,Ifm,Ism,Icm,Imm,Imc,Igl,Isp2,                XFC2     1
     &                 Ispare(5),  Ipe,                                         HVAC19   3
     &                 Npm,Nlp,Nch,Nbl,Ndw,Ntw,Npv,Ngn,Ntk,Nhx,                 PV       2
     &                 Nec,Nlm,Nem,Nfm,Nsm,Ncm,Nmm,Nmc,Ngl,Nsp2,                XFC2     2
     &                 Nspare(5),  Npe,                                         HVAC19   6
     &                 Lpm,Llp,Lch,Lbl,Ldw,Ltw,Lpv,Lgn,Ltk,Lhx,                 PV       3
     &                 Lec,Llm,Lem,Lfm,Lsm,Lcm,Lmm,Lmc,Lgl,Lsp2,                XFC2     3
     &                 Lspare(5),  Lpe,                                         HVAC19   9
     &                 Jpm,Jlp,Jch,Jbl,Jdw,Jtw,Jpv,Jgn,Jtk,Jhx,                 PV       4
     &                 Jec,Jlm,Jem,Jfm,Jsm,Jcm,    Jmc,Jgl,                     HVAC19  11
     &                 Jpe, kpr, NumMeters, NumIntHX                            XFC1     1
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      COMMON  /SYSTD / TH,TC,TM,TR,QH,QC,QHZ,QCZ,QHB,QHP,QHUM,                  /SYSTD/  2
     1                 QDHUM,TCMIN,THMAX,QLSUM,QPSUM,CFM,CFMH,CFMC,             /SYSTD/  3
     2                 RCFM,ECFM,CINF,FON,HON,CON,BON,SCONS(3),PH,PC,           /SYSTD/  4
     3                 SKW,FANKW,unused1,WR,WM,WCOIL,WW,PO,D,                   -046f    1
     4                 FTEMP,TCR,QHR,RfanPumpKW,SGAS,SKWQH,SKWQC,QCLAT,         -131    23
     5                 SFKW,RFKW,FONNGT,WSURF,RWalkinQ,TSURF,TRh,               -131    24
     6                 CBF,CBF1,CBF2,EON,PLRCFM,PLRC,PLRH,QCM1,                 /SYSTD/  8
     7                 QCM2,QHM1,EIRM1,EIRM2,EIR,OFKW,QCT,QCS,                  /SYSTD/  9
     8                 WRMAX,WRMIN,CFMRAT,QdistG,QdistL,RON,QHT,                /SYSTD/ 10
     9                 TPOMIN,POMIN,QHSUP,QRSENS,QRLAT,QRREC,QRREJ,             /SYSTD/ 11
     1                 RCOMKW,RDEFKW,RAUXKW,ECFMP,CFMIN,CINFP,DT,DW,            /SYSTD/ 12
     2                 EWB,IC,NATTSP,Q,RETR,SLOAD,QLSUMP,T,TCHUM,TEND,          /SYSTD/ 13
     3                 TS,hgbmin,HPDefE,EconoOnly,TDuctEnv,                     -044e1   1
     4                 QCUNMT,CapRh,CapRph,CapRc                                HVAC25   3
      REAL             SYSTD(113)                                               HVAC19  13
      EQUIVALENCE      (SYSTD(1),TH)                                            RemPA   65
      COMMON  /TIME  / IDOY, IYR, IMO, IDAY, IHR,                               Time     4
     &                 ISCMO, ISCDAY, ISCHR, IDOW, ISCDOW, iDSdates(6),         -044e5   1
     &                 iTimeFlg, iDSFlg, iDDFlg, InitialFlg, LeapYr,            Time     6
     &                 CLOCK(10), MONDSC(13), MONLEN(12), MONSDA(12)            HR      12
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
      COMMON  /ZONED / EXCFM,FH,FC,CFMZ,QHBZ,QOVER,THZ,TCZ,ERMAX,ERMIN,         /ZONED/  2
     1                 TRY,FTD,CORINT,G0,G1,G2,G3,SIGMAG,TL,ZQHR,TAVE,          /ZONED/  3
     2                 ZQH,ZQC,FCHPS(15),ACFM,ZKW,TCMINZ,THMAXZ,                /ZONED/  4
     3                 ERMAXM,ERMINM,THR,CSSCND,CSSVEC,HENOW,QGWIN,             /ZONED/  5
     4                 QSNABT,QGOPWL,QGVEC,CFMCVT,SSFPT,CFMVNT,ZFANKW,          /ZONED/  6
     5                 ZKWCBT,ZKWHBT,ZCapRbbrd, XC,ZC,XH,ZH                     -044e2   7
      REAL ZONED(63)                                                            -044e2   8
      EQUIVALENCE (ZONED(1),EXCFM)                                              /ZONED/  9
      COMMON  /LENS/   MWFLEN, MRLEN, MSHLEN, MWNLEN, MDRLEN, MXLEN,            /LENS/   2
     1                 MULEN, MZLEN, MIWLEN, MFLLEN,                            /LENS/   3
     2                 LMTB, LLDSOU, MSTLEN, LSTFT, MWLLEN                      /LENS/   4
      COMMON  /PTRBGN/ IWFB, IWPB, ICONSB, IGTB, IWLB, IGEOB, ISHADB,           /PTRBGN/ 2
     &                 IWINB, IDRB, IEWB, IUGB, ISPB, IIWPB, IIWB,              /PTRBGN/ 3
     &                 IFLB, ISPCDB, IOTHB, ILHB, IZQCMB, ISSHDB,               /PTRBGN/ 4
     &                 IOHFIB, IZLSK, IZLSL, ISTFB, ILSSH                       PV2      1
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     /PNTRS/  3
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        /PNTRS/  4
      COMMON  /SIZE/   LENGTH,NWF,NWPAR,NCONS,NGT,NWL,NGEO,                     /SIZE/   2
     1                 NGSHAD, NWIN, NDOOR, NEW, NUG, NSPl, NIWP, NIW,          /SIZE/   3
     &                 NFL, NBR, NOTH, NITH, NOPSRF,                            /SIZE/   4
     &                 NSURF, NSSHD, NSHTOT, NEWshade                           /SIZE/   5
      V(DB,W,P) = 0.754*(DB+459.7)*(1.0+1.605*W)/P                              V        2
      ZQCLAT = 0.0                                                              FCOIL   20
      FKW    = <SUPPLY-KW>                                                      FCOIL   21
      OAMIN  = <MIN-OUTSIDE-AIR>                                                FCOIL   22
      FCFM   = <SUPPLY-CFM>                                                     -043a  101
      IFMS   = <INDOOR-FAN-MODE>                                                -044c  464
      SFKWt  = 0.                                                               -044c1   4
      QHUMT  = 0.                                                               -030   121
C********************** run function : FCOIL-0 *********************            FCOIL   23
      IF( MSYSF(32) .NE. 0 )   CALL  FINTS( MSYSF(32), 0. )                     FCOIL   24
C*******************************************************************            FCOIL   25
C                                                                               FCOIL   26
c                                                                               HVAC1  161
c              set circulation-loop restrictions on preheat capacity            HVAC1  162
      IF (<PHW-LOOP> .NE. 0)  THEN                                              HVAC1  163
c              preheat coil is hot water - pointer to loop                      HVAC1  164
        JLP    = <PHW-LOOP>                                                     HVAC1  165
        CapRph = <lp;HCAP_RATIO>                                                HVAC16  81
      ELSE                                                                      HVAC1  167
        CapRph = 1.0                                                            HVAC12  72
      ENDIF                                                                     HVAC1  169
c                                                                               HVAC1  170
C              LOOP THROUGH THE ZONES ON THIS SYSTEM                            FCOIL   27
C                                                                               FCOIL   28
C              SET ZP1 TO POINT TO FIRST SYSTEM ZONE                            FCOIL   29
      ZP1    = ISZ                                                              FCOIL   30
      VOLMUL = 0.0                                                              FCOIL   31
      WAV    = 0.                                                               FCOIL   32
      DO 50 NZ=1,NSZ                                                            FCOIL   36
C              ZERO THE ZONE DATA COMMON BLOCK                                  FCOIL   37
      DO 111 I=1,63                                                             -044e2  25
  111 ZONED(I) = 0.0                                                            FCOIL   39
      ZP2    = <ZP2>                                                            FCOIL   40
      <ERMAX> = 0.0                                                             FCOIL   41
      <ERMIN> = 0.0                                                             FCOIL   42
C              Initialize the on cycle time of the unit to the full hour        -044c  465
      CFMCYC = 1.0                                                              -044c  466
      <INDOOR-FAN-MODE> = IFMS                                                  -044c  467
      SFKW = 0.0                                                                -044e  197
      RFKW = 0.0                                                                -044e  198
      IF (<sy.FanOnPast> .gt. 0.)  THEN                                         -044c2  45
        CONS(4) = 60. / V(<zn.Tmix1>,<zn.Wmix1>,PATM)                           -044c2  46
        CONS(1) = (.24+.44*<zn.Wmix1>) * CONS(4)                                -044c2  47
      ELSE  ! use value from last start-up hour                                 -044c2  48
        CONS(4) = 60. / V(<zn.TmixStart>,<zn.WmixStart>,PATM)                   -044c2  49
        CONS(1) = (.24+.44*<zn.WmixStart>) * CONS(4)                            -044c2  50
      ENDIF                                                                     -044c2  51
      CONS(2) = 1061.0 * CONS(4)                                                -044c2  52
      CONS(3) = 0.3996 / CONS(1)                                                -044c2  53
c              if exhaust made up by infiltration                               -046   216
      IF (<EXHAUST-SOURCE> .eq. 2  .or.                                         -047b   20
     &    <EXHAUST-SOURCE> .eq. 3)  Call ZoneExhaust(9, xx)  ! power            -047b   21
C              IF NO NEED DO NOT CALC EXT RATES                                 FCOIL   46
      IF((FON .EQ. 0.) .OR. (<ZONE-TYPE> .NE. 1))  GOTO 5                       FCOIL   47
c              set circulation-loop restrictions on zonal heating and           HVAC1  173
c              cooling capacity                                                 HVAC1  174
      IF (<HW-LOOPZ> .NE. 0)  THEN                                              HVAC1  175
c              heating coil is hot water - pointer to loop                      HVAC1  176
        JLP   = <HW-LOOPZ>                                                      HVAC1  177
        CapRh = <lp;HCAP_RATIO>                                                 HVAC16  82
      ELSE                                                                      HVAC1  179
        CapRh = 1.0                                                             HVAC1  180
      ENDIF                                                                     HVAC1  181
      IF (<CHW-LOOPZ> .NE. 0)  THEN                                             HVAC1  182
c              cooling coil is water - pointer to loop                          HVAC1  183
        JLP   = <CHW-LOOPZ>                                                     HVAC1  184
        CapRc = <lp;CCAP_RATIO>                                                 HVAC16  83
      ELSE                                                                      HVAC1  186
        CapRc = 1.0                                                             HVAC1  187
      ENDIF                                                                     HVAC1  188
c                                                                               HVAC1  189
C                                                                               FCOIL   48
C              CALCULATE THE CAPACITY FOR HEATING AND COOLING                   FCOIL   49
C                                                                               FCOIL   50
      IF (<EXHAUST-SOURCE> .eq. 1)    ! makeup by system OA                     -046   218
     &  Call ZoneExhaust(1, <CFMAX>)  ! set EXCFM                               -046   219
C              OUTSIDE AIR DAMPER POSITION                                      -044c  468
      PO     = AMAX1(<VENTMIN>/<CFMAX>,EXCFM/<CFMAX>)                           -044c  469
C              NOW CHECK FOR SCHEDULE FOR OUTSIDE AIR                           -044c  470
      SH = SchVal(<MIN-AIR-SCH>, -999.)                                         -044c  471
      IF (SH .NE. -999.)                                                        -044c  472
     $   PO = AMAX1(EXCFM/<CFMAX>,AMAX1(0.,AMIN1(1.,SH)))                       -044c  473
C              NOW CHECK FOR DCV                                                -044c  474
      IF((<MIN-OA-METHOD>.LT.0) .AND. (SH .EQ. -999.0))  THEN                   -044c  475
        MZ = ISPB + (<NZSPACE>-1)*MZLEN                                         -044c  476
        <DCVOAcfmZ> = SchVal(<PEOPLE-SCHEDULE>, 1.)                             -045b   67
     &              * <ZPPLNO> * <OA-CFM/PER>                                   -045b   68
        XX = <OUTSIDE-AIR-CFM>                                                  -044c  478
        IF(XX .EQ. 0.)                                                          -044c  479
     $     XX = AMAX1(<OA-FLOW/AREA>*<AREA>,<OA-CHANGES>*<VOLUME>/60.)          -044c  480
        <DCVOAcfmZ> = AMAX1(<DCVOAcfmZ>,XX,EXCFM/<CFMAX>)                       -044c  481
        <DCVOAcfmS> = <DCVOAcfmZ>                                               -044c  482
        <DCVOAcfmFrac> = AMIN1(1.,<DCVOAcfmZ>/<CFMAX>)                          -044c  483
        <DCVOAcfmFracCrit> = <DCVOAcfmFrac>                                     -044c  484
        PO = <DCVOAcfmFrac>                                                     -044c  485
        IF(PO .GT. 0.) THEN                                                     -044c  486
          <INDOOR-FAN-MODE> = 0                                                 -044c  487
        ELSE                                                                    -044c  488
          <INDOOR-FAN-MODE> = IFMS                                              -044c  489
        ENDIF                                                                   -044c  490
      ELSE                                                                      -044c  491
        <DCVOAcfmZ> = 0.0                                                       -044c  492
        <DCVOAcfmS> = 0.0                                                       -044c  493
        <DCVOAcfmFrac> = 0.0                                                    -044c  494
        <DCVOAcfmFracCrit> = 0.0                                                -044c  495
        <INDOOR-FAN-MODE> = IFMS                                                -044c  496
      ENDIF                                                                     -044c  497
C              SAVE THE CALC AMOUT OF OA FOR USE BY SDSF FOR THIS ZONE          -044c  498
      <MIN-OUTSIDE-AIR> = PO                                                    -044c  499
      POM  = PO                                                                 -044c  500
      IF(PO .GT. 0.)  THEN                                                      -044a   45
C              If intermittent fans                                             -044a   46
        IF (<INDOOR-FAN-MODE>.EQ.0) THEN                                        -044a   47
          TC   = <TNOW> - <QNOW>/(CONS(1)*<CFMAX>)                              -044a   48
     $                  - <SUPPLY-DELTA-T>*CONS(3)                              -044a   49
        ELSE                                                                    -044a   50
          IF(<QNOW> .GE. 0.) THEN                                               -044a   51
            TC   = <MIN-SUPPLY-T> - <SUPPLY-DELTA-T>*CONS(3)                    -044a   52
          ELSE                                                                  -044a   53
            TC   = <MAX-SUPPLY-T> - <SUPPLY-DELTA-T>*CONS(3)                    -044a   54
          ENDIF                                                                 -044a   55
        ENDIF                                                                   -044a   56
        TR   = <TNOW>                                                           -044a   57
        CFM  = <CFMAX>                                                          -044a   58
        RCFM = <CFMAX>                                                          -044a   59
        ICALL= 1                                                                -044a   60
        CALL ECONO(ICALL,TC,POM)                                                -044a   61
        TM   = TM + <SUPPLY-DELTA-T>*CONS(3)                                    -044a   62
      ELSE                                                                      -044a   63
        TM   = <TNOW> + <SUPPLY-DELTA-T>*CONS(3)                                -044a   64
      ENDIF                                                                     -044a   65
      TS     = TM                                                               -044a   66
C              CALC CAPACITY ADJUSTMENTS                                        FCOIL   68
      T      = AMAX1(TS,<COOL-FT-MIN>)                                          FCOIL   69
      EWB    = AMAX1(<COIL_EWBZ>,<COOL-FT-MIN>-10.0)                            -030   122
      QCM1   = CVAL(<COOL-CAP-FT>,EWB,T) * CapRc                                HVAC1  191
      QCM2   = CVAL(<COOL-SH-FT>,EWB,T)  * CapRc                                HVAC1  192
C              CALC TOTAL CAPACITY                                              FCOIL   73
      QCT    = <COOLCAPZ>*QCM1                                                  FCOIL   74
C              CALC SENSIBLE CAP                                                FCOIL   75
      QCS    = <COOLSHZ>*QCM2                                                   FCOIL   76
C              MAKE SURE SENSIBLE <= TOTAL                                      FCOIL   77
      QCS    = AMIN1(QCS,QCT)                                                   FCOIL   78
C              CALC MIN SUPPLY TEMP                                             FCOIL   79
      TCMINZ = TS - (QCS/(CONS(1)*<CFMAX>))*CON                                 FCOIL   80
      TCMINZ = AMAX1(TCMINZ,AMIN1(TM,<MIN-SUPPLY-T>-<THROTTLING-RANGE>))        FCOIL   81
C              SET TCMIN FOR USE IN SDSF                                        FCOIL   82
      TCMIN  = TCMINZ                                                           FCOIL   83
C              CALC MAX EXTRACTION RATE                                         FCOIL   84
      XC      = CONS(1)*<CFMAX>                                                 -044e2  26
      <ERMAX> = XC * (<TNOW>-TCMINZ)                                            -044e2  27
      IF(<INDOOR-FAN-MODE> .EQ. 0) THEN  ! continuous                           -044e2  28
        ZC     = XC                                                             -044e2  29
        ERMAXM = ZC * (<TNOW>-TM)                                               -044e2  30
      ENDIF                                                                     -044e2  31
C              CALC MAX SUPPLY TEMP                                             FCOIL   87
      THMAXZ = TS - (<HEATCAPZ>/(CONS(1)*<CFMAX>))*HON*CapRh                    HVAC1  193
      THMAXZ = AMIN1(THMAXZ,AMAX1(TM,<MAX-SUPPLY-T>))                           FCOIL   89
C              SET THMAX FOR USE IN SDSF                                        FCOIL   90
      THMAX  = THMAXZ                                                           FCOIL   91
C              CALC EXTRACTION RATE                                             FCOIL   92
      XH      = XC                                                              -044e2  32
      <ERMIN> = XH * (<TNOW>-THMAXZ)                                            -044e2  33
      ZH      = ZC                                                              -044e2  34
      ERMINM  = ERMAXM                                                          FCOIL   94
5     CONTINUE                                                                  FCOIL   95
C********************** run function : FCOIL-1Z ********************            FCOIL   96
      IF( MSYSF(33) .NE. 0 )   CALL  FINTS( MSYSF(33), 1. )                     FCOIL   97
C*******************************************************************            FCOIL   98
C              CALL ROUTINE TO COMPUTE THE TEMP AND LOAD IN ZONE                FCOIL   99
      CALL TEMDEV(0)                                                            FCOIL  100
C              PICK UP ZONE MULTIPLIER                                          FCOIL  101
      ZMULT  = <MULTIPLIER>                                                     FCOIL  102
C              INITIALIZE ZONE EXHAUST TO ZERO                                  FCOIL  103
      ECFM   = 0.                                                               -044a   72
C              IF FANS OFF OR THIS IS NOT A CONDITIONED ZONE SKIP               FCOIL  105
      IF(<ZONE-TYPE> .NE. 1)  GOTO 10                                           FCOIL  106
      IF(FON .EQ. 0.)  GOTO 7                                                   FCOIL  107
C              MAKE SURE EXHAUST IS NOT GREATER THAN SUPPLY                     FCOIL  108
      TAVE   = (<TNOW>+<TPAST>)*0.5                                             -044a   73
C              Recalc mixed ait temperature if it maybe used                    -044a   74
      IF((TAVE.GT.THZ+THR).AND.(TAVE.LT.TCZ-THR)) THEN                          -044a   75
        IF(PO .GT. 0.)  THEN                                                    -044a   76
C              If intermittent fans                                             -044a   77
          IF (<INDOOR-FAN-MODE>.EQ.0) THEN                                      -044a   78
            TC   = TAVE - <QNOW>/(CONS(1)*<CFMAX>)                              -044a   79
     $                  - <SUPPLY-DELTA-T>*CONS(3)                              -044a   80
          ELSE                                                                  -044a   81
            IF(<QNOW> .GE. 0.) THEN                                             -044a   82
              TC   = TCMIN - <SUPPLY-DELTA-T>*CONS(3)                           -044a   83
            ELSE                                                                -044a   84
              TC   = THMAX - <SUPPLY-DELTA-T>*CONS(3)                           -044a   85
            ENDIF                                                               -044a   86
          ENDIF                                                                 -044a   87
          TR   = TAVE                                                           -044a   88
          CFM  = <CFMAX>                                                        -044a   89
          RCFM = <CFMAX>                                                        -044a   90
          ICALL= 1                                                              -044a   91
          CALL ECONO(ICALL,TC,POM)                                              -044a   92
          TM   = TM   + <SUPPLY-DELTA-T>*CONS(3)                                -044a   93
        ELSE                                                                    -044a   94
          TM   = TAVE + <SUPPLY-DELTA-T>*CONS(3)                                -044a   95
        ENDIF                                                                   -044a   96
        TS     = TM                                                             -044a   97
      ENDIF                                                                     -044a   98
C              If intermittent fans                                             -044a   99
      IF (<INDOOR-FAN-MODE>.EQ.1 ) THEN                                         -044a  100
C              Set to MAX or MIN supply T depending on                          -044a  101
C              which band of the throttling range for the  control zone         -044a  102
        IF(<TNOW> .GE. TCZ-THR)  THEN                                           -044a  103
C              Cooling band                                                     -044a  104
          TC = TCMIN                                                            -044a  105
        ELSEIF(<TNOW> .LE. THZ+THR)  THEN                                       -044a  106
C              Heating band                                                     -044a  107
          TC = THMAX                                                            -044a  108
        ELSE                                                                    -044a  109
C              Deadband - If intermittent fans                                  -044a  110
C              If a load was calculated that means we started the               -044a  111
C              hour in a heating or cooling band then cycle                     -044a  112
            IF (<QNOW>.LT.-1.0) THEN                                            -044a  113
              TC = THMAX                                                        -044a  114
            ELSEIF (<QNOW>.GT.1.0) THEN                                         -044a  115
              TC = TCMIN                                                        -044a  116
            ELSE                                                                -044a  117
C              IF no load the system is off the entire hour                     -044a  118
                                                                                -044a  119
              TC = TM                                                           -044a  120
            ENDIF                                                               -044a  121
        ENDIF                                                                   -044a  122
        IF(TAVE .NE. TC) THEN                                                   -044a  123
          CFM = Max(0.1, Min(<QNOW>/(CONS(1)*(TAVE-TC)), <CFMAX>))              -044d3   1
        ELSE                                                                    -044a  125
          CFM = 0.0                                                             -044a  126
        ENDIF                                                                   -044a  127
        IF(CFM .LT. <CFMAX>) THEN                                               -044a  128
          CFMCYC = CFM/<CFMAX>                                                  -044a  129
        ENDIF                                                                   -044a  130
      ELSE                                                                      -044a  131
C              Constant running fans                                            -044a  132
C              Use zone requirement to set supply T                             -044a  133
C              and make sure it is within obtainable range                      -044a  134
        TC   = TAVE - <QNOW>/(CONS(1)*<CFMAX>)                                  -044a  135
        TC   = AMAX1(TCMIN,AMIN1(TC,THMAX))                                     -044a  136
        IF((TAVE.GT.THZ+THR).AND.(TAVE.LT.TCZ-THR).AND.                         -044a  137
     $     (ABS(<QNOW>-ERMAXM).LT.10.))  TC = TM                                -044a  138
        CFM = <CFMAX>                                                           -044a  139
      ENDIF                                                                     -044a  140
c              exhaust fan                                                      -044e  200
      IF (<EXHAUST-SOURCE> .eq. 1)    ! makeup by system OA                     -046   220
     &  Call ZoneExhaust(9, CFM)      ! exhaust flow and power                  -046   221
      ECFM = EXCFM                                                              -044e  202
      <SUPPLY-CFM> = CFM                                                        FCOIL  123
      <SUPPLY-KW>  = FKW*CFM                                                    FCOIL  124
      <COOLING-CAPACITY> = <COOLCAPZ>                                           FCOIL  125
      <COOL-SH-CAP> = <COOLSHZ>                                                 FCOIL  126
      <RATED-CFM> = <RATEDCFM>                                                  FCOIL  127
C              CALC RETURN AIR RATIO                                            FCOIL  128
      RETR   = 1.                                                               FCOIL  129
      IF(CFM .GT. 0.)  RETR = (1.0-ECFM/CFM)                                    FCOIL  130
C              CALC RETURN AIR CFM                                              FCOIL  131
      RCFM   = CFM - ECFM                                                       FCOIL  132
C              SET RETURN AIR TEMP TO BE ZONE TEMP                              FCOIL  133
      TR     = TAVE                                                             FCOIL  134
C              SET TOTAL LATENT LOAD TO BE ZONE LATENT LOAD                     FCOIL  135
      QLSUM  = <QL>*RETR                                                        FCOIL  136
C              SET LIGHT TO PLENUM LOAD TO ZERO SINCE                           FCOIL  137
C              WE ASSUME NO RETURN AIR PLENUM FOR SYSTEM                        FCOIL  138
      QPSUM  = 0.                                                               FCOIL  139
C              SET INFILTRATION CFM TO THAT FOR THIS ZONE                       FCOIL  140
      CINF   = <CFMINF>*RETR                                                    FCOIL  141
      <CFM/ACH> = <VOLUME>/60.                                                  -048l    3
C              SET LAST HOUR MIX TEMP FOR ZONE                                  FCOIL  142
      <CL_COIL_EWB> = <COIL_EWBZ>                                               HVAC1  194
      <CL_COIL_EDB> = <COIL_EDBZ>                                               HVAC1  195
C              CALL ROUTINE TO SIMULATE SINGLE DUCT AIR                         FCOIL  145
C              HANDLER. IN THIS CASE IT WILL BE ONLY FOR                        FCOIL  146
C              THIS ZONE.                                                       FCOIL  147
      QDHUM = 0.                                                                FCOIL  148
      QHUM =  0.                                                                FCOIL  149
      CALL SDSF                                                                 FCOIL  150
C              SEE IF WAS FURNACE HEATING                                       FCOIL  151
    7 IF((<HEAT-SOURCE>.EQ.2).OR.(<HEAT-SOURCE>.EQ.3))  THEN                    HVAC6  162
        CALL FURNAC(QH,<HEATCAPZ>,<HEAT-SOURCE>,ZMULT)                          HVAC6  163
        JEM       = <AUX-E-MZ>                                                  HVAC6  164
        <AUX-EM>  = <AUX-EM> + FurnAuxkW                                        HVAC6  165
        JFM       = <HEAT-F-MZ>                                                 HVAC6  166
        <HEAT-FM> = <HEAT-FM> - FFUEL                                           HVAC6  167
        <AUX-FM>  = <AUX-FM>  + FurnAuxFuel                                     HVAC6  168
      ENDIF                                                                     HVAC6  169
C              IF ZONE COILS ARE ELECTRIC                                       FCOIL  154
      IF (<HEAT-SOURCE>.EQ.1)  THEN                                             FCOIL  155
        X      = QH*KWBTU                                                       FCOIL  156
        ZKW    = ZKW    - X                                                     FCOIL  157
        SKWQH  = SKWQH  - X*ZMULT                                               FCOIL  158
        JEM       = <HEAT-E-MZ>                                                 HVAC6  170
        <HEAT-EM> = <HEAT-EM> - X*ZMULT                                         HVAC6  171
      ENDIF                                                                     FCOIL  160
C              IF BASEBOARDS ARE GAS OR OIL                                     FCOIL  161
      IF((<BASEBOARD-SOURCE>.EQ.2).OR.(<BASEBOARD-SOURCE>.EQ.3))  THEN          HVAC6  172
        CALL FURNAC(QHBZ,<BASEBOARD-RATING>,<BASEBOARD-SOURCE>,ZMULT)           HVAC6  173
        JEM       = <AUX-E-MZ>                                                  HVAC6  174
        <AUX-EM>  = <AUX-EM> + FurnAuxkW                                        HVAC6  175
        JFM       = <HEAT-F-MZ>                                                 HVAC6  176
        <HEAT-FM> = <HEAT-FM> - FFUEL                                           HVAC6  177
        <AUX-FM>  = <AUX-FM>  + FurnAuxFuel                                     HVAC6  178
      ENDIF                                                                     HVAC6  179
C              IF BASEBOARDS ARE ELECTRIC                                       FCOIL  165
      IF (<BASEBOARD-SOURCE>.EQ.1)  THEN                                        FCOIL  166
        X      = QHBZ*KWBTU                                                     FCOIL  167
        ZKW    = ZKW    - X                                                     FCOIL  168
        SKWQH  = SKWQH  - X*ZMULT                                               FCOIL  169
        JEM       = <HEAT-E-MZ>                                                 HVAC6  180
        <HEAT-EM> = <HEAT-EM> - X*ZMULT                                         HVAC6  181
      ENDIF                                                                     FCOIL  171
      IF(FON .EQ. 0.)  GOTO 10                                                  FCOIL  172
C              ADD UNIT HEAT/COOL LOADS TO RUNNING TOTAL                        FCOIL  173
      QHZ    = QHZ + QH*ZMULT                                                   FCOIL  174
      QCZ    = QCZ + QC*ZMULT                                                   FCOIL  175
      QHUMT  = QHUMT + QHUM*ZMULT                                               -030   123
      ZQH    = QH                                                               FCOIL  176
      ZQC    = QC                                                               FCOIL  177
      CFMZ   = CFM                                                              FCOIL  178
      IF(QH .LT. -1.) FH = CFMZ                                                 -043a  102
      IF(QC .GT.  1.) FC = CFMZ                                                 -043a  103
      IF(FH+FC.EQ.0.) FC = CFMZ                                                 -043a  104
      ZQCLAT = ZQCLAT + QCLAT*ZMULT                                             FCOIL  179
c              Save TM and WM for CONS() terms next hour                        -044c2  54
      <zn.Tmix1> = <sy.Tmix1>                                                   -044c2  55
      <zn.Wmix1> = <sy.Wmix1>                                                   -044c2  56
      IF (<sy.FanOnPast> .lt. 0.)  THEN  ! start-up hour                        -044c2  57
        <zn.TmixStart> = <sy.Tmix1>                                             -044c2  58
        <zn.WmixStart> = <sy.Wmix1>                                             -044c2  59
      ENDIF                                                                     -044c2  60
10        CONTINUE                                                              FCOIL  195
C********************** run function : FCOIL-2Z ********************            FCOIL  196
          IF( MSYSF(34) .NE. 0 )   CALL  FINTS( MSYSF(34), 2. )                 FCOIL  197
C*******************************************************************            FCOIL  198
c                                                                               HVAC1  196
c              save zonal coil flows and loads for circulation loop calcs       HVAC1  197
      <COIL_CFMZ>   = CFM                                                       HVAC1  198
      <COIL_EDBZ>   = <CL_COIL_EDB>                                             HVAC1  199
      <COIL_EWBZ>   = <CL_COIL_EWB>                                             HVAC1  200
      <COIL_CYCLEZ> = 1.                                                        HVAC1  201
      <COIL_QZ>     = QH + QC                                                   HVAC1  202
      <BBRD_EDB>    = TAVE                                                      HVAC1  203
      <BBRD_Q>      = QHBZ                                                      HVAC1  204
C              ADD ZONE KW TO TOTAL SYSTEM KW                                   FCOIL  199
      ZKW = ZKW + <ZKW>                                                         FCOIL  200
C              SAVE ZONE FAN ENERGY AND ADD BALANCE INTO TOTAL SYSTEM VARIABLES -043a  105
      ZFANKW = SFKW+RFKW                                                        -043a  106
      <SKW>  = <SKW> + ZKW*ZMULT + ZFANKW*ZMULT                                 -044c1   5
      FANKW  = FANKW + ZFANKW*ZMULT                                             -044c1   6
      SFKWt  = SFKWt + ZFANKW*ZMULT                                             -044c1   7
c              assign electric load to meter                                    -044c1   8
      JEM       = <VENT-E-MZ>                                                   -044c1   9
      <VENT-EM> = <VENT-EM> + ZFANKW*ZMULT                                      -044c1  10
C              ADD FAN ENERGY TO ZKW ONLY USED IN REPORT                        -043a  109
      ZKW    = ZKW + ZFANKW*ZMULT                                               -043a  110
C              SUM END-USE VARIABLES FOR THIS ZONE                              FCOIL  205
C              IF NOT REP-BLOCK BUFFER OR NO HOURLY-REP                         FCOIL  207
C              SCHEDULED ON THIS HOUR SKIP                                      FCOIL  208
      IF((<IZNBUFP>.EQ.0).OR.(IRSCH.EQ.0))  GOTO 15                             FCOIL  209
C              SINCE THE SDSF SYSTEM SIMULATION ROUTINE IS                      FCOIL  210
C              CALLED ONCE FOR EACH ZONE IN THIS CASE WE                        FCOIL  211
C              SAVE SOME OF THE SYSTEM VARIABLES IN A SPECIAL                   FCOIL  212
C              ARRAY. THEY ARE THEN PLACED IN THE REP-BLOCK                     FCOIL  213
C              BUFFER ALONG WITH THE OTHER ZONE VARIABLES.                      FCOIL  214
      FCHPS(1)  = TC                                                            FCOIL  215
      FCHPS(2)  = QH                                                            FCOIL  216
      FCHPS(3)  = QC                                                            FCOIL  217
      FCHPS(4)  = SFKW+RFKW                                                     FCOIL  218
      FCHPS(5)  = TM                                                            FCOIL  219
      FCHPS(6)  = WR                                                            FCOIL  220
      FCHPS(7)  = WM                                                            FCOIL  221
      FCHPS(8)  = WCOIL                                                         FCOIL  222
      FCHPS(9)  = PO                                                            FCOIL  223
      FCHPS(10) = QCLAT                                                         FCOIL  224
      FCHPS(11) = PLRC                                                          FCOIL  225
      FCHPS(12) = DBOA                                                          -044a  144
      FCHPS(13) = TS                                                            FCOIL  227
      FCHPS(14) = <COIL_EDBZ>                                                   -030   124
      FCHPS(15) = QHUM                                                          -030   125
C              CALL ROUTINE TO FILL THE REP-BLOCK BUFFER                        FCOIL  228
      CALL USERZR( ZP1,ZP2 )                                                    FCOIL  229
   15 CONTINUE                                                                  FCOIL  230
      IF(IRPZON .NE. 0)  CALL RPTZON                                            FCOIL  231
      VOLMUL = VOLMUL+<VOLUME>*<MULTIPLIER>                                     FCOIL  232
      XT1    = <VOLUME>*<MULTIPLIER>*WR                                         FCOIL  233
      WAV    = WAV+XT1                                                          FCOIL  234
C              INCREMENT ZP1 TO POINT TO THE NEXT ZONE ON SYSTEM                FCOIL  235
      ZP1    = ZP1 + NZD                                                        FCOIL  236
   50 CONTINUE                                                                  FCOIL  237
C                                                                               FCOIL  238
C              MISC CLEANUP                                                     FCOIL  239
C                                                                               FCOIL  240
      <SUPPLY-KW> = FKW                                                         FCOIL  241
      <SUPPLY-CFM> = FCFM                                                       -043a  111
      <MIN-OUTSIDE-AIR> = OAMIN                                                 FCOIL  242
      <INDOOR-FAN-MODE> = IFMS                                                  -044c  501
      QCLAT  = ZQCLAT                                                           FCOIL  243
      QHUM   = QHUMT                                                            -030   126
      QH     = 0.0                                                              FCOIL  244
      SFKW   = SFKWt                                                            -044c1  11
      <PASTWR>=WAV/VOLMUL                                                       FCOIL  245
C              SYSTEM HEATING LOAD AND COOLING LOAD ARE A SUM OF                FCOIL  251
C              THE FAN-COIL UNIT LOADS AND THE CHANGE OVER LOADS                FCOIL  252
      IF(<HEAT-SOURCE> .LE. 0)  <QH> = QHZ                                      FCOIL  253
      QC     = QCZ                                                              FCOIL  254
C********************** run function : FCOIL-3 *********************            FCOIL  255
      IF( MSYSF(35) .NE. 0 )   CALL  FINTS( MSYSF(35), 3. )                     FCOIL  256
C*******************************************************************            FCOIL  257
      RETURN                                                                    FCOIL  258
      END                                                                       FCOIL  259
      FUNCTION FF(TN)                                                           FF       2
C                                                                               FF       3
C              CALCULATE A NEW F TERM ASSUMING TN WAS LAST HOUR'S               FF       4
C              ENDING TEMPERATURE INSTEAD OF <TNOW>                             FF       5
C                                                                               FF       6
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
C                                                                               FF       9
      FF = FTDEV( <FLAST> - <GLAST0>*TN, TN )                                   FF      10
      RETURN                                                                    FF      11
      END                                                                       FF      12
      FUNCTION FINTRP(X,X1,X2,Y1,Y2)                                            FINTRP   2
C                                                                               FINTRP   3
C              LINEARLY INTERPOLATE/EXTRAPOLATE                                 FINTRP   4
C                                                                               FINTRP   5
C              GET THE SLOPE                                                    FINTRP   6
      B = (Y2-Y1)/(X2-X1)                                                       FINTRP   7
C              INTERCEPT                                                        FINTRP   8
      A = Y1 - B*X1                                                             FINTRP   9
C                                                                               FINTRP  10
      FINTRP = A + B*X                                                          FINTRP  11
      RETURN                                                                    FINTRP  12
      END                                                                       FINTRP  13
      subroutine  FIACCS ( iflag, ioffs )                                       FIACCS   2
c---                                                                            FIACCS   3
c--- get values from SYS data structure into function symbol table              FIACCS   4
      return                                                                    FIACCS 408
      end                                                                       FIACCS 409
C-----------------------------------------------------------------------        FIACCS 410
      SUBROUTINE FNSYS1                                                         FNSYS1   2
c                                                                               FNSYS1   3
c--- direct sum to plant (to be used for customized system by functions)        FNSYS1   4
c                                                                               FNSYS1   5
      COMMON /FFUEL/ FFUEL, FurnAuxFuel, FurnAuxkW, PLRF                        /FFUEL/  2
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON  /ENDUSE/ SUPPKW, HEATKW                                           HVAC27   1
      common  /FNSYS/  ISKIPS, MSYSF(120)                                       /FNSYS/  2
      COMMON  /HRREP / Irb, Ihrp, Lrb, Lhrp, Nrb, Nhrp, IVTLIM(3,50),           HR       5
     &                 IGRPtr, IBRPtr, IRSch, IRSchT(5),                        HR       6
     &                 NHRTyp(3), ITBUF(3), ITBUFB(3), ITBUFE(3),               HR       7
     &                 IHREOF, ICDFLG                                           HR       8
      COMMON  /PTRPLT/ Ipm,Ilp,Ich,Ibl,Idw,Itw,Ipv,Ign,Itk,Ihx,                 PV       1
     &                 Iec,Ilm,Iem,Ifm,Ism,Icm,Imm,Imc,Igl,Isp2,                XFC2     1
     &                 Ispare(5),  Ipe,                                         HVAC19   3
     &                 Npm,Nlp,Nch,Nbl,Ndw,Ntw,Npv,Ngn,Ntk,Nhx,                 PV       2
     &                 Nec,Nlm,Nem,Nfm,Nsm,Ncm,Nmm,Nmc,Ngl,Nsp2,                XFC2     2
     &                 Nspare(5),  Npe,                                         HVAC19   6
     &                 Lpm,Llp,Lch,Lbl,Ldw,Ltw,Lpv,Lgn,Ltk,Lhx,                 PV       3
     &                 Lec,Llm,Lem,Lfm,Lsm,Lcm,Lmm,Lmc,Lgl,Lsp2,                XFC2     3
     &                 Lspare(5),  Lpe,                                         HVAC19   9
     &                 Jpm,Jlp,Jch,Jbl,Jdw,Jtw,Jpv,Jgn,Jtk,Jhx,                 PV       4
     &                 Jec,Jlm,Jem,Jfm,Jsm,Jcm,    Jmc,Jgl,                     HVAC19  11
     &                 Jpe, kpr, NumMeters, NumIntHX                            XFC1     1
      COMMON  /MISCD / TEMPS(4,9999),CONS(5),TEMPSL(9999),                      -048a   10
     1                 BLDGQH,BLDGQC,BLDGQL,BLDGP,BPMULT,                       /MISCD/  3
     $                 DBTMIN,DBTMAX,WMIN,WMAX,NSPZ(9999),                      -048a   11
     3                 DQ, DTP, DTR, DTS, FPI, PLRCC , POM, TC2, TDM,           /MISCD/  5
     4                 TRA,WCOL,WCOLM,WMM,YPI,KWBTU,BTUKW,UNFILD,Unusedm        RemPA   45
      REAL             KWBTU                                                    /MISCD/  7
      COMMON  /PLANTD/ QHMP,TMP,CFMP,QHPP,CFMPP,                                /PLANTD/ 2
     1                 QHZP,TZP,DHWPKW,DHWPLF,DHWQRP                            RemPA   46
      REAL             PLANTD(10)                                               RemPA   47
      EQUIVALENCE      (PLANTD(1), QHMP)                                        RemPA   48
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      COMMON  /SYSTD / TH,TC,TM,TR,QH,QC,QHZ,QCZ,QHB,QHP,QHUM,                  /SYSTD/  2
     1                 QDHUM,TCMIN,THMAX,QLSUM,QPSUM,CFM,CFMH,CFMC,             /SYSTD/  3
     2                 RCFM,ECFM,CINF,FON,HON,CON,BON,SCONS(3),PH,PC,           /SYSTD/  4
     3                 SKW,FANKW,unused1,WR,WM,WCOIL,WW,PO,D,                   -046f    1
     4                 FTEMP,TCR,QHR,RfanPumpKW,SGAS,SKWQH,SKWQC,QCLAT,         -131    23
     5                 SFKW,RFKW,FONNGT,WSURF,RWalkinQ,TSURF,TRh,               -131    24
     6                 CBF,CBF1,CBF2,EON,PLRCFM,PLRC,PLRH,QCM1,                 /SYSTD/  8
     7                 QCM2,QHM1,EIRM1,EIRM2,EIR,OFKW,QCT,QCS,                  /SYSTD/  9
     8                 WRMAX,WRMIN,CFMRAT,QdistG,QdistL,RON,QHT,                /SYSTD/ 10
     9                 TPOMIN,POMIN,QHSUP,QRSENS,QRLAT,QRREC,QRREJ,             /SYSTD/ 11
     1                 RCOMKW,RDEFKW,RAUXKW,ECFMP,CFMIN,CINFP,DT,DW,            /SYSTD/ 12
     2                 EWB,IC,NATTSP,Q,RETR,SLOAD,QLSUMP,T,TCHUM,TEND,          /SYSTD/ 13
     3                 TS,hgbmin,HPDefE,EconoOnly,TDuctEnv,                     -044e1   1
     4                 QCUNMT,CapRh,CapRph,CapRc                                HVAC25   3
      REAL             SYSTD(113)                                               HVAC19  13
      EQUIVALENCE      (SYSTD(1),TH)                                            RemPA   65
      COMMON  /TIME  / IDOY, IYR, IMO, IDAY, IHR,                               Time     4
     &                 ISCMO, ISCDAY, ISCHR, IDOW, ISCDOW, iDSdates(6),         -044e5   1
     &                 iTimeFlg, iDSFlg, iDDFlg, InitialFlg, LeapYr,            Time     6
     &                 CLOCK(10), MONDSC(13), MONLEN(12), MONSDA(12)            HR      12
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
      COMMON  /ZONED / EXCFM,FH,FC,CFMZ,QHBZ,QOVER,THZ,TCZ,ERMAX,ERMIN,         /ZONED/  2
     1                 TRY,FTD,CORINT,G0,G1,G2,G3,SIGMAG,TL,ZQHR,TAVE,          /ZONED/  3
     2                 ZQH,ZQC,FCHPS(15),ACFM,ZKW,TCMINZ,THMAXZ,                /ZONED/  4
     3                 ERMAXM,ERMINM,THR,CSSCND,CSSVEC,HENOW,QGWIN,             /ZONED/  5
     4                 QSNABT,QGOPWL,QGVEC,CFMCVT,SSFPT,CFMVNT,ZFANKW,          /ZONED/  6
     5                 ZKWCBT,ZKWHBT,ZCapRbbrd, XC,ZC,XH,ZH                     -044e2   7
      REAL ZONED(63)                                                            -044e2   8
      EQUIVALENCE (ZONED(1),EXCFM)                                              /ZONED/  9
c---- if variable-temp is on skip                                               FNSYS1  17
      if ( <VARIABLE-T> .eq. 0 )     then                                       FNSYS1  18
c-------- set fans,heat, and cool to be on                                      FNSYS1  19
          HON = 1.                                                              FNSYS1  20
          CON = 1.                                                              FNSYS1  21
          FON = 1.                                                              FNSYS1  22
      endif                                                                     FNSYS1  23
c              set circulation-loop restrictions on heating and                 HVAC1  206
c              cooling capacity                                                 HVAC1  207
      IF (<HW-LOOP> .NE. 0)  THEN                                               HVAC1  208
c              heating coil is hot water - pointer to loop                      HVAC1  209
        JLP   = <HW-LOOP>                                                       HVAC1  210
        CapRh = <lp;HCAP_RATIO>                                                 HVAC16  84
      ELSE                                                                      HVAC1  212
        CapRh = 1.0                                                             HVAC1  213
      ENDIF                                                                     HVAC1  214
      IF (<PHW-LOOP> .NE. 0)  THEN                                              HVAC1  215
c              preheat coil is hot water - pointer to loop                      HVAC1  216
        JLP    = <PHW-LOOP>                                                     HVAC1  217
        CapRph = <lp;HCAP_RATIO>                                                HVAC16  85
      ELSE                                                                      HVAC1  219
        CapRph = 1.0                                                            HVAC1  220
      ENDIF                                                                     HVAC1  221
      IF (<CHW-LOOP> .NE. 0)  THEN                                              HVAC1  222
c              cooling coil is water - pointer to loop                          HVAC1  223
        JLP   = <CHW-LOOP>                                                      HVAC1  224
        CapRc = <lp;CCAP_RATIO>                                                 HVAC16  86
      ELSE                                                                      HVAC1  226
        CapRc = 1.0                                                             HVAC1  227
      ENDIF                                                                     HVAC1  228
c                                                                               HVAC1  229
c                                                                               FNSYS1  24
c---- set ZP1 to point to the first zone                                        FNSYS1  25
c                                                                               FNSYS1  26
      ZP1    = ISZ                                                              FNSYS1  27
c***************** run function : FNSYS1-1 *********************                FNSYS1  28
      if ( MSYSF(96) .ne. 0 )     call  FINTS( MSYSF(96), 0. )                  FNSYS1  29
c***************************************************************                FNSYS1  30
c                                                                               FNSYS1  31
c---- loop through the zones on the system                                      FNSYS1  32
c                                                                               FNSYS1  33
      DO   10000   NZ = 1 , NSZ                                                 FNSYS1  34
c                                                                               FNSYS1  35
c-------- zero the zone data common block                                       FNSYS1  36
          DO 111  I=1,63                                                        -044e2  35
              ZONED(I) = 0.0                                                    FNSYS1  38
111       continue                                                              FNSYS1  39
c-------- pick up ptr to ZP2 data                                               FNSYS1  40
          ZP2     = <ZP2>                                                       FNSYS1  41
c              set zonal circulation-loop restrictions on heating and           HVAC1  230
c              cooling capacity                                                 HVAC1  231
          IF (<HW-LOOPZ> .NE. 0)  THEN                                          HVAC1  232
            JLP    = <HW-LOOPZ>                                                 HVAC1  233
            ZCapRh = <lp;HCAP_RATIO>                                            HVAC16  87
          ELSE                                                                  HVAC1  235
            ZCapRh = 1.0                                                        HVAC1  236
          ENDIF                                                                 HVAC1  237
          IF (<CHW-LOOPZ> .NE. 0)  THEN                                         HVAC1  238
c              zone heating coil is hot water - pointer to loop                 HVAC1  239
            JLP    = <CHW-LOOPZ>                                                HVAC1  240
            ZCapRc = <lp;HCAP_RATIO>                                            HVAC16  88
          ELSE                                                                  HVAC1  242
            ZCapRc = 1.0                                                        HVAC1  243
          ENDIF                                                                 HVAC1  244
c                                                                               HVAC1  245
          <ERMAX> = <ERMAXD> * CON * ZCapRc                                     HVAC1  246
          <ERMIN> = <ERMIND> * HON * ZCapRh                                     HVAC1  247
c***************** run function : FNSYS1-2Z ********************                FNSYS1  44
          if ( MSYSF(97) .ne. 0 )     call  FINTS( MSYSF(97), 0. )              FNSYS1  45
c***************************************************************                FNSYS1  46
c                                                                               FNSYS1  47
c-------- call routine to calc zone temp and load                               FNSYS1  48
c                                                                               FNSYS1  49
           call  TEMDEV(0)                                                      FNSYS1  50
c                                                                               FNSYS1  51
c-------- if this is an uncond zone skip                                        FNSYS1  52
c                                                                               FNSYS1  53
          if ( <ZONE-TYPE> .eq. 1 )    then                                     FNSYS1  54
c                                                                               FNSYS1  55
c------------ ck if fans are on                                                 FNSYS1  56
c                                                                               FNSYS1  57
              if ( FON .ne. 0. )   then                                         FNSYS1  58
c                 zone multiplier                                               HVAC6  183
                  ZMULT = <MULTIPLIER>                                          HVAC6  184
c---------------- separate heating and cooling loads                            FNSYS1  59
                  ZQH = AMIN1( 0., <QNOW> )                                     FNSYS1  60
                  ZQC = AMAX1( 0., <QNOW> )                                     FNSYS1  61
c---------------- increment total system heating/cooling                        FNSYS1  62
                  QHZ = QHZ  +  ZQH * ZMULT                                     HVAC6  185
                  QCZ = QCZ  +  ZQC * ZMULT                                     HVAC6  186
c---------------- if zone coils are electric                                    FNSYS1  65
                  if ( <HEAT-SOURCE> .eq. 1 )    then                           FNSYS1  66
                      X      = ZQH * KWBTU                                      FNSYS1  67
                      ZKW    = ZKW    - X                                       FNSYS1  68
                      SKWQH  = SKWQH  - X * <MULTIPLIER>                        FNSYS1  69
                      JEM       = <HEAT-E-MZ>                                   HVAC6  187
                      <HEAT-EM> = <HEAT-EM> - X*ZMULT                           HVAC6  188
                  endif                                                         FNSYS1  71
c---------------- if heat coils are fuel                                        FNSYS1  72
                  if ( (<HEAT-SOURCE> .eq. 2) .or.                              FNSYS1  73
     1                 (<HEAT-SOURCE> .eq. 3) )     then                        FNSYS1  74
                       call  FURNAC( ZQH, <ERMIND>, <HEAT-SOURCE>               FNSYS1  75
     1                             , ZMULT )                                    HVAC6  189
        JEM       = <AUX-E-MZ>                                                  HVAC6  190
        <AUX-EM>  = <AUX-EM> + FurnAuxkW                                        HVAC6  191
        JFM       = <HEAT-F-MZ>                                                 HVAC6  192
        <HEAT-FM> = <HEAT-FM> - FFUEL                                           HVAC6  193
        <AUX-FM>  = <AUX-FM>  + FurnAuxFuel                                     HVAC6  194
                  endif                                                         FNSYS1  77
              endif                                                             FNSYS1  78
c***************** run function : FNSYS1-3Z ********************                FNSYS1  79
              if ( MSYSF(98) .ne. 0 )     call  FINTS( MSYSF(98), 0. )          FNSYS1  80
              if ( ISKIPS .ne. 0 )     then                                     FNSYS1  81
                  goto  1200                                                    FNSYS1  82
              endif                                                             FNSYS1  83
c***************************************************************                FNSYS1  84
c------------ if baseboards are electric                                        FNSYS1  85
              if ( <BASEBOARD-SOURCE> .eq. 1 )    then                          FNSYS1  86
                  X      = QHBZ * KWBTU                                         FNSYS1  87
                  ZKW    = ZKW    - X                                           FNSYS1  88
                  SKWQH  = SKWQH  - X * <MULTIPLIER>                            FNSYS1  89
                  JEM       = <HEAT-E-MZ>                                       HVAC6  195
                  <HEAT-EM> = <HEAT-EM> - X*ZMULT                               HVAC6  196
              endif                                                             FNSYS1  91
c------------ if baseboards are fuel                                            FNSYS1  92
              if ( (<BASEBOARD-SOURCE> .eq. 2) .or.                             FNSYS1  93
     1             (<BASEBOARD-SOURCE> .eq. 3) )     then                       FNSYS1  94
                   call  FURNAC ( QHBZ, <BASEBOARD-RATING>                      FNSYS1  95
     1                          , <BASEBOARD-SOURCE>, ZMULT )                   HVAC6  197
        JEM       = <AUX-E-MZ>                                                  HVAC6  198
        <AUX-EM>  = <AUX-EM> + FurnAuxkW                                        HVAC6  199
        JFM       = <HEAT-F-MZ>                                                 HVAC6  200
        <HEAT-FM> = <HEAT-FM> - FFUEL                                           HVAC6  201
        <AUX-FM>  = <AUX-FM>  + FurnAuxFuel                                     HVAC6  202
              endif                                                             FNSYS1  97
1200          continue                                                          FNSYS1  98
          endif                                                                 FNSYS1  99
c***************** run function : FNSYS1-4Z ********************                FNSYS1 100
          if ( MSYSF(99) .ne. 0 )     call  FINTS( MSYSF(99), 0. )              FNSYS1 101
          if ( ISKIPS .ne. 0 )     then                                         FNSYS1 102
              goto  1300                                                        FNSYS1 103
          endif                                                                 FNSYS1 104
c***************************************************************                FNSYS1 105
c                                                                               HVAC1  248
c              save zonal coil flows and loads for any circulation loop calcs   HVAC1  249
      <COIL_CFMZ>   = CFMZ                                                      HVAC1  250
      <COIL_EDBZ>   = TC                                                        HVAC1  251
      <COIL_EWBZ>   = <CL_COIL_LWB>                                             HVAC1  252
      <COIL_CYCLEZ> = 1.                                                        HVAC1  253
      <COIL_QZ>     = ZQH + ZQC                                                 HVAC1  254
      <BBRD_EDB>    = (<TNOW>+<TPAST>) * 0.5                                    HVAC1  255
      <BBRD_Q>      = QHBZ                                                      HVAC1  256
c              not implemented yet                                              HVAC1  257
c     <WSE_COIL_CFMZ> =                                                         HVAC1  258
c     <WSE_COIL_EWBZ> =                                                         HVAC1  259
c     <WSE_COIL_EDBZ> =                                                         HVAC1  260
c     <WSE_COIL_QZ>   =                                                         HVAC1  261
c     <CW_COIL_GPMZ>  =                                                         HVAC1  262
c     <CW_COIL_QZ>    =                                                         HVAC1  263
c-------- increment total system latent load                                    FNSYS1 106
          QLSUM = QLSUM  +  <QL> * <MULTIPLIER>                                 FNSYS1 107
c-------- increment total system light-to-return load                           FNSYS1 108
          QPSUM = QPSUM  +  <QLIGHTRETURN> * <MULTIPLIER>                       FNSYS1 109
c-------- increment total system kw                                             FNSYS1 110
          ZKW   = ZKW + <ZKW>                                                   FNSYS1 111
          <SKW> = <SKW>  +  ZKW * <MULTIPLIER>                                  FNSYS1 112
c-------- increment total system infiltration cfm                               FNSYS1 113
          CINF  = CINF + <CFMINF>                                               FNSYS1 114
1300      continue                                                              FNSYS1 115
C              SUM END-USE VARIABLES FOR THIS ZONE                              FNSYS1 121
      ZMULT = <MULTIPLIER>                                                      FNSYS1 122
c                                                                               FNSYS1 124
c-------- handle hourly-report request                                          FNSYS1 125
c--------   if rep-block buf and hourly-rep sched fill buff                     FNSYS1 126
          if ( (<IZNBUFP> .ne. 0) .and. (IRSCH .ne. 0) )                        FNSYS1 127
     1         call  USERZR( ZP1, ZP2 )                                         FNSYS1 128
          if ( IRPZON .ne. 0 )    call  RPTZON                                  FNSYS1 129
c-------- increment ZP1 to point to next zone                                   FNSYS1 130
          ZP1 = ZP1 + NZD                                                       FNSYS1 131
10000 continue                                                                  FNSYS1 132
c***************** run function : FNSYS1-5 *********************                FNSYS1 133
          if ( MSYSF(100) .ne. 0 )     call  FINTS( MSYSF(100), 0. )            FNSYS1 134
c***************************************************************                FNSYS1 135
c                                                                               FNSYS1 136
c---- calculate total system loads                                              FNSYS1 137
c                                                                               FNSYS1 138
      if ( <HEAT-SOURCE> .le. 0 )   <QH> = QHZ                                  FNSYS1 139
      QC = QCZ                                                                  FNSYS1 140
c                                                                               HVAC1  264
c              save coil flows and loads for any circulation loop calcs         HVAC1  265
      <HT_COIL_CFM>   = CFM                                                     HVAC1  266
      <HT_COIL_EDB>   = TM                                                      HVAC1  267
      <HT_COIL_CYCLE> = 1.                                                      HVAC1  268
      <HT_COIL_Q>     = QH                                                      HVAC1  269
      <CL_COIL_CFM>   = CFM                                                     HVAC1  270
      <CL_COIL_EDB>   = TM                                                      HVAC1  271
      <CL_COIL_EWB>   = WBFS(TM,WM,PATM)                                        HVAC1  272
      <CL_COIL_CYCLE> = 1.                                                      HVAC1  273
      <CL_COIL_Q>     = QC                                                      HVAC1  274
c              not implemented yet                                              HVAC1  275
c     <WSE_COIL_CFM>  = CFM * PC                                                HVAC1  276
c     <WSE_COIL_EDB>  =                                                         HVAC1  277
c     <WSE_COIL_EWB>  =                                                         HVAC1  278
c     <WSE_COIL_Q>    =                                                         HVAC1  279
c     <CW_COIL_GPM>   =                                                         HVAC1  280
c     <CW_COIL_Q>     =                                                         HVAC1  281
      return                                                                    FNSYS1 145
      end                                                                       FNSYS1 146
      SUBROUTINE FRMSYS(DBIN0,WIN0,WBIN0)                                       FRMSYS   2
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
C                                                                               FRMSYS   6
      IF (<OA-FROM-SYSTEM> .GT. 0) THEN                                         FRMSYS   7
          NSPSV = NSP                                                           FRMSYS   8
          NSP = <OA-FROM-SYSTEM>                                                FRMSYS   9
          DBIN0 = <PASTTR>                                                      FRMSYS  10
          WIN0 = <PASTWR>                                                       FRMSYS  11
          WBIN0 = WBFS(DBIN0,WIN0,PATM)                                         FRMSYS  12
          NSP = NSPSV                                                           FRMSYS  13
      ELSE                                                                      FRMSYS  14
          DBIN0 = DBT                                                           FRMSYS  15
          WIN0 = HUMRAT                                                         FRMSYS  16
          WBIN0 = WBT                                                           FRMSYS  17
      END IF                                                                    FRMSYS  18
      RETURN                                                                    FRMSYS  19
      END                                                                       FRMSYS  20
      FUNCTION FTDEV(QNOW,TNOW)                                                 FTDEV    2
C                                                                               FTDEV    3
C              CALCULATE THE TERM IN THE EQUATION RELATING EXTRACTION           FTDEV    4
C              RATE AND ZONE TEMPERATURE                                        FTDEV    5
C                                                                               FTDEV    6
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      common  /FNSYS/  ISKIPS, MSYSF(120)                                       /FNSYS/  2
      COMMON  /FZZZ1/   CAPXXX, CORINX, CWIDTX, ERMNXX, ERMXXX, FTDEVX          /FZZZ1/  2
     1                , FXXXXX, HEIGHX, HEXXXX, HPCAPX, HPKWXX, IFLGXX          /FZZZ1/  3
     2, IFUELX, ISHXXX, LSR2XX, LSR3XX, PATMXX, PLRXXX, PLSXXX, POMXXX          /FZZZ1/  4
     3, QHFXXX, QMULTX, QNOWXX, SLOADX, TAPPXX, TGINXX, TLOADX, TNOWXX          /FZZZ1/  5
     4, TSETXX, TWOUTX, UCHANX, ICALLX                                          /FZZZ1/  6
      REAL              LSR2XX, LSR3XX                                          /FZZZ1/  7
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      COMMON  /SYSTD / TH,TC,TM,TR,QH,QC,QHZ,QCZ,QHB,QHP,QHUM,                  /SYSTD/  2
     1                 QDHUM,TCMIN,THMAX,QLSUM,QPSUM,CFM,CFMH,CFMC,             /SYSTD/  3
     2                 RCFM,ECFM,CINF,FON,HON,CON,BON,SCONS(3),PH,PC,           /SYSTD/  4
     3                 SKW,FANKW,unused1,WR,WM,WCOIL,WW,PO,D,                   -046f    1
     4                 FTEMP,TCR,QHR,RfanPumpKW,SGAS,SKWQH,SKWQC,QCLAT,         -131    23
     5                 SFKW,RFKW,FONNGT,WSURF,RWalkinQ,TSURF,TRh,               -131    24
     6                 CBF,CBF1,CBF2,EON,PLRCFM,PLRC,PLRH,QCM1,                 /SYSTD/  8
     7                 QCM2,QHM1,EIRM1,EIRM2,EIR,OFKW,QCT,QCS,                  /SYSTD/  9
     8                 WRMAX,WRMIN,CFMRAT,QdistG,QdistL,RON,QHT,                /SYSTD/ 10
     9                 TPOMIN,POMIN,QHSUP,QRSENS,QRLAT,QRREC,QRREJ,             /SYSTD/ 11
     1                 RCOMKW,RDEFKW,RAUXKW,ECFMP,CFMIN,CINFP,DT,DW,            /SYSTD/ 12
     2                 EWB,IC,NATTSP,Q,RETR,SLOAD,QLSUMP,T,TCHUM,TEND,          /SYSTD/ 13
     3                 TS,hgbmin,HPDefE,EconoOnly,TDuctEnv,                     -044e1   1
     4                 QCUNMT,CapRh,CapRph,CapRc                                HVAC25   3
      REAL             SYSTD(113)                                               HVAC19  13
      EQUIVALENCE      (SYSTD(1),TH)                                            RemPA   65
C$$                                                                             FTDEV   12
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                 IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                        /FILES/  3
     2               , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                   /FILES/  4
     3                 IHRREP(3), IHRPAS(2)                                     /FILES/  5
      COMMON  /TROMWL/ SUMDTX,SUMDTY,QCTOT,QLC0,QGK0,QCGUES,QVNTBG,             /TROMWL/ 2
     1                 VOLVNT,AMF,UCHAN,UCHANC,HRGW,TAIRIN,TZONE,               /TROMWL/ 3
     2                 TGOUT,QCVG,QCVW,IVMODE,TFO,RHO,MWH,FILMU,MRX,CTRM        /TROMWL/ 4
     1    , TAVR, TGLASS, TUNDER, UNIN1                                         /TROMWL/ 5
      COMMON  /ZONED / EXCFM,FH,FC,CFMZ,QHBZ,QOVER,THZ,TCZ,ERMAX,ERMIN,         /ZONED/  2
     1                 TRY,FTD,CORINT,G0,G1,G2,G3,SIGMAG,TL,ZQHR,TAVE,          /ZONED/  3
     2                 ZQH,ZQC,FCHPS(15),ACFM,ZKW,TCMINZ,THMAXZ,                /ZONED/  4
     3                 ERMAXM,ERMINM,THR,CSSCND,CSSVEC,HENOW,QGWIN,             /ZONED/  5
     4                 QSNABT,QGOPWL,QGVEC,CFMCVT,SSFPT,CFMVNT,ZFANKW,          /ZONED/  6
     5                 ZKWCBT,ZKWHBT,ZCapRbbrd, XC,ZC,XH,ZH                     -044e2   7
      REAL ZONED(63)                                                            -044e2   8
      EQUIVALENCE (ZONED(1),EXCFM)                                              /ZONED/  9
      JJ = 1                                                                    FTDEV   16
      F = <TLOADS>*SIGMAG                                                       XFC2   203
     &  +        (<QS>      + <QPNOW>             - QHBZ)                       XFC2   204
     &  + <P1> * (<QSPAST>  + <QPPAST>  - QNOW    - <QBPAST>                    XFC2   205
     &                                            - <zn;QMechLossPast>)         XFC2   206
     &  -  G1  * TNOW                                                           XFC2   207
     &  + <P2> * (<QSPAST2> + <QPPAST2> - <QPAST> - <QBPAST2>                   XFC2   208
     &                                            - <zn;QMechLossPas2>)         XFC2   209
     &  -  G2  * <TPAST>                                                        XFC2   210
      F = F - G3*<TPAST2>                                                       FTDEV   24
      F = F + <FCOR>*CORINT + CTRM                                              FTDEV   25
      FTDEV = F                                                                 FTDEV   26
      IF( MSYSF(36) .EQ. 0 )    RETURN                                          FTDEV   27
C********************** run function : FTDEV-1 *************************        FTDEV   28
          FTDEVX = F                                                            FTDEV   29
          QNOWXX = QNOW                                                         FTDEV   30
          TNOWXX = TNOW                                                         FTDEV   31
           CALL  FINTS( MSYSF(36), 0. )                                         FTDEV   32
          FTDEV = FTDEVX                                                        FTDEV   33
C*******************************************************************            FTDEV   34
      RETURN                                                                    FTDEV   35
      END                                                                       FTDEV   36
      SUBROUTINE FURNAC(QHF,CAP,IFUEL,QMULT)                                    FURNAC   2
C                                                                               FURNAC   3
C                            THIS ROUTINE SIMULATES THE PERFORMANCE             FURNAC   4
C                            OF A GAS OR OIL FURNACE                            FURNAC   5
C                                                                               FURNAC   6
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON  /ENDUSE/ SUPPKW, HEATKW                                           HVAC27   1
      common  /FNSYS/  ISKIPS, MSYSF(120)                                       /FNSYS/  2
      COMMON  /FZZZ1/   CAPXXX, CORINX, CWIDTX, ERMNXX, ERMXXX, FTDEVX          /FZZZ1/  2
     1                , FXXXXX, HEIGHX, HEXXXX, HPCAPX, HPKWXX, IFLGXX          /FZZZ1/  3
     2, IFUELX, ISHXXX, LSR2XX, LSR3XX, PATMXX, PLRXXX, PLSXXX, POMXXX          /FZZZ1/  4
     3, QHFXXX, QMULTX, QNOWXX, SLOADX, TAPPXX, TGINXX, TLOADX, TNOWXX          /FZZZ1/  5
     4, TSETXX, TWOUTX, UCHANX, ICALLX                                          /FZZZ1/  6
      REAL              LSR2XX, LSR3XX                                          /FZZZ1/  7
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      COMMON  /MISCD / TEMPS(4,9999),CONS(5),TEMPSL(9999),                      -048a   10
     1                 BLDGQH,BLDGQC,BLDGQL,BLDGP,BPMULT,                       /MISCD/  3
     $                 DBTMIN,DBTMAX,WMIN,WMAX,NSPZ(9999),                      -048a   11
     3                 DQ, DTP, DTR, DTS, FPI, PLRCC , POM, TC2, TDM,           /MISCD/  5
     4                 TRA,WCOL,WCOLM,WMM,YPI,KWBTU,BTUKW,UNFILD,Unusedm        RemPA   45
      REAL             KWBTU                                                    /MISCD/  7
      COMMON  /SYSTD / TH,TC,TM,TR,QH,QC,QHZ,QCZ,QHB,QHP,QHUM,                  /SYSTD/  2
     1                 QDHUM,TCMIN,THMAX,QLSUM,QPSUM,CFM,CFMH,CFMC,             /SYSTD/  3
     2                 RCFM,ECFM,CINF,FON,HON,CON,BON,SCONS(3),PH,PC,           /SYSTD/  4
     3                 SKW,FANKW,unused1,WR,WM,WCOIL,WW,PO,D,                   -046f    1
     4                 FTEMP,TCR,QHR,RfanPumpKW,SGAS,SKWQH,SKWQC,QCLAT,         -131    23
     5                 SFKW,RFKW,FONNGT,WSURF,RWalkinQ,TSURF,TRh,               -131    24
     6                 CBF,CBF1,CBF2,EON,PLRCFM,PLRC,PLRH,QCM1,                 /SYSTD/  8
     7                 QCM2,QHM1,EIRM1,EIRM2,EIR,OFKW,QCT,QCS,                  /SYSTD/  9
     8                 WRMAX,WRMIN,CFMRAT,QdistG,QdistL,RON,QHT,                /SYSTD/ 10
     9                 TPOMIN,POMIN,QHSUP,QRSENS,QRLAT,QRREC,QRREJ,             /SYSTD/ 11
     1                 RCOMKW,RDEFKW,RAUXKW,ECFMP,CFMIN,CINFP,DT,DW,            /SYSTD/ 12
     2                 EWB,IC,NATTSP,Q,RETR,SLOAD,QLSUMP,T,TCHUM,TEND,          /SYSTD/ 13
     3                 TS,hgbmin,HPDefE,EconoOnly,TDuctEnv,                     -044e1   1
     4                 QCUNMT,CapRh,CapRph,CapRc                                HVAC25   3
      REAL             SYSTD(113)                                               HVAC19  13
      EQUIVALENCE      (SYSTD(1),TH)                                            RemPA   65
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
      COMMON /SHP   / QCRUN,QCLOAD,QCGAS,QCAUX,QCGSLD,QCGSUP,                   /SHP/    2
     1                QCWAS,QCWASU,QCGSAV,QCFAN,                                /SHP/    3
     2                QHRUN,QHLOAD,QHGAS,QHAUX,QHGSLD,QHGSUP,                   /SHP/    4
     3                QHWAS,QHWASU,QHGDFR,QHFAN,          CUR(25),              /SHP/    5
     4                GSAV1,GASV2,PCH,ISZCZ,GCAP(2),GEDB,QHDFRG,                -044c1   1
     5                GRPM,PLRSUP,CFMCYC,CLPLR,CFMVVT,QHZHP,PCCEDB,             /SHP/    7
     6                IHPREP,IHPOUT,IHPHRR,IHPHRN,IRST,IREN                     /SHP/    8
      COMMON /SHPZ  / QCRUNZ,QCLOADZ,QCGASZ,QCAUXZ,QCGSLDZ,QCGSUPZ,             /SHP/    9
     1                QCWASZ,QCWASUZ,QCGSAVZ,QCFANZ,                            /SHP/   10
     2                QHRUNZ,QHLOADZ,QHGASZ,QHAUXZ,QHGSLDZ,QHGSUPZ,             /SHP/   11
     3                QHWASZ,QHWASUZ,QHGDFRZ,QHFANZ                             /SHP/   12
      DIMENSION       SHP(60),SHPZ(20)                                          /SHP/   13
      EQUIVALENCE     (SHP,QCRUN),(SHPZ,QCRUNZ)                                 /SHP/   14
     1               ,(DFM1,CUR(18)),(DFM2,CUR(19)),(DFM3,CUR(20))              /SHP/   15
      COMMON /FFUEL/ FFUEL, FurnAuxFuel, FurnAuxkW, PLRF                        /FFUEL/  2
c                                                                               Bug40   12
      LOGICAL NoCapacity                                                        Bug40   13
c                                                                               Bug40   14
      FFUEL       = 0.0                                                         HVAC6  204
      FurnAuxFuel = 0.0                                                         HVAC6  205
      FurnAuxkW   = 0.0                                                         HVAC6  206
      PLRF        = 0.0                                                         HVAC6  207
      NoCapacity = .FALSE.                                                      -042k5   1
      IF (QHF .GT. -10.0)  GOTO 10                                              -042k5   2
      IF (CAP .GT. -10.0)  THEN                                                 -042k5   3
c              when no capacity defined, assume 50% loaded                      -042k5   4
        NoCapacity = .TRUE.                                                     -042k5   5
        CAP        = QHF * 2.                                                   -042k5   6
      ENDIF                                                                     -042k5   7
C              ADDED LOAD DUE TO LOSS WHEN FURNACE IS OFF                       FURNAC  20
      QHLOSS = 0.0                                                              FURNAC  21
      IF(<FURNACE-OFF-LOSS> .NE. 0)                                             FURNAC  22
     1QHLOSS =  AMIN1(0.0,CAP-QHF)*CVAL(<FURNACE-OFF-LOSS>,DBT,DBT)             FURNAC  23
      PLRF   = (QHF+QHLOSS)/CAP                                                 FURNAC  24
C              FUEL USED WHEN FURNACE IS ON                                     FURNAC  25
      FFUEL  = CAP*<FURNACE-HIR>*CVAL(<FURNACE-HIR-FPLR>,PLRF,PLRF)             FURNAC  26
C              ADD TO CORRECT FUEL TYPE                                         FURNAC  27
C              END-USE VARIABLES                                                FURNAC  28
      FurnAuxFuel = <FURNACE-AUX>*(1.0-PLRF)                                    HVAC6  208
      SGAS        = SGAS + (FurnAuxFuel-FFUEL)*QMULT                            HVAC6  209
      FurnAuxkW   = <FURNACE-AUX-KW>*PLRF                                       HVAC6  210
      IF(IHPREP.NE.0) THEN                                                      HVAC6  211
         QHAUX = QHAUX + (FurnAuxFuel+FurnAuxkW*BTUKW)*QMULT                    HVAC6  212
      ENDIF                                                                     HVAC6  213
      <SKW> = <SKW> + FurnAuxkW*QMULT                                           HVAC6  214
      SKWQH = SKWQH + FurnAuxkW*QMULT                                           HVAC6  215
      GOTO 400                                                                  HVAC6  216
   10 FurnAuxFuel = <FURNACE-AUX>                                               Bug40   23
      SGAS        = SGAS + FurnAuxFuel*QMULT                                    Bug40   24
      IF(IHPREP.NE.0)  QHAUX = QHAUX + FurnAuxFuel*QMULT                        Bug40   25
  400 CONTINUE                                                                  HVAC6  224
      IF( MSYSF(37) .EQ. 0 )   GOTO 500                                         HVAC6  225
C********************** run function : FURNAC-1 ************************        FURNAC  50
          QHFXXX = QHF                                                          FURNAC  51
          CAPXXX = CAP                                                          FURNAC  52
          IFUELX = IFUEL                                                        FURNAC  53
          QMULTX = QMULT                                                        FURNAC  54
           CALL  FINTS( MSYSF(37), 0. )                                         FURNAC  55
C*******************************************************************            FURNAC  56
  500 FFUEL       = FFUEL       * QMULT                                         HVAC6  226
      FurnAuxFuel = FurnAuxFuel * QMULT                                         HVAC6  227
      FurnAuxkW   = FurnAuxkW   * QMULT                                         HVAC6  228
      IF (NoCapacity)  CAP = 0.                                                 Bug40   26
      RETURN                                                                    FURNAC  57
      END                                                                       FURNAC  58
      SUBROUTINE GHPPWR(HPLOAD,MAT,MATW,CFMINP,IMODE)                           GHPPWR   2
C                                                                               GHPPWR   3
C                                                                               GHPPWR   4
C     THIS ROUTINE CALCULATES THE ENERGY CONSUMPTION OF THE GAS HEAT PUMP       GHPPWR   5
C     FOR A SPECIFIC SET OF LOAD AND ENVIRONMENTAL CONDITIONS                   GHPPWR   6
C                                                                               GHPPWR   7
C     INPUTS ARE:                                                               GHPPWR   8
C        LOAD (NEGATIVE INDICATES HEATING)   (HPLOAD)                           GHPPWR   9
C        MIXED AIR DRY-BULB TEMPERATURE      (MAT)                              GHPPWR  10
C        MIXED AIR WET-BULB TEMPERATURE      (MATW)                             GHPPWR  11
C        COOL/HEAT MODE  (1/2)               (IMODE)                            GHPPWR  12
C                                                                               GHPPWR  13
C     OUTPUTS ARE:                                                              GHPPWR  14
C        GHP ENGINE RPM                      (GRPM)                             GHPPWR  15
C        FUEL CONSUMPTION                    (QCGAS,QHGAS)                      GHPPWR  16
C        PARASITIC ELECTRICAL CONSUMPTION    (QCAUX,QHAUX)                      GHPPWR  17
C                                                                               GHPPWR  18
      COMMON /SHP   / QCRUN,QCLOAD,QCGAS,QCAUX,QCGSLD,QCGSUP,                   /SHP/    2
     1                QCWAS,QCWASU,QCGSAV,QCFAN,                                /SHP/    3
     2                QHRUN,QHLOAD,QHGAS,QHAUX,QHGSLD,QHGSUP,                   /SHP/    4
     3                QHWAS,QHWASU,QHGDFR,QHFAN,          CUR(25),              /SHP/    5
     4                GSAV1,GASV2,PCH,ISZCZ,GCAP(2),GEDB,QHDFRG,                -044c1   1
     5                GRPM,PLRSUP,CFMCYC,CLPLR,CFMVVT,QHZHP,PCCEDB,             /SHP/    7
     6                IHPREP,IHPOUT,IHPHRR,IHPHRN,IRST,IREN                     /SHP/    8
      COMMON /SHPZ  / QCRUNZ,QCLOADZ,QCGASZ,QCAUXZ,QCGSLDZ,QCGSUPZ,             /SHP/    9
     1                QCWASZ,QCWASUZ,QCGSAVZ,QCFANZ,                            /SHP/   10
     2                QHRUNZ,QHLOADZ,QHGASZ,QHAUXZ,QHGSLDZ,QHGSUPZ,             /SHP/   11
     3                QHWASZ,QHWASUZ,QHGDFRZ,QHFANZ                             /SHP/   12
      DIMENSION       SHP(60),SHPZ(20)                                          /SHP/   13
      EQUIVALENCE     (SHP,QCRUN),(SHPZ,QCRUNZ)                                 /SHP/   14
     1               ,(DFM1,CUR(18)),(DFM2,CUR(19)),(DFM3,CUR(20))              /SHP/   15
      COMMON  /SYSTD / TH,TC,TM,TR,QH,QC,QHZ,QCZ,QHB,QHP,QHUM,                  /SYSTD/  2
     1                 QDHUM,TCMIN,THMAX,QLSUM,QPSUM,CFM,CFMH,CFMC,             /SYSTD/  3
     2                 RCFM,ECFM,CINF,FON,HON,CON,BON,SCONS(3),PH,PC,           /SYSTD/  4
     3                 SKW,FANKW,unused1,WR,WM,WCOIL,WW,PO,D,                   -046f    1
     4                 FTEMP,TCR,QHR,RfanPumpKW,SGAS,SKWQH,SKWQC,QCLAT,         -131    23
     5                 SFKW,RFKW,FONNGT,WSURF,RWalkinQ,TSURF,TRh,               -131    24
     6                 CBF,CBF1,CBF2,EON,PLRCFM,PLRC,PLRH,QCM1,                 /SYSTD/  8
     7                 QCM2,QHM1,EIRM1,EIRM2,EIR,OFKW,QCT,QCS,                  /SYSTD/  9
     8                 WRMAX,WRMIN,CFMRAT,QdistG,QdistL,RON,QHT,                /SYSTD/ 10
     9                 TPOMIN,POMIN,QHSUP,QRSENS,QRLAT,QRREC,QRREJ,             /SYSTD/ 11
     1                 RCOMKW,RDEFKW,RAUXKW,ECFMP,CFMIN,CINFP,DT,DW,            /SYSTD/ 12
     2                 EWB,IC,NATTSP,Q,RETR,SLOAD,QLSUMP,T,TCHUM,TEND,          /SYSTD/ 13
     3                 TS,hgbmin,HPDefE,EconoOnly,TDuctEnv,                     -044e1   1
     4                 QCUNMT,CapRh,CapRph,CapRc                                HVAC25   3
      REAL             SYSTD(113)                                               HVAC19  13
      EQUIVALENCE      (SYSTD(1),TH)                                            RemPA   65
C              SYSTEM LEVEL VARIABLES FOR DESICCANT SYSTEMS, BOTH TOTAL         /DSYSTD/ 2
C              AND INTEGRATED                                                   /DSYSTD/ 3
      COMMON  /DSYSTD/  SCGAS, QREG, WBR, WB8, T8, W8, WB9, T9, W9, EFF,        /DSYSTD/ 4
     1                  DTON, DMODE(7), ERMAX4, ERMAX5, ERMAX6, OPMODE,         /DSYSTD/ 5
     2                  DBOA,WOA,DGAS,DKW,TCONDd,QCDTOT,QCDS,QCDL,              /DSYSTD/ 6
     3                  POA,DFANKW,RFANKW,DMOTKW,EVKW,QCEVT,QCEVS,              /DSYSTD/ 7
     4                  QCEVL,TCMNEV                                            /DSYSTD/ 8
      REAL DSYSTD(39)                                                           /DSYSTD/ 9
      EQUIVALENCE (DSYSTD(1), SCGAS)                                            /DSYSTD/10
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
      COMMON  /TIME  / IDOY, IYR, IMO, IDAY, IHR,                               Time     4
     &                 ISCMO, ISCDAY, ISCHR, IDOW, ISCDOW, iDSdates(6),         -044e5   1
     &                 iTimeFlg, iDSFlg, iDDFlg, InitialFlg, LeapYr,            Time     6
     &                 CLOCK(10), MONDSC(13), MONLEN(12), MONSDA(12)            HR      12
      COMMON /SSPDAT/  PLRCS,QCCKWS,QCCMPS,PLRHS,QHCKWS,QHCMPS                  /SSPDAT/ 2
     $                ,PLRFS,PLRFCS,PLRFHS,sspss                                /SSPDAT/ 3
     $                ,PLRCZ,QCCKWZ,QCCMPZ,PLRHZ,QHCKWZ,QHCMPZ                  /SSPDAT/ 4
     $                ,PLRFZ,PLRFCZ,PLRFHZ,sspsz                                /SSPDAT/ 5
     $                ,ISSPF,IWCCF,IPCCF,SSPSAV                                 /SSPDAT/ 6
      DIMENSION        SSPD(24)                                                 JJHfix   1
      EQUIVALENCE      (SSPD(1),PLRCS)                                          /SSPDAT/ 8
      COMMON  /ENDUSE/ SUPPKW, HEATKW                                           HVAC27   1
      COMMON  /MISCD / TEMPS(4,9999),CONS(5),TEMPSL(9999),                      -048a   10
     1                 BLDGQH,BLDGQC,BLDGQL,BLDGP,BPMULT,                       /MISCD/  3
     $                 DBTMIN,DBTMAX,WMIN,WMAX,NSPZ(9999),                      -048a   11
     3                 DQ, DTP, DTR, DTS, FPI, PLRCC , POM, TC2, TDM,           /MISCD/  5
     4                 TRA,WCOL,WCOLM,WMM,YPI,KWBTU,BTUKW,UNFILD,Unusedm        RemPA   45
      REAL             KWBTU                                                    /MISCD/  7
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      COMMON /RSVVTD/ CONFRC,HONFRC,NOWFRC,THMXNS                               /RSVVTD/ 2
      REAL NOWFRC                                                               /RSVVTD/ 3
      REAL*4 HPLOAD,LOAD,MAT,MATW,HCAPWH(2),DCAP(2),RPM(2)                      GHPPWR  30
C            Intialize on time (for cycling) and cycle loss                     GHPPWR  31
      PCTON  = 1.0                                                              GHPPWR  32
      CLPLR  = 1.0                                                              GHPPWR  33
C            SET UNIT SIZE BASED ON HEAT OR COOL CAPACITY                       GHPPWR  34
      EDB    = DBT                                                              GHPPWR  35
      IF(IPCCF .EQ. 1)  EDB = PCCEDB                                            GHPPWR  36
      IF(ICODE .eq. 22)  THEN                                                   GHPPWR  37
        SIZE   = <COOLCAPZ>                                                     GHPPWR  38
        CSIZE  = <COOLCAPZ>                                                     GHPPWR  39
        SHSIZE = <COOLSHZ>                                                      GHPPWR  40
        SMULT  = <MULTIPLIER>                                                   GHPPWR  41
        CFMS   = <CFMAX>                                                        GHPPWR  42
        IF(IMODE .eq. 2)  THEN                                                  GHPPWR  43
          SIZE   = -<HEATCAPZ>                                                  GHPPWR  44
        ENDIF                                                                   GHPPWR  45
      ELSE                                                                      GHPPWR  46
        SIZE   = <COOLING-CAPACITY>                                             GHPPWR  47
        CSIZE  = SIZE                                                           GHPPWR  48
        SHSIZE = <COOL-SH-CAP>                                                  GHPPWR  49
        SMULT  = 1.0                                                            GHPPWR  50
        CFMS   = <SUPPLY-CFM>                                                   GHPPWR  51
        IF(IMODE .eq. 2)  THEN                                                  GHPPWR  52
          SIZE   = -<HEATING-CAPACITY>                                          GHPPWR  53
        ENDIF                                                                   GHPPWR  54
      ENDIF                                                                     GHPPWR  55
      GEDB = MAT                                                                GHPPWR  56
      RPM(1) = 1.0                                                              GHPPWR  57
C                SAVE INPUT LOAD                                                GHPPWR  58
      LOAD= HPLOAD                                                              GHPPWR  59
c                                                                               DWRECV  27
c              Jump to correct mode                                             DWRECV  28
      SELECT CASE (IMODE)                                                       DWRECV  29
c                                                                               DWRECV  30
c============= COOLING MODE==================================================== DWRECV  31
      CASE (1)                                                                  DWRECV  32
C                                                                               GHPPWR  63
C                CALCULATE CAPACITY FOR THE GIVEN CONDITIONS AT DIF RPM's       GHPPWR  64
        IF(HPLOAD .LE. 1.0)  GOTO 250                                           GHPPWR  65
        RPM(2) = (<COOL-RPM-LIMIT2>/<COOL-RPM-LIMIT1>)                          GHPPWR  66
C                  Pick up high and low RPM capacities                          GHPPWR  67
        QCM1   = CVAL(<COOL-CAP-FT>,MATW,EDB)                                   GHPPWR  68
        CUR(21) = CVAL(<COOL-CAP-FRPM>,RPM(1),EDB)                              GHPPWR  69
        GCAP(1) = QCM1*CUR(21)*SIZE                                             GHPPWR  70
        CUR(21) = CVAL(<COOL-CAP-FRPM>,RPM(2),EDB)                              GHPPWR  71
        GCAP(2) = QCM1*CUR(21)*SIZE                                             GHPPWR  72
C                CALCULATE THE RPM REQ'D TO MEET CURRENT LOAD                   GHPPWR  73
        QCT = GCAP(1)                                                           GHPPWR  74
        PLRC= LOAD/(QCT+1.)                                                     GHPPWR  75
C              Get RPM from PLR and DBT                                         GHPPWR  76
        IF(LOAD .LE. GCAP(2))  THEN                                             GHPPWR  77
          GRPM = RPM(2)                                                         GHPPWR  78
        ELSEIF(LOAD .GE. GCAP(1))  THEN                                         GHPPWR  79
          GRPM = RPM(1)                                                         GHPPWR  80
        ELSE                                                                    GHPPWR  81
          Jcv = <COOL-CAP-FRPM>                                                 -045b   69
          Y   = EDB                                                             -045b   70
          Z   = PLRC                                                            -045b   71
          CALL CURINV(<cv:COEF-1>,<cv:TYPE>, 1,GRPM,Y,Z, RPM(1),IERR)           -045b   72
          GRPM = AMIN1(AMAX1(GRPM,RPM(2)),RPM(1))                               GHPPWR  86
        ENDIF                                                                   GHPPWR  87
        EIRM1 = CVAL(<COOL-EIR-FT>,MATW,EDB)                                    GHPPWR  88
        CUR(4) = CVAL(<COOL-EIR-FRPM>,GRPM,EDB)                                 GHPPWR  89
        EIR   = EIRM1*CUR(4)*<COOLING-EIR>                                      GHPPWR  90
        CUR(6) = CVAL(<COOL-WH-FT>,MATW,EDB)                                    GHPPWR  91
        CUR(7) = CVAL(<COOL-WH-FRPM>,GRPM,EDB)                                  GHPPWR  92
        QCGASZ= EIR*QCT                                                         GHPPWR  93
        QCWASZ= QCGASZ                                                          GHPPWR  94
     1             *<COOL-WASTE-HEAT>*CUR(6)*CUR(7)                             GHPPWR  95
C                IF LOAD IS LESS THAN CAPACITY AT LOW RPM, THEN THE UNIT CYCLES.GHPPWR  96
        IF (LOAD .LT. GCAP(2))  THEN                                            GHPPWR  97
          CLPLR= LOAD/(GCAP(2)+1.)                                              GHPPWR  98
          IF (CLPLR .lt. 1.) THEN  ! cycling                                    -048u    1
            VAL     = Max(CLPLR,<COOL-CLOSS-MIN>)                               -048u    2
            CUR(17) = CVAL(<COOL-CLOSS-FPLR>,VAL,VAL)                           -048u    3
            PCTON   = CLPLR / Max(CUR(17),0.001)                                -048u    4
          ELSE  ! not cycling                                                   -048u    5
            CUR(17) = 1.                                                        -048u    6
            PCTON   = 1.                                                        -048u    7
          ENDIF                                                                 -048u    8
          QCGASZ= QCGASZ *PCTON                                                 GHPPWR 102
          QCWASZ= QCWASZ *PCTON                                                 GHPPWR 103
        ENDIF                                                                   GHPPWR 104
        QCRUNZ = PCTON                                                          GHPPWR 105
C              ADJUST FOR FRAC HOUR COOLING (RESVVT SYSTEM)                     GHPPWR 106
        QCRUNZ = QCRUNZ*NOWFRC                                                  GHPPWR 107
        QCGASZ = QCGASZ*NOWFRC                                                  GHPPWR 108
        QCWASZ = QCWASZ*NOWFRC                                                  GHPPWR 109
C                IF LOAD GREATER THAN CAPACITY AT HIGH RPM, LOAD NOT MET.       GHPPWR 110
        IF (LOAD .GT. GCAP(1))  THEN                                            GHPPWR 111
          QCGSLDZ= LOAD -GCAP(1)                                                GHPPWR 112
          LOAD  = GCAP(1)                                                       GHPPWR 113
        ENDIF                                                                   GHPPWR 114
C                COLLECT SUMMARY DATA                                           GHPPWR 115
        OFKW   = 0.0                                                            GHPPWR 116
        IF(DBT .ge. <OUTSIDE-FAN-T>)  THEN                                      GHPPWR 117
          OFKW   = <OUTSIDE-FAN-ELEC>*CSIZE*0.001                               GHPPWR 118
          IF(<OUTSIDE-FAN-CFLT>.ne.0) THEN                                      GHPPWR 119
            CUR( 9)= CVAL(<OUTSIDE-FAN-CFLT>,PLRC,EDB)                          GHPPWR 120
            OFKW   = OFKW*CUR(9)                                                GHPPWR 121
          ENDIF                                                                 GHPPWR 122
          IF(IPCCF .EQ. 1)  THEN                                                GHPPWR 123
            OFKW   = OFKW + <EVAP-PCC-ELEC>*CSIZE*0.001                         GHPPWR 124
          ENDIF                                                                 GHPPWR 125
          IF(<OUTSIDE-FAN-MODE>.eq.1)                                           GHPPWR 126
     $      OFKW   = OFKW*Min(1.,PCTON)                                         -048u    9
          OFKW = OFKW*NOWFRC                                                    GHPPWR 128
          JEM        = <HTREJ-E-MS>                                             HVAC6  229
          <HTREJ-EM> = <HTREJ-EM> + OFKW                                        HVAC6  230
        ENDIF                                                                   GHPPWR 130
        X = <UNIT-PUMP-ELEC>*CSIZE*0.001*Min(1.,PCTON)*NOWFRC                   -048u   10
     1      + <UNIT-AUX-KW>*NOWFRC + OFKW                                       GHPPWR 132
        QCAUXZ = X*BTUKW                                                        GHPPWR 133
        SKWQC  = SKWQC  + X                                                     GHPPWR 134
        <SKW>  = <SKW>  + X                                                     GHPPWR 135
        JEM       = <AUX-E-MS>                                                  HVAC6  231
        <AUX-EM>  = <AUX-EM>  + (X - OFKW)                                      HVAC6  232
        JFM       = <COOL-F-MS>                                                 HVAC6  233
        <COOL-FM> = <COOL-FM> + QCGASZ                                          HVAC6  234
        SCGAS  = SCGAS + QCGASZ                                                 GHPPWR 138
        QCLOADZ= LOAD*NOWFRC                                                    GHPPWR 139
        QCWASZ = -QCWASZ                                                        GHPPWR 140
        IF( ISSPF .EQ. 1)  THEN                                                 GHPPWR 141
          PLRCS  = PLRC                                                         GHPPWR 142
          QCCMPS = LOAD*NOWFRC                                                  GHPPWR 143
        ENDIF                                                                   GHPPWR 144
        GRPM  = GRPM*<COOL-RPM-LIMIT1>                                          GHPPWR 145
        IF( ICODE .eq. 22)  THEN                                                GHPPWR 146
          DO II=1,10                                                            GHPPWR 147
            IF(SHPZ(II) .ne. 0.0)  SHP(II) = SHP(II) + SHPZ(II)*SMULT           GHPPWR 148
          ENDDO                                                                 GHPPWR 149
        ELSE                                                                    GHPPWR 150
          DO II=1,10                                                            GHPPWR 151
            SHP(II) = SHPZ(II)                                                  GHPPWR 152
          ENDDO                                                                 GHPPWR 153
        ENDIF                                                                   GHPPWR 154
C                ELSE WE ARE DOING HEATING.                                     GHPPWR 155
 250    CONTINUE                                                                GHPPWR 156
c                                                                               DWRECV  33
c============= HEATING MODE =================================================== DWRECV  34
      CASE (2)                                                                  DWRECV  35
C                CONVERT HEATING LOAD TO A POSITIVE VALUE.                      GHPPWR 161
        LOAD= ABS(LOAD)                                                         GHPPWR 162
C             If no main heating load just pass other loads to supp src or skip GHPPWR 163
        IF(LOAD .LT. 1.)  THEN                                                  GHPPWR 164
          IF(QHZHP .LT. -1.)  THEN                                              GHPPWR 165
            QHGSLDZ = QHZHP                                                     GHPPWR 166
            GOTO 350                                                            GHPPWR 167
          ELSE                                                                  GHPPWR 168
            GOTO 400                                                            GHPPWR 169
          ENDIF                                                                 GHPPWR 170
        ENDIF                                                                   GHPPWR 171
C             If GHP off or cooling just pass other loads to supp src           GHPPWR 172
        IF((DBT.LT.<MIN-HP-T>).OR.(QCRUNZ.GT.0.0))  THEN                        GHPPWR 173
          QHGSLDZ = QHZHP - LOAD                                                GHPPWR 174
          GOTO 350                                                              GHPPWR 175
        ENDIF                                                                   GHPPWR 176
C                CALCULATE CAPACITY FOR THE GIVEN CONDITIONS AT DIF RPM's       GHPPWR 177
        DFM1 = 0.0                                                              GHPPWR 178
        DFM2   = 0.                                                             GHPPWR 179
        DFM3   = 0.                                                             GHPPWR 180
        IF((DBT.LE.<DEFROST-T>).AND.(<DEFROST-FRAC-FT>.NE.0))                   GHPPWR 181
     1    DFM1 = CVAL(<DEFROST-FRAC-FT>,WBT,DBT)                                GHPPWR 182
        RPM(2) = (<HEAT-RPM-LIMIT2>/<HEAT-RPM-LIMIT1>)                          GHPPWR 183
        DO II=1,2                                                               GHPPWR 184
          QHM1   = CVAL(<HEAT-CAP-FT>,MAT,DBT)                                  -131   219
          CUR(22) = CVAL(<HEAT-CAP-FRPM>,RPM(II),DBT)                           GHPPWR 186
          EIRM1  = CVAL(<HEAT-EIR-FT>,MAT,DBT)                                  -131   220
          CUR(12) = CVAL(<HEAT-WH-FT>,MAT,DBT)                                  DWRECV  36
          CUR(10) = CVAL(<HEAT-EIR-FRPM>,RPM(II),DBT)                           GHPPWR 189
          CUR(13) = CVAL(<HEAT-WH-FRPM>,RPM(II),DBT)                            GHPPWR 190
          GCAP(II) = QHM1*CUR(22)*SIZE                                          GHPPWR 191
          HCAPWH(II)= GCAP(II)*<HEATING-EIR>*EIRM1                              GHPPWR 192
     $            *CUR(10)*<HEAT-WASTE-HEAT>*CUR(12)*CUR(13)                    GHPPWR 193
          DCAP(II)  = QHM1*CUR(22)*SHSIZE                                       GHPPWR 194
          GCAP(II) = GCAP(II)*(1.0-DFM1)                                        GHPPWR 195
          IF(II .EQ. 1)  DFM3 = CUR(10)                                         GHPPWR 196
        ENDDO                                                                   GHPPWR 197
        QHGDFRZ = DCAP(1)*DFM1                                                  GHPPWR 198
        HLOAD = QHGDFRZ + LOAD                                                  GHPPWR 199
C                CALCULATE THE RPM REQ'D TO MEET CURRENT LOAD                   GHPPWR 200
        QHT  = -GCAP(1)                                                         GHPPWR 201
        PLRH = HLOAD/(GCAP(1)+1.)                                               GHPPWR 202
        DFM2    = PLRH                                                          GHPPWR 203
C              Get RPM from PLR and DBT                                         GHPPWR 204
        IF(HLOAD .LE. GCAP(2))  THEN                                            GHPPWR 205
          DFM2    = LOAD/(GCAP(2)+1.0)                                          GHPPWR 206
          QHGDFRZ = QHGDFRZ*DFM2                                                GHPPWR 207
          HLOAD   = LOAD + QHGDFRZ                                              GHPPWR 208
          PLRH    = HLOAD/(GCAP(1)+1.0)                                         GHPPWR 209
          GRPM    = RPM(2)                                                      GHPPWR 210
        ELSEIF(HLOAD .GE. GCAP(1))  THEN                                        GHPPWR 211
          GRPM = RPM(1)                                                         GHPPWR 212
        ELSE                                                                    GHPPWR 213
          Jcv = <HEAT-CAP-FRPM>                                                 -045b   73
          Y   = DBT                                                             -045b   74
          Z   = PLRH                                                            -045b   75
          CALL CURINV(<cv:COEF-1>,<cv:TYPE>, 1,GRPM,Y,Z, RPM(1),IERR)           -045b   76
          GRPM = AMIN1(AMAX1(GRPM,RPM(2)),RPM(1))                               GHPPWR 218
        ENDIF                                                                   GHPPWR 219
        EIRM1  = CVAL(<HEAT-EIR-FT>,MAT,DBT)                                    -131   221
        CUR(10) = CVAL(<HEAT-EIR-FRPM>,GRPM,DBT)                                GHPPWR 221
        EIRM2  = CUR(10)                                                        GHPPWR 222
        EIR    = EIRM1*EIRM2*<HEATING-EIR>                                      GHPPWR 223
        CUR(12) = CVAL(<HEAT-WH-FT>,MAT,DBT)                                    DWRECV  37
        CUR(13) = CVAL(<HEAT-WH-FRPM>,GRPM,DBT)                                 GHPPWR 225
C                Calc Defrost mode gas consumption and add to heating gas       GHPPWR 226
        DFM3   = EIRM1*EIRM2*<COOLING-EIR>                                      GHPPWR 227
        QHDFRG = DFM3*DCAP(1)*DFM2*DFM1                                         GHPPWR 228
        QHGASZ = EIR*(-QHT) + QHDFRG                                            GHPPWR 229
        QHWASZ  = QHGASZ                                                        GHPPWR 230
     $             *<HEAT-WASTE-HEAT>*CUR(12)*CUR(13)                           GHPPWR 231
        IF (HLOAD .LT. GCAP(2))  THEN                                           GHPPWR 232
          CLPLR = HLOAD/(GCAP(2)+1.)                                            GHPPWR 233
          IF (CLPLR .lt. 1.) THEN  ! cycling                                    -048u   11
            VAL     = Max(CLPLR,<HEAT-CLOSS-MIN>)                               -048u   12
            CUR(16) = CVAL(<HEAT-CLOSS-FPLR>,VAL,VAL)                           -048u   13
            PCTON   = CLPLR / Max(CUR(16),0.001)                                -048u   14
          ELSE  ! not cycling                                                   -048u   15
            CUR(16) = 1.                                                        -048u   16
            PCTON   = 1.                                                        -048u   17
          ENDIF                                                                 -048u   18
          QHGASZ= QHGASZ *PCTON                                                 GHPPWR 237
          QHWASZ= QHWASZ *PCTON                                                 GHPPWR 238
        ENDIF                                                                   GHPPWR 239
        QHRUNZ = PCTON                                                          GHPPWR 240
C              ADJUST FOR FRAC HOUR HEATING                                     GHPPWR 241
        QHRUNZ = QHRUNZ*NOWFRC                                                  GHPPWR 242
        QHGASZ = QHGASZ*NOWFRC                                                  GHPPWR 243
        QHWASZ = QHWASZ*NOWFRC                                                  GHPPWR 244
        QHDFRG = QHDFRG*NOWFRC                                                  GHPPWR 245
C                IF LOAD GREATER THAN CAPACITY AT HIGH RPM, LOAD NOT MET.       GHPPWR 250
        IF (HLOAD .GT. GCAP(1))  THEN                                           GHPPWR 251
          QHGSLDZ =  QHGSLDZ + (HLOAD -GCAP(1))                                 GHPPWR 252
        ENDIF                                                                   GHPPWR 253
C                                                                               GHPPWR 254
C                COLLECT SUMMARY DATA                                           GHPPWR 255
        OFKW   = 0.0                                                            GHPPWR 256
        IF(DBT .ge. <OUTSIDE-FAN-T>)  THEN                                      GHPPWR 257
          OFKW   = <OUTSIDE-FAN-ELEC>*CSIZE*0.001                               GHPPWR 258
          IF(<OUTSIDE-FAN-HFLT>.ne.0) THEN                                      GHPPWR 259
            CUR(15)= CVAL(<OUTSIDE-FAN-HFLT>,PLRH,DBT)                          GHPPWR 260
            OFKW   = OFKW*CUR(15)                                               GHPPWR 261
          ENDIF                                                                 GHPPWR 262
          IF(<OUTSIDE-FAN-MODE>.eq.1)                                           GHPPWR 263
     $      OFKW   = OFKW*Min(1.,PCTON)                                         -048u   19
          OFKW = OFKW*NOWFRC                                                    GHPPWR 265
          JEM        = <HTREJ-E-MS>                                             HVAC6  235
          <HTREJ-EM> = <HTREJ-EM> + OFKW                                        HVAC6  236
        ENDIF                                                                   GHPPWR 267
        X = <UNIT-PUMP-ELEC>*CSIZE*0.001*Min(1.,PCTON)*NOWFRC                   -048u   20
     1      + <UNIT-AUX-KW>*NOWFRC + OFKW                                       GHPPWR 269
        QHAUXZ = X*BTUKW                                                        GHPPWR 270
        SKWQH  = SKWQH  + X                                                     GHPPWR 271
        <SKW>  = <SKW>  + X                                                     GHPPWR 272
        JEM       = <AUX-E-MS>                                                  HVAC6  237
        <AUX-EM>  = <AUX-EM>  + (X - OFKW)                                      HVAC6  238
        JFM       = <HEAT-F-MS>                                                 HVAC6  239
        <HEAT-FM> = <HEAT-FM> + QHGASZ                                          HVAC6  240
        SGAS  = SGAS + QHGASZ                                                   GHPPWR 275
        QHLOADZ= -AMIN1(HLOAD,GCAP(1))                                          GHPPWR 276
        QHGSLDZ= -QHGSLDZ                                                       GHPPWR 277
        QHWASZ = -QHWASZ                                                        GHPPWR 278
        QHWASUZ= -QHWASUZ                                                       GHPPWR 279
        QHGDFRZ= -QHGDFRZ                                                       GHPPWR 280
        GRPM  =  GRPM*<HEAT-RPM-LIMIT1>                                         GHPPWR 281
        IF( ISSPF .EQ. 1)  THEN                                                 GHPPWR 282
          PLRHS  = PLRH                                                         GHPPWR 283
          QHCMPS = HLOAD*NOWFRC                                                 GHPPWR 284
        ENDIF                                                                   GHPPWR 285
        QHGSLDZ = QHGSLDZ + QHZHP                                               GHPPWR 286
        IF(QHGSLDZ .GT. -1.0)  GOTO 400                                         GHPPWR 287
C                 DO SUP HEATING                                                GHPPWR 288
 350    IF((DBT.LE.<MAX-HSUPP-T>).AND.(<SUPP-HEAT-CAP>.NE.0.)) THEN             GHPPWR 289
           PLRSUP = QHGSLDZ/(<SUPP-HEAT-CAP>+1.)                                GHPPWR 290
           QHGSUPZ = -<SUPP-HEAT-CAP>*<FURNACE-HIR>*                            GHPPWR 291
     1              CVAL(<FURNACE-HIR-FPLR>,PLRSUP,PLRSUP)                      GHPPWR 292
           Y      = 0.0                                                         GHPPWR 293
           IF(<SUPP-SOURCE> .EQ. -3)  THEN                                      HVAC13  60
             IF(PLRSUP .GT. (QCRUNZ+QHRUNZ)) THEN                               GHPPWR 295
               Y = (PLRSUP-(QCRUNZ+QHRUNZ))                                     GHPPWR 296
     $               *<UNIT-PUMP-ELEC>*CSIZE*0.001                              GHPPWR 297
             ENDIF                                                              GHPPWR 298
           ENDIF                                                                GHPPWR 299
           X      = PLRSUP*<FURNACE-AUX-KW> + Y                                 GHPPWR 300
           X = X*NOWFRC                                                         GHPPWR 301
           <SKW>  = <SKW>  + X                                                  GHPPWR 302
           SKWQH  = SKWQH  + X                                                  GHPPWR 303
           SUPPKW = SUPPKW + X                                                  GHPPWR 304
           X      = (1.-PLRSUP)*<FURNACE-AUX>                                   GHPPWR 305
           IF (NOWFRC.LT.0.99)  X = X*(1.-NOWFRC)                               GHPPWR 306
           QHAUXZ = QHAUXZ + X                                                  GHPPWR 307
     1              + (PLRSUP*<FURNACE-AUX-KW>+Y)*BTUKW*NOWFRC                  GHPPWR 308
           SGAS   = SGAS   + QHGSUPZ+ X                                         GHPPWR 309
          JFM       = <SUPP-F-MS>                                               HVAC6  241
          <SUPP-FM> = <SUPP-FM> + QHGSUPZ + X                                   HVAC6  242
        ENDIF                                                                   GHPPWR 311
 400    CONTINUE                                                                GHPPWR 312
C===             ADD FURNACE AUXILIARY IF UNIT NOT RUNNING                      GHPPWR 313
C         IF(PLRSUP.EQ.0.0) THEN                                                GHPPWR 314
            QHAUXZ = QHAUXZ + <FURNACE-AUX>                                     GHPPWR 315
            SGAS   = SGAS   + <FURNACE-AUX>                                     GHPPWR 316
            SUPPFL = SUPPFL + <FURNACE-AUX>                                     GHPPWR 317
C         ENDIF                                                                 GHPPWR 318
        IF( ICODE .eq. 22)  THEN                                                GHPPWR 319
          DO II=11,20                                                           GHPPWR 320
            IF(SHPZ(II) .ne. 0.0)  SHP(II) = SHP(II) + SHPZ(II)*SMULT           GHPPWR 321
          ENDDO                                                                 GHPPWR 322
        ELSE                                                                    GHPPWR 323
          DO II=11,20                                                           GHPPWR 324
            SHP(II) = SHPZ(II)                                                  GHPPWR 325
          ENDDO                                                                 GHPPWR 326
        ENDIF                                                                   GHPPWR 327
c                                                                               DWRECV  38
c============= HEAT-RECOVERY RECONCILIATION =================================== DWRECV  39
      CASE (3)                                                                  DWRECV  40
c              This mode is called only if this heat pump recovers heat to      DWRECV  41
c              a domestic water heater.  Called at end of hour, after other     DWRECV  42
c              loads such as preheat, reheat, etc. are recovered.               DWRECV  43
c              Pointer to domestic water heater                                 DWRECV  44
        Jdw    = <HTREC-DW-HEATER>                                              DWRECV  45
c              amount of waste heat left after space heat recovery,             DWRECV  46
c              available for DW heating                                         DWRECV  47
        QdhwAvail = QHWAS + QCWAS - (QHWASU+QCWASU)                             DWRECV  48
c              actual amount recovered can't be determined until dw-heater      DWRECV  49
c              is simulated - estimate now for hourly reports                   DWRECV  50
        IF (QdhwAvail .LT. 0.)  THEN                                            DWRECV  51
          QdhwRecvr = AMAX1(QdhwAvail, <dw;Qask>-<dw;Q_RECVR>)                  DWRECV  52
c              prorate to heating and cooling                                   DWRECV  53
          Prorate = QHWAS / (QHWAS + QCWAS)                                     DWRECV  54
          QHWASU  = QHWASU + QdhwRecvr * Prorate                                DWRECV  55
          QCWASU  = QCWASU + QdhwRecvr * (1.-Prorate)                           DWRECV  56
c              sum total available for dw heater calculations                   DWRECV  57
          <dw;Q_RECVR> = <dw;Q_RECVR> + QdhwAvail                               DWRECV  58
        ENDIF                                                                   DWRECV  59
c                                                                               DWRECV  60
      END SELECT  ! imode                                                       DWRECV  61
c                                                                               DWRECV  62
      RETURN                                                                    GHPPWR 329
      END                                                                       GHPPWR 330
      FUNCTION HE(ERMX,ERMN,TSET,F)                                             HE       2
C                                                                               HE       3
C              CALCULATE AN EXTRACTION RATE FROM THE ASSUMED LINEAR             HE       4
C              RELATIONSHIP BETWEEN EXTRACTION RATE AND ZONE TEMPERATURE        HE       5
C                                                                               HE       6
      common  /FNSYS/  ISKIPS, MSYSF(120)                                       /FNSYS/  2
      COMMON  /FZZZ1/   CAPXXX, CORINX, CWIDTX, ERMNXX, ERMXXX, FTDEVX          /FZZZ1/  2
     1                , FXXXXX, HEIGHX, HEXXXX, HPCAPX, HPKWXX, IFLGXX          /FZZZ1/  3
     2, IFUELX, ISHXXX, LSR2XX, LSR3XX, PATMXX, PLRXXX, PLSXXX, POMXXX          /FZZZ1/  4
     3, QHFXXX, QMULTX, QNOWXX, SLOADX, TAPPXX, TGINXX, TLOADX, TNOWXX          /FZZZ1/  5
     4, TSETXX, TWOUTX, UCHANX, ICALLX                                          /FZZZ1/  6
      REAL              LSR2XX, LSR3XX                                          /FZZZ1/  7
      COMMON  /ZONED / EXCFM,FH,FC,CFMZ,QHBZ,QOVER,THZ,TCZ,ERMAX,ERMIN,         /ZONED/  2
     1                 TRY,FTD,CORINT,G0,G1,G2,G3,SIGMAG,TL,ZQHR,TAVE,          /ZONED/  3
     2                 ZQH,ZQC,FCHPS(15),ACFM,ZKW,TCMINZ,THMAXZ,                /ZONED/  4
     3                 ERMAXM,ERMINM,THR,CSSCND,CSSVEC,HENOW,QGWIN,             /ZONED/  5
     4                 QSNABT,QGOPWL,QGVEC,CFMCVT,SSFPT,CFMVNT,ZFANKW,          /ZONED/  6
     5                 ZKWCBT,ZKWHBT,ZCapRbbrd, XC,ZC,XH,ZH                     -044e2   7
      REAL ZONED(63)                                                            -044e2   8
      EQUIVALENCE (ZONED(1),EXCFM)                                              /ZONED/  9
C                                                                               HE      10
      S = (ERMX-ERMN)/AMAX1(THR*2.,0.1)                                         HE      11
      DENOM = S + G0                                                            HE      12
      W = 0.5*(ERMX+ERMN) - S*TSET                                              HE      13
      HE = (G0*W + S*F) / DENOM                                                 HE      14
      IF( MSYSF(38) .EQ. 0 )    RETURN                                          HE      15
C********************** run function : HE-1 ****************************        HE      16
          ERMXXX = ERMX                                                         HE      17
          ERMNXX = ERMN                                                         HE      18
          TSETXX = TSET                                                         HE      19
          FXXXXX = F                                                            HE      20
           CALL  FINTS( MSYSF(38), 0. )                                         HE      21
          HE = HEXXXX                                                           HE      22
C*******************************************************************            HE      23
      RETURN                                                                    HE      24
      END                                                                       HE      25
      SUBROUTINE HOURIN                                                         HOURIN   2
C                                                                               HOURIN   3
C                            FETCH HOURLY LOADS AND WEATHER DATA                HOURIN   4
C                                                                               HOURIN   5
C              DEVELOPED BY                                                     -130     1
C                            J. J. Hirsch & S. D. Gates                         -130     2
C                            James J. Hirsch & Associates                       -130     3
C                            Camarillo, California                              -130     4
C              BASED UPON CODE DEVELOPED BY J. J. Hirsch and                    -130     5
C                            W. F. Buhl                                         -130     6
C                            A. E. Erdem                                        -130     7
C                            Lawrence Berkeley National Laboratory              -130     8
C                            University of California                           -130     9
Copyright (c) 1997 by James J. Hirsch. All Rights Reserved. Unpublished         -130    10
c rights reserved under the Copyright Laws of the United States.                -130    11
c RESTRICTED RIGHTS NOTICE: Government use, reproduction or disclosure          -130    12
c is subject to restrictions as set forth in Rights in Data (g)(3) in           -130    13
c UC/LBL purchase order 4607010 with J.J. Hirsch & Associates.                  -130    14
C                                                                               HOURIN   7
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON  /BUFERS/  MRLEN1, MRLEN2, IBLDSB,IELDSB,LLDSB,N3,IBRPB1,          HVACi    1
     1                  IERPB1,LRPB1,IBRPB2,IERPB2,LRPB2                        HVACi    2
      COMMON  /BUF   / DBUF(52,9999), IZREF(9999),                              -048a    8
     &                 DAYMTR(61,24), ElecPeaks5(13,25,24)                      Time     2
      DIMENSION        IDBUF(52,9999), OBUF(42,24,4), IOBUF(42,24,4)            -048a    9
      EQUIVALENCE      (DBUF(1,1),IDBUF(1,1)),                                  /BUF/    5
     1                 (OBUF(1,1,1),DBUF(1,1)),                                 /BUF/    6
     2                 (OBUF(1,1,1),IOBUF(1,1,1))                               /BUF/    7
      COMMON  /DESHRQ/ NDESDY, IDDTYP(2), DESHRQ(360)                           Time     3
      COMMON  /ENDUSE/ SUPPKW, HEATKW                                           HVAC27   1
      common  /FNSYS/  ISKIPS, MSYSF(120)                                       /FNSYS/  2
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                 IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                        /FILES/  3
     2               , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                   /FILES/  4
     3                 IHRREP(3), IHRPAS(2)                                     /FILES/  5
      COMMON  /HRREP / Irb, Ihrp, Lrb, Lhrp, Nrb, Nhrp, IVTLIM(3,50),           HR       5
     &                 IGRPtr, IBRPtr, IRSch, IRSchT(5),                        HR       6
     &                 NHRTyp(3), ITBUF(3), ITBUFB(3), ITBUFE(3),               HR       7
     &                 IHREOF, ICDFLG                                           HR       8
      COMMON  /MISCD / TEMPS(4,9999),CONS(5),TEMPSL(9999),                      -048a   10
     1                 BLDGQH,BLDGQC,BLDGQL,BLDGP,BPMULT,                       /MISCD/  3
     $                 DBTMIN,DBTMAX,WMIN,WMAX,NSPZ(9999),                      -048a   11
     3                 DQ, DTP, DTR, DTS, FPI, PLRCC , POM, TC2, TDM,           /MISCD/  5
     4                 TRA,WCOL,WCOLM,WMM,YPI,KWBTU,BTUKW,UNFILD,Unusedm        RemPA   45
      REAL             KWBTU                                                    /MISCD/  7
      COMMON  /TDVdat/ NameTDV, TDVmax(3), TDVmin(3), TDVavg(3),                /TDVdat/ 2
     &                 TDVsrc(3,8760), KtvTDV2(4)                               /TDVdat/ 3
      Character        NameTDV*4                                                /TDVdat/ 4
      COMMON  /PTRPLT/ Ipm,Ilp,Ich,Ibl,Idw,Itw,Ipv,Ign,Itk,Ihx,                 PV       1
     &                 Iec,Ilm,Iem,Ifm,Ism,Icm,Imm,Imc,Igl,Isp2,                XFC2     1
     &                 Ispare(5),  Ipe,                                         HVAC19   3
     &                 Npm,Nlp,Nch,Nbl,Ndw,Ntw,Npv,Ngn,Ntk,Nhx,                 PV       2
     &                 Nec,Nlm,Nem,Nfm,Nsm,Ncm,Nmm,Nmc,Ngl,Nsp2,                XFC2     2
     &                 Nspare(5),  Npe,                                         HVAC19   6
     &                 Lpm,Llp,Lch,Lbl,Ldw,Ltw,Lpv,Lgn,Ltk,Lhx,                 PV       3
     &                 Lec,Llm,Lem,Lfm,Lsm,Lcm,Lmm,Lmc,Lgl,Lsp2,                XFC2     3
     &                 Lspare(5),  Lpe,                                         HVAC19   9
     &                 Jpm,Jlp,Jch,Jbl,Jdw,Jtw,Jpv,Jgn,Jtk,Jhx,                 PV       4
     &                 Jec,Jlm,Jem,Jfm,Jsm,Jcm,    Jmc,Jgl,                     HVAC19  11
     &                 Jpe, kpr, NumMeters, NumIntHX                            XFC1     1
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      COMMON  /REPORT/ IREPRT(4,37),IPRG,IUNIQV(100),IUNIQS(100),IUNIQL         HVAC14   4
      COMMON  /TIME  / IDOY, IYR, IMO, IDAY, IHR,                               Time     4
     &                 ISCMO, ISCDAY, ISCHR, IDOW, ISCDOW, iDSdates(6),         -044e5   1
     &                 iTimeFlg, iDSFlg, iDDFlg, InitialFlg, LeapYr,            Time     6
     &                 CLOCK(10), MONDSC(13), MONLEN(12), MONSDA(12)            HR      12
      COMMON  /TROMWL/ SUMDTX,SUMDTY,QCTOT,QLC0,QGK0,QCGUES,QVNTBG,             /TROMWL/ 2
     1                 VOLVNT,AMF,UCHAN,UCHANC,HRGW,TAIRIN,TZONE,               /TROMWL/ 3
     2                 TGOUT,QCVG,QCVW,IVMODE,TFO,RHO,MWH,FILMU,MRX,CTRM        /TROMWL/ 4
     1    , TAVR, TGLASS, TUNDER, UNIN1                                         /TROMWL/ 5
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
      COMMON /WCTRL/   IwinReturn, Imsgflg                                      /WCTRL/  2
#ifndef _DLL                                                                 /* -048     1 */ 
      COMMON /WIN_MB/ MB_OK,MB_ICONSTOP,MB_ICONEXCLAMATION,MB_TASKMODAL,        -048     2
     &                MB_ICONINFORMATION                                        -048     3
#else                                                                        /* -048     4 */ 
      include 'msgbox.fi'                                                       -048     5
#endif                                                                       /* -048     6 */ 
      COMMON  /ZEROP/  LpmHR,LlpHR,LchHR,LblHR,LdwHR,LtwHR,LpvHR,LgnHR,         PV       5
     &                 LtkHR,LhxHR,LecHR,LlmHR,LemHR,LfmHR,LsmHR,LcmHR,         HVAC23   6
     &                 LglHR,LpeHR,                                             HVAC23   7
     &                 LpmMO,LlpMO,LchMO,LblMO,LdwMO,LtwMO,LpvMO,LgnMO,         PV       6
     &                 LtkMO,LhxMO,LecMO,LlmMO,LemMO,LfmMO,LsmMO,LcmMO,         HVAC23   9
     &                 LglMO,LpeMO,                                             HVAC23  10
     &                 LpmYR,LlpYR,LchYR,LblYR,LdwYR,LtwYR,LpvYR,LgnYR,         PV       7
     &                 LtkYR,LhxYR,LecYR,LlmYR,LemYR,LfmYR,LsmYR,LcmYR,         HVAC23  12
     &                 LglYR,LpeYR                                              HVAC23  13
      H(DB,W) = 0.24*DB + (1061.0+0.444*DB)*W                                   H        2
      V(DB,W,P) = 0.754*(DB+459.7)*(1.0+1.605*W)/P                              V        2
C                                                                               HOURIN  25
C              PICK UP WEATHER VARIABLES                                        HOURIN  26
C                                                                               HOURIN  27
      IF (iDDFlg .GT. 0)  THEN                                                  PV       8
c              Design day                                                       PV       9
c              DESHRQ is passed by the LOADS program                            PV      10
c              DESHRQ(I TO I+24)     = dry bulb temperature                     PV      11
c              DESHRQ(I+25 TO I+48)  = wet bulb temperature                     PV      12
c              DESHRQ(I+49 TO I+72)  = humidity ratio                           PV      13
c              DESHRQ(I+73 TO I+96)  = windspeed (knots)                        PV      14
c              DESHRQ(I+97 TO I+120) = cloud amount (tenths)                    PV      15
c                where I is the day number minus one times 120                  PV      16
c              Pointer to this hours design-day weather                         PV      17
        I1 = (iDDFlg-1)*120                                                     PV      18
        DBT    = DESHRQ(I1+IHR)                                                 PV      19
        WBT    = DESHRQ(I1+IHR+24)                                              PV      20
        HUMRAT = DESHRQ(I1+IHR+48)                                              PV      21
        WNDSPD = DESHRQ(I1+IHR+72)                                              PV      22
        CLDAMT = DESHRQ(I1+IHR+96)                                              PV      23
        DBTR   = DBT + 460.                                                     PV      24
C              enthalpy and density                                             PV      25
        ENTHAL = H(DBT,HUMRAT)                                                  PV      26
        DENSTY = 1.0/V(DBT,HUMRAT,PATM)                                         PV      27
      ELSE                                                                      PV      28
c              Normal run - call routine to unpack this hours weather           PV      29
c              from the weather file                                            PV      30
        CALL WEATHI                                                             PV      31
      ENDIF                                                                     PV      32
c              Calculate sun angles for photovoltaic arrays                     PV      33
      IF (Npv .gt. 0) THEN                                                      -045j    1
        Call Sun1(1)  ! complete calc for photovoltaic arrays                   -045j    2
      ELSE                                                                      -045j    3
        Call Sun1(2)  ! just sun up/down for photocell ctrl                     -045j    4
      ENDIF                                                                     -045j    5
                                                                                -045j    6
c                                                                               PV      35
C                                                                               HOURIN  59
C              UNPACK THIS HOURS LOADS OUTPUT FILE                              HOURIN  60
C                                                                               HOURIN  61
C              THE FILE HAS A RECORD FOR EACH DAY                               HOURIN  62
C              EACH RECORD IS COMPOSED OF THREE WORDS FOR                       HOURIN  63
C              EACH LOADS SPACE. THE SPACES ARE IN THE                          HOURIN  64
C              SAME ORDER ON THE FILE AS THE USER DEFINED                       HOURIN  65
C              THEM IN LDL.                                                     HOURIN  66
C                                                                               HOURIN  67
C              SET ZP2 TO POINT TO FIRST ZONE                                   HOURIN  68
      ZP2    = IZ                                                               HOURIN  69
C              N3 IS SET TO THE FIRST WORD IN THE INPUT BUFFER                  HOURIN  70
C              WHICH IS THE DATA FOR THIS HOUR                                  HOURIN  71
C              LLDSB IS THE LENGTH OF ONE HOURS DATA                            HOURIN  72
C              IBLDSB IS WHERE THE BUFFER BEGINS                                HOURIN  73
      N3     = (IHR-1)*LLDSB + IBLDSB                                           HOURIN  74
C              LOOP THROUGH THE ZONES                                           HOURIN  75
      DO 550 N1=1,NZONE                                                         HOURIN  76
      MTW    = <ITWBUFP>                                                        HOURIN  77
C              FIRST ADJUST SOME HISTORY                                        HOURIN  78
      <CONDUCHRPAST2> = <CONDUCHRPAST>                                          HOURIN  79
      <CONDUCHRPAST> = <CONDUCHR>                                               HOURIN  80
      <SGIW2> = <SGIW1>                                                         HOURIN  81
      <SGIW1> = <SGIW0>                                                         HOURIN  82
      <SLIW2> = <SLIW1>                                                         HOURIN  83
      <SLIW1> = <SLIW0>                                                         HOURIN  84
C              SET N2 TO BE POINTER TO FIRST WORD FOR ZONE DATA                 HOURIN  85
      N2     = N3 + <IBUFFP>                                                    HOURIN  86
C              SEE IF 60 OR 30 BIT FILE SIZE                                    HOURIN  87
      <QS-LDS>          = AA(N2)                                                HOURIN  88
      <QL>              = AA(N2+1)                                              HOURIN  89
      <QP>              = AA(N2+2)                                              HOURIN  90
      <CFMINF-LDS>      = AA(N2+3)                                              HOURIN  91
      <CONDUCHR>        = AA(N2+4) + <CONDUCI>*<FCOR>                           HOURIN  92
C              ENERGY END USES                                                  HOURIN  93
      <AREA-LITES-ELEC> = AA(N2+5) * KWBTU                                      HOURIN  94
      <TASK-LITES-ELEC> = AA(N2+6) * KWBTU                                      HOURIN  95
      <EQUIP-ELEC>      = AA(N2+7) * KWBTU                                      HOURIN  96
      <SOURCE-ELEC>     = AA(N2+8) * KWBTU                                      HOURIN  97
      <SOURCE-FUEL>     = AA(N2+9)                                              HOURIN  98
      <SOURCE-HW>       = AA(N2+10)                                             HOURIN  99
      N2 = N2 + 11                                                              IcRink  12
C              ZONE ELECTRICAL                                                  HOURIN 100
      <ZKW> = <AREA-LITES-ELEC> + <TASK-LITES-ELEC> + <EQUIP-ELEC>              HOURIN 101
     -                           + <SOURCE-ELEC>                                HOURIN 102
c              Check for Trombe wall                                            IcRink  13
      IF (MTW .GT. 0)  THEN                                                     IcRink  14
        <QABSW>       = AA(N2)                                                  IcRink  15
        <QABSI>       = AA(N2+1)                                                IcRink  16
        <QABSO>       = AA(N2+2)                                                IcRink  17
        <NIGHT-INSUL> = AA(N2+3)                                                IcRink  18
        N2            = N2 + 4                                                  IcRink  19
      ENDIF                                                                     IcRink  20
C              GET ZP1 FOR THIS ZONE                                            HOURIN 110
      IZUSED = 0                                                                HOURIN 111
      DO  NS=1,NSYS                                                             RemPA  377
        NSP   = IS + (NS-1)*NSS                                                 RemPA  378
        NSZ = <NZONES>                                                          RemPA  379
        ISZ = <ISZONES>                                                         RemPA  380
        DO  NZ = 1,NSZ                                                          RemPA  381
          ZP1 = ISZ + (NZ-1)*NZD                                                RemPA  382
          if ( <ZP2> .EQ. ZP2 )    then                                         RemPA  383
            IZUSED = 1                                                          RemPA  384
            <zn;QMechLossPas2> = <zn;QMechLossPast>                             -043a3   2
            <zn;QMechLossPast> = <zn;QMechLossNow>                              -043a3   3
            <QSPAST2> = <QSPAST>                                                RemPA  385
            <QSPAST>  = <QS>                                                    RemPA  386
            <QS>      = <QS-LDS>                                                RemPA  387
            <VIPAST2> = <VIPAST>                                                RemPA  388
            <VIPAST>  = <CFMINF>                                                RemPA  389
            <CFMINF>  = <CFMINF-LDS>                                            RemPA  390
C             ZERO SOME SUNSPACE CONVECTION QUANTITIES                          RemPA  391
            <ICONVCALC> = 0                                                     RemPA  392
            <QGVEC> = 0.0                                                       RemPA  393
            <CFMCVT> = 0.0                                                      RemPA  394
            <SSFPT> = 0.0                                                       RemPA  395
            <QGVNT> = 0.0                                                       RemPA  396
            <CFMVNT> = 0.0                                                      RemPA  397
            if (IHR .EQ. 1  .AND.  InitialFlg .EQ. 7)  THEN                     Time   253
              <QSPAST>  = <QS>                                                  RemPA  399
              <QSPAST2> = <QS>                                                  RemPA  400
              <VIPAST>  = <CFMINF>                                              RemPA  401
              <VIPAST2> = <CFMINF>                                              RemPA  402
            endif                                                               RemPA  403
          endif                                                                 RemPA  404
        ENDDO                                                                   RemPA  405
      ENDDO                                                                     RemPA  406
      if ( IZUSED .eq. 1 )    goto  532                                         HOURIN 147
      CALL MSGSIM(-1,I,I,I,I)                                                   HOURIN 148
      NMZP2 = ZP2 + 3                                                           HOURIN 149
      WRITE (IOUTPT,5301) (IA(N99),N99=ZP2,NMZP2)                               -42c   118
 5301 FORMAT(/' ZONE ',8A4,' is not served by any SYSTEM.'//)                   -42c   119
      call MessageBox( NULL, 'Error getting ZONE LOADS data -'                  WinRet  44
     &  //' ABORTING'//char(0),'HOURIN Errors'//char(0), MB_OK                  WinRet  45
     &  + MB_ICONSTOP+MB_TASKMODAL )                                            WinRet  46
      IwinReturn = 1                                                            WinRet  47
      RETURN                                                                    WinRet  48
  532 CONTINUE                                                                  HOURIN 153
c            Check for sunspace common walls defined in this zone               IcRink  21
      IF (<NCOMWAL> .GT. 0)  THEN                                               IcRink  22
        NCW = <NCOMWAL>                                                         IcRink  23
c            LOOP OVER COMMON WALLS                                             IcRink  24
        MTW = <ICWBUFP>                                                         IcRink  25
        DO  ICW=1,NCW                                                           IcRink  26
c              solar absorbed by sunspace side of wall                          IcRink  27
          <QABSW> = AA(N2)                                                      IcRink  28
c              conductance of windows in wall                                   IcRink  29
          <UASUMWIN> = AA(N2+1)                                                 IcRink  30
c              solar transmitted thru windows from sunspace to adjacent         IcRink  31
c              space (used for reporting only)                                  IcRink  32
          <SOLTRNIWN> = AA(N2+2)                                                IcRink  33
          NRESF = <NRESFAC>                                                     IcRink  34
          MTW   = MTW + 36 + 7*NRESF                                            IcRink  35
          N2    = N2 + 4                                                        IcRink  36
        ENDDO                                                                   IcRink  37
      ENDIF                                                                     IcRink  38
c              Delayed ceiling and solar transmission data for ice rinks        IcRink  39
      IF (<zn:ICE-RINK> .GT. 0)  THEN                                           IcRink  40
        Jir              = <zn:ICE-RINK>                                        IcRink  41
        <ir;Qceil>       = AA(N2)                                               IcRink  42
        <ir;UAceil>      = AA(N2+1)                                             IcRink  43
        <ir;UAceilNoIFR> = AA(N2+2)                                             IcRink  44
        <ir;Qsolar>      = AA(N2+3)                                             IcRink  45
        N2               = N2 + 4                                               IcRink  46
        CALL IceRink(10, <zn:ICE-RINK>)                                         IcRink  47
      ENDIF                                                                     IcRink  48
C              IF THIS IS THE FIRST HOUR OF THE FIRST DAY OF                    HOURIN 184
C              INITIALIZATION RESAVE TH HISTORY                                 HOURIN 185
             IF (IHR .NE. 1  .OR.  InitialFlg .LT. 7)  GOTO 550                 Time   254
      <CONDUCHRPAST> = <CONDUCHR>                                               HOURIN 187
      <CONDUCHRPAST2> = <CONDUCHR>                                              HOURIN 188
      <SGIW2> = <SGIW1>                                                         HOURIN 189
      <SGIW1> = <SGIW0>                                                         HOURIN 190
      <SLIW2> = <SLIW1>                                                         HOURIN 191
      <SLIW1> = <SLIW0>                                                         HOURIN 192
C***                                                                            HOURIN 193
C              INCREMENT ZP2 TO POINT TO NEXT ZONE                              HOURIN 194
  550 ZP2    = ZP2 + NCZD                                                       HOURIN 195
C              LOOP THRU ZONES AGAIN AND (1) ADD TO <CONDUCHR> THE              HOURIN 196
C              CONDUCTANCE OF ALL THE SUNSPACE COMMON WALLS SINCE THESE         HOURIN 197
C              WALLS ARE NOT INCLUDED IN <CONDUCI>, (2) FOR SPACES ADJ          HOURIN 198
C              TO A SUNSPACE, FIND SOLAR GAIN THRU COMMON-WALL INTERIOR         HOURIN 199
C              WINDOWS, GET CORRESPONDING WEIGHTED LOAD AND ADD TO QS           HOURIN 200
C              SINCE THIS LOAD IS NOT INCLUDED IN THE QS FROM LOADS.            HOURIN 201
C              A SECOND ZONE LOOP IS NECESSARY SO THAT THE HOURLY DATA          HOURIN 202
C              FOR COMMON WALLS DEFINED IN ADJACENT ZONES IS PRESENT.           HOURIN 203
C                                                                               HOURIN 204
      ZP2 = IZ                                                                  HOURIN 205
      DO 650 N1 = 1,NZONE                                                       HOURIN 206
      <SGIW0> = 0.                                                              HOURIN 207
C            SKIP IF NOT A SUNSPACE OR A SPACE ADJACENT TO A SUNSPACE           HOURIN 208
      IF (<ISUNSP>.EQ.0) GO TO 650                                              HOURIN 209
C            LOOP OVER INTERIOR WALLS IN THIS ZONE AND GET COMMON WALLS         HOURIN 210
      NIW1 = <NATTCH>                                                           HOURIN 211
      IF (NIW1.EQ.0) GO TO 650                                                  HOURIN 212
      DO 630 JW1 = 1,NIW1                                                       HOURIN 213
C            PTR TO ATTACHMENT DATA FOR THIS ZONE                               HOURIN 214
      I1 = <IATTCH> + (JW1-1)*3                                                 HOURIN 215
C            PTR TO WALL PARAMETERS FOR THIS WALL                               HOURIN 216
      MTW = IA(I1+2)                                                            HOURIN 217
C            SKIP IF NO DATA                                                    HOURIN 218
      IF (MTW.EQ.0) GO TO 630                                                   HOURIN 219
C              GET MULTIPLIER OF ZONE ON OTHER SIDE OF THIS COMMON WALL         HOURIN 220
      ZP2T = ZP2                                                                HOURIN 221
      ZP2 = IZ + (NSPZ(IA(I1))-1)*NCZD                                          HOURIN 222
      ZMNEXT = <MULTIPLIER>                                                     HOURIN 223
      ZP2 = ZP2T                                                                HOURIN 224
C            ADD THE OPAQUE WALL PLUS WINDOW CONDUCTANCE OF THIS COMMON WALL    HOURIN 225
C            TO THE OVERALL ZONE CONDUCTANCE                                    HOURIN 226
      <CONDUCHR> = <CONDUCHR> + ( <UASUMWIN> +                                  HOURIN 227
     .  <NETWALAREA> / (1./<UWAL> + 2.*<IFR>) ) * ZMNEXT                        HOURIN 228
C              GET SOLAR GAIN FROM SUNSPACE THRU WINDOWS IN THIS COM WALL       HOURIN 229
      IF (<ISUNSP>.EQ.2) <SGIW0> = <SGIW0> + <SOLTRNIWN>*ZMNEXT                 HOURIN 230
C***                                                                            HOURIN 231
      CNDCHR = <CONDUCHR>                                                       HOURIN 232
C***                                                                            HOURIN 233
  630 CONTINUE                                                                  HOURIN 234
C              LOAD DUE TO SOL GAIN THRU COM WALL INTERIOR WINDOWS              HOURIN 235
      IF (<ISUNSP>.NE.2) GO TO 640                                              HOURIN 236
      <SLIW0> = <SOL-V0>*<SGIW0> + <SOL-V1>*<SGIW1> + <SOL-V2>*<SGIW2>          HOURIN 237
     .        + <SOL-W1>*<SLIW1> + <SOL-W2>*<SLIW2>                             HOURIN 238
C     <QS> = <QS> + <SLIW0>                                                     HOURIN 239
C              DON'T ADD SLIW0 TO QS.  IN 2.1D THIS IS DONE IN LOADS.           HOURIN 240
C              BUT RETAIN SOLTRNIW AND SLIW0 IN SYSTEMS FOR HOURLY REP          HOURIN 241
  640 CONTINUE                                                                  HOURIN 242
      IF (IHR .NE. 1  .OR.  InitialFlg .LT. 7)  GOTO 650                        Time   255
      <CONDUCHRPAST> = <CONDUCHR>                                               HOURIN 244
      <CONDUCHRPAST2> = <CONDUCHR>                                              HOURIN 245
  650 ZP2 = ZP2 + NCZD                                                          HOURIN 246
c                                                                               -044     3
c              Index into time-dependent valuation data                         -044     4
c              TDV(I,J)                                                         -044     5
c                    ^  Hour of year (1-8760)                                   -044     6
c                  1    Electric kBtu/kWh   source/site multiplier              -044     7
c                  2    Gas      kBtu/Therm   "                                 -044     8
c                  3    Propane  kBtu/Therm   "                                 -044     9
      iYrHr = (IDOY-1)*24 + IHR                                                 -044    10
c                                                                               HVAC6  243
c              Zero hourly meter and enduse data                                HVAC6  244
c              electricity                                                      HVAC6  245
      DO  IM = 1,Nem                                                            HVAC18  29
        Jem = Iem + (IM-1)*Lem                                                  HVAC18  30
        CALL FILLN(0., <=HRBJem>, LEMhr)                                        HVAC18  31
c              calculate miscellaneous loads attached directly to meters        HVAC18  32
c              interior                                                         HVAC18  33
        Nmisc = <em;NUM_INT>                                                    HVAC18  34
        DO  II=1,Nmisc                                                          HVAC18  35
          IE = <em:INT-EU>                                                      MeterEU  1
          <em;METERS> = <em;METERS>+<em:INT-KW>*SchVal(<em:INT-SCH>, 1.)        MeterEU  2
        ENDDO                                                                   HVAC18  42
c              exterior                                                         HVAC18  43
        Nmisc = <em;NUM_EXT>                                                    HVAC18  44
        DO  II=1,Nmisc                                                          HVAC18  45
          IE = <em:EXT-EU>                                                      -044    11
          <em;METERS> = <em;METERS>+<em:EXT-KW>*SchVal(<em:EXT-SCH>, 1.)        -044    12
        ENDDO                                                                   HVAC18  52
c              self-contained refrigeration                                     MeterEU  3
        IF (<em:REFG-POWER> .GT. 0.)                                            MeterEU  4
     &    <em;REFG> = <em;REFG>+<em:REFG-POWER>*SchVal(<em:REFG-SCH>,1.)        MeterEU  5
c              Source multiplier for time-dependent valuation, kBtu/kWh         -044    13
        IF (<em;Ktv> .gt. 0)  <em.TDVsrc> = TDVsrc(1,iYrHr)                     -044    14
      ENDDO                                                                     HVAC18  53
c              fuels                                                            HVAC18  54
      DO  IM = 1,Nfm                                                            HVAC18  55
        Jfm = Ifm + (IM-1)*Lfm                                                  HVAC18  56
        CALL FILLN(0., <=HRBJfm>, LFMhr)                                        HVAC18  57
c              calculate miscellaneous loads attached directly to meters        HVAC18  58
c              interior                                                         HVAC18  59
        Nmisc = <fm;NUM_INT>                                                    HVAC18  60
        DO  II=1,Nmisc                                                          HVAC18  61
          IE = <fm:INT-EU>                                                      MeterEU  6
          <fm;METERS> = <fm;METERS>                                             MeterEU  7
     &                + <fm:INT-BTU/HR>*SchVal(<fm:INT-SCH>, 1.)                MeterEU  8
        ENDDO                                                                   HVAC18  68
c              exterior                                                         HVAC18  69
        Nmisc = <fm;NUM_EXT>                                                    HVAC18  70
        DO  II=1,Nmisc                                                          HVAC18  71
          IE = <fm:EXT-EU>                                                      -044    15
          <fm;METERS> = <fm;METERS>                                             -044    16
     &                + <fm:EXT-BTU/HR>*SchVal(<fm:EXT-SCH>, 1.)                -044    17
        ENDDO                                                                   HVAC18  78
c              Source multiplier for time-dependent valuation; convert          -044    18
c              kBtu/Therm to kBtu/Btu for internal use                          -044    19
        IF (<fm;Ktv> .gt. 0)  THEN                                              -044    20
          SELECT CASE (<fm:TYPE>)                                               -044    21
          CASE (1)  ! Natural gas                                               -044    22
            <fm.TDVsrc> = TDVsrc(2,iYrHr) * 0.00001                             -044    23
          CASE DEFAULT  ! Propane and all other fuels                           -044    24
            <fm.TDVsrc> = TDVsrc(3,iYrHr) * 0.00001                             -044    25
          END SELECT                                                            -044    26
        ENDIF                                                                   -044    27
      ENDDO                                                                     HVAC18  79
c              steam                                                            HVAC18  80
      DO  IM = 1,Nsm                                                            HVAC18  81
        Jsm = Ism + (IM-1)*Lsm                                                  HVAC18  82
        CALL FILLN(0., <=HRBJsm>, LSMhr)                                        HVAC18  83
c              maximum capacity available for loops                             HVAC18  84
        Jme = Jsm                                                               HVAC18  85
        <me;MAX_CAPACITY> = <sm:CAP>                                            HVAC18  86
c              calculate miscellaneous loads attached directly to meters        HVAC18  87
c              interior                                                         HVAC18  88
        Nmisc = <sm;NUM_INT>                                                    HVAC18  89
        DO  II=1,Nmisc                                                          HVAC18  90
          Qmisc = AMIN1(<sm:INT-BTU/HR>*SchVal(<sm:INT-SCH>, 1.),               Time   263
     &                  <me;MAX_CAPACITY>)                                      Time   264
          IE = <sm:INT-EU>                                                      MeterEU  9
          <sm;METERS> = <sm;METERS> + Qmisc                                     MeterEU 10
          <me;MAX_CAPACITY> = <me;MAX_CAPACITY> - Qmisc                         HVAC18  98
        ENDDO                                                                   HVAC18  99
c              exterior                                                         HVAC18 100
        Nmisc = <sm;NUM_EXT>                                                    HVAC18 101
        DO  II=1,Nmisc                                                          HVAC18 102
          Qmisc = AMIN1(<sm:EXT-BTU/HR>*SchVal(<sm:EXT-SCH>, 1.),               Time   265
     &                  <me;MAX_CAPACITY>)                                      Time   266
          IE = <sm:EXT-EU>                                                      -044    28
          <sm;METERS> = <sm;METERS> + Qmisc                                     -044    29
          <me;MAX_CAPACITY> = <me;MAX_CAPACITY> - Qmisc                         HVAC18 110
        ENDDO                                                                   HVAC18 111
      ENDDO                                                                     HVAC18 112
c              chilled-water                                                    HVAC18 113
      DO  IM = 1,Ncm                                                            HVAC18 114
        Jcm = Icm + (IM-1)*Lcm                                                  HVAC18 115
        CALL FILLN(0., <=HRBJcm>, LCMhr)                                        HVAC18 116
c              maximum capacity available for loops                             HVAC18 117
        Jme = Jcm                                                               HVAC18 118
        <me;MAX_CAPACITY> = <cm:CAP>                                            HVAC18 119
c              calculate miscellaneous loads attached directly to meters        HVAC18 120
c              interior                                                         HVAC18 121
        Nmisc = <cm;NUM_INT>                                                    HVAC18 122
        DO  II=1,Nmisc                                                          HVAC18 123
          Qmisc = AMIN1(<cm:INT-BTU/HR>*SchVal(<cm:INT-SCH>, 1.),               Time   267
     &                  <me;MAX_CAPACITY>)                                      Time   268
          IE = <cm:INT-EU>                                                      MeterEU 11
          <cm;METERS> = <cm;METERS> + Qmisc                                     MeterEU 12
          <me;MAX_CAPACITY> = <me;MAX_CAPACITY> - Qmisc                         HVAC18 131
        ENDDO                                                                   HVAC18 132
c              exterior                                                         HVAC18 133
        Nmisc = <cm;NUM_EXT>                                                    HVAC18 134
        DO  II=1,Nmisc                                                          HVAC18 135
          Qmisc = AMIN1(<cm:EXT-BTU/HR>*SchVal(<cm:EXT-SCH>, 1.),               Time   269
     &                  <me;MAX_CAPACITY>)                                      Time   270
          IE = <cm:EXT-EU>                                                      -044    30
          <cm;METERS> = <cm;METERS> + Qmisc                                     -044    31
          <me;MAX_CAPACITY> = <me;MAX_CAPACITY> - Qmisc                         HVAC18 143
        ENDDO                                                                   HVAC18 144
      ENDDO                                                                     HVAC18 145
c              surplus energy from cogeneration                                 HVAC6  357
      CogenSurplus = 0.                                                         HVAC6  358
c                                                                               RemPA  407
c              Direct space energy usage from LOADS to the meters               HVAC6  359
      DO  NS=1,NSYS                                                             RemPA  410
        NSP   = IS + (NS-1)*NSS                                                 RemPA  411
        NSZ = <NZONES>                                                          RemPA  412
        ISZ = <ISZONES>                                                         RemPA  413
        DO  NZ=1,NSZ                                                            RemPA  414
          ZP1 = ISZ + (NZ-1)*NZD                                                RemPA  415
          ZP2 = <ZP2>                                                           RemPA  416
          ZMULT      = <MULTIPLIER>                                             HVAC6  360
          JEM        = <LIGHT-E-MZ>                                             HVAC6  361
          <LIGHT-EM> = <LIGHT-EM>    + <AREA-LITES-ELEC> * ZMULT                HVAC6  362
          JEM        = <TASK-E-MZ>                                              HVAC6  363
          <TASK-EM>  = <TASK-EM>     + <TASK-LITES-ELEC> * ZMULT                HVAC6  364
          JEM        = <EQUIP-E-MZ>                                             HVAC6  365
          <EQUIP-EM> = <EQUIP-EM>    + <EQUIP-ELEC>      * ZMULT                HVAC6  366
          JEM        = <SOURCE-E-MZ>                                            HVAC6  367
          <EQUIP-EM> = <EQUIP-EM>    + <SOURCE-ELEC>     * ZMULT                HVAC6  368
          JFM        = <SOURCE-F-MZ>                                            HVAC6  369
          <EQUIP-FM> = <EQUIP-FM>    + <SOURCE-FUEL>     * ZMULT                HVAC6  370
C              end of zone loop                                                 RemPA  438
        ENDDO                                                                   RemPA  439
C              end of systems loop                                              RemPA  440
      ENDDO                                                                     RemPA  441
C********************** run function : HOURIN-1 ************************        HOURIN 303
      IF( MSYSF(39) .NE. 0 )   CALL  FINTS( MSYSF(39), 0. )                     HOURIN 304
C*******************************************************************            HOURIN 305
      RETURN                                                                    HOURIN 306
      END                                                                       HOURIN 307
      SUBROUTINE HourlyReports(Mode)                                            HRREPS   2
c                                                                               HRREPS   3
c              Processes the hourly reports                                     HRREPS   4
c                                                                               HRREPS   5
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON  /CTRL  / VERS(2),IRPFLG(4),IOVRLL(7),IWRTFL,IPROG,                /CTRL/   2
     1                 IFATAL,NAMPRG(3,7),MTRICR                                /CTRL/   3
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                 IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                        /FILES/  3
     2               , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                   /FILES/  4
     3                 IHRREP(3), IHRPAS(2)                                     /FILES/  5
      COMMON /HRPSTA/ ISTUF(20)                                                 /HRPSTA/ 2
      COMMON  /HRREP / Irb, Ihrp, Lrb, Lhrp, Nrb, Nhrp, IVTLIM(3,50),           HR       5
     &                 IGRPtr, IBRPtr, IRSch, IRSchT(5),                        HR       6
     &                 NHRTyp(3), ITBUF(3), ITBUFB(3), ITBUFE(3),               HR       7
     &                 IHREOF, ICDFLG                                           HR       8
      COMMON  /IAX   / IAX, IADIM, IADIMV, IAXMAX, KORE, IAXlds, IAXsys         HR       9
      COMMON  /IRUNPD/ NRUNPD, JRUNPD, IRUNPD(6,15)                             /IRUNPD/ 2
      COMMON  /LENS/   MWFLEN, MRLEN, MSHLEN, MWNLEN, MDRLEN, MXLEN,            /LENS/   2
     1                 MULEN, MZLEN, MIWLEN, MFLLEN,                            /LENS/   3
     2                 LMTB, LLDSOU, MSTLEN, LSTFT, MWLLEN                      /LENS/   4
      COMMON  /NHRSHR/ NHRSHR(128), IHRCTR(5,128), NHRITM,FILEHR,ICECHS         -048j    1
      INTEGER          FILEHR                                                   /NHRSHR/ 3
      COMMON  /PTRBGN/ IWFB, IWPB, ICONSB, IGTB, IWLB, IGEOB, ISHADB,           /PTRBGN/ 2
     &                 IWINB, IDRB, IEWB, IUGB, ISPB, IIWPB, IIWB,              /PTRBGN/ 3
     &                 IFLB, ISPCDB, IOTHB, ILHB, IZQCMB, ISSHDB,               /PTRBGN/ 4
     &                 IOHFIB, IZLSK, IZLSL, ISTFB, ILSSH                       PV2      1
      COMMON  /PTRPLT/ Ipm,Ilp,Ich,Ibl,Idw,Itw,Ipv,Ign,Itk,Ihx,                 PV       1
     &                 Iec,Ilm,Iem,Ifm,Ism,Icm,Imm,Imc,Igl,Isp2,                XFC2     1
     &                 Ispare(5),  Ipe,                                         HVAC19   3
     &                 Npm,Nlp,Nch,Nbl,Ndw,Ntw,Npv,Ngn,Ntk,Nhx,                 PV       2
     &                 Nec,Nlm,Nem,Nfm,Nsm,Ncm,Nmm,Nmc,Ngl,Nsp2,                XFC2     2
     &                 Nspare(5),  Npe,                                         HVAC19   6
     &                 Lpm,Llp,Lch,Lbl,Ldw,Ltw,Lpv,Lgn,Ltk,Lhx,                 PV       3
     &                 Lec,Llm,Lem,Lfm,Lsm,Lcm,Lmm,Lmc,Lgl,Lsp2,                XFC2     3
     &                 Lspare(5),  Lpe,                                         HVAC19   9
     &                 Jpm,Jlp,Jch,Jbl,Jdw,Jtw,Jpv,Jgn,Jtk,Jhx,                 PV       4
     &                 Jec,Jlm,Jem,Jfm,Jsm,Jcm,    Jmc,Jgl,                     HVAC19  11
     &                 Jpe, kpr, NumMeters, NumIntHX                            XFC1     1
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      COMMON  /REPORT/ IREPRT(4,37),IPRG,IUNIQV(100),IUNIQS(100),IUNIQL         HVAC14   4
      COMMON  /TIME  / IDOY, IYR, IMO, IDAY, IHR,                               Time     4
     &                 ISCMO, ISCDAY, ISCHR, IDOW, ISCDOW, iDSdates(6),         -044e5   1
     &                 iTimeFlg, iDSFlg, iDDFlg, InitialFlg, LeapYr,            Time     6
     &                 CLOCK(10), MONDSC(13), MONLEN(12), MONSDA(12)            HR      12
      COMMON  /TITLE / TITLE(10,5)                                              /TITLE/  2
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
c                                                                               HRREPS  22
c                                                                               HRREPS  23
c              IVTLIM contains the information needed for the                   HRREPS  24
c              hourly reports                                                   HRREPS  25
c                                                                               HRREPS  26
c              IVTLIM(1,N) = Symbol type from BDL                               HRREPS  27
c              IVTLIM(2,N) = Length of report block buffer                      HRREPS  28
c              IVTLIM(3,N) = Position of pointer to buffer in the               HRREPS  29
c                              component block                                  HRREPS  30
c                                                                               HRREPS  31
      DIMENSION    IVT(3,30),                                                   HRREPS  32
     &             IVT1(3),  IVT2(3),  IVT3(3),  IVT4(3),  IVT5(3),             HRREPS  33
     &             IVT6(3),  IVT7(3),  IVT8(3),  IVT9(3),  IVT10(3),            HRREPS  34
     &             IVT11(3), IVT12(3), IVT13(3), IVT14(3), IVT15(3),            HRREPS  35
     &             IVT16(3), IVT17(3), IVT18(3), IVT19(3), IVT20(3),            HRREPS  36
     &             IVT21(3), IVT22(3), IVT23(3), IVT24(3), IVT25(3),            HRREPS  37
     &             IVT26(3), IVT27(3), IVT28(3), IVT29(3), IVT30(3)             HRREPS  38
c                                                                               HRREPS  39
      EQUIVALENCE (IVT1(1), IVT(1, 1)), (IVT2(1), IVT(1, 2)),                   HRREPS  40
     &            (IVT3(1), IVT(1, 3)), (IVT4(1), IVT(1, 4)),                   HRREPS  41
     &            (IVT5(1), IVT(1, 5)), (IVT6(1), IVT(1, 6)),                   HRREPS  42
     &            (IVT7(1), IVT(1, 7)), (IVT8(1), IVT(1, 8)),                   HRREPS  43
     &            (IVT9(1), IVT(1, 9)), (IVT10(1),IVT(1,10)),                   HRREPS  44
     &            (IVT11(1),IVT(1,11)), (IVT12(1),IVT(1,12)),                   HRREPS  45
     &            (IVT13(1),IVT(1,13)), (IVT14(1),IVT(1,14)),                   HRREPS  46
     &            (IVT15(1),IVT(1,15)), (IVT16(1),IVT(1,16)),                   HRREPS  47
     &            (IVT17(1),IVT(1,17)), (IVT18(1),IVT(1,18)),                   HRREPS  48
     &            (IVT19(1),IVT(1,19)), (IVT20(1),IVT(1,20)),                   HRREPS  49
     &            (IVT21(1),IVT(1,21)), (IVT22(1),IVT(1,22)),                   HRREPS  50
     &            (IVT23(1),IVT(1,23)), (IVT24(1),IVT(1,24)),                   HRREPS  51
     &            (IVT25(1),IVT(1,25)), (IVT26(1),IVT(1,26)),                   HRREPS  52
     &            (IVT27(1),IVT(1,27)), (IVT28(1),IVT(1,28)),                   HRREPS  53
     &            (IVT29(1),IVT(1,29)), (IVT30(1),IVT(1,30))                    HRREPS  54
c                                                                               HRREPS  55
c                 For each component:                                           HRREPS  56
c                 Symbol  Length   AA Offset                                    HRREPS  57
      DATA IVT1  / 114,     60,           0 /   ! Global                        HRREPS  58
      DATA IVT2  / 153,     50,           0 /   ! Building Loads                Bug40   27
      DATA IVT3  /  70,     60,    <+MZBUF> /   ! Space                         HRREPS  60
      DATA IVT4  /  20,     20,   <+MEWBUF> /   ! Wall                          HRREPS  61
      DATA IVT5  /  50,     31,   <+MWIBUF> /   ! Window                        -44d5    1
      DATA IVT6  /  55,     10,   <+MDRBUF> /   ! Door                          HRREPS  63
      DATA IVT7  /   0,      0,           0 /   ! Unused                        HRREPS  64
      DATA IVT8  / 152,     10,  <+IPLBUFP> /   ! Building HVAC                 HRREPS  65
      DATA IVT9  / 114,     59,           0 /   ! Global                        HRREPS  66
      DATA IVT10 /  10,    320,  <+ISYBUFP> /   ! System                        -044c  502
      DATA IVT11 /  19,    101,  <+IZNBUFP> /   ! Zone                          -044c  503
      DATA IVT12 /   0,      0,           0 /   ! unused                        HRREPS  69
      DATA IVT13 / 151,      0,           0 /   ! unused                        HRREPS  70
      DATA IVT14 /  62,     50,  <+lp;HREP> /   ! Circulation-Loop              HRREPS  71
      DATA IVT15 /  61,     20,  <+pm;HREP> /   ! Pump                          HRREPS  72
      DATA IVT16 /  63,     36,  <+ch;HREP> /   ! Chiller                       HRREPS  73
      DATA IVT17 /  64,     36,  <+bl;HREP> /   ! Boiler                        HRREPS  74
      DATA IVT18 /  65,     36,  <+dw;HREP> /   ! DW Heater                     HRREPS  75
      DATA IVT19 /  66,     30,  <+tw;HREP> /   ! Cooling Tower                 HRREPS  76
      DATA IVT20 /  67,     20,  <+pv;HREP> /   ! Photovoltaic module           HRREPS  77
      DATA IVT21 /  68,     36,  <+gn;HREP> /   ! Electric generator            HRREPS  78
      DATA IVT22 /  69,     15,  <+tk;HREP> /   ! Thermal storage               HRREPS  79
      DATA IVT23 /  85,     22,  <+em;HREP> /   ! Electric meter                -044    32
      DATA IVT24 /  86,     22,  <+fm;HREP> /   ! Fuel meter                    -044    33
      DATA IVT25 /  87,     21,  <+sm;HREP> /   ! Steam meter                   HRREPS  82
      DATA IVT26 /  88,     21,  <+cm;HREP> /   ! CHW meter                     HRREPS  83
      DATA IVT27 /  92,     20,  <+gl;HREP> /   ! Ground-loop HX                HRREPS  84
      DATA IVT28 /   0,      0,           0 /                                   HRREPS  85
      DATA IVT29 /   0,      0,           0 /                                   HRREPS  86
      DATA IVT30 /   0,      0,           0 /                                   HRREPS  87
c                                                                               HRREPS  88
      INTEGER Global(8), Bldg(8), HVAC(8), Append(2), NAME(8)                   HRREPS  89
      DATA                                                                      HRREPS  90
     & Global /4HGLOB,4HAL  ,4H    ,4H    ,4H    ,4H    ,4H    ,4H    /         HRREPS  91
     & Bldg   /4HBUIL,4HDING,4H-LOA,4HDS  ,4H    ,4H    ,4H    ,4H    /,        HRREPS  92
     & HVAC   /4HBUIL,4HDING,4H-HVA,4HC   ,4H    ,4H    ,4H    ,4H    /,        HRREPS  93
     & Append /4HAPPE,4HNDED/                                                   HRREPS  94
c                                                                               HRREPS  95
      DIMENSION    ITBUFS(12)                                                   HRREPS  96
      EQUIVALENCE (ITBUFS(1), NHRTYP(1))                                        HRREPS  97
      LOGICAL GlobalFound, HRon                                                 -048q    1
      Character  PathName*256                                                   -048n    1
c                                                                               HRREPS  98
c                                                                               HRREPS  99
      SELECT CASE (Mode)                                                        HRREPS 100
c                                                                               HRREPS 101
c                                                                               HRREPS 102
c============= INITIALIZATION ================================================= HRREPS 103
      CASE (0)                                                                  HRREPS 104
c                                                                               HRREPS 105
c              Initialize the hourly report summary statistics buffer           HRREPS 106
c              for day, month, and year.                                        HRREPS 107
c                                                                               HRREPS 108
      IF (NHRItm .EQ. 0)  RETURN                                                HRREPS 109
c                                                                               HRREPS 110
      ISTAPT = IBUFSB                                                           HRREPS 111
      DO  I=1,3                                                                 HRREPS 112
        CALL FILLN( 9E+15, AA(ISTAPT),            NHRItm)                       HRREPS 113
        CALL FILLN(-9E+15, AA(ISTAPT + NHRItm),   NHRItm)                       HRREPS 114
        CALL FILLN(    0., AA(ISTAPT + NHRItm*2), NHRItm)                       HRREPS 115
        ISTAPT = ISTAPT + NHRItm*3                                              HRREPS 116
      ENDDO                                                                     HRREPS 117
c                                                                               HRREPS 118
c                                                                               HRREPS 119
c============= BEGINNING OF HOUR ============================================== HRREPS 120
      CASE (1)                                                                  HRREPS 121
c                                                                               HRREPS 122
c              IRSch is set to a non-zero value if any reports                  HRREPS 123
c              are active this hour                                             HRREPS 124
c                                                                               HRREPS 125
      IF (NHRItm .EQ. 0)  RETURN                                                HRREPS 126
c                                                                               HRREPS 127
      IRSch = 0                                                                 HRREPS 128
c              IRSchT is the flag for each type of report: print,               -041h   19
c              plot, binary, formatted, comma-delimited                         -041h   20
      DO  I=1,5                                                                 -041h   21
        IRSchT(I) = 0                                                           -041h   22
      ENDDO                                                                     -041h   23
                                                                                -048q    2
c     DUMP-OPTIONS   35 DEBUG       Output initialization days too              -048q    3
c                    34 SIMULATION  Output GLHX history                         -048q    4
      HRon = .False.                                                            -048q    5
      IF (IPROG .eq. 1) THEN  ! loads                                           -048q   20
        IF (InitialFlg .gt. 0) THEN      ! initialization day                   -048q   21
          IF (IREPRT(1,35) .ne. 0)       ! debug                                -048q   22
     &      HRon = .True.                                                       -048q   23
        ELSE                             ! des-day or run period                -048q   24
          HRon = .True.                                                         -048q   25
        ENDIF                                                                   -048q   26
      ELSE  ! HVAC                                                              -048q   27
        IF (InitialFlg .gt. 0) THEN      ! initialization day                   -048q   28
          IF (IREPRT(2,35) .ne. 0)       ! debug                                -048q   29
     &      HRon = .True.                                                       -048q   30
        ELSE                             ! des-day or run period                -048q   31
          HRon = .True.                                                         -048q   32
        ENDIF                                                                   -048q   33
      ENDIF                                                                     -048q   34
                                                                                -048q   35
c              Loop thru the reports                                            HRREPS 136
      IF (HRon) THEN                                                            -048q   36
        Jhr = Ihrp                                                              HRREPS 137
        DO  NumHR=1,Nhrp                                                        HRREPS 138
c              Increment schedule count for each category of report             -041f  155
          IF (<hr;BufferLen> .GT. 0)  THEN                                      -041f  156
            iSchV = INT(SchVal(<hr:REPORT-SCH>, 1.))                            -041f  157
            IRSch = IRSch + iSchV                                               -041f  158
            IRSchT(<hr:IOPTION>) = IRSchT(<hr:IOPTION>) + iSchV                 -041f  159
          ENDIF                                                                 -041f  160
          Jhr   = Jhr + Lhrp + <hr;NumBlocks>                                   HRREPS 144
        ENDDO                                                                   HRREPS 145
c              Increment file hour counter.  Used to synchronize                HRREPS 146
c              time in binary hourly report with program time                   HRREPS 147
        FILEHR = FILEHR + 1                                                     HRREPS 148
      ENDIF  ! InitialFlg                                                       HRREPS 149
c                                                                               HRREPS 150
c                                                                               HRREPS 151
c============= END OF HOUR ==================================================== HRREPS 152
      CASE (2)                                                                  HRREPS 153
c                                                                               HRREPS 154
      IF (NHRItm .EQ. 0)  RETURN                                                HRREPS 155
c                                                                               HRREPS 156
c              Skip if reports not active this hour                             HRREPS 157
      IF (IRSch .EQ. 0)  GOTO 29                                                HRREPS 158
c                                                                               HRREPS 159
c              Fill the report buffer with the flag value                       HRREPS 160
      DO  I=ITBUFB(1),ITBUFE(3)                                                 HRREPS 161
        AA(I) = -99999.                                                         HRREPS 162
      ENDDO                                                                     HRREPS 163
c                                                                               HRREPS 164
c              Loop thru the hourly reports                                     HRREPS 165
      Jhr = Ihrp                                                                HRREPS 166
      DO  NumHR=1,Nhrp                                                          HRREPS 167
        SchV = SchVal(<hr:REPORT-SCH>, 1.)                                      HRREPS 168
c              Skip if inactive                                                 HRREPS 169
        IF (<hr;BufferLen> .GT. 0  .AND.  SchV .GT. 0.)  THEN                   HRREPS 170
c              Increment the number of hours this report is active              HRREPS 171
          IF (IREPRT(2,36) .EQ. 0)  <hr;NumHours> = <hr;NumHours> + 1           HRREPS 172
c              Pointer to this report's buffer                                  HRREPS 173
          Iptr = <hr;BufferPtr>                                                 HRREPS 174
c              Loop thru the report blocks                                      HRREPS 175
          NumBlocks = <hr;NumBlocks>                                            HRREPS 176
          DO  JJ=1,NumBlocks                                                    HRREPS 177
c              Pointer to report block                                          HRREPS 178
            Jrb = <hr:REPORT-BLOCK>                                             HRREPS 179
c                Skip if not a legal block for this program                     HRREPS 180
            IF (<rb;BufferPtr> .EQ. 0)  CYCLE                                   HRREPS 181
c                Pointer to the report-block buffer, and number of items        HRREPS 182
            IPTR2    = <rb;BufferPtr> - 1                                       HRREPS 183
            NumItems = <rb;NumItems>                                            HRREPS 184
c                Move data from the report-block buffer to the                  HRREPS 185
c                hourly-report buffer                                           HRREPS 186
            DO  KK=1,NumItems                                                   HRREPS 187
              AA(IPTR) = AA(IPTR2+<rb:VARIABLE-LIST>)                           HRREPS 188
              IPTR = IPTR + 1                                                   HRREPS 189
            ENDDO                                                               HRREPS 190
          ENDDO                                                                 HRREPS 191
        ENDIF                                                                   HRREPS 192
        Jhr = Jhr + Lhrp + <hr;NumBlocks>                                       -041d   36
      ENDDO                                                                     HRREPS 194
c                                                                               HRREPS 195
c              Report schedule flags for hourly-report output                   HRREPS 196
   29 ISTUF(8)  = IRSchT(1) + IRSchT(2)                                         HRREPS 197
      ISTUF(15) = IRSchT(3)                                                     HRREPS 198
      ISTUF(20) = IRSchT(4) + IRSchT(5)                                         HRREPS 199
      CALL STATHR                                                               HRREPS 200
c                                                                               HRREPS 201
c                                                                               HRREPS 202
c============= END OF RUN ===================================================== HRREPS 203
      CASE (6)                                                                  HRREPS 204
c                                                                               HRREPS 205
      IF (NHRItm .EQ. 0)  RETURN                                                HRREPS 206
c                                                                               HRREPS 207
c              Write last record for hourly-report file                         HRREPS 208
      WRITE (IHRREP(1)) 0, 0, 0, 0, 1, 0                                        HRREPS 209
      REWIND (IHRREP(1))                                                        HRREPS 210
c              Place a EOF flag on the other HR files                           HRREPS 211
      IF (NHRTYP(2) .GT. 0)  THEN                                               HRREPS 212
        WRITE(IHRREP(2)) 0, 0, 0, 0, 1, 0                                       HRREPS 213
        CLOSE(IHRREP(2))                                                        HRREPS 214
      ENDIF                                                                     HRREPS 215
      IF (NHRTYP(3) .GT. 0)  THEN                                               HRREPS 216
        WRITE(IHRREP(3),'(1X,3I2)') 0, 0, 0                                     HRREPS 217
        CLOSE(IHRREP(3))                                                        HRREPS 218
      ENDIF                                                                     HRREPS 219
c              Get hours for each hourly-report.  Count only those that         HRREPS 220
c              print or plot                                                    HRREPS 221
      NUM    = 0                                                                HRREPS 222
      NUMTOT = 0                                                                HRREPS 223
      Jhr    = Ihrp                                                             HRREPS 224
      DO  NumHR=1,Nhrp                                                          HRREPS 225
        IF (<hr;BufferLen> .GT. 0  .AND.  <hr:IOPTION> .LT. 3)  THEN            -041f  161
          NUM         = NUM + 1                                                 HRREPS 227
          NHRSHR(NUM) = <hr;NumHours>                                           HRREPS 228
          NUMTOT      = NUMTOT + <hr;NumHours>                                  HRREPS 229
        ENDIF                                                                   HRREPS 230
        Jhr = Jhr + Lhrp + <hr;NumBlocks>                                       HRREPS 231
      ENDDO                                                                     HRREPS 232
c                                                                               HRREPS 233
c              Set hourly report print flag                                     HRREPS 234
      IF (Nhrp .GT. 0  .AND.  NUMTOT .GT. 0)  THEN                              HRREPS 235
        IRPFLG(2) = NHRTYP(1)                                                   HRREPS 236
      ELSE                                                                      HRREPS 237
        IRPFLG(2) = 0                                                           HRREPS 238
      ENDIF                                                                     HRREPS 239
c                                                                               HRREPS 240
      IF(IREPRT(2,34) .NE. 0)                                                   HRREPS 241
     &                CALL DUMPIT(20HNHRSHR                ,NHRSHR,Nhrp)        HRREPS 242
c                                                                               HRREPS 243
c                                                                               HRREPS 244
c============= ATTACHMENTS ==================================================== HRREPS 245
      CASE (201,202)                                                            HRREPS 246
c                                                                               HRREPS 247
      REWIND IHRREP(1)                                                          HRREPS 248
c                                                                               HRREPS 249
c              Initialization                                                   -041f  162
      DO  I=1,12                                                                -041f  163
        ITBUFS(I) = 0                                                           -041f  164
      ENDDO                                                                     -041f  165
      DO  I=1,90                                                                -041f  166
        IVTLIM(I,1) = IVT(I,1)                                                  -041f  167
      ENDDO                                                                     -041f  168
      IRSch  = 0                                                                -041f  169
c              Pointers to non-component specific report blocks                 -041f  170
      IGRPTR = 0                                                                -041f  171
      IBRPTR = 0                                                                -041f  172
c              Binary file hour counter, and end of file flag                   -041f  173
      FILEHR = 0                                                                -041f  174
      IHREOF = 0                                                                -041f  175
c              Total number of items in all printed hourly reports              -041f  176
      NHRItm = 0                                                                -041f  177
c              Number of comma delimited blocks                                 -041f  178
      ICDFLG = 0                                                                -041f  179
      IAPFLG = 0                                                                -041f  180
c              Statistics tracking array                                        -041f  181
      DO  I=1,640                                                               -048j    8
        IHRCTR(I,1) = 0                                                         -041f  183
      ENDDO                                                                     -041f  184
c                                                                               -041f  187
c              Set up the report blocks                                         -041f  188
      Jrb = Irb                                                                 -041f  189
      DO  NumRB=1,Nrb                                                           -041f  190
c              Get the pointer to the report-block's component, and             -041f  194
c              index into IVTLIM (Jivtlim)                                      -041f  195
        Call ComponentPtr                                                       -048   126
        IF (Jcomponent .EQ. -1)  THEN                                           -041f  197
c              this block not active in this program module                     -041f  198
          <rb;BufferLen> = 0                                                    -041f  199
          <rb;BufferPtr> = 0                                                    -041f  200
          GOTO 2001                                                             -041f  201
        ENDIF                                                                   -041f  202
c              Buffer length                                                    -041f  203
        <rb;BufferLen> = IVTLIM(2,Jivtlim)                                      -041f  204
c              pointer to the component's report block index                    -041f  205
        IPTR = Jcomponent + IVTLIM(3,Jivtlim)                                   -041f  206
        IF (IA(IPTR) .EQ. 0)  THEN                                              -041f  207
c              Create the component buffer                                      -041f  208
          <rb;BufferPtr> = NewBlockPtr(<rb;BufferLen>)                          -041f  209
          IA(IPTR) = <rb;BufferPtr>                                             -041f  210
        ELSE                                                                    -041f  211
c              Component buffer already exists                                  -041f  212
          <rb;BufferPtr> = IA(IPTR)                                             -041f  213
        ENDIF                                                                   -041f  214
c              Increment Jrb to point to the next block                         -041f  215
 2001   Jrb = Jrb + Lrb + <rb;NumItems>                                         -041f  216
      ENDDO  ! NumRB                                                            -041f  217
c                                                                               -041f  218
c              Make global and building pointers point to buffer                -041f  219
      IF (IGRPtr .GT. 0)  IGRPtr = IA(IGRPtr)                                   -041f  220
      IF (IBRPtr .GT. 0)  IBRPtr = IA(IBRPtr)                                   -041f  221
c                                                                               -041f  259
c              Set up HOURLY-REPORT buffers                                     -041f  260
c              hr:IOPTIONS determines type of report:                           -041f  261
c                  1  printed                                                   -041f  262
c                  2  plotted                                                   -041f  263
c                  3  binary file                                               -041f  264
c                  4  formatted file                                            -041f  265
c                  5  comma delimited formatted file                            -041f  266
c              Types 4 & 5 are included here while not yet implemented          -041f  267
c              Types 1 & 2 are in the same hourly report buffer (IT=1),         -041f  268
c              Types 4 & 5 are in the same buffer (IT=3)                        -041f  269
c              Type 3 is separate (IT=2)                                        -041f  270
c                                                                               -041f  271
      Jhr = Ihrp                                                                -041f  272
      DO  NumHR=1,Nhrp                                                          -041f  273
c              Convert schedule number to schedule pointer                      -041f  274
c              ?? temporary IF check until loads/sys merger                     -041f  275
        IF (Mode .EQ. 201)  <hr:REPORT-SCH> = Jsched(<hr:REPORT-SCH>)           -041f  276
c              Initialize buffer length and number of report hours              -041f  277
        <hr;BufferLen> = 0                                                      -041f  278
        <hr;NumHours>  = 0                                                      -041f  279
c              Loop thru this report's report blocks                            -041f  280
        NumActive   = 0                                                         -048q   37
        GlobalFound = .False.                                                   -048q   38
        DO  JJ=1,<hr;NumBlocks>                                                 -048q   39
          Jrb = <hr:REPORT-BLOCK>                                               -048q   40
c              Increment buffer length by length of items in block              -048q   41
          IF (<rb;BufferPtr> .gt. 0) THEN                                       -048q   42
            NumActive      = NumActive + 1                                      -048q   43
            <hr;BufferLen> = <hr;BufferLen> + <rb;NumItems>                     -048q   44
            IF (<rb;SymbolType> .eq. 114)  GlobalFound = .True.                 -048q   45
          ENDIF                                                                 -048q   46
        ENDDO  ! JJ                                                             -048q   47
c              Global report-block by itself prints with loads;                 -048q   48
c              global block with others prints only when at least               -048q   49
c              one other block is active                                        -048q   50
        IF (GlobalFound  .and.  NumActive .eq. 1) THEN                          -048q   51
cxx          IF (Mode .eq. 202  .or.                                            -048q   52
cxx     &       (Mode .eq. 201  .and.  <hr;NumBlocks> .gt. 1))                  -048q   53
          IF (Mode .eq. 202)  <hr;BufferLen> = 0                                -048q   54
        ENDIF                                                                   -048q   55
c              Report is enabled only if it has active blocks in this           -041f  287
c              simulation module (LOADS, HVAC)                                  -041f  288
        IF (<hr;BufferLen> .GT. 0)  THEN                                        -041f  289
c              Report category                                                  -041f  290
          IOPT = <hr:IOPTION>                                                   -041f  291
          IF (IOPT .EQ. 5) ICDFLG = 1                                           -041f  292
          IF (IOPT .LT. 3) IOPT = 1                                             -041f  293
          IF (IOPT .EQ. 3) IOPT = 2                                             -041f  294
          IF (IOPT .GT. 3) IOPT = 3                                             -041f  295
c              number of each type of hourly report                             -041f  296
          NHRTYP(IOPT) = NHRTYP(IOPT) + 1                                       -041f  297
c                if this binary output is to be appended to existing file       -041f  298
c                then set flag                                                  -041f  299
          IF(IOPT .EQ. 2)  THEN                                                 -041f  300
            II = 1                                                              -041f  301
            IF (<hr:NAME> .EQ. Append(II))  THEN                                -041f  302
              II = 2                                                            -041f  303
              IF (<hr:NAME> .EQ. Append(II))  IAPFLG = 1                        -041f  304
            ENDIF                                                               -041f  305
          ENDIF                                                                 -041f  306
        ENDIF  ! hr;BufferLen                                                   -041f  307
        Jhr = Jhr + Lhrp + <hr;NumBlocks>                                       -041f  308
      ENDDO  ! NumHR                                                            -041f  309
c                                                                               -041f  310
c              Now open the output files for each category of report            -041f  311
c              and write header records                                         -041f  312
#ifdef _DLL                                                                  /* -048n    2 */ 
      IF (NHRTYP(2) .GT. 0)  THEN                                               -048n    3
        IF( IAPFLG .EQ. 0)  THEN                                                -048n    4
          OPEN( IHRREP(2), FILE='HRPLDS01.BIN', FORM   = 'UNFORMATTED'          -048n    5
     1                                        , STATUS = 'UNKNOWN' )            -048n    6
          REWIND IHRREP(2)                                                      -048n    7
        ELSE                                                                    -048n    8
          OPEN( IHRREP(2), FILE='HRPLDS01.BIN', FORM   = 'UNFORMATTED'          -048n    9
     1                   , ACCESS='APPEND'    , STATUS = 'UNKNOWN' )            -048n   10
        ENDIF                                                                   -048n   11
      ENDIF                                                                     -048n   12
      IF( NHRTYP(3) .GT. 0)  THEN                                               -048n   13
c            Header records and write format should be built here               -048n   14
        OPEN( IHRREP(3), FILE='HRPSYS01.FMT', FORM   = 'FORMATTED'              -048n   15
     1                                      , STATUS = 'UNKNOWN' )              -048n   16
        REWIND IHRREP(3)                                                        -048n   17
      ENDIF                                                                     -048n   18
#else                                                                        /* -048n   19 */ 
      IF (NHRTYP(2) .GT. 0)  THEN                                               -048n   20
        IF( IAPFLG .EQ. 0)  THEN                                                -048n   21
          OPEN( IHRREP(2), FILE=PathName('HRPLDS01.BIN'),                       -048n   22
     &                     FORM = 'UNFORMATTED', STATUS = 'UNKNOWN' )           -048n   23
          REWIND IHRREP(2)                                                      -048n   24
        ELSE                                                                    -048n   25
          OPEN( IHRREP(2), FILE=PathName('HRPLDS01.BIN'),                       -048n   26
     &                     FORM = 'UNFORMATTED',                                -048n   27
     1                     ACCESS='APPEND', STATUS = 'UNKNOWN' )                -048n   28
        ENDIF                                                                   -048n   29
      ENDIF                                                                     -048n   30
      IF( NHRTYP(3) .GT. 0)  THEN                                               -048n   31
c            Header records and write format should be built here               -048n   32
        OPEN( IHRREP(3), FILE=PathName('HRPSYS01.FMT'),                         -048n   33
     &                   FORM = 'FORMATTED', STATUS = 'UNKNOWN' )               -048n   34
        REWIND IHRREP(3)                                                        -048n   35
      ENDIF                                                                     -048n   36
#endif                                                                       /* -048n   37 */ 
c                                                                               -041f  329
c              Index for printed reports statistics array                       -041f  330
      IPRINT = 0                                                                -041f  331
c              Process option types into the 3 buffers                          -041f  332
c              IT = 1: normal   2: binary   3: formatted                        -041f  333
      DO  IT=1,3                                                                -041f  334
c              Initialize beginning of buffer                                   -041f  335
        ITBUFB(IT) = IAX + 1                                                    -041f  336
c              If no report of this type, create a buffer of 1 and skip         -041f  337
        IF (NHRTYP(IT) .EQ. 0)  THEN                                            -041f  338
          ITBUFB(IT) = NewBlockPtr(1)                                           -041f  339
          ITBUFE(IT) = ITBUFB(IT)                                               -041f  340
          CYCLE                                                                 -041f  341
        ENDIF                                                                   -041f  342
c              Write header record for this report                              -041f  343
        WRITE (IHRREP(IT))  NHRTYP(IT),IPROG,(CLOCK(I),I=1,8),VERS,             -041f  344
     $                      TITLE,NRUNPD,IRUNPD,IWDID                           -041f  345
c              Loop through HOURLY-REPORTS and find types that match            -041f  346
c              this category                                                    -041f  347
        Jhr = Ihrp                                                              -041f  348
        DO  NumHR=1,Nhrp                                                        -041f  349
          IF (<hr;BufferLen> .EQ. 0)  GOTO 2002                                 -041f  350
          IOPT      = <hr:IOPTION>                                              -041f  351
          IF (IOPT .LT. 3) IOPT = 1                                             -041f  352
          IF (IOPT .EQ. 3) IOPT = 2                                             -041f  353
          IF (IOPT .GT. 3) IOPT = 3                                             -041f  354
          IF (IOPT .NE. IT)  GOTO 2002                                          -041f  355
c              Number of active blocks                                          -041f  356
          NumActive = 0                                                         -041f  357
          DO  JJ=1,<hr;NumBlocks>                                               -041f  358
            Jrb = <hr:REPORT-BLOCK>                                             -041f  359
            IF (<rb;BufferPtr> .GT. 0)  NumActive = NumActive + 1               -041f  360
          ENDDO                                                                 -041f  361
          JJ = <+hr:REPORT-SCH> + 1                                             -041f  362
          WRITE (IHRREP(IT))  (<hr:NAME>, II=1,JJ), NumActive                   -041f  363
c              Loop thru report-blocks                                          -041f  364
          DO  JJ=1,<hr;NumBlocks>                                               -041f  365
            Jrb = <hr:REPORT-BLOCK>                                             -041f  366
            IF (<rb;BufferPtr> .EQ. 0)  CYCLE                                   -041f  367
c              Get pointer to block's component                                 -041f  368
            Call ComponentPtr                                                   -048   128
c              save name                                                        -041f  370
            SELECT CASE (Jivtlim)                                               -041f  371
              CASE (1,9)  ! Global                                              -041f  372
                DO  II=1,8                                                      -041f  373
                  NAME(II) = Global(II)                                         -041f  374
                ENDDO                                                           -041f  375
              CASE (2)  ! Building                                              -041f  376
                DO  II=1,8                                                      -041f  377
                  NAME(II) = Bldg(II)                                           -041f  378
                ENDDO                                                           -041f  379
              CASE (8)  ! Building HVAC                                         -041f  380
                DO  II=1,8                                                      -041f  381
                  NAME(II) = HVAC(II)                                           -041f  382
                ENDDO                                                           -041f  383
              CASE DEFAULT                                                      -041f  384
                DO  II=1,8                                                      -041f  385
                  NAME(II) = IA(Jcomponent+II-1)                                -041f  386
                ENDDO                                                           -041f  387
            END SELECT                                                          -041f  388
c              Add IPROG*1000 so HRP program can decode data source             -041f  389
            iSymbol = <rb;SymbolType> + IPROG*1000                              -041h   36
c              Write block header record                                        -041f  392
            NumItems = <rb;NumItems>                                            -041f  393
            WRITE (IHRREP(IT))  NAME, iSymbol, NumItems,                        -041h   37
     &                         (<rb:VARIABLE-LIST>,KK=1,NumItems)               -041f  395
          ENDDO  ! JJ                                                           -041f  396
c              Create the hourly-report buffer                                  -041f  397
          <hr;BufferPtr> = NewBlockPtr(<hr;BufferLen>)                          -041f  398
c              Increment total H-R buffer length for this hr:IOPTION            -041f  399
          ITBUF(IT) = ITBUF(IT) + <hr;BufferLen>                                -041f  400
c                                                                               -041f  401
c              Total number of items and hourly reports that will print or plot -041f  402
          IF (IT .EQ. 1)  THEN                                                  -041f  403
            NHRItm           = NHRItm + <hr;BufferLen>                          -041f  404
            IPRINT           = IPRINT + 1                                       -041f  405
            IHRCTR(1,IPRINT) = <hr;BufferLen>                                   -041f  406
          ENDIF                                                                 -041f  407
 2002     Jhr = Jhr + Lhrp + <hr;NumBlocks>                                     -041f  408
        ENDDO  ! NumHR                                                          -041f  409
c              Set pointer to end of hourly-rep buffer of this hr:IOPTION type  -041f  410
        ITBUFE(IT) = IAX                                                        -041f  411
      ENDDO  ! IT                                                               -041f  412
c                                                                               HRREPS 440
c              Create the buffer for the hourly-report summary statistics       HRREPS 441
c              Compute the length - equals the total number of items in         HRREPS 442
c              all reports * 3 statistics per item * 3 time periods             HRREPS 443
c              (day, month, and year)                                           HRREPS 444
      IBUFSL = NHRItm*9                                                         HRREPS 445
c              Beginning and end of buffer                                      HRREPS 446
      IBUFSB = NewBlockPtr(IBUFSL)                                              HRREPS 447
      IBUFSE = IAX                                                              HRREPS 448
c                                                                               HRREPS 449
c              Initialize hourly reports                                        HRREPS 450
      DO  I=1,20                                                                HRREPS 451
        ISTUF(I) = 0                                                            HRREPS 452
      ENDDO                                                                     HRREPS 453
      ISTUF(1)  = Ihrp                                                          HRREPS 454
      ISTUF(2)  = NHRTYP(1)                                                     HRREPS 455
      ISTUF(3)  = Lhrp                                                          HRREPS 456
      ISTUF(4)  = ITBUFB(1)                                                     HRREPS 457
      ISTUF(5)  = ITBUFE(1)                                                     HRREPS 458
      ISTUF(6)  = ITBUF(1)                                                      HRREPS 459
      ISTUF(7)  = IBUFSB                                                        HRREPS 460
      ISTUF(10) = ICDFLG                                                        HRREPS 461
      ISTUF(11) = NHRTYP(2)                                                     HRREPS 462
      ISTUF(12) = ITBUFB(2)                                                     HRREPS 463
      ISTUF(13) = ITBUFE(2)                                                     HRREPS 464
      ISTUF(14) = ITBUF(2)                                                      HRREPS 465
      ISTUF(16) = NHRTYP(3)                                                     HRREPS 466
      ISTUF(17) = ITBUFB(3)                                                     HRREPS 467
      ISTUF(18) = ITBUFE(3)                                                     HRREPS 468
      ISTUF(19) = ITBUF(3)                                                      HRREPS 469
c                                                                               HRREPS 470
c                                                                               HRREPS 471
      END SELECT  ! Mode                                                        HRREPS 472
c                                                                               HRREPS 473
      RETURN                                                                    HRREPS 474
c                                                                               HRREPS 475
c                                                                               HRREPS 476
      CONTAINS                                                                  -048   129
c=============== ComponentPtr ================================================= -048   130
      Subroutine ComponentPtr                                                   -048   131
c                                                                               HRREPS 479
c              Calculates the pointer to the component for a                    HRREPS 480
c              report block, and the index into IVTLIM                          HRREPS 481
c                                                                               HRREPS 482
c              Find this variable-type in IVTLIM                                HRREPS 483
        Jivtlim = 0                                                             HRREPS 484
        DO  I=1,30                                                              HRREPS 485
          IF (IVTLIM(1,I) .EQ. 0  .OR.                                          HRREPS 486
     &                          <rb;SymbolType> .NE. IVTLIM(1,I))  CYCLE        HRREPS 487
c              ?? temporary until loads/sys merger                              HRREPS 488
          IF ((Mode .EQ. 201  .AND.  I .GT. 6)  .OR.                            HRREPS 489
     &        (Mode .EQ. 202  .AND.  I .LT. 8))  CYCLE                          HRREPS 490
          Jivtlim = I                                                           HRREPS 491
          EXIT                                                                  HRREPS 492
        ENDDO                                                                   HRREPS 493
c                                                                               HRREPS 494
      SELECT CASE (Jivtlim)                                                     HRREPS 495
        CASE (1,9)                                    ! Global                  HRREPS 496
          GlobalFound = .TRUE.                                                  Bug40   79
          Jcomponent  = 0                                                       Bug40   80
c              Set global pointer                                               Bug40   81
          IF (IGRPTR .EQ. 0)  THEN                                              Bug40   82
            IGRPtr      = NewBlockPtr(1)                                        Bug40   83
            IVTLIM(3,1) = IGRPtr                                                Bug40   84
            IVTLIM(3,9) = IGRPtr                      ! ??temporary             Bug40   85
          ENDIF                                                                 HRREPS 502
        CASE (2)                                      ! Building                HRREPS 503
          Jcomponent = 0                                                        Bug40   86
c              Set building pointer                                             HRREPS 504
          IF (IBRPTR .EQ. 0)  THEN                                              Bug40   87
            IBRPtr      = NewBlockPtr(1)                                        Bug40   88
            IVTLIM(3,2) = IBRPtr                                                Bug40   89
          ENDIF                                                                 Bug40   90
        CASE (3)                                      ! Space                   HRREPS 507
          Jcomponent = ISPB   + (<rb:VARIABLE-TYPE>-1)*MZLEN                    HRREPS 508
        CASE (4)                                      ! Exterior wall           HRREPS 509
          Jcomponent = IEWB   + (<rb:VARIABLE-TYPE>-1)*MXLEN                    HRREPS 510
        CASE (5)                                      ! Window                  HRREPS 511
          Jcomponent = IWINB  + (<rb:VARIABLE-TYPE>-1)*MWNLEN                   HRREPS 512
        CASE (6)                                      ! Door                    HRREPS 513
          Jcomponent = IDRB   + (<rb:VARIABLE-TYPE>-1)*MDRLEN                   HRREPS 514
        CASE (7)                                                                HRREPS 515
        CASE (8)                                      ! Bldg HVAC               HRREPS 516
          Jcomponent = KPR                                                      HRREPS 517
        CASE (10)                                     ! System                  HRREPS 518
          Jcomponent = IS     + (<rb:VARIABLE-TYPE>-1)*NSS                      HRREPS 519
        CASE (11)                                     ! Zone                    HRREPS 520
          Jcomponent = IZ     + (<rb:VARIABLE-TYPE>-1)*NCZD                     HRREPS 521
        CASE (12)                                     ! unused                  HRREPS 522
        CASE (13)                                     ! unused                  HRREPS 523
        CASE (14)                                     ! Circulation loop        HRREPS 524
          Jcomponent = Ilp    + (<rb:VARIABLE-TYPE>-1)*Llp                      HRREPS 525
        CASE (15)                                     ! Pump                    HRREPS 526
          Jcomponent = Ipm    + (<rb:VARIABLE-TYPE>-1)*Lpm                      HRREPS 527
        CASE (16)                                     ! Chiller                 HRREPS 528
          Jcomponent = Ich    + (<rb:VARIABLE-TYPE>-1)*Lch                      HRREPS 529
        CASE (17)                                     ! Boiler                  HRREPS 530
          Jcomponent = Ibl    + (<rb:VARIABLE-TYPE>-1)*Lbl                      HRREPS 531
        CASE (18)                                     ! DW Heater               HRREPS 532
          Jcomponent = Idw    + (<rb:VARIABLE-TYPE>-1)*Ldw                      HRREPS 533
        CASE (19)                                     ! Tower                   HRREPS 534
          Jcomponent = Itw    + (<rb:VARIABLE-TYPE>-1)*Ltw                      HRREPS 535
        CASE (20)                                     ! Photovoltaic            HRREPS 536
          Jcomponent = Ipv    + (<rb:VARIABLE-TYPE>-1)*Lpv                      HRREPS 537
        CASE (21)                                     ! Elec generator          HRREPS 538
          Jcomponent = Ign    + (<rb:VARIABLE-TYPE>-1)*Lgn                      HRREPS 539
        CASE (22)                                     ! Thermal Storage         HRREPS 540
          Jcomponent = Itk    + (<rb:VARIABLE-TYPE>-1)*Ltk                      HRREPS 541
        CASE (23)                                     ! Elec meter              HRREPS 542
          Jcomponent = Iem    + (<rb:VARIABLE-TYPE>-1)*Lem                      HRREPS 543
        CASE (24)                                     ! Fuel meter              HRREPS 544
          Jcomponent = Ifm    + (<rb:VARIABLE-TYPE>-1)*Lfm                      HRREPS 545
        CASE (25)                                     ! Steam meter             HRREPS 546
          Jcomponent = Ism    + (<rb:VARIABLE-TYPE>-1)*Lsm                      HRREPS 547
        CASE (26)                                     ! CHW meter               HRREPS 548
          Jcomponent = Icm    + (<rb:VARIABLE-TYPE>-1)*Lcm                      HRREPS 549
        CASE (27)                                     ! Ground loop HX          HRREPS 550
          Jcomponent = Igl    + (<rb:VARIABLE-TYPE>-1)*Lgl                      HRREPS 551
        CASE DEFAULT                                                            HRREPS 552
          Jcomponent = -1                                                       Bug40   91
      END SELECT  ! Jivtlim                                                     HRREPS 554
c                                                                               HRREPS 555
      End Subroutine ComponentPtr                                               -048   132
c                                                                               HRREPS 557
      END                                                                       HRREPS 558
      SUBROUTINE HPUNIT( TLOAD, HPCAPT, LSR2, LSR3, HPKW, SLOADY, xmult)        HPUNIT   2
C                                                                               HPUNIT   3
C              ROUTINE TO SIMULATE AIR TO AIR HEAT-PUMP                         HPUNIT   4
C                                                                               HPUNIT   5
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                 IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                        /FILES/  3
     2               , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                   /FILES/  4
     3                 IHRREP(3), IHRPAS(2)                                     /FILES/  5
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      COMMON  /ENDUSE/ SUPPKW, HEATKW                                           HVAC27   1
      common  /FNSYS/  ISKIPS, MSYSF(120)                                       /FNSYS/  2
      COMMON  /HRCNT/   IHOURM, IHOURY,   IDAY1, IDAY2, IMON1,  IMON2           /HRCNT/  2
      COMMON  /FZZZ1/   CAPXXX, CORINX, CWIDTX, ERMNXX, ERMXXX, FTDEVX          /FZZZ1/  2
     1                , FXXXXX, HEIGHX, HEXXXX, HPCAPX, HPKWXX, IFLGXX          /FZZZ1/  3
     2, IFUELX, ISHXXX, LSR2XX, LSR3XX, PATMXX, PLRXXX, PLSXXX, POMXXX          /FZZZ1/  4
     3, QHFXXX, QMULTX, QNOWXX, SLOADX, TAPPXX, TGINXX, TLOADX, TNOWXX          /FZZZ1/  5
     4, TSETXX, TWOUTX, UCHANX, ICALLX                                          /FZZZ1/  6
      REAL              LSR2XX, LSR3XX                                          /FZZZ1/  7
      COMMON  /MISCD / TEMPS(4,9999),CONS(5),TEMPSL(9999),                      -048a   10
     1                 BLDGQH,BLDGQC,BLDGQL,BLDGP,BPMULT,                       /MISCD/  3
     $                 DBTMIN,DBTMAX,WMIN,WMAX,NSPZ(9999),                      -048a   11
     3                 DQ, DTP, DTR, DTS, FPI, PLRCC , POM, TC2, TDM,           /MISCD/  5
     4                 TRA,WCOL,WCOLM,WMM,YPI,KWBTU,BTUKW,UNFILD,Unusedm        RemPA   45
      REAL             KWBTU                                                    /MISCD/  7
      COMMON  /SYSTD / TH,TC,TM,TR,QH,QC,QHZ,QCZ,QHB,QHP,QHUM,                  /SYSTD/  2
     1                 QDHUM,TCMIN,THMAX,QLSUM,QPSUM,CFM,CFMH,CFMC,             /SYSTD/  3
     2                 RCFM,ECFM,CINF,FON,HON,CON,BON,SCONS(3),PH,PC,           /SYSTD/  4
     3                 SKW,FANKW,unused1,WR,WM,WCOIL,WW,PO,D,                   -046f    1
     4                 FTEMP,TCR,QHR,RfanPumpKW,SGAS,SKWQH,SKWQC,QCLAT,         -131    23
     5                 SFKW,RFKW,FONNGT,WSURF,RWalkinQ,TSURF,TRh,               -131    24
     6                 CBF,CBF1,CBF2,EON,PLRCFM,PLRC,PLRH,QCM1,                 /SYSTD/  8
     7                 QCM2,QHM1,EIRM1,EIRM2,EIR,OFKW,QCT,QCS,                  /SYSTD/  9
     8                 WRMAX,WRMIN,CFMRAT,QdistG,QdistL,RON,QHT,                /SYSTD/ 10
     9                 TPOMIN,POMIN,QHSUP,QRSENS,QRLAT,QRREC,QRREJ,             /SYSTD/ 11
     1                 RCOMKW,RDEFKW,RAUXKW,ECFMP,CFMIN,CINFP,DT,DW,            /SYSTD/ 12
     2                 EWB,IC,NATTSP,Q,RETR,SLOAD,QLSUMP,T,TCHUM,TEND,          /SYSTD/ 13
     3                 TS,hgbmin,HPDefE,EconoOnly,TDuctEnv,                     -044e1   1
     4                 QCUNMT,CapRh,CapRph,CapRc                                HVAC25   3
      REAL             SYSTD(113)                                               HVAC19  13
      EQUIVALENCE      (SYSTD(1),TH)                                            RemPA   65
      COMMON  /TIME  / IDOY, IYR, IMO, IDAY, IHR,                               Time     4
     &                 ISCMO, ISCDAY, ISCHR, IDOW, ISCDOW, iDSdates(6),         -044e5   1
     &                 iTimeFlg, iDSFlg, iDDFlg, InitialFlg, LeapYr,            Time     6
     &                 CLOCK(10), MONDSC(13), MONLEN(12), MONSDA(12)            HR      12
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON /SHP   / QCRUN,QCLOAD,QCGAS,QCAUX,QCGSLD,QCGSUP,                   /SHP/    2
     1                QCWAS,QCWASU,QCGSAV,QCFAN,                                /SHP/    3
     2                QHRUN,QHLOAD,QHGAS,QHAUX,QHGSLD,QHGSUP,                   /SHP/    4
     3                QHWAS,QHWASU,QHGDFR,QHFAN,          CUR(25),              /SHP/    5
     4                GSAV1,GASV2,PCH,ISZCZ,GCAP(2),GEDB,QHDFRG,                -044c1   1
     5                GRPM,PLRSUP,CFMCYC,CLPLR,CFMVVT,QHZHP,PCCEDB,             /SHP/    7
     6                IHPREP,IHPOUT,IHPHRR,IHPHRN,IRST,IREN                     /SHP/    8
      COMMON /SHPZ  / QCRUNZ,QCLOADZ,QCGASZ,QCAUXZ,QCGSLDZ,QCGSUPZ,             /SHP/    9
     1                QCWASZ,QCWASUZ,QCGSAVZ,QCFANZ,                            /SHP/   10
     2                QHRUNZ,QHLOADZ,QHGASZ,QHAUXZ,QHGSLDZ,QHGSUPZ,             /SHP/   11
     3                QHWASZ,QHWASUZ,QHGDFRZ,QHFANZ                             /SHP/   12
      DIMENSION       SHP(60),SHPZ(20)                                          /SHP/   13
      EQUIVALENCE     (SHP,QCRUN),(SHPZ,QCRUNZ)                                 /SHP/   14
     1               ,(DFM1,CUR(18)),(DFM2,CUR(19)),(DFM3,CUR(20))              /SHP/   15
      COMMON /SSPDAT/  PLRCS,QCCKWS,QCCMPS,PLRHS,QHCKWS,QHCMPS                  /SSPDAT/ 2
     $                ,PLRFS,PLRFCS,PLRFHS,sspss                                /SSPDAT/ 3
     $                ,PLRCZ,QCCKWZ,QCCMPZ,PLRHZ,QHCKWZ,QHCMPZ                  /SSPDAT/ 4
     $                ,PLRFZ,PLRFCZ,PLRFHZ,sspsz                                /SSPDAT/ 5
     $                ,ISSPF,IWCCF,IPCCF,SSPSAV                                 /SSPDAT/ 6
      DIMENSION        SSPD(24)                                                 JJHfix   1
      EQUIVALENCE      (SSPD(1),PLRCS)                                          /SSPDAT/ 8
c                                                                               Bug40   92
      LOGICAL NoCapacity                                                        Bug40   93
C                                                                               HPUNIT  18
      REAL LSR2, LSR3                                                           HPUNIT  19
C                                                                               HPUNIT  20
C      INITIALIZE VALUES                                                        HPUNIT  21
      QHR    = 0.0                                                              HPUNIT  22
      QHM1   = 0.0                                                              HPUNIT  23
      SLOADY = 0.0                                                              HPUNIT  24
      QHGSUPZ= 0.0                                                              HPUNIT  25
      HPKW   = 0.0                                                              HPUNIT  26
      TLOADx = TLOAD                                                            HPUNIT  27
      HPDefX = 0.                                                               HPUNIT  28
      HEATKW = 0.                                                               HVAC22  84
      SUPPKW = 0.                                                               HVAC22  85
C     TEST FOR NO LOAD                                                          HPUNIT  29
      IF(TLOAD .GE. -1.0)  GO TO 30                                             HPUNIT  30
      EIR    = 0.0                                                              HPUNIT  31
      EIRM2  = 0.0                                                              HPUNIT  32
      IF (HPCAPT .LT. -10.)  THEN                                               Bug40   94
        NoCapacity = .FALSE.                                                    Bug40   95
      ELSE                                                                      Bug40   96
c              when no capacity defined, assume 50% loaded                      Bug40   97
        NoCapacity = .TRUE.                                                     Bug40   98
        HPCAPT     = TLOAD * 2.                                                 Bug40   99
      ENDIF                                                                     Bug40  100
C       TEST TO SEE IF HEAT-PUMP CAN OPERATE                                    HPUNIT  33
        IF( DBT .ge. <MIN-HP-T> )     then                                      HPUNIT  34
C         TEMPERATURE HIGH ENOUGH FOR HEAT-PUMP TO OPERATE                      HPUNIT  35
          QHM1 = CVAL(<HEAT-CAP-FT>, TM, DBT)                                   -131   222
          QHR = AMIN1(0.0, HPCAPT * QHM1)                                       HPUNIT  37
c              If desuperheater supplying DHW, and there is DHW demand,         DWRECV  63
c              reduce capacity available for space heating                      DWRECV  64
          IF (<HTREC-DW-HEATER> .GT. 0)  THEN                                   DWRECV  65
            QWH  = QHR*LSR3*<HEAT-WASTE-HEAT>*CVAL(<HEAT-WH-FT>,TM,DBT)         DWRECV  66
            Jdw  = <HTREC-DW-HEATER>                                            DWRECV  67
            QWH  = AMAX1(QWH*xmult, <dw;Qask>) / xmult                          DWRECV  68
          ENDIF                                                                 DWRECV  69
c                                                                               HPUNIT  38
c         get defrost adjustment                                                HPUNIT  39
c                                                                               HPUNIT  40
c                                          0.82*dbt - 9.7 =  coil_temp          HPUNIT  41
          deltaw = amax1(1.0E-6,humrat-wfunc(0.82*dbt-9.7, 100., patm))         HPUNIT  42
C$        write(6,'(10x'' DEFROST-CTRL=''i2'' DEFROST-TYPE=''i2                 HPUNIT  43
C$   1             ,'' deltaw=''f8.5'' QHR=''f10.3)')                           HPUNIT  44
C$   2            <DEFROST-CTRL>, <DEFROST-TYPE>, deltaw, QHR                   HPUNIT  45
c                                                                               HPUNIT  46
c                                                                               HPUNIT  47
c-------- DefF : fractional defrost time                                        HPUNIT  48
          DefF = 0.                                                             HPUNIT  49
c-------- HCapF : heating capacity multiplier due to frost or defrosting        HPUNIT  50
          HCapF = 1.                                                            HPUNIT  51
c-------- pwrF  : input   power    multiplier due to frost or defrosting        HPUNIT  52
c--------          Note: avg-input-pwr = inp_pwr(dbt)*pwrF + DefPwr*DefF        HPUNIT  53
          pwrF  = 1.                                                            HPUNIT  54
c--------  estimated heating operation time for adjusting deforst operation time-044b3  35
          PLRHe = TLOADx/AMIN1((QHR*LSR3 - QWH),-1.)                            -044b3  36
          IF(PLRHe .LE. 0.01) PLRHe = 0.0                                       -044b3  37
          PLRHe = AMIN1( 1.,   PLRHe)                                           -044b3  38
c                                                                               HPUNIT  55
          if ( DBT .le. <DEFROST-T> )    then                                   HPUNIT  56
            if( <DEFROST-CTRL> .eq. 1 )    then                                 HPUNIT  57
c                                                                               HPUNIT  58
c------------ defrost-ctrl = TIMED                                              HPUNIT  59
c                                                                               HPUNIT  60
              DefF  = 0.058333*PLRHe                                            -044b3  39
              HCapF = .909 - 107.33*deltaw                                      HPUNIT  62
              pwrF  = .90  -  36.45*deltaw                                      HPUNIT  63
c                                                                               HPUNIT  64
            elseif( <DEFROST-CTRL> .eq. 2 )    then                             HPUNIT  65
c                                                                               HPUNIT  66
c------------ defrost-ctrl = ON-DEMAND                                          HPUNIT  67
c                                                                               HPUNIT  68
              DefF  = (1.0 / ( 1.0  +  0.01446 / deltaw ))*PLRHe                -044b3  40
              HCapF = 0.875 * ( 1. - DefF )                                     HPUNIT  70
              pwrF  = 0.954 * ( 1. - DefF )                                     HPUNIT  71
c                                                                               HPUNIT  72
            endif                                                               HPUNIT  73
c                                                                               HPUNIT  74
          endif                                                                 HPUNIT  75
c                                                                               HPUNIT  76
ccc       write(6,'(10x'' DefF=''f6.3'' HcapF=''f6.3'' pwrF=''f6.3)')           HPUNIT  77
ccc    1                    DefF, HcapF, pwrF                                   HPUNIT  78
          if ( DefF .gt. 0. )    then                                           HPUNIT  79
            if ( <DEFROST-TYPE> .eq. 1 )    then                                HPUNIT  80
c                                                                               HPUNIT  81
c------------ defrost-type = RESISTIVE                                          HPUNIT  82
c                                                                               HPUNIT  83
              DefPwr = <RESIST-CAP-RATIO> * HPCAPT                              HPUNIT  84
              HPDefX = DefPwr * DefF                                            HPUNIT  85
              QHDFRG = HPDefX                                                   HPUNIT  86
c-------- supplemental end-use data                                             HPUNIT  87
              SUPPKW = -HPDefX * KWBTU                                          HPUNIT  88
c                                                                               HPUNIT  89
            elseif ( <DEFROST-TYPE> .eq. 2 )    then                            HPUNIT  90
c                                                                               HPUNIT  91
c------------ defrost-type = REVERSE-CYCLE                                      HPUNIT  92
c                                                                               HPUNIT  93
c------------ add heating load because of defrost                               HPUNIT  94
c                                            clgcap85 =  HPCAPT/1.01667         HPUNIT  95
              TLOADx = TLOADx + 0.01*DefF * (45 - dbt) * HPCAPT/1.01667         HPUNIT  96
              QHGDFR = QHGDFR + 0.01*DefF * (45.- DBT) * HPCAPT/1.01667         HPUNIT  97
     $                              * xmult                                     HPUNIT  98
              DefPwr = CVAL( <COOL-EIR-FT>, amax1(60.,<CL_COIL_EWB>),           HVAC1  282
     $                       amax1(60.,DBT) ) * HPCAPT/1.01667                  HPUNIT 100
              HPDefX = DefPwr * DefF                                            HPUNIT 101
              QHDFRG = HPDefX                                                   HPUNIT 102
              SUPPKW = -HPDefX * KWBTU                                          HPUNIT 103
            else                                                                HPUNIT 104
c             ?? defrost-type = ???                                             HPUNIT 105
              Write(Ioutpt, 9001) <DEFROST-TYPE>,(<SYSTEM-NAME>, ii=1,8)        -048l    5
 9001         Format(' HPUNIT -- bad DEFROST-TYPE =' i3,' in ',8A4)             -048l    6
              <DEFROST-TYPE> = 1                                                HPUNIT 108
            endif                                                               HPUNIT 109
c                                                                               HPUNIT 110
          endif                                                                 HPUNIT 111
c                                                                               HPUNIT 112
          Hcap = (QHR*LSR3 - QWH) * HCapF                                       DWRECV  70
          if ( abs(TLOADx) .gt. abs(Hcap) )    then                             HPUNIT 114
c---------- give remainder to supplemental heater , if operating                HPUNIT 115
            IF( DBT .LE. <MAX-HSUPP-T> )     then                               HPUNIT 116
              SLOADY = AMAX1( <SUPP-HEAT-CAP>, TLOADx - Hcap )                  HPUNIT 117
            else                                                                HPUNIT 118
c------------ ??? insufficient heat source ???                                  HPUNIT 119
            endif                                                               HPUNIT 120
            TLOADx = Hcap                                                       HPUNIT 121
          endif                                                                 HPUNIT 122
c                                                                               HPUNIT 123
c-------- get eir modifiers and eir                                             HPUNIT 124
c                                                                               HPUNIT 125
          PLRH  = TLOADx / Hcap                                                 HPUNIT 126
          EIRM1 = CVAL(<HEAT-EIR-FT>, TM, DBT)                                  -131   223
          EIRM2 = CVAL(<HEAT-EIR-FPLR>, PLRH, PLRH)                             HPUNIT 128
          EIR   = <HEATING-EIR> * EIRM1 * EIRM2 * LSR2                          -039    27
c                                                                               HPUNIT 131
c-------- get electrical consumption                                            HPUNIT 132
c                                                                               HPUNIT 133
          HPKW = - ( QHR*EIR * PwrF  +  DefPwr * DefF )                         HPUNIT 134
c              If desuperheat available for dhw, calc amount                    DWRECV  71
          IF (<HTREC-DW-HEATER> .GT. 0)  THEN                                   DWRECV  72
c              pointer to water heater                                          DWRECV  73
            Jdw = <HTREC-DW-HEATER>                                             DWRECV  74
c              amount available                                                 DWRECV  75
            QHWASZ = TLOADx*<HEAT-WASTE-HEAT>*CVAL(<HEAT-WH-FT>,TM,DBT)         DWRECV  76
            QHWAS  = QHWAS + QHWASZ*xmult                                       DWRECV  77
c              actual amount recovered can't be determined until                DWRECV  78
c              dw-heater is simulated - estimate now for hourly reports         DWRECV  79
            QHWASUZ = AMAX1(QHWASZ*xmult, <dw;Qask>-<dw;Q_RECVR>)               DWRECV  80
            QHWASU  = QHWASU + QHWASUZ                                          DWRECV  81
            QHWASUZ = QHWASUZ / xmult                                           DWRECV  82
c              sum total available for heater                                   DWRECV  83
            <dw;Q_RECVR> = <dw;Q_RECVR> + QHWASZ*xmult                          DWRECV  84
          ENDIF                                                                 DWRECV  85
c-------- end-use data                                                          HPUNIT 135
          HEATKW =  -QHR*EIR * PwrF * KWBTU                                     HPUNIT 136
          IF( IHPREP .NE. 0 ) THEN                                              HPUNIT 137
            QHGAS  = QHGAS  + HPKW*xmult                                        HPUNIT 138
            QHGSLD = QHGSLD + SLOADY*xmult                                      HPUNIT 139
            QHGSUP = QHGSUP + QHGSUPZ*xmult                                     HPUNIT 140
            QHLOAD = QHLOAD + TLOADx*xmult                                      HPUNIT 141
            QHRUN  = QHRUN  + PLRH  *xmult                                      HPUNIT 142
            IF(<DEFROST-TYPE> .eq. 2) THEN                                      HPUNIT 143
              QHRUN  = QHRUN + DefF*xmult                                       HPUNIT 144
            ENDIF                                                               HPUNIT 145
          ENDIF                                                                 HPUNIT 146
          IF( ISSPF .EQ. 1)  THEN                                               HPUNIT 147
            IF(ICODE .EQ. 22)  ZKWHBT = HPKW                                    HPUNIT 148
            PLRHS   = PLRH                                                      HPUNIT 149
            QHCKWS  = - QHR*EIR * PwrF                                          HPUNIT 150
            IF( <DEFROST-TYPE> .EQ. 2 )  QHCKWS = QHCKWS - DefPwr * DefF        HPUNIT 151
            QHCKWS  = QHCKWS * KWBTU                                            HPUNIT 152
            QHCMPS  = TLOADX                                                    HPUNIT 153
          ENDIF                                                                 HPUNIT 154
          HPKW = HPKW*KWBTU                                                     HPUNIT 155
c                                                                               HPUNIT 156
        else                                                                    HPUNIT 157
c                                                                               HPUNIT 158
c-------- heat-pump does not operate, give load to supplemental                 HPUNIT 159
          IF( DBT .LE. <MAX-HSUPP-T> )                                          HPUNIT 160
     1                        SLOADY = AMAX1( <SUPP-HEAT-CAP>,TLOADx )          HPUNIT 161
          IF( IHPREP .ne. 0)  QHGSLD = QHGSLD + SLOADY*xmult                    HPUNIT 162
c                                                                               HPUNIT 163
        endif                                                                   HPUNIT 164
C$    write( 6,'(10x'' HPKW=''f10.3'' HPDefX=''f10.3                            HPUNIT 165
C$   1         '' EIR=''f6.3'' SLOADY=''f10.3'' PLRH=''f6.3)')                  HPUNIT 166
C$   2         HPKW, HPDefX, EIR, SLOADY, PLRH                                  HPUNIT 167
c                                                                               HPUNIT 168
      HPDefE = HPDefE + HPDefX * xmult                                          HPUNIT 169
   30 CONTINUE                                                                  HPUNIT 170
      IF (MSYSF(40) .EQ. 0)  GOTO 40                                            Bug40  101
C********************** run function : HPUNIT-1 ************************        HPUNIT 172
          TLOADX  = TLOAD                                                       HPUNIT 173
          HPCAPX  = HPCAPT                                                      HPUNIT 174
          LSR2XX  = LSR2                                                        HPUNIT 175
          LSR3XX  = LSR3                                                        HPUNIT 176
          HPKWXX  = HPKW                                                        HPUNIT 177
          SLOADX  = SLOADY                                                      HPUNIT 178
           CALL  FINTS( MSYSF(40), 0. )                                         HPUNIT 179
          HPKW    = HPKWXX                                                      HPUNIT 180
          SLOADY  = SLOADX                                                      HPUNIT 181
C*******************************************************************            HPUNIT 182
   40 IF (NoCapacity)  HPCAPT = 0.                                              Bug40  102
      RETURN                                                                    HPUNIT 183
      END                                                                       HPUNIT 184
      Subroutine HP_Water(TLOAD,HPCAPT,LSR2,LSR3,HPKW,SLOADY,Zmult)             HPW      2
                                                                                HPW      3
c              Simulates the heating mode of a water-loop heat pump used        HPW      4
c              in central air handlers.                                         HPW      5
                                                                                HPW      6
C              DEVELOPED BY                                                     -130     1
C                            J. J. Hirsch & S. D. Gates                         -130     2
C                            James J. Hirsch & Associates                       -130     3
C                            Camarillo, California                              -130     4
C              BASED UPON CODE DEVELOPED BY J. J. Hirsch and                    -130     5
C                            W. F. Buhl                                         -130     6
C                            A. E. Erdem                                        -130     7
C                            Lawrence Berkeley National Laboratory              -130     8
C                            University of California                           -130     9
Copyright (c) 1997 by James J. Hirsch. All Rights Reserved. Unpublished         -130    10
c rights reserved under the Copyright Laws of the United States.                -130    11
c RESTRICTED RIGHTS NOTICE: Government use, reproduction or disclosure          -130    12
c is subject to restrictions as set forth in Rights in Data (g)(3) in           -130    13
c UC/LBL purchase order 4607010 with J.J. Hirsch & Associates.                  -130    14
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON  /ENDUSE/ SUPPKW, HEATKW                                           HVAC27   1
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                 IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                        /FILES/  3
     2               , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                   /FILES/  4
     3                 IHRREP(3), IHRPAS(2)                                     /FILES/  5
      common  /FNSYS/  ISKIPS, MSYSF(120)                                       /FNSYS/  2
      COMMON  /MISCD / TEMPS(4,9999),CONS(5),TEMPSL(9999),                      -048a   10
     1                 BLDGQH,BLDGQC,BLDGQL,BLDGP,BPMULT,                       /MISCD/  3
     $                 DBTMIN,DBTMAX,WMIN,WMAX,NSPZ(9999),                      -048a   11
     3                 DQ, DTP, DTR, DTS, FPI, PLRCC , POM, TC2, TDM,           /MISCD/  5
     4                 TRA,WCOL,WCOLM,WMM,YPI,KWBTU,BTUKW,UNFILD,Unusedm        RemPA   45
      REAL             KWBTU                                                    /MISCD/  7
      COMMON  /PTRPLT/ Ipm,Ilp,Ich,Ibl,Idw,Itw,Ipv,Ign,Itk,Ihx,                 PV       1
     &                 Iec,Ilm,Iem,Ifm,Ism,Icm,Imm,Imc,Igl,Isp2,                XFC2     1
     &                 Ispare(5),  Ipe,                                         HVAC19   3
     &                 Npm,Nlp,Nch,Nbl,Ndw,Ntw,Npv,Ngn,Ntk,Nhx,                 PV       2
     &                 Nec,Nlm,Nem,Nfm,Nsm,Ncm,Nmm,Nmc,Ngl,Nsp2,                XFC2     2
     &                 Nspare(5),  Npe,                                         HVAC19   6
     &                 Lpm,Llp,Lch,Lbl,Ldw,Ltw,Lpv,Lgn,Ltk,Lhx,                 PV       3
     &                 Lec,Llm,Lem,Lfm,Lsm,Lcm,Lmm,Lmc,Lgl,Lsp2,                XFC2     3
     &                 Lspare(5),  Lpe,                                         HVAC19   9
     &                 Jpm,Jlp,Jch,Jbl,Jdw,Jtw,Jpv,Jgn,Jtk,Jhx,                 PV       4
     &                 Jec,Jlm,Jem,Jfm,Jsm,Jcm,    Jmc,Jgl,                     HVAC19  11
     &                 Jpe, kpr, NumMeters, NumIntHX                            XFC1     1
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      COMMON /SHP   / QCRUN,QCLOAD,QCGAS,QCAUX,QCGSLD,QCGSUP,                   /SHP/    2
     1                QCWAS,QCWASU,QCGSAV,QCFAN,                                /SHP/    3
     2                QHRUN,QHLOAD,QHGAS,QHAUX,QHGSLD,QHGSUP,                   /SHP/    4
     3                QHWAS,QHWASU,QHGDFR,QHFAN,          CUR(25),              /SHP/    5
     4                GSAV1,GASV2,PCH,ISZCZ,GCAP(2),GEDB,QHDFRG,                -044c1   1
     5                GRPM,PLRSUP,CFMCYC,CLPLR,CFMVVT,QHZHP,PCCEDB,             /SHP/    7
     6                IHPREP,IHPOUT,IHPHRR,IHPHRN,IRST,IREN                     /SHP/    8
      COMMON /SHPZ  / QCRUNZ,QCLOADZ,QCGASZ,QCAUXZ,QCGSLDZ,QCGSUPZ,             /SHP/    9
     1                QCWASZ,QCWASUZ,QCGSAVZ,QCFANZ,                            /SHP/   10
     2                QHRUNZ,QHLOADZ,QHGASZ,QHAUXZ,QHGSLDZ,QHGSUPZ,             /SHP/   11
     3                QHWASZ,QHWASUZ,QHGDFRZ,QHFANZ                             /SHP/   12
      DIMENSION       SHP(60),SHPZ(20)                                          /SHP/   13
      EQUIVALENCE     (SHP,QCRUN),(SHPZ,QCRUNZ)                                 /SHP/   14
     1               ,(DFM1,CUR(18)),(DFM2,CUR(19)),(DFM3,CUR(20))              /SHP/   15
      COMMON /SSPDAT/  PLRCS,QCCKWS,QCCMPS,PLRHS,QHCKWS,QHCMPS                  /SSPDAT/ 2
     $                ,PLRFS,PLRFCS,PLRFHS,sspss                                /SSPDAT/ 3
     $                ,PLRCZ,QCCKWZ,QCCMPZ,PLRHZ,QHCKWZ,QHCMPZ                  /SSPDAT/ 4
     $                ,PLRFZ,PLRFCZ,PLRFHZ,sspsz                                /SSPDAT/ 5
     $                ,ISSPF,IWCCF,IPCCF,SSPSAV                                 /SSPDAT/ 6
      DIMENSION        SSPD(24)                                                 JJHfix   1
      EQUIVALENCE      (SSPD(1),PLRCS)                                          /SSPDAT/ 8
      COMMON  /SYSTD / TH,TC,TM,TR,QH,QC,QHZ,QCZ,QHB,QHP,QHUM,                  /SYSTD/  2
     1                 QDHUM,TCMIN,THMAX,QLSUM,QPSUM,CFM,CFMH,CFMC,             /SYSTD/  3
     2                 RCFM,ECFM,CINF,FON,HON,CON,BON,SCONS(3),PH,PC,           /SYSTD/  4
     3                 SKW,FANKW,unused1,WR,WM,WCOIL,WW,PO,D,                   -046f    1
     4                 FTEMP,TCR,QHR,RfanPumpKW,SGAS,SKWQH,SKWQC,QCLAT,         -131    23
     5                 SFKW,RFKW,FONNGT,WSURF,RWalkinQ,TSURF,TRh,               -131    24
     6                 CBF,CBF1,CBF2,EON,PLRCFM,PLRC,PLRH,QCM1,                 /SYSTD/  8
     7                 QCM2,QHM1,EIRM1,EIRM2,EIR,OFKW,QCT,QCS,                  /SYSTD/  9
     8                 WRMAX,WRMIN,CFMRAT,QdistG,QdistL,RON,QHT,                /SYSTD/ 10
     9                 TPOMIN,POMIN,QHSUP,QRSENS,QRLAT,QRREC,QRREJ,             /SYSTD/ 11
     1                 RCOMKW,RDEFKW,RAUXKW,ECFMP,CFMIN,CINFP,DT,DW,            /SYSTD/ 12
     2                 EWB,IC,NATTSP,Q,RETR,SLOAD,QLSUMP,T,TCHUM,TEND,          /SYSTD/ 13
     3                 TS,hgbmin,HPDefE,EconoOnly,TDuctEnv,                     -044e1   1
     4                 QCUNMT,CapRh,CapRph,CapRc                                HVAC25   3
      REAL             SYSTD(113)                                               HVAC19  13
      EQUIVALENCE      (SYSTD(1),TH)                                            RemPA   65
      COMMON  /TIME  / IDOY, IYR, IMO, IDAY, IHR,                               Time     4
     &                 ISCMO, ISCDAY, ISCHR, IDOW, ISCDOW, iDSdates(6),         -044e5   1
     &                 iTimeFlg, iDSFlg, iDDFlg, InitialFlg, LeapYr,            Time     6
     &                 CLOCK(10), MONDSC(13), MONLEN(12), MONSDA(12)            HR      12
                                                                                HPW     19
      COMMON  /WCCDAT/ GPMS, GPMHS, GPMCS, QHLUPS, QCLUPS,                      /WCCDAT/ 2
     $                 GPMZ, GPMHZ, GPMCZ, QHLUPZ, QCLUPZ                       /WCCDAT/ 3
      DIMENSION        WCCSAV(10)                                               /WCCDAT/ 4
      EQUIVALENCE      (WCCSAV(1), GPMS)                                        /WCCDAT/ 5
      Real    LSR2, LSR3                                                        HPW     20
                                                                                HPW     21
      Jlp = <CW-LOOP>  ! circulation-loop                                       HPW     22
                                                                                HPW     23
c              If no capacity defined, assume 50% loaded                        HPW     24
      IF (HPCAPT .lt. -10.) THEN                                                HPW     25
        CapNom = HPCAPT                                                         HPW     26
      ELSE                                                                      HPW     27
        CapNom = TLOAD * 2.                                                     HPW     28
      ENDIF                                                                     HPW     29
                                                                                HPW     30
c              Initialize values                                                HPW     31
      SLOADY  = 0.                                                              HPW     32
      HEATKW  = 0.                                                              HPW     33
      SUPPKW  = 0.                                                              HPW     34
      PLRH    = 0.                                                              HPW     35
      IF (TLOAD .gt. -1.0)  GoTo 30                                             HPW     36
      QHR     = 0.                                                              HPW     37
      QHM1    = 0.                                                              HPW     38
      EIR     = 0.                                                              HPW     39
      EIRM2   = 0.                                                              HPW     40
                                                                                HPW     41
c              Temperature of circulation-loop                                  HPW     42
      Tcw = <lp;COIL_EWTest>                                                    HPW     43
                                                                                HPW     44
c              If loop too cold for heat pump to operate                        HPW     45
      IF (Tcw .lt. <MIN-HP-T>) THEN                                             HPW     46
        SLOADY = Max(<SUPP-HEAT-CAP>, TLOAD)                                    HPW     47
        IF (IHPREP .ne. 0)  QHGSLD = QHGSLD + SLOADY*Zmult                      -047k   55
        GoTo 30                                                                 HPW     49
      ENDIF                                                                     HPW     50
                                                                                HPW     51
c              Heating capacity                                                 HPW     52
      QHM1 = CVAL(<HEAT-CAP-FT>, TM, Tcw)                                       HPW     53
      QHR  = Min(0., CapNom * QHM1)                                             HPW     54
      Hcap = QHR*LSR3                                                           HPW     55
c              If desuperheater is supplying DHW, include DHW demand            HPW     56
      IF (<HTREC-DW-HEATER> .ne. 0) THEN                                        -047k   56
        Rwh    = <HEAT-WASTE-HEAT> * Cval(<HEAT-WH-FT>,TM,Tcw)                  HPW     58
        Qwh    = Max(Hcap, TLOAD/(1.-Rwh)) * Rwh                                HPW     59
        Jdw    = <HTREC-DW-HEATER>                                              HPW     60
        Qdhw   = Max(Qwh, (<dw;Qask>-<dw;Q_RECVR>)/Zmult)                       HPW     61
      ELSE                                                                      HPW     62
        Qdhw   = 0.                                                             HPW     63
      ENDIF                                                                     HPW     64
      TLOADx = TLOAD + Qdhw                                                     HPW     65
                                                                                HPW     66
c              Give excess load to supplemental heater                          HPW     67
      IF (TLOADx .lt. Hcap) THEN                                                HPW     68
        SLOADY = Max(<SUPP-HEAT-CAP>, TLOADx - Hcap)                            HPW     69
        TLOADx = Hcap                                                           HPW     70
      ENDIF                                                                     HPW     71
                                                                                HPW     72
c              Electric input ratio and power consumption                       HPW     73
      PLRH   = TLOADx / Hcap                                                    HPW     74
      EIRM1  = Cval(<HEAT-EIR-FT>, TM, Tcw)                                     HPW     75
      EIRM2  = Cval(<HEAT-EIR-FPLR>, PLRH, xx)                                  HPW     76
      EIR    = <HEATING-EIR> * EIRM1 * EIRM2 * LSR2                             HPW     77
      HPKW   = -QHR * EIR                                                       HPW     78
      HEATKW = HPKW * KWBTU                                                     HPW     79
                                                                                HPW     80
c              If desuperheat available for dhw, calc amount                    HPW     81
      IF (<HTREC-DW-HEATER> .ne. 0) THEN                                        -047k   57
c              amount available                                                 HPW     83
        QHWAS  = QHWAS + Qwh*Zmult                                              HPW     84
c              actual amount recovered can't be determined until                HPW     85
c              dw-heater is simulated - estimate now for hourly reports         HPW     86
        QHWASU  = QHWASU + Qdhw*Zmult                                           HPW     87
c              sum total available for heater                                   HPW     88
        <dw;Q_RECVR> = <dw;Q_RECVR> + Qwh*Zmult                                 HPW     89
      ENDIF                                                                     HPW     90
                                                                                HPW     91
c              End-use data                                                     HPW     92
      IF (IHPREP .ne. 0) THEN                                                   -047k   58
        QHGAS  = QHGAS  + HPKW   * Zmult                                        HPW     94
        QHGSLD = QHGSLD + SLOADY * Zmult                                        HPW     95
        QHLOAD = QHLOAD + TLOADx * Zmult                                        HPW     96
        QHRUN  = QHRUN  + PLRH   * Zmult                                        HPW     97
      ENDIF                                                                     HPW     98
      IF (ISSPF .EQ. 1) THEN                                                    HPW     99
        IF(ICODE .EQ. 22)  ZKWHBT = HPKW                                        HPW    100
        PLRHS  = PLRH                                                           HPW    101
        QHCKWS = HEATKW                                                         HPW    102
        QHCMPS = TLOADX                                                         HPW    103
      ENDIF                                                                     HPW    104
                                                                                HPW    105
   30 CONTINUE                                                                  HPW    106
                                                                                HPW    107
C********************** run function : HPUNIT-1 ************************        HPW    108
      IF (MSYSF(40) .ne. 0) THEN                                                -047k   59
        TLOADX  = TLOAD                                                         HPW    110
        HPCAPX  = CapNom                                                        HPW    111
        LSR2XX  = LSR2                                                          HPW    112
        LSR3XX  = LSR3                                                          HPW    113
        HPKWXX  = HPKW                                                          HPW    114
        SLOADX  = SLOADY                                                        HPW    115
        CALL  FINTS( MSYSF(40), 0. )                                            HPW    116
        HPKW    = HPKWXX                                                        HPW    117
        SLOADY  = SLOADX                                                        HPW    118
      ENDIF                                                                     HPW    119
C*******************************************************************            HPW    120
                                                                                HPW    121
c              Circulation loop load and flow                                   HPW    122
      IF (TLOAD .lt. 0.) THEN                                                   HPW    123
        <CW_COIL_Q> = TLOADx + HPKW                                             HPW    124
        QHLUPS      = QHLUPS + <CW_COIL_Q> * Zmult                              HPW    125
c              add heating flow to loop only if 2-way valve; constant           HPW    126
c              flow accounted for in cooling mode                               HPW    127
        IF (PLRH .lt. <MIN-HGB-RATIO>) THEN                                     -044d2   2
          GPMcw = <CWDESGPMS> * PLRH/<MIN-HGB-RATIO>                            -044d2   3
        ELSE                                                                    -044d2   4
          GPMcw = <CWDESGPMS>                                                   -044d2   5
        ENDIF                                                                   -044d2   6
        GPMHS = GPMHS + GPMcw*Zmult                                             -044d2   7
        IF (<CW-VALVE> .eq. 1)  GPMS = GPMS + GPMcw*Zmult                       -044d2   8
        <CW_COIL_GPM> = GPMcw                                                   -044d2   9
      ENDIF                                                                     HPW    138
                                                                                HPW    139
      HPKW = HEATKW                                                             HPW    140
                                                                                HPW    141
      RETURN                                                                    HPW    142
      END                                                                       HPW    143
      SUBROUTINE HTPUMP                                                         HTPUMP   2
C                                                                               HTPUMP   3
C                            CALIFORNIA HEAT PUMP                               HTPUMP   4
C                                                                               HTPUMP   5
C              DEVELOPED BY                                                     -130     1
C                            J. J. Hirsch & S. D. Gates                         -130     2
C                            James J. Hirsch & Associates                       -130     3
C                            Camarillo, California                              -130     4
C              BASED UPON CODE DEVELOPED BY J. J. Hirsch and                    -130     5
C                            W. F. Buhl                                         -130     6
C                            A. E. Erdem                                        -130     7
C                            Lawrence Berkeley National Laboratory              -130     8
C                            University of California                           -130     9
Copyright (c) 1997 by James J. Hirsch. All Rights Reserved. Unpublished         -130    10
c rights reserved under the Copyright Laws of the United States.                -130    11
c RESTRICTED RIGHTS NOTICE: Government use, reproduction or disclosure          -130    12
c is subject to restrictions as set forth in Rights in Data (g)(3) in           -130    13
c UC/LBL purchase order 4607010 with J.J. Hirsch & Associates.                  -130    14
C                                                                               HTPUMP   7
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON  /ENDKY / LightEndUse,  TaskEndUse, MiscEndUse, HeatEndUse,        /ENDKY/  2
     &                 CoolEndUse , HtRejEndUse,  AuxEndUse, VentEndUse,        /ENDKY/  3
     &                 RefgEndUse ,  SuppEndUse,  DHWEndUse, ExtEndUse          /ENDKY/  4
      INTEGER          LightEndUse,  TaskEndUse, MiscEndUse, HeatEndUse,        /ENDKY/  5
     &                 CoolEndUse , HtRejEndUse,  AuxEndUse, VentEndUse,        /ENDKY/  6
     &                 RefgEndUse ,  SuppEndUse,  DHWEndUse,  ExtEndUse         /ENDKY/  7
      COMMON  /ENDUSE/ SUPPKW, HEATKW                                           HVAC27   1
      COMMON /FFUEL/ FFUEL, FurnAuxFuel, FurnAuxkW, PLRF                        /FFUEL/  2
      COMMON  /REPORT/ IREPRT(4,37),IPRG,IUNIQV(100),IUNIQS(100),IUNIQL         HVAC14   4
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                 IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                        /FILES/  3
     2               , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                   /FILES/  4
     3                 IHRREP(3), IHRPAS(2)                                     /FILES/  5
      COMMON  /DESHRQ/ NDESDY, IDDTYP(2), DESHRQ(360)                           Time     3
      COMMON  /WCCDAT/ GPMS, GPMHS, GPMCS, QHLUPS, QCLUPS,                      /WCCDAT/ 2
     $                 GPMZ, GPMHZ, GPMCZ, QHLUPZ, QCLUPZ                       /WCCDAT/ 3
      DIMENSION        WCCSAV(10)                                               /WCCDAT/ 4
      EQUIVALENCE      (WCCSAV(1), GPMS)                                        /WCCDAT/ 5
      COMMON /WSEDAT/  CAPAIR,CAPWTR,QCWSEM,QCWSE,WSEDTA,WSEDTW,WSEXEF          /WSEDAT/ 2
     $                ,WSENTU,WSEUA,WSEQMX,WSEPLR,WSEDT,WSE13,WSE14             /WSEDAT/ 3
     $                ,WSE15                                                    /WSEDAT/ 4
      DIMENSION        WSESAV(15)                                               /WSEDAT/ 5
      EQUIVALENCE      (WSESAV(1),CAPAIR)                                       /WSEDAT/ 6
      COMMON /SSPDAT/  PLRCS,QCCKWS,QCCMPS,PLRHS,QHCKWS,QHCMPS                  /SSPDAT/ 2
     $                ,PLRFS,PLRFCS,PLRFHS,sspss                                /SSPDAT/ 3
     $                ,PLRCZ,QCCKWZ,QCCMPZ,PLRHZ,QHCKWZ,QHCMPZ                  /SSPDAT/ 4
     $                ,PLRFZ,PLRFCZ,PLRFHZ,sspsz                                /SSPDAT/ 5
     $                ,ISSPF,IWCCF,IPCCF,SSPSAV                                 /SSPDAT/ 6
      DIMENSION        SSPD(24)                                                 JJHfix   1
      EQUIVALENCE      (SSPD(1),PLRCS)                                          /SSPDAT/ 8
      COMMON  /DPLTD /  DPLTDisUnused                                           HVAC15   1
C              SYSTEM LEVEL VARIABLES FOR DESICCANT SYSTEMS, BOTH TOTAL         /DSYSTD/ 2
C              AND INTEGRATED                                                   /DSYSTD/ 3
      COMMON  /DSYSTD/  SCGAS, QREG, WBR, WB8, T8, W8, WB9, T9, W9, EFF,        /DSYSTD/ 4
     1                  DTON, DMODE(7), ERMAX4, ERMAX5, ERMAX6, OPMODE,         /DSYSTD/ 5
     2                  DBOA,WOA,DGAS,DKW,TCONDd,QCDTOT,QCDS,QCDL,              /DSYSTD/ 6
     3                  POA,DFANKW,RFANKW,DMOTKW,EVKW,QCEVT,QCEVS,              /DSYSTD/ 7
     4                  QCEVL,TCMNEV                                            /DSYSTD/ 8
      REAL DSYSTD(39)                                                           /DSYSTD/ 9
      EQUIVALENCE (DSYSTD(1), SCGAS)                                            /DSYSTD/10
      common  /FNSYS/  ISKIPS, MSYSF(120)                                       /FNSYS/  2
      COMMON  /HRREP / Irb, Ihrp, Lrb, Lhrp, Nrb, Nhrp, IVTLIM(3,50),           HR       5
     &                 IGRPtr, IBRPtr, IRSch, IRSchT(5),                        HR       6
     &                 NHRTyp(3), ITBUF(3), ITBUFB(3), ITBUFE(3),               HR       7
     &                 IHREOF, ICDFLG                                           HR       8
      COMMON  /LOOPKY/ CHW, PIPE2, loop3, HW, loop5, STM, WLHP, DHW,            -131     1
     &                 CW, Deleted, PIPE2h, WLHPh, COGEN, NoType,               -131     2
     &                 FIXED, OA, SCH, LOAD,  ZONE, OUTDOOR,                    -131     3
     &                 STANDBY, DEMAND, SNAP, SCHEDULED, SubhourDemand,         -033     1
     &                 CONSTANT, VARIABLE, ModeText(4),                         -131     5
     &                 OFFMODE, FLOATING, HEATMODE, COOLMODE,                   -131     6
     &                 AtCoils, EnterLoop, AtPump,                              -131     7
     &                 INDOORS, OUTDOORS, TUNNEL, UNDERGROUND,                  -131     8
     &                 PRIMARY, SECONDARY,                                      -131     9
     &                 DIRECT, HX,                                              -131    10
     &                 WATER, ETHYLENE, PROPYLENE, BRINE                        -131    11
      INTEGER          CHW, PIPE2, loop3, HW, loop5, STM, WLHP, DHW,            -131    12
     &                 CW, Deleted, PIPE2h, WLHPh, COGEN, NoType,               -131    13
     &                 FIXED, OA, SCH, LOAD,  ZONE, OUTDOOR,                    -131    14
     &                 STANDBY, DEMAND, SNAP, SCHEDULED, SubhourDemand,         -033     2
     &                 CONSTANT, VARIABLE,                                      -131    16
     &                 OFFMODE, FLOATING, HEATMODE, COOLMODE,                   -131    17
     &                 AtCoils, EnterLoop, AtPump,                              -131    18
     &                 INDOORS, OUTDOORS, TUNNEL, UNDERGROUND,                  -131    19
     &                 PRIMARY, SECONDARY,                                      -131    20
     &                 DIRECT, HX,                                              -131    21
     &                 WATER, ETHYLENE, PROPYLENE, BRINE                        -131    22
      COMMON  /MISCD / TEMPS(4,9999),CONS(5),TEMPSL(9999),                      -048a   10
     1                 BLDGQH,BLDGQC,BLDGQL,BLDGP,BPMULT,                       /MISCD/  3
     $                 DBTMIN,DBTMAX,WMIN,WMAX,NSPZ(9999),                      -048a   11
     3                 DQ, DTP, DTR, DTS, FPI, PLRCC , POM, TC2, TDM,           /MISCD/  5
     4                 TRA,WCOL,WCOLM,WMM,YPI,KWBTU,BTUKW,UNFILD,Unusedm        RemPA   45
      REAL             KWBTU                                                    /MISCD/  7
      COMMON  /PLANTD/ QHMP,TMP,CFMP,QHPP,CFMPP,                                /PLANTD/ 2
     1                 QHZP,TZP,DHWPKW,DHWPLF,DHWQRP                            RemPA   46
      REAL             PLANTD(10)                                               RemPA   47
      EQUIVALENCE      (PLANTD(1), QHMP)                                        RemPA   48
      COMMON  /PTRPLT/ Ipm,Ilp,Ich,Ibl,Idw,Itw,Ipv,Ign,Itk,Ihx,                 PV       1
     &                 Iec,Ilm,Iem,Ifm,Ism,Icm,Imm,Imc,Igl,Isp2,                XFC2     1
     &                 Ispare(5),  Ipe,                                         HVAC19   3
     &                 Npm,Nlp,Nch,Nbl,Ndw,Ntw,Npv,Ngn,Ntk,Nhx,                 PV       2
     &                 Nec,Nlm,Nem,Nfm,Nsm,Ncm,Nmm,Nmc,Ngl,Nsp2,                XFC2     2
     &                 Nspare(5),  Npe,                                         HVAC19   6
     &                 Lpm,Llp,Lch,Lbl,Ldw,Ltw,Lpv,Lgn,Ltk,Lhx,                 PV       3
     &                 Lec,Llm,Lem,Lfm,Lsm,Lcm,Lmm,Lmc,Lgl,Lsp2,                XFC2     3
     &                 Lspare(5),  Lpe,                                         HVAC19   9
     &                 Jpm,Jlp,Jch,Jbl,Jdw,Jtw,Jpv,Jgn,Jtk,Jhx,                 PV       4
     &                 Jec,Jlm,Jem,Jfm,Jsm,Jcm,    Jmc,Jgl,                     HVAC19  11
     &                 Jpe, kpr, NumMeters, NumIntHX                            XFC1     1
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      COMMON  /SYSTD / TH,TC,TM,TR,QH,QC,QHZ,QCZ,QHB,QHP,QHUM,                  /SYSTD/  2
     1                 QDHUM,TCMIN,THMAX,QLSUM,QPSUM,CFM,CFMH,CFMC,             /SYSTD/  3
     2                 RCFM,ECFM,CINF,FON,HON,CON,BON,SCONS(3),PH,PC,           /SYSTD/  4
     3                 SKW,FANKW,unused1,WR,WM,WCOIL,WW,PO,D,                   -046f    1
     4                 FTEMP,TCR,QHR,RfanPumpKW,SGAS,SKWQH,SKWQC,QCLAT,         -131    23
     5                 SFKW,RFKW,FONNGT,WSURF,RWalkinQ,TSURF,TRh,               -131    24
     6                 CBF,CBF1,CBF2,EON,PLRCFM,PLRC,PLRH,QCM1,                 /SYSTD/  8
     7                 QCM2,QHM1,EIRM1,EIRM2,EIR,OFKW,QCT,QCS,                  /SYSTD/  9
     8                 WRMAX,WRMIN,CFMRAT,QdistG,QdistL,RON,QHT,                /SYSTD/ 10
     9                 TPOMIN,POMIN,QHSUP,QRSENS,QRLAT,QRREC,QRREJ,             /SYSTD/ 11
     1                 RCOMKW,RDEFKW,RAUXKW,ECFMP,CFMIN,CINFP,DT,DW,            /SYSTD/ 12
     2                 EWB,IC,NATTSP,Q,RETR,SLOAD,QLSUMP,T,TCHUM,TEND,          /SYSTD/ 13
     3                 TS,hgbmin,HPDefE,EconoOnly,TDuctEnv,                     -044e1   1
     4                 QCUNMT,CapRh,CapRph,CapRc                                HVAC25   3
      REAL             SYSTD(113)                                               HVAC19  13
      EQUIVALENCE      (SYSTD(1),TH)                                            RemPA   65
      COMMON  /TIME  / IDOY, IYR, IMO, IDAY, IHR,                               Time     4
     &                 ISCMO, ISCDAY, ISCHR, IDOW, ISCDOW, iDSdates(6),         -044e5   1
     &                 iTimeFlg, iDSFlg, iDDFlg, InitialFlg, LeapYr,            Time     6
     &                 CLOCK(10), MONDSC(13), MONLEN(12), MONSDA(12)            HR      12
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
      COMMON  /ZONED / EXCFM,FH,FC,CFMZ,QHBZ,QOVER,THZ,TCZ,ERMAX,ERMIN,         /ZONED/  2
     1                 TRY,FTD,CORINT,G0,G1,G2,G3,SIGMAG,TL,ZQHR,TAVE,          /ZONED/  3
     2                 ZQH,ZQC,FCHPS(15),ACFM,ZKW,TCMINZ,THMAXZ,                /ZONED/  4
     3                 ERMAXM,ERMINM,THR,CSSCND,CSSVEC,HENOW,QGWIN,             /ZONED/  5
     4                 QSNABT,QGOPWL,QGVEC,CFMCVT,SSFPT,CFMVNT,ZFANKW,          /ZONED/  6
     5                 ZKWCBT,ZKWHBT,ZCapRbbrd, XC,ZC,XH,ZH                     -044e2   7
      REAL ZONED(63)                                                            -044e2   8
      EQUIVALENCE (ZONED(1),EXCFM)                                              /ZONED/  9
      COMMON  /LENS/   MWFLEN, MRLEN, MSHLEN, MWNLEN, MDRLEN, MXLEN,            /LENS/   2
     1                 MULEN, MZLEN, MIWLEN, MFLLEN,                            /LENS/   3
     2                 LMTB, LLDSOU, MSTLEN, LSTFT, MWLLEN                      /LENS/   4
      COMMON  /PTRBGN/ IWFB, IWPB, ICONSB, IGTB, IWLB, IGEOB, ISHADB,           /PTRBGN/ 2
     &                 IWINB, IDRB, IEWB, IUGB, ISPB, IIWPB, IIWB,              /PTRBGN/ 3
     &                 IFLB, ISPCDB, IOTHB, ILHB, IZQCMB, ISSHDB,               /PTRBGN/ 4
     &                 IOHFIB, IZLSK, IZLSL, ISTFB, ILSSH                       PV2      1
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     /PNTRS/  3
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        /PNTRS/  4
      COMMON  /SIZE/   LENGTH,NWF,NWPAR,NCONS,NGT,NWL,NGEO,                     /SIZE/   2
     1                 NGSHAD, NWIN, NDOOR, NEW, NUG, NSPl, NIWP, NIW,          /SIZE/   3
     &                 NFL, NBR, NOTH, NITH, NOPSRF,                            /SIZE/   4
     &                 NSURF, NSSHD, NSHTOT, NEWshade                           /SIZE/   5
      V(DB,W,P) = 0.754*(DB+459.7)*(1.0+1.605*W)/P                              V        2
C             SET SS-P flag for saving PLR info                                 HTPUMP  31
      ISSPF = 0                                                                 HTPUMP  32
      IF((IREPRT(2,23).NE.0).OR.(IREPRT(2,27).NE.0))  ISSPF = 1                 IREPRT  62
      CALL FILLN( 0., WCCSAV(1), 5 )                                            HVAC12  74
c              save heating and cooling schedule values                         HVAC1  285
      SCHc = CON                                                                HVAC1  286
      SCHh = HON                                                                HVAC1  287
C              SET ZP1 TO POINT TO FIRST ZONE ON THE SYSTEM                     HTPUMP  62
      ZP1    = ISZ                                                              HTPUMP  63
      VOLMUL = 0.0                                                              HTPUMP  64
      WAV    = 0.                                                               HTPUMP  65
C                                                                               HTPUMP  66
C              LOOP THROUGH THE ZONES ON THE SYSTEM                             HTPUMP  67
C                                                                               HTPUMP  68
      DO 10 NZ = 1,NSZ                                                          HTPUMP  69
C              ZERO THE ZONE DATA COMMON BLOCK                                  HTPUMP  70
      DO 111 I=1,63                                                             -044e2  36
  111 ZONED(I) = 0.0                                                            HTPUMP  72
      CALL FILLN( 0., WCCSAV(6), 5 )                                            HVAC12  75
      CALL FILLN( 0., WSESAV, 15 )                                              HTPUMP  74
      <ZKWQH> = 0.                                                              HTPUMP  75
      <ZKWQC> = 0.                                                              HTPUMP  76
      WOA     = HUMRAT                                                          -024     1
      DBOA    = DBT                                                             -024     2
C              PICK UP ZP2                                                      HTPUMP  77
      ZP2    = <ZP2>                                                            HTPUMP  78
      <ERMAX> = 0.0                                                             HTPUMP  79
      <ERMIN> = 0.0                                                             HTPUMP  80
      IF (<sy.FanOnPast> .gt. 0.)  THEN                                         -044c2  61
        CONS(4) = 60. / V(<zn.Tmix1>,<zn.Wmix1>,PATM)                           -044c2  62
        CONS(1) = (.24+.44*<zn.Wmix1>) * CONS(4)                                -044c2  63
      ELSE  ! use value from last start-up hour                                 -044c2  64
        CONS(4) = 60. / V(<zn.TmixStart>,<zn.WmixStart>,PATM)                   -044c2  65
        CONS(1) = (.24+.44*<zn.WmixStart>) * CONS(4)                            -044c2  66
      ENDIF                                                                     -044c2  67
      CONS(2) = 1061.0 * CONS(4)                                                -044c2  68
      CONS(3) = 0.3996 / CONS(1)                                                -044c2  69
c              if exhaust made up by infiltration                               -046   222
      IF (<EXHAUST-SOURCE> .eq. 2  .or.                                         -047b   22
     &    <EXHAUST-SOURCE> .eq. 3)  Call ZoneExhaust(9, xx)  ! power            -047b   23
      IF((FON .EQ. 0.0) .OR. (<ZONE-TYPE> .NE. 1))  GOTO 3                      HTPUMP  84
c                                                                               HVAC11   6
c              pointer to attached circulation loop                             HVAC11   7
      JLP    = <CW-LOOPZ>                                                       HVAC11   8
c              temperature of circulation-loop attached to zone unit            HVAC11   9
      Tfluid = <lp;COIL_EWTest>                                                 HVAC16  89
c                                                                               HVAC11  11
c              Zonal level heating and cooling.  If the loop pump is            HVAC11  12
c              scheduled off, then heat and cool must also be off.              HVAC11  13
c              Note that this will override night-cycle control.  To            HVAC11  14
c              allow night-cycle, loop-ctrl should be STANDBY, and the          HVAC11  15
c              pump should not be scheduled.                                    HVAC11  16
      IF (<lp;CTRL_MODE> .EQ. OFFMODE                                           GLHX1    1
     &                .OR.  Tfluid .LT. <lp:MIN-ALARM-T>                        GLHX1    2
     &                .OR.  Tfluid .GT. <lp:MAX-ALARM-T>)  THEN                 GLHX1    3
c              loop not available                                               GLHX1    4
        CON = 0.                                                                GLHX1    5
        HON = 0.                                                                GLHX1    6
      ELSE                                                                      GLHX1    7
c              normal operation                                                 GLHX1    8
        CON = SCHc                                                              GLHX1    9
        HON = SCHh                                                              GLHX1   10
      ENDIF                                                                     GLHX1   11
C                                                                               HTPUMP  85
C              CALCULATE THE EXTRACTION RATES                                   HTPUMP  86
C                                                                               HTPUMP  87
C              CALC MIX AIR TEMP                                                HTPUMP  88
C              OUTSIDE AIR DAMPER POSITION                                      -044c  508
      PO     = <VENTMIN>/<CFMAX>                                                -044c  509
C              NOW CHECK FOR SCHEDULE FOR OUTSIDE AIR                           -044c  510
      SH = SchVal(<MIN-AIR-SCH>, -999.)                                         -044c  511
      IF (SH .NE. -999.)  PO = SH                                               -044c  512
      PO = AMAX1(0.,AMIN1(1.,PO))                                               -044c  513
C              NOW CHECK FOR DCV                                                -044c  514
      IF((<MIN-OA-METHOD>.LT.0) .AND. (SH .EQ. -999.0))  THEN                   -044c  515
        MZ = ISPB + (<NZSPACE>-1)*MZLEN                                         -044c  516
        <DCVOAcfmZ> = SchVal(<PEOPLE-SCHEDULE>, 1.)                             -045b   77
     &              * <ZPPLNO> * <OA-CFM/PER>                                   -045b   78
        XX = <OUTSIDE-AIR-CFM>                                                  -044c  518
        IF(XX .EQ. 0.)                                                          -044c  519
     $     XX = AMAX1(<OA-FLOW/AREA>*<AREA>,<OA-CHANGES>*<VOLUME>/60.)          -044c  520
        <DCVOAcfmZ> = AMAX1(<DCVOAcfmZ>,XX)                                     -044c  521
        <DCVOAcfmFrac> = AMIN1(1.,<DCVOAcfmZ>/<CFMAX>)                          -044c  522
        PO = <DCVOAcfmFrac>                                                     -044c  523
      ELSE                                                                      -044c  524
        <DCVOAcfmZ> = 0.0                                                       -044c  525
        <DCVOAcfmFrac> = 0.0                                                    -044c  526
      ENDIF                                                                     -044c  527
c              Exhaust airflow w/o cycling                                      -044e  203
      IF (<EXHAUST-SOURCE> .eq. 1)    ! makeup by system OA                     -046   224
     &  Call ZoneExhaust(1, <CFMAX>)  ! set EXCFM                               -046   225
      IF (EXCFM .gt. 0.)  PO = Max(PO*<CFMAX>, EXCFM) / <CFMAX>                 -044e  205
      POM  = PO                                                                 HTPUMP  98
      IF(PO .GT. 0.)  THEN                                                      HTPUMP  99
        TC   = <TNOW> - <QNOW>/(CONS(1)*<CFMAX>)                                HTPUMP 100
     1                - <SUPPLY-DELTA-T>*CONS(3)                                HTPUMP 101
        TR   = <TNOW>                                                           HTPUMP 102
        CFM  = <CFMAX>                                                          HTPUMP 103
        RCFM = <CFMAX>                                                          -037a    1
        ICALL = 1                                                               HTPUMP 104
        CALL ECONO(ICALL,TC,POM)                                                HTPUMP 105
        TM   = TM + <SUPPLY-DELTA-T>*CONS(3)                                    -024     3
      ELSE                                                                      HTPUMP 106
        TM   = <TNOW> + <SUPPLY-DELTA-T>*CONS(3)                                HTPUMP 107
        POA  = PO                                                               HTPUMP 108
      ENDIF                                                                     HTPUMP 109
C              CALC OFF DESIGN ADJUSTMENT FACTORS                               HTPUMP 110
      EWB    = AMAX1(<COIL_EWBZ>,<COOL-FT-MIN>-10.0)                            -030   127
      QCM1   = CVAL(<COOL-CAP-FT>,EWB,Tfluid)                                   HVAC1  317
      QCM2   = CVAL(<COOL-SH-FT>,EWB,Tfluid)                                    HVAC1  318
C              CALC TOTAL AND SENSIBLE CAPACITY                                 HTPUMP 114
      QCT    = <COOLCAPZ>*QCM1                                                  HTPUMP 115
      QCS    = AMAX1(0.0, <COOLSHZ>*QCM2                                        -034   174
     $                      + CONS(1)*<CFMAX>*(1.0-<COIL-BF>)                   -034   175
     $                               *AMAX1(-20.0,AMIN1(20.0,TM-80.0)) )        -034   176
      QCS    = AMIN1(QCT,QCS)                                                   HTPUMP 118
C              CALC MIN SUPPLY TEMP                                             HTPUMP 119
      TCMINZ = TM - (QCS/(CONS(1)*<CFMAX>))*CON                                 HTPUMP 120
      TCMINZ = AMAX1(TCMINZ,AMIN1(TM,<MIN-SUPPLY-T>-<THROTTLING-RANGE>))        HTPUMP 121
C              CALC EXTRACTION RATE                                             HTPUMP 122
      XC      = CONS(1)*<CFMAX>                                                 -044e2  37
      <ERMAX> = XC * (<TNOW>-TCMINZ)                                            -044e2  38
      IF (PO .NE. 0.) THEN  ! continuous fan                                    -044e2  39
        ZC     = CONS(1) * <CFMAX> * POM                                        -044e2  40
        ERMAXM = ZC * ((<TNOW>-DBOA) + <SUPPLY-DELTA-T>*CONS(3))                -044e2  41
      ENDIF                                                                     -044e2  42
C              CALC HEATING CAPACITY ADJUSTMENT FACTOR                          HTPUMP 126
      QHM1   = CVAL(<HEAT-CAP-FT>, TM, Tfluid)                                  HVAC1  319
C              CALC TOTAL HEATING CAPACITY                                      HTPUMP 128
      QHT    = <HEATCAPZ>*QHM1                                                  HTPUMP 129
C              MAX SUPPLY TEMP                                                  HTPUMP 130
      THMAXZ = TM - (QHT/(CONS(1)*<CFMAX>))*HON                                 HTPUMP 131
      THMAXZ = AMIN1(THMAXZ,AMAX1(TM,<MAX-SUPPLY-T>))                           HTPUMP 132
C              ADDITION RATE                                                    HTPUMP 133
      XH      = XC                                                              -044e2  43
      <ERMIN> = XH * (<TNOW>-THMAXZ)                                            -044e2  44
      ZH      = ZC                                                              -044e2  45
      ERMINM  = ERMAXM                                                          HTPUMP 135
C              PICK UP ZONE MULTIPLIER                                          HTPUMP 136
    3 ZMULT  = <MULTIPLIER>                                                     HTPUMP 137
C********************** run function : HTPUMP-0Z *******************            HTPUMP 138
      IF( MSYSF(41) .NE. 0 )   CALL  FINTS( MSYSF(41), 0. )                     HTPUMP 139
C*******************************************************************            HTPUMP 140
C              CALL ROUTINE TO CALC ZONE TEMP AND LOAD                          HTPUMP 141
      CALL TEMDEV(0)                                                            HTPUMP 142
c              Calculate load distribution over the hour                        HVAC22  87
      CALL PeakZoneBins(0, xxx,xxx)                                             HVAC22  88
C              INITIALIZE VARIOUS SYSTEM VARIABLES TO ZERO                      HTPUMP 143
C              ZFANKW IS THE ZONE ELEC DUE TO THE UNIT FAN                      HTPUMP 144
      ZFANKW = 0.                                                               HTPUMP 145
C              TM IS THE MIX AIR TEMP. THIS IS EQUAL TO THE                     HTPUMP 146
C              WM IS THE MIX AIR HUMIDITY RATIO                                 HTPUMP 147
      WM     = 0.                                                               HTPUMP 148
      WCOIL  = 0.                                                               HTPUMP 149
      QCLATZ = 0.                                                               HTPUMP 150
      TS     = 0.                                                               HTPUMP 151
      TC     = 0.                                                               HTPUMP 152
      TM     = 0.                                                               HTPUMP 153
      PLRC   = 0.                                                               HTPUMP 154
      PLRH   = 0.                                                               HTPUMP 155
      EIR    = 0.                                                               HTPUMP 156
          ZQC    = 0.                                                           HTPUMP 157
          ZKWCBT = 0.                                                           HTPUMP 158
          ZQH    = 0.                                                           HTPUMP 159
          ZKWHBT = 0.                                                           HTPUMP 160
C              ZKW IS ELEC INPUT TO UNIT                                        HTPUMP 161
      ZKWS = ZKW                                                                HTPUMP 162
      ZKW    = 0.0                                                              HTPUMP 163
C              SKIP UNNEEDED CALCS                                              HTPUMP 164
      IF (FON.EQ.0.0.OR.<ZONE-TYPE>.NE.1) GO TO 21                              HTPUMP 165
C              TM IS THE MIX AIR TEMP                                           HTPUMP 166
      TAVE   = (<TNOW>+<TPAST>)*0.5                                             HTPUMP 167
      POMIN = POM                                                               -024     6
      IF(PO .GT. 0.)  THEN                                                      HTPUMP 169
        TC   = TAVE - <QNOW>/(CONS(1)*<CFMAX>)                                  HTPUMP 170
     1              - <SUPPLY-DELTA-T>*CONS(3)                                  HTPUMP 171
        TR   = TAVE                                                             HTPUMP 172
        CFM  = <CFMAX>                                                          HTPUMP 173
        RCFM = <CFMAX>                                                          -037a    2
        ICALL = 2                                                               HTPUMP 174
        CALL ECONO(ICALL,TC,POMIN)                                              HTPUMP 175
        TM   = TM + <SUPPLY-DELTA-T>*CONS(3)                                    -024     7
      ELSE                                                                      HTPUMP 176
        TM   = TAVE + <SUPPLY-DELTA-T>*CONS(3)                                  HTPUMP 177
        POA  = PO                                                               HTPUMP 178
      ENDIF                                                                     HTPUMP 179
      <COIL_EDBZ> = TM                                                          HVAC1  320
C              CALC THE SUPPLY AIR TEMP NEEDED TO HANDLE THE LOAD.              HTPUMP 181
C              IF NO OUTSIDE AIR ASSUME THE UNIT CYCLES WITH THE                HTPUMP 182
C              LOAD. OTHERWISE FANS RUN CONTINUOUSLY.                           HTPUMP 183
      Q      = <QNOW>                                                           HTPUMP 184
      IF(PO .GT. 0.0)  Q = Q + CONS(1)*<CFMAX>*(TAVE-TM)                        HTPUMP 185
      F      = 0.0                                                              HTPUMP 186
      IF( (<TNOW>.LE.THZ+THR) .OR. (<TPAST>.LE.THZ+THR) ) F = QHT               HTPUMP 187
      IF( (<TNOW>.GE.TCZ-THR) .OR. (<TPAST>.GE.TCZ-THR) ) F = QCS               HTPUMP 188
      IF( PO .LE. 0.0 ) THEN                                                    HTPUMP 189
        IF( (<TNOW>.GT.THZ+THR) .AND. (<TPAST>.GT.THZ+THR) .AND.                HTPUMP 190
     1      (<TNOW>.LT.TCZ-THR) .AND. (<TPAST>.LT.TCZ-THR) ) THEN               HTPUMP 191
          TS = TM                                                               HTPUMP 192
        ELSE                                                                    HTPUMP 193
          TS = AMAX1(TCMINZ,AMIN1(THMAXZ,TM-F/(CONS(1)*<CFMAX>)))               HTPUMP 194
        ENDIF                                                                   HTPUMP 195
      ELSE                                                                      HTPUMP 196
        TS = TAVE - <QNOW>/(CONS(1)*<CFMAX>)                                    HTPUMP 197
      ENDIF                                                                     HTPUMP 198
C              FOR OFF RATED CFM                                                HTPUMP 199
      PLRCFM = <CFMAX>/<RATEDCFM>                                               HTPUMP 200
      IF( (<TNOW>.LE.THZ+THR) .OR. (<TPAST>.LE.THZ+THR) .OR.                    HTPUMP 201
     1    (<TNOW>.GE.TCZ-THR) .OR. (<TPAST>.GE.TCZ-THR) ) THEN                  HTPUMP 202
        IF( TM .LT. TS )  GOTO 15                                               HTPUMP 203
        IF( TM .GT. TS )  GOTO 25                                               HTPUMP 204
      ENDIF                                                                     HTPUMP 205
C                                                                               HTPUMP 206
C              NO LOAD CONDITION                                                HTPUMP 207
C                                                                               HTPUMP 208
      <COIL_EWBZ> = WBFS(<TNOW>,WOA,PATM)                                       HVAC1  321
      WM          = WOA                                                         -044c2  70
C              IF NO OUTSIDE AIR SKIP (NO OPERATION THIS HOUR)                  HTPUMP 210
      IF(PO .EQ. 0.0)  GO TO 20                                                 HTPUMP 211
      FH     = <CFMAX>*0.5                                                      HTPUMP 212
      FC     = FH                                                               HTPUMP 213
      GOTO 20                                                                   HTPUMP 214
C                                                                               HTPUMP 215
C              COOLING CALCULATIONS                                             HTPUMP 216
C                                                                               HTPUMP 217
C              ASSUME THAT THE COIL SURF CONDITION IS THAT AS IF IT             HTPUMP 218
C              WAS AT FULL LOAD                                                 HTPUMP 219
   25 TC     = TM - (QCS/(CONS(1)*<CFMAX>))                                     HTPUMP 220
      TC     = AMAX1(TC,<MIN-SUPPLY-T>-<THROTTLING-RANGE>)                      HTPUMP 221
      EWB    = AMAX1(<COIL_EWBZ>,<COOL-FT-MIN>-10.0)                            -030   128
      CBF1   = CVAL(<COIL-BF-FT>,EWB,Tfluid)                                    HVAC1  323
      CBF2   = CVAL(<COIL-BF-FCFM>,PLRCFM,PLRCFM)                               HTPUMP 224
      CBF    = AMIN1(AMAX1(<COIL-BF>*CBF1*CBF2,0.001),1.0)                      -113    12
      WMSAT = WFUNC(TM,100.,PATM)                                               -113    13
      WRSAT = WFUNC(TAVE,100.,PATM)                                             -113    14
      TSURF  = (TC-CBF*TM)/(1.0-CBF)                                            HTPUMP 226
      WSURF  = WFUNC(TSURF,100.,PATM)                                           HTPUMP 227
C                                                                               HTPUMP 228
C              IF THE UNIT HAS OUTSIDE AIR DAMPERS ASSUME                       HTPUMP 229
C              THE FAN RUNS CONTINUOUSLY. IF NO OUTSIDE                         HTPUMP 230
C              ASSUME THE FANS CYCLE ON AND OFF.                                HTPUMP 231
C                                                                               HTPUMP 232
C              IF OUTSIDE AIR CASE SKIP                                         HTPUMP 233
      FC     = <CFMAX>                                                          HTPUMP 234
C              CALC AMOUNT OF TIME (IN CFM) THE FAN IS ON                       HTPUMP 235
      IF(PO .EQ. 0.0)  FC = <QNOW>*<CFMAX>/<ERMAX>                              HTPUMP 236
      IF(CON .EQ. 0.0  .OR.  FC .LT. 0.001)  GOTO 20                            GLHX1   12
C              CALC ZONE LATENT GAIN (IN LBS WTR/LB AIR)                        HTPUMP 238
      DW     = <QL>/(CONS(2)*AMAX1(FC,<VOLUME>/60.0))                           HTPUMP 239
C              CALC INFILTRATION AIR RATIO                                      HTPUMP 240
      F      = <CFMINF>/AMAX1(FC,<VOLUME>/60.0)                                 HTPUMP 241
C              ESTIMATE COIL EXIT FOR NO OUTSIDE AIR CASE                       HTPUMP 242
      WM     = HUMRAT + DW                                                      HTPUMP 243
C              IF NO INFILTRATION SKIP                                          HTPUMP 244
      IF((F+PO) .NE. 0.0)                                                       HTPUMP 245
     1WM = (POA*(1.+F)*WOA + (1.-POA)*(DW+F*HUMRAT))/(F+POA)                    HTPUMP 246
      WM = AMIN1(WMSAT,WM)                                                      -113    15
      WCOIL  = WM                                                               HTPUMP 247
C              IF MIX AIR HUMIDITY IS LEES THAN COIL SURFACE                    HTPUMP 248
C              CONDITION NO MOISTURE REMOVAL TAKES PLACE (SKIP)                 HTPUMP 249
      IF(WM .LE. WSURF)  GO TO 7                                                HTPUMP 250
C              ITERATE AROUND THE LOOP TO CALC WM AND WCOIL                     HTPUMP 251
      WR = (CBF*POA*WOA + (1.-CBF)*WSURF + DW + F*HUMRAT)                       HTPUMP 252
     1     /(1.0+F-CBF*(1.0-POA))                                               HTPUMP 253
      WR = AMIN1(WRSAT,WR)                                                      -113    16
      WM = POA*WOA + (1.-POA)*WR                                                HTPUMP 254
      WCOIL  = CBF*WM + (1.0-CBF)*WSURF                                         HTPUMP 255
C              CALC UNIT COOLING LOAD.                                          HTPUMP 256
    7 CONTINUE                                                                  HTPUMP 257
      ZQC    = (TM-TS)*CONS(1)*FC                                               HTPUMP 258
C              Add moisture removal to coil load - use PLRCS for the            -024     8
C              the compressor run time fraction if fan run continuously         -024     9
      IF(PO .EQ. 0.)  THEN                                                      -024    10
        QCLATZ = AMAX1(0.0,WM-WCOIL)*CONS(2)*FC                                 -024    11
      ELSE                                                                      -024    12
        QCM2  = CVAL(<COOL-SH-FT>,EWB,Tfluid)                                   -024    13
        QCS = AMAX1(0.0,<COOLSHZ>*QCM2                                          -034   177
     $                    + CONS(1)*<CFMAX>*(1.0-<COIL-BF>)                     -034   178
     $                             *AMAX1(-20.0,AMIN1(20.0,TM-80.0)) )          -034   179
        PLRCS = 0.                                                              -024    16
        IF (QCS .GT. 0.)  PLRCS = AMAX1(0.,CONS(1)*<CFMAX>*(TM-TS)/QCS)         -024    17
        QCLATZ = AMAX1(0.0,WM-WCOIL)*CONS(2)*<CFMAX>*PLRCS                      -024    18
      ENDIF                                                                     -024    19
      ZQC    = ZQC + QCLATZ                                                     -024    20
C              SAVE WETBULB TEMP                                                HTPUMP 262
      <COIL_EWBZ> = WBFS(TM,WM,PATM)                                            HVAC1  324
C              RECALCULATE CAPACITY FOR THIS ENTERING CONDITION                 HTPUMP 264
C              SO THAT ENERGY ESTIMATE WILL BE GOOD                             HTPUMP 265
      EWB    = AMAX1(<COIL_EWBZ>,<COOL-FT-MIN>-10.0)                            -030   129
      QCM1   = CVAL(<COOL-CAP-FT>,EWB,Tfluid)                                   HVAC1  326
      QCT    = <COOLCAPZ>*QCM1                                                  HTPUMP 268
C              THE FINAL UNIT LOAD IS THE ABOVE LOAD PLUS                       HTPUMP 269
C              TEMP MODIFIER FOR EIR                                            HTPUMP 270
      EIRM1  = CVAL(<COOL-EIR-FT>,EWB,Tfluid)                                   HVAC1  327
      PLRC   = ZQC/QCT                                                          HTPUMP 272
C              PART LOAD EIR MODIFIER                                           HTPUMP 273
      EIRM2  = CVAL(<COOL-EIR-FPLR>,PLRC,PLRC)                                  HTPUMP 274
      EIR    = <COOLING-EIR>*EIRM1*EIRM2                                        -039    28
      ZKWCBT = QCT * EIR                                                        HVAC22  89
c              assign electric load to meter                                    HVAC22  90
      ZKW    = ZKWCBT * KWBTU                                                   HVAC22  91
      IF (ZKW .GT. 0.)  THEN                                                    HVAC22  92
        ZKWmax = MAX(ZKW/EIRM2, ZKW)                                            HVAC22  93
        CALL PeakZoneDist(1, ZKW,ZKWmax, CoolEndUse,<COOL-E-MZ>)                HVAC22  94
      ENDIF                                                                     HVAC22  95
      GO TO 20                                                                  HTPUMP 278
   15 CONTINUE                                                                  HTPUMP 279
C                                                                               HTPUMP 280
C              CALCULATE UNIT HEATING ENERGY                                    HTPUMP 281
C                                                                               HTPUMP 282
C              PICK UP CFM                                                      HTPUMP 283
      FH     = <CFMAX>                                                          HTPUMP 284
C              IF NO OUTSIDE AIR CALC CYCLING FAN CFM                           HTPUMP 285
      IF(PO .EQ. 0.0)                                                           HTPUMP 286
     1            FH = (<QNOW>*<CFMAX>)/<ERMIN>                                 HTPUMP 287
      IF((HON .EQ. 0.0) .OR. (FH .LE. 0.01))  GOTO 20                           HTPUMP 288
C              CALC ROOM HUMIDITY                                               HTPUMP 289
      DW     = <QL>/(CONS(2)*AMAX1(FH,<VOLUME>/60.0))                           HTPUMP 290
      F      = <CFMINF>/AMAX1(FH,<VOLUME>/60.0)                                 HTPUMP 291
      WM     = HUMRAT + DW                                                      HTPUMP 292
      IF ( (F+POA) .GT. 0.1 )  WM =                                             HTPUMP 293
     1 (POA*(1.+F)*WOA + (1.-POA)*(DW+F*HUMRAT))/(F+POA)                        HTPUMP 294
      WM = AMIN1(WM,WFUNC(TM,100.,PATM))                                        -113    17
      <COIL_EWBZ> = WBFS(TM,WM,PATM)                                            HVAC1  328
C              CALC HEAT TO RAISE MIX AIR TEMP TO ROOM TEMP                     HTPUMP 296
C              PLUS THE ZONE HEATING LOAD                                       HTPUMP 297
      ZQH    = (TM-TS)*CONS(1)*FH                                               HTPUMP 298
C              RECALCULATE THE UNIT CAPACITY FOR ACCURATE ELEC CALC             HTPUMP 299
      QHM1   = CVAL(<HEAT-CAP-FT>,<COIL_EDBZ>,Tfluid)                           HVAC1  329
      QHT    = <HEATCAPZ>*QHM1                                                  HTPUMP 301
C              TEMP MODIFIER FOR EIR                                            HTPUMP 302
      EIRM1  = CVAL(<HEAT-EIR-FT>,<COIL_EDBZ>,Tfluid)                           HVAC1  330
      PLRH   = ZQH/QHT                                                          HTPUMP 304
C              PART LOAD MODIFIER FOR EIR                                       HTPUMP 305
      EIRM2  = CVAL(<HEAT-EIR-FPLR>,PLRH,PLRH)                                  HTPUMP 306
      EIR    = <HEATING-EIR>*EIRM1*EIRM2                                        -039    29
      ZKWHBT = -QHT * EIR                                                       HVAC22  96
c              assign electric load to meter                                    HVAC22  97
      ZKW    = ZKWHBT * KWBTU                                                   HVAC22  98
      IF (ZKW .GT. 0.)  THEN                                                    HVAC22  99
        ZKWmax = MAX(ZKW/EIRM2, ZKW)                                            HVAC22 100
        CALL PeakZoneDist(1, ZKW,ZKWmax, HeatEndUse,<HEAT-E-MZ>)                HVAC22 101
      ENDIF                                                                     HVAC22 102
   20 CONTINUE                                                                  HTPUMP 310
C********************** run function : HTPUMP-1Z *******************            HTPUMP 311
      IF( MSYSF(42) .NE. 0 )   CALL  FINTS( MSYSF(42), 1. )                     HTPUMP 312
C*******************************************************************            HTPUMP 313
c                                                                               HVAC12  79
c              increment system loads and report variables                      HVAC12  80
C------------ INCREMENT SYSTEM LOADS                                            HVAC12  81
      QCLAT   = QCLAT  +  ZMULT * QCLATZ                                        HVAC12  82
      QC      = QC     +  ZMULT * ZQC                                           HVAC12  83
      QCLUPZ  = ZQC    +  ZKWCBT                                                HVAC12  84
      QCLUPS  = QCLUPS +  ZMULT * QCLUPZ                                        HVAC12  85
      QCZ     = QCZ    +  ZMULT * ZQC                                           HVAC12  86
      <ZKWQC> = ZKWCBT * KWBTU                                                  HVAC12  87
      SKWQC   = SKWQC  +  ZMULT * <ZKWQC>                                       HVAC12  88
      QH      = QH     +  ZMULT * ZQH                                           HVAC12  89
      QHLUPZ  = AMIN1(0.,ZQH    +  ZKWHBT)                                      HVAC12  90
      QHLUPS  = QHLUPS +  ZMULT * QHLUPZ                                        HVAC12  91
      QHZ     = QHZ    +  ZMULT * ZQH                                           HVAC12  92
      <ZKWQH> = ZKWHBT * KWBTU                                                  HVAC12  93
      SKWQH   = SKWQH  +  ZMULT * <ZKWQH>                                       HVAC12  94
      IF (<lp;CTRL_MODE> .NE. OffMode)  GPMZ = <CWDESGPMZ>                      GLHX1   13
      IF( PLRC .GT. 0.) THEN                                                    GLHX1   14
        IF(<CW-VALVEZ> .EQ. 1)  GPMZ  = GPMZ * PLRC                             GLHX1   15
        GPMCZ = GPMZ                                                            GLHX1   16
        GPMCS = GPMCS + GPMZ*ZMULT                                              GLHX1   17
        GPMS  = GPMS  + GPMZ*ZMULT                                              GLHX1   18
      ELSEIF( PLRH .GT. 0.) THEN                                                GLHX1   19
        IF(<CW-VALVEZ> .EQ. 1)  GPMZ  = GPMZ * PLRH                             GLHX1   20
        GPMHZ = GPMZ                                                            GLHX1   21
        GPMHS = GPMHS + GPMZ*ZMULT                                              GLHX1   22
        GPMS  = GPMS  + GPMZ*ZMULT                                              GLHX1   23
      ELSE                                                                      GLHX1   24
        IF(<CW-VALVEZ> .EQ. 1)  THEN                                            GLHX1   25
          GPMZ = 0.                                                             GLHX1   26
        ELSE                                                                    GLHX1   27
          GPMS = GPMS  + GPMZ*ZMULT                                             GLHX1   28
        ENDIF                                                                   GLHX1   29
      ENDIF                                                                     GLHX1   30
c              pass net heating/cooling energy and flow onto the loop           GLHX1   31
      <CW_COIL_GPMZ> = <CWDESGPMZ> * (PLRC+PLRH)                                GLHX1   32
      <CW_COIL_QZ>   = QCLUPZ + QHLUPZ                                          HVAC23  50
c              Save TM and WM for CONS() terms next hour                        -044c2  71
      <zn.Tmix1> = TM                                                           -044c2  72
      <zn.Wmix1> = WM                                                           -044c2  73
      IF (<sy.FanOnPast> .lt. 0.)  THEN  ! start-up hour                        -044c2  74
        <zn.TmixStart> = TM                                                     -044c2  75
        <zn.WmixStart> = WM                                                     -044c2  76
      ENDIF                                                                     -044c2  77
c     IF((IREPRT(2,35).NE.0).AND.(INILZE.GT.NWRMUP))                            IREPRT  63
c    1  WRITE(IOUTPT,9004)(<ZONE-NAME>,II=1,4),NZ,ZMULT,PO,POMIN,               HTPUMP 353
c    2                   <CFMAX>,TC,TS,TM,FH,FC,PLRH,PLRC,                      HTPUMP 354
c    3                   GPMZ,ZQH,ZQC,<TNOW>,TAVE,WSEGPZ,QCWSEZ,                HTPUMP 355
c    4                   QHLUPZ,QCLUPZ                                          HTPUMP 356
c9004 FORMAT(' WLHP Hourly Calcs for ',4a4,' zone ',i2,' ZMULT = ',             HTPUMP 357
c    1                                                f3.0, /                   HTPUMP 358
c    11X,11H PO      = ,F14.2,11H POMIN   = ,F14.2,10H CFMAX  = ,               HTPUMP 359
c    2                                          F14.0 /                         HTPUMP 360
c    31X,11H TC      = ,F14.3,11H TS      = ,F14.3,10H TM     = ,               HTPUMP 361
c    4                                          F14.3 /                         HTPUMP 362
c    51X,11H FH      = ,F14.3,11H FC      = ,F14.3,10H PLRH   = ,               HTPUMP 363
c    6                                          F14.3 /                         HTPUMP 364
c    71X,11H PLRC    = ,F14.2,11H GPMZ    = ,F14.2,10H ZQH    = ,               HTPUMP 365
c    8                                          F14.2 /                         HTPUMP 366
c    91X,11H ZQC     = ,F14.2,11H TNOW    = ,F14.2,10H TAVE   = ,               HTPUMP 367
c    1                                          F14.2 /                         HTPUMP 368
c    91X,11H WSEGPZ  = ,F14.2,11H QCWSEZ  = ,F14.2,10H QHLUPZ = ,               HTPUMP 369
c    1                                          F14.2 /                         HTPUMP 370
c    91X,11H QCLUPZ  = ,F14.2,11H         = ,F14.2,10H        = ,               HTPUMP 371
c    1                                          F14.2 /      )                  HTPUMP 372
      QLSUM  = QLSUM + <QL>*ZMULT                                               HTPUMP 373
C              INCREMENT TOTAL SYSTEM PLENUM LOAD                               HTPUMP 374
      QPSUM  = QPSUM + <QP>*ZMULT                                               HTPUMP 375
   21 CONTINUE                                                                  HTPUMP 376
C              CALC ZONE FAN KW                                                 HTPUMP 377
      ZFANKW = (FH+FC)*<SUPPLY-KW>                                              HTPUMP 378
      CFMZ   = (FH+FC)                                                          -043a  112
      FANKW  = FANKW + ZFANKW*ZMULT                                             HTPUMP 379
c              assign electric load to meter                                    HVAC22 103
      ZFANKWmax = <CFMAX> * <SUPPLY-KW>                                         HVAC22 104
      CALL PeakZoneDist(1, ZFANKW,ZFANKWmax, VentEndUse,<VENT-E-MZ>)            HVAC22 105
c              exhaust fan                                                      -044e  206
      IF (<EXHAUST-SOURCE> .eq. 1)    ! makeup by system OA                     -046   226
     &  Call ZoneExhaust(9, FH+FC)    ! exhaust flow and power                  -046   227
      ECFM = ECFM + EXCFM*ZMULT                                                 -044e  208
C              INCREMENT TOTAL SYSTEM KW BY TOTAL ZONE KW                       HTPUMP 381
      ZKW = <ZKW> + ZFANKW + ZKW + ZKWS                                         HTPUMP 382
      <SKW>  = <SKW> + ZKW*ZMULT                                                HTPUMP 383
      IF(<ZONE-TYPE> .NE. 1)  GOTO 26                                           HTPUMP 384
c              Pass baseboard energy onto source                                -035   143
    5 IF (<BASEBOARD-SOURCE> .LT. 0)  THEN                                      -035   144
c              hot-water or steam                                               -035   145
        <BBRD_EDB> = TAVE                                                       -035   146
        <BBRD_Q>   = QHBZ                                                       -035   147
      ELSEIF (<BASEBOARD-SOURCE> .EQ. 2)  THEN                                  -035   148
c              fuel-driven                                                      -035   149
        CALL FURNAC(QHBZ,<BASEBOARD-RATING>,<BASEBOARD-SOURCE>,ZMULT)           HVAC6  379
        JEM       = <AUX-E-MZ>                                                  HVAC6  380
        <AUX-EM>  = <AUX-EM> + FurnAuxkW                                        HVAC6  381
        JFM       = <HEAT-F-MZ>                                                 HVAC6  382
        <HEAT-FM> = <HEAT-FM> - FFUEL                                           HVAC6  383
        <AUX-FM>  = <AUX-FM>  + FurnAuxFuel                                     HVAC6  384
      ELSEIF (<BASEBOARD-SOURCE> .EQ. 1)  THEN                                  -035   150
c              electric                                                         -035   151
        X       = QHBZ * KWBTU                                                  HTPUMP 391
        ZKW     = ZKW     - X                                                   HTPUMP 392
        <ZKWQH> = <ZKWQH> + X                                                   HTPUMP 393
        <SKW>   = <SKW>   - X * ZMULT                                           HTPUMP 394
        SKWQH   = SKWQH   - X * ZMULT                                           HTPUMP 395
c              assign electric load to meter                                    HVAC22 106
        CALL PeakZoneDist(1, -X,<MAX_BBRD_KWZ>, HeatEndUse,<HEAT-E-MZ>)         HVAC22 107
      ENDIF                                                                     HTPUMP 397
C              IF NO REP-BLOCK BUFFER OR NO HOURLY-REP                          HTPUMP 400
C              WAS SCHEDULED ON THIS HOUR SKIP                                  HTPUMP 401
   26 IF((<IZNBUFP>.EQ.0).OR.(IRSCH.EQ.0))  GOTO 30                             HTPUMP 402
C              SINCE THE HEAT PUMP SYSTEM HAS NO CENTRAL AIR                    HTPUMP 403
C              HANDLING UNIT WE SAVE SOME OF THE INFO USED                      HTPUMP 404
C              TO COMPUTE THE LOADS IN THE SPECIAL VARIABLE                     HTPUMP 405
C              WHICH IS THEN WRITTEN TO THE REP-BLOCK BUFFER                    HTPUMP 406
      FCHPS(1)  = TS                                                            HTPUMP 407
      FCHPS(2)  = ZQH                                                           HTPUMP 408
      FCHPS(3)  = ZQC                                                           HTPUMP 409
      FCHPS(4)  = ZFANKW                                                        HTPUMP 410
      FCHPS(5)  = TM                                                            HTPUMP 411
      FCHPS(6)  = TC                                                            HTPUMP 412
      FCHPS(7)  = WM                                                            HTPUMP 413
      FCHPS(8)  = WCOIL                                                         HTPUMP 414
      FCHPS(9)  = PO                                                            HTPUMP 415
      FCHPS(10) = QCLATZ                                                        HTPUMP 416
      FCHPS(11) = PLRC                                                          HTPUMP 417
      FCHPS(12) = PLRH                                                          HTPUMP 418
      FCHPS(13) = EIR                                                           HTPUMP 419
      FCHPS(14) = <COIL_EWBZ>                                                   HVAC1  334
      FCHPS(15) = GPMZ                                                          HTPUMP 421
C              CALL THE ROUTINE TO FILL THE REP-BLOCK BUFFER                    HTPUMP 422
      CALL USERZR( ZP1,ZP2 )                                                    HTPUMP 423
   30 CONTINUE                                                                  HTPUMP 424
      IF(IRPZON .NE. 0)  CALL RPTZON                                            HTPUMP 425
      VOLMUL = VOLMUL+<VOLUME>*<MULTIPLIER>                                     HTPUMP 426
      XT1    = <VOLUME>*<MULTIPLIER>*WR                                         HTPUMP 427
      WAV    = WAV+XT1                                                          HTPUMP 428
C              INCREMENT ZP1 TO POINT TO THE NEXT ZONE                          HTPUMP 429
      ZP1    = ZP1 + NZD                                                        HTPUMP 430
   10 CONTINUE                                                                  HTPUMP 431
c                                                                               HVAC1  335
c              restore heating and cooling schedule values                      HVAC1  336
      CON = SCHc                                                                HVAC1  337
      HON = SCHh                                                                HVAC1  338
      <PASTWR>=WAV/VOLMUL                                                       HTPUMP 432
C                                                                               HTPUMP 433
C              CALCULATE TOTAL NET SYSTEM LOADS                                 HTPUMP 434
C                                                                               HTPUMP 435
C********************** run function : HTPUMP-2 ********************            HTPUMP 458
      IF( MSYSF(43) .NE. 0 )   CALL  FINTS( MSYSF(43), 2. )                     HTPUMP 459
C*******************************************************************            HTPUMP 460
      RETURN                                                                    HTPUMP 461
      END                                                                       HTPUMP 462
      SUBROUTINE HVUNIT                                                         HVUNIT   2
C                                                                               HVUNIT   3
C                            HEATING AND VENTILATING UNIT                       HVUNIT   4
C                                                                               HVUNIT   5
C              DEVELOPED BY                                                     -130     1
C                            J. J. Hirsch & S. D. Gates                         -130     2
C                            James J. Hirsch & Associates                       -130     3
C                            Camarillo, California                              -130     4
C              BASED UPON CODE DEVELOPED BY J. J. Hirsch and                    -130     5
C                            W. F. Buhl                                         -130     6
C                            A. E. Erdem                                        -130     7
C                            Lawrence Berkeley National Laboratory              -130     8
C                            University of California                           -130     9
Copyright (c) 1997 by James J. Hirsch. All Rights Reserved. Unpublished         -130    10
c rights reserved under the Copyright Laws of the United States.                -130    11
c RESTRICTED RIGHTS NOTICE: Government use, reproduction or disclosure          -130    12
c is subject to restrictions as set forth in Rights in Data (g)(3) in           -130    13
c UC/LBL purchase order 4607010 with J.J. Hirsch & Associates.                  -130    14
C                                                                               HVUNIT   7
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON /DDSDAT/ FONh, SFKWh, DTSh, CFMRATh, FONNGTh, RCFMmix,             /DDSDAT/ 2
     1                RfanCFM, EXFIL, DTDUCT, DTDUCTh, TCDFSR, THDFSR,          /DDSDAT/ 3
     2                CFMINh, CFMINc, CFMINhm, CFMINcm, CFMINt,                 /DDSDAT/ 4
     3                TCMINcoil, THMAXcoil, IWarmestZ, IColdestZ                /DDSDAT/ 5
      DIMENSION       DDSDAT(21)                                                /DDSDAT/ 6
      EQUIVALENCE     (DDSDAT(1), FONh)                                         /DDSDAT/ 7
      COMMON  /ENDUSE/ SUPPKW, HEATKW                                           HVAC27   1
      COMMON /FFUEL/ FFUEL, FurnAuxFuel, FurnAuxkW, PLRF                        /FFUEL/  2
C              SYSTEM LEVEL VARIABLES FOR DESICCANT SYSTEMS, BOTH TOTAL         /DSYSTD/ 2
C              AND INTEGRATED                                                   /DSYSTD/ 3
      COMMON  /DSYSTD/  SCGAS, QREG, WBR, WB8, T8, W8, WB9, T9, W9, EFF,        /DSYSTD/ 4
     1                  DTON, DMODE(7), ERMAX4, ERMAX5, ERMAX6, OPMODE,         /DSYSTD/ 5
     2                  DBOA,WOA,DGAS,DKW,TCONDd,QCDTOT,QCDS,QCDL,              /DSYSTD/ 6
     3                  POA,DFANKW,RFANKW,DMOTKW,EVKW,QCEVT,QCEVS,              /DSYSTD/ 7
     4                  QCEVL,TCMNEV                                            /DSYSTD/ 8
      REAL DSYSTD(39)                                                           /DSYSTD/ 9
      EQUIVALENCE (DSYSTD(1), SCGAS)                                            /DSYSTD/10
      common  /FNSYS/  ISKIPS, MSYSF(120)                                       /FNSYS/  2
      COMMON  /HRREP / Irb, Ihrp, Lrb, Lhrp, Nrb, Nhrp, IVTLIM(3,50),           HR       5
     &                 IGRPtr, IBRPtr, IRSch, IRSchT(5),                        HR       6
     &                 NHRTyp(3), ITBUF(3), ITBUFB(3), ITBUFE(3),               HR       7
     &                 IHREOF, ICDFLG                                           HR       8
      COMMON  /MISCD / TEMPS(4,9999),CONS(5),TEMPSL(9999),                      -048a   10
     1                 BLDGQH,BLDGQC,BLDGQL,BLDGP,BPMULT,                       /MISCD/  3
     $                 DBTMIN,DBTMAX,WMIN,WMAX,NSPZ(9999),                      -048a   11
     3                 DQ, DTP, DTR, DTS, FPI, PLRCC , POM, TC2, TDM,           /MISCD/  5
     4                 TRA,WCOL,WCOLM,WMM,YPI,KWBTU,BTUKW,UNFILD,Unusedm        RemPA   45
      REAL             KWBTU                                                    /MISCD/  7
      COMMON  /PLANTD/ QHMP,TMP,CFMP,QHPP,CFMPP,                                /PLANTD/ 2
     1                 QHZP,TZP,DHWPKW,DHWPLF,DHWQRP                            RemPA   46
      REAL             PLANTD(10)                                               RemPA   47
      EQUIVALENCE      (PLANTD(1), QHMP)                                        RemPA   48
      COMMON  /PTRPLT/ Ipm,Ilp,Ich,Ibl,Idw,Itw,Ipv,Ign,Itk,Ihx,                 PV       1
     &                 Iec,Ilm,Iem,Ifm,Ism,Icm,Imm,Imc,Igl,Isp2,                XFC2     1
     &                 Ispare(5),  Ipe,                                         HVAC19   3
     &                 Npm,Nlp,Nch,Nbl,Ndw,Ntw,Npv,Ngn,Ntk,Nhx,                 PV       2
     &                 Nec,Nlm,Nem,Nfm,Nsm,Ncm,Nmm,Nmc,Ngl,Nsp2,                XFC2     2
     &                 Nspare(5),  Npe,                                         HVAC19   6
     &                 Lpm,Llp,Lch,Lbl,Ldw,Ltw,Lpv,Lgn,Ltk,Lhx,                 PV       3
     &                 Lec,Llm,Lem,Lfm,Lsm,Lcm,Lmm,Lmc,Lgl,Lsp2,                XFC2     3
     &                 Lspare(5),  Lpe,                                         HVAC19   9
     &                 Jpm,Jlp,Jch,Jbl,Jdw,Jtw,Jpv,Jgn,Jtk,Jhx,                 PV       4
     &                 Jec,Jlm,Jem,Jfm,Jsm,Jcm,    Jmc,Jgl,                     HVAC19  11
     &                 Jpe, kpr, NumMeters, NumIntHX                            XFC1     1
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      COMMON  /SYSTD / TH,TC,TM,TR,QH,QC,QHZ,QCZ,QHB,QHP,QHUM,                  /SYSTD/  2
     1                 QDHUM,TCMIN,THMAX,QLSUM,QPSUM,CFM,CFMH,CFMC,             /SYSTD/  3
     2                 RCFM,ECFM,CINF,FON,HON,CON,BON,SCONS(3),PH,PC,           /SYSTD/  4
     3                 SKW,FANKW,unused1,WR,WM,WCOIL,WW,PO,D,                   -046f    1
     4                 FTEMP,TCR,QHR,RfanPumpKW,SGAS,SKWQH,SKWQC,QCLAT,         -131    23
     5                 SFKW,RFKW,FONNGT,WSURF,RWalkinQ,TSURF,TRh,               -131    24
     6                 CBF,CBF1,CBF2,EON,PLRCFM,PLRC,PLRH,QCM1,                 /SYSTD/  8
     7                 QCM2,QHM1,EIRM1,EIRM2,EIR,OFKW,QCT,QCS,                  /SYSTD/  9
     8                 WRMAX,WRMIN,CFMRAT,QdistG,QdistL,RON,QHT,                /SYSTD/ 10
     9                 TPOMIN,POMIN,QHSUP,QRSENS,QRLAT,QRREC,QRREJ,             /SYSTD/ 11
     1                 RCOMKW,RDEFKW,RAUXKW,ECFMP,CFMIN,CINFP,DT,DW,            /SYSTD/ 12
     2                 EWB,IC,NATTSP,Q,RETR,SLOAD,QLSUMP,T,TCHUM,TEND,          /SYSTD/ 13
     3                 TS,hgbmin,HPDefE,EconoOnly,TDuctEnv,                     -044e1   1
     4                 QCUNMT,CapRh,CapRph,CapRc                                HVAC25   3
      REAL             SYSTD(113)                                               HVAC19  13
      EQUIVALENCE      (SYSTD(1),TH)                                            RemPA   65
      COMMON  /TIME  / IDOY, IYR, IMO, IDAY, IHR,                               Time     4
     &                 ISCMO, ISCDAY, ISCHR, IDOW, ISCDOW, iDSdates(6),         -044e5   1
     &                 iTimeFlg, iDSFlg, iDDFlg, InitialFlg, LeapYr,            Time     6
     &                 CLOCK(10), MONDSC(13), MONLEN(12), MONSDA(12)            HR      12
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
      COMMON  /ZONED / EXCFM,FH,FC,CFMZ,QHBZ,QOVER,THZ,TCZ,ERMAX,ERMIN,         /ZONED/  2
     1                 TRY,FTD,CORINT,G0,G1,G2,G3,SIGMAG,TL,ZQHR,TAVE,          /ZONED/  3
     2                 ZQH,ZQC,FCHPS(15),ACFM,ZKW,TCMINZ,THMAXZ,                /ZONED/  4
     3                 ERMAXM,ERMINM,THR,CSSCND,CSSVEC,HENOW,QGWIN,             /ZONED/  5
     4                 QSNABT,QGOPWL,QGVEC,CFMCVT,SSFPT,CFMVNT,ZFANKW,          /ZONED/  6
     5                 ZKWCBT,ZKWHBT,ZCapRbbrd, XC,ZC,XH,ZH                     -044e2   7
      REAL ZONED(63)                                                            -044e2   8
      EQUIVALENCE (ZONED(1),EXCFM)                                              /ZONED/  9
      COMMON  /LENS/   MWFLEN, MRLEN, MSHLEN, MWNLEN, MDRLEN, MXLEN,            /LENS/   2
     1                 MULEN, MZLEN, MIWLEN, MFLLEN,                            /LENS/   3
     2                 LMTB, LLDSOU, MSTLEN, LSTFT, MWLLEN                      /LENS/   4
      COMMON  /PTRBGN/ IWFB, IWPB, ICONSB, IGTB, IWLB, IGEOB, ISHADB,           /PTRBGN/ 2
     &                 IWINB, IDRB, IEWB, IUGB, ISPB, IIWPB, IIWB,              /PTRBGN/ 3
     &                 IFLB, ISPCDB, IOTHB, ILHB, IZQCMB, ISSHDB,               /PTRBGN/ 4
     &                 IOHFIB, IZLSK, IZLSL, ISTFB, ILSSH                       PV2      1
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     /PNTRS/  3
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        /PNTRS/  4
      COMMON  /SIZE/   LENGTH,NWF,NWPAR,NCONS,NGT,NWL,NGEO,                     /SIZE/   2
     1                 NGSHAD, NWIN, NDOOR, NEW, NUG, NSPl, NIWP, NIW,          /SIZE/   3
     &                 NFL, NBR, NOTH, NITH, NOPSRF,                            /SIZE/   4
     &                 NSURF, NSSHD, NSHTOT, NEWshade                           /SIZE/   5
      H(DB,W) = 0.24*DB + (1061.0+0.444*DB)*W                                   H        2
C              UNIT HEATER AND VENTILATOR CAN PROVIDE NO ACTIVE COOLING         HVUNIT  23
C              BUT WE CAN GET FREE COOLING WITH OUTSIDE AIR                     HVUNIT  24
      CON    = 0.                                                               HVUNIT  25
      TR0 = 0.                                                                  HVUNIT  26
      TRA0 = 0.                                                                 HVUNIT  27
C********************** run function : HVUNIT-0 ********************            HVUNIT  28
      IF( MSYSF(44) .NE. 0 )   CALL  FINTS( MSYSF(44), 0. )                     HVUNIT  29
C*******************************************************************            HVUNIT  30
c              set circulation loop restrictions on heating and                 HVAC1  340
c              cooling capacity for use in DKTEMP.                              HVAC1  341
      IF (<HW-LOOP> .NE. 0)  THEN                                               HVAC1  342
c              heating coil is hot water - pointer to loop                      HVAC1  343
        JLP   = <HW-LOOP>                                                       HVAC1  344
        CapRh = <lp;HCAP_RATIO>                                                 HVAC16  94
      ELSE                                                                      HVAC1  346
        CapRh = 1.0                                                             HVAC1  347
      ENDIF                                                                     HVAC1  348
      IF (<PHW-LOOP> .NE. 0)  THEN                                              HVAC1  349
c              preheat coil is hot water - pointer to loop                      HVAC1  350
        JLP    = <PHW-LOOP>                                                     HVAC1  351
        CapRph = <lp;HCAP_RATIO>                                                HVAC16  95
      ELSE                                                                      HVAC1  353
        CapRph = 1.0                                                            HVAC1  354
      ENDIF                                                                     HVAC1  355
c              DKTEMP calcs the hot (TH) and cold (TC) supply temps             HVAC1  356
      CALL DKTEMP                                                               HVUNIT  32
C              SET ZP1 TO POINT TO THE FIRST ZONE                               HVUNIT  33
      ZP1    = ISZ                                                              HVUNIT  34
C              TR0 IS THE RETURN TEMP WHEN RCFM=0.  SET IT TO TEMP              HVUNIT  35
C              OF FIRST ZONE.                                                   HVUNIT  36
      TR0 = <TNOW>                                                              HVUNIT  37
      <DCVOAcfmS> = 0.0                                                         -044c  532
      <DCVOAcfmFracCrit> = 0.0                                                  -044c  533
C                                                                               HVUNIT  38
C              LOOP THROUGH THE ZONES                                           HVUNIT  39
C                                                                               HVUNIT  40
      DO 10 NZ = 1,NSZ                                                          HVUNIT  41
C              ZERO THE ZONE DATA COMMON BLOCK                                  HVUNIT  42
      DO 111 I=1,63                                                             -044e2  46
  111 ZONED(I) = 0.0                                                            HVUNIT  44
      ZP2    = <ZP2>                                                            HVUNIT  45
      <ERMAX> = 0.0                                                             HVUNIT  46
      <ERMIN> = 0.0                                                             HVUNIT  47
c              if exhaust made up by infiltration                               -046   228
      IF (<EXHAUST-SOURCE> .eq. 2  .or.                                         -047b   24
     &    <EXHAUST-SOURCE> .eq. 3)  Call ZoneExhaust(9, xx)  ! power            -047b   25
C              IF FANS ARE ON AND THIS IS A PLENUM SKIP                         HVUNIT  48
      IF((FON .NE. 0.) .AND. (<ZONE-TYPE> .EQ. 3)) GO TO 10                     HVUNIT  49
C              PICK UP ZONE MULTIPLIER                                          HVUNIT  50
      ZMULT  = <MULTIPLIER>                                                     HVUNIT  51
      IF(FON .EQ. 0.)  GOTO 2                                                   HVUNIT  52
c              Set reheat coil hourly available capacity ratio                  -044b   46
      IF(<HEATCAPZ> .LT. 0.0) THEN                                              -044b   47
        IF (<HW-LOOPZ> .NE. 0)  THEN                                            -044b   48
c              set hot water circulation loop restrictions                      -044b   49
C              on zonal heating capacity                                        -044b   50
          JLP    = <HW-LOOPZ>                                                   -044b   51
          ZCapRh = <lp;HCAP_RATIO>                                              -044b   52
        ELSE                                                                    -044b   53
C              Not hot water - no on zonal heating restriction                  -044b   54
          ZCapRh = 1.0                                                          -044b   55
        ENDIF                                                                   -044b   56
      ELSE                                                                      -044b   57
C              no coil so no zonal heating capacity                             -044b   58
        ZCapRh = 0.0                                                            -044b   59
      ENDIF                                                                     -044b   60
C                                                                               HVUNIT  53
C              CALCULATE ADDITION RATES                                         HVUNIT  54
C                                                                               HVUNIT  55
      TCMINZ  = TH                                                              HVUNIT  56
      THMAXZ  = AMIN1(TH+<REHEAT-DELTA-T>*HON*ZCapRh,<MAX-SUPPLY-T>)            HVAC1  365
      XC      = CONS(1)*<CFMAX>                                                 -044e2  47
      <ERMAX> = XC * (<TNOW>-TH)                                                -044e4   3
      ZC      = XC                                                              -044e2  49
      ERMAXM  = <ERMAX>                                                         HVUNIT  59
      ZH      = ZC                                                              -044e2  50
      ERMINM  = <ERMAX>                                                         HVUNIT  60
      XH      = XC                                                              -044e2  51
      <ERMIN> = XH * (<TNOW>-THMAXZ)                                            -044e2  52
C              CALL ROUTINE TO CALC ZONE TEMP AND LOAD                          HVUNIT  62
    2 CALL TEMDEV(0)                                                            HVUNIT  63
C              SET ZONE EXHAUST TO ZERO                                         HVUNIT  64
      EXCFM  = 0.                                                               HVUNIT  65
C              IF FANS ARE OFF OR THIS IS NOT A COND ZONE SKIP                  HVUNIT  66
      IF(<ZONE-TYPE> .NE. 1)  GOTO 16                                           HVUNIT  67
      IF(FON .EQ. 0.)  GOTO 15                                                  HVUNIT  68
      IF (<EXHAUST-SOURCE> .eq. 1) THEN  ! makeup by system OA                  -046   230
        Call ZoneExhaust(1, <CFMAX>)     ! set EXCFM                            -046   231
        Call ZoneExhaust(9, <CFMAX>)     ! power                                -046   232
      ENDIF                                                                     -046   233
      ECFM = ECFM + EXCFM*ZMULT                                                 -044e  211
      TAVE   = (<TNOW>+<TPAST>)*0.5                                             HVUNIT  77
      ZQH    = AMIN1(0.0,<QNOW>+CONS(1)*<CFMAX>*(TH-TAVE))                      HVUNIT  78
      IF(TAVE .GT. THZ+THR)  ZQH = 0.0                                          HVUNIT  79
   15 CONTINUE                                                                  HVUNIT  80
C              CALC RETURN AIR RATIO                                            HVUNIT  81
      RETR   = 1.                                                               HVUNIT  82
      IF(<CFMAX> .GT. 0.)  RETR = (1.0-EXCFM/<CFMAX>)                           HVUNIT  83
      <COIL_EDBZ> = TH                                                          HVAC1  366
C              QHZ WILL BE THE TOTAL HEATING REQUIRED BY ZONES                  HVUNIT  89
C              CHECK IF A FURNACE WAS USED                                      HVUNIT  90
C              IF ZONE COILS ARE ELECTRIC                                       HVUNIT  91
      IF (<ZONE-HEAT-SOURCE>.EQ.1)  THEN                                        HVUNIT  92
        X      = ZQH * KWBTU                                                    HVUNIT  93
        ZKW    = ZKW    - X                                                     HVUNIT  94
        SKWQH  = SKWQH  - X*ZMULT                                               HVUNIT  95
        JEM       = <HEAT-E-MZ>                                                 HVAC6  391
        <HEAT-EM> = <HEAT-EM> - X*ZMULT                                         HVAC6  392
      ENDIF                                                                     HVUNIT  97
      IF((<ZONE-HEAT-SOURCE>.EQ.2).OR.(<ZONE-HEAT-SOURCE>.EQ.3))  THEN          HVAC6  393
        CALL FURNAC(ZQH,<HEATCAPZ>,<ZONE-HEAT-SOURCE>,ZMULT)                    HVAC6  394
        JEM       = <AUX-E-MZ>                                                  HVAC6  395
        <AUX-EM>  = <AUX-EM> + FurnAuxkW                                        HVAC6  396
        JFM       = <HEAT-F-MZ>                                                 HVAC6  397
        <HEAT-FM> = <HEAT-FM> - FFUEL                                           HVAC6  398
        <AUX-FM>  = <AUX-FM>  + FurnAuxFuel                                     HVAC6  399
      ENDIF                                                                     HVAC6  400
C              IF BASEBOARDS ARE ELECTRIC                                       HVUNIT 100
      IF (<BASEBOARD-SOURCE>.EQ.1)  THEN                                        HVUNIT 101
        X      = QHBZ * KWBTU                                                   HVUNIT 102
        ZKW    = ZKW    - X                                                     HVUNIT 103
        SKWQH  = SKWQH  - X*ZMULT                                               HVUNIT 104
        JEM       = <HEAT-E-MZ>                                                 HVAC6  401
        <HEAT-EM> = <HEAT-EM> - X*ZMULT                                         HVAC6  402
      ENDIF                                                                     HVUNIT 106
C              IF BASEBOARDS ARE GAS OR OIL                                     HVUNIT 107
      IF((<BASEBOARD-SOURCE>.EQ.2).OR.(<BASEBOARD-SOURCE>.EQ.3))  THEN          HVAC6  403
        CALL FURNAC(QHBZ,<BASEBOARD-RATING>,<BASEBOARD-SOURCE>,ZMULT)           HVAC6  404
        JEM       = <AUX-E-MZ>                                                  HVAC6  405
        <AUX-EM>  = <AUX-EM> + FurnAuxkW                                        HVAC6  406
        JFM       = <HEAT-F-MZ>                                                 HVAC6  407
        <HEAT-FM> = <HEAT-FM> - FFUEL                                           HVAC6  408
        <AUX-FM>  = <AUX-FM>  + FurnAuxFuel                                     HVAC6  409
      ENDIF                                                                     HVAC6  410
C********************** run function : HVUNIT-1 ********************            HVUNIT 111
      IF( MSYSF(45) .NE. 0 )   CALL  FINTS( MSYSF(45), 1. )                     HVUNIT 112
C*******************************************************************            HVUNIT 113
c                                                                               HVAC1  367
c              save zonal coil flows and loads for circulation loop calcs       HVAC1  368
      <COIL_CFMZ>   = <CFMAX>                                                   HVAC1  369
      <COIL_EDBZ>   = TH                                                        HVAC1  370
      <COIL_CYCLEZ> = 1.                                                        HVAC1  371
      <COIL_QZ>     = ZQH                                                       HVAC1  372
      <BBRD_EDB>    = TAVE                                                      HVAC1  373
      <BBRD_Q>      = QHBZ                                                      HVAC1  374
      QHZ    = QHZ + ZMULT*ZQH                                                  HVUNIT 114
C              INCREMENT TOTAL ROOM LATENT LOAD                                 HVUNIT 115
      QLSUM  = QLSUM + <QL>*RETR*ZMULT                                          HVUNIT 116
C              INCREMENT TOTAL LIGHT HEAT TO PLENUM                             HVUNIT 117
      QPSUM  = QPSUM + <QP>*ZMULT                                               HVUNIT 118
C              INCREMENT TR BY WEIGHTED ZONE TEMP                               HVUNIT 119
      CFMZ   = <CFMAX>                                                          HVUNIT 120
      TR     = TR + TAVE*(CFMZ-EXCFM)*ZMULT                                     HVUNIT 121
C              INCREMENT TOTAL INFILTRATION CFM                                 HVUNIT 122
      CINF   = CINF   + <CFMINF>*RETR*ZMULT                                     HVUNIT 123
C              DCV - Calculate zone Occupancy based vent CFM and fraction       -044c  534
      IF((<MIN-OA-METHOD>.LT.0) .AND. (<CFMAX> .GT. 0.))  THEN                  -044c  535
        MZ = ISPB + (<NZSPACE>-1)*MZLEN                                         -044c  536
        <DCVOAcfmZ> = SchVal(<PEOPLE-SCHEDULE>, 1.)                             -045b   79
     &              * <ZPPLNO> * <OA-CFM/PER>                                   -045b   80
        IF(<MIN-OA-METHOD>.EQ.-1) <DCVOAcfmZ> = RETR*<DCVOAcfmZ>                -044c  538
        XX = <OUTSIDE-AIR-CFM>                                                  -044c  539
        IF(XX .EQ. 0.)                                                          -044c  540
     $     XX = AMAX1(<OA-FLOW/AREA>*<AREA>,<OA-CHANGES>*<VOLUME>/60.)          -044c  541
        <DCVOAcfmZ> = AMAX1(<DCVOAcfmZ>,XX)                                     -044c  542
        <DCVOAcfmFrac> = AMIN1(1.,<DCVOAcfmZ>/<CFMAX>)                          -044c  543
        <DCVOAcfmS> = <DCVOAcfmS> + <DCVOAcfmZ>*ZMULT                           -044c  544
        <DCVOAcfmFracCrit> = AMAX1(<DCVOAcfmFracCrit>,<DCVOAcfmFrac>)           -044c  545
      ELSE                                                                      -044c  546
        <DCVOAcfmZ> = 0.0                                                       -044c  547
        <DCVOAcfmFrac> = 0.0                                                    -044c  548
      ENDIF                                                                     -044c  549
C              INCREMENT TOTAL SYSTEM KW                                        HVUNIT 124
   16 CONTINUE                                                                  HVUNIT 125
      IF (<ZONE-TYPE>.EQ.3) GO TO 10                                            HVUNIT 126
      ZKW = ZKW + <ZKW>                                                         HVUNIT 127
      <SKW>  = <SKW> + ZKW*ZMULT                                                HVUNIT 128
      CFMZ   = <CFMAX>                                                          HVUNIT 129
C              IF REP-BLOCK BUF AND HOURLY-REP SCHED FILL BUF                   HVUNIT 138
      IF((<IZNBUFP>.NE.0).AND.(IRSCH.NE.0))  CALL USERZR( ZP1,ZP2 )             HVUNIT 139
      IF(IRPZON .NE. 0)  CALL RPTZON                                            HVUNIT 140
C              INCREMENT ZP1 TO POINT TO THE NEXT ZONE                          HVUNIT 141
   10 ZP1    = ZP1 + NZD                                                        HVUNIT 142
C                                                                               HVUNIT 143
C              CALCULATE TOTAL SYSTEM LOADS                                     HVUNIT 144
C                                                                               HVUNIT 145
C              Q WILL BE THE SYSTEM LOAD                                        HVUNIT 146
      Q      = 0.                                                               HVUNIT 147
C              ZERO MIX AIR HUMIDITY                                            HVUNIT 148
      WM     = 0.                                                               HVUNIT 149
      DW     = 0.0                                                              HVUNIT 150
C              PICK UP CFM, MAKE SURE IT IS ZERO IF FANS OFF                    HVUNIT 151
      IF(FON .EQ. 0.0)  GOTO 30                                                 HVUNIT 152
      CFM    = <SUPPLY-CFM>                                                     HVUNIT 153
C              CALC RETURN AIR CFM                                              HVUNIT 155
      RCFM   = CFM - ECFM                                                       HVUNIT 156
      PLENLOSS  = 0.                                                            RetLoss125
      DuctExfil = 0.                                                            RetLoss126
      DuctInfil = 0.                                                            RetLoss127
      IF (<DUCTCFMLOSS> .GT. 0.)  THEN                                          RetLoss128
        DuctExfil = <DUCTCFMLOSS>                                               RetLoss129
        IF (<DUCT-ZTYPE> .EQ. 3)  THEN                                          RetLoss130
c              air loss is in plenum - must be accounted for separately         RetLoss131
c              until after the plenum calcs                                     RetLoss132
          PLENLOSS = DuctExfil                                                  RetLoss133
        ELSE                                                                    RetLoss134
c              air loss is in unconditioned zone - adjust return and/or         RetLoss135
c              exhaust flow                                                     RetLoss136
          DuctInfil = DuctExfil * (1.-<DUCT-AIR-LOSS-OA>)                       RetLoss137
          RCFM      = RCFM + DuctInfil                                          RetLoss138
          ECFM      = ECFM + DuctExfil - DuctInfil                              RetLoss139
c              adjust summed return air quantities                              RetLoss140
          ZP1   = <DUCT-LOSS-ZONE>                                              RetLoss141
          ZP2   = <ZP2>                                                         RetLoss142
          Zmult = <MULTIPLIER>                                                  RetLoss143
          Tavg  = (<TNOW>+<TPAST>) * 0.5              ! zone T                  RetLoss144
          TR    = TR + Tavg*DuctInfil                 ! return T                RetLoss145
          RETR  = DuctInfil                           ! back into duct          RetLoss146
     &                / (<CFMINF>*Zmult + DuctExfil)                            RetLoss147
          QLSUM = QLSUM + <QL>     * RETR * Zmult     ! latent                  RetLoss148
          CINF  = CINF  + <CFMINF> * RETR * Zmult     ! infiltration            RetLoss149
        ENDIF                                                                   RetLoss150
      ENDIF                                                                     RetLoss151
c                                                                               HVUNIT 168
      IF (RCFM.GT.1.) THEN                                                      HVUNIT 169
C              IF NONZERO RETURN AIR, SET RETURN TEMP                           HVUNIT 170
          TR = TR/RCFM                                                          HVUNIT 171
C              IF AIR PATH NOT DIRECT ADD LIGHT HEAT TO IT                      HVUNIT 172
          IF(<RETURN-AIR-PATH> .NE. 0)  TR = TR + QPSUM/(CONS(1)*RCFM)          HVUNIT 173
      ELSE                                                                      HVUNIT 174
C              IF NO RETURN AIR, SET RETURN TEMP TO 1ST ZONE TEMP               HVUNIT 175
          TR = TR0                                                              HVUNIT 176
      END IF                                                                    HVUNIT 177
      TM = TR                                                                   HVUNIT 178
C              SET MOISTURE CHANGE TO ZERO                                      HVUNIT 179
      WW     = 0.                                                               HVUNIT 180
C              CALC MINIMUM OUTSIDE AIR RATIO                                   HVUNIT 181
      POM    = <MIN-OUTSIDE-AIR>*CFM                                            HVUNIT 182
C              SEE IF SCHEDLUED POM                                             HVUNIT 183
      SH = SchVal(<MIN-AIR-SCH>, -999.)                                         Time   273
      IF (SH .NE. -999.)  POM = CFM*AMAX1(0.0,AMIN1(1.0,SH))                    Time   274
      POM    = AMAX1(POM,ECFM)/CFM                                              HVUNIT 189
      POM    = AMIN1(1.,POM)                                                    HVUNIT 190
      IF((<MIN-OA-METHOD> .lt. 0) .AND. (SH .EQ. -999.0))  THEN                 -044c  550
        IF(CFM .GT. 0.) THEN                                                    -044c  551
          POM = AMIN1(1.,AMAX1(<DCVOAcfmS>,ECFM)/CFM)                           -044c  552
          IF(<MIN-OA-METHOD> .eq. -2)                                           -044c  553
     $      POM = AMIN1(1.,POM/(1.0+POM-<DCVOAcfmFracCrit>))                    -044c  554
        ELSE                                                                    -044c  555
          POM = 1.                                                              -044c  556
        ENDIF                                                                   -044c  557
      ENDIF                                                                     -044c  558
      CALL FANPWR(2,CFM,0.,RCFM,DTS,DTSh,DTR)                                   HVUNIT 191
      DTS    = <SUPPLY-DELTA-T>*DTS*CONS(3)                                     HVUNIT 192
      DTR    = <RETURN-DELTA-T>*DTR*CONS(3)                                     HVUNIT 193
C                                                                               HVUNIT 194
C              PLENUM CALCULATIONS                                              HVUNIT 195
C                                                                               HVUNIT 196
C              IF NO PLENUMS SKIP                                               HVUNIT 197
      IF(<NumPlenZONES> .EQ. 0) GOTO 5                                          HVAC2   38
C              TRA WILL BE THE RETURN AIR TEMP AFTER MIXING IN PLENUM           HVUNIT 201
      TRA    = 0.0                                                              HVUNIT 202
      SUMYQ = 0.                                                                HVUNIT 203
      SUMFY = 0.                                                                HVUNIT 204
      QLSUMP = 0.                                                               HVUNIT 205
      CINFP = 0.                                                                HVUNIT 206
C              LOOP THROUGH THE PLENUMS                                         HVUNIT 207
      Nplen = <NumPlenZONES>                                                    HVAC2   39
      DO 7  NZ=1,Nplen                                                          HVAC2   40
c              pick up the pointer to the plenum                                HVAC2   41
      ZP1    = <ISZONES-plenum> + (NZ-1)*NZD                                    HVAC2   42
C              PICK UP ZP2 BASE POINTER                                         HVUNIT 213
      ZP2    = <ZP2>                                                            HVUNIT 214
      DO 112 I=1,63                                                             -044e2  53
  112 ZONED(I) = 0.0                                                            HVUNIT 216
C              CALL ROTUINE TO CALC PLENUM TEMP AND HEAT EXCHANGE               HVUNIT 217
      CALL TEMDEV(0)                                                            HVUNIT 218
C              FRACTION OF RETURN AIR FROM ZONES GOING TO THIS PLENUM           HVUNIT 219
      FPI = <AREA>/(<PLENMULT>+1.E-6)                                           HVUNIT 220
C              AIR FLOW INTO PLENUM FROM ZONES                                  HVUNIT 221
      CFMZ = FPI * RCFM                                                         HVUNIT 222
C              PLENUM EXHAUST CFM                                               HVUNIT 223
c              plenum exhaust                                                   -044e  212
      IF (<EXHAUST-SOURCE> .eq. 1) THEN  ! makeup by system OA                  -046   234
        Call ZoneExhaust(1, CFMZ)        ! set EXCFM                            -046   235
        Call ZoneExhaust(9, CFMZ)        ! power                                -046   236
      ENDIF                                                                     -046   237
      ECFMP = ECFMP + EXCFM*ZMULT                                               -044e  215
C              PLENUM TEMP FOR ZERO RETURN CFM                                  HVUNIT 226
      TRA0 = TRA0 + <AREA>*<MULTIPLIER>*<TNOW>                                  HVUNIT 227
      RETRP = 1. - EXCFM*<PLENMULT>/(<AREA>*(RCFM+1.E-6))                       HVUNIT 228
      QLSUMP = QLSUMP + <QL>*<MULTIPLIER>*RETRP                                 HVUNIT 229
      CINFP = CINFP + <CFMINF>*<MULTIPLIER>*RETRP                               HVUNIT 230
C              FRACTION OF AIR FLOW IN THIS PLENUM WHICH IS EXHAUSTED           HVUNIT 231
      YPI = EXCFM / (CFMZ + 1.E-6)                                              HVUNIT 232
      SUMYQ = SUMYQ + (1.-YPI)*<QNOW>*<MULTIPLIER>                              HVUNIT 233
      SUMFY = SUMFY + FPI*(1.-YPI)*<MULTIPLIER>                                 HVUNIT 234
      ZKW   = ZKW   + <ZKW>                                                     -044e  216
      <SKW> = <SKW> + ZKW*<MULTIPLIER>                                          -044e  217
C              SUM END-USE VARIABLES FOR THIS PLENUM                            HVUNIT 239
      ZMULT = <MULTIPLIER>                                                      HVUNIT 240
C              IF REP-BLOCK BUF AND HOURLY-REP SCHED FILL BUF                   HVUNIT 242
      IF((<IZNBUFP>.NE.0).AND.(IRSCH.NE.0))  CALL USERZR( ZP1,ZP2 )             HVUNIT 243
      IF(IRPZON .NE. 0)  CALL  RPTZON                                           HVUNIT 244
    7 CONTINUE                                                                  HVUNIT 245
      TRA0 = TRA0/<PLENMULT>                                                    HVUNIT 246
      RETRP = 1. - ECFMP/(RCFM+1.E-6)                                           HVUNIT 247
      QLSUM = QLSUM*RETRP + QLSUMP                                              HVUNIT 248
      CINF = CINF*RETRP + CINFP                                                 HVUNIT 249
C              SET RETURN AIR TEMP TO TRA IF AIR GOES THROUGH PLENUM            HVUNIT 250
      IF (RCFM.GT.1.0) THEN                                                     HVUNIT 251
c              Note that RCFM is the zone return excluding any plenum           HVUNIT 252
c              duct air loss, and SUMYQ is the load picked up by RCFM.          HVUNIT 253
c              The load picked up by any plenum duct air loss was               HVUNIT 254
c              accounted for in TEMDEV.                                         HVUNIT 255
          TRA = TR + SUMYQ/(RCFM*CONS(1)*(SUMFY+1.E-6))                         HVUNIT 256
      ELSE                                                                      HVUNIT 257
          TRA = TRA0                                                            HVUNIT 258
      END IF                                                                    HVUNIT 259
      IF(<RETURN-AIR-PATH> .EQ. 2)  TR = TRA                                    HVUNIT 260
c              now add plenum duct air loss to return                           HVUNIT 261
      RCFM = RCFM + PLENLOSS                                                    HVUNIT 262
    5 CONTINUE                                                                  HVUNIT 263
      TR     = TR + DTR                                                         HVUNIT 264
      TH     = TH - DTS                                                         HVUNIT 265
c                                                                               HVUNIT 266
c              Calculate the duct delta-T using this hours CFM and              HVUNIT 267
c              losses calc'd in TEMDEV.                                         HVUNIT 268
      IF (<DUCTUA> .GT. 0.)  THEN                                               HVUNIT 269
        DTDUCT = <QDUCT> / (CONS(1) * (CFM+1.E-6))                              HVUNIT 270
      ENDIF                                                                     HVUNIT 271
c              adjust coil temperature for duct temperature change.             HVUNIT 272
c              Duct dT calculated above is negative when heating.               HVUNIT 273
      TH  = TH  - DTDUCT                                                        HVUNIT 274
C              CAL ROUTINE TO CALC MIX AIR TEMP AND OA RATIO                    HVUNIT 275
      CALL ECONO(2,TH,POM)                                                      HVUNIT 276
C              SAVE MIX AIR TEMP FOR NEXT HOUR                                  HVUNIT 277
      <CL_COIL_EDB> = TM                                                        HVAC1  375
      DW = QLSUM/(CONS(2)*AMAX1(RCFM,<CFM/ACH>))                                HVUNIT 279
C              CALC RATIO OF INFILTRATION AIR                                   HVUNIT 280
      F      = CINF/AMAX1(RCFM,<CFM/ACH>)                                       HVUNIT 281
C              NO OA CASE                                                       HVUNIT 282
      WR = WOA + DW                                                             HVUNIT 283
      WRSAT = WFUNC(TR,100.,PATM)                                               -113    18
      WR    = AMIN1(WRSAT,WR)                                                   -113    19
      WM     = WR                                                               HVUNIT 284
      IF((F+POA) .LE. 0.0)  GOTO 20                                             HVUNIT 285
C              OA CASE                                                          HVUNIT 286
      WR = (DW + POA*WOA + F*HUMRAT)/(F+POA)                                    HVUNIT 287
      WM = WOA*POA + (1.-POA)*WR                                                HVUNIT 288
C              CALC MIN HUMID REQUIREMENT (FOR RETURN AIR)                      HVUNIT 289
      WRMIN  = WFUNC(TR,<MIN-HUMIDITY>,PATM)                                    HVUNIT 290
      IF(WR .GE. WRMIN)  GOTO 20                                                HVUNIT 291
      WMM    = (1.0+F)*WRMIN - DW - HUMRAT*F                                    HVUNIT 292
C              MAKE SURE MIX NOT ABOVE SATURATION                               HVUNIT 293
      WMM    = AMIN1(WMM,WFUNC(TH,90.0,PATM))                                   HVUNIT 294
C              RECALC MIX HUM                                                   HVUNIT 295
      WM = WOA*POA + (1.-POA)*WRMIN                                             HVUNIT 296
      WR     = WRMIN                                                            HVUNIT 297
C              CALC MOISTURE CHANGE AND THUS HUMID ENERGY                       HVUNIT 298
      WW     = AMIN1(0.0,WM-WMM)                                                HVUNIT 299
      QHUM   = WW*CONS(2)*CFM                                                   HVUNIT 300
C              CALC ENTHALPY CHANGE ACROSS COIL                                 HVUNIT 301
   20 DQ     = H(TM,WM) - H(TH,WM)                                              HVUNIT 302
      <PASTWR> = WR                                                             HVUNIT 303
      <PASTWOA> = WOA                                                           HVUNIT 304
C              CALC MIX AIR LOAD                                                -044c2  78
      Q      = DQ*CFM*CONS(4)                                                   -044c2  79
C              IF TM > TH LESS ZONE COIL HEAT NEEDED                            HVUNIT 309
      IF(Q .GT. 0.0)  QHZ = AMIN1(0.0,QHZ+Q)                                    HVUNIT 310
c              Save TM and WM for CONS() terms next hour                        -044c2  80
      <sy.Tmix1> = TM                                                           -044c2  81
      <sy.Wmix1> = WM                                                           -044c2  82
      IF (<sy.FanOnPast> .lt. 0.)  THEN  ! start-up hour                        -044c2  83
        <sy.TmixStart> = TM                                                     -044c2  84
        <sy.WmixStart> = WM                                                     -044c2  85
      ENDIF                                                                     -044c2  86
C              ONLY TAKE HEAT LOAD AND ZERO IT IF HEAT OFF                      HVUNIT 311
   30 QH     = AMIN1(0.,Q)*HON                                                  HVUNIT 312
C********************** run function : HVUNIT-2 ********************            HVUNIT 313
      IF( MSYSF(46) .NE. 0 )   CALL  FINTS( MSYSF(46), 2. )                     HVUNIT 314
C*******************************************************************            HVUNIT 315
c                                                                               HVAC1  376
c              save coil flows and loads for any circulation loop calcs         HVAC1  377
      <HT_COIL_CFM>   = CFM                                                     HVAC1  378
      <HT_COIL_EDB>   = TM                                                      HVAC1  379
      <HT_COIL_CYCLE> = 1.                                                      HVAC1  380
      <HT_COIL_Q>     = QH                                                      HVAC1  381
C              ADD PLENUM EXHAUST                                               HVUNIT 333
      ECFM = ECFM + AMIN1(ECFMP,RCFM)                                           HVUNIT 334
C              RECALC RETURN CFM ACCOUNTING FOR PLEN EXH (FOR USE IN HREP)      HVUNIT 335
      RCFM = RCFM - ECFM                                                        HVUNIT 336
      IF(<ZONE-HEAT-SOURCE> .LE. 0)  <QH> = QHZ                                 HVUNIT 337
C              SET COOLING LOAD TO ZERO                                         HVUNIT 338
      QC     = 0.                                                               HVUNIT 339
      IF(FON .EQ. 0.0)  TR = 0.0                                                HVUNIT 340
C********************** run function : HVUNIT-3 ********************            HVUNIT 341
      IF( MSYSF(47) .NE. 0 )   CALL  FINTS( MSYSF(47), 3. )                     HVUNIT 342
C*******************************************************************            HVUNIT 343
      RETURN                                                                    HVUNIT 344
      END                                                                       HVUNIT 345
      SUBROUTINE IceRink(Mode, Jir)                                             IceRnk   2
c                                                                               IceRnk   3
c              Simulates an ice rink                                            IceRnk   4
c                                                                               IceRnk   5
c              Mode   Calling mode                                              IceRnk   6
c              Jir    Pointer to ice rink                                       IceRnk   7
c                                                                               IceRnk   8
C              DEVELOPED BY                                                     -130    15
C                            J. J. Hirsch & S. D. Gates                         -130    16
C                            James J. Hirsch & Associates                       -130    17
C                            Camarillo, California                              -130    18
C                                                                               -130    19
Copyright (c) 1997 by James J. Hirsch. All Rights Reserved. Unpublished         -130    20
c rights reserved under the Copyright Laws of the United States.                -130    21
c RESTRICTED RIGHTS NOTICE: Government use, reproduction or disclosure          -130    22
c is subject to restrictions as set forth in Rights in Data (g)(3) in           -130    23
c UC/LBL purchase order 4607010 with J.J. Hirsch & Associates.                  -130    24
C                                                                               -130    25
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                 IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                        /FILES/  3
     2               , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                   /FILES/  4
     3                 IHRREP(3), IHRPAS(2)                                     /FILES/  5
      COMMON  /LENS/   MWFLEN, MRLEN, MSHLEN, MWNLEN, MDRLEN, MXLEN,            /LENS/   2
     1                 MULEN, MZLEN, MIWLEN, MFLLEN,                            /LENS/   3
     2                 LMTB, LLDSOU, MSTLEN, LSTFT, MWLLEN                      /LENS/   4
      COMMON  /MISCD / TEMPS(4,9999),CONS(5),TEMPSL(9999),                      -048a   10
     1                 BLDGQH,BLDGQC,BLDGQL,BLDGP,BPMULT,                       /MISCD/  3
     $                 DBTMIN,DBTMAX,WMIN,WMAX,NSPZ(9999),                      -048a   11
     3                 DQ, DTP, DTR, DTS, FPI, PLRCC , POM, TC2, TDM,           /MISCD/  5
     4                 TRA,WCOL,WCOLM,WMM,YPI,KWBTU,BTUKW,UNFILD,Unusedm        RemPA   45
      REAL             KWBTU                                                    /MISCD/  7
      COMMON  /PTRBGN/ IWFB, IWPB, ICONSB, IGTB, IWLB, IGEOB, ISHADB,           /PTRBGN/ 2
     &                 IWINB, IDRB, IEWB, IUGB, ISPB, IIWPB, IIWB,              /PTRBGN/ 3
     &                 IFLB, ISPCDB, IOTHB, ILHB, IZQCMB, ISSHDB,               /PTRBGN/ 4
     &                 IOHFIB, IZLSK, IZLSL, ISTFB, ILSSH                       PV2      1
      COMMON  /PTRPLT/ Ipm,Ilp,Ich,Ibl,Idw,Itw,Ipv,Ign,Itk,Ihx,                 PV       1
     &                 Iec,Ilm,Iem,Ifm,Ism,Icm,Imm,Imc,Igl,Isp2,                XFC2     1
     &                 Ispare(5),  Ipe,                                         HVAC19   3
     &                 Npm,Nlp,Nch,Nbl,Ndw,Ntw,Npv,Ngn,Ntk,Nhx,                 PV       2
     &                 Nec,Nlm,Nem,Nfm,Nsm,Ncm,Nmm,Nmc,Ngl,Nsp2,                XFC2     2
     &                 Nspare(5),  Npe,                                         HVAC19   6
     &                 Lpm,Llp,Lch,Lbl,Ldw,Ltw,Lpv,Lgn,Ltk,Lhx,                 PV       3
     &                 Lec,Llm,Lem,Lfm,Lsm,Lcm,Lmm,Lmc,Lgl,Lsp2,                XFC2     3
     &                 Lspare(5),  Lpe,                                         HVAC19   9
     &                 Jpm,Jlp,Jch,Jbl,Jdw,Jtw,Jpv,Jgn,Jtk,Jhx,                 PV       4
     &                 Jec,Jlm,Jem,Jfm,Jsm,Jcm,    Jmc,Jgl,                     HVAC19  11
     &                 Jpe, kpr, NumMeters, NumIntHX                            XFC1     1
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      COMMON  /REPRT1/ IREFG, Iuniq                                             XFC1     2
      COMMON  /SYSTD / TH,TC,TM,TR,QH,QC,QHZ,QCZ,QHB,QHP,QHUM,                  /SYSTD/  2
     1                 QDHUM,TCMIN,THMAX,QLSUM,QPSUM,CFM,CFMH,CFMC,             /SYSTD/  3
     2                 RCFM,ECFM,CINF,FON,HON,CON,BON,SCONS(3),PH,PC,           /SYSTD/  4
     3                 SKW,FANKW,unused1,WR,WM,WCOIL,WW,PO,D,                   -046f    1
     4                 FTEMP,TCR,QHR,RfanPumpKW,SGAS,SKWQH,SKWQC,QCLAT,         -131    23
     5                 SFKW,RFKW,FONNGT,WSURF,RWalkinQ,TSURF,TRh,               -131    24
     6                 CBF,CBF1,CBF2,EON,PLRCFM,PLRC,PLRH,QCM1,                 /SYSTD/  8
     7                 QCM2,QHM1,EIRM1,EIRM2,EIR,OFKW,QCT,QCS,                  /SYSTD/  9
     8                 WRMAX,WRMIN,CFMRAT,QdistG,QdistL,RON,QHT,                /SYSTD/ 10
     9                 TPOMIN,POMIN,QHSUP,QRSENS,QRLAT,QRREC,QRREJ,             /SYSTD/ 11
     1                 RCOMKW,RDEFKW,RAUXKW,ECFMP,CFMIN,CINFP,DT,DW,            /SYSTD/ 12
     2                 EWB,IC,NATTSP,Q,RETR,SLOAD,QLSUMP,T,TCHUM,TEND,          /SYSTD/ 13
     3                 TS,hgbmin,HPDefE,EconoOnly,TDuctEnv,                     -044e1   1
     4                 QCUNMT,CapRh,CapRph,CapRc                                HVAC25   3
      REAL             SYSTD(113)                                               HVAC19  13
      EQUIVALENCE      (SYSTD(1),TH)                                            RemPA   65
      COMMON  /TIME  / IDOY, IYR, IMO, IDAY, IHR,                               Time     4
     &                 ISCMO, ISCDAY, ISCHR, IDOW, ISCDOW, iDSdates(6),         -044e5   1
     &                 iTimeFlg, iDSFlg, iDDFlg, InitialFlg, LeapYr,            Time     6
     &                 CLOCK(10), MONDSC(13), MONLEN(12), MONSDA(12)            HR      12
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
      COMMON  /ZONED / EXCFM,FH,FC,CFMZ,QHBZ,QOVER,THZ,TCZ,ERMAX,ERMIN,         /ZONED/  2
     1                 TRY,FTD,CORINT,G0,G1,G2,G3,SIGMAG,TL,ZQHR,TAVE,          /ZONED/  3
     2                 ZQH,ZQC,FCHPS(15),ACFM,ZKW,TCMINZ,THMAXZ,                /ZONED/  4
     3                 ERMAXM,ERMINM,THR,CSSCND,CSSVEC,HENOW,QGWIN,             /ZONED/  5
     4                 QSNABT,QGOPWL,QGVEC,CFMCVT,SSFPT,CFMVNT,ZFANKW,          /ZONED/  6
     5                 ZKWCBT,ZKWHBT,ZCapRbbrd, XC,ZC,XH,ZH                     -044e2   7
      REAL ZONED(63)                                                            -044e2   8
      EQUIVALENCE (ZONED(1),EXCFM)                                              /ZONED/  9
c                                                                               IceRnk  22
      INTEGER TitleSSIR(9), Blank3(3)                                           IceRnk  23
      DATA    TitleSSIR /4HRS-I, 4H Ice, 4H Rin, 4Hk Su,                        IceRnk  24
     &                   4Hmmar, 4Hy fo, 4Hr Zo, 4Hne: , 4H    /                IceRnk  25
      DATA Blank3    /4H    , 4H    , 4H    /                                   IceRnk  26
      DATA JJ, PIOVR4 /1, .785398164/                                           IceRnk  27
      SAVE LenMoZero                                                            IceRnk  28
c                                                                               IceRnk  29
c              Set pointers                                                     IceRnk  30
      Jxf = <ir;ZoneER>                  ! Extraction block                     IceRnk  31
      MZ  = <ir;Space>                   ! Space component                      IceRnk  32
c                                                                               IceRnk  33
      SELECT CASE (Mode)                                                        IceRnk  34
c                                                                               IceRnk  35
c                                                                               IceRnk  36
c ============ HOURLY INITIALIZATION ========================================== IceRnk  37
      CASE (10)                                                                 IceRnk  38
c                                                                               IceRnk  39
c              Update rink load history                                         IceRnk  40
      <ir;Qrink3> = <ir;Qrink2>                                                 IceRnk  41
      <ir;Qrink2> = <ir;Qrink1>                                                 IceRnk  42
      <ir;Qrink1> = <ir;Qrink>                                                  IceRnk  43
c                                                                               IceRnk  44
c              Rink air velocity due to skaters and HVAC fans (fpm)             IceRnk  45
      <ir;WindSpeed> = <ir:SKATER-WIND>                                         IceRnk  46
     &               * SQRT(SchVal(<PEOPLE-SCHEDULE>, 1.))                      -045b   81
      IF (FON .GT. 0.)  <ir;WindSpeed> = <ir;WindSpeed>                         IceRnk  48
     &                                 + <ir:HVAC-WIND>                         IceRnk  49
c              Convection coefficients, sensible (Btu/hr-F) and                 IceRnk  50
c              latent (CFM)                                                     IceRnk  51
      <ir;Hconv>  = (0.60 + 0.00318 * <ir;WindSpeed>) * <ir:RINK-AREA>          IceRnk  52
     &            * (1.-<ir:STRATIFICATIO>)                                     IceRnk  53
      <ir;CFMlat> = (1.13 + 0.006 * <ir;WindSpeed>) * <ir:RINK-AREA>            IceRnk  54
     &            * (1.-<ir:STRATIFICATIO>)                                     IceRnk  55
c                                                                               IceRnk  56
c              Weighted zone load correction due to absorption of energy        IceRnk  57
c              by ice - solar, lighting, skaters.  Solar and lighting           IceRnk  58
c              assume amount absorbed is same as ceiling view factor.           IceRnk  59
      Qsolar        = <ir;Qsolar>      * <ir:CEILING-VIEW>                      IceRnk  60
      Qlights       = <ir;Qlights/kW>  * <AREA-LITES-ELEC>                      IceRnk  61
      Qskaters      = <ir;QskatersDes> * SchVal(<PEOPLE-SCHEDULE>, 1.)          -045b   82
      <ir;Qsolar>   = Weight(<ir;SolarWF>,  Qsolar  )                           IceRnk  63
      IL = 1  ! use first light radiative split                                 -045b   83
      Qweight       = Qlights * <LIGHT-RAD-FRAC>                                -045b   84
      <ir;Qlights>  = Weight(<ir;LightsWF>, Qweight)                            -045b   85
     &              + (Qlights-Qweight)                                         -045b   86
      Qweight       = Qskaters * <PEOPLE-RAD-FRAC>                              -045b   87
      <ir;Qskaters> = Weight(<ir;SkaterWF>, Qweight)                            -045b   88
     &              + (Qskaters-Qweight)                                        -045b   89
c                                                                               IceRnk  66
c              Ice resurfacing load                                             IceRnk  67
      IF (<ir;QresurfDes> .NE. 0.)  THEN                                        IceRnk  68
        SchV         = SchVal(<ir:RESURF-SCH>, 1.)                              IceRnk  69
        <ir;Qresurf> = <ir;QresurfDes>    * SchV        ! Load on ice           IceRnk  70
        QresurfZone  = <ir:RESURF-Q-ZONE> * SchV        ! Load on zone          IceRnk  71
        Qweight      = QresurfZone * <PEOPLE-RAD-FRAC>                          -045b   90
        QresurfZone  = Weight(<ir;ResurfWF>, Qweight)                           -045b   91
     &               + (QresurfZone-Qweight)                                    -045b   92
      ENDIF                                                                     IceRnk  73
c                                                                               IceRnk  78
c              Estimate the rink load using last hour's zone loads              IceRnk  79
      Qrink = <ir;Qskaters> + <ir;Qresurf> + <ir;Qlights>                       IceRnk  80
     &      + <ir;Qconv>    + <ir;Qlat>    + <ir;QceilRad>                      IceRnk  81
     &      + <ir;Qsolar>   - <ir;Qsubfloor>                                    IceRnk  82
c                                                                               IceRnk  83
c              Rink temperature and humidity                                    IceRnk  84
      Trink      = SchVal(<ir:RINK-SETPT-SC>, <ir:RINK-SETPT-T>)                IceRnk  85
      Throttle   = <ir:RINK-SETPT-RN> * (Qrink/<ir;QrinkDes>-0.5)               IceRnk  86
      Trink      = Trink + Throttle                                             IceRnk  87
      <ir;Trink> = Trink                                                        IceRnk  88
      <ir;Wrink> = Wfunc(Trink, 100., Patm)                                     IceRnk  89
c                                                                               IceRnk  90
      <xf;CurrentVar3> = Trink                     ! TEMDEV term                IceRnk  91
      Trink            = Trink + 460.                                           IceRnk  92
      <ir;Trink**4>    = Trink*Trink*Trink*Trink   ! Radiant term               IceRnk  93
c                                                                               IceRnk  94
c                                                                               IceRnk  95
c ============ ICE RINK IMPACT ON ZONE ======================================== IceRnk  96
      CASE (30)                                                                 IceRnk  97
c                                                                               IceRnk  98
c              Estimate ceiling temperature                                     IceRnk  99
      Tzone = TductEnv                                                          IceRnk 100
      Call CeilingT                                                             -048   133
c                                                                               IceRnk 102
c              Temperature-dependent impact of ice on zone.                     -042L4   1
      dT            = Tzone - <ir;Trink>                                        IceRnk 108
      <ir;Qconv>    = <ir;Hconv>       * dT                                     IceRnk 109
      <ir;QceilRad> = <ir;UradCeilIce> * (Tceil4 - <ir;Trink**4>)               IceRnk 110
c              TEMDEV fixed load term (+ value is cooling extraction)           -042L4   2
c              Note that QceilRad is somewhat zone temperature dependent        -042L4   3
c              but is more directly a function of ceiling temperature vs.       -042L4   4
c              rink temperature, and can produce errors if linearized by        -042L4   5
c              zone vs. rink dT.                                                -042L4   6
      <xf;CurrentVar1> = <ir;Qsolar> + <ir;Qlights> + <ir;Qskaters>             -042L4   7
     &                 - QresurfZone + <ir;QceilRad>                            -042L4   8
c              TEMDEV conductive term                                           -042L4   9
      IF (dT .NE. 0.)  THEN                                                     -042L4  10
        UA               = <ir;Qconv> / dT                                      -042L4  11
        <xf;CurrentVar2> = UA                                                   -042L4  12
      ENDIF                                                                     -042L4  13
c                                                                               IceRnk 117
c                                                                               IceRnk 118
c ============ BRINE AND SUBFLOOR LOADS ======================================= IceRnk 119
      CASE (31)                                                                 IceRnk 120
c                                                                               IceRnk 121
c              Latent heat gain                                                 IceRnk 122
      IF (FON .GT. 0.)  THEN                                                    IceRnk 123
        <ir;Qlat> = <ir;CFMlat> * 60./12.5  * 1226. * (WR-<ir;Wrink>)           IceRnk 124
      ELSE                                                                      IceRnk 125
        <ir;Qlat> = 0.                                                          IceRnk 126
      ENDIF                                                                     IceRnk 127
c                                                                               IceRnk 128
c              Rink load, excluding subfloor heat                               IceRnk 129
      <ir;Qrink> = <ir;Qskaters> + <ir;Qresurf> + <ir;Qlights>                  IceRnk 130
     &           + <ir;Qconv>    + <ir;Qlat>    + <ir;QceilRad>                 IceRnk 131
     &           + <ir;Qsolar>                                                  IceRnk 132
c                                                                               IceRnk 133
c              Subfloor load - if the ice rink load is negative (rink           IceRnk 134
c              heating the zone), assume deficit is made up by subfloor         IceRnk 135
c              heat, so that ice remains at constant temperature.               IceRnk 136
      dT             = <ir;Trink> - <ir:SUBFLOOR-SETP>                          IceRnk 137
      <ir;Qsubfloor> = <ir;UAsubfloor> * dT                                     IceRnk 138
      <ir;Qsubfloor> = <ir;Qsubfloor> + MIN(0., <ir;Qrink>)                     IceRnk 139
      <ir;Qsubfloor> = MIN(0., <ir;Qsubfloor>)                                  IceRnk 140
      IF (<ir:SUBFLOOR-METE> .GT. 0)  THEN                                      IceRnk 141
        Jem       = <ir:SUBFLOOR-METE>                                          IceRnk 142
        <em;REFG> = <em;REFG>  - <ir;Qsubfloor>*KWBTU                           IceRnk 143
      ENDIF                                                                     IceRnk 144
c                                                                               IceRnk 145
c              Gross rink load and net brine load                               IceRnk 146
      <ir;Qrink>  = <ir;Qrink> - <ir;Qsubfloor>                                 IceRnk 147
      <ir;Qbrine> = <ir;Qrink>  * <ir:RINK-RESPONSE>                            IceRnk 148
     &            + <ir;Qrink1> * <ir:RINK-RESPONS1>                            IceRnk 149
     &            + <ir;Qrink2> * <ir:RINK-RESPONS2>                            IceRnk 150
     &            + <ir;Qrink3> * <ir:RINK-RESPONS3>                            IceRnk 151
c                                                                               IceRnk 152
c                                                                               IceRnk 153
c ============ HOURLY STATISTICS ============================================== IceRnk 154
      CASE (42)                                                                 IceRnk 155
c                                                                               IceRnk 156
c              Values for Report SS-IR                                          IceRnk 157
      DO  II=1,10                                                               IceRnk 158
c              monthly total                                                    IceRnk 159
        X            = ABS(<ir;ReportVars>)                                     IceRnk 160
        <ir;TotalMo> = <ir;TotalMo> + X                                         IceRnk 161
c              monthly peak and time                                            IceRnk 162
        IF (X .GT. <ir;PeakMo>)  THEN                                           IceRnk 163
          <ir;PeakMo>   = X                                                     IceRnk 164
          <ir;PeakDyMo> = IDAY                                                  IceRnk 165
          <ir;PeakHrMo> = ISCHR                                                 IceRnk 166
        ENDIF                                                                   IceRnk 167
      ENDDO                                                                     IceRnk 168
c                                                                               IceRnk 169
c                                                                               IceRnk 170
c ============ MONTHLY STATISTICS ============================================= IceRnk 171
      CASE (45)                                                                 IceRnk 172
c                                                                               IceRnk 173
c              Values for Report SS-IR                                          IceRnk 174
      DO  II=1,10                                                               IceRnk 175
        <ir;TotalYr> = <ir;TotalYr> + <ir;TotalMo>                              IceRnk 176
c              yearly peak and time                                             IceRnk 177
        X = <ir;PeakMo>                                                         IceRnk 178
        IF (ABS(X) .GT. ABS(<ir;PeakYr>))  THEN                                 IceRnk 179
          <ir;PeakYr>   = X                                                     IceRnk 180
          <ir;PeakMoYr> = IMO                                                   IceRnk 181
          <ir;PeakDyYr> = <ir;PeakDyMo>                                         IceRnk 182
        ENDIF                                                                   IceRnk 183
      ENDDO                                                                     IceRnk 184
c                                                                               IceRnk 185
c              Zero monthly values                                              IceRnk 186
      CALL FILLN (0., <ir.MoZeroStart..>, LenMoZero)                            IceRnk 187
c                                                                               IceRnk 188
c                                                                               IceRnk 189
c ============ REPORT CREATION ================================================ IceRnk 190
      CASE (52)                                                                 IceRnk 191
c                                                                               IceRnk 192
c              Create the SS-IR summary report                                  IceRnk 193
       WRITE(IREPFL)  4, Iuniq, 4, 87, 1                                        IceRnk 194
c              store the unique report number for this report                   IceRnk 195
       <ir;Iuniq_SS-IR> = Iuniq                                                 IceRnk 196
c              increment the unique report number for the next report           IceRnk 197
       Iuniq = Iuniq + 1                                                        IceRnk 198
c                                                                               IceRnk 199
c                                                                               IceRnk 200
c ============ REPORT TITLE =================================================== IceRnk 201
      CASE (53)                                                                 IceRnk 202
c                                                                               IceRnk 203
      IF (<ir;Iuniq_SS-IR> .GT. 0)  THEN                                        IceRnk 204
        WRITE (IREPFL) 22, <ir;Iuniq_SS-IR>, 6,                                 IceRnk 205
     &    TitleSSIR, (<ZONE-NAME>,II=1,8), Blank3                               IceRnk 206
      ENDIF                                                                     IceRnk 207
c                                                                               IceRnk 208
c                                                                               IceRnk 209
c ============ REPORTS - VERIFICATION DATA ==================================== IceRnk 210
      CASE (54)                                                                 IceRnk 211
c                                                                               IceRnk 212
c              Output design information                                        IceRnk 213
      IF (<ir;Iuniq_SS-IR> .GT. 0)  THEN                                        IceRnk 214
c              ?? implement on 2.3 only                                         IceRnk 215
c        WRITE (IREPFL) 4,<ir;Iuniq_SS-IR>,1,1,0                                IceRnk 216
c        CALL GetAttachments(Jrs, 2)                                            IceRnk 217
c        WRITE (IREPFL)  21,<ir;Iuniq_SS-IR>,1,2,17,                            IceRnk 218
c     &    (NameAttachments(II,1,1),II=1,8),                                    IceRnk 219
c     &    (NameAttachments(II,1,2),II=1,8),                                    IceRnk 220
c     &    <ri;Minlet>                                                          IceRnk 221
c        DO  Irow=2,NumRowsOfAttachments                                        IceRnk 222
c          WRITE (IREPFL)  20,<ir;Iuniq_SS-IR>,1,3,16,                          IceRnk 223
c     &      (NameAttachments(II,Irow,1),II=1,8),                               IceRnk 224
c     &      (NameAttachments(II,Irow,2),II=1,8)                                IceRnk 225
c        ENDDO                                                                  IceRnk 226
         WRITE (IREPFL)  4, <ir;Iuniq_SS-IR>, 1,2,0                             IceRnk 227
       ENDIF                                                                    IceRnk 228
c                                                                               IceRnk 229
c                                                                               IceRnk 230
c ============ REPORTS - MONTHLY DATA ========================================= IceRnk 231
      CASE (55)                                                                 IceRnk 232
c                                                                               IceRnk 233
      IF (<ir;Iuniq_SS-IR> .GT. 0)  THEN                                        IceRnk 234
        WRITE (IREPFL) 45,<ir;Iuniq_SS-IR>,1,3,41,                              IceRnk 235
     &    MONDSC(IMO), (<ir;TotalMo>,II=1,10),                                  IceRnk 236
     &                 (<ir;PeakMo>, II=1,10),                                  IceRnk 237
     &                 (<ir;PeakDyMo>,<ir;PeakHrMo>,II=1,10)                    IceRnk 238
      ENDIF                                                                     IceRnk 239
c                                                                               IceRnk 240
c                                                                               IceRnk 241
c ============ REPORTS - YEARLY DATA ========================================== IceRnk 242
      CASE (57)                                                                 IceRnk 243
c                                                                               IceRnk 244
      IF (<ir;Iuniq_SS-IR> .GT. 0)  THEN                                        IceRnk 245
        WRITE (IREPFL) 45,<ir;Iuniq_SS-IR>,1,4,41,                              IceRnk 246
     &    MONDSC(13), (<ir;TotalYr>,II=1,10),                                   IceRnk 247
     &                (<ir;PeakYr>, II=1,10),                                   IceRnk 248
     &                (<ir;PeakMoYr>,<ir;PeakDyYr>,II=1,10)                     IceRnk 249
        WRITE(IREPFL) 2, <ir;Iuniq_SS-IR>, 7                                    IceRnk 250
      ENDIF                                                                     IceRnk 251
c                                                                               IceRnk 252
c                                                                               IceRnk 253
c ============ HOURLY REPORTS - HOURLY DATA =================================== IceRnk 254
      CASE (62)                                                                 IceRnk 255
c                                                                               IceRnk 256
      IAptr = <IZNBUFP> + 85                                                    IceRnk 257
c                                                                               IceRnk 258
      DO  II=1,10                                                               IceRnk 259
        AA(IAptr+II) = <ir;ReportVars>                                          IceRnk 260
      ENDDO                                                                     IceRnk 261
      AA(IAptr+11) = <ir;Tceil> - 460.                                          IceRnk 262
      AA(IAptr+12) = <ir;Trink>                                                 IceRnk 263
      AA(IAptr+13) = <ir;Wrink>                                                 IceRnk 264
c                                                                               IceRnk 265
c                                                                               IceRnk 266
c ============ DESIGN CALCULATIONS ============================================ IceRnk 267
      CASE (100)                                                                IceRnk 268
c                                                                               IceRnk 269
c              Design zone temperature, radiant ice temperature                 IceRnk 270
      Tzone         = <DESIGN-COOL-T>                                           IceRnk 271
      <ir;Trink**4> = (<ir:RINK-SETPT-T> + 460.)**4                             IceRnk 272
c                                                                               IceRnk 273
c              Windspeed (fpm), sensible convection load                        IceRnk 274
      <ir;WindSpeed> = <ir:SKATER-WIND> + <ir:HVAC-WIND>                        IceRnk 275
      <ir;Hconv>     = (0.60 + 0.00318*<ir;WindSpeed>) * <ir:RINK-AREA>         IceRnk 276
     &               * (1.-<ir:STRATIFICATIO>)                                  IceRnk 277
      <ir;Qconv>     = <ir;Hconv> * (<DESIGN-COOL-T>-<ir:RINK-SETPT-T>)         IceRnk 278
c                                                                               IceRnk 279
c              Rink humidity, humidity differential assuming 0.000094           IceRnk 280
c              lb/lb-F, latent load                                             IceRnk 281
      <ir;Wrink>  = Wfunc(<ir:RINK-SETPT-T>, 100., BldgP)                       IceRnk 282
      dW          = (<DESIGN-COOL-T>-<ir:RINK-SETPT-T>) * 0.000094              IceRnk 283
      <ir;CFMlat> = (1.13 + 0.006 * <ir;WindSpeed>) * <ir:RINK-AREA>            IceRnk 284
     &            * (1.-<ir:STRATIFICATIO>)                                     IceRnk 285
      <ir;Qlat>   = <ir;CFMlat> * 60./12.5  * 1226. * dW                        IceRnk 286
c                                                                               IceRnk 287
c              Skater and resurfacing loads                                     IceRnk 288
      <ir;QskatersDes> = <ZQPPLS> * <ir:SKATER-WORK>                            IceRnk 289
      <ir;QresurfDes>  = <ir:RESURF-H20> * 8.33                                 IceRnk 290
     &                 * ((<ir:RESURF-H2O-T>-32.) + 144.                        IceRnk 291
     &                                   + 0.49*(32.-<ir:RINK-SETPT-T>))        IceRnk 292
c                                                                               IceRnk 293
c              Design lighting load and power, lighting radiation               IceRnk 294
      Qlights = 0.                                                              IceRnk 295
      Elights = 0.                                                              IceRnk 296
      DO IL = 1,5                                                               IceRnk 297
        IF (<LIGHTING-SCHEDUL> .EQ. 0)  EXIT                                    -045b   93
        Elights = Elights + <ZLTKW>                                             IceRnk 299
        Qlights = Qlights + <ZLTKW> * <LIGHT-TO-SPACE> * BTUKW                  -045b   94
      ENDDO                                                                     IceRnk 301
      IF (Elights .GT. 0.)  THEN                                                IceRnk 302
        IR = 1                                                                  IceRnk 303
        <ir;Qlights>    = Qlights * <ir:CEILING-VIEW> * <ir:LIGHTS-RAD>         IceRnk 304
        <ir;Qlights/kW> = <ir;Qlights> / Elights                                IceRnk 305
      ENDIF                                                                     IceRnk 306
c                                                                               IceRnk 307
c              Design ceiling quantities - area, conduction, load               IceRnk 308
      Aceil = 0.                                                                IceRnk 309
      NEXT  = <NEXTS>                                                           IceRnk 310
      MX    = <MZEXT>                                                           IceRnk 311
      dT    = DBTMAX + 30. - <TLOADS>                                           IceRnk 312
      DO  IEXT=1,NEXT                                                           IceRnk 313
        MP = <MXPROPRL>                                                         IceRnk 314
        IF (ABS(<XSTLT>) .LT. PIOVR4)  THEN                                     IceRnk 315
          Aceil       = Aceil + <XSAREA>*<XSMULT>                               IceRnk 316
          UA          = <XSAREA>*<XSMULT> / (1./<UFACTR> + 0.25)                IceRnk 317
          <ir;UAceil> = <ir;UAceil> + UA                  ! ^ OA film           IceRnk 318
          <ir;Qceil>  = <ir;Qceil>  + UA * dT                                   IceRnk 319
          UAnoIFR     = <XSAREA>*<XSMULT>                                       IceRnk 320
     &                               / (1./<UFACTR> + 0.25 - <EW-IFR>)          IceRnk 321
          <ir;UAceilNoIFR> = <ir;UAceilNoIFR> + UAnoIFR                         IceRnk 322
        ENDIF                                                                   IceRnk 323
        MX = MX + MXLEN                                                         IceRnk 324
      ENDDO                                                                     IceRnk 325
c                                                                               IceRnk 326
c              Ceiling heat transfer coefficients                               IceRnk 327
c                  - radiative to ice                                           IceRnk 328
      <ir;UradCeilIce> = 1./<ir:CEILING-VIEW>                                   IceRnk 329
     &                 + (1./<ir:CEILING-EMISS> - 1.)                           IceRnk 330
     &                 + (1./<ir:RINK-EMISS> - 1.) *Aceil/<ir:RINK-AREA>        IceRnk 331
      <ir;UradCeilIce> = Aceil / <ir;UradCeilIce> * 0.1714E-8                   IceRnk 332
c                  - radiative to zone                                          IceRnk 333
      <ir;UradCeilZone> = 1./(1.-<ir:CEILING-VIEW>)                             IceRnk 334
     &                  + (1./<ir:CEILING-EMISS> - 1.)                          IceRnk 335
     &                  + (1./0.9 - 1.) * Aceil/(Aceil-<ir:RINK-AREA>)          IceRnk 336
      <ir;UradCeilZone> = Aceil / <ir;UradCeilZone> * 0.1714E-8                 IceRnk 337
c                  - convective to zone                                         IceRnk 338
      <ir;UconvCeilZone> = Aceil / <ir:CEILING-FILM>                            IceRnk 339
c                                                                               IceRnk 340
c              Ceiling temperature and radiant load on ice                      IceRnk 341
      Call CeilingT                                                             -048   134
      <ir;QceilRad> = <ir;UradCeilIce> * (Tceil4 - <ir;Trink**4>)               IceRnk 343
c                                                                               IceRnk 344
c              Subfloor heating load and fluid flow                             IceRnk 345
      IF (<ir:SUBFLOOR-HEAT> .GT. 0)  THEN                                      IceRnk 346
        dT                = <ir:RINK-SETPT-T> - <ir:SUBFLOOR-SETP>              IceRnk 347
        <ir;UAsubfloor>   = <ir:RINK-AREA> / <ir:SUBFLOOR-RES>                  IceRnk 348
        <ir;QsubfloorDes> = <ir;UAsubfloor> * dT                                IceRnk 349
        <ir;Qsubfloor>    = <ir;QsubfloorDes>                                   IceRnk 350
        IF (<ir:SUBFLOOR-HEAT> .EQ. 1)  THEN                                    IceRnk 351
c              heater uses hot water                                            IceRnk 352
          <ir:SUBFLOOR-DT>  = -ABS(<ir:SUBFLOOR-DT>)                            IceRnk 353
c              hot (warm) water flow                                            IceRnk 354
          IF (<ir:SUBFLOOR-FLOW> .GT. 0.)  THEN                                 IceRnk 355
            <ir;MsubfloorDes> = <ir:SUBFLOOR-FLOW>                              IceRnk 356
          ELSE                                                                  IceRnk 357
c              base flow on 40% ethylene glycol at 0F                           IceRnk 358
            <ir;MsubfloorDes> = <ir;QsubfloorDes>                               IceRnk 359
     &               / (0.8 * 8.34 * 67./62.4 * <ir:SUBFLOOR-DT> * 60.)         IceRnk 360
          ENDIF                                                                 IceRnk 361
        ELSE  ! electric heater                                                 IceRnk 362
          Jem       = <ir:SUBFLOOR-METE>                                        IceRnk 363
          <em;REFG> = <em;REFG>  - <ir;Qsubfloor>*KWBTU                         IceRnk 364
        ENDIF                                                                   IceRnk 365
      ENDIF  ! ir:SUBFLOOR-HEAT                                                 IceRnk 366
c                                                                               IceRnk 367
c              Design load - assume skater and resurface loads are              IceRnk 368
c              mutually exclusive, neglects solar loads                         IceRnk 369
      <ir;QrinkDes> = MAX(<ir;QskatersDes>, <ir;QresurfDes>)                    IceRnk 370
     &              + <ir;Qconv> + <ir;Qlat> + <ir;Qlights>                     IceRnk 371
     &              + <ir;QceilRad> - <ir;QsubfloorDes>                         IceRnk 372
c              Required brine temperature                                       IceRnk 373
      <ir;Tbrine> = <ir:RINK-SETPT-T> - <ir:RINK-BRINE-DT>                      IceRnk 374
c              Brine Flow                                                       IceRnk 375
      IF (<ir:BRINE-FLOW> .GT. 0.)  THEN                                        IceRnk 376
        <ir;MrinkDes> = <ir:BRINE-FLOW>                                         IceRnk 377
      ELSE                                                                      IceRnk 378
c              base flow on 40% ethylene glycol at 0F                           IceRnk 379
        <ir;MrinkDes> = <ir;QrinkDes>                                           IceRnk 380
     &                / (0.8 * 8.34 * 67./62.4 * <ir:BRINE-DT> * 60.)           IceRnk 381
      ENDIF                                                                     IceRnk 382
c                                                                               IceRnk 383
c                                                                               IceRnk 384
c ============ ATTACHMENTS ==================================================== IceRnk 385
c                                                                               IceRnk 386
c              Initial attachments                                              IceRnk 387
      CASE (201)                                                                IceRnk 388
c                                                                               IceRnk 389
        <ir:RESURF-SCH>    = Jsched(<ir:RESURF-SCH>)                            IceRnk 390
        <ir:RINK-SETPT-SC> = Jsched(<ir:RINK-SETPT-SC>)                         IceRnk 391
        <ir:BRINE-LOOP>   = Ilp + (<ir:BRINE-LOOP>-1)*Llp                       IceRnk 392
        SELECT CASE (<ir:SUBFLOOR-HEAT>)                                        IceRnk 393
          CASE (0)                                                              IceRnk 394
            <ir:SUBFLOOR-LOOP> = 0                                              IceRnk 395
            <ir:SUBFLOOR-METE> = 0                                              IceRnk 396
          CASE (1)                                                              IceRnk 397
            <ir:SUBFLOOR-LOOP> = Ilp + (<ir:SUBFLOOR-LOOP>-1)*Llp               IceRnk 398
            <ir:SUBFLOOR-METE> = 0                                              IceRnk 399
          CASE (2)                                                              IceRnk 400
            <ir:SUBFLOOR-METE> = Iem + (<ir:SUBFLOOR-METE>-1)*Lem               IceRnk 401
            <ir:SUBFLOOR-LOOP> = 0                                              IceRnk 402
        END SELECT                                                              IceRnk 403
c              Pointer to space linked to zone                                  IceRnk 404
        <ir;Space> = ISPB + (<NZSPACE>-1)*MZLEN                                 IceRnk 405
c                                                                               IceRnk 406
c              Create nodes                                                     IceRnk 407
      CASE (203)                                                                IceRnk 408
                                                                                IceRnk 409
c              Zonal mechanical loss block (used in TEMDEV)                     IceRnk 410
        CALL Create_Loss(ZP2,ZP1, 6,3,0, 1., <ir;ZoneER>)                       IceRnk 411
c                                                                               IceRnk 412
c              Lighting, solar, skater, resurfacing weighting factor blocks     IceRnk 413
        MWF = <MZWF>  ! Space weighting factors                                 IceRnk 414
        <ir;LightsWF> = NewWeight(Jir, <#LITES-V0>)                             IceRnk 415
        <ir;SolarWF>  = NewWeight(Jir, <#SOLAR-V0>)                             IceRnk 416
        <ir;SkaterWF> = NewWeight(Jir, <#EQUIP-PEOP-V0>)                        IceRnk 417
        <ir;ResurfWF> = NewWeight(Jir, <#EQUIP-PEOP-V0>)                        IceRnk 418
c                                                                               IceRnk 419
c              Length of monthly zero                                           IceRnk 420
        LenMoZero = <+ir.MoZeroEnd....> - <+ir.MoZeroStart..> + 1               IceRnk 421
c                                                                               IceRnk 422
c                                                                               IceRnk 423
      END SELECT  ! Mode                                                        IceRnk 424
c                                                                               IceRnk 425
      RETURN                                                                    IceRnk 426
c                                                                               IceRnk 427
c                                                                               IceRnk 428
      CONTAINS                                                                  -048   135
c ============== CeilingT ===================================================== -048   136
      Subroutine CeilingT                                                       -048   137
c                                                                               IceRnk 431
c              Estimates the temperature of a ceiling coupled                   IceRnk 432
c              radiatively and convectively to a zone, and radiatively          IceRnk 433
c              to an ice sheet.  Assumes all surfaces other than the ice        IceRnk 434
c              are at the zone temperature.                                     IceRnk 435
                                                                                IceRnk 436
      IF (<ir;UAceil> .NE. 0.)  THEN                                            IceRnk 437
c              Effective temperature external to the ceiling; equivalent        IceRnk 438
c              to the sol-air temperature, but delayed by the ceiling           IceRnk 439
c              response factors                                                 IceRnk 440
        Tsol = <TLOADS> + <ir;Qceil>/<ir;UAceil> + 460.                         IceRnk 441
c              Zone temperature, air and radiant                                IceRnk 442
        Tz   = Tzone + 460.                                                     IceRnk 443
        Tz4  = Tz*Tz*Tz*Tz                                                      IceRnk 444
c              Maximum and minimum limits on ceiling temperature                IceRnk 445
        Tmax = MAX(Tsol, Tz, <ir;Trink>+460.)                                   IceRnk 446
        Tmin = MIN(Tsol, Tz, <ir;Trink>+460.)                                   IceRnk 447
c                                                                               IceRnk 448
c              Solve for ceiling temperature using bisectional search           IceRnk 449
        Tweight = (<ir;UAceilNoIFR>  * Tsol                                     IceRnk 450
     &          + <ir;UconvCeilZone> * Tz                                       IceRnk 451
     &          + <ir;UradCeilZone>  * Tz4                                      IceRnk 452
     &          + <ir;UradCeilIce>   * <ir;Trink**4>)                           IceRnk 453
     &          / (<ir;UAceilNoIFR>  + <ir;UconvCeilZone>)                      IceRnk 454
        CoefT4  = (<ir;UradCeilZone> + <ir;UradCeilIce>)                        IceRnk 455
     &          / (<ir;UAceilNoIFR>  + <ir;UconvCeilZone>)                      IceRnk 456
        DO                                                                      IceRnk 457
          Tceil   = (Tmax + Tmin) * 0.5                                         IceRnk 458
          Tceil4  = Tceil*Tceil*Tceil*Tceil                                     IceRnk 459
          Xweight = Tceil + CoefT4*Tceil4                                       IceRnk 460
          IF (Xweight .GT. Tweight)  THEN                                       IceRnk 461
            Tmax = Tceil                                                        IceRnk 462
          ELSE                                                                  IceRnk 463
            Tmin = Tceil                                                        IceRnk 464
          ENDIF                                                                 IceRnk 465
          IF (ABS(Tmax-Tmin) .LT. 0.01)  EXIT                                   -043a1  44
        ENDDO                                                                   IceRnk 467
        <ir;Tceil> = (Tmax + Tmin) * 0.5                                        -043a1  45
      ENDIF  ! zn;UAceil                                                        IceRnk 468
c                                                                               IceRnk 470
      End Subroutine CeilingT                                                   -048   138
c                                                                               IceRnk 472
      END                                                                       IceRnk 473
      FUNCTION NewIceRink(Keywords)                                             NewRnk   2
c                                                                               NewRnk   3
c              Spins off an ice rink as a separate component from the           NewRnk   4
c              zone in which it was defined.                                    NewRnk   5
c                                                                               NewRnk   6
C              DEVELOPED BY                                                     -130    15
C                            J. J. Hirsch & S. D. Gates                         -130    16
C                            James J. Hirsch & Associates                       -130    17
C                            Camarillo, California                              -130    18
C                                                                               -130    19
Copyright (c) 1997 by James J. Hirsch. All Rights Reserved. Unpublished         -130    20
c rights reserved under the Copyright Laws of the United States.                -130    21
c RESTRICTED RIGHTS NOTICE: Government use, reproduction or disclosure          -130    22
c is subject to restrictions as set forth in Rights in Data (g)(3) in           -130    23
c UC/LBL purchase order 4607010 with J.J. Hirsch & Associates.                  -130    24
C                                                                               -130    25
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
c                                                                               NewRnk   9
      REAL Keywords(1)                                                          NewRnk  10
c                                                                               NewRnk  11
c              Create the block                                                 NewRnk  12
      Jir = NewBlockPtr(<+ir;Len>)                                              NewRnk  13
c                                                                               NewRnk  14
c              Transfer the keywords from the zone command                      NewRnk  15
      DO  I=1,<+ir***Pointers***>                                               NewRnk  16
        AA(Jir+I-1) = Keywords(I)                                               NewRnk  17
      ENDDO                                                                     NewRnk  18
c                                                                               NewRnk  19
      NewIceRink = Jir                                                          NewRnk  20
c                                                                               NewRnk  21
      RETURN                                                                    NewRnk  22
      END                                                                       NewRnk  23
      FUNCTION HXEFFF(CFMMAX,CFM)                                               HXEFFF   2
C                                                                               HXEFFF   3
C              HEAT EXCHANGER PERFORMANCE IN DCS (TYPE 25) SYSTEM               HXEFFF   4
C                                                                               HXEFFF   5
      REAL PLRDAT(3), NTUDAT(3), NTU                                            HXEFFF   6
      DATA PLRDAT /0.25, 0.5, 1.0/                                              HXEFFF   7
      DATA NTUDAT /53.04, 26.52, 13.26/                                         HXEFFF   8
      PLRCFM = CFM/CFMMAX                                                       HXEFFF   9
      NTU = TABLE1(3,PLRDAT,NTUDAT,PLRCFM)                                      HXEFFF  10
      HXEFFF = NTU/(1.+NTU)                                                     HXEFFF  11
      RETURN                                                                    HXEFFF  12
      END                                                                       HXEFFF  13
      SUBROUTINE INDUC                                                          INDUC    2
C                                                                               INDUC    3
C                            INDUCTION BOX UNITS                                INDUC    4
C                                                                               INDUC    5
C              DEVELOPED BY                                                     -130     1
C                            J. J. Hirsch & S. D. Gates                         -130     2
C                            James J. Hirsch & Associates                       -130     3
C                            Camarillo, California                              -130     4
C              BASED UPON CODE DEVELOPED BY J. J. Hirsch and                    -130     5
C                            W. F. Buhl                                         -130     6
C                            A. E. Erdem                                        -130     7
C                            Lawrence Berkeley National Laboratory              -130     8
C                            University of California                           -130     9
Copyright (c) 1997 by James J. Hirsch. All Rights Reserved. Unpublished         -130    10
c rights reserved under the Copyright Laws of the United States.                -130    11
c RESTRICTED RIGHTS NOTICE: Government use, reproduction or disclosure          -130    12
c is subject to restrictions as set forth in Rights in Data (g)(3) in           -130    13
c UC/LBL purchase order 4607010 with J.J. Hirsch & Associates.                  -130    14
C                                                                               INDUC    7
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON  /ENDUSE/ SUPPKW, HEATKW                                           HVAC27   1
      COMMON /FFUEL/ FFUEL, FurnAuxFuel, FurnAuxkW, PLRF                        /FFUEL/  2
      common  /FNSYS/  ISKIPS, MSYSF(120)                                       /FNSYS/  2
      COMMON  /HRREP / Irb, Ihrp, Lrb, Lhrp, Nrb, Nhrp, IVTLIM(3,50),           HR       5
     &                 IGRPtr, IBRPtr, IRSch, IRSchT(5),                        HR       6
     &                 NHRTyp(3), ITBUF(3), ITBUFB(3), ITBUFE(3),               HR       7
     &                 IHREOF, ICDFLG                                           HR       8
      COMMON  /LOOPKY/ CHW, PIPE2, loop3, HW, loop5, STM, WLHP, DHW,            -131     1
     &                 CW, Deleted, PIPE2h, WLHPh, COGEN, NoType,               -131     2
     &                 FIXED, OA, SCH, LOAD,  ZONE, OUTDOOR,                    -131     3
     &                 STANDBY, DEMAND, SNAP, SCHEDULED, SubhourDemand,         -033     1
     &                 CONSTANT, VARIABLE, ModeText(4),                         -131     5
     &                 OFFMODE, FLOATING, HEATMODE, COOLMODE,                   -131     6
     &                 AtCoils, EnterLoop, AtPump,                              -131     7
     &                 INDOORS, OUTDOORS, TUNNEL, UNDERGROUND,                  -131     8
     &                 PRIMARY, SECONDARY,                                      -131     9
     &                 DIRECT, HX,                                              -131    10
     &                 WATER, ETHYLENE, PROPYLENE, BRINE                        -131    11
      INTEGER          CHW, PIPE2, loop3, HW, loop5, STM, WLHP, DHW,            -131    12
     &                 CW, Deleted, PIPE2h, WLHPh, COGEN, NoType,               -131    13
     &                 FIXED, OA, SCH, LOAD,  ZONE, OUTDOOR,                    -131    14
     &                 STANDBY, DEMAND, SNAP, SCHEDULED, SubhourDemand,         -033     2
     &                 CONSTANT, VARIABLE,                                      -131    16
     &                 OFFMODE, FLOATING, HEATMODE, COOLMODE,                   -131    17
     &                 AtCoils, EnterLoop, AtPump,                              -131    18
     &                 INDOORS, OUTDOORS, TUNNEL, UNDERGROUND,                  -131    19
     &                 PRIMARY, SECONDARY,                                      -131    20
     &                 DIRECT, HX,                                              -131    21
     &                 WATER, ETHYLENE, PROPYLENE, BRINE                        -131    22
      COMMON  /MISCD / TEMPS(4,9999),CONS(5),TEMPSL(9999),                      -048a   10
     1                 BLDGQH,BLDGQC,BLDGQL,BLDGP,BPMULT,                       /MISCD/  3
     $                 DBTMIN,DBTMAX,WMIN,WMAX,NSPZ(9999),                      -048a   11
     3                 DQ, DTP, DTR, DTS, FPI, PLRCC , POM, TC2, TDM,           /MISCD/  5
     4                 TRA,WCOL,WCOLM,WMM,YPI,KWBTU,BTUKW,UNFILD,Unusedm        RemPA   45
      REAL             KWBTU                                                    /MISCD/  7
      COMMON  /PLANTD/ QHMP,TMP,CFMP,QHPP,CFMPP,                                /PLANTD/ 2
     1                 QHZP,TZP,DHWPKW,DHWPLF,DHWQRP                            RemPA   46
      REAL             PLANTD(10)                                               RemPA   47
      EQUIVALENCE      (PLANTD(1), QHMP)                                        RemPA   48
      COMMON  /PTRPLT/ Ipm,Ilp,Ich,Ibl,Idw,Itw,Ipv,Ign,Itk,Ihx,                 PV       1
     &                 Iec,Ilm,Iem,Ifm,Ism,Icm,Imm,Imc,Igl,Isp2,                XFC2     1
     &                 Ispare(5),  Ipe,                                         HVAC19   3
     &                 Npm,Nlp,Nch,Nbl,Ndw,Ntw,Npv,Ngn,Ntk,Nhx,                 PV       2
     &                 Nec,Nlm,Nem,Nfm,Nsm,Ncm,Nmm,Nmc,Ngl,Nsp2,                XFC2     2
     &                 Nspare(5),  Npe,                                         HVAC19   6
     &                 Lpm,Llp,Lch,Lbl,Ldw,Ltw,Lpv,Lgn,Ltk,Lhx,                 PV       3
     &                 Lec,Llm,Lem,Lfm,Lsm,Lcm,Lmm,Lmc,Lgl,Lsp2,                XFC2     3
     &                 Lspare(5),  Lpe,                                         HVAC19   9
     &                 Jpm,Jlp,Jch,Jbl,Jdw,Jtw,Jpv,Jgn,Jtk,Jhx,                 PV       4
     &                 Jec,Jlm,Jem,Jfm,Jsm,Jcm,    Jmc,Jgl,                     HVAC19  11
     &                 Jpe, kpr, NumMeters, NumIntHX                            XFC1     1
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      COMMON  /SYSTD / TH,TC,TM,TR,QH,QC,QHZ,QCZ,QHB,QHP,QHUM,                  /SYSTD/  2
     1                 QDHUM,TCMIN,THMAX,QLSUM,QPSUM,CFM,CFMH,CFMC,             /SYSTD/  3
     2                 RCFM,ECFM,CINF,FON,HON,CON,BON,SCONS(3),PH,PC,           /SYSTD/  4
     3                 SKW,FANKW,unused1,WR,WM,WCOIL,WW,PO,D,                   -046f    1
     4                 FTEMP,TCR,QHR,RfanPumpKW,SGAS,SKWQH,SKWQC,QCLAT,         -131    23
     5                 SFKW,RFKW,FONNGT,WSURF,RWalkinQ,TSURF,TRh,               -131    24
     6                 CBF,CBF1,CBF2,EON,PLRCFM,PLRC,PLRH,QCM1,                 /SYSTD/  8
     7                 QCM2,QHM1,EIRM1,EIRM2,EIR,OFKW,QCT,QCS,                  /SYSTD/  9
     8                 WRMAX,WRMIN,CFMRAT,QdistG,QdistL,RON,QHT,                /SYSTD/ 10
     9                 TPOMIN,POMIN,QHSUP,QRSENS,QRLAT,QRREC,QRREJ,             /SYSTD/ 11
     1                 RCOMKW,RDEFKW,RAUXKW,ECFMP,CFMIN,CINFP,DT,DW,            /SYSTD/ 12
     2                 EWB,IC,NATTSP,Q,RETR,SLOAD,QLSUMP,T,TCHUM,TEND,          /SYSTD/ 13
     3                 TS,hgbmin,HPDefE,EconoOnly,TDuctEnv,                     -044e1   1
     4                 QCUNMT,CapRh,CapRph,CapRc                                HVAC25   3
      REAL             SYSTD(113)                                               HVAC19  13
      EQUIVALENCE      (SYSTD(1),TH)                                            RemPA   65
      COMMON  /TIME  / IDOY, IYR, IMO, IDAY, IHR,                               Time     4
     &                 ISCMO, ISCDAY, ISCHR, IDOW, ISCDOW, iDSdates(6),         -044e5   1
     &                 iTimeFlg, iDSFlg, iDDFlg, InitialFlg, LeapYr,            Time     6
     &                 CLOCK(10), MONDSC(13), MONLEN(12), MONSDA(12)            HR      12
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
      COMMON  /ZONED / EXCFM,FH,FC,CFMZ,QHBZ,QOVER,THZ,TCZ,ERMAX,ERMIN,         /ZONED/  2
     1                 TRY,FTD,CORINT,G0,G1,G2,G3,SIGMAG,TL,ZQHR,TAVE,          /ZONED/  3
     2                 ZQH,ZQC,FCHPS(15),ACFM,ZKW,TCMINZ,THMAXZ,                /ZONED/  4
     3                 ERMAXM,ERMINM,THR,CSSCND,CSSVEC,HENOW,QGWIN,             /ZONED/  5
     4                 QSNABT,QGOPWL,QGVEC,CFMCVT,SSFPT,CFMVNT,ZFANKW,          /ZONED/  6
     5                 ZKWCBT,ZKWHBT,ZCapRbbrd, XC,ZC,XH,ZH                     -044e2   7
      REAL ZONED(63)                                                            -044e2   8
      EQUIVALENCE (ZONED(1),EXCFM)                                              /ZONED/  9
      COMMON  /LENS/   MWFLEN, MRLEN, MSHLEN, MWNLEN, MDRLEN, MXLEN,            /LENS/   2
     1                 MULEN, MZLEN, MIWLEN, MFLLEN,                            /LENS/   3
     2                 LMTB, LLDSOU, MSTLEN, LSTFT, MWLLEN                      /LENS/   4
      COMMON  /PTRBGN/ IWFB, IWPB, ICONSB, IGTB, IWLB, IGEOB, ISHADB,           /PTRBGN/ 2
     &                 IWINB, IDRB, IEWB, IUGB, ISPB, IIWPB, IIWB,              /PTRBGN/ 3
     &                 IFLB, ISPCDB, IOTHB, ILHB, IZQCMB, ISSHDB,               /PTRBGN/ 4
     &                 IOHFIB, IZLSK, IZLSL, ISTFB, ILSSH                       PV2      1
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     /PNTRS/  3
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        /PNTRS/  4
      COMMON  /SIZE/   LENGTH,NWF,NWPAR,NCONS,NGT,NWL,NGEO,                     /SIZE/   2
     1                 NGSHAD, NWIN, NDOOR, NEW, NUG, NSPl, NIWP, NIW,          /SIZE/   3
     &                 NFL, NBR, NOTH, NITH, NOPSRF,                            /SIZE/   4
     &                 NSURF, NSSHD, NSHTOT, NEWshade                           /SIZE/   5
      COMMON  /FZZZ5/   INDMOD , FRAC  , CFMAX, QO, TO, R                       /FZZZ5/  2
C********************** run function : INDUC-0 *********************            INDUC   20
      IF( MSYSF(48) .NE. 0 )   CALL  FINTS( MSYSF(48), 0. )                     INDUC   21
C*******************************************************************            INDUC   22
c              set circulation loop restrictions on heating and                 HVAC1  384
c              cooling capacity for use in DKTEMP.                              HVAC1  385
      IF (<HW-LOOP> .NE. 0)  THEN                                               HVAC1  386
c              heating coil is hot water - pointer to loop                      HVAC1  387
        JLP   = <HW-LOOP>                                                       HVAC1  388
        CapRh = <lp;HCAP_RATIO>                                                 HVAC16  97
      ELSE                                                                      HVAC1  390
        CapRh = 1.0                                                             HVAC1  391
      ENDIF                                                                     HVAC1  392
      IF (<PHW-LOOP> .NE. 0)  THEN                                              HVAC1  393
c              preheat coil is hot water - pointer to loop                      HVAC1  394
        JLP    = <PHW-LOOP>                                                     HVAC1  395
        CapRph = <lp;HCAP_RATIO>                                                HVAC16  98
      ELSE                                                                      HVAC1  397
        CapRph = 1.0                                                            HVAC1  398
      ENDIF                                                                     HVAC1  399
      IF (<CHW-LOOP> .NE. 0)  THEN                                              HVAC1  400
c              cooling coil is water - pointer to loop                          HVAC1  401
        JLP   = <CHW-LOOP>                                                      HVAC1  402
        CapRc = <lp;CCAP_RATIO>                                                 HVAC16  99
      ELSE                                                                      HVAC1  404
        CapRc = 1.0                                                             HVAC1  405
      ENDIF                                                                     HVAC1  406
c              DKTEMP calcs the supply temp                                     HVAC1  407
      CALL DKTEMP                                                               INDUC   24
      HONS   = HON                                                              INDUC   25
      CONSV  = CON                                                              INDUC   26
      <DCVOAcfmS> = 0.0                                                         -044c  563
      <DCVOAcfmFracCrit> = 0.0                                                  -044c  564
C              SET AP1 TO POINT TO THE FIRST ZONE                               INDUC   45
      ZP1    = ISZ                                                              INDUC   46
C                                                                               INDUC   47
C              LOOP THROUGH THE ZONES                                           INDUC   48
C                                                                               INDUC   49
      DO 50 NZ=1,NSZ                                                            INDUC   50
C              ZERO THE ZONE DATA COMMON BLOCK                                  INDUC   51
      DO 111 I=1,63                                                             -044e2  54
  111 ZONED(I) = 0.0                                                            INDUC   53
      ZP2    = <ZP2>                                                            INDUC   54
      <ERMAX> = 0.0                                                             INDUC   55
      <ERMIN> = 0.0                                                             INDUC   56
C              IF FANS ON AND THIS IS A PLENUM SKKIP                            INDUC   57
      IF((FON .NE. 0.) .AND. (<ZONE-TYPE> .EQ. 3))  GO TO 35                    INDUC   58
C              PICK UP ZONE MULTIPLIER                                          INDUC   59
      ZMULT  = <MULTIPLIER>                                                     INDUC   60
C              SET EXHAUST CFM TO ZERO                                          INDUC   61
      EXCFM  = 0.                                                               INDUC   62
c              if exhaust made up by infiltration                               -046   238
      IF (<EXHAUST-SOURCE> .eq. 2  .or.                                         -047b   26
     &    <EXHAUST-SOURCE> .eq. 3)  Call ZoneExhaust(9, xx)  ! power            -047b   27
C              IF NOT NEEDED SKIP EXT RATE CALC                                 INDUC   63
      IF((FON .EQ. 0.0) .OR. (<ZONE-TYPE> .NE. 1))  GOTO 5                      INDUC   64
c                                                                               HVAC1  408
c              Set circulation-loop restrictions on zonal heating and           HVAC1  409
c              cooling capacity.  Zones may be attached to different            HVAC1  410
c              circulation-loops, and some zones may be 2-pipe                  HVAC1  411
c              while others may be 4-pipe                                       HVAC1  412
      IF(<HEATCAPZ> .LT. 0.0) THEN                                              -044b   61
        IF (<HW-LOOPZ> .NE. 0)  THEN                                            -044b   62
c              heating coil is hot water - pointer to loop                      -044b   63
          JLP   = <HW-LOOPZ>                                                    -044b   64
          ZCapRh = <lp;HCAP_RATIO>                                              -044b   65
          IF (<lp;CTRL_MODE> .EQ. HEATMODE)  THEN                               -044b   66
c              loop heating is on - actual availability subject                 -044b   67
c              to system schedule                                               -044b   68
            HON = HONS                                                          -044b   69
          ELSE                                                                  -044b   70
            HON = 0.                                                            -044b   71
          ENDIF                                                                 -044b   72
        ELSE                                                                    -044b   73
          ZCapRh = 1.0                                                          -044b   74
          HON   = HONS                                                          -044b   75
        ENDIF                                                                   -044b   76
      ELSE                                                                      -044b   77
C              no coil so no zonal heating capacity                             -044b   78
        ZCapRh = 0.0                                                            -044b   79
      ENDIF                                                                     -044b   80
      IF(<COOLCAPZ> .GT. 0.0) THEN                                              -044b   81
        IF (<CHW-LOOPZ> .NE. 0)  THEN                                           -044b   82
c              cooling coil is water - pointer to loop                          -044b   83
          JLP   = <CHW-LOOPZ>                                                   -044b   84
          ZCapRc = <lp;CCAP_RATIO>                                              -044b   85
          IF (<lp;CTRL_MODE> .EQ. COOLMODE)  THEN                               -044b   86
c              loop cooling is on - actual availability subject                 -044b   87
c              to system schedule                                               -044b   88
            CON = CONSV                                                         -044b   89
          ELSE                                                                  -044b   90
            CON = 0.                                                            -044b   91
          ENDIF                                                                 -044b   92
        ELSE                                                                    -044b   93
          ZCapRc = 1.0                                                          -044b   94
          CON   = CONSV                                                         -044b   95
        ENDIF                                                                   -044b   96
      ELSE                                                                      -044b   97
C              no coil so no zonal cooling capacity                             -044b   98
        ZCapRc = 0.0                                                            -044b   99
      ENDIF                                                                     -044b  100
c                                                                               HVAC1  443
C                                                                               INDUC   65
C              CALC EXTRACTION RATES                                            INDUC   66
C                                                                               INDUC   67
C              SUPPLY AIR TEMP BEFORE IN ZONE COIL                              INDUC   68
      TL     = (TC + <INDUCTION-RATIO>*<TNOW>)/(1.0 + <INDUCTION-RATIO>)        INDUC   69
C              MIN SUPPLY AIR TEMP                                              INDUC   70
      TCMINZ = TL - (<COOLCAPZ>/(CONS(1)*<CFMAX>))*CON*ZCapRc                   HVAC1  444
      TCMINZ = AMAX1(TCMINZ,AMIN1(TM,<MIN-SUPPLY-T>-<THROTTLING-RANGE>))        INDUC   72
C              MAX SUPPLY TEMP                                                  INDUC   73
      THMAXZ = TL - (<HEATCAPZ>/(CONS(1)*<CFMAX>))*HON*ZCapRh                   HVAC1  445
      THMAXZ = AMIN1(THMAXZ,AMAX1(TM,<MAX-SUPPLY-T>))                           INDUC   75
C              EXTRACTION RATE                                                  INDUC   76
      XC      = CONS(1)*<CFMAX>                                                 -044e2  55
      <ERMAX> = XC * (<TNOW>-TCMINZ)                                            -044e2  56
      ZC      = XC                                                              -044e2  57
      ERMAXM  = ZC * (<TNOW>-TL)                                                -044e2  58
      ZH      = ZC                                                              -044e2  59
      ERMINM  = ERMAXM                                                          -044e2  60
      XH      = XC                                                              -044e2  61
      <ERMIN> = XH * (<TNOW>-THMAXZ)                                            -044e2  62
C              CALL ROUTINE TO CALC ZONE TEMP AND LOAD                          INDUC   81
    5 CALL TEMDEV(0)                                                            INDUC   82
C              SET ZONE CFM TO ZERO                                             INDUC   83
      CFMZ   = 0.                                                               INDUC   84
C              IF FANS ARE OFF OR THIS IS A UNCONDITIONED ZONE SKIP             INDUC   85
      IF (<ZONE-TYPE>.NE.1) GO TO 26                                            INDUC   86
      IF(FON .EQ. 0.)  GOTO 174                                                 INDUC   87
C              CALC ACTUAL ZONE CFM FROM AIR-HANDLER                            INDUC   88
      CFMZ   = <CFMAX>/(1.0+<INDUCTION-RATIO>)                                  INDUC   89
c              Exhaust fan                                                      -044e  218
      IF (<EXHAUST-SOURCE> .eq. 1) THEN  ! makeup by system OA                  -046   240
        Call ZoneExhaust(1, CFMZ)        ! set EXCFM                            -046   241
        Call ZoneExhaust(9, CFMZ)        ! power                                -046   242
      ENDIF                                                                     -046   243
      ECFM = ECFM  + EXCFM*ZMULT                                                -044e  221
      TAVE   = (<TNOW>+<TPAST>)*0.5                                             INDUC   98
C              LOAD ON ZONE COIL IS ZONE LOAD MODIFIED BY                       INDUC   99
C              THE LOAD HANDLED (OR ADDED) BY THE MAIN                          INDUC  100
C              AIR SUPPLY                                                       INDUC  101
      Q      = <QNOW> - CONS(1)*CFMZ*(TAVE-TC)                                  INDUC  102
C              SEPERATE HEATING AND COOLING LOADS                               INDUC  103
      IF((TAVE.GT.THZ+THR).AND.(TAVE.LT.TCZ-THR))  Q = 0.0                      INDUC  104
      ZQH    = AMIN1(0.,Q*HON)                                                  INDUC  105
      IF (ZCapRh .EQ. 0.)  ZQH = 0.                                             HVAC12 126
      ZQC    = AMAX1(0.,Q*CON)                                                  INDUC  106
      IF (ZCapRc .EQ. 0.)  ZQC = 0.                                             HVAC12 127
C              SEE IF IT WAS A FURNAC                                           INDUC  107
C              IF ZONE COILS ARE ELECTRIC                                       INDUC  108
      IF (<ZONE-HEAT-SOURCE>.EQ.1)  THEN                                        INDUC  109
        X      = ZQH*KWBTU                                                      INDUC  110
        ZKW    = ZKW    - X                                                     INDUC  111
        SKWQH  = SKWQH  - X*ZMULT                                               INDUC  112
        JEM       = <HEAT-E-MZ>                                                 HVAC6  416
        <HEAT-EM> = <HEAT-EM> - X*ZMULT                                         HVAC6  417
      ENDIF                                                                     INDUC  114
      IF((<ZONE-HEAT-SOURCE>.EQ.2).OR.(<ZONE-HEAT-SOURCE>.EQ.3))  THEN          HVAC6  418
        CALL FURNAC(ZQH,<HEATCAPZ>,<ZONE-HEAT-SOURCE>,ZMULT)                    HVAC6  419
        JEM       = <AUX-E-MZ>                                                  HVAC6  420
        <AUX-EM>  = <AUX-EM> + FurnAuxkW                                        HVAC6  421
        JFM       = <HEAT-F-MZ>                                                 HVAC6  422
        <HEAT-FM> = <HEAT-FM> - FFUEL                                           HVAC6  423
        <AUX-FM>  = <AUX-FM>  + FurnAuxFuel                                     HVAC6  424
      ENDIF                                                                     HVAC6  425
C********************** run function : INDUC-1Z ********************            INDUC  117
      IF( MSYSF(49) .NE. 0 )   CALL  FINTS( MSYSF(49), 1. )                     INDUC  118
C*******************************************************************            INDUC  119
c                                                                               HVAC1  446
c              save zonal coil flows and loads for circulation loop calcs       HVAC1  447
      <COIL_CFMZ>   = <CFMAX>                                                   HVAC1  448
c              Save values for coil flow calculations.  Entering wetbulb        -042L5   3
c              assumed to be constant at 60F.                                   -042L5   4
      <COIL_EDBZ>   = TL                                                        -042L5   5
      <COIL_EWBZ>   = 60.                                                       -042L5   6
      <COIL_CYCLEZ> = 1.                                                        HVAC1  451
      <COIL_QZ>     = ZQH + ZQC                                                 HVAC1  452
      <BBRD_EDB>    = TAVE                                                      HVAC1  453
      <BBRD_Q>      = QHBZ                                                      HVAC1  454
C              INCREMENT TOTAL HEAT/COOL LOADS                                  INDUC  120
      QHZ    = QHZ + ZQH*ZMULT                                                  INDUC  121
      QCZ    = QCZ + ZQC*ZMULT                                                  INDUC  122
C              CALC RETURN AIR TEMP CONTRIB BY THIS ZONE                        INDUC  123
      TR     = TR + TAVE*(CFMZ-EXCFM)*ZMULT                                     INDUC  124
C              INCREMENT TOTAL SYSTEM CFM                                       INDUC  125
      CFM    = CFM + CFMZ*ZMULT                                                 INDUC  126
C              IF THE ZONE COILS CANNOT BE SOLAR SUPPLIED SKIP                  INDUC  127
      IF(<ZONE-HEAT-SOURCE> .GE. 0)  GOTO 174                                   INDUC  128
C              KEEP A SUM OF THE LOADS, TEMPS AND CFM FOR THE SOLAR EQ          INDUC  129
      QHZP   = QHZP + ZQH*ZMULT                                                 INDUC  130
      TZP    = TZP + TL*<CFMAX>*ZMULT                                           INDUC  131
      CFMZP  = CFMZP + <CFMAX>*ZMULT                                            INDUC  132
C              IF BASEBOARDS ARE ELECTRIC                                       INDUC  141
  174 IF (<BASEBOARD-SOURCE>.EQ.1)  THEN                                        INDUC  142
        X      = QHBZ*KWBTU                                                     INDUC  143
        ZKW    = ZKW    - X                                                     INDUC  144
        SKWQH  = SKWQH  - X*ZMULT                                               INDUC  145
        JEM       = <HEAT-E-MZ>                                                 HVAC6  426
        <HEAT-EM> = <HEAT-EM> - X*ZMULT                                         HVAC6  427
      ENDIF                                                                     INDUC  147
C              IF BASEBOARDS ARE FUEL                                           INDUC  148
      IF((<BASEBOARD-SOURCE>.EQ.2).OR.(<BASEBOARD-SOURCE>.EQ.3))  THEN          HVAC6  428
        CALL FURNAC(QHBZ,<BASEBOARD-RATING>,<BASEBOARD-SOURCE>,ZMULT)           HVAC6  429
        JEM       = <AUX-E-MZ>                                                  HVAC6  430
        <AUX-EM>  = <AUX-EM> + FurnAuxkW                                        HVAC6  431
        JFM       = <HEAT-F-MZ>                                                 HVAC6  432
        <HEAT-FM> = <HEAT-FM> - FFUEL                                           HVAC6  433
        <AUX-FM>  = <AUX-FM>  + FurnAuxFuel                                     HVAC6  434
      ENDIF                                                                     HVAC6  435
C              CALC RETURN AIR RATIO                                            INDUC  152
   25 RETR   = 1.                                                               INDUC  153
      IF(CFMZ .GT. 0.)  RETR = (1.0-EXCFM/CFMZ)                                 INDUC  154
C              INCREMENT TOTAL SYSTEM LATENT LOAD                               INDUC  155
      QLSUM  = QLSUM + <QL>*RETR*ZMULT                                          INDUC  156
C              INCREMENT TOTAL SYSTEM PLENUM LOAD                               INDUC  157
      QPSUM  = QPSUM + <QP>*ZMULT                                               INDUC  158
C              INCREMENT TOTAL SYSTEM INFILTRATION CFM                          INDUC  159
      CINF   = CINF + <CFMINF>*RETR*ZMULT                                       INDUC  160
C              DCV - Calculate zone Occupancy based vent CFM and fraction       -044c  565
      IF((<MIN-OA-METHOD>.LT.0) .AND. (CFMZ .GT. 0.))  THEN                     -044c  566
        MZ = ISPB + (<NZSPACE>-1)*MZLEN                                         -044c  567
        <DCVOAcfmZ> = SchVal(<PEOPLE-SCHEDULE>, 1.)                             -045b   95
     &              * <ZPPLNO> * <OA-CFM/PER>                                   -045b   96
        XX = <OUTSIDE-AIR-CFM>                                                  -044c  569
        IF(XX .EQ. 0.)                                                          -044c  570
     $     XX = AMAX1(<OA-FLOW/AREA>*<AREA>,<OA-CHANGES>*<VOLUME>/60.)          -044c  571
        <DCVOAcfmZ> = AMAX1(RETR*<DCVOAcfmZ>,XX)                                -044c  572
        <DCVOAcfmFrac> = AMIN1(1.,<DCVOAcfmZ>/CFMZ)                             -044c  573
        <DCVOAcfmS> = <DCVOAcfmS> + <DCVOAcfmZ>*ZMULT                           -044c  574
        <DCVOAcfmFracCrit> = AMAX1(<DCVOAcfmFracCrit>,<DCVOAcfmFrac>)           -044c  575
      ELSE                                                                      -044c  576
        <DCVOAcfmZ> = 0.0                                                       -044c  577
        <DCVOAcfmFrac> = 0.0                                                    -044c  578
      ENDIF                                                                     -044c  579
   26 CONTINUE                                                                  INDUC  161
      IF (<ZONE-TYPE>.EQ.3) GO TO 35                                            INDUC  162
C              INCREMENT TOTAL SYSTEM KW                                        INDUC  163
      ZKW    = ZKW + <ZKW>                                                      INDUC  164
      <SKW>  = <SKW> + ZKW*ZMULT                                                INDUC  165
C              SUM END-USE VARIABLES FOR THIS ZONE                              INDUC  166
C              IF THIS ZONE HAS A REP-BLOCK BUFFER AND AN                       INDUC  168
C              HOURLY-REP IS SCHED ON CALL ROUTINE TO FILL                      INDUC  169
C              THE BUFFER                                                       INDUC  170
      IF((<IZNBUFP>.NE.0).AND.(IRSCH.NE.0))  CALL USERZR( ZP1,ZP2 )             INDUC  171
      IF(IRPZON .NE. 0)  CALL RPTZON                                            INDUC  172
C              INCREMENT ZP1 TO POINT TO NEXT ZONE                              INDUC  173
   35 ZP1    = ZP1 + NZD                                                        INDUC  174
   50 CONTINUE                                                                  INDUC  175
C                                                                               INDUC  176
C              CALCULATE TOTAL SYSTEM LOADS                                     INDUC  177
C                                                                               INDUC  178
      HON    = HONS                                                             INDUC  179
      CON    = CONSV                                                            INDUC  180
C              CALC RETURN AIR CFM                                              INDUC  181
      RCFM   = CFM - ECFM                                                       INDUC  182
C              CALC RETURN AIR TEMP                                             INDUC  183
      TR     = TR/(RCFM+.01)                                                    INDUC  184
      TH     = <HEAT-SET-T>                                                     INDUC  185
C              GET TOTAL EXHAUST CFM AND LATENT GAIN FROM PLENUMS               INDUC  186
      QLSUMP = 0.                                                               INDUC  187
      CINFP = 0.                                                                INDUC  188
      Nplen = <NumPlenZONES>                                                    HVAC2   43
      IF (Nplen .EQ. 0)  GOTO 52                                                HVAC2   44
      DO 51  NZ=1,Nplen                                                         HVAC2   45
c              pick up the pointer to the plenum                                HVAC2   46
      ZP1    = <ISZONES-plenum> + (NZ-1)*NZD                                    HVAC2   47
      ZP2 = <ZP2>                                                               INDUC  192
      IF (<EXHAUST-SOURCE> .eq. 1) THEN  ! makeup by system OA                  -046   244
        IF (RCFM .gt. 0.) THEN                                                  -046   245
          CFMplen = RCFM * <AREA>/<PLENMULT>                                    -046   246
          Call ZoneExhaust(1, CFMplen)   ! set EXCFM                            -046   247
          ECFMP = ECFMP + EXCFM*<MULTIPLIER>                                    -046   248
          RETRP = 1. - EXCFM*<PLENMULT>/(<AREA>*(RCFM+1.E-6))                   -046   249
        ELSE                                                                    -046   250
          Call ZoneExhaust(1, 0.)                                               -046   251
          RETRP = 1.                                                            -046   252
        ENDIF                                                                   -046   253
      ELSE                                                                      -046   254
        RETRP = 1.                                                              -046   255
      ENDIF  ! EXHAUST-SOURCE                                                   -046   256
      QLSUMP = QLSUMP + <QL>*<MULTIPLIER>*RETRP                                 INDUC  196
      CINFP = CINFP + <CFMINF>*<MULTIPLIER>*RETRP                               INDUC  197
   51 CONTINUE                                                                  INDUC  198
   52 CONTINUE                                                                  HVAC2   48
C              ADJUST QLSUM AND CINF FOR PLENUM EFFECTS                         INDUC  199
      RETRP = 1. - ECFMP/(RCFM+1.E-6)                                           INDUC  200
      QLSUM = QLSUM*RETRP + QLSUMP                                              INDUC  201
      CINF = CINF*RETRP + CINFP                                                 INDUC  202
C             ADD PLENUM EXH TO ZONE EXH FOR USE IN SDSF                        INDUC  203
      ECFM = ECFM + AMIN1(ECFMP,RCFM)                                           INDUC  204
C              CALL ROUTINE WHICH CALCULATES THE AIR-HANDLER LOADS              INDUC  205
      CALL SDSF                                                                 INDUC  206
C             RECALC RETURN CFM ACCOUNTING FOR PLEN EXH (FOR USE IN HREP)       INDUC  207
      RCFM = CFM - ECFM                                                         INDUC  208
C********************** run function : INDUC-2 *********************            INDUC  227
      IF( MSYSF(50) .NE. 0 )   CALL  FINTS( MSYSF(50), 2. )                     INDUC  228
C*******************************************************************            INDUC  229
      IF(<ZONE-HEAT-SOURCE> .LE. 0)  <QH> = QHZ                                 INDUC  230
C              TOTAL COOLING COIL ENERGY                                        INDUC  231
      QC     = QC + QCZ                                                         INDUC  232
      RETURN                                                                    INDUC  233
      END                                                                       INDUC  234
      FUNCTION INDX(NX,XP,X)                                                    INDX     2
      DIMENSION XP(NX)                                                          INDX     3
      DO 100 I=1,NX                                                             INDX     4
      NB = I - 1                                                                INDX     5
      IF (XP(I) .EQ. -999.) GO TO 200                                           INDX     6
  100 CONTINUE                                                                  INDX     7
      NB = NX                                                                   INDX     8
  200 IX = 0                                                                    INDX     9
      IF (X .LT. XP(1)) IX = 1                                                  INDX    10
      IF (X .GE. XP(NB)) IX = NB - 1                                            INDX    11
      IF (IX .NE. 0) GO TO 400                                                  INDX    12
      DO 300 I=2,NB                                                             INDX    13
      IX = I - 1                                                                INDX    14
      IF (X .LT. XP(I)) GO TO 400                                               INDX    15
  300 CONTINUE                                                                  INDX    16
  400 INDX = IX                                                                 INDX    17
      RETURN                                                                    INDX    18
      END                                                                       INDX    19
      Subroutine InitialSYS                                                     INITS    2
c                                                                               INITS    3
c              Initializes all common block variables to zero                   INITS    4
c              in the SYSTEMS code section                                      INITS    5
c                                                                               INITS    6
C              DEVELOPED BY                                                     -130    15
C                            J. J. Hirsch & S. D. Gates                         -130    16
C                            James J. Hirsch & Associates                       -130    17
C                            Camarillo, California                              -130    18
C                                                                               -130    19
Copyright (c) 1997 by James J. Hirsch. All Rights Reserved. Unpublished         -130    20
c rights reserved under the Copyright Laws of the United States.                -130    21
c RESTRICTED RIGHTS NOTICE: Government use, reproduction or disclosure          -130    22
c is subject to restrictions as set forth in Rights in Data (g)(3) in           -130    23
c UC/LBL purchase order 4607010 with J.J. Hirsch & Associates.                  -130    24
C                                                                               -130    25
c                                                                               INITS    8
      COMMON  /BEPS  /  BGAREA, BNAREA, PctSysOvrld, PctPltOvrld,               HVAC6    1
     $                  SiteEnergy, SourceEnergy                                HVAC6    2
      DIMENSION         BEPS(6)                                                 HVAC6    3
      EQUIVALENCE       (BEPS(1),BGAREA)                                        HVAC6    4
      COMMON  /BUFERS/  MRLEN1, MRLEN2, IBLDSB,IELDSB,LLDSB,N3,IBRPB1,          HVACi    1
     1                  IERPB1,LRPB1,IBRPB2,IERPB2,LRPB2                        HVACi    2
      COMMON  /BUF   / DBUF(52,9999), IZREF(9999),                              -048a    8
     &                 DAYMTR(61,24), ElecPeaks5(13,25,24)                      Time     2
      DIMENSION        IDBUF(52,9999), OBUF(42,24,4), IOBUF(42,24,4)            -048a    9
      EQUIVALENCE      (DBUF(1,1),IDBUF(1,1)),                                  /BUF/    5
     1                 (OBUF(1,1,1),DBUF(1,1)),                                 /BUF/    6
     2                 (OBUF(1,1,1),IOBUF(1,1,1))                               /BUF/    7
      COMMON  /DESDAT/ ZCFM,ICFM,ZVENT,C1,IFLAG                                 RemPA    3
      COMMON  /DESHRQ/ NDESDY, IDDTYP(2), DESHRQ(360)                           Time     3
      COMMON /DHWDAT/ HTT,EHSTOR,HTGIVE,HTASK,HTFILL,HSUPRT,HSTRRT,             /DHWDAT/ 2
     1                DHWWST,DHWWSU,HTTIN,DHWLD,DHWLDR,DHWPLR,DHWHRT,           /DHWDAT/ 3
     2                DHHRFT,DHERFT,DHERFP,HTCAP,HTLOSS,DHWEIR                  /DHWDAT/ 4
      DIMENSION DHWD(20)                                                        /DHWDAT/ 5
      EQUIVALENCE (HTT,DHWD(1))                                                 /DHWDAT/ 6
      COMMON  /DPLTD /  DPLTDisUnused                                           HVAC15   1
C              IMODE IS THE OPERATING MODE OF THE PTGSD SYSTEM                  /DSCTRL/ 2
      COMMON  /DSCTRL/  IMODE                                                   /DSCTRL/ 3
C              SYSTEM LEVEL VARIABLES FOR DESICCANT SYSTEMS, BOTH TOTAL         /DSYSTD/ 2
C              AND INTEGRATED                                                   /DSYSTD/ 3
      COMMON  /DSYSTD/  SCGAS, QREG, WBR, WB8, T8, W8, WB9, T9, W9, EFF,        /DSYSTD/ 4
     1                  DTON, DMODE(7), ERMAX4, ERMAX5, ERMAX6, OPMODE,         /DSYSTD/ 5
     2                  DBOA,WOA,DGAS,DKW,TCONDd,QCDTOT,QCDS,QCDL,              /DSYSTD/ 6
     3                  POA,DFANKW,RFANKW,DMOTKW,EVKW,QCEVT,QCEVS,              /DSYSTD/ 7
     4                  QCEVL,TCMNEV                                            /DSYSTD/ 8
      REAL DSYSTD(39)                                                           /DSYSTD/ 9
      EQUIVALENCE (DSYSTD(1), SCGAS)                                            /DSYSTD/10
      COMMON  /ENDUSE/ SUPPKW, HEATKW                                           HVAC27   1
      COMMON  /FARRAY/ FARRAY(99)                                               /FARRAY/ 2
      COMMON  /FZZZ1/   CAPXXX, CORINX, CWIDTX, ERMNXX, ERMXXX, FTDEVX          /FZZZ1/  2
     1                , FXXXXX, HEIGHX, HEXXXX, HPCAPX, HPKWXX, IFLGXX          /FZZZ1/  3
     2, IFUELX, ISHXXX, LSR2XX, LSR3XX, PATMXX, PLRXXX, PLSXXX, POMXXX          /FZZZ1/  4
     3, QHFXXX, QMULTX, QNOWXX, SLOADX, TAPPXX, TGINXX, TLOADX, TNOWXX          /FZZZ1/  5
     4, TSETXX, TWOUTX, UCHANX, ICALLX                                          /FZZZ1/  6
      REAL              LSR2XX, LSR3XX                                          /FZZZ1/  7
      COMMON  /FZZZ2/   ILDCTL, ILDMAS, ISUB  , ITYP  , OLDCRT, OLDMIN          /FZZZ2/  2
     2                , OLDMOA, OLDRDT, OLDRET, OLDRKW, OLDSCH, OLDSDT          /FZZZ2/  3
     3                , OLDSKW, OLDSUP, TAV                                     RemPA    7
      COMMON  /FZZZ3/   CFMDIV,DTF,IDDS,POMAX,TMMAX,TMMIN,TRP,TSIG,TSIGN        /FZZZ3/  2
      COMMON  /FZZZ4/   IREC  , ISZHUM, QNEED, QRDEF, QREJ, TCOND               /FZZZ4/  2
      COMMON  /FZZZ5/   INDMOD , FRAC  , CFMAX, QO, TO, R                       /FZZZ5/  2
      COMMON  /HRCNT/   IHOURM, IHOURY,   IDAY1, IDAY2, IMON1,  IMON2           /HRCNT/  2
      COMMON  /HRREP / Irb, Ihrp, Lrb, Lhrp, Nrb, Nhrp, IVTLIM(3,50),           HR       5
     &                 IGRPtr, IBRPtr, IRSch, IRSchT(5),                        HR       6
     &                 NHRTyp(3), ITBUF(3), ITBUFB(3), ITBUFE(3),               HR       7
     &                 IHREOF, ICDFLG                                           HR       8
      COMMON /SUMBUF/ IBUFSL,IBUFSB,IBUFSE                                      /SUMBUF/ 2
      COMMON  /SSRESY/  IVENTF, XRAN                                            /SSRESY/ 2
     1  , CFMCV1, CFMCV2, DEL   , DQGVC1, DQGVNT, DTMIN , FANHTM, FLWMUL        /SSRESY/ 3
     2  , IAFTYP, ISSV  , IVDONE, IZP1RM, IZP1SS, MINH  , MOUH  , MRRFSV        /SSRESY/ 4
     3  , MRRVSF, MRY   , MRZ   , MSRFSV, MSRVSF, NADJ  , NCWCON, NDELT         /SSRESY/ 5
     4  , Q10   , QGVEC1, QGVEC2, QGVNT , QGWAL , QHBZNX, QIN   , QINXS         /SSRESY/ 6
     5  , QLWAL , QOUT  , QOUTXS, QPNX  , QSUNIN, QW    , SSVFP , T1T           /SSRESY/ 7
     6  , T1TB  , T2MAX , T2T   , T2TB  , T2TFV , TINNEW, TNEXT , TOTNEW        /SSRESY/ 8
     7  , UOT   , UVRMG , UVT   , VNTRM , ZDELMN, ZDELMX, ZMNEXT                /SSRESY/ 9
     1  , ECPLR(3), ERMXEC(4), TCMNEC(3), QCV, TVZ, NVCFMS, TNVCFMS             -045d    1
      COMMON  /LOCALD/ STALAT, STALON, ITIMZ, BAZIM, BALTIT,                    /LOCALD/ 2
     1                 SSTALA, CSTALA, TSTALA, SBAZIM, CBAZIM                   /LOCALD/ 3
     +                ,BXORG,BYORG,SHCOEF,TP1,TP2,WSTP1,WSTP2,                  /LOCALD/ 4
     +                 WSHGT,WSHGTL(12),ISREFL,IHOLX                            HOLID1   2
      DIMENSION        LOCALD(32)                                               HOLID1   3
      EQUIVALENCE      (LOCALD(1),STALAT)                                       /LOCALD/ 7
      COMMON  /MISCD / TEMPS(4,9999),CONS(5),TEMPSL(9999),                      -048a   10
     1                 BLDGQH,BLDGQC,BLDGQL,BLDGP,BPMULT,                       /MISCD/  3
     $                 DBTMIN,DBTMAX,WMIN,WMAX,NSPZ(9999),                      -048a   11
     3                 DQ, DTP, DTR, DTS, FPI, PLRCC , POM, TC2, TDM,           /MISCD/  5
     4                 TRA,WCOL,WCOLM,WMM,YPI,KWBTU,BTUKW,UNFILD,Unusedm        RemPA   45
      REAL             KWBTU                                                    /MISCD/  7
      COMMON /NVNDAT/ VENTF,VNTCFM,NDH,IVENTG,QCVZ,VNTfrac                      -44c6    1
      COMMON  /PIUDAT/ ERFON,ERFOFF,TFZ,ZFONLY,IBF,BBR,MSTEMP,F,                -044e2   1
     &                 CFMIND,CFMI,FRACIAZ,HONS,RCFMI,RCFMMI,RCFMTX,            -044e2   2
     &                 TIAZ,TIC,TIH,ZCFMT,ZQHSMN,TEND1,TEND2,TRY2,F2,           -044e2   3
     &                 FNSZHP,MAXSTZ                                            -044e2   4
      DIMENSION        ZDPIU(8)                                                 -044e2   5
      EQUIVALENCE     (ZDPIU(1),ERFON)                                          -044e2   6
      COMMON  /PLANTD/ QHMP,TMP,CFMP,QHPP,CFMPP,                                /PLANTD/ 2
     1                 QHZP,TZP,DHWPKW,DHWPLF,DHWQRP                            RemPA   46
      REAL             PLANTD(10)                                               RemPA   47
      EQUIVALENCE      (PLANTD(1), QHMP)                                        RemPA   48
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      DIMENSION        PTRSYS(29)                                               -047k   60
      EQUIVALENCE      (PTRSYS(1),nzone)                                        -047k   61
      COMMON /RSVVTD/ CONFRC,HONFRC,NOWFRC,THMXNS                               /RSVVTD/ 2
      REAL NOWFRC                                                               /RSVVTD/ 3
      COMMON  /REPRT1/ IREFG, Iuniq                                             XFC1     2
      COMMON /SHP   / QCRUN,QCLOAD,QCGAS,QCAUX,QCGSLD,QCGSUP,                   /SHP/    2
     1                QCWAS,QCWASU,QCGSAV,QCFAN,                                /SHP/    3
     2                QHRUN,QHLOAD,QHGAS,QHAUX,QHGSLD,QHGSUP,                   /SHP/    4
     3                QHWAS,QHWASU,QHGDFR,QHFAN,          CUR(25),              /SHP/    5
     4                GSAV1,GASV2,PCH,ISZCZ,GCAP(2),GEDB,QHDFRG,                -044c1   1
     5                GRPM,PLRSUP,CFMCYC,CLPLR,CFMVVT,QHZHP,PCCEDB,             /SHP/    7
     6                IHPREP,IHPOUT,IHPHRR,IHPHRN,IRST,IREN                     /SHP/    8
      COMMON /SHPZ  / QCRUNZ,QCLOADZ,QCGASZ,QCAUXZ,QCGSLDZ,QCGSUPZ,             /SHP/    9
     1                QCWASZ,QCWASUZ,QCGSAVZ,QCFANZ,                            /SHP/   10
     2                QHRUNZ,QHLOADZ,QHGASZ,QHAUXZ,QHGSLDZ,QHGSUPZ,             /SHP/   11
     3                QHWASZ,QHWASUZ,QHGDFRZ,QHFANZ                             /SHP/   12
      DIMENSION       SHP(60),SHPZ(20)                                          /SHP/   13
      EQUIVALENCE     (SHP,QCRUN),(SHPZ,QCRUNZ)                                 /SHP/   14
     1               ,(DFM1,CUR(18)),(DFM2,CUR(19)),(DFM3,CUR(20))              /SHP/   15
      COMMON /SSPDAT/  PLRCS,QCCKWS,QCCMPS,PLRHS,QHCKWS,QHCMPS                  /SSPDAT/ 2
     $                ,PLRFS,PLRFCS,PLRFHS,sspss                                /SSPDAT/ 3
     $                ,PLRCZ,QCCKWZ,QCCMPZ,PLRHZ,QHCKWZ,QHCMPZ                  /SSPDAT/ 4
     $                ,PLRFZ,PLRFCZ,PLRFHZ,sspsz                                /SSPDAT/ 5
     $                ,ISSPF,IWCCF,IPCCF,SSPSAV                                 /SSPDAT/ 6
      DIMENSION        SSPD(24)                                                 JJHfix   1
      EQUIVALENCE      (SSPD(1),PLRCS)                                          /SSPDAT/ 8
      COMMON  /SYSTD / TH,TC,TM,TR,QH,QC,QHZ,QCZ,QHB,QHP,QHUM,                  /SYSTD/  2
     1                 QDHUM,TCMIN,THMAX,QLSUM,QPSUM,CFM,CFMH,CFMC,             /SYSTD/  3
     2                 RCFM,ECFM,CINF,FON,HON,CON,BON,SCONS(3),PH,PC,           /SYSTD/  4
     3                 SKW,FANKW,unused1,WR,WM,WCOIL,WW,PO,D,                   -046f    1
     4                 FTEMP,TCR,QHR,RfanPumpKW,SGAS,SKWQH,SKWQC,QCLAT,         -131    23
     5                 SFKW,RFKW,FONNGT,WSURF,RWalkinQ,TSURF,TRh,               -131    24
     6                 CBF,CBF1,CBF2,EON,PLRCFM,PLRC,PLRH,QCM1,                 /SYSTD/  8
     7                 QCM2,QHM1,EIRM1,EIRM2,EIR,OFKW,QCT,QCS,                  /SYSTD/  9
     8                 WRMAX,WRMIN,CFMRAT,QdistG,QdistL,RON,QHT,                /SYSTD/ 10
     9                 TPOMIN,POMIN,QHSUP,QRSENS,QRLAT,QRREC,QRREJ,             /SYSTD/ 11
     1                 RCOMKW,RDEFKW,RAUXKW,ECFMP,CFMIN,CINFP,DT,DW,            /SYSTD/ 12
     2                 EWB,IC,NATTSP,Q,RETR,SLOAD,QLSUMP,T,TCHUM,TEND,          /SYSTD/ 13
     3                 TS,hgbmin,HPDefE,EconoOnly,TDuctEnv,                     -044e1   1
     4                 QCUNMT,CapRh,CapRph,CapRc                                HVAC25   3
      REAL             SYSTD(113)                                               HVAC19  13
      EQUIVALENCE      (SYSTD(1),TH)                                            RemPA   65
      COMMON /DDSDAT/ FONh, SFKWh, DTSh, CFMRATh, FONNGTh, RCFMmix,             /DDSDAT/ 2
     1                RfanCFM, EXFIL, DTDUCT, DTDUCTh, TCDFSR, THDFSR,          /DDSDAT/ 3
     2                CFMINh, CFMINc, CFMINhm, CFMINcm, CFMINt,                 /DDSDAT/ 4
     3                TCMINcoil, THMAXcoil, IWarmestZ, IColdestZ                /DDSDAT/ 5
      DIMENSION       DDSDAT(21)                                                /DDSDAT/ 6
      EQUIVALENCE     (DDSDAT(1), FONh)                                         /DDSDAT/ 7
      COMMON  /RQLSCH/ RQLSCH(3)                                                /RQLSCH/ 2
      COMMON  /TROMWL/ SUMDTX,SUMDTY,QCTOT,QLC0,QGK0,QCGUES,QVNTBG,             /TROMWL/ 2
     1                 VOLVNT,AMF,UCHAN,UCHANC,HRGW,TAIRIN,TZONE,               /TROMWL/ 3
     2                 TGOUT,QCVG,QCVW,IVMODE,TFO,RHO,MWH,FILMU,MRX,CTRM        /TROMWL/ 4
     1    , TAVR, TGLASS, TUNDER, UNIN1                                         /TROMWL/ 5
      COMMON  /ZONED / EXCFM,FH,FC,CFMZ,QHBZ,QOVER,THZ,TCZ,ERMAX,ERMIN,         /ZONED/  2
     1                 TRY,FTD,CORINT,G0,G1,G2,G3,SIGMAG,TL,ZQHR,TAVE,          /ZONED/  3
     2                 ZQH,ZQC,FCHPS(15),ACFM,ZKW,TCMINZ,THMAXZ,                /ZONED/  4
     3                 ERMAXM,ERMINM,THR,CSSCND,CSSVEC,HENOW,QGWIN,             /ZONED/  5
     4                 QSNABT,QGOPWL,QGVEC,CFMCVT,SSFPT,CFMVNT,ZFANKW,          /ZONED/  6
     5                 ZKWCBT,ZKWHBT,ZCapRbbrd, XC,ZC,XH,ZH                     -044e2   7
      REAL ZONED(63)                                                            -044e2   8
      EQUIVALENCE (ZONED(1),EXCFM)                                              /ZONED/  9
      COMMON /WSEDAT/  CAPAIR,CAPWTR,QCWSEM,QCWSE,WSEDTA,WSEDTW,WSEXEF          /WSEDAT/ 2
     $                ,WSENTU,WSEUA,WSEQMX,WSEPLR,WSEDT,WSE13,WSE14             /WSEDAT/ 3
     $                ,WSE15                                                    /WSEDAT/ 4
      DIMENSION        WSESAV(15)                                               /WSEDAT/ 5
      EQUIVALENCE      (WSESAV(1),CAPAIR)                                       /WSEDAT/ 6
c                                                                               INITS   45
c               /BEPS/                                                          INITS   46
      CALL FILLN(0, BEPS(1), 6)                                                 HVAC19  24
c              /BUFERS/ partially initialized                                   INITS   48
      CALL FILLN(0, IBLDSB, 10)                                                 INITS   49
c              /BUF/                                                            INITS   50
      CALL FILLN(0, DBUF(1,1), 63536)                                           HR      59
c              /DESDAT/                                                         INITS   52
      CALL FILLN(0, ZCFM, 5)                                                    INITS   53
c              /DESHRQ/                                                         INITS   54
      CALL FILLN(0, NDESDY, 363)                                                Time   276
c              /DHWDAT/                                                         INITS   56
      CALL FILLN(0, HTT, 20)                                                    INITS   57
c              /DSCTRL/                                                         INITS   60
      CALL FILLN(0, IMODE, 1)                                                   INITS   61
c              /DSYSTD/                                                         INITS   62
      CALL FILLN(0, SCGAS, 39)                                                  INITS   63
c              /ENDUSE/                                                         HVAC27  19
      CALL FILLN(0, SUPPKW, 2)                                                  HVAC27  20
c              /FARRAY/                                                         INITS   66
      CALL FILLN(0, FARRAY(1), 99)                                              INITS   67
c              /FZZZ1/                                                          INITS   68
      CALL FILLN(0, CAPXXX, 32)                                                 INITS   69
c              /FZZZ2/                                                          INITS   70
      CALL FILLN(0, ILDCTL, 15)                                                 INITS   71
c              /FZZZ3/                                                          INITS   72
      CALL FILLN(0, CFMDIV, 9)                                                  INITS   73
c              /FZZZ4/                                                          INITS   74
      CALL FILLN(0, IREC, 6)                                                    INITS   75
c              /FZZZ5/                                                          INITS   76
      CALL FILLN(0, INDMOD, 6)                                                  INITS   77
c              /HRCNT/                                                          INITS   78
      CALL FILLN(0, IHOURM, 6)                                                  INITS   79
c              /SUMBUF/                                                         INITS   82
      CALL FILLN(0, IBUFSL, 3)                                                  INITS   83
c              /SSRESY/                                                         INITS   84
c              Note that SSFCOR initializes ZDELMN, ZDELMX, and DTMIN           -037b   15
      CALL FILLN(0, IVENTF, 69)                                                 INITS   85
c              /LOCALD/                                                         INITS   86
      CALL FILLN(0, STALAT, 32)                                                 HVAC19  27
c              /MISCD/                                                          INITS   88
      CALL FILLN(0, TEMPS(1,1), 800)                                            INITS   89
c              /NVNDAT/                                                         INITS   90
      CALL FILLN(0, VENTF, 3)                                                   INITS   91
c              /PLANTD/                                                         INITS   94
      CALL FILLN(0, QHMP, 10)                                                   INITS   95
c              /PTRSYS/                                                         INITS   96
c              /RSVVTD/                                                         INITS   98
      CALL FILLN(0, CONFRC, 4)                                                  INITS   99
c              /RUNTIM/ not initialized                                         INITS  100
c              /REPRT1/                                                         INITS  101
      CALL FILLN(0, IREFG, 1)                                                   INITS  102
c              /SHP/                                                            INITS  103
      CALL FILLN(0, QCRUN, 66)                                                  INITS  104
c              /SHPZ/                                                           INITS  105
      CALL FILLN(0, QCRUNZ, 20)                                                 INITS  106
c              /SSPDAT/                                                         INITS  107
      CALL FILLN(0, PLRCS, 24)                                                  INITS  108
c              /SYSTD/                                                          INITS  109
      CALL FILLN(0, TH, 113)                                                    HVAC19  28
c              /DDSDAT/                                                         INITS  111
      CALL FILLN(0, FONh, 21)                                                   HVAC25  51
c              /RQLSCH/                                                         INITS  113
      CALL FILLN(0, RQLSCH(1), 3)                                               INITS  114
c              /TROMWL/                                                         INITS  115
      CALL FILLN(0, SUMDTX, 28)                                                 INITS  116
c              /ZONED/                                                          INITS  117
      CALL FILLN(0, EXCFM, 63)                                                  -047k   62
c              /WSEDAT/                                                         INITS  119
      CALL FILLN(0, CAPAIR, 15)                                                 INITS  120
c                                                                               INITS  121
      RETURN                                                                    INITS  122
      END                                                                       INITS  123
      FUNCTION Jcurve(NumCrv)                                                   Jcurve   2
c                                                                               Jcurve   3
c              Converts a curve number to a pointer                             Jcurve   4
c                                                                               Jcurve   5
c              Num    Number of curve as defined in BDL                         Jcurve   6
c                                                                               Jcurve   7
      COMMON  /PtrCrv/ Icv, Ncv, Lcv                                            /PtrCrv/ 2
c                                                                               Jcurve   9
      IF (NumCrv .ne. 0) THEN                                                   -047k   63
        Jcurve = Icv + (NumCrv-1)*Lcv                                           Jcurve  11
      ELSE                                                                      Jcurve  12
        Jcurve = 0                                                              Jcurve  13
      ENDIF                                                                     Jcurve  14
c                                                                               Jcurve  15
      RETURN                                                                    Jcurve  16
      END                                                                       Jcurve  17
      SUBROUTINE NATVNT                                                         NATVNT   2
C                                                                               NATVNT   3
C              SET THE NATURAL VENTING ON/OFF FLAG                              NATVNT   4
C                                                                               NATVNT   5
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON  /LOCALD/ STALAT, STALON, ITIMZ, BAZIM, BALTIT,                    /LOCALD/ 2
     1                 SSTALA, CSTALA, TSTALA, SBAZIM, CBAZIM                   /LOCALD/ 3
     +                ,BXORG,BYORG,SHCOEF,TP1,TP2,WSTP1,WSTP2,                  /LOCALD/ 4
     +                 WSHGT,WSHGTL(12),ISREFL,IHOLX                            HOLID1   2
      DIMENSION        LOCALD(32)                                               HOLID1   3
      EQUIVALENCE      (LOCALD(1),STALAT)                                       /LOCALD/ 7
      COMMON /NVNDAT/ VENTF,VNTCFM,NDH,IVENTG,QCVZ,VNTfrac                      -44c6    1
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      COMMON  /SSRESY/  IVENTF, XRAN                                            /SSRESY/ 2
     1  , CFMCV1, CFMCV2, DEL   , DQGVC1, DQGVNT, DTMIN , FANHTM, FLWMUL        /SSRESY/ 3
     2  , IAFTYP, ISSV  , IVDONE, IZP1RM, IZP1SS, MINH  , MOUH  , MRRFSV        /SSRESY/ 4
     3  , MRRVSF, MRY   , MRZ   , MSRFSV, MSRVSF, NADJ  , NCWCON, NDELT         /SSRESY/ 5
     4  , Q10   , QGVEC1, QGVEC2, QGVNT , QGWAL , QHBZNX, QIN   , QINXS         /SSRESY/ 6
     5  , QLWAL , QOUT  , QOUTXS, QPNX  , QSUNIN, QW    , SSVFP , T1T           /SSRESY/ 7
     6  , T1TB  , T2MAX , T2T   , T2TB  , T2TFV , TINNEW, TNEXT , TOTNEW        /SSRESY/ 8
     7  , UOT   , UVRMG , UVT   , VNTRM , ZDELMN, ZDELMX, ZMNEXT                /SSRESY/ 9
     1  , ECPLR(3), ERMXEC(4), TCMNEC(3), QCV, TVZ, NVCFMS, TNVCFMS             -045d    1
      COMMON  /SYSTD / TH,TC,TM,TR,QH,QC,QHZ,QCZ,QHB,QHP,QHUM,                  /SYSTD/  2
     1                 QDHUM,TCMIN,THMAX,QLSUM,QPSUM,CFM,CFMH,CFMC,             /SYSTD/  3
     2                 RCFM,ECFM,CINF,FON,HON,CON,BON,SCONS(3),PH,PC,           /SYSTD/  4
     3                 SKW,FANKW,unused1,WR,WM,WCOIL,WW,PO,D,                   -046f    1
     4                 FTEMP,TCR,QHR,RfanPumpKW,SGAS,SKWQH,SKWQC,QCLAT,         -131    23
     5                 SFKW,RFKW,FONNGT,WSURF,RWalkinQ,TSURF,TRh,               -131    24
     6                 CBF,CBF1,CBF2,EON,PLRCFM,PLRC,PLRH,QCM1,                 /SYSTD/  8
     7                 QCM2,QHM1,EIRM1,EIRM2,EIR,OFKW,QCT,QCS,                  /SYSTD/  9
     8                 WRMAX,WRMIN,CFMRAT,QdistG,QdistL,RON,QHT,                /SYSTD/ 10
     9                 TPOMIN,POMIN,QHSUP,QRSENS,QRLAT,QRREC,QRREJ,             /SYSTD/ 11
     1                 RCOMKW,RDEFKW,RAUXKW,ECFMP,CFMIN,CINFP,DT,DW,            /SYSTD/ 12
     2                 EWB,IC,NATTSP,Q,RETR,SLOAD,QLSUMP,T,TCHUM,TEND,          /SYSTD/ 13
     3                 TS,hgbmin,HPDefE,EconoOnly,TDuctEnv,                     -044e1   1
     4                 QCUNMT,CapRh,CapRph,CapRc                                HVAC25   3
      REAL             SYSTD(113)                                               HVAC19  13
      EQUIVALENCE      (SYSTD(1),TH)                                            RemPA   65
      COMMON  /TIME  / IDOY, IYR, IMO, IDAY, IHR,                               Time     4
     &                 ISCMO, ISCDAY, ISCHR, IDOW, ISCDOW, iDSdates(6),         -044e5   1
     &                 iTimeFlg, iDSFlg, iDDFlg, InitialFlg, LeapYr,            Time     6
     &                 CLOCK(10), MONDSC(13), MONLEN(12), MONSDA(12)            HR      12
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
C                                                                               NATVNT  14
      H(DB,W) = 0.24*DB + (1061.0+0.444*DB)*W                                   NATVNT  15
                                                                                NATVNT  16
C              IF NO VENTING SCHEDULE, SKIP                                     NATVNT  17
      IF (<NATURAL-VENT-SCH>.EQ.0) RETURN                                       NATVNT  18
C              IF VENT-METHOD=AIR-CHANGE AND NATURAL-VENT-AC=0, SKIP            NATVNT  19
      IF (<NATURAL-VENT-AC>.EQ.0. .AND. <VENT-METHOD>.EQ.1) RETURN              NATVNT  20
C              PICK UP THE NATURAL VENTING SET POINT                            NATVNT  21
      TVZ = SchVal(<VENT-TEMP-SCH>, TVZ)                                        Time   278
C              PICK UP THE SCHEDULE VALUE WTHAT TELLS WETHER WE                 NATVNT  23
C              CAN USE OPEN WINDOWS FOR COOLING. THE VALUES MEAN-               NATVNT  24
C                            0 = DO NOT USE NATURAL VENTING                     NATVNT  25
C                            1 = USE NATURAL VENTING IF IT CAN HOLD SETPT       NATVNT  26
C                           -1 = USE IF IT CAN HOLD SETPOINT AND THE            NATVNT  27
C                                OUTSIDE ENTHALPY IS LESS THAN INSIDE           NATVNT  28
      VENTF = SchVal(<NATURAL-VENT-SCH>, VENTF)                                 Time   279
C              NOW CHECK PROBABILITY OF OPENING WINDOW AND SET VENTF            NATVNT  31
C              IF VENTING NOT USED LAST HOUR AND PROB SCH SET THEN:             NATVNT  32
      IF (<PAST-IVENTF>.EQ.0 .AND. <OPEN-VENT-SCH>.NE.0) THEN                   NATVNT  33
        VNTPRB = SchVal(<OPEN-VENT-SCH>, 1.)                                    Time   280
        CALL DRAND(XRAN)                                                        NATVNT  35
        IF(XRAN.GT.VNTPRB)  VENTF=0.0                                           NATVNT  36
      END IF                                                                    NATVNT  37
      IF (VENTF.EQ.0.0) RETURN                                                  NATVNT  38
C              SET THE ZONE POINTERS TO THE FIRST ZONE                          NATVNT  39
      ZP1 = ISZ                                                                 NATVNT  40
      ZP2 = <ZP2>                                                               NATVNT  41
C              GET HEATING AND COOLING SET POINTS                               NATVNT  42
      THZ    = <THZ>                                                            NATVNT  43
      TCZ    = <TCZ>                                                            NATVNT  44
      THR    = <THROTTLING-RANGE>                                               NATVNT  45
C              IF TVZ IS LESS THAN ZERO (= - NO. DAYS OF HIST.)                 NATVNT  46
C              ADJUST VENT SET TEMP (TVZ) ACCORDING TO PAST HEATING AND         NATVNT  47
C              COOLING LOADS AND CURRENT HEATING AND COOLING SET TEMPS.         NATVNT  48
C              NDH  = NUMBER OF DAYS OF HISTORY (MAX=4)                         NATVNT  49
C              <HT-SUM>= SUM OF HEATING LOADS DURING PAST NDH DAYS              NATVNT  50
C              <CL-SUM>= SUM OF COOLING LOADS DURING PAST NDH DAYS              NATVNT  51
      IF (<HEAT-TEMP-SCH>.GT.0 .AND. <COOL-TEMP-SCH>.GT.0 .AND.                 NATVNT  52
     1    TVZ.LT.0.) THEN                                                       NATVNT  53
        NDH = 0.5 - TVZ                                                         NATVNT  54
        IF (NDH .GT. 4) NDH = 4                                                 NATVNT  55
        RATIO = <HT-SUM> / (<HT-SUM> + <CL-SUM> + 0.0001)                       NATVNT  56
        TVZ = THZ + RATIO * (TCZ - THZ)                                         NATVNT  57
        IF (TVZ .LT. 70.0) TVZ = 70.0                                           NATVNT  58
      END IF                                                                    NATVNT  59
C              IF TVZ IS NOT SET, DEFAULT IT                                    NATVNT  60
      IF (TVZ .EQ. 0.) THEN                                                     NATVNT  61
        TVZ = THZ + THR                                                         NATVNT  62
        IF (THZ .EQ. -999.) TVZ = TCZ - THR                                     NATVNT  63
      END IF                                                                    NATVNT  64
C              CALC THE VENTING CFM                                             NATVNT  65
C              SKIP IF OUTSIDE TEMP IS TOO HIGH OR IF ZONE TEMP IS              NATVNT  66
C              ABOVE COOLING RANGE                                              NATVNT  67
      IF (DBT.LT.<TNOW> .AND. <TNOW>.LE.TCZ+THR) THEN                           NATVNT  68
C              SKIP IF ENTHALPY CHECK REQUIRED AND OUTSIDE ENTHALPY             NATVNT  69
C              TOO HIGH                                                         NATVNT  70
        IF (VENTF.GE.0.0 .OR. ENTHAL.LE.H(<TNOW>,<PASTWR>)) THEN                NATVNT  71
          IVENTG = 1                                                            -42j     3
        END IF                                                                  NATVNT  81
      END IF                                                                    NATVNT  82
      RETURN                                                                    NATVNT  83
      END                                                                       NATVNT  84
      SUBROUTINE OPSTRT(ISH)                                                    OPSTRT   2
C                                                                               OPSTRT   3
C              OPTIMUM START CALCULATIONS                                       OPSTRT   4
C                                                                               OPSTRT   5
      common  /FNSYS/  ISKIPS, MSYSF(120)                                       /FNSYS/  2
      COMMON  /FZZZ1/   CAPXXX, CORINX, CWIDTX, ERMNXX, ERMXXX, FTDEVX          /FZZZ1/  2
     1                , FXXXXX, HEIGHX, HEXXXX, HPCAPX, HPKWXX, IFLGXX          /FZZZ1/  3
     2, IFUELX, ISHXXX, LSR2XX, LSR3XX, PATMXX, PLRXXX, PLSXXX, POMXXX          /FZZZ1/  4
     3, QHFXXX, QMULTX, QNOWXX, SLOADX, TAPPXX, TGINXX, TLOADX, TNOWXX          /FZZZ1/  5
     4, TSETXX, TWOUTX, UCHANX, ICALLX                                          /FZZZ1/  6
      REAL              LSR2XX, LSR3XX                                          /FZZZ1/  7
      COMMON  /FZZZ5/   INDMOD , FRAC  , CFMAX, QO, TO, R                       /FZZZ5/  2
      COMMON  /MISCD / TEMPS(4,9999),CONS(5),TEMPSL(9999),                      -048a   10
     1                 BLDGQH,BLDGQC,BLDGQL,BLDGP,BPMULT,                       /MISCD/  3
     $                 DBTMIN,DBTMAX,WMIN,WMAX,NSPZ(9999),                      -048a   11
     3                 DQ, DTP, DTR, DTS, FPI, PLRCC , POM, TC2, TDM,           /MISCD/  5
     4                 TRA,WCOL,WCOLM,WMM,YPI,KWBTU,BTUKW,UNFILD,Unusedm        RemPA   45
      REAL             KWBTU                                                    /MISCD/  7
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      COMMON  /SYSTD / TH,TC,TM,TR,QH,QC,QHZ,QCZ,QHB,QHP,QHUM,                  /SYSTD/  2
     1                 QDHUM,TCMIN,THMAX,QLSUM,QPSUM,CFM,CFMH,CFMC,             /SYSTD/  3
     2                 RCFM,ECFM,CINF,FON,HON,CON,BON,SCONS(3),PH,PC,           /SYSTD/  4
     3                 SKW,FANKW,unused1,WR,WM,WCOIL,WW,PO,D,                   -046f    1
     4                 FTEMP,TCR,QHR,RfanPumpKW,SGAS,SKWQH,SKWQC,QCLAT,         -131    23
     5                 SFKW,RFKW,FONNGT,WSURF,RWalkinQ,TSURF,TRh,               -131    24
     6                 CBF,CBF1,CBF2,EON,PLRCFM,PLRC,PLRH,QCM1,                 /SYSTD/  8
     7                 QCM2,QHM1,EIRM1,EIRM2,EIR,OFKW,QCT,QCS,                  /SYSTD/  9
     8                 WRMAX,WRMIN,CFMRAT,QdistG,QdistL,RON,QHT,                /SYSTD/ 10
     9                 TPOMIN,POMIN,QHSUP,QRSENS,QRLAT,QRREC,QRREJ,             /SYSTD/ 11
     1                 RCOMKW,RDEFKW,RAUXKW,ECFMP,CFMIN,CINFP,DT,DW,            /SYSTD/ 12
     2                 EWB,IC,NATTSP,Q,RETR,SLOAD,QLSUMP,T,TCHUM,TEND,          /SYSTD/ 13
     3                 TS,hgbmin,HPDefE,EconoOnly,TDuctEnv,                     -044e1   1
     4                 QCUNMT,CapRh,CapRph,CapRc                                HVAC25   3
      REAL             SYSTD(113)                                               HVAC19  13
      EQUIVALENCE      (SYSTD(1),TH)                                            RemPA   65
      COMMON  /ZONED / EXCFM,FH,FC,CFMZ,QHBZ,QOVER,THZ,TCZ,ERMAX,ERMIN,         /ZONED/  2
     1                 TRY,FTD,CORINT,G0,G1,G2,G3,SIGMAG,TL,ZQHR,TAVE,          /ZONED/  3
     2                 ZQH,ZQC,FCHPS(15),ACFM,ZKW,TCMINZ,THMAXZ,                /ZONED/  4
     3                 ERMAXM,ERMINM,THR,CSSCND,CSSVEC,HENOW,QGWIN,             /ZONED/  5
     4                 QSNABT,QGOPWL,QGVEC,CFMCVT,SSFPT,CFMVNT,ZFANKW,          /ZONED/  6
     5                 ZKWCBT,ZKWHBT,ZCapRbbrd, XC,ZC,XH,ZH                     -044e2   7
      REAL ZONED(63)                                                            -044e2   8
      EQUIVALENCE (ZONED(1),EXCFM)                                              /ZONED/  9
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON  /HRREP / Irb, Ihrp, Lrb, Lhrp, Nrb, Nhrp, IVTLIM(3,50),           HR       5
     &                 IGRPtr, IBRPtr, IRSch, IRSchT(5),                        HR       6
     &                 NHRTyp(3), ITBUF(3), ITBUFB(3), ITBUFE(3),               HR       7
     &                 IHREOF, ICDFLG                                           HR       8
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                 IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                        /FILES/  3
     2               , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                   /FILES/  4
     3                 IHRREP(3), IHRPAS(2)                                     /FILES/  5
      COMMON  /TIME  / IDOY, IYR, IMO, IDAY, IHR,                               Time     4
     &                 ISCMO, ISCDAY, ISCHR, IDOW, ISCDOW, iDSdates(6),         -044e5   1
     &                 iTimeFlg, iDSFlg, iDDFlg, InitialFlg, LeapYr,            Time     6
     &                 CLOCK(10), MONDSC(13), MONLEN(12), MONSDA(12)            HR      12
C                                                                               OPSTRT  17
      JJ = 1                                                                    OPSTRT  18
      XXI = 0                                                                   OPSTRT  19
C             LOOP THROUGH THE ZONES                                            OPSTRT  20
      ZP1 = ISZ                                                                 OPSTRT  21
      DO 90 NZ=1,NSZ                                                            OPSTRT  22
        ZP2 = <ZP2>                                                             OPSTRT  23
C             SKIP IF NOT A CONDITIONED ZONE                                    OPSTRT  24
        IF(<ZONE-TYPE> .NE. 1) GO TO 80                                         OPSTRT  25
C             PICK UP THERMOSTAT SET POINTS                                     OPSTRT  26
          THR    = <THROTTLING-RANGE>                                           OPSTRT  27
          T1 = <TNOW>                                                           OPSTRT  28
          ISCHR = ISCHR + ISH                                                   Time   281
          SH    = SchVal(<HEAT-TEMP-SCH>, -999.) - THR                          Time   282
          ISCHR = ISCHR - ISH                                                   Time   283
          <START-HT> = SH                                                       OPSTRT  32
          ISCHR = ISCHR + ISH                                                   Time   284
          SC    = SchVal(<COOL-TEMP-SCH>, 999.) + THR                           Time   285
          ISCHR = ISCHR - ISH                                                   Time   286
          <START-CT> = SC                                                       OPSTRT  36
          IF((T1 .GE. SH) .OR. (HON .EQ. 0.)) GO TO 10                          OPSTRT  37
            SUPT = <MAX-SUPPLY-T>                                               OPSTRT  38
            ISTF = -1                                                           OPSTRT  39
            GO TO 20                                                            OPSTRT  40
   10     CONTINUE                                                              OPSTRT  41
            IF((T1 .LE. SC) .OR. (CON .EQ. 0.)) GO TO 70                        OPSTRT  42
            SUPT = <MIN-SUPPLY-T>                                               OPSTRT  43
            ISTF = 1                                                            OPSTRT  44
   20   CONTINUE                                                                OPSTRT  45
C             COMPUTE TRANSFER FUNCTION TERMS                                   OPSTRT  46
      X = 0.                                                                    OPSTRT  47
      Y = 0.                                                                    OPSTRT  48
      Z = 0.                                                                    OPSTRT  49
      IE = <NATTCH>                                                             OPSTRT  50
      IF(IE .LE. 0) GO TO 8                                                     OPSTRT  51
      DO 7 J=1,IE                                                               OPSTRT  52
        I1 = <IATTCH> + (J-1)*3                                                 OPSTRT  53
        NATTSP = IA(I1)                                                         OPSTRT  54
        X = X + AA(I1+1)*(TEMPS(1,NATTSP)-TEMPSL(NATTSP))                       RemPA  444
        Y = Y + AA(I1+1)*(TEMPS(2,NATTSP)-TEMPSL(NATTSP))                       RemPA  445
        Z = Z + AA(I1+1)*(TEMPS(3,NATTSP)-TEMPSL(NATTSP))                       RemPA  446
    7 CONTINUE                                                                  OPSTRT  58
    8 CONTINUE                                                                  OPSTRT  59
C                                                                               OPSTRT  60
      G0 = <G0> * <AREA>                                                        OPSTRT  61
      G1 = <G1> * <AREA>                                                        OPSTRT  62
      G2 = <G2> * <AREA>                                                        OPSTRT  63
      G3 = <G3> * <AREA>                                                        OPSTRT  64
      Q2 = <QSPAST2>+<QPPAST>-<QPAST>-<QBPAST2> + Z +                           OPSTRT  65
     $     (<CONDUCHRPAST2>+CONS(1)*<VIPAST2>) *                                OPSTRT  66
     $     (<TLOADS>-<TPAST>)                                                   OPSTRT  67
      Q1 = <QSPAST>+<QPNOW>-<QNOW>-<QBPAST> + Y +                               OPSTRT  68
     $     (<CONDUCHRPAST>+CONS(1)*<VIPAST>) *                                  OPSTRT  69
     $     (<TLOADS>-<TNOW>)                                                    OPSTRT  70
      Q0 = <QS> + <QP> +                                                        OPSTRT  71
     $     (<CONDUCHR>+CONS(1)*<CFMINF>) * <TLOADS>                             OPSTRT  72
C                                                                               OPSTRT  73
      IF(ISTF .GT. 0) GO TO 40                                                  OPSTRT  74
C     HEATING START UP                                                          OPSTRT  75
C     SET BASEBOARD HEAT TERM                                                   OPSTRT  76
        IF(<BASEBOARD-CTRL> .NE. 2) GO TO 32                                    OPSTRT  77
          Q0 = Q0 - <BASEBOARD-RATING>                                          OPSTRT  78
          GO TO 34                                                              OPSTRT  79
   32     CONTINUE                                                              OPSTRT  80
          Q0 = Q0 - <QBPAST>                                                    OPSTRT  81
   34  CONTINUE                                                                 OPSTRT  82
C     SET HEATING CFM VALUE                                                     OPSTRT  83
      CFMAX = <CFMAXH>                                                          OPSTRT  84
      IF((<MIN-CFM-SCH> .LE. 0) .OR.                                            OPSTRT  85
     $   (<THERMOSTAT-TYPE> .EQ. 3)) GO TO 35                                   OPSTRT  86
        CFMAX = SchVal(<MIN-CFM-SCH>, 1.)                                       Time   287
        IF(CFMAX .EQ. -999.0)  CFMAX = <MINCFMR>                                OPSTRT  88
        CFMAX = AMAX1(0.01, AMIN1(1.0, CFMAX))                                  OPSTRT  89
        CFMAX = CFMAX * <CFMAX>                                                 OPSTRT  90
   35 CONTINUE                                                                  OPSTRT  91
C     PREDICT FIRST HOUR TEMPERATURE                                            OPSTRT  92
      T0 = (Q0 + CONS(1)*CFMAX*(SUPT-0.5*T1) + X + <P1>*Q1 +                    OPSTRT  93
     $      <P2>*Q2 - G1*T1 - G2*<TPAST> - G3*<TPAST2>) /                       OPSTRT  94
     $      (G0 + <CONDUCHR>+CONS(1)*(<CFMINF>+0.5* CFMAX ))                    OPSTRT  95
C      COMPARE TO SET POINT, GET NEXT HOURS TEMPERATURE IF NOT                  OPSTRT  96
C      YET AT SET POINT.                                                        OPSTRT  97
        DO 30 KX=1,5                                                            OPSTRT  98
          JX = KX                                                               OPSTRT  99
          IF(T0 .GE. <START-HT>) GO TO 60                                       OPSTRT 100
          T0 = T0 + <DTHEAT>                                                    OPSTRT 101
   30   CONTINUE                                                                OPSTRT 102
        JX = JX + 1                                                             OPSTRT 103
        GO TO 60                                                                OPSTRT 104
   40   CONTINUE                                                                OPSTRT 105
C       COOLING START UP                                                        OPSTRT 106
C       COMPUTE FIRAT HOUR TEMPERATURE                                          OPSTRT 107
       T0 = (Q0 + CONS(1)*<CFMAX>*(SUPT-0.5*T1) + X + <P1>*Q1 +                 OPSTRT 108
     $      <P2>*Q2 - G1*T1 - G2*<TPAST> - G3*<TPAST2>) /                       OPSTRT 109
     $      (G0 + <CONDUCHR>+CONS(1)*(<CFMINF>+0.5*<CFMAX>))                    OPSTRT 110
C      COMPARE TO SET POINT, GET NEXT HOURS TEMPERATURE IF NOT                  OPSTRT 111
C      YET AT SET POINT.                                                        OPSTRT 112
         DO 50 KX=1,5                                                           OPSTRT 113
           JX = KX                                                              OPSTRT 114
           IF(T0 .LE. <START-CT>) GO TO 60                                      OPSTRT 115
           T0 = T0 + <DTCOOL>                                                   OPSTRT 116
   50    CONTINUE                                                               OPSTRT 117
         JX = JX + 1                                                            OPSTRT 118
   60  CONTINUE                                                                 OPSTRT 119
C      IF HOURS TO SET POINT EQUAL HOURS UNTIL FAN START                        OPSTRT 120
C      INCREASE COUNT OF ZONES REQUIRING FAN START                              OPSTRT 121
       IF(JX .GE. ISH) XXI = XXI + 1                                            OPSTRT 122
  70   CONTINUE                                                                 OPSTRT 123
  80   CONTINUE                                                                 OPSTRT 124
       ZP1 = ZP1 + NZD                                                          OPSTRT 125
   90 CONTINUE                                                                  OPSTRT 126
C     SKIP IF NOT MORE THAN HALF OF THE ZONES REQUIRE FAN START                 OPSTRT 127
      IF (XXI .LE. <HAFMLTSUM>)  THEN                                           Time   288
        FON = 0.                                                                Time   289
        GO TO 130                                                               Time   290
      ENDIF                                                                     Time   291
       FON = 1.0                                                                OPSTRT 129
       <START-FLAG> = 1                                                         OPSTRT 130
       <IHR-START> = ISCHR                                                      OPSTRT 131
       <LEARN-FLAG> = 0                                                         OPSTRT 132
C      LOOP OVER THE ZONES                                                      OPSTRT 133
       ZP1 = ISZ                                                                OPSTRT 134
       DO 120 NZ=1,NSZ                                                          OPSTRT 135
         ZP2 = <ZP2>                                                            OPSTRT 136
C        SKIP IF NOT A CONDITIONED ZONE                                         OPSTRT 137
         IF(<ZONE-TYPE> .NE. 1) GO TO 110                                       OPSTRT 138
C          IF THIS ZONE REQUIRES FAN START, SET MODE FLAG                       OPSTRT 139
C          AND INCREMENT LEARNING FLAG                                          OPSTRT 140
           <MODE-START> = 0                                                     OPSTRT 141
           IF(<TNOW> .GT. <START-CT>) <MODE-START> = 1                          OPSTRT 142
           IF(<TNOW> .LT. <START-HT>) <MODE-START> = -1                         OPSTRT 143
           IF(<MODE-START> .NE. 0)                                              OPSTRT 144
     $       <LEARN-FLAG> = <LEARN-FLAG> + 1                                    OPSTRT 145
  110    CONTINUE                                                               OPSTRT 146
         ZP1 = ZP1 + NZD                                                        OPSTRT 147
  120 CONTINUE                                                                  OPSTRT 148
  130 CONTINUE                                                                  OPSTRT 149
      IF( MSYSF(51) .EQ. 0 )    RETURN                                          OPSTRT 150
C********************** run function : OPSTRT-1 ************************        OPSTRT 151
          ISHXXX = ISH                                                          OPSTRT 152
           CALL  FINTS( MSYSF(51), 0. )                                         OPSTRT 153
C*******************************************************************            OPSTRT 154
      RETURN                                                                    OPSTRT 155
      END                                                                       OPSTRT 156
      SUBROUTINE PANEL                                                          PANEL    2
C                                                                               PANEL    3
C                            PANEL HEATING                                      PANEL    4
C                                                                               PANEL    5
C              DEVELOPED BY                                                     -130     1
C                            J. J. Hirsch & S. D. Gates                         -130     2
C                            James J. Hirsch & Associates                       -130     3
C                            Camarillo, California                              -130     4
C              BASED UPON CODE DEVELOPED BY J. J. Hirsch and                    -130     5
C                            W. F. Buhl                                         -130     6
C                            A. E. Erdem                                        -130     7
C                            Lawrence Berkeley National Laboratory              -130     8
C                            University of California                           -130     9
Copyright (c) 1997 by James J. Hirsch. All Rights Reserved. Unpublished         -130    10
c rights reserved under the Copyright Laws of the United States.                -130    11
c RESTRICTED RIGHTS NOTICE: Government use, reproduction or disclosure          -130    12
c is subject to restrictions as set forth in Rights in Data (g)(3) in           -130    13
c UC/LBL purchase order 4607010 with J.J. Hirsch & Associates.                  -130    14
C                                                                               PANEL    7
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON  /ENDUSE/ SUPPKW, HEATKW                                           HVAC27   1
      COMMON /FFUEL/ FFUEL, FurnAuxFuel, FurnAuxkW, PLRF                        /FFUEL/  2
      common  /FNSYS/  ISKIPS, MSYSF(120)                                       /FNSYS/  2
      COMMON  /HRREP / Irb, Ihrp, Lrb, Lhrp, Nrb, Nhrp, IVTLIM(3,50),           HR       5
     &                 IGRPtr, IBRPtr, IRSch, IRSchT(5),                        HR       6
     &                 NHRTyp(3), ITBUF(3), ITBUFB(3), ITBUFE(3),               HR       7
     &                 IHREOF, ICDFLG                                           HR       8
      COMMON  /MISCD / TEMPS(4,9999),CONS(5),TEMPSL(9999),                      -048a   10
     1                 BLDGQH,BLDGQC,BLDGQL,BLDGP,BPMULT,                       /MISCD/  3
     $                 DBTMIN,DBTMAX,WMIN,WMAX,NSPZ(9999),                      -048a   11
     3                 DQ, DTP, DTR, DTS, FPI, PLRCC , POM, TC2, TDM,           /MISCD/  5
     4                 TRA,WCOL,WCOLM,WMM,YPI,KWBTU,BTUKW,UNFILD,Unusedm        RemPA   45
      REAL             KWBTU                                                    /MISCD/  7
      COMMON  /LOOPKY/ CHW, PIPE2, loop3, HW, loop5, STM, WLHP, DHW,            -131     1
     &                 CW, Deleted, PIPE2h, WLHPh, COGEN, NoType,               -131     2
     &                 FIXED, OA, SCH, LOAD,  ZONE, OUTDOOR,                    -131     3
     &                 STANDBY, DEMAND, SNAP, SCHEDULED, SubhourDemand,         -033     1
     &                 CONSTANT, VARIABLE, ModeText(4),                         -131     5
     &                 OFFMODE, FLOATING, HEATMODE, COOLMODE,                   -131     6
     &                 AtCoils, EnterLoop, AtPump,                              -131     7
     &                 INDOORS, OUTDOORS, TUNNEL, UNDERGROUND,                  -131     8
     &                 PRIMARY, SECONDARY,                                      -131     9
     &                 DIRECT, HX,                                              -131    10
     &                 WATER, ETHYLENE, PROPYLENE, BRINE                        -131    11
      INTEGER          CHW, PIPE2, loop3, HW, loop5, STM, WLHP, DHW,            -131    12
     &                 CW, Deleted, PIPE2h, WLHPh, COGEN, NoType,               -131    13
     &                 FIXED, OA, SCH, LOAD,  ZONE, OUTDOOR,                    -131    14
     &                 STANDBY, DEMAND, SNAP, SCHEDULED, SubhourDemand,         -033     2
     &                 CONSTANT, VARIABLE,                                      -131    16
     &                 OFFMODE, FLOATING, HEATMODE, COOLMODE,                   -131    17
     &                 AtCoils, EnterLoop, AtPump,                              -131    18
     &                 INDOORS, OUTDOORS, TUNNEL, UNDERGROUND,                  -131    19
     &                 PRIMARY, SECONDARY,                                      -131    20
     &                 DIRECT, HX,                                              -131    21
     &                 WATER, ETHYLENE, PROPYLENE, BRINE                        -131    22
      COMMON  /PLANTD/ QHMP,TMP,CFMP,QHPP,CFMPP,                                /PLANTD/ 2
     1                 QHZP,TZP,DHWPKW,DHWPLF,DHWQRP                            RemPA   46
      REAL             PLANTD(10)                                               RemPA   47
      EQUIVALENCE      (PLANTD(1), QHMP)                                        RemPA   48
      COMMON  /PTRPLT/ Ipm,Ilp,Ich,Ibl,Idw,Itw,Ipv,Ign,Itk,Ihx,                 PV       1
     &                 Iec,Ilm,Iem,Ifm,Ism,Icm,Imm,Imc,Igl,Isp2,                XFC2     1
     &                 Ispare(5),  Ipe,                                         HVAC19   3
     &                 Npm,Nlp,Nch,Nbl,Ndw,Ntw,Npv,Ngn,Ntk,Nhx,                 PV       2
     &                 Nec,Nlm,Nem,Nfm,Nsm,Ncm,Nmm,Nmc,Ngl,Nsp2,                XFC2     2
     &                 Nspare(5),  Npe,                                         HVAC19   6
     &                 Lpm,Llp,Lch,Lbl,Ldw,Ltw,Lpv,Lgn,Ltk,Lhx,                 PV       3
     &                 Lec,Llm,Lem,Lfm,Lsm,Lcm,Lmm,Lmc,Lgl,Lsp2,                XFC2     3
     &                 Lspare(5),  Lpe,                                         HVAC19   9
     &                 Jpm,Jlp,Jch,Jbl,Jdw,Jtw,Jpv,Jgn,Jtk,Jhx,                 PV       4
     &                 Jec,Jlm,Jem,Jfm,Jsm,Jcm,    Jmc,Jgl,                     HVAC19  11
     &                 Jpe, kpr, NumMeters, NumIntHX                            XFC1     1
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      COMMON  /SYSTD / TH,TC,TM,TR,QH,QC,QHZ,QCZ,QHB,QHP,QHUM,                  /SYSTD/  2
     1                 QDHUM,TCMIN,THMAX,QLSUM,QPSUM,CFM,CFMH,CFMC,             /SYSTD/  3
     2                 RCFM,ECFM,CINF,FON,HON,CON,BON,SCONS(3),PH,PC,           /SYSTD/  4
     3                 SKW,FANKW,unused1,WR,WM,WCOIL,WW,PO,D,                   -046f    1
     4                 FTEMP,TCR,QHR,RfanPumpKW,SGAS,SKWQH,SKWQC,QCLAT,         -131    23
     5                 SFKW,RFKW,FONNGT,WSURF,RWalkinQ,TSURF,TRh,               -131    24
     6                 CBF,CBF1,CBF2,EON,PLRCFM,PLRC,PLRH,QCM1,                 /SYSTD/  8
     7                 QCM2,QHM1,EIRM1,EIRM2,EIR,OFKW,QCT,QCS,                  /SYSTD/  9
     8                 WRMAX,WRMIN,CFMRAT,QdistG,QdistL,RON,QHT,                /SYSTD/ 10
     9                 TPOMIN,POMIN,QHSUP,QRSENS,QRLAT,QRREC,QRREJ,             /SYSTD/ 11
     1                 RCOMKW,RDEFKW,RAUXKW,ECFMP,CFMIN,CINFP,DT,DW,            /SYSTD/ 12
     2                 EWB,IC,NATTSP,Q,RETR,SLOAD,QLSUMP,T,TCHUM,TEND,          /SYSTD/ 13
     3                 TS,hgbmin,HPDefE,EconoOnly,TDuctEnv,                     -044e1   1
     4                 QCUNMT,CapRh,CapRph,CapRc                                HVAC25   3
      REAL             SYSTD(113)                                               HVAC19  13
      EQUIVALENCE      (SYSTD(1),TH)                                            RemPA   65
      COMMON  /TIME  / IDOY, IYR, IMO, IDAY, IHR,                               Time     4
     &                 ISCMO, ISCDAY, ISCHR, IDOW, ISCDOW, iDSdates(6),         -044e5   1
     &                 iTimeFlg, iDSFlg, iDDFlg, InitialFlg, LeapYr,            Time     6
     &                 CLOCK(10), MONDSC(13), MONLEN(12), MONSDA(12)            HR      12
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
      COMMON  /ZONED / EXCFM,FH,FC,CFMZ,QHBZ,QOVER,THZ,TCZ,ERMAX,ERMIN,         /ZONED/  2
     1                 TRY,FTD,CORINT,G0,G1,G2,G3,SIGMAG,TL,ZQHR,TAVE,          /ZONED/  3
     2                 ZQH,ZQC,FCHPS(15),ACFM,ZKW,TCMINZ,THMAXZ,                /ZONED/  4
     3                 ERMAXM,ERMINM,THR,CSSCND,CSSVEC,HENOW,QGWIN,             /ZONED/  5
     4                 QSNABT,QGOPWL,QGVEC,CFMCVT,SSFPT,CFMVNT,ZFANKW,          /ZONED/  6
     5                 ZKWCBT,ZKWHBT,ZCapRbbrd, XC,ZC,XH,ZH                     -044e2   7
      REAL ZONED(63)                                                            -044e2   8
      EQUIVALENCE (ZONED(1),EXCFM)                                              /ZONED/  9
c                                                                               HVAC1  459
c              save heating schedule value                                      HVAC1  460
      SCHh = HON                                                                HVAC1  461
C              SET ZP1 TO POINT TO THE FIRST ZONE                               PANEL   23
      ZP1    = ISZ                                                              PANEL   24
C                                                                               PANEL   25
C              LOOP THROUGH THE ZONES                                           PANEL   26
C                                                                               PANEL   27
      DO 10 NZ = 1,NSZ                                                          PANEL   28
C              ZERO THE ZONE DATA COMMON BLOCK                                  PANEL   29
      DO 111 I=1,63                                                             -044e2  63
  111 ZONED(I) = 0.0                                                            PANEL   31
      ZP2    = <ZP2>                                                            PANEL   32
c              pointer to attached circulation loop                             HVAC1  462
      JLP    = <HW-LOOPZ>                                                       HVAC1  463
c              available loop capacity ratio                                    HVAC1  464
      ZCapRh = <lp;HCAP_RATIO>                                                  HVAC16 104
c              Zonal level heating.  If the loop not actively heating,          HVAC1  466
c              then zone heat must also be off.                                 HVAC1  467
      IF (<lp;CTRL_MODE> .EQ. HEATMODE)  THEN                                   HVAC16 105
c              loop is heating, but system schedule may be off                  HVAC1  469
        HON = SCHh                                                              HVAC1  470
      ELSE                                                                      HVAC1  471
        HON = 0.                                                                HVAC1  472
      ENDIF                                                                     HVAC1  473
c              if heating is on the floor panel will be on.  Set                HVAC1  474
c              fan flag so that TEMDEV will allow active heating                HVAC1  475
      FON    = HON                                                              HVAC1  476
      <ERMAX> = 0.0                                                             PANEL   33
      <ERMIN> = <ERMIND> * ZCapRh                                               HVAC1  477
C              PICKK UP THE ZONE MULTIPLIER                                     PANEL   35
      ZMULT  = <MULTIPLIER>                                                     PANEL   36
C              CALL THE ROUTINE TO CALC ZONE TEMP AND LOAD                      PANEL   37
      CALL TEMDEV(0)                                                            PANEL   38
C              IF HEAT IS OFF OR THIS IS UNCOND ZONE SKIP                       PANEL   39
      IF (<ZONE-TYPE>.NE.1) GO TO 26                                            PANEL   40
      IF (HON*ZCapRh .EQ. 0.)  GOTO 20                                          HVAC12 128
C              HEAT LOAD IS ZONE LOAD PLUS PANEL LOSSES                         PANEL   42
      ZQH    = AMIN1(0.,<QNOW>*(1.+<PANEL-LOSS-RATIO>))                         PANEL   43
C              INCREMENT TOTAL SYSTEM HEATING LOAD                              PANEL   44
      ZQH    = ZQH*HON                                                          PANEL   45
      QHZ    = QHZ + ZQH*ZMULT                                                  PANEL   46
   20 CONTINUE                                                                  PANEL   47
C              IF BASEBOARDS ARE GAS OR OIL                                     PANEL   53
      IF((<BASEBOARD-SOURCE>.EQ.2).OR.(<BASEBOARD-SOURCE>.EQ.3))  THEN          HVAC6  438
        CALL FURNAC(QHBZ,<BASEBOARD-RATING>,<BASEBOARD-SOURCE>,ZMULT)           HVAC6  439
        JEM       = <AUX-E-MZ>                                                  HVAC6  440
        <AUX-EM>  = <AUX-EM> + FurnAuxkW                                        HVAC6  441
        JFM       = <HEAT-F-MZ>                                                 HVAC6  442
        <HEAT-FM> = <HEAT-FM> - FFUEL                                           HVAC6  443
        <AUX-FM>  = <AUX-FM>  + FurnAuxFuel                                     HVAC6  444
      ENDIF                                                                     HVAC6  445
C              IF BASEBOARDS ARE ELECTRIC                                       PANEL   57
      IF (<BASEBOARD-SOURCE>.EQ.1)  THEN                                        PANEL   58
        X      = QHBZ*KWBTU                                                     PANEL   59
        ZKW    = ZKW    - X                                                     PANEL   60
        SKWQH  = SKWQH  - X*ZMULT                                               PANEL   61
        JEM       = <HEAT-E-MZ>                                                 HVAC6  446
        <HEAT-EM> = <HEAT-EM> - X*ZMULT                                         HVAC6  447
      ENDIF                                                                     PANEL   63
C              IF ZONE COILS ARE ELECTRIC                                       PANEL   64
      IF (<HEAT-SOURCE>.EQ.1)  THEN                                             PANEL   65
        X      = ZQH*KWBTU                                                      PANEL   66
        ZKW    = ZKW    - X                                                     PANEL   67
        SKWQH  = SKWQH  - X*ZMULT                                               PANEL   68
        JEM       = <HEAT-E-MZ>                                                 HVAC6  448
        <HEAT-EM> = <HEAT-EM> - X*ZMULT                                         HVAC6  449
      ENDIF                                                                     PANEL   70
      IF((<HEAT-SOURCE>.EQ.2).OR.(<HEAT-SOURCE>.EQ.3))  THEN                    HVAC6  450
        CALL  FURNAC(ZQH,<ERMIND>,<HEAT-SOURCE>,ZMULT)                          HVAC6  451
        JEM       = <AUX-E-MZ>                                                  HVAC6  452
        <AUX-EM>  = <AUX-EM> + FurnAuxkW                                        HVAC6  453
        JFM       = <HEAT-F-MZ>                                                 HVAC6  454
        <HEAT-FM> = <HEAT-FM> - FFUEL                                           HVAC6  455
        <AUX-FM>  = <AUX-FM>  + FurnAuxFuel                                     HVAC6  456
      ENDIF                                                                     HVAC6  457
   25 QLSUM  = QLSUM + <QL>*ZMULT                                               PANEL   73
C              INCREMENT TOTAL SYSTEM PLENUM LOAD                               PANEL   74
      QPSUM  = QPSUM + <QP>*ZMULT                                               PANEL   75
      CINF = CINF + <CFMINF>                                                    PANEL   76
   26 CONTINUE                                                                  PANEL   77
      ZKW = ZKW + <ZKW>                                                         PANEL   78
      <SKW> = <SKW> + ZKW*ZMULT                                                 PANEL   79
C********************** run function : PANEL-0Z ********************            PANEL   80
      IF( MSYSF(52) .NE. 0 )   CALL  FINTS( MSYSF(52), 0. )                     PANEL   81
C*******************************************************************            PANEL   82
c                                                                               HVAC1  478
c              save zonal coil flows and loads for circulation loop calcs       HVAC1  479
      <COIL_EDBZ>   = TAVE                                                      HVAC1  480
      <COIL_QZ>     = ZQH                                                       HVAC1  481
      <COIL_CYCLEZ> = 1.                                                        HVAC1  482
      <BBRD_EDB>    = TAVE                                                      HVAC1  483
      <BBRD_Q>      = QHBZ                                                      HVAC1  484
C              SUM END-USE VARIABLES FOR THIS ZONE                              PANEL   83
C              IF REP-BLOCK BUF OR AN H-R WAS ON FILL BUF                       PANEL   85
      IF((<IZNBUFP>.NE.0).AND.(IRSCH.NE.0))  CALL USERZR( ZP1,ZP2 )             PANEL   86
      IF(IRPZON .NE. 0)  CALL RPTZON                                            PANEL   87
C              INCREMENT ZP1 TO POINT TO NEXT ZONE                              PANEL   88
      ZP1    = ZP1 + NZD                                                        PANEL   89
   10 CONTINUE                                                                  PANEL   90
c                                                                               HVAC1  485
c              restore heating and cooling schedule values                      HVAC1  486
      HON = SCHh                                                                HVAC1  487
c                                                                               HVAC1  488
      IF(<HEAT-SOURCE> .LE. 0)  <QH> = QHZ                                      PANEL  103
C********************** run function : PANEL-1 *********************            PANEL  104
      IF( MSYSF(53) .NE. 0 )   CALL  FINTS( MSYSF(53), 1. )                     PANEL  105
C*******************************************************************            PANEL  106
      RETURN                                                                    PANEL  107
      END                                                                       PANEL  108
      SUBROUTINE PeakFanDist(Mode, Demand,DemandMax, Jem)                       PKFB     2
c                                                                               PKFB     3
c              Calculate the distribution of fan power over the hour.           PKFB     4
c              Distribution is in 5-minute bins.                                PKFB     5
c                                                                               PKFB     6
c              Mode     1  Use supply fan profile                               PKFB     7
c                       2  Use hot deck fan profile                             PKFB     8
c                       3  Use retrun fan profile                               PKFB     9
c              Demand      Load to be distributed                               PKFB    10
c              DemandMax   Maximum possible demand                              PKFB    11
c              Jem         Pointer to electric meter                            PKFB    12
c                                                                               PKFB    13
C              DEVELOPED BY                                                     -130    15
C                            J. J. Hirsch & S. D. Gates                         -130    16
C                            James J. Hirsch & Associates                       -130    17
C                            Camarillo, California                              -130    18
C                                                                               -130    19
Copyright (c) 1997 by James J. Hirsch. All Rights Reserved. Unpublished         -130    20
c rights reserved under the Copyright Laws of the United States.                -130    21
c RESTRICTED RIGHTS NOTICE: Government use, reproduction or disclosure          -130    22
c is subject to restrictions as set forth in Rights in Data (g)(3) in           -130    23
c UC/LBL purchase order 4607010 with J.J. Hirsch & Associates.                  -130    24
C                                                                               -130    25
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON  /BIN5  / Bin5Cool(12), Bin5Heat(12), Bin5CFM(12),                 /BIN5/   2
     &                 Bin5PLR(12), TCstart, TCend, THstart, THend              /BIN5/   3
      DIMENSION        Bin5Bins(52)                                             /BIN5/   4
      EQUIVALENCE      (Bin5Bins(1), Bin5Cool(1))                               /BIN5/   5
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                 IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                        /FILES/  3
     2               , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                   /FILES/  4
     3                 IHRREP(3), IHRPAS(2)                                     /FILES/  5
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      COMMON  /TIME  / IDOY, IYR, IMO, IDAY, IHR,                               Time     4
     &                 ISCMO, ISCDAY, ISCHR, IDOW, ISCDOW, iDSdates(6),         -044e5   1
     &                 iTimeFlg, iDSFlg, iDDFlg, InitialFlg, LeapYr,            Time     6
     &                 CLOCK(10), MONDSC(13), MONLEN(12), MONSDA(12)            HR      12
c                                                                               PKFB    20
      REAL ElecBins(12)                                                         PKFB    21
c                                                                               PKFB    22
      IF (Demand .EQ. 0.)  RETURN                                               PKFB    23
c                                                                               PKFB    24
c              5-minute cfm distribution was calculated in routine              PKFB    25
c              PeakZoneBins for each hour, and stored in Bin5CFM().             PKFB    26
c                                                                               PKFB    27
c              Maximum 5-minute demand                                          PKFB    28
      IF (DemandMax .GT. 0.)  THEN                                              PKFB    29
        DemandMax5 = DemandMax / 12.                                            PKFB    30
      ELSE                                                                      PKFB    31
        DemandMax5 = 1.E10                                                      PKFB    32
      ENDIF                                                                     PKFB    33
c              5-minute demand that exceeds physical limit, carried             PKFB    34
c              to adjacent bin                                                  PKFB    35
      Carry5 = 0.                                                               PKFB    36
c                                                                               PKFB    37
      SELECT CASE (Mode)                                                        PKFB    38
        CASE (1)             ! Cold deck fan                                    PKFB    39
c              Total cfm in bins                                                PKFB    40
          BinTotal = 0.                                                         PKFB    41
          DO  IP=1,12                                                           PKFB    42
            BinTotal = BinTotal + Bin5CFM(IP)                                   PKFB    43
          ENDDO                                                                 PKFB    44
          IF (BinTotal .GT. 0.)  THEN                                           PKFB    45
c              This should normally be the case                                 PKFB    46
            Prorate = 1.0 / BinTotal                                            PKFB    47
            DO  IP=1,12                                                         PKFB    48
              Demand5         = Demand * Bin5CFM(IP)*Prorate + Carry5           PKFB    49
c              demand cannot exceed physical limit                              PKFB    50
              Carry5          = MAX(0., Demand5 - DemandMax5)                   PKFB    51
              Demand5         = Demand5 - Carry5                                PKFB    52
              <em;5-MIN_BINS> = <em;5-MIN_BINS> + Demand5                       PKFB    53
              ElecBins(IP)    = Demand5                                         PKFB    54
            ENDDO                                                               PKFB    55
          ELSE                                                                  PKFB    56
c              Weird case for 0 zonal cfm                                       PKFB    57
            Prorate = 1./12.                                                    PKFB    58
            DO  IP=1,12                                                         PKFB    59
              <em;5-MIN_BINS> = <em;5-MIN_BINS> + Demand*Prorate                PKFB    60
            ENDDO                                                               PKFB    61
          ENDIF              ! BinTotal                                         PKFB    62
        CASE (2)             ! Hot deck fan                                     PKFB    63
c              Hot deck fan currently uses same profile as supply               -131   225
c              Modify to be different when dual-fan peak distribution           -131   226
c              is implemented                                                   -131   227
c              Total cfm in bins                                                -131   228
          BinTotal = 0.                                                         -131   229
          DO  IP=1,12                                                           -131   230
            BinTotal = BinTotal + Bin5CFM(IP)                                   -131   231
          ENDDO                                                                 -131   232
          IF (BinTotal .GT. 0.)  THEN                                           -131   233
c              This should normally be the case                                 -131   234
            Prorate = 1.0 / BinTotal                                            -131   235
            DO  IP=1,12                                                         -131   236
              Demand5         = Demand * Bin5CFM(IP)*Prorate + Carry5           -131   237
c              demand cannot exceed physical limit                              -131   238
              Carry5          = MAX(0., Demand5 - DemandMax5)                   -131   239
              Demand5         = Demand5 - Carry5                                -131   240
              <em;5-MIN_BINS> = <em;5-MIN_BINS> + Demand5                       -131   241
              ElecBins(IP)    = Demand5                                         -131   242
            ENDDO                                                               -131   243
          ELSE                                                                  -131   244
c              Weird case for 0 zonal cfm                                       -131   245
c ??           Note that dual-duct systems currently do not calculate           -131   246
c              zonal airflow profiles, and will always jump to here.            -131   247
            Prorate = 1./12.                                                    -131   248
            DO  IP=1,12                                                         -131   249
              <em;5-MIN_BINS> = <em;5-MIN_BINS> + Demand*Prorate                -131   250
            ENDDO                                                               -131   251
          ENDIF                                                                 -131   252
        CASE (3)             ! Return fan                                       PKFB    64
c              Return fan currently uses same profile as supply                 PKFB    65
c              Modify to be different when dual-fan peak distribution           PKFB    66
c              is implemented                                                   PKFB    67
c              Total cfm in bins                                                PKFB    68
          BinTotal = 0.                                                         PKFB    69
          DO  IP=1,12                                                           PKFB    70
            BinTotal = BinTotal + Bin5CFM(IP)                                   PKFB    71
          ENDDO                                                                 PKFB    72
          IF (BinTotal .GT. 0.)  THEN                                           PKFB    73
c              This should normally be the case                                 PKFB    74
            Prorate = 1.0 / BinTotal                                            PKFB    75
            DO  IP=1,12                                                         PKFB    76
              Demand5         = Demand * Bin5CFM(IP)*Prorate + Carry5           PKFB    77
c              demand cannot exceed physical limit                              PKFB    78
              Carry5          = MAX(0., Demand5 - DemandMax5)                   PKFB    79
              Demand5         = Demand5 - Carry5                                PKFB    80
              <em;5-MIN_BINS> = <em;5-MIN_BINS> + Demand5                       PKFB    81
              ElecBins(IP)    = Demand5                                         PKFB    82
            ENDDO                                                               PKFB    83
          ELSE                                                                  PKFB    84
c              Weird case for 0 zonal cfm                                       PKFB    85
            Prorate = 1./12.                                                    PKFB    86
            DO  IP=1,12                                                         PKFB    87
              <em;5-MIN_BINS> = <em;5-MIN_BINS> + Demand*Prorate                PKFB    88
            ENDDO                                                               PKFB    89
          ENDIF              ! BinTotal                                         PKFB    90
      END SELECT             ! Mode                                             PKFB    91
c                                                                               PKFB    92
c              if demand carried from last bin, allocate to                     PKFB    93
c              nextmost earlier bin that can accept it                          PKFB    94
      IF (Carry5/Demand .GT. 0.00001)  THEN                                     PKFB    95
        DO  IP=11,1,-1                                                          PKFB    96
          IF (ElecBins(IP) .LT. DemandMax5)  THEN                               PKFB    97
            Additional      = MIN(Carry5, DemandMax5-ElecBins(IP))              PKFB    98
            Carry5          = Carry5 - Additional                               PKFB    99
            <em;5-MIN_BINS> = <em;5-MIN_BINS> + Additional                      PKFB   100
          ENDIF                                                                 PKFB   101
          IF (Carry5 .EQ. 0.)  EXIT                                             PKFB   102
        ENDDO                                                                   PKFB   103
        IF (Carry5/Demand .GT. 0.00001)  THEN                                   PKFB   104
          CALL MSGSIM(-2,II,II,II,II)                                           PKFB   105
          WRITE (IOUTPT,9100)  (<SYSTEM-NAME>,II=1,8),                          PKFB   106
     &                         IMO, IDAY, IHR, Demand, Carry5                   PKFB   107
        ENDIF                                                                   PKFB   108
      ENDIF                                                                     PKFB   109
c                                                                               PKFB   110
c              Total peakatized demand                                          PKFB   111
      IP = 13                                                                   PKFB   112
      <em;5-MIN_BINS> = <em;5-MIN_BINS> + Demand                                PKFB   113
c              increment electric meter end-use category                        PKFB   114
      <em;VENT> = <em;VENT> + Demand                                            PKFB   115
c                                                                               PKFB   116
      RETURN                                                                    PKFB   117
c                                                                               PKFB   118
c              Message formats                                                  PKFB   119
 9100 FORMAT(14X,'System: ',8A4,' did not successfully'                /        PKFB   120
     &       14X,'allocate all fan energy to the 5-minute bins.'       /        PKFB   121
     &       14X,'Mon/Day/Hour:',3I3,' Fan energy:',F6.1               /        PKFB   122
     $       14X,'Unallocated:',F6.3                                   )        PKFB   123
c                                                                               PKFB   124
      END                                                                       PKFB   125
      SUBROUTINE PeakSupplyTemps(Mode, TCmin,TCmixed, THmax,THmixed)            PKSUPT   2
c                                                                               PKSUPT   3
c              Calculates the starting and ending supply                        PKSUPT   4
c              temperatures for a system, where these temperatures              PKSUPT   5
c              are controlled by a specific zone                                PKSUPT   6
c                                                                               PKSUPT   7
c              Mode = 1  Single-duct system                                     PKSUPT   8
c              Mode = 2  Dual-duct system                                       PKSUPT   9
c                                                                               PKSUPT  10
C              DEVELOPED BY                                                     -130    15
C                            J. J. Hirsch & S. D. Gates                         -130    16
C                            James J. Hirsch & Associates                       -130    17
C                            Camarillo, California                              -130    18
C                                                                               -130    19
Copyright (c) 1997 by James J. Hirsch. All Rights Reserved. Unpublished         -130    20
c rights reserved under the Copyright Laws of the United States.                -130    21
c RESTRICTED RIGHTS NOTICE: Government use, reproduction or disclosure          -130    22
c is subject to restrictions as set forth in Rights in Data (g)(3) in           -130    23
c UC/LBL purchase order 4607010 with J.J. Hirsch & Associates.                  -130    24
C                                                                               -130    25
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON  /BIN5  / Bin5Cool(12), Bin5Heat(12), Bin5CFM(12),                 /BIN5/   2
     &                 Bin5PLR(12), TCstart, TCend, THstart, THend              /BIN5/   3
      DIMENSION        Bin5Bins(52)                                             /BIN5/   4
      EQUIVALENCE      (Bin5Bins(1), Bin5Cool(1))                               /BIN5/   5
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
c                                                                               PKSUPT  15
c              temporarily do something useless with the mode flag              PKSUPT  16
c              to suppress compiler warning                                     PKSUPT  17
      IF (Mode .EQ. 2)  Mode = 2                                                PKSUPT  18
c                                                                               PKSUPT  19
c              Start of hour conditions - see if heating, cooling,              PKSUPT  20
c              or floating                                                      PKSUPT  21
      THR = <THROTTLING-RANGE>                                                  PKSUPT  22
      IF (<TPAST> .LT. <THZ>+THR)  THEN                                         PKSUPT  23
c              Heating mode - load fraction                                     PKSUPT  24
        PLR     = MIN(1., (<THZ>-<TPAST>)/(THR*2.0) + 0.5)                      PKSUPT  25
        TCstart = THmax*PLR + THmixed*(1.-PLR)                                  PKSUPT  26
      ELSEIF (<TPAST> .GT. <TCZ>-THR)  THEN                                     PKSUPT  27
c              Cooling mode                                                     PKSUPT  28
        PLR     = MIN(1., (<TPAST>-<TCZ>)/(THR*2.0) + 0.5)                      PKSUPT  29
        TCstart = TCmin*PLR + TCmixed*(1.-PLR)                                  PKSUPT  30
      ELSE                                                                      PKSUPT  31
c              Floating                                                         PKSUPT  32
        TCstart = TCmixed                                                       PKSUPT  33
      ENDIF                                                                     PKSUPT  34
c                                                                               PKSUPT  35
c              Repeat for end of hour                                           PKSUPT  36
      IF (<TNOW> .LT. <THZ>+THR)  THEN                                          PKSUPT  37
c              Heating mode - load fraction                                     PKSUPT  38
        PLR   = MIN(1., (<THZ>-<TNOW>)/(THR*2.0) + 0.5)                         PKSUPT  39
        TCend = THmax*PLR + THmixed*(1.-PLR)                                    PKSUPT  40
      ELSEIF (<TNOW> .GT. <TCZ>-THR)  THEN                                      PKSUPT  41
c              Cooling mode                                                     PKSUPT  42
        PLR   = MIN(1., (<TNOW>-<TCZ>)/(THR*2.0) + 0.5)                         PKSUPT  43
        TCend = TCmin*PLR + TCmixed*(1.-PLR)                                    PKSUPT  44
      ELSE                                                                      PKSUPT  45
c              Floating                                                         PKSUPT  46
        TCstart = TCmixed                                                       PKSUPT  47
      ENDIF                                                                     PKSUPT  48
c                                                                               PKSUPT  49
      RETURN                                                                    PKSUPT  50
      END                                                                       PKSUPT  51
      SUBROUTINE PeakSysBins(Hmix, HcoilC, HcoilH)                              PKSYSB   2
c                                                                               PKSYSB   3
c              Calculates the distribution of central air handler               PKSYSB   4
c              loads over the hour.  Distribution is in 5-minute                PKSYSB   5
c              bins.                                                            PKSYSB   6
c                                                                               PKSYSB   7
c              Hmix    Mixed-air enthalpy                                       PKSYSB   8
c              HcoilC  Coil supply enthalpy, single duct or cold deck           PKSYSB   9
c                      of dual-duct                                             PKSYSB  10
c              HcoilH  Heating coil supply enthalpy, dual duct                  PKSYSB  11
c                                                                               PKSYSB  12
C              DEVELOPED BY                                                     -130    15
C                            J. J. Hirsch & S. D. Gates                         -130    16
C                            James J. Hirsch & Associates                       -130    17
C                            Camarillo, California                              -130    18
C                                                                               -130    19
Copyright (c) 1997 by James J. Hirsch. All Rights Reserved. Unpublished         -130    20
c rights reserved under the Copyright Laws of the United States.                -130    21
c RESTRICTED RIGHTS NOTICE: Government use, reproduction or disclosure          -130    22
c is subject to restrictions as set forth in Rights in Data (g)(3) in           -130    23
c UC/LBL purchase order 4607010 with J.J. Hirsch & Associates.                  -130    24
C                                                                               -130    25
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON  /BIN5  / Bin5Cool(12), Bin5Heat(12), Bin5CFM(12),                 /BIN5/   2
     &                 Bin5PLR(12), TCstart, TCend, THstart, THend              /BIN5/   3
      DIMENSION        Bin5Bins(52)                                             /BIN5/   4
      EQUIVALENCE      (Bin5Bins(1), Bin5Cool(1))                               /BIN5/   5
C              SYSTEM LEVEL VARIABLES FOR DESICCANT SYSTEMS, BOTH TOTAL         /DSYSTD/ 2
C              AND INTEGRATED                                                   /DSYSTD/ 3
      COMMON  /DSYSTD/  SCGAS, QREG, WBR, WB8, T8, W8, WB9, T9, W9, EFF,        /DSYSTD/ 4
     1                  DTON, DMODE(7), ERMAX4, ERMAX5, ERMAX6, OPMODE,         /DSYSTD/ 5
     2                  DBOA,WOA,DGAS,DKW,TCONDd,QCDTOT,QCDS,QCDL,              /DSYSTD/ 6
     3                  POA,DFANKW,RFANKW,DMOTKW,EVKW,QCEVT,QCEVS,              /DSYSTD/ 7
     4                  QCEVL,TCMNEV                                            /DSYSTD/ 8
      REAL DSYSTD(39)                                                           /DSYSTD/ 9
      EQUIVALENCE (DSYSTD(1), SCGAS)                                            /DSYSTD/10
      COMMON  /MISCD / TEMPS(4,9999),CONS(5),TEMPSL(9999),                      -048a   10
     1                 BLDGQH,BLDGQC,BLDGQL,BLDGP,BPMULT,                       /MISCD/  3
     $                 DBTMIN,DBTMAX,WMIN,WMAX,NSPZ(9999),                      -048a   11
     3                 DQ, DTP, DTR, DTS, FPI, PLRCC , POM, TC2, TDM,           /MISCD/  5
     4                 TRA,WCOL,WCOLM,WMM,YPI,KWBTU,BTUKW,UNFILD,Unusedm        RemPA   45
      REAL             KWBTU                                                    /MISCD/  7
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      COMMON /SHP   / QCRUN,QCLOAD,QCGAS,QCAUX,QCGSLD,QCGSUP,                   /SHP/    2
     1                QCWAS,QCWASU,QCGSAV,QCFAN,                                /SHP/    3
     2                QHRUN,QHLOAD,QHGAS,QHAUX,QHGSLD,QHGSUP,                   /SHP/    4
     3                QHWAS,QHWASU,QHGDFR,QHFAN,          CUR(25),              /SHP/    5
     4                GSAV1,GASV2,PCH,ISZCZ,GCAP(2),GEDB,QHDFRG,                -044c1   1
     5                GRPM,PLRSUP,CFMCYC,CLPLR,CFMVVT,QHZHP,PCCEDB,             /SHP/    7
     6                IHPREP,IHPOUT,IHPHRR,IHPHRN,IRST,IREN                     /SHP/    8
      COMMON /SHPZ  / QCRUNZ,QCLOADZ,QCGASZ,QCAUXZ,QCGSLDZ,QCGSUPZ,             /SHP/    9
     1                QCWASZ,QCWASUZ,QCGSAVZ,QCFANZ,                            /SHP/   10
     2                QHRUNZ,QHLOADZ,QHGASZ,QHAUXZ,QHGSLDZ,QHGSUPZ,             /SHP/   11
     3                QHWASZ,QHWASUZ,QHGDFRZ,QHFANZ                             /SHP/   12
      DIMENSION       SHP(60),SHPZ(20)                                          /SHP/   13
      EQUIVALENCE     (SHP,QCRUN),(SHPZ,QCRUNZ)                                 /SHP/   14
     1               ,(DFM1,CUR(18)),(DFM2,CUR(19)),(DFM3,CUR(20))              /SHP/   15
      COMMON  /SYSTD / TH,TC,TM,TR,QH,QC,QHZ,QCZ,QHB,QHP,QHUM,                  /SYSTD/  2
     1                 QDHUM,TCMIN,THMAX,QLSUM,QPSUM,CFM,CFMH,CFMC,             /SYSTD/  3
     2                 RCFM,ECFM,CINF,FON,HON,CON,BON,SCONS(3),PH,PC,           /SYSTD/  4
     3                 SKW,FANKW,unused1,WR,WM,WCOIL,WW,PO,D,                   -046f    1
     4                 FTEMP,TCR,QHR,RfanPumpKW,SGAS,SKWQH,SKWQC,QCLAT,         -131    23
     5                 SFKW,RFKW,FONNGT,WSURF,RWalkinQ,TSURF,TRh,               -131    24
     6                 CBF,CBF1,CBF2,EON,PLRCFM,PLRC,PLRH,QCM1,                 /SYSTD/  8
     7                 QCM2,QHM1,EIRM1,EIRM2,EIR,OFKW,QCT,QCS,                  /SYSTD/  9
     8                 WRMAX,WRMIN,CFMRAT,QdistG,QdistL,RON,QHT,                /SYSTD/ 10
     9                 TPOMIN,POMIN,QHSUP,QRSENS,QRLAT,QRREC,QRREJ,             /SYSTD/ 11
     1                 RCOMKW,RDEFKW,RAUXKW,ECFMP,CFMIN,CINFP,DT,DW,            /SYSTD/ 12
     2                 EWB,IC,NATTSP,Q,RETR,SLOAD,QLSUMP,T,TCHUM,TEND,          /SYSTD/ 13
     3                 TS,hgbmin,HPDefE,EconoOnly,TDuctEnv,                     -044e1   1
     4                 QCUNMT,CapRh,CapRph,CapRc                                HVAC25   3
      REAL             SYSTD(113)                                               HVAC19  13
      EQUIVALENCE      (SYSTD(1),TH)                                            RemPA   65
c                                                                               PKSYSB  21
      DATA Uniform /0.08333333333/                                              PKSYSB  22
c                                                                               PKSYSB  23
      H(DB,W) = 0.24*DB + (1061.0+0.444*DB)*W                                   H        2
c                                                                               PKSYSB  25
c              Skip if no heating or cooling coil loads                         PKSYSB  26
      IF (QH .EQ. 0.  .AND.  QC .EQ. 0.)  RETURN                                PKSYSB  27
c                                                                               PKSYSB  28
c              Include the effect of outside air on the load                    PKSYSB  29
c              distribution.  Assume OA load constant over the hour,            PKSYSB  30
c              (constant temp and cfm), while zones loads vary.                 PKSYSB  31
      Hoa    = H(DBOA,WOA)                                                      PKSYSB  32
c                                                                               PKSYSB  33
      SELECT CASE (<DDS-TYPE>)                                                  PKSYSB  34
        CASE (0)           ! Single-duct systems                                PKSYSB  35
          IF (POA .GT. 0.99)  THEN                                              PKSYSB  36
c              load is only cfm dependent when 100% outside air - no            PKSYSB  37
c              dependence on extraction rate                                    PKSYSB  38
            BinTotal = 0.                                                       PKSYSB  39
            DO  IP=1,12                                                         PKSYSB  40
              BinTotal = BinTotal + Bin5CFM(IP)                                 PKSYSB  41
            ENDDO                                                               PKSYSB  42
            IF (BinTotal .GT. 0.)  THEN                                         PKSYSB  43
c              This should normally be the case                                 PKSYSB  44
              Prorate = 1.0 / BinTotal                                          PKSYSB  45
              DO  IP=1,12                                                       PKSYSB  46
                X = Bin5CFM(IP) * Prorate                                       PKSYSB  47
                Bin5Heat(IP) = X                                                PKSYSB  48
                Bin5Cool(IP) = X                                                PKSYSB  49
              ENDDO                                                             PKSYSB  50
            ELSE                                                                PKSYSB  51
c              Weird case for 0 zonal cfm                                       PKSYSB  52
              DO  IP=1,12                                                       PKSYSB  53
                Bin5Heat(IP) = Uniform                                          PKSYSB  54
                Bin5Cool(IP) = Uniform                                          PKSYSB  55
              ENDDO                                                             PKSYSB  56
            ENDIF            ! BinTotal                                         PKSYSB  57
            RETURN                                                              PKSYSB  58
          ENDIF              ! POA                                              PKSYSB  59
c                                                                               PKSYSB  60
c              Outside air must be accounted for in profile.  First,            PKSYSB  61
c              normalize extraction rate profile for the hour.  Note            PKSYSB  62
c              that normalized profile will contain both positive and           PKSYSB  63
c              negative values if zones switched from heat to cool/float        PKSYSB  64
c              during the hour.                                                 PKSYSB  65
          BinTotalH = 0.                                                        PKSYSB  66
          BinTotalC = 0.                                                        PKSYSB  67
          DO  IP=1,12                                                           PKSYSB  68
            BinTotalH = BinTotalH + MIN(0., Bin5Cool(IP))                       PKSYSB  69
            BinTotalC = BinTotalC + MAX(0., Bin5Cool(IP))                       PKSYSB  70
          ENDDO                                                                 PKSYSB  71
c              heating profile - negative number in profile means               PKSYSB  72
c              cooling during that interval                                     PKSYSB  73
          IF (BinTotalH .LT. 0.)  THEN                                          PKSYSB  74
            Prorate = 1.0 / BinTotalH                                           PKSYSB  75
            DO  IP=1,12                                                         PKSYSB  76
              Bin5Heat(IP) = Bin5Cool(IP) * Prorate                             PKSYSB  77
            ENDDO                                                               PKSYSB  78
          ELSE                                                                  PKSYSB  79
            DO  IP=1,12                                                         PKSYSB  80
              Bin5Heat(IP) = Uniform                                            PKSYSB  81
            ENDDO                                                               PKSYSB  82
          ENDIF                                                                 PKSYSB  83
c              cooling profile - negative number in profile means               PKSYSB  84
c              heating during that interval                                     PKSYSB  85
          IF (BinTotalC .GT. 0.)  THEN                                          PKSYSB  86
            Prorate = 1.0 / BinTotalC                                           PKSYSB  87
            DO  IP=1,12                                                         PKSYSB  88
              Bin5Cool(IP) = Bin5Cool(IP) * Prorate                             PKSYSB  89
            ENDDO                                                               PKSYSB  90
          ELSE                                                                  PKSYSB  91
            DO  IP=1,12                                                         PKSYSB  92
              Bin5Cool(IP) = Uniform                                            PKSYSB  93
            ENDDO                                                               PKSYSB  94
          ENDIF                                                                 PKSYSB  95
c              Now roll in the effect of outside air                            PKSYSB  96
c              fraction of coil load due to outside air (may be negative)       PKSYSB  97
          dH = Hmix-HcoilC                                                      -131   253
          IF (dH .NE. 0.)  THEN                                                 -131   254
            FracOA = POA*(Hoa-HcoilC) / dH                                      -131   255
          ELSEIF (Hoa .EQ. Hmix)  THEN                                          -131   256
            FracOA = 1.0                                                        -131   257
          ELSE                                                                  -131   258
            FracOA = 0.0                                                        -131   259
          ENDIF                                                                 -131   260
          FracReturn = 1.0 - FracOA                                             PKSYSB  99
c              5-minute OA normalized fraction                                  PKSYSB 100
          FracOA5 = FracOA / 12.                                                PKSYSB 101
c              Central heating coil load                                        PKSYSB 102
          IF (QH .LT. 0.)  THEN                                                 PKSYSB 103
            BinTotal = 0.                                                       PKSYSB 104
            DO  IP=1,12                                                         PKSYSB 105
              X = MAX(0., FracOA5 + FracReturn*Bin5Heat(IP))                    PKSYSB 106
              Bin5Heat(IP) = X                                                  PKSYSB 107
              BinTotal     = BinTotal + X                                       PKSYSB 108
            ENDDO                                                               PKSYSB 109
c              if heating simultaneous with cooling, assume heating is          PKSYSB 110
c              associated with dehumidification, and is uniform                 PKSYSB 111
            IF (BinTotal .EQ. 0.  .OR.  QC .GT. 0.)  THEN                       PKSYSB 112
              DO  IP=1,12                                                       PKSYSB 113
                Bin5Heat(IP) = Uniform                                          PKSYSB 114
              ENDDO                                                             PKSYSB 115
            ELSE                                                                PKSYSB 116
              Prorate = 1.0 / BinTotal                                          PKSYSB 117
              DO  IP=1,12                                                       PKSYSB 118
                Bin5Heat(IP) = Bin5Heat(IP) * Prorate                           PKSYSB 119
              ENDDO                                                             PKSYSB 120
            ENDIF                                                               PKSYSB 121
          ELSE                                                                  PKSYSB 122
c              no heating - make profile uniform for the hour                   PKSYSB 123
            DO  IP=1,12                                                         PKSYSB 124
              Bin5Heat(IP) = Uniform                                            PKSYSB 125
            ENDDO                                                               PKSYSB 126
          ENDIF                                                                 PKSYSB 127
c              repeat for central cooling coil load                             PKSYSB 128
          IF (QC .GT. 0.)  THEN                                                 PKSYSB 129
            BinTotal = 0.                                                       PKSYSB 130
            DO  IP=1,12                                                         PKSYSB 131
              X = MAX(0., FracOA5 + FracReturn*Bin5Cool(IP))                    PKSYSB 132
              Bin5Cool(IP) = X                                                  PKSYSB 133
              BinTotal     = BinTotal + X                                       PKSYSB 134
            ENDDO                                                               PKSYSB 135
            IF (BinTotal .GT. 0.)  THEN                                         PKSYSB 136
              Prorate = 1.0 / BinTotal                                          PKSYSB 137
              DO  IP=1,12                                                       PKSYSB 138
                Bin5Cool(IP) = Bin5Cool(IP) * Prorate                           PKSYSB 139
              ENDDO                                                             PKSYSB 140
            ELSE                                                                PKSYSB 141
              DO  IP=1,12                                                       PKSYSB 142
                Bin5Cool(IP) = Uniform                                          PKSYSB 143
              ENDDO                                                             PKSYSB 144
            ENDIF                                                               PKSYSB 145
          ELSE                                                                  PKSYSB 146
c              no cooling - make profile uniform for the hour                   PKSYSB 147
            DO  IP=1,12                                                         PKSYSB 148
              Bin5Cool(IP) = Uniform                                            PKSYSB 149
            ENDDO                                                               PKSYSB 150
          ENDIF                                                                 PKSYSB 151
c                                                                               PKSYSB 152
        CASE (1)             ! Single-fan dual-duct systems                     PKSYSB 153
c              temporarily do something useless with HcoilH to keep             PKSYSB 154
c              compiler from throwing a warning                                 PKSYSB 155
          x = HcoilH                                                            PKSYSB 156
        CASE (2)             ! Dual-fan dual-duct systems                       PKSYSB 157
      END SELECT             ! DDS-TYPE                                         PKSYSB 158
c                                                                               PKSYSB 159
      RETURN                                                                    PKSYSB 160
      END                                                                       PKSYSB 161
      SUBROUTINE PeakSysDist(Mode,DemandProfile, Demand,DemandMax,              PKSYSD   2
     &                                                       IE,Jptr)           PKSYSD   3
c                                                                               PKSYSD   4
c              Calculates the distribution of central air handler energy        PKSYSD   5
c              end-uses over the hour.  Distribution is in 5-minute bins.       PKSYSD   6
c                                                                               PKSYSD   7
c              Mode           1  Distribute a coil electrical load              PKSYSD   8
c                             2  Distribute a coil fuel load                    PKSYSD   9
c                             3  Distribute a coil circulation-loop load        PKSYSD  10
c              DemandProfile  1  Use heating profile                            PKSYSD  11
c                             2  Use cooling profile                            -131   261
c              Demand            Load to be distributed                         PKSYSD  12
c              DemandMax         Maximum possible demand                        PKSYSD  13
c              IE                End-use category index used in EDTT variables  PKSYSD  15
c              Jptr              Pointer to meter or loop                       PKSYSD  16
c                                                                               PKSYSD  17
C              DEVELOPED BY                                                     -130    15
C                            J. J. Hirsch & S. D. Gates                         -130    16
C                            James J. Hirsch & Associates                       -130    17
C                            Camarillo, California                              -130    18
C                                                                               -130    19
Copyright (c) 1997 by James J. Hirsch. All Rights Reserved. Unpublished         -130    20
c rights reserved under the Copyright Laws of the United States.                -130    21
c RESTRICTED RIGHTS NOTICE: Government use, reproduction or disclosure          -130    22
c is subject to restrictions as set forth in Rights in Data (g)(3) in           -130    23
c UC/LBL purchase order 4607010 with J.J. Hirsch & Associates.                  -130    24
C                                                                               -130    25
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON  /BIN5  / Bin5Cool(12), Bin5Heat(12), Bin5CFM(12),                 /BIN5/   2
     &                 Bin5PLR(12), TCstart, TCend, THstart, THend              /BIN5/   3
      DIMENSION        Bin5Bins(52)                                             /BIN5/   4
      EQUIVALENCE      (Bin5Bins(1), Bin5Cool(1))                               /BIN5/   5
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                 IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                        /FILES/  3
     2               , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                   /FILES/  4
     3                 IHRREP(3), IHRPAS(2)                                     /FILES/  5
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      COMMON  /TIME  / IDOY, IYR, IMO, IDAY, IHR,                               Time     4
     &                 ISCMO, ISCDAY, ISCHR, IDOW, ISCDOW, iDSdates(6),         -044e5   1
     &                 iTimeFlg, iDSFlg, iDDFlg, InitialFlg, LeapYr,            Time     6
     &                 CLOCK(10), MONDSC(13), MONLEN(12), MONSDA(12)            HR      12
c                                                                               PKSYSD  24
      REAL    ElecBins(12)                                                      PKSYSD  25
      INTEGER DemandProfile                                                     PKSYSD  26
c                                                                               PKSYSD  27
      IF (Demand .EQ. 0.)  RETURN                                               PKSYSD  28
c                                                                               PKSYSD  29
c              Maximum 5-minute demand                                          PKSYSD  30
      IF (DemandMax .GT. 0.)  THEN                                              PKSYSD  31
        DemandMax5 = DemandMax / 12.                                            PKSYSD  32
      ELSE                                                                      PKSYSD  33
        DemandMax5 = 1.E10                                                      PKSYSD  34
      ENDIF                                                                     PKSYSD  35
c              5-minute demand that exceeds physical limit, carried             PKSYSD  36
c              to adjacent bin                                                  PKSYSD  37
      Carry5 = 0.                                                               PKSYSD  38
c                                                                               PKSYSD  39
c              distribute the demand to the 5 minute bins                       PKSYSD  40
      SELECT CASE (Mode)                                                        PKSYSD  41
        CASE (1)             ! Electrical                                       PKSYSD  42
          Jem = Jptr                                                            PKSYSD  43
          IF (DemandProfile .EQ. 1)  THEN                                       PKSYSD  44
c              use heating profile                                              PKSYSD  45
            DO  IP=1,12                                                         PKSYSD  46
              Demand5         = Demand*Bin5Heat(IP) + Carry5                    PKSYSD  47
c              demand cannot exceed physical limit                              PKSYSD  48
              Carry5          = MAX(0., Demand5 - DemandMax5)                   PKSYSD  49
              Demand5         = Demand5 - Carry5                                PKSYSD  50
              <em;5-MIN_BINS> = <em;5-MIN_BINS> + Demand5                       PKSYSD  51
              ElecBins(IP)    = Demand5                                         PKSYSD  52
            ENDDO                                                               PKSYSD  53
          ELSE                                                                  PKSYSD  54
c              use cooling profile                                              PKSYSD  55
            DO  IP=1,12                                                         PKSYSD  56
              Demand5         = Demand*Bin5Cool(IP) + Carry5                    PKSYSD  57
c              demand cannot exceed physical limit                              PKSYSD  58
              Carry5          = MAX(0., Demand5 - DemandMax5)                   PKSYSD  59
              Demand5         = Demand5 - Carry5                                PKSYSD  60
              <em;5-MIN_BINS> = <em;5-MIN_BINS> + Demand5                       PKSYSD  61
              ElecBins(IP)    = Demand5                                         PKSYSD  62
            ENDDO                                                               PKSYSD  63
          ENDIF                                                                 PKSYSD  64
c              if demand carried from last bin, allocate to                     PKSYSD  65
c              nextmost earlier bin that can accept it                          PKSYSD  66
          IF (Carry5/Demand .GT. 0.0001)  THEN                                  PKSYSD  67
            DO  IP=11,1,-1                                                      PKSYSD  68
              IF (ElecBins(IP) .LT. DemandMax5)  THEN                           PKSYSD  69
                Additional      = MIN(Carry5, DemandMax5-ElecBins(IP))          PKSYSD  70
                Carry5          = Carry5 - Additional                           PKSYSD  71
                <em;5-MIN_BINS> = <em;5-MIN_BINS> + Additional                  PKSYSD  72
              ENDIF                                                             PKSYSD  73
              IF (Carry5 .EQ. 0.)  EXIT                                         PKSYSD  74
            ENDDO                                                               PKSYSD  75
            IF (Carry5/Demand .GT. 0.00001)  THEN                               -131   262
c              Demand larger than physical capacity of equipment                -131   263
              CALL MSGSIM(-3,II,II,II,II)                                       -131   264
              IF (DemandProfile .EQ. 1)  THEN                                   -131   265
                WRITE (IOUTPT,9100)  (<SYSTEM-NAME>,II=1,8),                    -131   266
     &                               IMO, IDAY, IHR, Demand, Carry5             -131   267
              ELSE                                                              -131   268
                WRITE (IOUTPT,9101)  (<SYSTEM-NAME>,II=1,8),                    -131   269
     &                               IMO, IDAY, IHR, Demand, Carry5             -131   270
              ENDIF                                                             -131   271
            ENDIF                                                               -131   272
          ENDIF                                                                 PKSYSD  81
          IP = 13                                                               PKSYSD  82
c              increment total peakatized demand                                PKSYSD  83
          <em;5-MIN_BINS> = <em;5-MIN_BINS> + Demand                            PKSYSD  84
c              increment electric meter end-use category                        PKSYSD  85
          <em;METERS> = <em;METERS> + Demand                                    PKSYSD  86
C future?                                                                       PKSYSD  87
C       CASE (2)             ! Fuel                                             PKSYSD  88
C         Jfm = Jptr                                                            PKSYSD  89
C         IF (DemandProfile .EQ. 1)  THEN                                       PKSYSD  90
c              use heating profile                                              PKSYSD  91
C           DO  IP=1,12                                                         PKSYSD  92
C             <fm;5-MIN_BINS> = <fm;5-MIN_BINS>                                 PKSYSD  93
C    &                        + Demand*Bin5Heat(IP)                             PKSYSD  94
C           ENDDO                                                               PKSYSD  95
C         ELSE                                                                  PKSYSD  96
c              use cooling profile                                              PKSYSD  97
C           DO  IP=1,12                                                         PKSYSD  98
C    &        <fm;5-MIN_BINS> = <fm;5-MIN_BINS>                                 PKSYSD  99
C                             + Demand*Bin5Cool(IP)                             PKSYSD 100
C           ENDDO                                                               PKSYSD 101
C         ENDIF                                                                 PKSYSD 102
C         IP = 13                                                               PKSYSD 103
C         <fm;5-MIN_BINS> = <fm;5-MIN_BINS> + Demand                            PKSYSD 104
C         <fm;METERS> = <fm;METERS> + Demand                                    PKSYSD 105
C       CASE (3)             ! Circulation loop                                 PKSYSD 106
C         Jlp = Jptr                                                            PKSYSD 107
C         IF (DemandProfile .EQ. 1)  THEN                                       PKSYSD 108
c              use heating profile                                              PKSYSD 109
C           IF (Demand .LT. 0.)  THEN                                           PKSYSD 110
C             DO  IP=1,12                                                       PKSYSD 111
C               <lp;5-MIN_BINS_HT> = <lp;5-MIN_BINS_HT>                         PKSYSD 112
C    &                             + Demand*Bin5Heat(IP)                        PKSYSD 113
C             ENDDO                                                             PKSYSD 114
C             IP = 13                                                           PKSYSD 115
C             <lp;5-MIN_BINS_HT> = <lp;5-MIN_BINS_HT> + Demand                  PKSYSD 116
C             <lp;COIL_HEAT>     = <lp;COIL_HEAT>     + Demand                  PKSYSD 117
C           ELSE                                                                PKSYSD 118
C             DO  IP=1,12                                                       PKSYSD 119
C               <lp;5-MIN_BINS_CL> = <lp;5-MIN_BINS_CL>                         PKSYSD 120
C    &                             + Demand*Bin5Heat(IP)                        PKSYSD 121
C             ENDDO                                                             PKSYSD 122
C             IP = 13                                                           PKSYSD 123
C             <lp;5-MIN_BINS_CL> = <lp;5-MIN_BINS_CL> + Demand                  PKSYSD 124
C             <lp;COIL_COOL>     = <lp;COIL_COOL>     + Demand                  PKSYSD 125
C           ENDIF                                                               PKSYSD 126
C         ELSE                                                                  PKSYSD 127
c              use cooling profile                                              PKSYSD 128
C           IF (Demand .LT. 0.)  THEN                                           PKSYSD 129
C             DO  IP=1,12                                                       PKSYSD 130
C               <lp;5-MIN_BINS_HT> = <lp;5-MIN_BINS_HT>                         PKSYSD 131
C    &                             + Demand*Bin5Cool(IP)                        PKSYSD 132
C             ENDDO                                                             PKSYSD 133
C             IP = 13                                                           PKSYSD 134
C             <lp;5-MIN_BINS_HT> = <lp;5-MIN_BINS_HT> + Demand                  PKSYSD 135
C             <lp;COIL_HEAT>     = <lp;COIL_HEAT>     + Demand                  PKSYSD 136
C           ELSE                                                                PKSYSD 137
C             DO  IP=1,12                                                       PKSYSD 138
C               <lp;5-MIN_BINS_CL> = <lp;5-MIN_BINS_CL>                         PKSYSD 139
C    &                             + Demand*Bin5Cool(IP)                        PKSYSD 140
C             ENDDO                                                             PKSYSD 141
C             IP = 13                                                           PKSYSD 142
C             <lp;5-MIN_BINS_CL> = <lp;5-MIN_BINS_CL> + Demand                  PKSYSD 143
C             <lp;COIL_COOL>     = <lp;COIL_COOL>     + Demand                  PKSYSD 144
C           ENDIF                                                               PKSYSD 145
C         ENDIF              ! DemandProfile                                    PKSYSD 146
      END SELECT             ! Mode                                             PKSYSD 147
c                                                                               PKSYSD 148
      RETURN                                                                    PKSYSD 149
c                                                                               PKSYSD 150
c              Message formats                                                  PKSYSD 151
 9100 FORMAT(14X,'System: ',8A4,' could not successfully'              /        -131   273
     &       14X,'allocate all energy to the 5-minute bins during'     /        -131   274
     &       14X,'heating because of an equipment overload.  The peak' /        -131   275
     &       14X,'load used in ECONOMICS will not include the fraction'/        -131   276
     &       14X,'due to the overload, but the PLANT reports will.'    /        -131   277
     &       14X,'Mon/Day/Hour:',3I3,'  Energy:',F6.1                  ,        -131   278
     $           '  Unallocated:',F6.3                                 )        -131   279
 9101 FORMAT(14X,'System: ',8A4,' could not successfully'              /        -131   280
     &       14X,'allocate all energy to the 5-minute bins during'     /        -131   281
     &       14X,'cooling because of an equipment overload.  The peak' /        -131   282
     &       14X,'load used in ECONOMICS will not include the fraction'/        -131   283
     &       14X,'due to the overload, but the PLANT reports will.'    /        -131   284
     &       14X,'Mon/Day/Hour:',3I3,'  Energy:',F6.1                  ,        -131   285
     $           '  Unallocated:',F6.3                                 )        -131   286
c                                                                               PKSYSD 156
      END                                                                       PKSYSD 157
      SUBROUTINE PeakZoneBins(Mode, CFMmin,CFMmax)                              PKZB     2
c                                                                               PKZB     3
c              Calculates the distribution of zone loads over the hour.         PKZB     4
c              Distribution is in 5-minute bins.                                PKZB     5
c                                                                               PKZB     6
c              Mode     0  Calculate loads for zonal system only                PKZB     7
c                       1  Calculate zonal cfm and zonal central coil           PKZB     8
c                          loads for single-duct systems                        PKZB     9
c                       2  Calculate zonal cfm and zonal central coil           PKZB    10
c                          loads for dual-duct systems                          PKZB    11
c                                                                               PKZB    12
C              DEVELOPED BY                                                     -130    15
C                            J. J. Hirsch & S. D. Gates                         -130    16
C                            James J. Hirsch & Associates                       -130    17
C                            Camarillo, California                              -130    18
C                                                                               -130    19
Copyright (c) 1997 by James J. Hirsch. All Rights Reserved. Unpublished         -130    20
c rights reserved under the Copyright Laws of the United States.                -130    21
c RESTRICTED RIGHTS NOTICE: Government use, reproduction or disclosure          -130    22
c is subject to restrictions as set forth in Rights in Data (g)(3) in           -130    23
c UC/LBL purchase order 4607010 with J.J. Hirsch & Associates.                  -130    24
C                                                                               -130    25
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON  /BIN5  / Bin5Cool(12), Bin5Heat(12), Bin5CFM(12),                 /BIN5/   2
     &                 Bin5PLR(12), TCstart, TCend, THstart, THend              /BIN5/   3
      DIMENSION        Bin5Bins(52)                                             /BIN5/   4
      EQUIVALENCE      (Bin5Bins(1), Bin5Cool(1))                               /BIN5/   5
      COMMON  /MISCD / TEMPS(4,9999),CONS(5),TEMPSL(9999),                      -048a   10
     1                 BLDGQH,BLDGQC,BLDGQL,BLDGP,BPMULT,                       /MISCD/  3
     $                 DBTMIN,DBTMAX,WMIN,WMAX,NSPZ(9999),                      -048a   11
     3                 DQ, DTP, DTR, DTS, FPI, PLRCC , POM, TC2, TDM,           /MISCD/  5
     4                 TRA,WCOL,WCOLM,WMM,YPI,KWBTU,BTUKW,UNFILD,Unusedm        RemPA   45
      REAL             KWBTU                                                    /MISCD/  7
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      COMMON /SHP   / QCRUN,QCLOAD,QCGAS,QCAUX,QCGSLD,QCGSUP,                   /SHP/    2
     1                QCWAS,QCWASU,QCGSAV,QCFAN,                                /SHP/    3
     2                QHRUN,QHLOAD,QHGAS,QHAUX,QHGSLD,QHGSUP,                   /SHP/    4
     3                QHWAS,QHWASU,QHGDFR,QHFAN,          CUR(25),              /SHP/    5
     4                GSAV1,GASV2,PCH,ISZCZ,GCAP(2),GEDB,QHDFRG,                -044c1   1
     5                GRPM,PLRSUP,CFMCYC,CLPLR,CFMVVT,QHZHP,PCCEDB,             /SHP/    7
     6                IHPREP,IHPOUT,IHPHRR,IHPHRN,IRST,IREN                     /SHP/    8
      COMMON /SHPZ  / QCRUNZ,QCLOADZ,QCGASZ,QCAUXZ,QCGSLDZ,QCGSUPZ,             /SHP/    9
     1                QCWASZ,QCWASUZ,QCGSAVZ,QCFANZ,                            /SHP/   10
     2                QHRUNZ,QHLOADZ,QHGASZ,QHAUXZ,QHGSLDZ,QHGSUPZ,             /SHP/   11
     3                QHWASZ,QHWASUZ,QHGDFRZ,QHFANZ                             /SHP/   12
      DIMENSION       SHP(60),SHPZ(20)                                          /SHP/   13
      EQUIVALENCE     (SHP,QCRUN),(SHPZ,QCRUNZ)                                 /SHP/   14
     1               ,(DFM1,CUR(18)),(DFM2,CUR(19)),(DFM3,CUR(20))              /SHP/   15
      COMMON  /SYSTD / TH,TC,TM,TR,QH,QC,QHZ,QCZ,QHB,QHP,QHUM,                  /SYSTD/  2
     1                 QDHUM,TCMIN,THMAX,QLSUM,QPSUM,CFM,CFMH,CFMC,             /SYSTD/  3
     2                 RCFM,ECFM,CINF,FON,HON,CON,BON,SCONS(3),PH,PC,           /SYSTD/  4
     3                 SKW,FANKW,unused1,WR,WM,WCOIL,WW,PO,D,                   -046f    1
     4                 FTEMP,TCR,QHR,RfanPumpKW,SGAS,SKWQH,SKWQC,QCLAT,         -131    23
     5                 SFKW,RFKW,FONNGT,WSURF,RWalkinQ,TSURF,TRh,               -131    24
     6                 CBF,CBF1,CBF2,EON,PLRCFM,PLRC,PLRH,QCM1,                 /SYSTD/  8
     7                 QCM2,QHM1,EIRM1,EIRM2,EIR,OFKW,QCT,QCS,                  /SYSTD/  9
     8                 WRMAX,WRMIN,CFMRAT,QdistG,QdistL,RON,QHT,                /SYSTD/ 10
     9                 TPOMIN,POMIN,QHSUP,QRSENS,QRLAT,QRREC,QRREJ,             /SYSTD/ 11
     1                 RCOMKW,RDEFKW,RAUXKW,ECFMP,CFMIN,CINFP,DT,DW,            /SYSTD/ 12
     2                 EWB,IC,NATTSP,Q,RETR,SLOAD,QLSUMP,T,TCHUM,TEND,          /SYSTD/ 13
     3                 TS,hgbmin,HPDefE,EconoOnly,TDuctEnv,                     -044e1   1
     4                 QCUNMT,CapRh,CapRph,CapRc                                HVAC25   3
      REAL             SYSTD(113)                                               HVAC19  13
      EQUIVALENCE      (SYSTD(1),TH)                                            RemPA   65
      COMMON  /ZONED / EXCFM,FH,FC,CFMZ,QHBZ,QOVER,THZ,TCZ,ERMAX,ERMIN,         /ZONED/  2
     1                 TRY,FTD,CORINT,G0,G1,G2,G3,SIGMAG,TL,ZQHR,TAVE,          /ZONED/  3
     2                 ZQH,ZQC,FCHPS(15),ACFM,ZKW,TCMINZ,THMAXZ,                /ZONED/  4
     3                 ERMAXM,ERMINM,THR,CSSCND,CSSVEC,HENOW,QGWIN,             /ZONED/  5
     4                 QSNABT,QGOPWL,QGVEC,CFMCVT,SSFPT,CFMVNT,ZFANKW,          /ZONED/  6
     5                 ZKWCBT,ZKWHBT,ZCapRbbrd, XC,ZC,XH,ZH                     -044e2   7
      REAL ZONED(63)                                                            -044e2   8
      EQUIVALENCE (ZONED(1),EXCFM)                                              /ZONED/  9
c                                                                               PKZB    21
      INTEGER Floating, Heatmode, Coolmode                                      PKZB    22
      DATA    Floating, Heatmode, Coolmode  /0,1,2/                             PKZB    23
      DATA    Uniform  /0.08333333333/                                          PKZB    24
c                                                                               PKZB    25
c                                                                               PKZB    26
c              When transitioning between floating and heating/cooling,         PKZB    27
c              part load ratios calculated for the floating portion will        PKZB    28
c              be negative so that the bin stepping works properly.  The        PKZB    29
c              negative (unreal) results during this time are cancelled         PKZB    30
c              when the loads are summed into the bins.                         PKZB    31
c                                                                               PKZB    32
c              Zone multiplier                                                  PKZB    33
      Zmult = <MULTIPLIER>                                                      PKZB    34
c                                                                               PKZB    35
c              Start of hour conditions - see if heating, cooling,              PKZB    36
c              or floating                                                      PKZB    37
      IF ((THZ .NE. -999.) .and. (<TPAST> .LT. THZ+THR))  THEN                  -036   447
c              Heating mode                                                     PKZB    39
        ModeStart = Heatmode                                                    PKZB    40
c              load fraction                                                    PKZB    41
        PLRstart = (THZ-<TPAST>)/(THR*2.0) + 0.5                                PKZB    42
c              start of hour airflow                                            PKZB    43
        SELECT CASE (Mode)                                                      PKZB    44
          CASE (0)           ! Unitary systems                                  PKZB    45
          CASE (1)           ! Single-duct systems                              PKZB    46
c              if start and ending supply temp not yet set,                     PKZB    47
c              default to TC                                                    PKZB    48
            IF (TCstart .EQ. 0.)  THEN                                          PKZB    49
              TCstart = TC                                                      PKZB    50
              TCend   = TC                                                      PKZB    51
            ENDIF                                                               PKZB    52
            IF (<THERMOSTAT-TYPE> .NE. 3)  THEN                                 PKZB    53
c              normal thermostat                                                PKZB    54
              CFMstart = CFMmin                                                 PKZB    55
            ELSE                                                                PKZB    56
c              reverse-acting thermostat                                        PKZB    57
              CFMstart = CFMmin + PLRstart*(CFMmax-CFMmin)                      PKZB    58
            ENDIF                                                               PKZB    59
          CASE (2)           ! Dual-duct systems                                PKZB    60
        END SELECT           ! Mode                                             PKZB    61
      ELSEIF ((TCZ .NE. 999.) .and. (<TPAST> .GT. TCZ-THR))  THEN               -036   448
c              Cooling mode                                                     PKZB    63
        ModeStart = Coolmode                                                    PKZB    64
        PLRstart = (<TPAST>-TCZ)/(THR*2.0) + 0.5                                PKZB    65
c              start of hour airflow                                            PKZB    66
        SELECT CASE (Mode)                                                      PKZB    67
          CASE (1)           ! Single-duct systems                              PKZB    68
            CFMstart = CFMmin + PLRstart*(CFMmax-CFMmin)                        PKZB    69
          CASE (2)           ! Dual-duct systems                                PKZB    70
        END SELECT           ! Mode                                             PKZB    71
      ELSE                                                                      PKZB    72
c              Floating at start of hour                                        PKZB    73
        ModeStart = Floating                                                    PKZB    74
      ENDIF                  ! TPAST                                            PKZB    75
c                                                                               PKZB    76
c              End of hour conditions                                           PKZB    77
      IF ((THZ .NE. -999.) .and. (<TNOW> .LT. THZ+THR))  THEN                   -036   449
c              Heating mode                                                     PKZB    79
        PLRend = (THZ-<TNOW>)/(THR*2.0) + 0.5                                   PKZB    80
c              if floating at start                                             PKZB    81
        IF (ModeStart .NE. HeatMode)                                            PKZB    82
     &    PLRstart = (THZ-<TPAST>)/(THR*2.0) + 0.5                              PKZB    83
c              end of hour airflow                                              PKZB    84
        SELECT CASE (Mode)                                                      PKZB    85
          CASE (1)           ! Single-duct systems                              PKZB    86
            IF (<THERMOSTAT-TYPE> .NE. 3)  THEN                                 PKZB    87
c              normal thermostat                                                PKZB    88
              CFMend = CFMmin                                                   PKZB    89
              IF (ModeStart .NE. HeatMode)  CFMstart = CFMmin                   PKZB    90
            ELSE                                                                PKZB    91
c              reverse-acting thermostat                                        PKZB    92
              CFMend = CFMmin + PLRend*(CFMmax-CFMmin)                          PKZB    93
              IF (ModeStart .NE. HeatMode)                                      PKZB    94
     &          CFMstart = CFMmin + PLRstart*(CFMmax-CFMmin)                    PKZB    95
            ENDIF                                                               PKZB    96
          CASE (2)           ! Dual-duct systems                                PKZB    97
        END SELECT           ! Mode                                             PKZB    98
      ELSEIF ((TCZ .NE. 999.) .and. (<TNOW> .GT. TCZ-THR))  THEN                -036   450
c              Cooling mode                                                     PKZB   100
        PLRend = (<TNOW>-TCZ)/(THR*2.0) + 0.5                                   PKZB   101
c              if floating at start                                             PKZB   102
        IF (ModeStart .NE. CoolMode)                                            PKZB   103
     &    PLRstart = (<TPAST>-TCZ)/(THR*2.0) + 0.5                              PKZB   104
c              end of hour airflow                                              PKZB   105
        SELECT CASE (Mode)                                                      PKZB   106
          CASE (1)           ! Single-duct systems                              PKZB   107
            CFMend = CFMmin + PLRend*(CFMmax-CFMmin)                            PKZB   108
            IF (ModeStart .NE. CoolMode)                                        PKZB   109
     &        CFMstart = CFMmin + PLRstart*(CFMmax-CFMmin)                      PKZB   110
          CASE (2)           ! Dual-duct systems                                PKZB   111
        END SELECT           ! Mode                                             PKZB   112
      ELSE                                                                      PKZB   113
c              Floating at end of hour                                          PKZB   114
        IF (ModeStart .EQ. HeatMode)  THEN                                      PKZB   115
          PLRend = (THZ-<TNOW>)/(THR*2.0) + 0.5                                 PKZB   116
c              end of hour airflow                                              PKZB   117
          SELECT CASE (Mode)                                                    PKZB   118
            CASE (1)         ! Single-duct systems                              PKZB   119
              IF (<THERMOSTAT-TYPE> .NE. 3)  THEN                               PKZB   120
c              normal thermostat                                                PKZB   121
                CFMend = CFMmin                                                 PKZB   122
              ELSE                                                              PKZB   123
c              reverse-acting thermostat                                        PKZB   124
                CFMend = CFMmin + PLRend*(CFMmax-CFMmin)                        PKZB   125
              ENDIF                                                             PKZB   126
            CASE (2)         ! Dual-duct systems                                PKZB   127
          END SELECT         ! Mode                                             PKZB   128
        ELSEIF (ModeStart .EQ. CoolMode)  THEN                                  PKZB   129
          PLRend = (<TNOW>-TCZ)/(THR*2.0) + 0.5                                 PKZB   130
c              end of hour airflow                                              PKZB   131
          SELECT CASE (Mode)                                                    PKZB   132
            CASE (1)         ! Single-duct systems                              PKZB   133
              CFMend = CFMmin + PLRend*(CFMmax-CFMmin)                          PKZB   134
            CASE (2)         ! Dual-duct systems                                PKZB   135
            END SELECT       ! Mode                                             PKZB   136
        ELSE                                                                    PKZB   137
c              floating whole hour                                              PKZB   138
          PLRstart = 1.                                                         PKZB   139
          PLRend   = 1.                                                         PKZB   140
c              end of hour airflow                                              PKZB   141
          SELECT CASE (Mode)                                                    PKZB   142
            CASE (1)         ! Single-duct systems                              PKZB   143
              CFMstart = CFMmin                                                 PKZB   144
              CFMend   = CFMmin                                                 PKZB   145
            CASE (2)         ! Dual-duct systems                                PKZB   146
          END SELECT         ! Mode                                             PKZB   147
        ENDIF                ! ModeStart                                        PKZB   148
      ENDIF                  ! TNOW                                             PKZB   149
c                                                                               PKZB   150
c              Now fill in the bins                                             PKZB   151
c              5 minute load increment                                          PKZB   152
      PLR5 = (PLRend-PLRstart) / 12.                                            PKZB   153
c              PLR this time step                                               PKZB   154
      PLRi = PLRstart                                                           PKZB   155
c              calculate load fraction in each 5 minute bin                     PKZB   156
      DO  IP=1,12                                                               PKZB   157
        PLRi  = PLRi + PLR5                                                     PKZB   158
c              load fraction cannot be outside physical limits                  PKZB   159
        PLRii = MAX(0., MIN(1., PLRi))                                          PKZB   160
        Bin5PLR(IP) = PLRii                                                     PKZB   161
      ENDDO                                                                     PKZB   162
c              check if load exists for only a fraction of a bin                PKZB   163
c              at start or end                                                  PKZB   164
      BinTotal = 0.                                                             PKZB   165
      DO  IP=1,12                                                               PKZB   166
        BinTotal = BinTotal + Bin5PLR(IP)                                       PKZB   167
      ENDDO                                                                     PKZB   168
      IF (BinTotal .EQ. 0.)  THEN                                               PKZB   169
        IF (PLRstart .GT. 0.)  THEN                                             PKZB   170
          Bin5PLR(1) = 1.                                                       PKZB   171
        ELSEIF (PLRend .GT. 0.)  THEN                                           PKZB   172
          Bin5PLR(12) = 1.                                                      PKZB   173
        ELSE                                                                    PKZB   174
          DO  IP=1,12                                                           PKZB   175
            Bin5PLR(IP) = Uniform                                               PKZB   176
          ENDDO                                                                 PKZB   177
        ENDIF                                                                   PKZB   178
        BinTotal = 1.                                                           PKZB   179
      ENDIF                                                                     PKZB   180
c              store prorated distribution for each bin                         PKZB   181
      Prorate = 1.0 / BinTotal                                                  PKZB   182
      DO  IP=1,12                                                               PKZB   183
        Bin5PLR(IP) = Bin5PLR(IP) * Prorate                                     PKZB   184
      ENDDO                                                                     PKZB   185
c                                                                               PKZB   186
c              Repeat for 5 minute airflows and extraction rates                PKZB   187
      SELECT CASE (Mode)                                                        PKZB   188
        CASE (1)             ! Single-duct systems                              PKZB   189
c              airflow                                                          PKZB   190
          CFMstart = CFMstart * Zmult                                           PKZB   191
          CFMend   = CFMend   * Zmult                                           PKZB   192
          CFM5 = (CFMend-CFMstart) / 12.                                        PKZB   193
          CFMi = CFMstart                                                       PKZB   194
c              supply temperature                                               PKZB   195
          TC5  = (TCend-TCstart) / 12.                                          PKZB   196
          TCi  = TCstart                                                        PKZB   197
c              zone temperature                                                 PKZB   198
          TZ5  = (<TNOW>-<TPAST>) / 12.                                         PKZB   199
          TZi  = <TPAST>                                                        PKZB   200
          DO  IP=1,12                                                           PKZB   201
c              airflow in this interval                                         PKZB   202
            CFMi         = CFMi + CFM5                                          PKZB   203
            CFMii        = MAX(CFMmin, MIN(CFMmax, CFMi))                       PKZB   204
            Bin5CFM(IP)  = Bin5CFM(IP) + CFMii                                  PKZB   205
c              extraction rate in this interval                                 PKZB   206
            TCi          = TCi + TC5                                            PKZB   207
            TZi          = TZi + TZ5                                            PKZB   208
            QCi          = CONS(1) * CFMii * (TZi-TCi)                          PKZB   209
            Bin5Cool(IP) = Bin5Cool(IP) + QCi                                   PKZB   210
          ENDDO                                                                 PKZB   211
        CASE (2)             ! Dual-duct systems                                PKZB   212
      END SELECT             ! Mode                                             PKZB   213
c                                                                               PKZB   214
      RETURN                                                                    PKZB   215
      END                                                                       PKZB   216
      SUBROUTINE PeakZoneDist(Mode, Demand,DemandMax,IE,Jptr)                   PKZD     2
c                                                                               PKZD     3
c              Calculates the distribution of zonal energy end-uses             PKZD     4
c              over the hour.  Distribution is in 5-minute bins.                PKZD     5
c                                                                               PKZD     6
c              Mode     1  Distribute a zonal electrical load                   PKZD     7
c                       2  Distribute a zonal fuel load                         PKZD     8
c                       3  Distribute a zonal circulation-loop load             PKZD     9
c              Demand      Load to be distributed                               PKZD    10
c              DemandMax   Maximum possible demand                              PKZD    11
c              IE          End-use category index used in EDTT variables        PKZD    12
c              Jptr        Pointer to meter or loop                             PKZD    13
c                                                                               PKZD    14
C              DEVELOPED BY                                                     -130    15
C                            J. J. Hirsch & S. D. Gates                         -130    16
C                            James J. Hirsch & Associates                       -130    17
C                            Camarillo, California                              -130    18
C                                                                               -130    19
Copyright (c) 1997 by James J. Hirsch. All Rights Reserved. Unpublished         -130    20
c rights reserved under the Copyright Laws of the United States.                -130    21
c RESTRICTED RIGHTS NOTICE: Government use, reproduction or disclosure          -130    22
c is subject to restrictions as set forth in Rights in Data (g)(3) in           -130    23
c UC/LBL purchase order 4607010 with J.J. Hirsch & Associates.                  -130    24
C                                                                               -130    25
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON  /BIN5  / Bin5Cool(12), Bin5Heat(12), Bin5CFM(12),                 /BIN5/   2
     &                 Bin5PLR(12), TCstart, TCend, THstart, THend              /BIN5/   3
      DIMENSION        Bin5Bins(52)                                             /BIN5/   4
      EQUIVALENCE      (Bin5Bins(1), Bin5Cool(1))                               /BIN5/   5
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                 IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                        /FILES/  3
     2               , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                   /FILES/  4
     3                 IHRREP(3), IHRPAS(2)                                     /FILES/  5
      COMMON  /MISCD / TEMPS(4,9999),CONS(5),TEMPSL(9999),                      -048a   10
     1                 BLDGQH,BLDGQC,BLDGQL,BLDGP,BPMULT,                       /MISCD/  3
     $                 DBTMIN,DBTMAX,WMIN,WMAX,NSPZ(9999),                      -048a   11
     3                 DQ, DTP, DTR, DTS, FPI, PLRCC , POM, TC2, TDM,           /MISCD/  5
     4                 TRA,WCOL,WCOLM,WMM,YPI,KWBTU,BTUKW,UNFILD,Unusedm        RemPA   45
      REAL             KWBTU                                                    /MISCD/  7
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      COMMON  /SYSTD / TH,TC,TM,TR,QH,QC,QHZ,QCZ,QHB,QHP,QHUM,                  /SYSTD/  2
     1                 QDHUM,TCMIN,THMAX,QLSUM,QPSUM,CFM,CFMH,CFMC,             /SYSTD/  3
     2                 RCFM,ECFM,CINF,FON,HON,CON,BON,SCONS(3),PH,PC,           /SYSTD/  4
     3                 SKW,FANKW,unused1,WR,WM,WCOIL,WW,PO,D,                   -046f    1
     4                 FTEMP,TCR,QHR,RfanPumpKW,SGAS,SKWQH,SKWQC,QCLAT,         -131    23
     5                 SFKW,RFKW,FONNGT,WSURF,RWalkinQ,TSURF,TRh,               -131    24
     6                 CBF,CBF1,CBF2,EON,PLRCFM,PLRC,PLRH,QCM1,                 /SYSTD/  8
     7                 QCM2,QHM1,EIRM1,EIRM2,EIR,OFKW,QCT,QCS,                  /SYSTD/  9
     8                 WRMAX,WRMIN,CFMRAT,QdistG,QdistL,RON,QHT,                /SYSTD/ 10
     9                 TPOMIN,POMIN,QHSUP,QRSENS,QRLAT,QRREC,QRREJ,             /SYSTD/ 11
     1                 RCOMKW,RDEFKW,RAUXKW,ECFMP,CFMIN,CINFP,DT,DW,            /SYSTD/ 12
     2                 EWB,IC,NATTSP,Q,RETR,SLOAD,QLSUMP,T,TCHUM,TEND,          /SYSTD/ 13
     3                 TS,hgbmin,HPDefE,EconoOnly,TDuctEnv,                     -044e1   1
     4                 QCUNMT,CapRh,CapRph,CapRc                                HVAC25   3
      REAL             SYSTD(113)                                               HVAC19  13
      EQUIVALENCE      (SYSTD(1),TH)                                            RemPA   65
      COMMON  /TIME  / IDOY, IYR, IMO, IDAY, IHR,                               Time     4
     &                 ISCMO, ISCDAY, ISCHR, IDOW, ISCDOW, iDSdates(6),         -044e5   1
     &                 iTimeFlg, iDSFlg, iDDFlg, InitialFlg, LeapYr,            Time     6
     &                 CLOCK(10), MONDSC(13), MONLEN(12), MONSDA(12)            HR      12
      COMMON  /ZONED / EXCFM,FH,FC,CFMZ,QHBZ,QOVER,THZ,TCZ,ERMAX,ERMIN,         /ZONED/  2
     1                 TRY,FTD,CORINT,G0,G1,G2,G3,SIGMAG,TL,ZQHR,TAVE,          /ZONED/  3
     2                 ZQH,ZQC,FCHPS(15),ACFM,ZKW,TCMINZ,THMAXZ,                /ZONED/  4
     3                 ERMAXM,ERMINM,THR,CSSCND,CSSVEC,HENOW,QGWIN,             /ZONED/  5
     4                 QSNABT,QGOPWL,QGVEC,CFMCVT,SSFPT,CFMVNT,ZFANKW,          /ZONED/  6
     5                 ZKWCBT,ZKWHBT,ZCapRbbrd, XC,ZC,XH,ZH                     -044e2   7
      REAL ZONED(63)                                                            -044e2   8
      EQUIVALENCE (ZONED(1),EXCFM)                                              /ZONED/  9
c                                                                               PKZD    24
      REAL ElecBins(12)                                                         PKZD    25
c                                                                               PKZD    26
      IF (Demand .EQ. 0.)  RETURN                                               PKZD    27
c                                                                               PKZD    28
c              Total for all zones                                              PKZD    29
      DemandTotal = Demand * <MULTIPLIER>                                       PKZD    30
c              Maximum 5-minute demand                                          PKZD    31
      IF (DemandMax .GT. 0.)  THEN                                              PKZD    32
        DemandMax5 = DemandMax*<MULTIPLIER> / 12.                               PKZD    33
      ELSE                                                                      PKZD    34
        DemandMax5 = 1.E10                                                      PKZD    35
      ENDIF                                                                     PKZD    36
c              5-minute demand that exceeds physical limit, carried             PKZD    37
c              to adjacent bin                                                  PKZD    38
      Carry5 = 0.                                                               PKZD    39
c                                                                               PKZD    40
c              distribute the demand to the 5 minute bins                       PKZD    41
      SELECT CASE (Mode)                                                        PKZD    42
        CASE (1)             ! Electrical                                       PKZD    43
          Jem = Jptr                                                            PKZD    44
          DO  IP=1,12                                                           PKZD    45
            Demand5         = DemandTotal*Bin5PLR(IP) + Carry5                  PKZD    46
c              demand cannot exceed physical limit                              PKZD    47
            Carry5          = MAX(0., Demand5 - DemandMax5)                     PKZD    48
            Demand5         = Demand5 - Carry5                                  PKZD    49
            <em;5-MIN_BINS> = <em;5-MIN_BINS> + Demand5                         PKZD    50
            ElecBins(IP)    = Demand5                                           PKZD    51
          ENDDO                                                                 PKZD    52
c              if demand carried from last bin, allocate to                     PKZD    53
c              nextmost earlier bin that can accept it                          PKZD    54
          IF (Carry5/DemandTotal .GT. 0.00001)  THEN                            PKZD    55
            DO  IP=11,1,-1                                                      PKZD    56
              IF (ElecBins(IP) .LT. DemandMax5)  THEN                           PKZD    57
                Additional      = MIN(Carry5, DemandMax5-ElecBins(IP))          PKZD    58
                Carry5          = Carry5 - Additional                           PKZD    59
                <em;5-MIN_BINS> = <em;5-MIN_BINS> + Additional                  PKZD    60
              ENDIF                                                             PKZD    61
              IF (Carry5 .EQ. 0.)  EXIT                                         PKZD    62
            ENDDO                                                               PKZD    63
            IF (Carry5/DemandTotal .GT. 0.00001)  THEN                          PKZD    64
              CALL MSGSIM(-2,II,II,II,II)                                       PKZD    65
              WRITE (IOUTPT,9100)  (<ZONE-NAME>,II=1,8),                        PKZD    66
     &                             IMO, IDAY, IHR, DemandTotal, Carry5          PKZD    67
            ENDIF                                                               PKZD    68
          ENDIF                                                                 PKZD    69
          IP = 13                                                               PKZD    70
c              increment total peakatized demand                                PKZD    71
          <em;5-MIN_BINS> = <em;5-MIN_BINS> + DemandTotal                       PKZD    72
c              increment electric meter end-use category                        PKZD    73
          <em;METERS> = <em;METERS> + DemandTotal                               PKZD    74
C future?                                                                       PKZD    75
C       CASE (2)             ! Fuel                                             PKZD    76
C         Jfm = Jptr                                                            PKZD    77
C         DO  IP=1,12                                                           PKZD    78
C           <fm;5-MIN_BINS> = <fm;5-MIN_BINS> + DemandTotal*Bin5PLR(IP)         PKZD    79
C         ENDDO                                                                 PKZD    80
C         IP = 13                                                               PKZD    81
C         <fm;5-MIN_BINS> = <fm;5-MIN_BINS> + DemandTotal                       PKZD    82
C         <fm;METERS> = <fm;METERS> + DemandTotal                               PKZD    83
C       CASE (3)             ! Circulation loop                                 PKZD    84
C         Jlp = Jptr                                                            PKZD    85
C         IF (DemandTotal .LT. 0.)  THEN                                        PKZD    86
C           DO  IP=1,12                                                         PKZD    87
C             <lp;5-MIN_BINS_HT> = <lp;5-MIN_BINS_HT>                           PKZD    88
C    &                           + DemandTotal*Bin5PLR(IP)                      PKZD    89
C           ENDDO                                                               PKZD    90
C           IP = 13                                                             PKZD    91
C           <lp;5-MIN_BINS_HT> = <lp;5-MIN_BINS_HT> + DemandTotal               PKZD    92
C           <lp;COIL_HEAT>     = <lp;COIL_HEAT>     + DemandTotal               PKZD    93
C         ELSE                                                                  PKZD    94
C           DO  IP=1,12                                                         PKZD    95
C             <lp;5-MIN_BINS_CL> = <lp;5-MIN_BINS_CL>                           PKZD    96
C    &                           + DemandTotal*Bin5PLR(IP)                      PKZD    97
C           ENDDO                                                               PKZD    98
C           IP = 13                                                             PKZD    99
C           <lp;5-MIN_BINS_CL> = <lp;5-MIN_BINS_CL> + DemandTotal               PKZD   100
C           <lp;COIL_COOL>     = <lp;COIL_COOL>     + DemandTotal               PKZD   101
C         ENDIF                                                                 PKZD   102
        END SELECT           ! Mode                                             PKZD   103
c                                                                               PKZD   104
      RETURN                                                                    PKZD   105
c                                                                               PKZD   106
c              Message formats                                                  PKZD   107
 9100 FORMAT(14X,'Zone: ',8A4,' could not successfully'                /        -131   287
     &       14X,'allocate all equipment energy to the 5-minute bins'  /        -131   288
     &       14X,'because of an equipment overload.  The peak load'    /        -131   289
     &       14X,'used in ECONOMICS will not include the fraction due' /        -131   290
     &       14X,'to the overload, but the PLANT reports will.'        /        -131   291
     &       14X,'Mon/Day/Hour:',3I3,'  Energy:',F6.1                  ,        -131   292
     $           '  Unallocated:',F6.3                                 )        -131   293
c                                                                               PKZD   112
      END                                                                       PKZD   113
      SUBROUTINE PIU                                                            PIU      2
C                                                                               PIU      3
C              PIU SINGLE DUCT ZONE CALCULATIONS                                PIU      4
C                                                                               PIU      5
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON  /ENDUSE/ SUPPKW, HEATKW                                           HVAC27   1
      COMMON /FFUEL/ FFUEL, FurnAuxFuel, FurnAuxkW, PLRF                        /FFUEL/  2
      COMMON  /HRREP / Irb, Ihrp, Lrb, Lhrp, Nrb, Nhrp, IVTLIM(3,50),           HR       5
     &                 IGRPtr, IBRPtr, IRSch, IRSchT(5),                        HR       6
     &                 NHRTyp(3), ITBUF(3), ITBUFB(3), ITBUFE(3),               HR       7
     &                 IHREOF, ICDFLG                                           HR       8
      COMMON  /MISCD / TEMPS(4,9999),CONS(5),TEMPSL(9999),                      -048a   10
     1                 BLDGQH,BLDGQC,BLDGQL,BLDGP,BPMULT,                       /MISCD/  3
     $                 DBTMIN,DBTMAX,WMIN,WMAX,NSPZ(9999),                      -048a   11
     3                 DQ, DTP, DTR, DTS, FPI, PLRCC , POM, TC2, TDM,           /MISCD/  5
     4                 TRA,WCOL,WCOLM,WMM,YPI,KWBTU,BTUKW,UNFILD,Unusedm        RemPA   45
      REAL             KWBTU                                                    /MISCD/  7
      common  /FNSYS/  ISKIPS, MSYSF(120)                                       /FNSYS/  2
      COMMON  /PIUDAT/ ERFON,ERFOFF,TFZ,ZFONLY,IBF,BBR,MSTEMP,F,                -044e2   1
     &                 CFMIND,CFMI,FRACIAZ,HONS,RCFMI,RCFMMI,RCFMTX,            -044e2   2
     &                 TIAZ,TIC,TIH,ZCFMT,ZQHSMN,TEND1,TEND2,TRY2,F2,           -044e2   3
     &                 FNSZHP,MAXSTZ                                            -044e2   4
      DIMENSION        ZDPIU(8)                                                 -044e2   5
      EQUIVALENCE     (ZDPIU(1),ERFON)                                          -044e2   6
      COMMON  /PLANTD/ QHMP,TMP,CFMP,QHPP,CFMPP,                                /PLANTD/ 2
     1                 QHZP,TZP,DHWPKW,DHWPLF,DHWQRP                            RemPA   46
      REAL             PLANTD(10)                                               RemPA   47
      EQUIVALENCE      (PLANTD(1), QHMP)                                        RemPA   48
      COMMON  /PTRPLT/ Ipm,Ilp,Ich,Ibl,Idw,Itw,Ipv,Ign,Itk,Ihx,                 PV       1
     &                 Iec,Ilm,Iem,Ifm,Ism,Icm,Imm,Imc,Igl,Isp2,                XFC2     1
     &                 Ispare(5),  Ipe,                                         HVAC19   3
     &                 Npm,Nlp,Nch,Nbl,Ndw,Ntw,Npv,Ngn,Ntk,Nhx,                 PV       2
     &                 Nec,Nlm,Nem,Nfm,Nsm,Ncm,Nmm,Nmc,Ngl,Nsp2,                XFC2     2
     &                 Nspare(5),  Npe,                                         HVAC19   6
     &                 Lpm,Llp,Lch,Lbl,Ldw,Ltw,Lpv,Lgn,Ltk,Lhx,                 PV       3
     &                 Lec,Llm,Lem,Lfm,Lsm,Lcm,Lmm,Lmc,Lgl,Lsp2,                XFC2     3
     &                 Lspare(5),  Lpe,                                         HVAC19   9
     &                 Jpm,Jlp,Jch,Jbl,Jdw,Jtw,Jpv,Jgn,Jtk,Jhx,                 PV       4
     &                 Jec,Jlm,Jem,Jfm,Jsm,Jcm,    Jmc,Jgl,                     HVAC19  11
     &                 Jpe, kpr, NumMeters, NumIntHX                            XFC1     1
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      COMMON  /REPORT/ IREPRT(4,37),IPRG,IUNIQV(100),IUNIQS(100),IUNIQL         HVAC14   4
      COMMON  /SYSTD / TH,TC,TM,TR,QH,QC,QHZ,QCZ,QHB,QHP,QHUM,                  /SYSTD/  2
     1                 QDHUM,TCMIN,THMAX,QLSUM,QPSUM,CFM,CFMH,CFMC,             /SYSTD/  3
     2                 RCFM,ECFM,CINF,FON,HON,CON,BON,SCONS(3),PH,PC,           /SYSTD/  4
     3                 SKW,FANKW,unused1,WR,WM,WCOIL,WW,PO,D,                   -046f    1
     4                 FTEMP,TCR,QHR,RfanPumpKW,SGAS,SKWQH,SKWQC,QCLAT,         -131    23
     5                 SFKW,RFKW,FONNGT,WSURF,RWalkinQ,TSURF,TRh,               -131    24
     6                 CBF,CBF1,CBF2,EON,PLRCFM,PLRC,PLRH,QCM1,                 /SYSTD/  8
     7                 QCM2,QHM1,EIRM1,EIRM2,EIR,OFKW,QCT,QCS,                  /SYSTD/  9
     8                 WRMAX,WRMIN,CFMRAT,QdistG,QdistL,RON,QHT,                /SYSTD/ 10
     9                 TPOMIN,POMIN,QHSUP,QRSENS,QRLAT,QRREC,QRREJ,             /SYSTD/ 11
     1                 RCOMKW,RDEFKW,RAUXKW,ECFMP,CFMIN,CINFP,DT,DW,            /SYSTD/ 12
     2                 EWB,IC,NATTSP,Q,RETR,SLOAD,QLSUMP,T,TCHUM,TEND,          /SYSTD/ 13
     3                 TS,hgbmin,HPDefE,EconoOnly,TDuctEnv,                     -044e1   1
     4                 QCUNMT,CapRh,CapRph,CapRc                                HVAC25   3
      REAL             SYSTD(113)                                               HVAC19  13
      EQUIVALENCE      (SYSTD(1),TH)                                            RemPA   65
      COMMON  /ENDKY / LightEndUse,  TaskEndUse, MiscEndUse, HeatEndUse,        /ENDKY/  2
     &                 CoolEndUse , HtRejEndUse,  AuxEndUse, VentEndUse,        /ENDKY/  3
     &                 RefgEndUse ,  SuppEndUse,  DHWEndUse, ExtEndUse          /ENDKY/  4
      INTEGER          LightEndUse,  TaskEndUse, MiscEndUse, HeatEndUse,        /ENDKY/  5
     &                 CoolEndUse , HtRejEndUse,  AuxEndUse, VentEndUse,        /ENDKY/  6
     &                 RefgEndUse ,  SuppEndUse,  DHWEndUse,  ExtEndUse         /ENDKY/  7
      COMMON /SHP   / QCRUN,QCLOAD,QCGAS,QCAUX,QCGSLD,QCGSUP,                   /SHP/    2
     1                QCWAS,QCWASU,QCGSAV,QCFAN,                                /SHP/    3
     2                QHRUN,QHLOAD,QHGAS,QHAUX,QHGSLD,QHGSUP,                   /SHP/    4
     3                QHWAS,QHWASU,QHGDFR,QHFAN,          CUR(25),              /SHP/    5
     4                GSAV1,GASV2,PCH,ISZCZ,GCAP(2),GEDB,QHDFRG,                -044c1   1
     5                GRPM,PLRSUP,CFMCYC,CLPLR,CFMVVT,QHZHP,PCCEDB,             /SHP/    7
     6                IHPREP,IHPOUT,IHPHRR,IHPHRN,IRST,IREN                     /SHP/    8
      COMMON /SHPZ  / QCRUNZ,QCLOADZ,QCGASZ,QCAUXZ,QCGSLDZ,QCGSUPZ,             /SHP/    9
     1                QCWASZ,QCWASUZ,QCGSAVZ,QCFANZ,                            /SHP/   10
     2                QHRUNZ,QHLOADZ,QHGASZ,QHAUXZ,QHGSLDZ,QHGSUPZ,             /SHP/   11
     3                QHWASZ,QHWASUZ,QHGDFRZ,QHFANZ                             /SHP/   12
      DIMENSION       SHP(60),SHPZ(20)                                          /SHP/   13
      EQUIVALENCE     (SHP,QCRUN),(SHPZ,QCRUNZ)                                 /SHP/   14
     1               ,(DFM1,CUR(18)),(DFM2,CUR(19)),(DFM3,CUR(20))              /SHP/   15
      COMMON /SSPDAT/  PLRCS,QCCKWS,QCCMPS,PLRHS,QHCKWS,QHCMPS                  /SSPDAT/ 2
     $                ,PLRFS,PLRFCS,PLRFHS,sspss                                /SSPDAT/ 3
     $                ,PLRCZ,QCCKWZ,QCCMPZ,PLRHZ,QHCKWZ,QHCMPZ                  /SSPDAT/ 4
     $                ,PLRFZ,PLRFCZ,PLRFHZ,sspsz                                /SSPDAT/ 5
     $                ,ISSPF,IWCCF,IPCCF,SSPSAV                                 /SSPDAT/ 6
      DIMENSION        SSPD(24)                                                 JJHfix   1
      EQUIVALENCE      (SSPD(1),PLRCS)                                          /SSPDAT/ 8
      COMMON  /TIME  / IDOY, IYR, IMO, IDAY, IHR,                               Time     4
     &                 ISCMO, ISCDAY, ISCHR, IDOW, ISCDOW, iDSdates(6),         -044e5   1
     &                 iTimeFlg, iDSFlg, iDDFlg, InitialFlg, LeapYr,            Time     6
     &                 CLOCK(10), MONDSC(13), MONLEN(12), MONSDA(12)            HR      12
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
      COMMON  /ZONED / EXCFM,FH,FC,CFMZ,QHBZ,QOVER,THZ,TCZ,ERMAX,ERMIN,         /ZONED/  2
     1                 TRY,FTD,CORINT,G0,G1,G2,G3,SIGMAG,TL,ZQHR,TAVE,          /ZONED/  3
     2                 ZQH,ZQC,FCHPS(15),ACFM,ZKW,TCMINZ,THMAXZ,                /ZONED/  4
     3                 ERMAXM,ERMINM,THR,CSSCND,CSSVEC,HENOW,QGWIN,             /ZONED/  5
     4                 QSNABT,QGOPWL,QGVEC,CFMCVT,SSFPT,CFMVNT,ZFANKW,          /ZONED/  6
     5                 ZKWCBT,ZKWHBT,ZCapRbbrd, XC,ZC,XH,ZH                     -044e2   7
      REAL ZONED(63)                                                            -044e2   8
      EQUIVALENCE (ZONED(1),EXCFM)                                              /ZONED/  9
      COMMON  /DESHRQ/ NDESDY, IDDTYP(2), DESHRQ(360)                           Time     3
C                                                                               PIU     19
      COMMON  /LENS/   MWFLEN, MRLEN, MSHLEN, MWNLEN, MDRLEN, MXLEN,            /LENS/   2
     1                 MULEN, MZLEN, MIWLEN, MFLLEN,                            /LENS/   3
     2                 LMTB, LLDSOU, MSTLEN, LSTFT, MWLLEN                      /LENS/   4
      COMMON  /PTRBGN/ IWFB, IWPB, ICONSB, IGTB, IWLB, IGEOB, ISHADB,           /PTRBGN/ 2
     &                 IWINB, IDRB, IEWB, IUGB, ISPB, IIWPB, IIWB,              /PTRBGN/ 3
     &                 IFLB, ISPCDB, IOTHB, ILHB, IZQCMB, ISSHDB,               /PTRBGN/ 4
     &                 IOHFIB, IZLSK, IZLSL, ISTFB, ILSSH                       PV2      1
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     /PNTRS/  3
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        /PNTRS/  4
      COMMON  /SIZE/   LENGTH,NWF,NWPAR,NCONS,NGT,NWL,NGEO,                     /SIZE/   2
     1                 NGSHAD, NWIN, NDOOR, NEW, NUG, NSPl, NIWP, NIW,          /SIZE/   3
     &                 NFL, NBR, NOTH, NITH, NOPSRF,                            /SIZE/   4
     &                 NSURF, NSSHD, NSHTOT, NEWshade                           /SIZE/   5
C     LOGICAL DEBUG                                                             PIU     20
      REAL LSR(4)                                                               -044e  227
                                                                                -044e  228
      QGBB = 0.0                                                                -044e  229
      QGZC = 0.0                                                                -044e  230
      DO I=1,4                                                                  -044e  231
        LSR(I) = 1.0                                                            -044e  232
      ENDDO                                                                     -044e  233
C     DEBUG = .FALSE.                                                           PIU     22
C     IF ((IRSCH .NE. 0) .AND. (IREPRT(2,35) .EQ. 1))  DEBUG = .TRUE.           IREPRT  64
      IF(IREPRT(2,27).NE.0) THEN                                                -036   452
        ISSPF = 1                                                               -036   453
      ELSE                                                                      -036   454
        ISSPF = 0                                                               -036   455
      ENDIF                                                                     -036   456
c                                                                               PIU     24
c              If we are in a VAV system there is the possibiltiy that          PIU     25
c              the zones can ask for more air than the fan can supply.          PIU     26
c              This condition was checked for in DKTEMP, and the ratio          PIU     27
c              of what the zones may ask for vs. the supply capacity is         PIU     28
c              stored in CFMRAT.                                                PIU     29
c                                                                               PIU     30
C              SAVE THE HEAT FLAG SO IT CAN BE RESET AT THE ZONE LEVEL          PIU     31
      HONS = HON                                                                PIU     32
C********************** run function : PIU-0 ***********************            PIU     33
      IF( MSYSF(54) .NE. 0 )   CALL  FINTS( MSYSF(54), 0. )                     PIU     34
C*******************************************************************            PIU     35
c                                                                               HVAC1  490
c              set circulation-loop restrictions on heating and                 HVAC1  491
c              cooling capacity for use in DKTEMP                               HVAC1  492
      IF (<HW-LOOP> .NE. 0)  THEN                                               HVAC1  493
c              heating coil is hot water - pointer to loop                      HVAC1  494
        JLP   = <HW-LOOP>                                                       HVAC1  495
        CapRh = <lp;HCAP_RATIO>                                                 HVAC16 106
      ELSE                                                                      HVAC1  497
        CapRh = 1.0                                                             HVAC1  498
      ENDIF                                                                     HVAC1  499
      IF (<PHW-LOOP> .NE. 0)  THEN                                              HVAC1  500
c              preheat coil is hot water - pointer to loop                      HVAC1  501
        JLP    = <PHW-LOOP>                                                     HVAC1  502
        CapRph = <lp;HCAP_RATIO>                                                HVAC16 107
      ELSE                                                                      HVAC1  504
        CapRph = 1.0                                                            HVAC1  505
      ENDIF                                                                     HVAC1  506
      IF (<CHW-LOOP> .NE. 0)  THEN                                              HVAC1  507
c              cooling coil is hot water - pointer to loop                      HVAC1  508
        JLP   = <CHW-LOOP>                                                      HVAC1  509
        CapRc = <lp;CCAP_RATIO>                                                 HVAC16 108
      ELSE                                                                      HVAC1  511
        CapRc = 1.0                                                             HVAC1  512
      ENDIF                                                                     HVAC1  513
c              If a water-cooled condenser                                      -044e  234
      IF (<CW-LOOP> .ne. 0) THEN                                                -047k   64
        Jlp = <CW-LOOP>                                                         -044e  236
c              If loop pumps scheduled off (-1), or hi/lo alarm, make           -044e  237
c              sure cooling and/or heating is off                               -044e  238
        IF (<lp;CTRL_MODE> .EQ. -1  .or.                                        -044e  239
     &     (<HEAT-SOURCE> .eq. 4  .and.  ! connected to WLHP                    -044e  240
     &     (<lp;COIL_EWTest> .lt. <lp:MIN-ALARM-T>  .or.                        -044e  241
     &      <lp;COIL_EWTest> .gt. <lp:MAX-ALARM-T>)))  THEN                     -044e  242
          CON   = 0.                                                            -044e  243
          CapRc = 0.                                                            -044e  244
          IF (<HEAT-SOURCE> .eq. 4)  CapRh = 0.                                 -044e  245
        ENDIF                                                                   -044e  246
      ENDIF                                                                     -044e  247
c                                                                               HVAC1  514
      CALL DKTEMP                                                               PIU     37
      CFMI = 0.                                                                 PIU     38
      RCFMI = 0.                                                                PIU     39
      RCFMTX = 0.                                                               PIU     40
      <DCVOAcfmS> = 0.0                                                         -044c  584
      <DCVOAcfmFracCrit> = 0.0                                                  -044c  585
C              LOOP THROUGH THE ZONES                                           PIU     41
      ZP1 = ISZ                                                                 PIU     42
      DO 490 NZ=1,NSZ                                                           PIU     43
C              ZERO THE ZONE DATA                                               PIU     44
      DO 20 I=1,63                                                              -044e2  64
   20 ZONED(I) = 0.                                                             PIU     46
      DO 25 I=1,8                                                               -044e2  65
   25 ZDPIU(I) = 0.                                                             PIU     48
      ZP2 = <ZP2>                                                               PIU     49
      <ERMAX> = 0.                                                              PIU     50
      <ERMIN> = 0.                                                              PIU     51
      THZ = -999.                                                               PIU     52
      TCZ = 999.                                                                PIU     53
      TFZ = -999.                                                               PIU     54
      ZP1S = ZP1                                                                PIU     55
C              SET ZONE FAN FLAG                                                PIU     56
      ZFONLY = 0.                                                               PIU     57
      IF (<NIGHT-CYCLE-CTRL> .EQ. 3)  ZFONLY = 1.                               PIU     58
c              if exhaust made up by infiltration                               -046   257
      IF (<EXHAUST-SOURCE> .eq. 2  .or.                                         -047b   28
     &    <EXHAUST-SOURCE> .eq. 3)  Call ZoneExhaust(9, xx)  ! power            -047b   29
C              IF FANS ARE ON, DO PLENUMS LAST.  OTHERWISE, DO WITH             PIU     59
C               THE REST OF THE ZONES.                                          PIU     60
      IF ((<ZONE-TYPE> .EQ. 3) .AND. (FON .NE. 0.))  GO TO 490                  PIU     61
      ZMULT = <MULTIPLIER>                                                      PIU     62
c              Exhaust airflow                                                  -044e  248
      IF (<EXHAUST-SOURCE> .eq. 1)           ! makeup by system OA              -046   259
     &  Call ZoneExhaust(1, <CFMAX>*CFMRAT)  ! exclude induced air              -046   260
C              SKIP SETTING EXTRACTION RATES FOR UNCONDITIONED ZONES            PIU     64
      IF (<ZONE-TYPE> .NE. 1)  GO TO 90                                         PIU     65
c              Set reheat coil hourly available capacity ratio                  -044b  101
      IF(<HEATCAPZ> .LT. 0.0) THEN                                              -044b  102
        IF (<HW-LOOPZ> .NE. 0)  THEN                                            -044b  103
c              set hot water circulation loop restrictions                      -044b  104
C              on zonal heating capacity                                        -044b  105
          JLP    = <HW-LOOPZ>                                                   -044b  106
          ZCapRh = <lp;HCAP_RATIO>                                              -044b  107
        ELSE                                                                    -044b  108
C              Not hot water - no on zonal heating restriction                  -044b  109
          ZCapRh = 1.0                                                          -044b  110
        ENDIF                                                                   -044b  111
      ELSE                                                                      -044b  112
C              no coil so no zonal heating capacity                             -044b  113
        ZCapRh = 0.0                                                            -044b  114
      ENDIF                                                                     -044b  115
      IF (<BBRD-LOOPZ> .NE. 0)  THEN                                            HVAC1  523
c              zone heating coil is hot water - pointer to loop                 HVAC1  524
        JLP    = <BBRD-LOOPZ>                                                   HVAC1  525
        ZCapRbbrd = <lp;HCAP_RATIO>                                             HVAC16 110
      ELSE                                                                      HVAC1  527
        ZCapRbbrd = 1.0                                                         HVAC1  528
      ENDIF                                                                     HVAC1  529
      ZHON = 0.                                                                 PIU     66
C              SET HEAT FLAG ON IF HEATING IS ALLOWED AND REHEAT EXISTS         PIU     67
      IF (<REHEAT-DELTA-TZ>*ZCapRh .GT. 0.)  ZHON = HONS                        HVAC1  530
C              SAME FOR BASEBOARDS                                              PIU     69
      IF ((<BASEBOARD-CTRL> .EQ. 1) .AND.                                       HVAC1  531
     $     (<BASEBOARD-RATING>*ZCapRbbrd .LT. 0.))  ZHON = HONS                 HVAC1  532
      HON = ZHON                                                                PIU     72
c              available reheat temp rise                                       HVAC1  533
      dTreheat = <REHEAT-DELTA-TZ>*HON*ZCapRh                                   HVAC1  534
C              GET TEMPERATURE OF INDUCED AIR AT MAXIMUM HEATING AND            PIU     73
C              COOLING.                                                         PIU     74
      TIH = <TNOW>                                                              PIU     75
      TIC = <TNOW>                                                              PIU     76
      TIAZ = 0.                                                                 PIU     77
      IF (FON .LE. 0.)  GO TO 26                                                PIU     78
      CFMIN = Max(<CFMAX>*Min(<MINCFMR>,CFMRAT), EXCFM)                         -044e  250
      IF (<IND-AIRZ-ZD> .LE. 0)  GO TO 26                                       PIU     80
      CFMIH = <ZFCFMD>                                                          PIU     81
      CFMIC = 0.                                                                PIU     82
      IF (<TERMINAL-TYPE> .EQ. 3)  CFMIH = CFMIH - CFMIN                        PIU     83
      IF (<TERMINAL-TYPE> .EQ. 3)  CFMIC = AMAX1(0.,<ZFCFMD>-                   PIU     84
     1 <CFMAX>*CFMRAT)                                                          PIU     85
      ZP1 = <IND-AIRZ-ZD>                                                       PIU     86
      ZP2 = <ZP2>                                                               PIU     87
      IF (<CFMIDT> .LE. 0.) GO TO 26                                            PIU     88
C              TEMPERATURE OF AIR RETURNING FROM CORE                           PIU     89
      TIAZ = <TNOW>                                                             PIU     90
      IF(<RCFMT> .GT. 0.) TIAZ = TIAZ + <QP>/(CONS(1)*<RCFMT>)                  PIU     91
C              FRACTION OF INDUCED AIR THAT IS AVAILABLE FROM                   PIU     92
C              INDUCED AIR ZONE                                                 PIU     93
      FRACIZ = AMIN1(1., <RCFMT>*<MULTIPLIER>/<CFMIDT>)                         PIU     94
      ZP1 = ZP1S                                                                PIU     95
      ZP2 = <ZP2>                                                               PIU     96
C              INDUCED AIR TEMPERATURES AT HEATING AND COOLING                  PIU     97
      IF (CFMIH .GT. 0.)  TIH = FRACIZ*TIAZ + (1.-FRACIZ)*<TNOW>                PIU     98
      IF (CFMIC .GT. 0.)  TIC = FRACIZ*TIAZ + (1.-FRACIZ)*<TNOW>                PIU     99
C              SET THE BASEBOARD FLAG                                           PIU    100
   26 IBF = 0                                                                   PIU    101
      ZP1 = ZP1S                                                                PIU    102
      ZP2 = <ZP2>                                                               PIU    103
      IF ((<BASEBOARD-RATING>*ZCapRbbrd .LT. 0.) .AND.                          HVAC1  535
     $    (<BASEBOARD-CTRL> .EQ. 1) .AND. (HON .NE. 0.))  IBF = 1               HVAC1  536
      BBR = 0.                                                                  PIU    106
      IF (IBF .NE. 0)  BBR = <BASEBOARD-RATING>                                 PIU    107
C              PICK HEATING, COOLING, AND FAN SET POINTS                        PIU    108
      IF ((FON .EQ. 0.) .AND. (IBF .EQ. 0) .AND. (ZFONLY .EQ. 0.))              PIU    109
     1 GO TO 90                                                                 PIU    110
      THZ    = <THZ>                                                            PIU    111
      TCZ    = <TCZ>                                                            PIU    112
      THR    = <THROTTLING-RANGE>                                               PIU    113
      IF (<TERMINAL-TYPE> .NE. 4)  GO TO 28                                     PIU    114
      TFZ = SchVal(<ZONE-FAN-SCH>, THZ+THR)                                     Time   292
C              Do not let ZONE fan setpoint be below heating setpoint           -037    23
      TFZ = AMAX1(TFZ, THZ+THR)                                                 -037    24
   28 CONTINUE                                                                  PIU    118
CDEBUG                                                                          PIU    119
C     IF (DEBUG) PRINT 9001,ZP1,ZP2,<TERMINAL-TYPE>,<ZONE-TYPE>,                PIU    120
C    1                      FON,ZFONLY,THZ,TCZ,TIAZ,CFMIN,CFMIH,CFMIC,          PIU    121
C    2                      FRACIZ,TIH,TIC                                      PIU    122
C9001 FORMAT(1X,6HZP1 = ,I5,4X,6HZP2 = ,I5,4X,9HT-TYPE = ,I1,4X,                PIU    123
C    1 9HZ-TYPE = ,I1,4X,6HFON = ,F4.1,4X,9HZFONLY = ,F4.1,4X,                  PIU    124
C    2 6HTHZ = ,F10.3,4X,6HTHC = ,F10.3/1X,7HTIAZ = ,F10.3,2X,                  PIU    125
C    3 8HCFMIN = ,E10.3,2X,8HCFMIH = ,E10.3,2X,8HCFMIC = ,E10.3,2X,             PIU    126
C    4 9HFRACIZ = ,F10.3,                                                       PIU    127
C    5 2X,6HTIH = ,F10.3,2X,6HTIC = ,F10.3)                                     PIU    128
      IF ((FON .EQ. 0.) .AND. (ZFONLY .EQ. 1.))  GO TO 80                       PIU    129
      IF (FON .EQ. 0.)  GO TO 90                                                PIU    130
C              REGULAR VAV OR CONSTANT VOLUME                                   PIU    131
      IF (<TERMINAL-TYPE> .NE. 1)  GO TO 30                                     -035   152
      TCMINZ = TC                                                               PIU    133
      THMAXZ = TC + dTreheat                                                    HVAC1  537
      XC      = CONS(1)*<CFMAX>*CFMRAT                                          -044e2  66
      <ERMAX> = XC * (<TNOW>-TCMINZ)                                            -044e2  67
      ZC      = CONS(1)*CFMIN                                                   -044e2  68
      ERMAXM  = ZC * (<TNOW>-TCMINZ)                                            -044e2  69
      XH      = CONS(1)*Min(<CFMAXH>,<CFMAX>*CFMRAT)                            -044e2  70
      <ERMIN> = XH * (<TNOW>-THMAXZ)                                            -044e2  71
      ZH      = ZC                                                              -044e2  72
      ERMINM  = ERMAXM                                                          -044e2  73
      ERFOFF  = ERMAXM                                                          -044e2  74
      ERFON   = ERMAXM                                                          -044e2  75
CDEBUG                                                                          PIU    147
C     IF (DEBUG) PRINT 9003,(<ZONE-NAME>,II=1,4),IHR,IDAY,IMO,                  PIU    148
C    1 TCMINZ,THMAXZ,CFMIN,CFMRAT,<TNOW>,<ERMAX>,<ERMIN>,                       PIU    149
C    2 ERMINM,ERMAXM,ERFON,ERFOFF                                               PIU    150
C9003 FORMAT(1X,4A4,4X,6HIHR = ,I2,2X,7HIDAY = ,I2,2X,6HIMO = ,I2,              PIU    151
C    1 2X,9HTCMINZ = ,E10.4,2X,9HTHMAXZ = ,E10.4,                               PIU    152
C    2 2X,8HCFMIN = ,E10.4/1X,9HCFMRAT = ,E10.4,2X,7HTNOW = ,E10.4,             PIU    153
C    3 2X,8HERMAX = ,E10.4,2X,8HERMIN = ,E10.4,2X,9HERMINM = ,E10.4,2X,         PIU    154
C    4 9HERMAXM = ,E10.4/1X,8HERFON = ,E10.4,2X,9HERFOFF = E10.4)               PIU    155
      GO TO 90                                                                  PIU    156
C              SERIES PIU                                                       PIU    157
   30 IF (<TERMINAL-TYPE> .NE. 3)  GO TO 40                                     PIU    158
      TCMINZ = (<CFMAX>*CFMRAT*(TC+<ZONE-FAN-DT>) + (<ZFCFMD>                   PIU    159
     1 -<CFMAX>*CFMRAT)*(TIC+<ZONE-FAN-DT>))/<ZFCFMD>                           PIU    160
      THMAXZ = (CFMIN*TC + (<ZFCFMD>-CFMIN)*TIH)/<ZFCFMD>                       -044b  116
     $           + <ZONE-FAN-DT> + dTreheat                                     -044b  117
      XC      = CONS(1)*<ZFCFMD>                                                -044e2  76
      <ERMAX> = XC * (<TNOW>-TCMINZ)                                            -044e2  77
      ZC      = XC                                                              -044e2  78
      ERMAXM  = CONS(1)*(CFMIN*(<TNOW>-TC-<ZONE-FAN-DT>)                        -044e2  79
     &                 + (<ZFCFMD>-CFMIN)*(<TNOW>-TIH-<ZONE-FAN-DT>))           -044e2  80
      XH      = CONS(1)*<ZFCFMD>                                                -044e2  81
      <ERMIN> = XH * (<TNOW>-THMAXZ)                                            -044e2  82
      ZH      = ZC                                                              -044e2  83
      ERMINM  = ERMAXM                                                          -044e2  84
      ERFOFF  = ERMAXM                                                          -044e2  85
      ERFON   = ERMAXM                                                          -044e2  86
C     IF (DEBUG) PRINT 9003,(<ZONE-NAME>,II=1,4),IHR,IDAY,IMO,                  PIU    176
C    1 TCMINZ,THMAXZ,CFMIN,CFMRAT,<TNOW>,<ERMAX>,<ERMIN>,                       PIU    177
C    2 ERMINM,ERMAXM,ERFON,ERFOFF                                               PIU    178
      GO TO 90                                                                  PIU    179
C              PARALLEL PIU TERMINAL UNIT                                       PIU    180
   40 IF (<TERMINAL-TYPE> .NE. 4)  GO TO 90                                     PIU    181
      TCMINZ = TC                                                               PIU    182
      THMAXZ = (CFMIN*TC + <ZFCFMD>*(TIH+<ZONE-FAN-DT>))                        -044b  118
     $         /(CFMIN+<ZFCFMD>) + dTreheat                                     -044b  119
      XC      = CONS(1)*<CFMAX>*CFMRAT                                          -044e2  87
      <ERMAX> = XC * (<TNOW>-TCMINZ)                                            -044e2  88
      XH      = CONS(1)*(CFMIN+<ZFCFMD>)                                        -044e2  89
      <ERMIN> = XH * (<TNOW>-THMAXZ)                                            -044e2  90
      ZH      = XH                                                              -044e2  91
      ERMINM  = CONS(1)*(CFMIN*(<TNOW>-TCMINZ)                                  -044e2  92
     &                 + <ZFCFMD>*(<TNOW>-TIH-<ZONE-FAN-DT>))                   -044e2  93
      IF (TFZ .le. TCZ-THR) THEN                                                -044e2  94
        ZC     = CONS(1)*CFMIN                                                  -044e2  95
        ERMAXM = ZC * (<TNOW>-TCMINZ)                                           -044e2  96
        ERFON  = CONS(1)*(CFMIN*(TFZ-TCMINZ)                                    -044e2  97
     &                  + <ZFCFMD>*(TFZ-TIH-<ZONE-FAN-DT>))                     -044e2  98
        ERFOFF = CONS(1)*CFMIN*(TFZ-TCMINZ)                                     -044e2  99
      ELSE                                                                      -044e2 100
        ZC     = ZH                                                             -044e2 101
        ERMAXM = ERMINM                                                         -044e2 102
        CFMTFZ = CFMIN + (<CFMAX>*CFMRAT-CFMIN)*(TFZ-TCZ+THR)/(2.*THR)          -044e2 103
        ERFON  = CONS(1)*(CFMTFZ*(TFZ-TCMINZ)                                   -044e2 104
     &                  + <ZFCFMD>*(TFZ-TIH-<ZONE-FAN-DT>))                     -044e2 105
        ERFOFF = CONS(1)*CFMTFZ*(TFZ-TCMINZ)                                    -044e2 106
      ENDIF                                                                     -044e2 107
CDEBUG                                                                          PIU    206
C     IF (DEBUG)  PRINT 9003,(<ZONE-NAME>,II=1,4),IHR,IDAY,IMO,                 PIU    207
C    1 TCMINZ,THMAXZ,CFMIN,CFMRAT,<TNOW>,<ERMAX>,<ERMIN>,                       PIU    208
C    2 ERMINM,ERMAXM,ERFON,ERFOFF                                               PIU    209
      GO TO 90                                                                  PIU    210
C              ZONE FANS ARE ON, BUT CENTRAL FANS ARE OFF                       PIU    211
   80 IF ((<TERMINAL-TYPE> .NE. 3) .AND. (<TERMINAL-TYPE> .NE. 4))              PIU    212
     1 GO TO 90                                                                 PIU    213
      IF (<TNOW> .GT. THZ-THR)  ZFONLY = 0.                                     PIU    214
      IF (ZFONLY .EQ. 0.)  GO TO 90                                             PIU    215
      THMAXZ = TIH + <ZONE-FAN-DT> + dTreheat                                   HVAC1  541
      TCMINZ = TIC + <ZONE-FAN-DT>                                              PIU    217
      XH      = CONS(1)*<ZFCFMD>                                                -044e2 108
      <ERMIN> = XH * (<TNOW>-THMAXZ)                                            -044e2 109
      XC      = 0.                                                              -044e2 110
      <ERMAX> = 0.                                                              -044e2 111
      ZH      = 0.                                                              -044e2 112
      ERMINM  = 0.                                                              -044e2 113
      ZC      = 0.                                                              -044e2 114
      ERMAXM  = 0.                                                              -044e2 115
   90 CALL TEMDEV(0)                                                            PIU    222
C              IF ZONE IS UNCONDITIONED, SKIP                                   PIU    223
      IF (<ZONE-TYPE> .NE. 1)  GO TO 470                                        PIU    224
C              IF ALL FANS ARE OFF, SKIP TO BASEBOARD AND ZONE COIL             PIU    225
C              FUEL USE CALCULATIONS                                            PIU    226
      IF ((FON .EQ. 0.) .AND. (ZFONLY .EQ. 0.))  GO TO 450                      PIU    227
C              IF ONLY THE ZONE FANS ARE ON, GO CALCULATE THE                   PIU    228
C              CFMS                                                             PIU    229
      IF ((FON .EQ. 0.) .AND. (ZFONLY .EQ. 1.))  GO TO 370                      PIU    230
      TAVE = (<TNOW>+<TPAST>)*0.5                                               PIU    231
C              ESTIMATE INDUCED AIR TEMPERATURE                                 PIU    232
      IF ((<TERMINAL-TYPE> .NE. 3) .AND. (<TERMINAL-TYPE> .NE. 4))              PIU    233
     1 GO TO 100                                                                PIU    234
      CFMIND = <CFMIND>                                                         PIU    235
      IF(<TERMINAL-TYPE> .EQ. 4) CFMIND=AMIN1(<CFMIND>,<ZFONF>*<ZFCFMD>)        -037    25
      TL = TAVE                                                                 PIU    236
      IF (CFMIND .GT. 0.)  TL = TIAZ*FRACIZ + (1.-FRACIZ)*TAVE                  PIU    237
  100 CONTINUE                                                                  PIU    238
C     IF (DEBUG)  PRINT 9010,TAVE,TL,CFMIND                                     PIU    239
C9010 FORMAT(1X,7HTAVE = ,F10.3,2X,5HTL = ,F10.3,2X,9HCFMIND = ,                PIU    240
C    1 E10.3)                                                                   PIU    241
      IF (TAVE .LE. THZ+THR)  GO TO 300                                         PIU    242
      IF (TAVE .GE. TCZ-THR)  GO TO 200                                         PIU    243
C              IN DEADBAND.  SET SUPPLY CFM.                                    PIU    244
      CFMZ = CFMIN                                                              PIU    245
      <CFMZ> = CFMZ                                                             PIU    246
C              SET TOTAL CFM (SUPPLY PLUS INDUCED FROM PLENUM)                  PIU    247
      ZCFMT = CFMZ                                                              PIU    248
      IF (<TERMINAL-TYPE> .EQ. 3)  ZCFMT = <ZFCFMD>                             PIU    249
      IF (<TERMINAL-TYPE> .EQ. 4)  ZCFMT = CFMZ + <ZFONF>*<ZFCFMD>              PIU    250
      GO TO 400                                                                 PIU    251
C              COOLING CALCULATIONS.  GET SUPPLY CFM TO HANDLE LOAD.            PIU    252
C              IF SERIES PIU                                                    PIU    253
  200 IF (<TERMINAL-TYPE> .NE. 3)  GO TO 210                                    PIU    254
C              GET CFM AT MAX COOLING                                           PIU    255
      ZCFM = <QNOW>/(CONS(1)*(TAVE-TC-<ZONE-FAN-DT>))                           PIU    256
      IF (ZCFM .GE. <ZFCFMD>)  GO TO 205                                        PIU    257
      ZCFM = <QNOW>/(CONS(1)*(TL-TC)) - (<ZFCFMD>*(TAVE-TL-                     PIU    258
     1       <ZONE-FAN-DT>))/(TL-TC)                                            PIU    259
  205 ZCFM = AMIN1(ZCFM,<CFMAX>*CFMRAT)                                         PIU    260
      CFMZ = AMAX1(ZCFM,CFMIN)                                                  PIU    261
      <CFMZ> = CFMZ                                                             PIU    262
C              SET TOTAL CFM                                                    PIU    263
      ZCFMT = <ZFCFMD>                                                          PIU    264
      GO TO 400                                                                 PIU    265
C              IF PARALLEL PIU                                                  PIU    266
  210 IF (<TERMINAL-TYPE> .NE. 4)  GO TO 220                                    PIU    267
      ZCFM = (<QNOW>-<ZFONF>*<ZFCFMD>*CONS(1)*(TAVE-(TL+<ZONE-FAN-DT>)))        -037    26
     $       /(CONS(1)*(TAVE-TC))                                               -037    27
C     IF (DEBUG) PRINT 9011,ZCFM,<ZFCFMD>,<QNOW>,TAVE,TL,TC,                    -037    28
C    $ <ZFONF>,CFMIN,CFMRAT,<CFMAX>                                             -037    29
C9011 FORMAT(                                                                   -037    30
C    $ ' ZCFM = ',F10.3,4X,'ZFCFMD= ',F10.3,4X,                                 -037    31
C    $ 'QNOW  = ',F10.3,4X,'TAVE  = ',F10.3/                                    -037    32
C    $ ' TL   = ',F10.3,4X,'TC    = ',F10.3,4X,                                 -037    33
C    $ 'ZFONF = ',F10.3,4X,'CFMIN = ',F10.3/                                    -037    34
C    $ ' CFMRAT=',F10.3,4X,'CFMAX = ',F10.3)                                    -037    35
      ZCFM = AMIN1(ZCFM,<CFMAX>*CFMRAT)                                         -037    36
      CFMZ = AMAX1(ZCFM,CFMIN)                                                  -037    37
      ZCFM = AMIN1(ZCFM,<CFMAX>*CFMRAT)                                         PIU    278
      CFMZ = AMAX1(ZCFM,CFMIN)                                                  PIU    279
      <CFMZ> = CFMZ                                                             PIU    280
C              SET TOTAL CFM                                                    PIU    281
      ZCFMT = CFMZ + <ZFONF>*<ZFCFMD>                                           PIU    282
      GO TO 400                                                                 PIU    283
C              OTHERWISE                                                        PIU    284
  220 ZCFM = <QNOW>/(CONS(1)*(TAVE-TC+.00001))                                  PIU    285
      ZCFM = AMIN1(ZCFM,<CFMAX>*CFMRAT)                                         PIU    286
      CFMZ = AMAX1(ZCFM,CFMIN)                                                  PIU    287
      <CFMZ> = CFMZ                                                             PIU    288
      ZCFMT = CFMZ                                                              PIU    289
      GO TO 400                                                                 PIU    290
C              HEATING CALCULATIONS                                             PIU    291
  300 IF (<TERMINAL-TYPE> .NE. 3)  GO TO 310                                    PIU    292
C              SERIES                                                           PIU    293
C              GET SUPPLY CFM                                                   PIU    294
      ZCFM = CFMIN                                                              PIU    295
      CFMZ = ZCFM                                                               PIU    296
      <CFMZ> = CFMZ                                                             PIU    297
      ZCFMT = <ZFCFMD>                                                          PIU    298
C              GET LOWEST HEATING SUPPLY TEMPERATURE (I.E., WITHOUT             PIU    299
C              REHEAT).  SKIP IF NO HEATING CAPABILITY.                         PIU    300
      IF (ZHON .EQ. 0.)  GO TO 400                                              PIU    301
      THSMN = (CFMIN*(TC+<ZONE-FAN-DT>) + (<ZFCFMD>-CFMIN)*(TL+                 PIU    302
     1         <ZONE-FAN-DT>))/<ZFCFMD>                                         PIU    303
C              GET HEAT ADDITION CAPABILITY AT THSMN                            PIU    304
      ZQHSMN = CONS(1)*<ZFCFMD>*(TAVE-THSMN)                                    PIU    305
C              IF PLENUM WITH NO REHEAT CAN DO ALL THE HEATING                  PIU    306
C              NECESSARY, SKIP                                                  PIU    307
      IF (ZQHSMN .LE. <QNOW>)  GO TO 400                                        PIU    308
C              OTHERWISE, GET THE COIL ENERGY NECESSARY                         PIU    309
      ZQH = AMIN1(<QNOW>-ZQHSMN,0.)                                             PIU    310
C              IF PLENUM WITH NO REHEAT IS ACTUALLY COOLING,                    PIU    311
C              CALL THIS THE REHEAT PORTION                                     PIU    312
      ZQHR = AMIN1(0.,-ZQHSMN)                                                  PIU    313
      GO TO 400                                                                 PIU    314
  310 IF (<TERMINAL-TYPE> .NE. 4)  GO TO 320                                    PIU    315
C              PARALLEL PIU                                                     PIU    316
      ZCFM = CFMIN                                                              PIU    317
      CFMZ = ZCFM                                                               PIU    318
      <CFMZ> = CFMZ                                                             PIU    319
      ZCFMT = CFMZ + <ZFCFMD>                                                   PIU    320
      IF (ZHON .EQ. 0.)  GO TO 400                                              PIU    321
      THSMN = (<ZFCFMD>*(TL+<ZONE-FAN-DT>) + CFMIN*TC)/(<ZFCFMD>+CFMIN)         PIU    322
      ZQHSMN = CONS(1)*(<ZFCFMD>+CFMIN)*(TAVE-THSMN)                            PIU    323
      IF (ZQHSMN .LE. <QNOW>)  GO TO 400                                        PIU    324
      ZQH = AMIN1(<QNOW>-ZQHSMN,0.)                                             PIU    325
      ZQHR = AMIN1(0.,-ZQHSMN)                                                  PIU    326
      GO TO 400                                                                 PIU    327
C              OTHERWISE                                                        PIU    328
C              GET CFM TO HANDLE LOAD                                           PIU    329
  320 ZCFM = <QNOW>/(CONS(1)*(TAVE-TC-dTreheat))                                HVAC1  542
      ZCFM = AMAX1(0.,ZCFM)                                                     PIU    331
      ZCFM = AMIN1(ZCFM,<CFMAXH>,<CFMAX>*CFMRAT)                                PIU    332
      CFMZ = AMAX1(ZCFM,CFMIN)                                                  PIU    333
      <CFMZ> = CFMZ                                                             PIU    334
      ZCFMT = CFMZ                                                              PIU    335
      THSMN = TC                                                                HVAC17  31
C              IF NO REHEAT, SKIP                                               PIU    336
      IF (ZHON .EQ. 0.)  GO TO 400                                              PIU    337
C              CALCULATE REHEAT ENERGY                                          PIU    338
      ZQHR = CFMZ*CONS(1)*(TC-TAVE)                                             PIU    339
C              TOTAL ZONE COIL LOAD                                             PIU    340
      ZQH = AMIN1(0.,ZQHR+<QNOW>)                                               PIU    341
C              CHECK EXHAUST CFM                                                PIU    342
      GO TO 400                                                                 PIU    343
C              ZONE FANS ONLY                                                   PIU    344
  370 IF ((<TERMINAL-TYPE> .NE. 3) .AND. (<TERMINAL-TYPE> .NE. 4))              PIU    345
     1 GO TO 450                                                                PIU    346
      ZCFM = 0.                                                                 PIU    347
      CFMZ = ZCFM                                                               PIU    348
      <CFMZ> = CFMZ                                                             PIU    349
      ZCFMT = <ZFCFMD>                                                          PIU    350
      ZQH = <QNOW>                                                              PIU    351
  400 CONTINUE                                                                  -044e  256
CDEBUG                                                                          PIU    354
C     IF (DEBUG)  PRINT 9004,ZCFMT,CFMT,EXCFM                                   PIU    355
C9004 FORMAT(1X,8HZCFMT = ,E10.4,2X,7HCFMT = ,E10.4,2X,8HEXCFM = ,              PIU    356
C    1 E10.4)                                                                   PIU    357
C              SAVE TOTAL CFM INTO ZONE                                         PIU    360
      <CFMT> = ZCFMT                                                            PIU    361
C              INDUCED CFM INTO ZONE                                            PIU    362
      CFMIND = ZCFMT - CFMZ                                                     PIU    363
      <CFMIND> = CFMIND                                                         PIU    364
C              TOTAL SYSTEM CFM                                                 PIU    365
      CFM = CFM + CFMZ*ZMULT                                                    PIU    366
C              TOTAL CFM INDUCED FROM CENTRAL ZONE(S)                           PIU    367
C              SET ZONE RETURN CFM                                              PIU    368
      IF (<IND-AIRZ-ZD> .EQ. -100)  THEN                                        -036   457
        <RCFMT> = AMAX1(0.,CFMZ-EXCFM)                                          -036   458
      ELSE                                                                      -036   459
        <RCFMT> = AMAX1(0.,ZCFMT-EXCFM)                                         -036   460
      ENDIF                                                                     -036   461
      <RCFM> = <RCFMT>                                                          -036   462
      IF (<IND-AIRZ-ZD> .EQ. -100)  THEN                                        -036   463
C              RETURN CFM AND TOTAL CFM IN INDUCED AIR ZONES                    -036   464
        RCFMI = RCFMI + <RCFM>*ZMULT                                            -036   465
        CFMI = CFMI + CFMZ*ZMULT                                                -036   466
      ELSE                                                                      -036   467
C              SUM RETURN CFM IN NON-INDUCED AIR ZONES ZONES                    -036   468
        RCFMTX = RCFMTX + <RCFMT>*ZMULT                                         -036   469
      ENDIF                                                                     -036   470
C              FOR INDUCED AIR ZONES, SUBTRACT OFF FROM                         -036   471
C              THE RETURN AIR THE AIR INDUCED TO PIU BOXES                      -036   472
      IF (<IND-AIRZ-ZD> .GT. 0)  THEN                                           -036   473
        ZP1S = ZP1                                                              -036   474
        ZP1 = <IND-AIRZ-ZD>                                                     -036   475
        ZP2 = <ZP2>                                                             -036   476
        IF(ZP1 .NE. ZP1S) THEN                                                  -036   477
          <RCFM> = AMAX1(0.,<RCFM>-CFMIND*ZMULT)                                -036   478
          RCFMI = AMAX1(0.,RCFMI-CFMIND*ZMULT)                                  -036   479
        ELSE                                                                    -036   480
          <RCFM> = AMAX1(0.,<RCFM>-CFMIND)                                      -036   481
          RCFMTX = AMAX1(0.,RCFMTX-CFMIND)                                      -036   482
        ENDIF                                                                   -036   483
        ZP1 = ZP1S                                                              -036   484
        ZP2 = <ZP2>                                                             -036   485
      ENDIF                                                                     -036   486
  410 CONTINUE                                                                  PIU    389
C              GET ZONE KW AND FAN KW                                           PIU    390
C              ZONE-FAN-KW WAS NEVER MULTIPLIED BY THE CFM                      PIU    391
      IF ((<TERMINAL-TYPE> .EQ. 3) .AND. (FON .GT. 0))  <ZFONF> = 1.            PIU    392
      ZKW = ZKW + <ZONE-FAN-KW>*<ZFONF>*<ZFCFMD>                                -044e  257
      FANKW = FANKW + ZKW*ZMULT                                                 PIU    394
      JEM       = <VENT-E-MZ>                                                   HVAC6  459
      <VENT-EM> = <VENT-EM> + ZKW * ZMULT                                       HVAC6  460
c              exhaust fan                                                      -044e  258
      IF (<EXHAUST-SOURCE> .eq. 1)  ! makeup by system OA                       -046   261
     &  Call ZoneExhaust(9, CFMZ)   ! adjusted flow and power                   -046   262
      ECFM = ECFM + EXCFM*ZMULT                                                 -044e  260
C              CHECK FOR REHEAT DONE BY BASEBOARDS                              PIU    396
      IF (ZQH .EQ. 0.)  GO TO 450                                               PIU    397
      IF (ZFONLY .EQ. 1.)  GO TO 450                                            PIU    398
      IF ((<BASEBOARD-RATING>*ZCapRbbrd .GE. 0.)                                HVAC1  543
     $   .OR. (<BASEBOARD-CTRL> .NE. 1))  GO TO 420                             HVAC1  544
      IF (ZHON .EQ. 0.)  GO TO 470                                              PIU    401
      Q = AMAX1(<BASEBOARD-RATING>*ZCapRbbrd-QHBZ,ZQH)                          HVAC1  545
      ZQH = ZQH - Q                                                             PIU    403
      QHBZ = QHBZ + Q                                                           PIU    404
      QHB = QHB + Q*ZMULT                                                       PIU    405
C     IF (DEBUG) PRINT 9005,<RCFM>,<RCFMT>,<CFMIND>                             PIU    414
C9005 FORMAT(1X,9H+RCFM+ = ,E10.4,2X,10H+RCFMT+ = ,E10.4,2X,                    PIU    415
C    1 11H+CFMIND+ = ,E10.4)                                                    PIU    416
  420 CONTINUE                                                                  HVAC1  546
c                                                                               HVAC1  547
c              save zonal coil flows and loads for circulation loop calcs       HVAC1  548
  450 <COIL_CFMZ>  = ZCFMT                                                      HVAC1  549
        <COIL_EDBZ> = THSMN                                                     HVAC17  32
      <COIL_CYCLEZ> = 1.                                                        HVAC1  560
      <COIL_QZ>     = ZQH                                                       HVAC1  561
      <BBRD_EDB>    = TAVE                                                      HVAC1  562
      <BBRD_Q>      = QHBZ                                                      HVAC1  563
c                                                                               HVAC1  564
C              IF ZONE COILS ARE ELECTRIC                                       PIU    422
      IF (<ZONE-HEAT-SOURCE>.EQ.1)  THEN                                        PIU    423
        X      = ZQH*KWBTU                                                      PIU    424
        ZKW    = ZKW    - X                                                     PIU    425
        SKWQH  = SKWQH  - X*ZMULT                                               PIU    426
        JEM       = <HEAT-E-MZ>                                                 HVAC6  461
        <HEAT-EM> = <HEAT-EM> - X*ZMULT                                         HVAC6  462
      ENDIF                                                                     PIU    428
      IF(<ZONE-HEAT-SOURCE>.LE.1)  QGZC = QGZC - ZQH*ZMULT                      -044e  261
C              IF ZONE COILS ARE GAS OR OIL                                     PIU    429
      IF (<ZONE-HEAT-SOURCE> .EQ. 2 .OR. <ZONE-HEAT-SOURCE> .EQ. 3) THEN        HVAC6  463
        CALL FURNAC(ZQH,<HEATCAPZ>,<ZONE-HEAT-SOURCE>,ZMULT)                    HVAC6  464
        JEM       = <AUX-E-MZ>                                                  HVAC6  465
        <AUX-EM>  = <AUX-EM> + FurnAuxkW                                        HVAC6  466
        JFM       = <HEAT-F-MZ>                                                 HVAC6  467
        <HEAT-FM> = <HEAT-FM> - FFUEL                                           HVAC6  468
        <AUX-FM>  = <AUX-FM>  + FurnAuxFuel                                     HVAC6  469
        QGZC      = QGZC - FFUEL                                                -044e  262
      ENDIF                                                                     HVAC6  470
C              IF BASEBOARDS ARE ELECTRIC                                       PIU    432
      IF (<BASEBOARD-SOURCE>.EQ.1)  THEN                                        PIU    433
        X      = QHBZ*KWBTU                                                     PIU    434
        ZKW    = ZKW    - X                                                     PIU    435
        SKWQH  = SKWQH  - X*ZMULT                                               PIU    436
        JEM       = <HEAT-E-MZ>                                                 HVAC6  471
        <HEAT-EM> = <HEAT-EM> - X*ZMULT                                         HVAC6  472
      ENDIF                                                                     PIU    438
      IF(<BASEBOARD-SOURCE>.LE.1)  QGBB = QGBB - QHBZ*ZMULT                     -044e  263
C              IF BASEBOARDS ARE GAS OR OIL                                     PIU    439
      IF (<BASEBOARD-SOURCE> .EQ. 2 .OR. <BASEBOARD-SOURCE> .EQ. 3) THEN        HVAC6  473
        CALL FURNAC(QHBZ,<BASEBOARD-RATING>,<BASEBOARD-SOURCE>,ZMULT)           HVAC6  474
        JEM       = <AUX-E-MZ>                                                  HVAC6  475
        <AUX-EM>  = <AUX-EM> + FurnAuxkW                                        HVAC6  476
        JFM       = <HEAT-F-MZ>                                                 HVAC6  477
        <HEAT-FM> = <HEAT-FM> - FFUEL                                           HVAC6  478
        <AUX-FM>  = <AUX-FM>  + FurnAuxFuel                                     HVAC6  479
        QGBB      = QGBB - FFUEL                                                -044e  264
      ENDIF                                                                     HVAC6  480
      QHZ = QHZ + ZQH*ZMULT                                                     PIU    443
C              DCV - Calculate zone Occupancy based vent CFM and fraction       -044c  586
      IF((<MIN-OA-METHOD>.LT.0) .AND. (CFMZ .GT. 0.))  THEN                     -044c  587
        RETR = Max(0., 1.-EXCFM/CFMZ)                                           -044e  265
        MZ = ISPB + (<NZSPACE>-1)*MZLEN                                         -044c  589
        <DCVOAcfmZ> = SchVal(<PEOPLE-SCHEDULE>, 1.)                             -045b   97
     &              * <ZPPLNO> * <OA-CFM/PER>                                   -045b   98
        IF(<MIN-OA-METHOD>.EQ.-1) <DCVOAcfmZ> = RETR*<DCVOAcfmZ>                -044c  591
        XX = <OUTSIDE-AIR-CFM>                                                  -044c  592
        IF(XX .EQ. 0.)                                                          -044c  593
     $     XX = AMAX1(<OA-FLOW/AREA>*<AREA>,<OA-CHANGES>*<VOLUME>/60.)          -044c  594
        <DCVOAcfmZ> = AMAX1(<DCVOAcfmZ>,XX)                                     -044c  595
        <DCVOAcfmFrac> = AMIN1(1.,<DCVOAcfmZ>/CFMZ)                             -044c  596
        <DCVOAcfmS> = <DCVOAcfmS> + <DCVOAcfmZ>*ZMULT                           -044c  597
        <DCVOAcfmFracCrit> = AMAX1(<DCVOAcfmFracCrit>,<DCVOAcfmFrac>)           -044c  598
      ELSE                                                                      -044c  599
        <DCVOAcfmZ> = 0.0                                                       -044c  600
        <DCVOAcfmFrac> = 0.0                                                    -044c  601
      ENDIF                                                                     -044c  602
C              INCREMENT THE TOTAL SYSTEM KW                                    PIU    444
  470 ZKW = ZKW + <ZKW>                                                         PIU    445
      <SKW> = <SKW> + ZKW*ZMULT                                                 PIU    446
C              SUM END-USE VARIABLES FOR THIS ZONE                              PIU    447
C              SAVE PIU  ZONE DATA FOR HOURLY REPORTS                           PIU    449
      DO 480 I=1,8                                                              -044e2 116
      FCHPS(I) = ZDPIU(I)                                                       PIU    451
  480 CONTINUE                                                                  PIU    452
C              IF HOURLY REPORTS ARE ASKED FOR AND THE SCHEDULE IS              PIU    453
C              ON, FILL THE REPORT BUFFER                                       PIU    454
      IF ((<IZNBUFP> .NE. 0) .AND. (IRSCH .NE. 0)) CALL USERZR(ZP1,ZP2)         PIU    455
      IF (IRPZON .NE. 0)  CALL RPTZON                                           PIU    456
C              INCREMENT ZP1                                                    PIU    457
  490 ZP1 = ZP1 + NZD                                                           PIU    458
C              TOTAL SYSTEM RETURN CFM                                          PIU    459
      RCFM = CFM - ECFM                                                         PIU    460
C              TOTAL SYSTEM RETURN CFM EXCLUDING INDUCED AIR ZONES              PIU    461
      RCFMMI = AMAX1(0.,RCFM-RCFMI)                                             PIU    462
C     IF (DEBUG) PRINT 9006,RCFM,RCFMI,CFMI,RCFMTX,RCFMMI                       PIU    463
C9006 FORMAT(1X,7HRCFM = E10.4,2X,8HRCFMI = ,E10.4,2X,7HCFMI = ,                PIU    464
C    1 E10.4,2X,9HRCFMTX = ,E10.4,2X,9HRCFMMI = ,E10.4)                         PIU    465
C              LOOP OVER ZONES AND GET CORRECT RETURN TEMPERATURE               PIU    466
C              AND OTHER QUANTITIES                                             PIU    467
      ZP1 = ISZ                                                                 PIU    468
      DO 495 NZ = 1,NSZ                                                         PIU    469
      ZP2 =  <ZP2>                                                              PIU    470
      IF ((<ZONE-TYPE> .EQ. 3) .AND. (FON .NE. 0.))  GO TO 493                  PIU    471
      ZMULT = <MULTIPLIER>                                                      PIU    472
      QPZ = <QLIGHTRETURN>*ZMULT                                                PIU    473
      RETR = 1.0                                                                -036   487
      IF((FON .NE. 0.) .AND. (<ZONE-TYPE> .EQ. 1)) THEN                         -036   488
        IF (<IND-AIRZ-ZD> .EQ. - 100)  THEN                                     -036   489
          IF(<RCFMT> .GT. 0.)                                                   -036   490
     $      QPZ = <QLIGHTRETURN>*ZMULT*<RCFM>/<RCFMT>                           -036   491
        ENDIF                                                                   -036   492
        IF (<EXHAUST-SOURCE> .eq. 1) THEN      ! makeup by system OA            -046   263
          EXCFM = <zn.ExhCFM>/CFMCYC                                            -046   264
        ELSE                                                                    -046   265
          EXCFM = 0.                                                            -046   266
        ENDIF                                                                   -046   267
        IF ((<RCFM>+EXCFM).gt.0.) THEN                                          -037    38
          RETR  = 1.0-(EXCFM/(<RCFM>+EXCFM))                                    -037    39
        ELSE                                                                    -037    40
          RETR  = 1.0                                                           -037    41
        ENDIF                                                                   -037    42
        TAVE  = (<TNOW>+<TPAST>)*0.5                                            -036   495
        TR    = TR + TAVE*<RCFM>*ZMULT                                          -036   496
      ENDIF                                                                     -036   497
      QLSUM = QLSUM + <QL>*RETR*ZMULT                                           -036   498
      CINF  = CINF  + <CFMINF>*RETR*ZMULT                                       -036   499
  492 QPSUM = QPSUM + QPZ                                                       PIU    484
  493 CONTINUE                                                                  PIU    485
C              REPLACE SOME VARIABLES IN THE REPORT BUFFER                      PIU    486
      FCHPS(11) = <CFMZ>                                                        PIU    487
      FCHPS(12) = <RCFM>                                                        PIU    488
      FCHPS(13) = <RCFMT>                                                       PIU    489
      FCHPS(14) = <CFMT>                                                        PIU    490
      FCHPS(15) = <CFMIND>                                                      PIU    491
      IF ((<IZNBUFP> .LE. 0) .OR. (IRSCH .LE. 0))  GO TO 495                    PIU    492
      IPTR = <IZNBUFP>                                                          PIU    493
      DO 494 I=1,5                                                              PIU    494
      AA(IPTR+I+42) = FCHPS(I+10)                                               PIU    495
  494 CONTINUE                                                                  PIU    496
  495 ZP1 = ZP1 + NZD                                                           PIU    497
  500 CONTINUE                                                                  PIU    498
C                                                                               PIU    499
C              TOTAL SYSTEM LOADS                                               PIU    500
C                                                                               PIU    501
      RETR = 1.                                                                 PIU    502
      IF (CFM .GT. . 001)  RETR = RCFM/CFM                                      PIU    503
      QLSUM = QLSUM*RETR                                                        PIU    504
      CINF = CINF*RETR                                                          PIU    505
C              CALCULATE THE RETURN AIR TEMPERATURE                             PIU    506
      TR = TR/(RCFM + .01)                                                      PIU    507
CDEBUG                                                                          PIU    508
C     IF (DEBUG) PRINT 9007,TR                                                  PIU    509
C9007 FORMAT(1X,17HTR BEFORE SDSF = ,E10.4)                                     PIU    510
C              RESTORE THE HEATING AVAILABILITY FLAG                            PIU    511
      HON = HONS                                                                PIU    512
C              CALL THE ROUTINE TO SIMULATE THE AIRHANDLER                      PIU    513
      CALL SDSF                                                                 PIU    514
C              SET LOW SPEED RATIOS                                             -044e  273
      IF (<COMPRESSOR-TYPE>.EQ.1) THEN                                          -044e  274
        IF (QH.GE.<LOW-SPEED-HEAT>*QHT) THEN                                    -044e  275
          DO II=1,4                                                             -044e  276
            LSR(II) = <LOW-SPEED-RATIOS>                                        -044e  277
          END DO                                                                -044e  278
        END IF                                                                  -044e  279
      END IF                                                                    -044e  280
C              IF CONSTANT SPEED ELEC HEAT PUMP GET PERFORMANCE                 -044e  281
C              THEN ASSIGN SUPPLEMENTAL HEAT TO CORRECT SOURCE                  -044e  282
      IF (<HEAT-SOURCE>.NE.4) GO TO 75                                          -044e  283
      IF (<COMPRESSOR-TYPE>.GT.1) GO TO 75                                      -044e  284
      IF (<CW-LOOP> .ne. 0) THEN  ! wlhp                                        -047k   65
        Call HP_Water(QH,<HEATING-CAPACITY>,LSR(2),LSR(3),QHKW,SLOAD,1.)        -044e  286
      ELSE  ! air-to-air                                                        -044e  287
        Call HPUNIT(QH,<HEATING-CAPACITY>,LSR(2),LSR(3),QHKW,SLOAD,1.)          -044e  288
      ENDIF                                                                     -044e  289
c              assign electric loads to meters                                  -044e  290
      IF (HEATKW .GT. 0.) THEN                                                  -044e  291
        HEATKWmax = MAX(HEATKW/EIRM2, HEATKW)                                   -044e  292
        CALL PeakSysDist(1,1, HEATKW,HEATKWmax, HeatEndUse,<HEAT-E-MS>)         -044e  293
      ENDIF                                                                     -044e  294
      CALL PeakSysDist(1,1, SUPPKW,<MAX_SUPP_KW>,                               -044e  295
     &                                        SuppEndUse,<SUPP-E-MS>)           -044e  296
      SKWQH = SKWQH + QHKW                                                      -044e  297
      <SKW> = <SKW> + QHKW                                                      -044e  298
C             IF SUPP SOURCE NOT FURNACE SKIP                                   -044e  299
      IF((<SUPP-SOURCE> .EQ. 2) .OR. (<SUPP-SOURCE> .EQ. 3)) THEN               -044e  300
        CALL FURNAC(SLOAD, <SUPP-HEAT-CAP>, <SUPP-SOURCE>, 1.0)                 -044e  301
        JEM       = <AUX-E-MZ>                                                  -044e  302
        <AUX-EM>  = <AUX-EM> + FurnAuxkW                                        -044e  303
        JFM       = <HEAT-F-MZ>                                                 -044e  304
        <HEAT-FM> = <HEAT-FM> - FFUEL                                           -044e  305
        <AUX-FM>  = <AUX-FM>  + FurnAuxFuel                                     -044e  306
        QHGSUP = -FFUEL                                                         -044e  307
        GO TO 75                                                                -044e  308
      ENDIF                                                                     -044e  309
C             IF NO SUPPLEMENTAL HEAT LOAD, THEN SKIP                           -044e  310
      IF(SLOAD .GE. -1.0) GO TO 75                                              -044e  311
C             IF SUPP SOURCE NOT ELECTRIC, THEN SKIP                            -044e  312
      IF(<SUPP-SOURCE> .NE. 1) GO TO 73                                         -044e  313
        X      = SLOAD*KWBTU                                                    -044e  314
        SKWQH  = SKWQH  - X                                                     -044e  315
        <SKW>  = <SKW>  - X                                                     -044e  316
c              assign electric load to meter                                    -044e  317
        CALL PeakSysDist(1,1, -X,<MAX_SUPP_KW>, SuppEndUse,<SUPP-E-MS>)         -044e  318
        QHGSUP = -SLOAD                                                         -044e  319
C             IF SUPP SOURCE NOT HOT WATER, THEN SKIP                           -044e  320
   73 CONTINUE                                                                  -044e  321
      IF(<SUPP-SOURCE> .GT. 0) GO TO 75                                         -044e  322
        QHSUP = SLOAD                                                           -044e  323
C             IF SUPP SOURCE CANNOT BE SOLAR, THEN SKIP                         -044e  324
      IF(<SUPP-SOURCE> .GE. 0) GO TO 75                                         -044e  325
        QHMP  = QHMP + SLOAD                                                    -044e  326
        TMP   = TMP + TM * CFM                                                  -044e  327
        CFMP = CFMP + CFM                                                       -044e  328
C              IF GAS HP GET PERFORMANCE                                        -044e  329
   75 IF(<HEAT-SOURCE> .NE. 9)  GOTO 169                                        -044e  330
      QHZHP = 0.0                                                               -044e  331
      IF(<BASEBOARD-SOURCE> .EQ. 5)  QHZHP = QHZHP + QHB                        -044e  332
      IF(<ZONE-HEAT-SOURCE> .EQ. 5)  QHZHP = QHZHP + QHZ                        -044e  333
      IF(<PREHEAT-SOURCE>   .EQ. 5)  QHZHP = QHZHP + QHP                        -044e  334
      IF(<HUMIDIFIER-TYPE>  .EQ. 5)  QHZHP = QHZHP + QHUM                       -044e  335
      IF ((<WASTE-HEAT-USE> .EQ. 1  .OR.  <WASTE-HEAT-USE> .EQ. 3)              -044e  336
     &                 .AND.  QHZHP .LE. 0.  .AND.  QCRUN .GT. 0.) THEN         -044e  337
        QCWASU = AMAX1(QHZHP,QCWAS)                                             -044e  338
        QHZHP  = QHZHP - QCWASU                                                 -044e  339
      ENDIF                                                                     -044e  340
      CALL GHPPWR(QH,TM,WBFS(TM,WM,PATM),CFM,2)                                 -044e  341
C              IF VARIABLE SPEED ELEC HEAT PUMP GET PERFORMANCE                 -044e  342
  169 IF (<HEAT-SOURCE>.NE.4 .OR. <COMPRESSOR-TYPE>.NE.2)  GO TO 170            -044e  343
      QHZHP = 0.0                                                               -044e  344
      IF(<BASEBOARD-SOURCE> .EQ. 4) THEN                                        -044e  345
        QHZHP = QHZHP + QHB                                                     -044e  346
      ENDIF                                                                     -044e  347
      IF(<ZONE-HEAT-SOURCE> .EQ. 4) THEN                                        -044e  348
        QHZHP = QHZHP + QHZ                                                     -044e  349
      ENDIF                                                                     -044e  350
      IF(<PREHEAT-SOURCE> .EQ. 4) THEN                                          -044e  351
        QHZHP = QHZHP + QHP                                                     -044e  352
      ENDIF                                                                     -044e  353
      IF(<HUMIDIFIER-TYPE> .EQ. 4) THEN                                         -044e  354
        QHZHP = QHZHP + QHUM                                                    -044e  355
      ENDIF                                                                     -044e  356
      CALL VHPPWR(QH+QHZHP,TM,WBFS(TM,WM,PATM),CFM,2)                           -044e  357
  170 CONTINUE                                                                  -044e  358
C              IF NOT DX HEAT OR COOL SKIP                                      -044e  359
      IF (<COOL-SOURCE> .EQ. 1) GOTO 175                                        -044e  360
C              SAVE CRANK CASE HEATING                                          -044e  361
      IF(DBT .GT. <CRANKCASE-MAX-T>)  GOTO 175                                  -044e  362
      IF(<HEAT-SOURCE> .EQ. 9) THEN                                             -044e  363
        T =  QCRUN + QHRUN                                                      -044e  364
        PLRCC = PLRC                                                            -044e  365
      ELSE                                                                      -044e  366
        T      = PLRCC                                                          -044e  367
        IF(<HEAT-SOURCE> .EQ. 4)  T = T + PLRH                                  -044e  368
        IF((T .GT. 0.) .AND. (<MIN-HGB-RATIO> .LT. 1.)) THEN                    -044e  369
          IF((T .GE. <MIN-HGB-RATIO>) .OR.                                      -044e  370
     $       (<MIN-HGB-RATIO> .LE. 0.)) THEN                                    -044e  371
            T    = 1.0                                                          -044e  372
          ELSE                                                                  -044e  373
            T    = T/<MIN-HGB-RATIO>                                            -044e  374
          ENDIF                                                                 -044e  375
        ENDIF                                                                   -044e  376
      ENDIF                                                                     -044e  377
      T      = <CRANKCASE-HEAT>*AMAX1(0.0,AMIN1(1.0,1.0-T))                     -044e  378
      JEM       = <AUX-E-MS>                                                    -044e  379
      <AUX-EM>  = <AUX-EM>  + T                                                 -044e  380
      <SKW>  = <SKW> + T                                                        -044e  381
      IF((PLRCC.GT.0.0).OR.(<HEAT-SOURCE>.LT.4)) THEN                           -044e  382
          SKWQC  = SKWQC + T                                                    -044e  383
          QCAUX  = QCAUX + T*BTUKW                                              -044e  384
      ENDIF                                                                     -044e  385
      IF(<HEAT-SOURCE> .LT. 4)  GOTO 175                                        -044e  386
      IF(PLRH .GT. 0.0) THEN                                                    -044e  387
          SKWQH  = SKWQH + T                                                    -044e  388
          QHAUX  = QHAUX + T*BTUKW                                              -044e  389
      ENDIF                                                                     -044e  390
      IF(PLRCC+PLRH .EQ. 0.0) THEN                                              -044e  391
          SKWQH  = SKWQH + T*0.5                                                -044e  392
          QHAUX  = QHAUX + T*0.5*BTUKW                                          -044e  393
          SKWQC  = SKWQC + T*0.5                                                -044e  394
          QCAUX  = QCAUX + T*BTUKW*0.5                                          -044e  395
      ENDIF                                                                     -044e  396
  175 CONTINUE                                                                  -044e  397
      IF(IHPREP .NE. 0) THEN                                                    -044e  398
        IF(<ZONE-HEAT-SOURCE> .NE. 9) THEN                                      -044e  399
          QHGSLD = QHGSLD + QHZ                                                 -044e  400
          QHGSUP = QHGSUP + QGZC                                                -044e  401
        ENDIF                                                                   -044e  402
        IF(<BASEBOARD-SOURCE> .NE. 9) THEN                                      -044e  403
          QHGSLD = QHGSLD + QHB                                                 -044e  404
          QHGSUP = QHGSUP + QGBB                                                -044e  405
        ENDIF                                                                   -044e  406
      ENDIF                                                                     -044e  407
C              LOADS ARE THE SUM OF THE MAIN COIL LOADS PLUS THE ZONE           PIU    535
C              COIL LOADS                                                       PIU    536
      IF (<ZONE-HEAT-SOURCE> .LE. 0)  <QH> = QHZ                                PIU    537
      QC = QC + QCZ                                                             PIU    538
c                                                                               -044e  408
c              Recover gas heat-pump waste heat to domestic water heater        -044e  409
      IF (<HTREC-DW-HEATER> .GT. 0  .AND.  <HEAT-SOURCE> .EQ. 9)                -044e  410
     &  CALL GHPPWR(xxx,xxx,xxx,xxx,3)                                          -044e  411
C********************** run function : PIU-1 ***********************            PIU    539
      IF( MSYSF(55) .NE. 0 )   CALL  FINTS( MSYSF(55), 1. )                     PIU    540
C*******************************************************************            PIU    541
C                  SAVE info on PLR for fans                                    -036   500
      IF (ISSPF .EQ. 1  .AND.  InitialFlg .EQ. 0)  CALL REPSSP                  Time   293
      RETURN                                                                    PIU    542
      END                                                                       PIU    543
      SUBROUTINE PTAC                                                           PTAC     2
C                                                                               PTAC     3
C                            THIS ROUTINE SIMULATES PACKAGED                    PTAC     4
C                            TERMINAL AIR-CONDTIONERS                           PTAC     5
C                                                                               PTAC     6
C              DEVELOPED BY                                                     -130     1
C                            J. J. Hirsch & S. D. Gates                         -130     2
C                            James J. Hirsch & Associates                       -130     3
C                            Camarillo, California                              -130     4
C              BASED UPON CODE DEVELOPED BY J. J. Hirsch and                    -130     5
C                            W. F. Buhl                                         -130     6
C                            A. E. Erdem                                        -130     7
C                            Lawrence Berkeley National Laboratory              -130     8
C                            University of California                           -130     9
Copyright (c) 1997 by James J. Hirsch. All Rights Reserved. Unpublished         -130    10
c rights reserved under the Copyright Laws of the United States.                -130    11
c RESTRICTED RIGHTS NOTICE: Government use, reproduction or disclosure          -130    12
c is subject to restrictions as set forth in Rights in Data (g)(3) in           -130    13
c UC/LBL purchase order 4607010 with J.J. Hirsch & Associates.                  -130    14
C                                                                               PTAC     8
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON  /ENDKY / LightEndUse,  TaskEndUse, MiscEndUse, HeatEndUse,        /ENDKY/  2
     &                 CoolEndUse , HtRejEndUse,  AuxEndUse, VentEndUse,        /ENDKY/  3
     &                 RefgEndUse ,  SuppEndUse,  DHWEndUse, ExtEndUse          /ENDKY/  4
      INTEGER          LightEndUse,  TaskEndUse, MiscEndUse, HeatEndUse,        /ENDKY/  5
     &                 CoolEndUse , HtRejEndUse,  AuxEndUse, VentEndUse,        /ENDKY/  6
     &                 RefgEndUse ,  SuppEndUse,  DHWEndUse,  ExtEndUse         /ENDKY/  7
      COMMON /FFUEL/ FFUEL, FurnAuxFuel, FurnAuxkW, PLRF                        /FFUEL/  2
      COMMON  /ENDUSE/ SUPPKW, HEATKW                                           HVAC27   1
      common  /FNSYS/  ISKIPS, MSYSF(120)                                       /FNSYS/  2
      COMMON  /HRREP / Irb, Ihrp, Lrb, Lhrp, Nrb, Nhrp, IVTLIM(3,50),           HR       5
     &                 IGRPtr, IBRPtr, IRSch, IRSchT(5),                        HR       6
     &                 NHRTyp(3), ITBUF(3), ITBUFB(3), ITBUFE(3),               HR       7
     &                 IHREOF, ICDFLG                                           HR       8
      COMMON  /MISCD / TEMPS(4,9999),CONS(5),TEMPSL(9999),                      -048a   10
     1                 BLDGQH,BLDGQC,BLDGQL,BLDGP,BPMULT,                       /MISCD/  3
     $                 DBTMIN,DBTMAX,WMIN,WMAX,NSPZ(9999),                      -048a   11
     3                 DQ, DTP, DTR, DTS, FPI, PLRCC , POM, TC2, TDM,           /MISCD/  5
     4                 TRA,WCOL,WCOLM,WMM,YPI,KWBTU,BTUKW,UNFILD,Unusedm        RemPA   45
      REAL             KWBTU                                                    /MISCD/  7
      COMMON  /PLANTD/ QHMP,TMP,CFMP,QHPP,CFMPP,                                /PLANTD/ 2
     1                 QHZP,TZP,DHWPKW,DHWPLF,DHWQRP                            RemPA   46
      REAL             PLANTD(10)                                               RemPA   47
      EQUIVALENCE      (PLANTD(1), QHMP)                                        RemPA   48
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      COMMON  /REPORT/ IREPRT(4,37),IPRG,IUNIQV(100),IUNIQS(100),IUNIQL         HVAC14   4
      COMMON /SHP   / QCRUN,QCLOAD,QCGAS,QCAUX,QCGSLD,QCGSUP,                   /SHP/    2
     1                QCWAS,QCWASU,QCGSAV,QCFAN,                                /SHP/    3
     2                QHRUN,QHLOAD,QHGAS,QHAUX,QHGSLD,QHGSUP,                   /SHP/    4
     3                QHWAS,QHWASU,QHGDFR,QHFAN,          CUR(25),              /SHP/    5
     4                GSAV1,GASV2,PCH,ISZCZ,GCAP(2),GEDB,QHDFRG,                -044c1   1
     5                GRPM,PLRSUP,CFMCYC,CLPLR,CFMVVT,QHZHP,PCCEDB,             /SHP/    7
     6                IHPREP,IHPOUT,IHPHRR,IHPHRN,IRST,IREN                     /SHP/    8
      COMMON /SHPZ  / QCRUNZ,QCLOADZ,QCGASZ,QCAUXZ,QCGSLDZ,QCGSUPZ,             /SHP/    9
     1                QCWASZ,QCWASUZ,QCGSAVZ,QCFANZ,                            /SHP/   10
     2                QHRUNZ,QHLOADZ,QHGASZ,QHAUXZ,QHGSLDZ,QHGSUPZ,             /SHP/   11
     3                QHWASZ,QHWASUZ,QHGDFRZ,QHFANZ                             /SHP/   12
      DIMENSION       SHP(60),SHPZ(20)                                          /SHP/   13
      EQUIVALENCE     (SHP,QCRUN),(SHPZ,QCRUNZ)                                 /SHP/   14
     1               ,(DFM1,CUR(18)),(DFM2,CUR(19)),(DFM3,CUR(20))              /SHP/   15
      COMMON /SSPDAT/  PLRCS,QCCKWS,QCCMPS,PLRHS,QHCKWS,QHCMPS                  /SSPDAT/ 2
     $                ,PLRFS,PLRFCS,PLRFHS,sspss                                /SSPDAT/ 3
     $                ,PLRCZ,QCCKWZ,QCCMPZ,PLRHZ,QHCKWZ,QHCMPZ                  /SSPDAT/ 4
     $                ,PLRFZ,PLRFCZ,PLRFHZ,sspsz                                /SSPDAT/ 5
     $                ,ISSPF,IWCCF,IPCCF,SSPSAV                                 /SSPDAT/ 6
      DIMENSION        SSPD(24)                                                 JJHfix   1
      EQUIVALENCE      (SSPD(1),PLRCS)                                          /SSPDAT/ 8
      COMMON  /SYSTD / TH,TC,TM,TR,QH,QC,QHZ,QCZ,QHB,QHP,QHUM,                  /SYSTD/  2
     1                 QDHUM,TCMIN,THMAX,QLSUM,QPSUM,CFM,CFMH,CFMC,             /SYSTD/  3
     2                 RCFM,ECFM,CINF,FON,HON,CON,BON,SCONS(3),PH,PC,           /SYSTD/  4
     3                 SKW,FANKW,unused1,WR,WM,WCOIL,WW,PO,D,                   -046f    1
     4                 FTEMP,TCR,QHR,RfanPumpKW,SGAS,SKWQH,SKWQC,QCLAT,         -131    23
     5                 SFKW,RFKW,FONNGT,WSURF,RWalkinQ,TSURF,TRh,               -131    24
     6                 CBF,CBF1,CBF2,EON,PLRCFM,PLRC,PLRH,QCM1,                 /SYSTD/  8
     7                 QCM2,QHM1,EIRM1,EIRM2,EIR,OFKW,QCT,QCS,                  /SYSTD/  9
     8                 WRMAX,WRMIN,CFMRAT,QdistG,QdistL,RON,QHT,                /SYSTD/ 10
     9                 TPOMIN,POMIN,QHSUP,QRSENS,QRLAT,QRREC,QRREJ,             /SYSTD/ 11
     1                 RCOMKW,RDEFKW,RAUXKW,ECFMP,CFMIN,CINFP,DT,DW,            /SYSTD/ 12
     2                 EWB,IC,NATTSP,Q,RETR,SLOAD,QLSUMP,T,TCHUM,TEND,          /SYSTD/ 13
     3                 TS,hgbmin,HPDefE,EconoOnly,TDuctEnv,                     -044e1   1
     4                 QCUNMT,CapRh,CapRph,CapRc                                HVAC25   3
      REAL             SYSTD(113)                                               HVAC19  13
      EQUIVALENCE      (SYSTD(1),TH)                                            RemPA   65
      COMMON  /TIME  / IDOY, IYR, IMO, IDAY, IHR,                               Time     4
     &                 ISCMO, ISCDAY, ISCHR, IDOW, ISCDOW, iDSdates(6),         -044e5   1
     &                 iTimeFlg, iDSFlg, iDDFlg, InitialFlg, LeapYr,            Time     6
     &                 CLOCK(10), MONDSC(13), MONLEN(12), MONSDA(12)            HR      12
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
      COMMON  /ZONED / EXCFM,FH,FC,CFMZ,QHBZ,QOVER,THZ,TCZ,ERMAX,ERMIN,         /ZONED/  2
     1                 TRY,FTD,CORINT,G0,G1,G2,G3,SIGMAG,TL,ZQHR,TAVE,          /ZONED/  3
     2                 ZQH,ZQC,FCHPS(15),ACFM,ZKW,TCMINZ,THMAXZ,                /ZONED/  4
     3                 ERMAXM,ERMINM,THR,CSSCND,CSSVEC,HENOW,QGWIN,             /ZONED/  5
     4                 QSNABT,QGOPWL,QGVEC,CFMCVT,SSFPT,CFMVNT,ZFANKW,          /ZONED/  6
     5                 ZKWCBT,ZKWHBT,ZCapRbbrd, XC,ZC,XH,ZH                     -044e2   7
      REAL ZONED(63)                                                            -044e2   8
      EQUIVALENCE (ZONED(1),EXCFM)                                              /ZONED/  9
      REAL  LSR(4)                                                              PTAC    24
      COMMON  /LENS/   MWFLEN, MRLEN, MSHLEN, MWNLEN, MDRLEN, MXLEN,            /LENS/   2
     1                 MULEN, MZLEN, MIWLEN, MFLLEN,                            /LENS/   3
     2                 LMTB, LLDSOU, MSTLEN, LSTFT, MWLLEN                      /LENS/   4
      COMMON  /PTRBGN/ IWFB, IWPB, ICONSB, IGTB, IWLB, IGEOB, ISHADB,           /PTRBGN/ 2
     &                 IWINB, IDRB, IEWB, IUGB, ISPB, IIWPB, IIWB,              /PTRBGN/ 3
     &                 IFLB, ISPCDB, IOTHB, ILHB, IZQCMB, ISSHDB,               /PTRBGN/ 4
     &                 IOHFIB, IZLSK, IZLSL, ISTFB, ILSSH                       PV2      1
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     /PNTRS/  3
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        /PNTRS/  4
      COMMON  /SIZE/   LENGTH,NWF,NWPAR,NCONS,NGT,NWL,NGEO,                     /SIZE/   2
     1                 NGSHAD, NWIN, NDOOR, NEW, NUG, NSPl, NIWP, NIW,          /SIZE/   3
     &                 NFL, NBR, NOTH, NITH, NOPSRF,                            /SIZE/   4
     &                 NSURF, NSSHD, NSHTOT, NEWshade                           /SIZE/   5
      V(DB,W,P) = 0.754*(DB+459.7)*(1.0+1.605*W)/P                              V        2
C              SET ZP1 TO POINT TO FIRST ZONE ON THE SYSTEM                     PTAC    27
      ZP1    = ISZ                                                              PTAC    28
      VOLMUL = 0.0                                                              PTAC    29
      WAV    = 0.                                                               PTAC    30
      QGBB   = 0.0                                                              PTAC    31
      ISSPF  = 0                                                                PTAC    32
      IF((IREPRT(2,23).NE.0).OR.(IREPRT(2,27).NE.0))  ISSPF = 1                 IREPRT  65
C********************** run function : PTAC-0 **********************            PTAC    34
      IF( MSYSF(56) .NE. 0 )   CALL  FINTS( MSYSF(56), 0. )                     PTAC    35
C*******************************************************************            PTAC    36
C               CHECK FOR AIR FROM ANOTHER SYSTEM.  IF YES,                     PTAC    37
C               GET NEW AIR CONDITIONS (DBIN0, WIN0, WBIN0)                     PTAC    38
      CALL FRMSYS(DBIN0,WIN0,WBIN0)                                             PTAC    39
C                                                                               PTAC    40
C              LOOP THROUGH THE ZONES ON THE SYSTEM                             PTAC    41
C                                                                               PTAC    42
      DO 10 NZ = 1,NSZ                                                          PTAC    43
C              ZERO THE ZONE DATA COMMON BLOCK                                  PTAC    44
      II     = 63                                                               -044e2 117
      DO I=1,II                                                                 PTAC    46
        ZONED(I) = 0.                                                           PTAC    47
        IF(I .LE. 20)   SHPZ(I) = 0.                                            PTAC    48
      ENDDO                                                                     PTAC    49
C              PICK UP ZP2                                                      PTAC    50
      ZP2    = <ZP2>                                                            PTAC    51
      <ERMAX> = 0.0                                                             PTAC    52
      <ERMIN> = 0.0                                                             PTAC    53
      IF (<sy.FanOnPast> .gt. 0.)  THEN                                         -044c2  87
        CONS(4) = 60. / V(<zn.Tmix1>,<zn.Wmix1>,PATM)                           -044c2  88
        CONS(1) = (.24+.44*<zn.Wmix1>) * CONS(4)                                -044c2  89
      ELSE  ! use value from last start-up hour                                 -044c2  90
        CONS(4) = 60. / V(<zn.TmixStart>,<zn.WmixStart>,PATM)                   -044c2  91
        CONS(1) = (.24+.44*<zn.WmixStart>) * CONS(4)                            -044c2  92
      ENDIF                                                                     -044c2  93
      CONS(2) = 1061.0 * CONS(4)                                                -044c2  94
      CONS(3) = 0.3996 / CONS(1)                                                -044c2  95
c              if exhaust made up by infiltration                               -046   268
      IF (<EXHAUST-SOURCE> .eq. 2  .or.                                         -047b   30
     &    <EXHAUST-SOURCE> .eq. 3)  Call ZoneExhaust(9, xx)  ! power            -047b   31
C              SET THE LSR ARRAY TO 1.0 (FULL LOAD)                             PTAC    57
C              THIS WILL CONTAIN THE LOW SPEED MULTIPLIERS                      PTAC    58
C              1=CFML/CFMH  2=KWL/KWH  3=QHL/QHH  4=QCL/QCH                     PTAC    59
      DO 1 I=1,4                                                                PTAC    60
    1 LSR(I) = 1.0                                                              PTAC    61
      IF((FON .EQ. 0.0) .OR. (<ZONE-TYPE> .NE. 1))  GOTO 3                      PTAC    62
C                                                                               PTAC    63
C              CALCULATE THE EXTRACTION RATES                                   PTAC    64
C                                                                               PTAC    65
C              CALC MIX AIR TEMP                                                PTAC    66
c              Exhaust airflow w/o cycling                                      -044e  412
      IF (<EXHAUST-SOURCE> .eq. 1)    ! makeup by system OA                     -046   270
     &  Call ZoneExhaust(1, <CFMAX>)  ! set EXCFM                               -046   271
c              Outside air damper position                                      -044e  414
      PO     = Max(<VENTMIN>, EXCFM) / <CFMAX>                                  -044e  415
C              NOW CHECK FOR SCHEDULE FOR OUTSIDE AIR                           -044c  609
      SH = SchVal(<MIN-AIR-SCH>, -999.)                                         -044c  610
      IF (SH .NE. -999.)  PO = SH                                               -044c  611
      PO = AMAX1(0.,AMIN1(1.,PO))                                               -044c  612
C              NOW CHECK FOR DCV                                                -044c  613
      IF((<MIN-OA-METHOD>.LT.0) .AND. (SH .EQ. -999.0))  THEN                   -044c  614
        MZ = ISPB + (<NZSPACE>-1)*MZLEN                                         -044c  615
        <DCVOAcfmZ> = SchVal(<PEOPLE-SCHEDULE>, 1.)                             -045b   99
     &              * <ZPPLNO> * <OA-CFM/PER>                                   -045b  100
        XX = <OUTSIDE-AIR-CFM>                                                  -044c  617
        IF(XX .EQ. 0.)                                                          -044c  618
     $     XX = AMAX1(<OA-FLOW/AREA>*<AREA>,<OA-CHANGES>*<VOLUME>/60.)          -044c  619
        <DCVOAcfmZ> = AMAX1(<DCVOAcfmZ>,XX)                                     -044c  620
        <DCVOAcfmFrac> = AMIN1(1.,<DCVOAcfmZ>/<CFMAX>)                          -044c  621
        PO = <DCVOAcfmFrac>                                                     -044c  622
      ELSE                                                                      -044c  623
        <DCVOAcfmZ> = 0.0                                                       -044c  624
        <DCVOAcfmFrac> = 0.0                                                    -044c  625
      ENDIF                                                                     -044c  626
      TM = PO*DBIN0 + (1.-PO)*<TNOW> + <SUPPLY-DELTA-T>*CONS(3)                 PTAC    78
C              CALC OFF DESIGN ADJUSTMENT FACTORS                               PTAC    79
      T = AMAX1(DBIN0,<COOL-FT-MIN>)                                            PTAC    80
      IF (IPCCF .gt. 0)  T = PCCEDB                                             -045h   49
      IF (<CONDENSER-TYPE> .eq. 3) THEN                                         -045h   50
        EWB  = Max(<COIL_EWBZ>, <COOL-FT-MIN>)                                  -045h   51
      ELSE                                                                      -045h   52
        EWB  = Max(<COIL_EWBZ>, <COOL-FT-MIN>-10.)                              -045h   53
      ENDIF                                                                     -045h   54
      QCM1   = CVAL(<COOL-CAP-FT>,EWB,T)                                        PTAC    83
      QCM2   = CVAL(<COOL-SH-FT>,EWB,T)                                         PTAC    84
C              CALC TOTAL AND SENSIBLE CAPACITY                                 PTAC    85
      QCT    = <COOLCAPZ>*QCM1                                                  PTAC    86
      QCS    = AMAX1(0.0,<COOLSHZ>*QCM2                                         -034   181
     $                     + CONS(1)*<CFMAX>*(1.0-<COIL-BF>)                    -034   182
     $                              *AMAX1(-20.,AMIN1(20.,TM-80.0)) )           -034   183
      QCS    = AMIN1(QCT,QCS)                                                   PTAC    89
C              CALC MIN SUPPLY TEMP                                             PTAC    90
      TCMINZ = TM - (QCS/(CONS(1)*<CFMAX>))*CON                                 PTAC    91
      TCMINZ = AMAX1(TCMINZ,AMIN1(TM,<MIN-SUPPLY-T>-<THROTTLING-RANGE>))        PTAC    92
C              CALC EXTRACTION RATE                                             PTAC    93
      XC      = CONS(1)*<CFMAX>                                                 -044e2 118
      <ERMAX> = XC *(<TNOW>-TCMINZ)                                             -044e2 119
      IF (PO .ne. 0.) THEN  ! continuous fan                                    -044e2 120
        ZC     = XC                                                             -044e2 121
        ERMAXM = ZC * (<TNOW>-TM)                                               -044e2 122
      ENDIF                                                                     -044e2 123
C              PICK UP HEATING CAPACITY                                         PTAC    97
      QHT    = <HEATCAPZ>                                                       PTAC    98
      QHPT   = 0.0                                                              PTAC    99
C              IF NOT USING A HEATPUMP SKIP                                     PTAC   100
      IF((<HEAT-SOURCE>.NE.4).AND.(<HEAT-SOURCE>.NE.9))  GOTO 2                 PTAC   101
C              PICK UP ELEC HEATING ELEMENTS CAPACITY                           PTAC   102
      QHT    = <SUPP-HEAT-CAP>                                                  PTAC   103
C              IF THE ELEC HEAT IS OFF SET TO ZERO                              PTAC   104
      IF(DBT .GT. <MAX-HSUPP-T>)  QHT = 0.0                                     PTAC   105
C              IF TO COLD TO OPERATE THE HEAT-PUMP SKIP                         PTAC   106
      IF(DBT .LT. <MIN-HP-T>)  GOTO 2                                           PTAC   107
C              CALC CAPACITY ADJUSTMENT                                         PTAC   108
      QHM1   = CVAL(<HEAT-CAP-FT>,TM,DBT)                                       -131   294
      DFM1 = 0.0                                                                PTAC   110
      IF((DBT.LE.<DEFROST-T>).AND.(<DEFROST-FRAC-FT>.NE.0))                     PTAC   111
     1    DFM1 = CVAL(<DEFROST-FRAC-FT>,WBT,DBT)                                PTAC   112
      QHM1 = QHM1*(1.0-DFM1)                                                    PTAC   113
C              ADD HHEAT-PUMP CAPACITY TO ELEC                                  PTAC   114
      QHPT   = <HEATCAPZ>*QHM1                                                  PTAC   115
      QHT    = QHT + QHPT                                                       PTAC   116
C              MAX SUPPLY TEMP                                                  PTAC   117
    2 THMAXZ = TM - (QHT/(CONS(1)*<CFMAX>))*HON                                 PTAC   118
      THMAXZ = AMIN1(THMAXZ,AMAX1(TM,<MAX-SUPPLY-T>))                           PTAC   119
C              ADDITION RATE                                                    PTAC   120
      XH      = CONS(1)*<CFMAX>                                                 -044e2 124
      <ERMIN> = XH * (<TNOW>-THMAXZ)                                            -044e2 125
      ZH      = ZC                                                              -047a    1
      ERMINM  = ERMAXM                                                          PTAC   122
C              PICK UP ZONE MULTIPLIER                                          PTAC   123
    3 ZMULT  = <MULTIPLIER>                                                     PTAC   124
C              CALL ROUTINE TO CALC ZONE TEMP AND LOAD                          PTAC   125
      CALL TEMDEV(0)                                                            PTAC   126
c              Calculate load distribution over the hour                        HVAC22 109
      CALL PeakZoneBins(0, xxx,xxx)                                             HVAC22 110
C              INITIALIZE VARIOUS SYSTEM VARIABLES TO ZERO                      PTAC   127
C              ZFANKW IS THE ZONE ELEC DUE TO THE UNIT FAN                      PTAC   128
      ZFANKW = 0.                                                               PTAC   129
C              WM IS THE MIX AIR HUMIDITY RATIO                                 PTAC   130
      WM     = 0.                                                               PTAC   131
      WCOIL  = 0.                                                               PTAC   132
      TS     = 0.                                                               PTAC   133
      TC     = 0.                                                               PTAC   134
      TM     = 0.                                                               PTAC   135
      PLRC   = 0.                                                               PTAC   136
      PLRH   = 0.                                                               PTAC   137
      EIR    = 0.                                                               PTAC   138
      QCLATZ = 0.                                                               PTAC   139
      SLOAD  = 0.                                                               PTAC   140
      OFKW   = 0.                                                               PTAC   141
      <ZKWQH>  = 0.                                                             PTAC   142
      <ZKWQC>  = 0.                                                             PTAC   143
C              ZKW IS ELEC INPUT TO UNIT                                        PTAC   144
      ZKWS = ZKW                                                                PTAC   145
      ZKW    = 0.0                                                              PTAC   146
C              SKIP UNNEEDED CALCS                                              PTAC   147
      IF(<ZONE-TYPE> .NE. 1)  GOTO 20                                           PTAC   148
      IF(FON .EQ. 0.0)  GOTO 174                                                PTAC   149
C              TM IS THE MIX AIR TEMP                                           PTAC   150
      TAVE   = (<TNOW>+<TPAST>)*0.5                                             PTAC   151
      TM = PO*DBIN0 + (1.-PO)*TAVE + <SUPPLY-DELTA-T>*CONS(3)                   PTAC   152
      <COIL_EDBZ> = TM                                                          HVAC1  568
C              DECIDE WETHER THE FAN IS ON LOW OR HIGH SPEED                    PTAC   154
      I      = 0                                                                PTAC   155
C              CALC THE SENSIBLE LOAD ON THE UNIT                               PTAC   156
      Q      = <QNOW>                                                           PTAC   157
      IF(PO .GT. 0.0) Q = Q - CONS(1)*<CFMAX>*(TAVE-TM)                         PTAC   158
      IF((Q .LT. 0.0).AND.(Q .GE. <LOW-SPEED-HEAT>*QHPT)) I = 1                 PTAC   159
      IF((Q .GE. 0.0).AND.(Q .LE. <LOW-SPEED-COOL>*QCS)) I = 1                  PTAC   160
      IF((I .EQ. 0).OR.(<FAN-CONTROL>.NE.10))  GOTO 11                          PTAC   161
      DO 9 II=1,4                                                               PTAC   162
    9 LSR(II) = <LOW-SPEED-RATIOS>                                              PTAC   163
C              CALC HOW MUCH THE SUPPLY AIR NEEDS TO BE LOWERED TO              PTAC   164
C              HANDLE THE LOAD. IF OUTSIDE AIR IS USED THE FANS RUN             PTAC   165
C              ALL THE TIME, OTHERWISE THEY CYCLE TO HANDLE THE LOAD            PTAC   166
   11 F      = 0.0                                                              PTAC   167
      IF(TAVE .LE. THZ+THR)  F = QHT                                            PTAC   168
      IF(TAVE .GE. TCZ-THR)  F = QCS                                            PTAC   169
      IF(PO .LE. 0.0)  TS = AMAX1(TCMINZ,AMIN1(THMAXZ,TM-                       PTAC   170
     1                            F/(CONS(1)*<CFMAX>*LSR(1))))                  PTAC   171
      IF(PO .GT. 0.0)                                                           PTAC   172
     1TS     = TAVE - <QNOW>/(CONS(1)*<CFMAX>*LSR(1))                           PTAC   173
C              FOR OFF RATED CFM                                                PTAC   174
      PLRCFM = <CFMAX>/<RATEDCFM>                                               PTAC   175
C              IF HEAT REQUIRED SKIP                                            PTAC   176
      IF(<TNOW> .LE. THZ+THR)  GOTO 15                                          PTAC   177
C              IF COOL REQUIRED SKIP                                            PTAC   178
      IF(<TNOW> .GE. TCZ-THR)  GOTO 25                                          PTAC   179
C                                                                               PTAC   180
C              NO LOAD CONDITION                                                PTAC   181
C                                                                               PTAC   182
      WM = WIN0                                                                 PTAC   183
      <COIL_EWBZ> = WBIN0                                                       HVAC1  569
C              IF NO OUTSIDE AIR SKIP (NO OPERATION THIS HOUR)                  PTAC   185
      IF(PO .EQ. 0.0)  GO TO 20                                                 PTAC   186
      FC     = <CFMAX>*LSR(1)                                                   PTAC   187
      GOTO 20                                                                   PTAC   188
C                                                                               PTAC   189
C              COOLING CALCULATIONS                                             PTAC   190
C                                                                               PTAC   191
C              ASSUME THAT THE COIL SURF CONDITION IS THAT AS IF IT             PTAC   192
C              WAS AT FULL LOAD                                                 PTAC   193
   25 TC     = TM - (QCS*LSR(4)/(CONS(1)*<CFMAX>*LSR(1)))                       PTAC   194
      TC     = AMAX1(TC,<MIN-SUPPLY-T>-<THROTTLING-RANGE>)                      PTAC   195
      IF (<CONDENSER-TYPE> .eq. 3) THEN                                         -045h   55
        EWB  = Max(<COIL_EWBZ>, <COOL-FT-MIN>)                                  -045h   56
      ELSE                                                                      -045h   57
        EWB  = Max(<COIL_EWBZ>, <COOL-FT-MIN>-10.)                              -045h   58
      ENDIF                                                                     -045h   59
      CBF1   = CVAL(<COIL-BF-FT>,EWB,T)                                         PTAC   197
      CBF2   = CVAL(<COIL-BF-FCFM>,PLRCFM,PLRCFM)                               PTAC   198
      CBF    = AMIN1(AMAX1(<COIL-BF>*CBF1*CBF2,0.001),1.0)                      -113    20
      WMSAT = WFUNC(TM,100.,PATM)                                               -113    21
      WRSAT = WFUNC(TAVE,100.,PATM)                                             -113    22
      TSURF  = (TC-CBF*TM)/(1.0-CBF)                                            PTAC   200
      WSURF  = WFUNC(TSURF,100.,PATM)                                           PTAC   201
C                                                                               PTAC   202
C              IF THE UNIT HAS OUTSIDE AIR DAMPERS ASSUME                       PTAC   203
C              THE FANS RUNN CONTINUOUSLY. IF NO OUTSIDE                        PTAC   204
C              ASSUME THE FANS CYCLE ON AND OFF.                                PTAC   205
C                                                                               PTAC   206
C              SET CFM FOR NON CYCLING SYSTEM                                   PTAC   207
      FC     = <CFMAX>*LSR(1)                                                   PTAC   208
C              FOR NO OUTSIDE AIR CASE                                          PTAC   209
C              CALC AMOUNT OF TIME (IN CFM) THE FAN IS ON                       PTAC   210
      IF((PO .EQ. 0.0).AND.(<ERMAX> .GT. 0.0))                                  PTAC   211
     1FC     = <QNOW>*FC/(<ERMAX>*LSR(4))                                       PTAC   212
      IF((CON .EQ. 0.0).OR.(FC .LE. 0.0))  GOTO 20                              PTAC   213
C              CALC ROOM LATENT LOAD (IN LBS WTR/LB AIR)                        PTAC   214
      DW     = <QL>/(CONS(2)*AMAX1(FC,<VOLUME>/60.0))                           PTAC   215
C              CALC INFILTRATION AIR RATIO                                      PTAC   216
      F      = <CFMINF>/AMAX1(FC,<VOLUME>/60.0)                                 PTAC   217
C              SPECIAL WM GUESS FOR NO OUTSIDE AIR CASE                         PTAC   218
      WM = WIN0 + DW                                                            PTAC   219
      IF((F+PO) .GT. 0.01)                                                      PTAC   220
     1 WM = ((1.-PO)*DW + PO*F*(WIN0-HUMRAT) + PO*WIN0 + F*HUMRAT) /            PTAC   221
     2      (F+PO)                                                              PTAC   222
      WM = AMIN1(WMSAT,WM)                                                      -113    23
      WCOIL  = WM                                                               PTAC   223
C              IF MIX AIR HUMIDITY IS LEES THAN COIL SURFACE                    PTAC   224
C              CONDITION NO MOISTURE REMOVAL TAKES PLACE (SKIP)                 PTAC   225
      IF(WM .LE. WSURF)  GO TO 7                                                PTAC   226
C              SOLVE FOR HUMIDITY LEVELS                                        PTAC   227
      WR = (CBF*PO*WIN0 + (1.-CBF)*WSURF + DW + F*HUMRAT)                       PTAC   228
     1         /(1.0+F-CBF*(1.0-PO))                                            PTAC   229
      WR = AMIN1(WRSAT,WR)                                                      -113    24
      WM = PO*WIN0 + (1.-PO)*WR                                                 PTAC   230
      WCOIL  = CBF*WM + (1.0-CBF)*WSURF                                         PTAC   231
C              CALC UNIT COOLING LOAD.                                          PTAC   232
    7 CONTINUE                                                                  PTAC   233
      ZQC    = AMAX1(0., (TM-TS)*CONS(1)*FC)                                    PTAC   234
C              Add moisture removal to coil load - use PLRCS for the            -024    21
C              the compressor run time fraction if fan run continuously         -024    22
      IF(PO .EQ. 0.)  THEN                                                      -024    23
        QCLATZ = AMAX1(0.0,WM-WCOIL)*CONS(2)*FC                                 -024    24
      ELSE                                                                      -024    25
        QCM2  = CVAL(<COOL-SH-FT>,EWB,T)                                        -024    26
        QCS = AMAX1(0.0,<COOLSHZ>*QCM2                                          -034   184
     $                    + CONS(1)*<CFMAX>*(1.0-<COIL-BF>)                     -034   185
     $                             *AMAX1(-20.0,AMIN1(20.0,TM-80.0)) )          -034   186
        PLRCS = 0.                                                              -024    29
        IF (QCS .GT. 0.)  PLRCS = AMAX1(0.,CONS(1)*<CFMAX>*(TM-TS)/QCS)         -024    30
        QCLATZ = AMAX1(0.0,WM-WCOIL)*CONS(2)*<CFMAX>*PLRCS                      -024    31
      ENDIF                                                                     -024    32
      ZQC    = ZQC + QCLATZ                                                     -024    33
      QCLAT  = QCLAT + QCLATZ*ZMULT                                             PTAC   238
C              SAVE WETBULB FOR NEXT HOUR                                       PTAC   239
      <COIL_EWBZ> = WBFS(TM,WM,PATM)                                            HVAC1  571
C              RECAL CAPACITY FOR GOOD ELEC CALC                                PTAC   241
      IF (<CONDENSER-TYPE> .eq. 3) THEN                                         -045h   60
        EWB  = Max(<COIL_EWBZ>, <COOL-FT-MIN>)                                  -045h   61
      ELSE                                                                      -045h   62
        EWB  = Max(<COIL_EWBZ>, <COOL-FT-MIN>-10.)                              -045h   63
      ENDIF                                                                     -045h   64
      IF(<HEAT-SOURCE> .EQ. 9)  THEN                                            PTAC   243
        CALL GHPPWR(ZQC,TM,EWB,FC,1)                                            PTAC   244
        <ZKWQC> = QCAUXZ*KWBTU                                                  PTAC   245
        QCFAN  = QCFAN  + FC*<SUPPLY-KW>*LSR(2)*BTUKW*ZMULT                     PTAC   246
      ELSE                                                                      PTAC   247
        QCM1   = CVAL(<COOL-CAP-FT>,EWB,T)                                      PTAC   248
        QCT    = <COOLCAPZ>*QCM1                                                PTAC   249
C              CALC THE EIR ADJUSTMENT FACTORS                                  PTAC   250
        EIRM1  = CVAL(<COOL-EIR-FT>,EWB,T)                                      PTAC   251
C              PART LOAD                                                        PTAC   252
        PLRC   = ZQC/QCT                                                        PTAC   253
        EIRM2  = CVAL(<COOL-EIR-FPLR>,PLRC,PLRC)                                PTAC   254
        EIR    = <COOLING-EIR>*EIRM1*EIRM2                                      -039    30
        IF(IPCCF .EQ. 1)  THEN                                                  PTAC   257
          OFKWmax = <EVAP-PCC-ELEC>*<COOLCAPZ>*0.001                            HVAC22 111
          OFKW    = OFKWmax * (FC/<CFMAX>)                                      HVAC22 112
c              assign electric load to meter                                    HVAC22 113
          CALL PeakZoneDist(1, OFKW,OFKWmax, HtRejEndUse,<HTREJ-E-MZ>)          HVAC22 114
        ENDIF                                                                   PTAC   260
        ZKWCBT = QCT*EIR                                                        PTAC   261
        ZKW    = ZKWCBT*KWBTU                                                   HVAC22 115
c              assign electric load to meter                                    HVAC22 116
        IF (ZKW .GT. 0.)  THEN                                                  HVAC22 117
          ZKWmax = MAX(ZKW/EIRM2, ZKW)                                          HVAC22 118
          CALL PeakZoneDist(1, ZKW,ZKWmax, CoolEndUse,<COOL-E-MZ>)              HVAC22 119
        ENDIF                                                                   HVAC22 120
        ZKW = ZKW + OFKW                                                        HVAC22 121
        SKWQC  = SKWQC  + ZKW*ZMULT                                             HVAC22 122
        <ZKWQC>= ZKW                                                            HVAC22 123
        IF(IHPREP .NE. 0) THEN                                                  PTAC   266
          QCGAS  = QCGAS  + ZKWCBT*ZMULT                                        PTAC   267
          QCRUN  = QCRUN  + PLRC*ZMULT                                          PTAC   268
          QCLOAD = QCLOAD + ZQC*ZMULT                                           PTAC   269
          QCFAN  = QCFAN  + FC*<SUPPLY-KW>*LSR(2)*BTUKW*ZMULT                   PTAC   270
          QCAUX  = QCAUX  + OFKW*BTUKW*ZMULT                                    PTAC   271
        ENDIF                                                                   PTAC   272
      ENDIF                                                                     PTAC   273
C              INCREMENT TOTAL SYSTEM COOLING LOAD                              PTAC   274
      QCZ    = QCZ + ZQC*ZMULT                                                  PTAC   275
      GO TO 20                                                                  PTAC   276
C                                                                               PTAC   277
C              CALCULATE UNIT HEATING ENERGY                                    PTAC   278
C                                                                               PTAC   279
C              PICK UP CFM                                                      PTAC   280
   15 FH     = <CFMAX>*LSR(1)                                                   PTAC   281
C              IF NO OUTSIDE AIR CALC CYCLING FAN CFM                           PTAC   282
      IF((PO .EQ. 0.0).AND.(<ERMIN> .LT. 0.0))                                  PTAC   283
     1            FH = (<QNOW>*<CFMAX>*LSR(1))/(<ERMIN>*LSR(3))                 PTAC   284
      IF((HON .EQ. 0.0).OR.(FH .LE. 0.0))  GOTO 20                              PTAC   285
      DW     = <QL>/(CONS(2)*FH)                                                PTAC   286
      F      = <CFMINF>/FH                                                      PTAC   287
      WM = WIN0 + DW                                                            PTAC   288
      IF ((F+PO) .GT. 0.1)  WM = ((1.-PO)*DW + PO*F*(WIN0-HUMRAT) +             PTAC   289
     1   PO*WIN0 + F*HUMRAT) / (F+PO)                                           PTAC   290
      WM = AMIN1(WM,WFUNC(TM,100.,PATM))                                        -113    25
      <COIL_EWBZ> = WBFS(TM,WM,PATM)                                            HVAC1  573
C              CALC HEAT TO RAISE MIX AIR TEMP TO ROOM TEMP                     PTAC   294
C              PLUS THE ZONE HEATING LOAD                                       PTAC   295
      ZQH    = AMIN1(0.0, (TM-TS) * CONS(1) * FH )                              PTAC   296
C              IF THE ZONE COILS CANNOT BE SOLAR SUPPLIED SKIP                  PTAC   297
      IF(<HEAT-SOURCE> .GE. 0)  GOTO 174                                        PTAC   298
C              KEEP A SUM OF THE LOADS, TEMPS AND CFM FOR THE SOLAR EQ          PTAC   299
      QHZP   = QHZP + ZQH*ZMULT                                                 PTAC   300
      TZP    = TZP + TM*<CFMAX>*LSR(1)*ZMULT                                    PTAC   301
      CFMZP  = CFMZP + <CFMAX>*LSR(1)*ZMULT                                     PTAC   302
  174 CONTINUE                                                                  PTAC   303
C              IF HEAT DONE BY PLANT OR ELECTRIC SKIP                           PTAC   304
      IF(IHPREP .NE. 0)  THEN                                                   PTAC   305
        QHFAN  = QHFAN  + FH*<SUPPLY-KW>*LSR(2)*BTUKW*ZMULT                     PTAC   306
      ENDIF                                                                     PTAC   307
      IF(<HEAT-SOURCE> .LE. 1)  GOTO 19                                         PTAC   308
C              IF HEAT DONE BY HEAT PUMP SKIP                                   PTAC   309
      IF(<HEAT-SOURCE> .GE. 4)  GOTO 16                                         PTAC   310
      IF(<HEAT-SOURCE> .LE. 3)  THEN                                            PTAC   311
        CALL FURNAC(ZQH,<HEATCAPZ>,<HEAT-SOURCE>,ZMULT)                         PTAC   312
        JEM       = <AUX-E-MZ>                                                  HVAC6  486
        <AUX-EM>  = <AUX-EM> + FurnAuxkW                                        HVAC6  487
        JFM       = <HEAT-F-MZ>                                                 HVAC6  488
        <HEAT-FM> = <HEAT-FM> - FFUEL                                           HVAC6  489
        <AUX-FM>  = <AUX-FM>  + FurnAuxFuel                                     HVAC6  490
        QHGAS  = QHGAS  - FFUEL                                                 HVAC6  491
        QHLOAD = QHLOAD + ZQH*ZMULT                                             PTAC   314
        GOTO 19                                                                 PTAC   315
      ENDIF                                                                     PTAC   316
      CALL FURNAC(ZQH,<HEATCAPZ>,<HEAT-SOURCE>,ZMULT)                           PTAC   317
      GOTO 19                                                                   PTAC   318
   16 CONTINUE                                                                  PTAC   319
C              CALL HEAT-PUMP SIMULATION                                        PTAC   320
      IF(<HEAT-SOURCE> .EQ. 9)  THEN                                            PTAC   321
        QHZHP = 0.0                                                             PTAC   322
        IF(<BASEBOARD-SOURCE> .EQ. 9)  THEN                                     PTAC   323
          QHZHP = QHB                                                           PTAC   324
        ENDIF                                                                   PTAC   325
        IF((QHZHP .LE. 0.).AND.(QCRUN .GT. 0.))  THEN                           PTAC   326
          QHWASUZ = AMAX1(QHZHP, QHWAS+QCWAS-(QHWASU+QCWASU) )                  DWRECV  86
          QHZHP   = QHZHP - QHWASUZ                                             DWRECV  87
        ENDIF                                                                   PTAC   329
        CALL GHPPWR(ZQH,TM,<COIL_EWBZ>,FH,2)                                    HVAC1  574
        <ZKWQH>= QHAUXZ*KWBTU                                                   PTAC   331
      ELSE                                                                      PTAC   332
        call HPUNIT( ZQH,<HEATCAPZ>,1.0,1.0,ZKW,SLOAD,<MULTIPLIER>)             -044d2  10
        <ZKWQH>= ZKW                                                            PTAC   334
c              assign electric loads to meters                                  HVAC22 124
        IF (ZKW .GT. 0.)  THEN                                                  HVAC22 125
          ZKWmax = MAX(ZKW/EIRM2, ZKW)                                          HVAC22 126
          CALL PeakZoneDist(1, ZKW,ZKWmax, HeatEndUse,<HEAT-E-MZ>)              HVAC22 127
        ENDIF                                                                   HVAC22 128
        CALL PeakZoneDist(1, SUPPKW,<MAX_SUPP_KW>,                              HVAC22 129
     &                                   SuppEndUse,<SUPP-E-MZ>)                HVAC22 130
        SKWQH  = SKWQH + ZKW*ZMULT                                              PTAC   335
      ENDIF                                                                     PTAC   336
C              INCREMENT SYSTEM TOTAL HEATING LOAD                              PTAC   337
   19 QHZ    = QHZ + ZQH*ZMULT                                                  PTAC   338
C              IF ZONE COILS ARE ELECTRIC                                       PTAC   339
      IF (<HEAT-SOURCE>.EQ.1)  THEN                                             PTAC   340
        X      = ZQH*KWBTU                                                      PTAC   341
        ZKW    = ZKW    - X                                                     PTAC   342
        SKWQH  = SKWQH  - X*ZMULT                                               PTAC   343
c              assign electric load to meter                                    HVAC22 131
        CALL PeakZoneDist(1, -X,<MAX_HEAT_KWZ>, HeatEndUse,<HEAT-E-MZ>)         HVAC22 132
      ENDIF                                                                     PTAC   345
C              IF BASEBOARDS ARE ELECTRIC                                       PTAC   346
      IF (<BASEBOARD-SOURCE>.EQ.1)  THEN                                        PTAC   347
        X      = QHBZ*KWBTU                                                     PTAC   348
        ZKW    = ZKW    - X                                                     PTAC   349
        SKWQH  = SKWQH  - X*ZMULT                                               PTAC   350
c              assign electric load to meter                                    HVAC22 133
        CALL PeakZoneDist(1, -X,<MAX_BBRD_KWZ>, HeatEndUse,<HEAT-E-MZ>)         HVAC22 134
      ENDIF                                                                     PTAC   352
      IF (<BASEBOARD-SOURCE>.LE.1)  QGBB = QGBB - ZQH*ZMULT                     PTAC   353
C              IF BASEBOARDS ARE GAS OR OIL                                     PTAC   354
      IF((<BASEBOARD-SOURCE>.EQ.2).OR.(<BASEBOARD-SOURCE>.EQ.3)) THEN           PTAC   355
        CALL FURNAC(QHBZ,<BASEBOARD-RATING>,                                    PTAC   356
     $              <BASEBOARD-SOURCE>,<MULTIPLIER>)                            PTAC   357
        JEM       = <AUX-E-MZ>                                                  HVAC6  500
        <AUX-EM>  = <AUX-EM> + FurnAuxkW                                        HVAC6  501
        JFM       = <HEAT-F-MZ>                                                 HVAC6  502
        <HEAT-FM> = <HEAT-FM> - FFUEL                                           HVAC6  503
        <AUX-FM>  = <AUX-FM>  + FurnAuxFuel                                     HVAC6  504
        QGBB    = QGBB - FFUEL                                                  HVAC6  505
      ENDIF                                                                     PTAC   359
   20 CONTINUE                                                                  PTAC   360
C********************** run function : PTAC-1Z *********************            PTAC   361
      IF( MSYSF(57) .NE. 0 )   CALL  FINTS( MSYSF(57), 1. )                     PTAC   362
C*******************************************************************            PTAC   363
C              INCREMENT TOTAL SYSTEM LATENT LOAD                               PTAC   364
      QLSUM  = QLSUM + <QL>*ZMULT                                               PTAC   365
C              INCREMENT TOTAL SYSTEM PLENUM LOAD                               PTAC   366
      QPSUM  = QPSUM + <QP>*ZMULT                                               PTAC   367
C              CALC ZONE FAN KW                                                 PTAC   368
      ZFANKW = (FH+FC)*<SUPPLY-KW>*LSR(2)                                       PTAC   369
      CFMZ   = (FH+FC)                                                          -043a  113
      FANKW  = FANKW + ZFANKW*ZMULT                                             PTAC   370
      ZFANKWmax = <CFMAX> * <SUPPLY-KW>                                         HVAC22 135
c              assign electric load to meter                                    HVAC22 136
      CALL PeakZoneDist(1, ZFANKW,ZFANKWmax, VentEndUse,<VENT-E-MZ>)            HVAC22 137
C             ASSIGN SUPPLEMENTAL HEAT TO CORRECT SOURCE                        PTAC   372
C             IF HEAT SOURCE NOT HEAT PUMP OR UNCONDITIONED, SKIP               PTAC   373
      IF((<HEAT-SOURCE> .NE. 4) .OR. (<ZONE-TYPE> .NE. 1)) GO TO 75             PTAC   374
C             IF SUPP SOURCE NOT FURNACE SKIP                                   PTAC   375
      IF((<SUPP-SOURCE> .NE. 2) .AND. (<SUPP-SOURCE> .NE. 3)) GO TO 71          PTAC   376
        CALL FURNAC(SLOAD, <SUPP-HEAT-CAP>, <SUPP-SOURCE>, ZMULT)               PTAC   377
        JEM       = <AUX-E-MZ>                                                  HVAC6  508
        <AUX-EM>  = <AUX-EM> + FurnAuxkW                                        HVAC6  509
        JFM       = <SUPP-F-MZ>                                                 HVAC6  510
        <SUPP-FM> = <SUPP-FM> - FFUEL                                           HVAC6  511
        <AUX-FM>  = <AUX-FM> + FurnAuxFuel                                      HVAC6  512
        QHGSUP = QHGSUP - FFUEL                                                 HVAC6  513
        HEATFL = HEATFL + FFUEL                                                 PTAC   381
        GO TO 75                                                                PTAC   382
C             IF NO SUPPLEMENTAL HEAT LOAD, THEN SKIP                           PTAC   383
   71 CONTINUE                                                                  PTAC   384
      IF(SLOAD .GE. -1.0) GO TO 75                                              PTAC   385
C             IF SUPP SOURCE NOT ELECTRIC, THEN SKIP                            PTAC   386
      IF(<SUPP-SOURCE> .NE. 1) GO TO 73                                         PTAC   387
        X      = SLOAD*KWBTU                                                    PTAC   388
        ZKW    = ZKW    - X                                                     PTAC   389
        SKWQH  = SKWQH  - X*ZMULT                                               PTAC   390
c              assign electric load to meter                                    HVAC22 138
        CALL PeakZoneDist(1, -X,<MAX_SUPP_KW>, SuppEndUse,<SUPP-E-MZ>)          HVAC22 139
        QHGSUP = QHGSUP - SLOAD*ZMULT                                           PTAC   392
C             IF SUPP SOURCE NOT HOT WATER, THEN SKIP                           PTAC   393
   73 CONTINUE                                                                  PTAC   394
      IF(<SUPP-SOURCE> .GT. 0) GO TO 75                                         PTAC   395
        QHSUP = QHSUP + SLOAD * ZMULT                                           PTAC   396
        QHGSUP = QHGSUP - SLOAD*ZMULT                                           PTAC   397
C             IF SUPP SOURCE CANNOT BE SOLAR, THEN SKIP                         PTAC   398
      IF(<SUPP-SOURCE> .GE. 0) GO TO 75                                         PTAC   399
        QHZP  = QHZP + SLOAD * ZMULT                                            PTAC   400
        TZP   = TZP + TM * <CFMAX> * LSR(1) * ZMULT                             PTAC   401
        CFMZP = CFMZP + <CFMAX> * LSR(1) * ZMULT                                PTAC   402
   75 CONTINUE                                                                  PTAC   403
c              exhaust fan                                                      -044e  416
      IF (<EXHAUST-SOURCE> .eq. 1)    ! makeup by system OA                     -046   272
     &  Call ZoneExhaust(9, FH+FC)    ! exhaust flow and power                  -046   273
      ECFM = ECFM + EXCFM*ZMULT                                                 -044e  418
C              INCREMENT TOTAL SYSTEM KW BY TOTAL ZONE KW                       PTAC   404
      ZKW = <ZKW> + ZFANKW + ZKW + ZKWS                                         PTAC   405
      <SKW>  = <SKW> + ZKW*ZMULT                                                PTAC   406
c              Save TM and WM for CONS() terms next hour                        -044c2  96
      <zn.Tmix1> = TM                                                           -044c2  97
      <zn.Wmix1> = WM                                                           -044c2  98
      IF (<sy.FanOnPast> .lt. 0.)  THEN  ! start-up hour                        -044c2  99
        <zn.TmixStart> = TM                                                     -044c2 100
        <zn.WmixStart> = WM                                                     -044c2 101
      ENDIF                                                                     -044c2 102
c              save values for coil flow calculations                           PTAC   407
c              save zonal coil flows and loads for circulation loop calcs       HVAC1  575
      <COIL_CFMZ>   = <CFMAX>*LSR(1)                                            HVAC1  576
      <COIL_EDBZ>   = TM                                                        HVAC1  577
      <COIL_EWBZ>   = WBFS(TM,WM,PATM)                                          HVAC1  578
      <COIL_CYCLEZ> = 1.0                                                       HVAC1  579
      <COIL_QZ>     = ZQH                                                       HVAC1  580
      IF (<SUPP-SOURCE> .LT. 0)  <COIL_QZ> = <COIL_QZ> + SLOAD                  HVAC13  61
      <BBRD_EDB> = TAVE                                                         HVAC1  582
      <BBRD_Q>   = QHBZ                                                         HVAC1  583
C              SUM END-USE VARIABLES FOR THIS ZONE                              PTAC   412
C              IF NO REP-BLOCK BUFFER OR NO HOURLY-REP                          PTAC   414
C              WAS SCHEDULED ON THIS HOUR SKIP                                  PTAC   415
      IF((<IZNBUFP>.EQ.0).OR.(IRSCH.EQ.0))  GOTO 30                             PTAC   416
C              SINCE THE HEAT PUMP SYSTEM HAS NO CENTRAL AIR                    PTAC   417
C              HANDLING UNIT WE SAVE SOME OF THE INFO USED                      PTAC   418
C              TO COMPUTE THE LOADS IN THE SPECIAL VARIABLE                     PTAC   419
C              WHICH IS THEN WRITTEN TO THE REP-BLOCK BUFFER                    PTAC   420
      FCHPS(1)  = TS                                                            PTAC   421
      FCHPS(2)  = ZQH                                                           PTAC   422
      FCHPS(3)  = ZQC                                                           PTAC   423
      FCHPS(4)  = ZFANKW                                                        PTAC   424
      FCHPS(5)  = TM                                                            PTAC   425
      FCHPS(6)  = TC                                                            PTAC   426
      FCHPS(7)  = WM                                                            PTAC   427
      FCHPS(8)  = WCOIL                                                         PTAC   428
      FCHPS(9)  = PO                                                            PTAC   429
      FCHPS(10) = QCLATZ                                                        PTAC   430
      FCHPS(11) = PLRC                                                          PTAC   431
      FCHPS(12) = PLRH                                                          PTAC   432
      FCHPS(13) = EIR                                                           PTAC   433
      FCHPS(14) = <COIL_EWBZ>                                                   HVAC1  584
      FCHPS(15) = SLOAD                                                         PTAC   435
C              CALL THE ROUTINE TO FILL THE REP-BLOCK BUFFER                    PTAC   436
      CALL USERZR( ZP1,ZP2 )                                                    PTAC   437
   30 CONTINUE                                                                  PTAC   438
      IF(IRPZON .NE. 0)  CALL RPTZON                                            PTAC   439
C              INCREMENT ZP1 TO POINT TO THE NEXT ZONE                          PTAC   440
      VOLMUL = VOLMUL+<VOLUME>*<MULTIPLIER>                                     PTAC   441
      XT1    = <VOLUME>*<MULTIPLIER>*WR                                         PTAC   442
      WAV    = WAV+XT1                                                          PTAC   443
      ZP1    = ZP1 + NZD                                                        PTAC   444
   10 CONTINUE                                                                  PTAC   445
      QHP    = 0.0                                                              PTAC   446
      <PASTWR>=WAV/VOLMUL                                                       PTAC   447
C              IF THE BASEBOARDS ARE NOT SOLAR SKIP                             PTAC   448
      IF(<BASEBOARD-SOURCE> .GE. 0)  GOTO 173                                   PTAC   449
C              SAVE THE LOAD                                                    PTAC   450
      QHBP   = QHBP + QHB                                                       PTAC   451
  173 CONTINUE                                                                  PTAC   452
C              WORRY ABOUT PLANT AND ELEC RESISTANCE HEAT                       PTAC   453
      IF(<HEAT-SOURCE> .LE. 0)  <QH> = QHZ                                      PTAC   454
      IF(IHPREP .NE. 0)  THEN                                                   PTAC   455
        IF(<BASEBOARD-SOURCE> .NE. 9)  THEN                                     PTAC   456
          QHGSLD = QHGSLD + QHB                                                 PTAC   457
          QHGSUP = QHGSUP + QGBB                                                PTAC   458
        ENDIF                                                                   PTAC   459
      ENDIF                                                                     PTAC   460
c                                                                               DWRECV  88
c              Recover gas heat-pump waste heat to domestic water heater        DWRECV  89
      IF (<HTREC-DW-HEATER> .GT. 0  .AND.  <HEAT-SOURCE> .EQ. 9)                DWRECV  90
     &  CALL GHPPWR(xxx,xxx,xxx,xxx,3)                                          DWRECV  91
C********************** run function : PTAC-2 **********************            PTAC   461
      IF( MSYSF(58) .NE. 0 )   CALL  FINTS( MSYSF(58), 2. )                     PTAC   462
C*******************************************************************            PTAC   463
      RETURN                                                                    PTAC   464
      END                                                                       PTAC   465
      FUNCTION PVSAT(TEMP)                                                      PVSAT    2
C                                                                               PVSAT    3
C              GET SATURATED VAPOR PRESSURE AT TEMP                             PVSAT    4
C                                                                               PVSAT    5
C              PPWVMS CONTAINS THE PARTIAL PRESSURE OF WATER VAPOR              PVSAT    6
C              AT SATURATION FOR TEMPERATURES FROM 1 TO 120 DEGREES             PVSAT    7
C              FAHRENHEIT                                                       PVSAT    8
C                                                                               PVSAT    9
      COMMON  /PPWVMS/ PPWVMS(200)                                              /PPWVMS/ 2
C                                                                               PVSAT   11
      BRACKT(AMN,A,AMX) = AMAX1(AMN,AMIN1(AMX,A))                               PVSAT   12
C                                                                               PVSAT   13
      TTEMP = BRACKT(-50.0,TEMP,148.)                                           PVSAT   14
      ITEMP = INT(TTEMP)                                                        PVSAT   15
      D     = TTEMP - FLOAT(ITEMP)                                              PVSAT   16
      PVSAT = PPWVMS(ITEMP+51) + D*(PPWVMS(ITEMP+52)-PPWVMS(ITEMP+51))          PVSAT   17
      RETURN                                                                    PVSAT   18
      END                                                                       PVSAT   19
      SUBROUTINE READSS                                                         READSS   2
C                                                                               READSS   3
C                            READ STANDARD AND DESIGN FILES                     READSS   4
C                                                                               READSS   5
C              DEVELOPED BY                                                     -130     1
C                            J. J. Hirsch & S. D. Gates                         -130     2
C                            James J. Hirsch & Associates                       -130     3
C                            Camarillo, California                              -130     4
C              BASED UPON CODE DEVELOPED BY J. J. Hirsch and                    -130     5
C                            W. F. Buhl                                         -130     6
C                            A. E. Erdem                                        -130     7
C                            Lawrence Berkeley National Laboratory              -130     8
C                            University of California                           -130     9
Copyright (c) 1997 by James J. Hirsch. All Rights Reserved. Unpublished         -130    10
c rights reserved under the Copyright Laws of the United States.                -130    11
c RESTRICTED RIGHTS NOTICE: Government use, reproduction or disclosure          -130    12
c is subject to restrictions as set forth in Rights in Data (g)(3) in           -130    13
c UC/LBL purchase order 4607010 with J.J. Hirsch & Associates.                  -130    14
C                                                                               READSS   7
      COMMON  /IRUNPD/ NRUNPD, JRUNPD, IRUNPD(6,15)                             /IRUNPD/ 2
      COMMON  /NHRSHR/ NHRSHR(128), IHRCTR(5,128), NHRITM,FILEHR,ICECHS         -048j    1
      INTEGER          FILEHR                                                   /NHRSHR/ 3
      COMMON /SUMBUF/ IBUFSL,IBUFSB,IBUFSE                                      /SUMBUF/ 2
      COMMON  /BEPS  /  BGAREA, BNAREA, PctSysOvrld, PctPltOvrld,               HVAC6    1
     $                  SiteEnergy, SourceEnergy                                HVAC6    2
      DIMENSION         BEPS(6)                                                 HVAC6    3
      EQUIVALENCE       (BEPS(1),BGAREA)                                        HVAC6    4
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON  /ENDUSE/ SUPPKW, HEATKW                                           HVAC27   1
      COMMON  /BUFERS/  MRLEN1, MRLEN2, IBLDSB,IELDSB,LLDSB,N3,IBRPB1,          HVACi    1
     1                  IERPB1,LRPB1,IBRPB2,IERPB2,LRPB2                        HVACi    2
      COMMON  /BUF   / DBUF(52,9999), IZREF(9999),                              -048a    8
     &                 DAYMTR(61,24), ElecPeaks5(13,25,24)                      Time     2
      DIMENSION        IDBUF(52,9999), OBUF(42,24,4), IOBUF(42,24,4)            -048a    9
      EQUIVALENCE      (DBUF(1,1),IDBUF(1,1)),                                  /BUF/    5
     1                 (OBUF(1,1,1),DBUF(1,1)),                                 /BUF/    6
     2                 (OBUF(1,1,1),IOBUF(1,1,1))                               /BUF/    7
      COMMON  /CTRL  / VERS(2),IRPFLG(4),IOVRLL(7),IWRTFL,IPROG,                /CTRL/   2
     1                 IFATAL,NAMPRG(3,7),MTRICR                                /CTRL/   3
      COMMON  /DESHRQ/ NDESDY, IDDTYP(2), DESHRQ(360)                           Time     3
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                 IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                        /FILES/  3
     2               , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                   /FILES/  4
     3                 IHRREP(3), IHRPAS(2)                                     /FILES/  5
      common  /FNSYS/  ISKIPS, MSYSF(120)                                       /FNSYS/  2
      COMMON  /FPTRS/  IFLABL(4), LSFREC, NLITT , NCONT , NCODE, ICONT0         /FPTRS/  2
     .               , IFLEVL, NSYMT, ISYMT0, ICODE0, ILITT0, IVAR0             /FPTRS/  3
     3         , IFNBGN, NFN, FRANDX, FNTYPE, IFGET, IVAR, JSYMT                /FPTRS/  4
      COMMON /HOLALT/ NHOLA(2),IHOLTY(2),IHOLDY(60,2),IHOLMN(60,2)              HOLID1   1
      COMMON  /IAX   / IAX, IADIM, IADIMV, IAXMAX, KORE, IAXlds, IAXsys         HR       9
      COMMON  /HRREP / Irb, Ihrp, Lrb, Lhrp, Nrb, Nhrp, IVTLIM(3,50),           HR       5
     &                 IGRPtr, IBRPtr, IRSch, IRSchT(5),                        HR       6
     &                 NHRTyp(3), ITBUF(3), ITBUFB(3), ITBUFE(3),               HR       7
     &                 IHREOF, ICDFLG                                           HR       8
      COMMON  /LENS/   MWFLEN, MRLEN, MSHLEN, MWNLEN, MDRLEN, MXLEN,            /LENS/   2
     1                 MULEN, MZLEN, MIWLEN, MFLLEN,                            /LENS/   3
     2                 LMTB, LLDSOU, MSTLEN, LSTFT, MWLLEN                      /LENS/   4
      COMMON  /PTRBGN/ IWFB, IWPB, ICONSB, IGTB, IWLB, IGEOB, ISHADB,           /PTRBGN/ 2
     &                 IWINB, IDRB, IEWB, IUGB, ISPB, IIWPB, IIWB,              /PTRBGN/ 3
     &                 IFLB, ISPCDB, IOTHB, ILHB, IZQCMB, ISSHDB,               /PTRBGN/ 4
     &                 IOHFIB, IZLSK, IZLSL, ISTFB, ILSSH                       PV2      1
      COMMON  /PtrCrv/ Icv, Ncv, Lcv                                            /PtrCrv/ 2
      COMMON /INTS  /  IZERO,IONE,ITWO,ITHREE,IFOUR,IFIVE,ISIX,                 RemPA    9
     $                 ISEVEN,IEIGHT,ININE,ITEN,                                RemPA   10
     $                 I11,I12,I13,I14,I15,I16,I17,I18,I19,I20,                 RemPA   11
     $                 I21,I22,I23,I24,I25,I26,I27,I28,I29,I30,                 RemPA   12
     $                 I31,I32,I33,I34,I35,I36,I37,I38,I39,I40,                 RemPA   13
     $                 I41,I42,I43,I44,I45,I46,I47,I48,I49,I50,                 RemPA   14
     $                 I51,I52,I53,I54,I55,I56,I57,I58,I59,I60,                 HVAC6    6
     $                 I61,I62,I63,I64,I65,I66,I67,I68,I69,I70,                 HVAC6    7
     $                 I71,I72,I73,I74,I75,I76,I77,I78,I79,I80,                 HVAC6    8
     $                 I81,I82,I83,I84,I85,I86,I87,I88,I89,I90,                 HVAC6    9
     $                 I91,I92,I93,I94,I95,I96,I97,I98,I99,I100                 HVAC6   10
      INTEGER          INTS(101)                                                HVAC6   11
      EQUIVALENCE      (INTS(1),IZERO)                                          /INTS/   7
      COMMON  /LOCALD/ STALAT, STALON, ITIMZ, BAZIM, BALTIT,                    /LOCALD/ 2
     1                 SSTALA, CSTALA, TSTALA, SBAZIM, CBAZIM                   /LOCALD/ 3
     +                ,BXORG,BYORG,SHCOEF,TP1,TP2,WSTP1,WSTP2,                  /LOCALD/ 4
     +                 WSHGT,WSHGTL(12),ISREFL,IHOLX                            HOLID1   2
      DIMENSION        LOCALD(32)                                               HOLID1   3
      EQUIVALENCE      (LOCALD(1),STALAT)                                       /LOCALD/ 7
      COMMON  /MISCD / TEMPS(4,9999),CONS(5),TEMPSL(9999),                      -048a   10
     1                 BLDGQH,BLDGQC,BLDGQL,BLDGP,BPMULT,                       /MISCD/  3
     $                 DBTMIN,DBTMAX,WMIN,WMAX,NSPZ(9999),                      -048a   11
     3                 DQ, DTP, DTR, DTS, FPI, PLRCC , POM, TC2, TDM,           /MISCD/  5
     4                 TRA,WCOL,WCOLM,WMM,YPI,KWBTU,BTUKW,UNFILD,Unusedm        RemPA   45
      REAL             KWBTU                                                    /MISCD/  7
      COMMON  /PLANTD/ QHMP,TMP,CFMP,QHPP,CFMPP,                                /PLANTD/ 2
     1                 QHZP,TZP,DHWPKW,DHWPLF,DHWQRP                            RemPA   46
      REAL             PLANTD(10)                                               RemPA   47
      EQUIVALENCE      (PLANTD(1), QHMP)                                        RemPA   48
      COMMON  /PtrSch/ Isched, Nsched, Lsched, NVECT                            HR      11
      COMMON  /PTRPLT/ Ipm,Ilp,Ich,Ibl,Idw,Itw,Ipv,Ign,Itk,Ihx,                 PV       1
     &                 Iec,Ilm,Iem,Ifm,Ism,Icm,Imm,Imc,Igl,Isp2,                XFC2     1
     &                 Ispare(5),  Ipe,                                         HVAC19   3
     &                 Npm,Nlp,Nch,Nbl,Ndw,Ntw,Npv,Ngn,Ntk,Nhx,                 PV       2
     &                 Nec,Nlm,Nem,Nfm,Nsm,Ncm,Nmm,Nmc,Ngl,Nsp2,                XFC2     2
     &                 Nspare(5),  Npe,                                         HVAC19   6
     &                 Lpm,Llp,Lch,Lbl,Ldw,Ltw,Lpv,Lgn,Ltk,Lhx,                 PV       3
     &                 Lec,Llm,Lem,Lfm,Lsm,Lcm,Lmm,Lmc,Lgl,Lsp2,                XFC2     3
     &                 Lspare(5),  Lpe,                                         HVAC19   9
     &                 Jpm,Jlp,Jch,Jbl,Jdw,Jtw,Jpv,Jgn,Jtk,Jhx,                 PV       4
     &                 Jec,Jlm,Jem,Jfm,Jsm,Jcm,    Jmc,Jgl,                     HVAC19  11
     &                 Jpe, kpr, NumMeters, NumIntHX                            XFC1     1
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      COMMON  /REPORT/ IREPRT(4,37),IPRG,IUNIQV(100),IUNIQS(100),IUNIQL         HVAC14   4
      COMMON  /TITLE / TITLE(10,5)                                              /TITLE/  2
      COMMON  /REPRT1/ IREFG, Iuniq                                             XFC1     2
      COMMON  /SYSTD / TH,TC,TM,TR,QH,QC,QHZ,QCZ,QHB,QHP,QHUM,                  /SYSTD/  2
     1                 QDHUM,TCMIN,THMAX,QLSUM,QPSUM,CFM,CFMH,CFMC,             /SYSTD/  3
     2                 RCFM,ECFM,CINF,FON,HON,CON,BON,SCONS(3),PH,PC,           /SYSTD/  4
     3                 SKW,FANKW,unused1,WR,WM,WCOIL,WW,PO,D,                   -046f    1
     4                 FTEMP,TCR,QHR,RfanPumpKW,SGAS,SKWQH,SKWQC,QCLAT,         -131    23
     5                 SFKW,RFKW,FONNGT,WSURF,RWalkinQ,TSURF,TRh,               -131    24
     6                 CBF,CBF1,CBF2,EON,PLRCFM,PLRC,PLRH,QCM1,                 /SYSTD/  8
     7                 QCM2,QHM1,EIRM1,EIRM2,EIR,OFKW,QCT,QCS,                  /SYSTD/  9
     8                 WRMAX,WRMIN,CFMRAT,QdistG,QdistL,RON,QHT,                /SYSTD/ 10
     9                 TPOMIN,POMIN,QHSUP,QRSENS,QRLAT,QRREC,QRREJ,             /SYSTD/ 11
     1                 RCOMKW,RDEFKW,RAUXKW,ECFMP,CFMIN,CINFP,DT,DW,            /SYSTD/ 12
     2                 EWB,IC,NATTSP,Q,RETR,SLOAD,QLSUMP,T,TCHUM,TEND,          /SYSTD/ 13
     3                 TS,hgbmin,HPDefE,EconoOnly,TDuctEnv,                     -044e1   1
     4                 QCUNMT,CapRh,CapRph,CapRc                                HVAC25   3
      REAL             SYSTD(113)                                               HVAC19  13
      EQUIVALENCE      (SYSTD(1),TH)                                            RemPA   65
      COMMON  /TIME  / IDOY, IYR, IMO, IDAY, IHR,                               Time     4
     &                 ISCMO, ISCDAY, ISCHR, IDOW, ISCDOW, iDSdates(6),         -044e5   1
     &                 iTimeFlg, iDSFlg, iDDFlg, InitialFlg, LeapYr,            Time     6
     &                 CLOCK(10), MONDSC(13), MONLEN(12), MONSDA(12)            HR      12
      COMMON /UNITT/   VKONV(300), DUMLOG(4), JUNITT(4,300,2)                   /UNITT/  2
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
      COMMON /SSPDAT/  PLRCS,QCCKWS,QCCMPS,PLRHS,QHCKWS,QHCMPS                  /SSPDAT/ 2
     $                ,PLRFS,PLRFCS,PLRFHS,sspss                                /SSPDAT/ 3
     $                ,PLRCZ,QCCKWZ,QCCMPZ,PLRHZ,QHCKWZ,QHCMPZ                  /SSPDAT/ 4
     $                ,PLRFZ,PLRFCZ,PLRFHZ,sspsz                                /SSPDAT/ 5
     $                ,ISSPF,IWCCF,IPCCF,SSPSAV                                 /SSPDAT/ 6
      DIMENSION        SSPD(24)                                                 JJHfix   1
      EQUIVALENCE      (SSPD(1),PLRCS)                                          /SSPDAT/ 8
      COMMON  /ZONED / EXCFM,FH,FC,CFMZ,QHBZ,QOVER,THZ,TCZ,ERMAX,ERMIN,         /ZONED/  2
     1                 TRY,FTD,CORINT,G0,G1,G2,G3,SIGMAG,TL,ZQHR,TAVE,          /ZONED/  3
     2                 ZQH,ZQC,FCHPS(15),ACFM,ZKW,TCMINZ,THMAXZ,                /ZONED/  4
     3                 ERMAXM,ERMINM,THR,CSSCND,CSSVEC,HENOW,QGWIN,             /ZONED/  5
     4                 QSNABT,QGOPWL,QGVEC,CFMCVT,SSFPT,CFMVNT,ZFANKW,          /ZONED/  6
     5                 ZKWCBT,ZKWHBT,ZCapRbbrd, XC,ZC,XH,ZH                     -044e2   7
      REAL ZONED(63)                                                            -044e2   8
      EQUIVALENCE (ZONED(1),EXCFM)                                              /ZONED/  9
      COMMON /SHP   / QCRUN,QCLOAD,QCGAS,QCAUX,QCGSLD,QCGSUP,                   /SHP/    2
     1                QCWAS,QCWASU,QCGSAV,QCFAN,                                /SHP/    3
     2                QHRUN,QHLOAD,QHGAS,QHAUX,QHGSLD,QHGSUP,                   /SHP/    4
     3                QHWAS,QHWASU,QHGDFR,QHFAN,          CUR(25),              /SHP/    5
     4                GSAV1,GASV2,PCH,ISZCZ,GCAP(2),GEDB,QHDFRG,                -044c1   1
     5                GRPM,PLRSUP,CFMCYC,CLPLR,CFMVVT,QHZHP,PCCEDB,             /SHP/    7
     6                IHPREP,IHPOUT,IHPHRR,IHPHRN,IRST,IREN                     /SHP/    8
      COMMON /SHPZ  / QCRUNZ,QCLOADZ,QCGASZ,QCAUXZ,QCGSLDZ,QCGSUPZ,             /SHP/    9
     1                QCWASZ,QCWASUZ,QCGSAVZ,QCFANZ,                            /SHP/   10
     2                QHRUNZ,QHLOADZ,QHGASZ,QHAUXZ,QHGSLDZ,QHGSUPZ,             /SHP/   11
     3                QHWASZ,QHWASUZ,QHGDFRZ,QHFANZ                             /SHP/   12
      DIMENSION       SHP(60),SHPZ(20)                                          /SHP/   13
      EQUIVALENCE     (SHP,QCRUN),(SHPZ,QCRUNZ)                                 /SHP/   14
     1               ,(DFM1,CUR(18)),(DFM2,CUR(19)),(DFM3,CUR(20))              /SHP/   15
      COMMON /ISPLST/ ISPLST(9999),ISPLOC(9999)                                 -048a   12
      INTEGER ISAV(1)                                                           READSS  35
      EQUIVALENCE (ISAV(1),DBUF(1,1))                                           READSS  36
      INTEGER IBUF(200000)                                                      JJHfix   5
      REAL BUF(200000)                                                          JJHfix   6
      EQUIVALENCE (BUF(1),AA(1)), (IBUF(1),AA(1))                               READSS  39
      INTEGER ISTD(2), IDSN(2), IBDL(4)                                         HR      62
      INTEGER ISSAT(9), ISSBT(9), ISSCT(9), ISSDT(9), ISSET(9),                 HVAC11  34
     $        ISSFT(9), ISSGT(9), ISSHT(9), ISSIT(9), ISSJT(9),                 HVAC11  35
     $        ISSKT(9), ISSLT(9), ISSMT(9), ISSNT(9), ISSOT(9),                 HVAC11  36
     $        ISSPTh(9), ISSPTc(9), ISSRT(9),                                   HVAC11  37
     $        ISSRGT(9), ISSUPT(9), ISSHPC(9),ISSHPH(9),                        HVAC11  38
     $        NoDesign(3)                                                       HVAC11  39
      COMMON  /IST/    IST(4,32)                                                /IST/    2
      INTEGER  SN                                                               READSS  53
      INTEGER ZP1B,ZP2B                                                         READSS  54
C              ARRAYS TO ACCEPT DATA FROM LOADS-DATA HOURLY-REPORT FILE         READSS  55
      INTEGER IDESDY(3)                                                         READSS  62
      COMMON /WCTRL/   IwinReturn, Imsgflg                                      /WCTRL/  2
#ifndef _DLL                                                                 /* -048     1 */ 
      COMMON /WIN_MB/ MB_OK,MB_ICONSTOP,MB_ICONEXCLAMATION,MB_TASKMODAL,        -048     2
     &                MB_ICONINFORMATION                                        -048     3
#else                                                                        /* -048     4 */ 
      include 'msgbox.fi'                                                       -048     5
#endif                                                                       /* -048     6 */ 
      DATA  ISTD           /4HSTAN, 4HDARD/                                     READSS  63
      DATA  IDSN           /4HDESI, 4HGN  /                                     READSS  64
      DATA  IBDL           /4HBDL , 4H    , 4H    , 4H    /                     READSS  67
      DATA ISSAT  /4HSS-A, 4H Sys, 4Htem , 4HLoad, 4Hs Su,                      HVAC11  40
     $             4Hmmar, 4Hy fo, 4Hr   , 4H    /                              HVAC11  41
      DATA ISSBT  /4HSS-B, 4H Sys, 4Htem , 4HLoad, 4Hs Su,                      HVAC11  42
     $             4Hmmar, 4Hy fo, 4Hr   , 4H    /                              HVAC11  43
      DATA ISSCT  /4HSS-C, 4H Sys, 4Htem , 4HLoad, 4H Hou,                      HVAC11  44
     $             4Hrs f, 4Hor  , 4H    , 4H    /                              HVAC11  45
      DATA ISSDT  /4HSS-D, 4H Bui, 4Hldin, 4Hg HV, 4HAC L,                      HVAC11  46
     $             4Hoad , 4HSumm, 4Hary , 4H    /                              HVAC11  47
      DATA ISSET  /4HSS-E, 4H Bui, 4Hldin, 4Hg HV, 4HAC L,                      HVAC11  48
     $             4Hoad , 4HHour, 4Hs   , 4H    /                              HVAC11  49
      DATA ISSFT  /4HSS-F, 4H Zon, 4He De, 4Hmand, 4H Sum,                      HVAC11  50
     $             4Hmary, 4H for, 4H    , 4H    /                              HVAC11  51
      DATA ISSGT  /4HSS-G, 4H Zon, 4He Lo, 4Hads , 4HSumm,                      HVAC11  52
     $             4Hary , 4Hfor , 4H    , 4H    /                              HVAC11  53
      DATA ISSHT  /4HSS-H, 4H Sys, 4Htem , 4HUtil, 4Hity ,                      HVAC11  54
     $             4HEner, 4Hgy U, 4Hse f, 4Hor  /                              HVAC11  55
      DATA ISSIT  /4HSS-I, 4H Sen, 4Hsibl, 4He/La, 4Htent,                      HVAC11  56
     $             4H Sum, 4Hmary, 4H for, 4H    /                              HVAC11  57
      DATA ISSJT  /4HSS-J, 4H Pea, 4Hk He, 4Hatin, 4Hg an,                      HVAC11  58
     $             4Hd Co, 4Holin, 4Hg fo, 4Hr   /                              HVAC11  59
      DATA ISSKT  /4HSS-K, 4H Spa, 4Hce T, 4Hempe, 4Hratu,                      HVAC11  60
     $             4Hre S, 4Humma, 4Hry f, 4Hor  /                              HVAC11  61
      DATA ISSLT  /4HSS-L, 4H Fan, 4H Ele, 4Hctri, 4Hc En,                      HVAC11  62
     $             4Hergy, 4H Use, 4H for, 4H    /                              HVAC11  63
      DATA ISSMT  /4HSS-M, 4H Bui, 4Hldin, 4Hg HV, 4HAC F,                      HVAC11  64
     $             4Han E, 4Hlec , 4HEner, 4Hgy  /                              HVAC11  65
      DATA ISSNT  /4HSS-N, 4H Rel, 4Hativ, 4He Hu, 4Hmidi,                      HVAC11  66
     $             4Hty S, 4Humma, 4Hry f, 4Hor  /                              HVAC11  67
      DATA ISSOT  /4HSS-O, 4H Spa, 4Hce T, 4Hempe, 4Hratu,                      HVAC11  68
     $             4Hre S, 4Humma, 4Hry f, 4Hor  /                              HVAC11  69
      DATA ISSPTh /4HSS-P, 4H Hea, 4Hting, 4H Per, 4Hform,                      HVAC11  70
     $             4Hance, 4H Sum, 4Hmary, 4H of /                              HVAC11  71
      DATA ISSPTc /4HSS-P, 4H Coo, 4Hling, 4H Per, 4Hform,                      HVAC11  72
     $             4Hance, 4H Sum, 4Hmary, 4H of /                              HVAC11  73
      DATA ISSRT  /4HSS-R, 4H Zon, 4He Pe, 4Hrfor, 4Hmanc,                      HVAC11  74
     $             4He Su, 4Hmmar, 4Hy fo, 4Hr   /                              HVAC11  75
c                                                                               HVAC11  76
      DATA ISSRGT /4HREFG, 4H Ref, 4Hrige, 4Hrati, 4Hon E,                      HVAC11  77
     $             4Hquip, 4Hment, 4H for, 4H    /                              HVAC11  78
      DATA ISSUPT /4HSUPL, 4H Eva, 4Hp/De, 4Hsicc, 4Hant ,                      HVAC11  79
     $             4HCool, 4Hing , 4Hfor , 4H    /                              HVAC11  80
      DATA ISSHPC /4HSS-Q, 4H Hea, 4Ht Pu, 4Hmp C, 4Hooli,                      HVAC11  81
     $             4Hng S, 4Humma, 4Hry f, 4Hor  /                              HVAC11  82
      DATA ISSHPH /4HSS-Q, 4H Hea, 4Ht Pu, 4Hmp H, 4Heati,                      HVAC11  83
     $             4Hng S, 4Humma, 4Hry f, 4Hor  /                              HVAC11  84
      DATA NoDesign /4H    ,4H    ,4H    /                                      HVAC11  85
c  ?temp                                                                        HVAC5   28
c      DATA ISS64 /                                                             HVAC5   29
c     1 4H WAT,4HER-S,4HIDE ,4HECON,4HO OP,4HERAT,4HION ,4HFOR /                HVAC5   30
c      DATA ISS70 /                                                             HVAC5   31
c     1 4H DHW,4H TAN,4HK OP,4HERAT,4HION ,4HFOR  /                             HVAC5   32
      DATA IBLK /4H    /                                                        RemPA  452
      DATA IDESDY /4H  DE,4HSIGN,4H DAY/                                        READSS 146
C                                                                               READSS 147
C                                                                               READSS 148
c                                                                               HVAC   254
c              flag to abort                                                    HVAC   255
      Iabort = 0                                                                HVAC   256
c                                                                               HVAC   257
C              CONS CONTAINS VARIOUS CALCULATIONAL CONSTANTS                    READSS 149
C                                                                               READSS 150
C              CONS(1) = SPECIFIC HEAT OF A CFM OF AIR IN BTU/HR                READSS 151
C              CONS(2) = HEAT OF VAPORIZATION OF WATER IN BTU/LB                READSS 152
C              CONS(3) = CONVERSION FACTOR FOR FAN PRESS TO KW                  READSS 153
C              KWBTU IS THE KW/BTU CONVERSION CONSTANT PER ASHRAE FUND.         READSS 154
C                                                                               READSS 155
C              FLAG FOR HEAT PUMP REPORTS                                       READSS 156
      IHPREP = 0                                                                READSS 157
      IHPHRR = 0                                                                READSS 158
      IHPOUT = 47                                                               READSS 159
      IAPFLG = 0                                                                READSS 160
      IRPZON = 0                                                                READSS 161
      IRPSYS = 0                                                                READSS 162
      IRPPLT = 0                                                                READSS 163
      CONS(1) = 1.08                                                            READSS 164
      CONS(2) = 4790.0                                                          READSS 165
      CONS(3) = 0.363                                                           READSS 166
      CONS(4) = 0.0                                                             READSS 167
      CONS(5) = 0.0                                                             READSS 168
C              GET KW/BTU CONVERSION DIRECTLY FROM UNITS TABLE                  READSS 169
      KWBTU = 1.0                                                               READSS 170
      CALL KDIV(KWBTU, 80, 1, 0)                                                READSS 171
      BTUKW = 1.0/KWBTU                                                         READSS 172
C              UNFILD IS A FLAG THAT A DATA ITEM HAS NOT BEEN SET YET           READSS 174
      UNFILD = -66666.                                                          READSS 175
      REWIND IREPFL                                                             READSS 222
C              THIS PROGRAM USES DYMANIC STORAGE TECHNIQUES. ALL                READSS 223
C              MAJOR STORAGE IS CONTAINED IN THE ARRAY AA WHICH                 READSS 224
C              IS EQUIV TO IA. THIS ARRAY IS IN BLANK COMMON.                   READSS 225
C              ON CDC EQUIPMENT BLANK COMMON IS LOADED INTO CORE                READSS 226
C              AT THE VERY END OF THE FIELD LENGTH. THUS IS THE                 READSS 227
C              FIELD LENGTH IS CHANGED THE AMOUNT OF SPACE AVAILABLE            READSS 228
C              IN AA CHANGES. IN THIS WAY THE PROGRAM CAN ASK FOR               READSS 229
C              MORE CORE AS NEEDED BY THE SIZE OF THE PROBLEM.                  READSS 230
C              FOR SYSTEMS WHICH DO NOT HAVE THIS DYNAMIC MEMORY                READSS 231
C              CAPABILITY AA CAN BE DIMENSIONED TO 20 OR MORE                   READSS 232
C              TO HANDLE THE LARGEST ANTICIPATED PROBLEM AND                    READSS 233
C              THE ROUTINE SETFLS (WHICH ASK FOR MORE CORE)                     READSS 234
C              CAN BE CHANGED TO ABORT INSTEAD. DYNAMIC STORAGE                 READSS 235
C              IS DIVIDED INTO BLOCKS AND EACH BLOCK INTO                       READSS 236
C              COMPONETS. EACH BLOCK HAS A STARTING POINTER                     READSS 237
C              AND A NUMBER OF COMPONETS. EACH COMPONET HAS                     READSS 238
C              A BASE POINTER AND A LENGTH. THE BLOCKS, IN                      READSS 239
C              ORDER OF THEIR APPEARENCE IN CORE ARE -                          READSS 240
C                                                                               READSS 241
C              ZONES         START=IZ  NUM=NZONE                                READSS 258
C              .      BASE PTR=ZP2 LEN=NCZD FOR EACH                            READSS 259
C              .      ZONE. THIS IS THE CONSTANT ZONE DATA                      READSS 260
C              SYSTEMS       START=IS  NUM=NSYS                                 READSS 261
C              .      FIRST THERE IS A COMPONET BLOCK FOR                       READSS 262
C              .      EACH SYSTEM BASE PTR=NPL LEN=NSS                          READSS 263
C              .                                                                READSS 264
C              .      THEN A COMPONET BLOCK FOR EACH ZONE IN                    READSS 265
C              .      EACH SYSTEM. BASE PTR=ZP1 LEN=NZD                         READSS 266
C              .      THIS IS THE ZONE DATA WHICH CAN VARY FROM                 READSS 267
C              .      SYSTEM TO SYSTEM.                                         READSS 268
C              .      ZP1 Zone blocks are in the following order:               HVAC2   64
C              .           Type        Base PTR          Number                 HVAC2   65
C              .        All            ISZONES         NZONES                   HVAC2   66
C              .        Conditioned    ISZONES         NumCondZONES             HVAC2   67
C              .        Unconditioned  ISZONES-uncond  NumUncondZONES           HVAC2   68
C              .        Plenums        ISZONES-plenum  NumplenZONES             HVAC2   69
C              ATTACHMENTS   START=IATTCH NUM=NUMBER OF INTERNAL                READSS 281
C              .                               WALLS*2                          READSS 282
C              .      THIS BLOCK CONTAINS A LIST OF INTERNAL                    READSS 283
C              .      WALL CONDUCTANCES FOR EACH WALL IN EACH                   READSS 284
C              .      SPACE. THE LIST IS IN ORDER OF SPACE NUM                  READSS 285
C              .      AND CONTAINS THE NUM OF THE SPACE ON THE                  READSS 286
C              .      OTHER SIDE OF THE WALL, THE WALL CONDUCTANCE,             READSS 287
C              .      AND THE POINTER TO SUNSPACE COMMON WALL DATA              READSS 288
C              PRIMARY PLANT EQUIPMENT COMPONENTS                               HVAC9a  35
C              .      SEE ROUTINE ReadPlant FOR THE EXPLANATION OF              HVAC9a  36
C              .      THESE COMPONENTS                                          HVAC9a  37
C              REPORT-BLOCK BUFFERS                                             READSS 289
C              .      A BUFFER IS SAVED HERE FOR EACH COMPONET                  READSS 290
C              .      MENTIONED AS A VARIABLE-TYPE                              READSS 291
C              .LOADS INPUT BUFFER START=IBLDSB LEN=LLDSB                       READSS 296
C              .      THE DAILY RECORDS FROM THE LOADS OUTPUT                   READSS 297
C              .      FILE ARE PLACED HERE. THE BUFFER LEN IS                   READSS 298
C              .      THREE WORDS FOR EACH LOADS SPACE.                         READSS 299
C                                                                               READSS 300
C                                                                               READSS 301
C              READ THE STANDARD FILE                                           READSS 305
C                                                                               READSS 306
C              LOOP THROUGH AND READ 3 BLOCKS                                   HR      64
      DO 50 I=1,2                                                               -045b  104
C              EACH BLOCK HAS A RECORD PAIR                                     READSS 309
C              FIRST RECORD CONTAINS LEN OF NEXT REC                            READSS 310
      READ (ISTNDF,END=100) N,L                                                 WinRet  50
C              CALL ROUTINE TO SAVE A BUFFER FOR THE RECORD                     READSS 312
      CALL GETAA(L)                                                             -031    11
      IF( IwinReturn .ne. 0 ) GOTO 100                                          WinRet  51
C              CALL ROUTINE TO READ IN THE RECORD                               READSS 314
      CALL READN(ISTNDF,IA(IAX-L+1),L)                                          XFC1   156
      IF( IwinReturn .ne. 0 ) GOTO 100                                          WinRet  52
   50 CONTINUE                                                                  READSS 316
c--- read SYSTEMS-FUNCTIONS record into ISAV() array temporarily                READSS 317
      READ( ISTNDF )  N, L                                                      READSS 318
       CALL  READN( ISTNDF, ISAV, L )                                           READSS 319
      IF( IwinReturn .ne. 0 ) GOTO 100                                          WinRet  53
C              LAST RECORD OF FILE CONTAINS ALL POINTERS                        READSS 320
      READ (ISTNDF,END=100)                                                     READSS 321
     &  LEN, NZONE, NSYS, NPLANT, NCZD, NZD, NSS, lpr,                          HR      66
     &  IZ, IS, IP, IATT,                                                       HR      67
     &  (IREPRT(2,I),I=1,37), CLOCK, TITLE                                      HR      69
c              Adjust base pointers for space in AA taken up by LOADS           HR      70
      IZ     = IZ     + IAXlds                                                  HR      72
      IS     = IS     + IAXlds                                                  HR      73
      IP     = IP     + IAXlds                                                  HR      74
      IATT   = IATT   + IAXlds                                                  HR      75
c              also adjust ZP1 and ZP2 pointers in each system                  HR      76
      DO  NS = 1,NSYS                                                           HR      77
        NSP = IS + (NS-1)*NSS                                                   HR      78
        <ISZONES>        = <ISZONES>        + IAXlds                            HR      79
        <ISZONES-uncond> = <ISZONES-uncond> + IAXlds                            HR      80
        <ISZONES-plenum> = <ISZONES-plenum> + IAXlds                            HR      81
        ISZ = <ISZONES>                                                         HR      82
        NSZ = <NZONES>                                                          HR      83
        DO  NZ=1,NSZ                                                            HR      84
          ZP1   = ISZ + (NZ-1)*NZD                                              HR      85
          <ZP2> = <ZP2> + IAXlds                                                HR      86
        ENDDO                                                                   HR      87
      ENDDO                                                                     HR      88
c              Check to see if BDL and simulation agree on the length           HR      89
c              of the AA array used to date                                     HR      90
      IF (LEN+IAXlds .NE. IAX)  THEN                                            HR      91
        CALL MSGSIM(-2,II,II,II,II)                                             HR      92
        WRITE (IOUTPT, 3948) LEN+IAXlds, IAX                                    HR      93
 3948   FORMAT(14X,'BDL and READSS do not agree on the length of the'           HVAC   362
     $        /14X,'AA array after the SYSTEMS read.  Please report'            HVAC   363
     $        /14X,'this message to your program supplier.'                     HVAC   364
     $        /14X,'BDL LEN=',I7,' READSS IEND=',I7)                            HVAC   365
      ENDIF                                                                     HVAC   366
c                                                                               HVAC9a  38
c              Read in the primary plant equipment components                   HVAC9a  39
      CALL ReadPlant(1)                                                         XFC1   159
      IF( IwinReturn .ne. 0 ) THEN                                              -44c3a  30
        call MessageBox( NULL,'Errors during HVAC simulation setup. '           -44c3a  31
     $      //'See .sim file for details. Terminating Run.'//char(0),           -44c3a  32
     $    'HVAC Simulation Setup Errors'//char(0),                              -44c3a  33
     $    MB_OK+MB_ICONEXCLAMATION+MB_TASKMODAL )                               -44c3a  34
        RETURN                                                                  -44c3a  35
      ENDIF                                                                     -44c3a  36
c                                                                               WinRet  55
       CALL  FREAD( Isched, Nsched, IAX, IA )                                   Time   302
c--- attach SYSTEMS-FUNCTIONS into MSYSF() array                                READSS 331
      ISKIPS = 0                                                                READSS 332
       CALL  FILLN( 0, MSYSF(1), 120 )                                          READSS 333
      IF( L .ge. 4 )   then                                                     READSS 334
          DO  10164  I = 1 , L , 4                                              READSS 335
               CALL  FNATT( ISAV(I),   MSYSF(I/4+1), IA )                       READSS 336
10164     CONTINUE                                                              READSS 337
      ENDIF                                                                     READSS 338
c----- correct iatt                                                             READSS 339
      iatt = IAX + 1                                                            XFC1   161
C----- ATTACH SYSTEM LEVEL FUNCTIONS                                            READSS 347
      DO  10130  NS = 1 , NSYS                                                  READSS 348
          NSP = IS + (NS-1)*NSS                                                 READSS 349
           CALL  FNATT( <SYSTEM-FUNC0>, <MSYSTEM-FUNC0>, IA )                   READSS 350
           CALL  FNATT( <SYSTEM-FUNC1>, <MSYSTEM-FUNC1>, IA )                   READSS 351
10130 CONTINUE                                                                  READSS 352
C----- ATTACH ZONE LEVEL FUNCTIONS                                              READSS 353
      DO  10140  NZ = 1 , NZONE                                                 READSS 354
          ZP2 = IZ + (NZ-1)*NCZD                                                READSS 355
           CALL  FNATT( <ZONE-FUNC0>, <MZONE-FUNC0>, IA )                       READSS 356
           CALL  FNATT( <ZONE-FUNC1>, <MZONE-FUNC1>, IA )                       READSS 357
10140 CONTINUE                                                                  READSS 358
      GO TO 105                                                                 READSS 359
  100 CALL MSGSIM(3,ISTD,IBDL,I,I)                                              READSS 360
      call MessageBox( NULL, 'Error reading HVAC standard file -'               WinRet  56
     &  //' ABORTING'//char(0),'READSS Errors'//char(0), MB_OK                  WinRet  57
     &  + MB_ICONSTOP+MB_TASKMODAL )                                            WinRet  58
      IwinReturn = 1                                                            WinRet  59
      RETURN                                                                    WinRet  60
  105 CONTINUE                                                                  READSS 362
C                                                                               READSS 363
C              READ IN THE DESIGN FILE RECORD                                   READSS 364
C                                                                               READSS 365
C              READ IN FIRST RECORD                                             READSS 366
      READ (IDSNFL) NRUNPD, NSPACE, NATTCH, NDESDY, LLDSB, LTWB                 Time   303
C            GET SPACE FOR TROMBE WALLS AND SUNSPACE COMMON WALLS               READSS 368
      ITWS   = IAX                                                              XFC1   162
      CALL GETAA(LTWB)                                                          -031    12
C              GET SPACE FOR ATTACHMENTS AND FOR AN ATTACHMENT                  READSS 371
C              SCRATCH BUFFER                                                   READSS 372
      NAT = NATTCH/5                                                            READSS 373
      IATT = IAX + 1                                                            XFC1   164
      CALL GETAA(6*NAT+2)                                                       -031    13
      IBUFS = IAX                                                               XFC1   166
      CALL GETAA(8*NAT+1)                                                       -031    14
C              READ IN SECOND RECORD (DATA RECORD)                              READSS 378
      READ (IDSNFL,END=104) IRUNPD, ((DBUF(J,I),J=1,52),I=1,NSPACE),            Time   304
     1              (BUF(IBUFS+I),I=1,NATTCH),                                  READSS 380
     2              BLDGQH,BLDGQC,BLDGQL,BLDGP,iDSFlg,iDSdates,                 -044e5   6
     3              DBTMIN,DBTMAX,WMIN,WMAX,                                    READSS 382
     4              DESHRQ,IDDTYP,                                              DDAY1    7
     5              (AA(ITWS+I),I=1,LTWB)                                       READSS 384
C              READ THE LAST (BEPS) RECORD                                      READSS 385
      READ(IDSNFL,END=104) BEPS,GTEMP,CLR,LOCALD,NHOLA,IHOLTY,IHOLDY,           HOLID1   9
     1                     IHOLMN                                               HOLID1  10
      GO TO 110                                                                 READSS 387
  104 CALL MSGSIM(3,IDSN,NAMPRG(1,1),I,I)                                       READSS 388
      call MessageBox( NULL, 'Error reading HVAC design file -'                 WinRet  61
     &  //' ABORTING'//char(0),'READSS Errors'//char(0), MB_OK                  WinRet  62
     &  + MB_ICONSTOP+MB_TASKMODAL )                                            WinRet  63
      IwinReturn = 1                                                            WinRet  64
      RETURN                                                                    WinRet  65
  110 CONTINUE                                                                  READSS 390
C              DEBUG.  DUMP THE DESIGN FILE.                                    READSS 391
      LEN = 52*NSPACE                                                           READSS 392
      IF (IREPRT(2,35) .NE. 0) THEN                                             -036   503
       write(IOUTPT,                                                            -036   504
     $       '(47H0 Design File passed from LOADS for each SPACE:/)')           -036   505
       DO j=1,NSPACE                                                            -036   506
         write (IOUTPT,'(18H For SPACE number ,I3,1H:,4A4)')                    -042L4  14
     $                 j,(IDBUF(i,j),i=1,4)                                     -042L4  15
         CALL DUMPIT(IDBUF(1,j),DBUF(1,j),52)                                   -042L4  16
       ENDDO                                                                    -036   509
      ENDIF                                                                     -036   510
      IF ( IREPRT(2,35 ) .NE. 0)                                                IREPRT  68
     $    CALL DUMPIT( 20HBUF(1-NATTCH)       ,BUF(IBUFS+1),NATTCH )            -036   511
      IF ((IREPRT(2,35) .NE. 0) .AND. (LTWB .GT. 1))                            IREPRT  69
     1 CALL DUMPIT(20HWALL DATA ON DES FIL,AA(ITWS+1),LTWB)                     READSS 398
C                                                                               READSS 399
      IF (IREPRT(2,35).NE.0) CALL DUMPIT(20HDES DAY DATA FR LDS ,               IREPRT  70
     1   DESHRQ,360)                                                            READSS 401
C                                                                               READSS 402
C              PREPARE THE DATA READ IN FOR THE SIMULATION                      READSS 403
C                                                                               READSS 404
C              ELIMINATE ADIABATIC AND INTERNAL INTERIOR WALLS                  READSS 405
C            (FOR EACH I-W, BUF CONTAINS IN-SPACE, NEXT-TO SPACE, U*A,          READSS 406
C            <IW-TYPE>, AND PTR TO SPECIAL-WALL DATA IN DESIGN FILE)            READSS 407
      I1     = 0                                                                READSS 408
      I2     = 0                                                                READSS 409
      NATTCH = NATTCH/5                                                         READSS 410
      IF(NATTCH.EQ.0) GO TO 209                                                 READSS 411
      DO 204 I=1,NATTCH                                                         READSS 412
C              IF NOT WANTED WALL TYPE, SKIP                                    READSS 413
      IF(IBUF(IBUFS+I1+4).GT.2) GO TO 203                                       READSS 414
C              MOVE ALL WALLS UP                                                READSS 415
      DO 202 J = 1,3                                                            READSS 416
  202 BUF(IBUFS+I2+J) = BUF(IBUFS+I1+J)                                         READSS 417
      BUF(IBUFS+I2+4) = BUF(IBUFS+I1+5)                                         READSS 418
      I2 = I2 + 4                                                               READSS 419
  203 I1 = I1 + 5                                                               READSS 420
  204 CONTINUE                                                                  READSS 421
  209 CONTINUE                                                                  READSS 422
      NATTCH = I2                                                               READSS 423
      IF(NATTCH.EQ.0) NATTCH = 1                                                READSS 424
      NATTCH = NATTCH/4                                                         READSS 425
      IFLAG  = 0                                                                READSS 426
C                                                                               READSS 427
C              LOOP THROUGH THE ZONES AND MATCHUP ZONE NAMES WITH               READSS 428
C              LOADS SPACE NAMES                                                READSS 429
C              ---                                                              READSS 430
      CALL  FILLN ( 0, IZREF, 9999 )                                            -048a   15
C                                                                               READSS 432
      DO 190 NZ =1,NZONE                                                        READSS 433
C              CALC THE BASE PTR FOR THIS ZONE                                  READSS 434
      ZP2    = IZ+(NZ-1)*NCZD                                                   READSS 435
C              save zones matching space pointer in another variable            HVAC2   70
      <NZSPACE> = ISPLOC(<SPACE>)                                               HVAC9b   2
      IZREF(ISPLOC(<SPACE>)) = ZP2                                              HVAC9b   3
      IF(IREPRT(2,32).NE.0)  WRITE(IOUTPT,9211) <SPACE>,<NZSPACE>,              -42c   124
     $         (DBUF(II,<NZSPACE>),ii=1,4),NZ,(<ZONE-NAME>,ii=1,8)              -044d1  37
 9211 FORMAT(' SYSTEMS SPACE number ',I4,' is LOADS SPACE number ',I4,          -044d1  38
     $       ' (',4A4,') which is ZONE number ',I4,' (',8A4,')')                -044d1  39
  190 CONTINUE                                                                  READSS 454
C              CHECK TO ENSURE THAT ZONE MULTIPLIER IS NOT GREATER THAN         READSS 477
C              1.0 ON BOTH SIDES OF A STANDARD OR AIR TYPE INTERIOR WALL        READSS 478
      IF( NATTCH .LT. 1 )  GOTO  355                                            READSS 479
      DO 340 I=1,NATTCH                                                         READSS 480
      I2 = (I-1)*4                                                              READSS 481
      ZP2    = IZREF(IBUF(IBUFS+I2+1))                                          READSS 482
      IF( ZP2 .EQ. 0 )  GOTO  340                                               READSS 483
      IZZP2  = ZP2                                                              READSS 484
      ZM1    = <MULTIPLIER>                                                     READSS 485
      FM1    = <FLOOR-MULTIPLIER>                                               READSS 486
      ZP2    = IZREF(IBUF(IBUFS+I2+2))                                          READSS 487
      IF( ZP2 .EQ. 0 )  GOTO  340                                               READSS 488
      ZM2    = <MULTIPLIER>                                                     READSS 489
      FM2    = <FLOOR-MULTIPLIER>                                               READSS 490
      IF(ZM1.LE.1.0.OR.ZM2.LE.1.0) GO TO 340                                    READSS 491
      IF(FM1.GT.1.0.OR.FM2.GT.1.0) GO TO 130                                    READSS 492
      <FLOOR-MULTIPLIER> = -0.5                                                 READSS 493
      ZP2    = IZZP2                                                            READSS 494
      <FLOOR-MULTIPLIER> = -0.5                                                 READSS 495
      GO TO 340                                                                 READSS 496
  130 CALL MSGSIM(-1,I,I,I,I)                                                   READSS 497
      WRITE(IOUTPT,135)  (IA(IZZP2+K-1), K=1,8), (IA(ZP2+J-1), J=1,8)           -42c   128
  135 FORMAT(14X,'Either ',8A4,' or ',8A4,' must have MULTIPLIER'/              -42c   129
     $       14X,'equal to 1.0')                                                -42c   130
  340 CONTINUE                                                                  READSS 501
C                                                                               READSS 502
C             REPLACE MULTIPLIER WITH FLOOR-MULTIPLIER IN FLAGGED SPACES        READSS 503
C                                                                               READSS 504
      ZP2    = IZ                                                               READSS 505
      DO 350 I=1,NZONE                                                          READSS 506
      IF( <FLOOR-MULTIPLIER> .NE. -0.5 )  GOTO  149                             READSS 507
      <FLOOR-MULTIPLIER> = <MULTIPLIER>                                         READSS 508
      <MULTIPLIER> = 1.0                                                        READSS 509
      CALL MSGSIM(-2,I,I,I,I)                                                   READSS 510
      WRITE(IOUTPT,125) (IA(ZP2+J-1),J=1,8)                                     -42c   131
  125 FORMAT(14X,'MULTIPLIER has been changed to FLOOR-MULTIPLIER',             -42c   132
     $       ' in ',8A4)                                                        -42c   133
  149 ZP2    = ZP2 + NCZD                                                       READSS 514
  350 CONTINUE                                                                  READSS 515
  355 CONTINUE                                                                  READSS 516
C                                                                               READSS 517
C              IF MULTIPLIER OR FLOOR-MULTIPLIER NOT DEFINED FOR ZONE           READSS 518
C              TAKE VALUE FROM LOADS                                            READSS 519
C                                                                               READSS 520
      ZP2    = IZ                                                               READSS 521
      DO 120 NZ=1,NZONE                                                         READSS 522
      IF(<MULTIPLIER>.EQ.0.0) <MULTIPLIER> = DBUF(35,<NZSPACE>)                 READSS 523
      IF(<FLOOR-MULTIPLIER>.EQ.0.0) <FLOOR-MULTIPLIER>                          READSS 524
     1        = DBUF(36,<NZSPACE>)                                              READSS 525
      NSPZ(<NZSPACE>) = NZ                                                      READSS 526
      ZP2    = ZP2 + NCZD                                                       READSS 527
  120 CONTINUE                                                                  READSS 528
C                                                                               READSS 529
C              ADJUST ATTACHMENT DATA (INTERNAL WALLS)                          READSS 530
C                                                                               READSS 531
C            FOUR WORDS FOR EACH WALL                                           READSS 532
C              .     1 - SPACE ON ONE SIDE                                      READSS 533
C              .     2 - SPACE ON OTHER SIDE                                    READSS 534
C              .     3 - CONDUCTANCE (U*A)                                      READSS 535
C              .     4 - PTR TO SPECIAL-WALL DATA IN DES FILE                   READSS 536
C              LOOP THROUGH THE WALLS AND MAKE A COPY OF                        READSS 537
C              THE DATA WITH SPACE NUMBERS REVERSED                             READSS 538
C              THIS THEN WILL BE SORTED SO WE WILL                              READSS 539
C              HAVE A COMPLETE TABLE FOR EACH SPACE                             READSS 540
      IF( NATTCH .LT. 1 )  GOTO  215                                            READSS 541
      DO 210 I=1,NATTCH                                                         READSS 542
C              I2 POINTS TO THE WALL DATA                                       READSS 543
C              I1 WILL BE WHERE A REVERSED EIRY GOES                            READSS 544
      I2 = (I-1)*4                                                              READSS 545
      I1 = I2 + NATTCH*4                                                        READSS 546
C              MAKE REVERSED ENTRY                                              READSS 547
      BUF(IBUFS+I1+1)=BUF(IBUFS+I2+2)                                           READSS 548
      BUF(IBUFS+I1+2)=BUF(IBUFS+I2+1)                                           READSS 549
      BUF(IBUFS+I1+3)=BUF(IBUFS+I2+3)                                           READSS 550
      BUF(IBUFS+I1+4)=BUF(IBUFS+I2+4)                                           READSS 551
  210 CONTINUE                                                                  READSS 552
C              CALL ROUTINE TO SORT THE TABLE BY THE FIRST                      READSS 553
C              TWO ENTRIES IN EACH ROW                                          READSS 554
      IF( NATTCH .GT. 0 )  CALL  SORT ( BUF(IBUFS+1), NATTCH*2, 2, 4 )          READSS 555
C              IF DUMP-OPTIONS=SIMULATION IS ON                                 READSS 556
      I1 = NATTCH*8                                                             READSS 557
      IF(IREPRT(2,32).NE.0)  WRITE(IOUTPT,211,ERR=99001)                        IREPRT  71
     1 (BUF(IBUFS+I),I=1,I1)                                                    READSS 559
99001 CONTINUE                                                                  READSS 560
  211 FORMAT('0Internal Wall CONDUCTANCES passsed by LOADS:'/                   HVAC9b   8
     $      (' From SPACE ',I4,' to SPACE ',I4,' Total Conductance is',         HVAC9b   9
     $       F9.2,' (WALL data pointer =',I6,')'))                              HVAC9b  10
C              IBW IS WHERE NEXT WALL GOES IN ATTACHMENT BLOCK                  READSS 563
  215 CONTINUE                                                                  READSS 564
      IBW    = IATT                                                             READSS 565
C              I2 POINTS TO NEXT WALL IN SORTED TABLE                           READSS 566
      I2     = 1                                                                READSS 567
C              LOOP THORUGH THE SPACE AND PUT ALL ATTACHMENT IN THE             READSS 568
C              ATTACHMENT BLOCK, SAVE POINTER TO WHERE FIRST IS AN              READSS 569
C              HOW MANY THERE ARE, AND SUM THE INTERNAL WALL                    READSS 570
C              CONDUCTANCES FOR THE SPACE                                       READSS 571
      DO 260 SN=1,NSPACE                                                        READSS 572
C              SAVE LOADS TEMP                                                  READSS 573
      TEMPSL(SN) = DBUF(11,SN)                                                  READSS 574
C              I1 IS THE NUM OF WALLS FOR THIS SPACE                            READSS 575
      I1     = 0                                                                READSS 576
C              CI IS THE INTERNAL CONDUC SUM                                    READSS 577
      CI     = 0.                                                               READSS 578
C              FIND THE ZONE CORRESPONDING TO THIS SPACE                        READSS 579
      DO 220 NZ=1,NZONE                                                         READSS 580
      ZP2    = IZ + (NZ-1)*NCZD                                                 READSS 581
      IF(<NZSPACE> .EQ. SN)  GOTO 221                                           READSS 582
  220 CONTINUE                                                                  READSS 583
C              NOT FOUND SET ERROR FLAG UP BY ONE                               READSS 584
      ZP1    = ISZ                                                              READSS 585
      IFLAG  = IFLAG + 1                                                        READSS 586
  221 CONTINUE                                                                  READSS 587
C              INITALIZE TEMPS(1.0-4) WITH LOADS CALC TEMP                      READSS 588
      DO I=1,4                                                                  RemPA  459
        TEMPS(I,SN) = DBUF(11,SN)                                               RemPA  460
      ENDDO                                                                     RemPA  461
C              SET START OF ATTACHMENTS FOR THIS ZONE                           READSS 592
      <IATTCH> = IBW                                                            READSS 593
C              SAVE NUMBER OF ATTACHMENTS                                       READSS 594
  240 <NATTCH> = I1                                                             READSS 595
C              SAVE THE TOTAL INT CONDUC IN TEMPS(4)                            READSS 596
      <CONDUCI> = CI                                                            READSS 597
C              IF NO MORE ATTACHMENTS SKIP                                      READSS 598
      IF (I2.GE.NATTCH*8) GO TO 250                                             READSS 599
C              IF NO MORE FOR THIS SPACE SKIP                                   READSS 600
      IF(IBUF(IBUFS+I2) .NE. SN) GOTO 250                                       READSS 601
C            SAVE OTHER SPACE NO., CONDUC, PTR TO SPECIAL-WALL DATA             READSS 602
      AA(IBW) = BUF(IBUFS+I2+1)                                                 READSS 603
      ZP2T   = ZP2                                                              READSS 604
      ZP2    = IZ + (NSPZ(IA(IBW)) - 1) * NCZD                                  READSS 605
      AA(IBW+1) = BUF(IBUFS+I2+2) * <MULTIPLIER>                                READSS 606
      ZP2    = ZP2T                                                             READSS 607
      IA(IBW+2) = 0                                                             READSS 608
      IF (IBUF(IBUFS+I2+3).NE.0) IA(IBW+2) = IBUF(IBUFS+I2+3) + ITWS            READSS 609
C              INCREMENT CONDUC SUM                                             READSS 610
      CI     = CI + AA(IBW+1)                                                   READSS 611
C              INCREMENT I2 TO POINT TO NEXT IN TABLE                           READSS 612
      I2 = I2 + 4                                                               READSS 613
C              INCREMENT TOTAL WALLS FOR SPACE                                  READSS 614
      I1     = I1+1                                                             READSS 615
C              INCREMENT POINTER TO ATTACHMENT BLOCK                            READSS 616
      IBW = IBW + 3                                                             READSS 617
      GOTO 240                                                                  READSS 618
  250 CONTINUE                                                                  READSS 619
  260 CONTINUE                                                                  READSS 624
C              SET IAX TO BE LAST WORD IN USE                                   XFC1   168
      IAX   = IBW - 1                                                           XFC1   169
C                                                                               READSS 627
C              ADJUST ZONE DATA FOR SDL                                         READSS 628
C                                                                               READSS 629
C              LOOP THROUGH THE ZONES                                           READSS 630
      DO 490 NZ=1,NZONE                                                         READSS 631
C              CALC BASE POINTER FOR THIS ZONE                                  READSS 632
      ZP2    = IZ + (NZ-1)*NCZD                                                 READSS 633
      NSPA   = <NZSPACE>                                                        READSS 634
C              TRANSFER STUFF FOR DESIGN FILE ARRAY TO ZONE BLOCK               READSS 635
      DO 480 II=1,48                                                            READSS 636
  480 <DSNFILZ> = DBUF(II+4,NSPA)                                               READSS 637
C              SET TROMBE WALL BUFFER POINTER                                   READSS 638
      IF (<ITWBUFP> .GT. 0)  <ITWBUFP> = <ITWBUFP> + ITWS                       READSS 639
C            SET PTR TO BE OF WALL PARAMETER BUFFER FOR THE SUNSPACE            READSS 640
C            COMMON WALLS DEFINED IN THIS ZONE                                  READSS 641
      IF (<ICWBUFP>.GT.0) <ICWBUFP> = <ICWBUFP> + ITWS                          READSS 642
C              CONVERT SCHEDULE NUMBERS TO SCHED POINTERS                       READSS 643
C              WORD 8 OF THE SCHED TABLE POINTS TO THE                          READSS 644
C              DAY-SCHED IN EFFECT FOR THE SCHED                                READSS 645
      <HEAT-TEMP-SCH> = Jsched(<HEAT-TEMP-SCH>)                                 Time   305
      <COOL-TEMP-SCH> = Jsched(<COOL-TEMP-SCH>)                                 Time   306
      <MIN-CFM-SCH>   = Jsched(<MIN-CFM-SCH>)                                   Time   307
      <HMIN-CFM-SCH>  = Jsched(<HMIN-CFM-SCH>)                                  Time   308
      <TROM-VENT-SCH> = Jsched(<TROM-VENT-SCH>)                                 Time   309
      <ZONE-FAN-SCH>  = Jsched(<ZONE-FAN-SCH>)                                  Time   310
      <SS-FLOW-SCH>   = Jsched(<SS-FLOW-SCH>)                                   Time   311
      <SS-FLOW-T-SCH> = Jsched(<SS-FLOW-T-SCH>)                                 Time   312
      <SS-VENT-T-SCH> = Jsched(<SS-VENT-T-SCH>)                                 Time   313
      <SS-VENT-SCH>   = Jsched(<SS-VENT-SCH>)                                   Time   314
      DO IG=1,3                                                                 Time   315
        <REFG-SENS-SCH> = Jsched(<REFG-SENS-SCH>)                               Time   316
        <REFG-LAT-SCH>  = Jsched(<REFG-LAT-SCH>)                                Time   317
        <REFG-AUX-SCH>  = Jsched(<REFG-AUX-SCH>)                                Time   318
      ENDDO                                                                     Time   319
      <EXHAUST-FAN-SCHZ> = Jsched(<EXHAUST-FAN-SCHZ>)                           -044e  419
      <EXHAUST-EIR-FPLR> = Jcurve(<EXHAUST-EIR-FPLR>)                           -045b  105
c              Set flag if equipment loads calculated in LOADS are              -045b  106
c              temperature dependent                                            -045b  107
        MZ = ISPB + (<NZSPACE>-1)*MZLEN     ! space ptr                         -045b  108
        DO  IL=1,5                                                              -045b  109
          IF (<EQUIP-PWR-FT> .ne. 0)  <zn:EquipKWfT> = 1                        -047k   66
        ENDDO                                                                   -045b  111
C              CONVERT INDUCED-AIR-ZONE FROM A ZONE NUMBER TO A POINTER         READSS 661
C              INTO THE CONSTANT ZONE DATA BLOCK                                READSS 662
      IF (<INDUCED-AIR-ZONE> .NE. 0) <INDUCED-AIR-ZONE> =                       READSS 663
     1   IZ + NCZD*(<INDUCED-AIR-ZONE>-1)                                       READSS 664
  490 CONTINUE                                                                  READSS 665
C                                                                               READSS 666
C              ADJUST SYSTEM DATA FROM SDL                                      READSS 667
C                                                                               READSS 668
C               LOOP OVER SYSTEMS, SET POINTER TO SUMMARY REPORT BUFFER         READSS 669
C               1 (EVAP & DESC); COUNT NUMBER OF SUCH REPORTS.                  READSS 670
C                                                                               READSS 671
      NEVDSC = 0                                                                READSS 672
      IBRPB1 = 0                                                                READSS 673
      IERPB1 = 0                                                                READSS 674
      LRPB1 = 0                                                                 READSS 675
      IBRPB2 = 0                                                                READSS 676
      IERPB2 = 0                                                                READSS 677
      LRPB2 = 0                                                                 READSS 678
      DO 495 NS=1,NSYS                                                          READSS 679
          NSP = IS + (NS-1)*NSS                                                 READSS 680
          IF ((<DESICCANT>.GT.0 .OR. <EVAP-CL-TYPE>.GT.0 .OR.                   READSS 681
     $         <SWAMP-COOLER>.GT.0) .AND. IREPRT(2,16).NE.0 .AND.               IREPRT  72
     $         <SYSTEM-TYPE>.NE.25  .AND. <SYSTEM-TYPE>.NE.26) THEN             READSS 683
              NEVDSC = NEVDSC + 1                                               READSS 684
              <EVAPREPPTR> = NEVDSC                                             READSS 685
          END IF                                                                READSS 686
  495 CONTINUE                                                                  READSS 687
      IF (NEVDSC .GT. 0) THEN                                                   READSS 688
          LRPB1 = NEVDSC*MRLEN1                                                 READSS 689
          IBRPB1 = IAX + 1                                                      XFC1   170
          CALL GETAA(LRPB1)                                                     -031    15
          IERPB1 = IAX                                                          XFC1   172
      END IF                                                                    READSS 693
C               GET BUFFER SPACE FOR SS-J REPORT IF NEEDED                      READSS 694
      IF (IREPRT(2,25) .GT. 0) THEN                                             IREPRT  73
          LRPB2 = NSYS*MRLEN2                                                   READSS 696
          IBRPB2 = IAX + 1                                                      XFC1   173
          CALL GETAA(LRPB2)                                                     -031    16
          IERPB2 = IAX                                                          XFC1   175
      END IF                                                                    READSS 700
C              LOOP THROUGH THE SYSTEMS                                         READSS 701
      DO 590 NS=1,NSYS                                                          READSS 702
C              CALC THE BASE PTR TO THE DATA FOR THIS SYSTEM                    READSS 703
      NSP    = IS + (NS-1)*NSS                                                  READSS 704
      NSZ    = <NZONES>                                                         READSS 705
C              CONVERT THE SCHED NUMS TO SCHED PTRS                             READSS 706
      <HEATING-SCHEDULE> = Jsched(<HEATING-SCHEDULE>)                           Time   320
      <COOLING-SCHEDULE> = Jsched(<COOLING-SCHEDULE>)                           Time   321
      <ECONO-SCHEDULE>   = Jsched(<ECONO-SCHEDULE>)                             ERV    320
      <FAN-SCHEDULE>     = Jsched(<FAN-SCHEDULE>)                               Time   322
      <HFAN-SCHEDULE>    = Jsched(<HFAN-SCHEDULE>)                              Time   323
      <EXHAUST-FAN-SCH>  = Jsched(<EXHAUST-FAN-SCH>)                            Time   324
      <COOL-RESET-SCH>   = Jsched(<COOL-RESET-SCH>)                             Time   326
      <HEAT-RESET-SCH>   = Jsched(<HEAT-RESET-SCH>)                             Time   327
      <BASEBOARD-SCH>    = Jsched(<BASEBOARD-SCH>)                              Time   328
      <HEAT-SET-SCH>     = Jsched(<HEAT-SET-SCH>)                               Time   329
      <COOL-SET-SCH>     = Jsched(<COOL-SET-SCH>)                               Time   330
      <MIN-AIR-SCH>      = Jsched(<MIN-AIR-SCH>)                                Time   331
      <NATURAL-VENT-SCH> = Jsched(<NATURAL-VENT-SCH>)                           Time   332
      <OPEN-VENT-SCH>    = Jsched(<OPEN-VENT-SCH>)                              Time   333
      <VENT-TEMP-SCH>    = Jsched(<VENT-TEMP-SCH>)                              Time   334
      <NIGHT-VENT-SCH>   = Jsched(<NIGHT-VENT-SCH>)                             Time   335
      <MIN-SUPPLY-SCH>   = Jsched(<MIN-SUPPLY-SCH>)                             Time   336
      <EVAP-PCC-SCH>     = Jsched(<EVAP-PCC-SCH>)                               Time   337
      <REFG-WALKIN-SCH>  = Jsched(<REFG-WALKIN-SCH>)                            Time   338
C              CONVERT CURVE NUMBERS TO POINTERS                                READSS 726
      <COOL-CAP-FT>      = Jcurve(<COOL-CAP-FT>)                                -045b  112
      <COOL-EIR-FT>      = Jcurve(<COOL-EIR-FT>)                                -045b  113
      <COOL-SH-FT>       = Jcurve(<COOL-SH-FT>)                                 -045b  114
      <COIL-BF-FCFM>     = Jcurve(<COIL-BF-FCFM>)                               -045b  115
      <COIL-BF-FT>       = Jcurve(<COIL-BF-FT>)                                 -045b  116
      <HEAT-CAP-FT>      = Jcurve(<HEAT-CAP-FT>)                                -045b  117
      <HEAT-EIR-FT>      = Jcurve(<HEAT-EIR-FT>)                                -045b  118
      <COOL-EIR-FPLR>    = Jcurve(<COOL-EIR-FPLR>)                              -045b  119
      <HEAT-EIR-FPLR>    = Jcurve(<HEAT-EIR-FPLR>)                              -045b  120
      <FURNACE-OFF-LOSS> = Jcurve(<FURNACE-OFF-LOSS>)                           -045b  121
      <FURNACE-HIR-FPLR> = Jcurve(<FURNACE-HIR-FPLR>)                           -045b  122
      <FAN-EIR-FPLR>     = Jcurve(<FAN-EIR-FPLR>)                               -045b  123
      <HFAN-EIR-FPLR>    = Jcurve(<HFAN-EIR-FPLR>)                              -045b  124
      <RETURN-EIR-FPLR>  = Jcurve(<RETURN-EIR-FPLR>)                            -045b  125
      <HCOIL-WIPE-FCFM>  = Jcurve(<HCOIL-WIPE-FCFM>)                            -045b  126
      DO  IG=1,3                                                                -045b  127
        <REFG-KW-FTCOND> = Jcurve(<REFG-KW-FTCOND>)                             -045b  128
        <REFG-KW-HR-FTC> = Jcurve(<REFG-KW-HR-FTC>)                             -045b  129
        <REFG-KW-FPLR>   = Jcurve(<REFG-KW-FPLR>)                               -045b  130
      ENDDO                                                                     -045b  131
      <REFG-FAN-PWR-FPL> = Jcurve(<REFG-FAN-PWR-FPL>)                           -045b  132
      <REFG-AMB-COND-FT> = Jcurve(<REFG-AMB-COND-FT>)                           -045b  133
      <REFG-COND-CAP-FT> = Jcurve(<REFG-COND-CAP-FT>)                           -045b  134
      IF (<REFG-COND-TYPE> .EQ. 2                                               HVAC16 117
     &                         .AND.  <REFG-COND-CAP-FT> .EQ. 0)  THEN          HVAC16 118
        CALL MSGSIM(-1,II,II,II,II)                                             HVAC16 119
        WRITE (IOUTPT,9100)  (<SYSTEM-NAME>,II=1,8)                             HVAC16 120
        IABORT = IABORT + 1                                                     HVAC16 121
      ENDIF                                                                     HVAC16 122
 9100 FORMAT(14X,'System: ',8A4,' has a refrigeration'                 /        HVAC16 123
     &       14X,'evaporative condenser, but the condenser capacity'   /        HVAC16 124
     &       14X,'curve is not defined.'                               )        HVAC16 125
      <HW-CAP-FDT>       = Jcurve(<HW-CAP-FDT>)                                 -045b  135
      <HW-CAP-FCFM>      = Jcurve(<HW-CAP-FCFM>)                                -045b  136
      <HW-CAP-FGPM>      = Jcurve(<HW-CAP-FGPM>)                                -045b  137
      <CHW-CAP-FEWBEWT>  = Jcurve(<CHW-CAP-FEWBEWT>)                            -045b  138
      <CHW-CAP-FCFM>     = Jcurve(<CHW-CAP-FCFM>)                               -045b  139
      <CHW-CAP-FGPM>     = Jcurve(<CHW-CAP-FGPM>)                               -045b  140
C              CONVERT GHP CURVE NUMS TO PTRS                                   READSS 760
      DO  II=1,25                                                               -045b  141
        <SHP-CURVES> = Jcurve(<SHP-CURVES>)                                     -045b  142
      ENDDO                                                                     -045b  143
C              Force MIN-HUMIDITY to zero if no humidifier                      -044e5   7
      IF (<HUMIDIFIER-TYPE> .eq. 0)  <MIN-HUMIDITY> = 0.                        -044e5   8
C              TURN ON HEAT PUMP REPORT IF NEED BE                              READSS 763
      ICODE = <SYSTEM-TYPE>                                                     -032     1
C              First make sure illegal HEAT-PUMP's are removed                  -032     2
C              Only RESYS, RESVVT, PSZ, PVAV, PTAC, PIU, PVVT, RESYS2           -044e  421
C              allow HEAT-PUMP                                                  -044e  422
      IF(ICODE.NE.17 .AND. ICODE.NE.19 .AND. ICODE.NE.21 .AND.                  -032     5
     $   ICODE.NE.22 .AND. ICODE.NE.27 .AND. ICODE.NE.28 .AND.                  -032     6
     $   ICODE.NE.23 .AND. ICODE.NE.29) THEN                                    -044e  423
        IF(<HEAT-SOURCE>     .EQ.4)       <HEAT-SOURCE> = 1                     -032     8
        IF(<ZONE-HEAT-SOURCE>.EQ.4)  <ZONE-HEAT-SOURCE> = 1                     -032     9
      END IF                                                                    -032    10
      IF(<PREHEAT-SOURCE>   .EQ. 4)    <PREHEAT-SOURCE> = 1                     -032    11
      IF(<BASEBOARD-SOURCE> .EQ. 4)  <BASEBOARD-SOURCE> = 1                     -032    12
      IF(<SUPP-SOURCE>      .EQ. 4)       <SUPP-SOURCE> = 1                     -032    13
      IF((<HEAT-SOURCE> .EQ. 4).OR.(<HEAT-SOURCE> .EQ. 9))                      READSS 764
     1    IHPREP = 1                                                            READSS 765
      IF( ((ICODE.EQ.17).OR.(ICODE.EQ.19).OR.(ICODE.EQ.21).OR.                  -044e  424
     $     (ICODE.EQ.22).OR.(ICODE.EQ.27).OR.(ICODE.EQ.28) .OR.                 -044e  425
     &     (ICODE.EQ.23)) .AND. (<HEAT-SOURCE>.EQ.2) ) IHPREP = 1               -044e  426
c              Set COOL-SOURCE                                                  -044e  427
      SELECT CASE (ICODE)                                                       -044e  428
      CASE (2,3,4,5,9,11,13,14,18)                                              -044e  429
        <COOL-SOURCE> = 1  ! chw                                                -044e  430
      CASE (15)                                                                 -044e  431
        <COOL-SOURCE> = 7  ! wlhp                                               -044e  432
      CASE (17,19,20,21,22,27,28,29)                                            -044e  433
        IF (<HEAT-SOURCE> .EQ. 4  .OR. <HEAT-SOURCE> .EQ. 9) THEN               -044e  434
          <COOL-SOURCE> = <HEAT-SOURCE>                                         -044e  435
        ELSE                                                                    -044e  436
          <COOL-SOURCE> = 2  ! elec-DX                                          -044e  437
        ENDIF                                                                   -044e  438
      CASE (23)  ! PIU                                                          -044e  439
        IF (<HEAT-SOURCE> .EQ. 4 .OR. <HEAT-SOURCE> .EQ. 9)                     -044e  440
     &    <COOL-SOURCE> = <HEAT-SOURCE>                                         -044e  441
      CASE (26)                                                                 -044e  442
         <COOL-SOURCE> = 10  ! evaporative                                      -044e  443
      END SELECT                                                                -044e  444
C              Set flag to call data collecting routines and write headers      READSS 770
      IF(ICODE.EQ.22)  IRPZON = IRPZON + IHPREP                                 READSS 771
      IF((ICODE.EQ.17).OR.(ICODE.EQ.19).OR.(ICODE.EQ.21).OR.                    READSS 772
     $   (ICODE.EQ.22).OR.(ICODE.EQ.27).OR.(ICODE.EQ.28).OR.ICODE.EQ.23)        -044e  445
     $       IRPSYS = IRPSYS + IHPREP                                           READSS 774
      IF(((ICODE.EQ. 6).OR.(ICODE.EQ. 7).OR.(ICODE.EQ. 9).OR.                   -043a  114
     $    (ICODE.EQ.15).OR.(ICODE.EQ.22)).AND.                                  -043a  115
     $   ((IREPRT(2,23).NE.0).OR.(IREPRT(2,27).NE.0)) )                         -043a  116
     $  IREPZON = IRPZON + 1                                                    -043a  117
C              INITIALIZE POINTERS TO THE DEFAULT CURVES FOR PTGSD              READSS 778
      <T8-FWB1WB6>       = Jcurve(<T8-FWB1WB6>)                                 -045b  144
      <HR8-FWB1WB6>      = Jcurve(<HR8-FWB1WB6>)                                -045b  145
      <QREG-FWB1WB6>     = Jcurve(<QREG-FWB1WB6>)                               -045b  146
      <T8PL-FWB1WB6>     = Jcurve(<T8PL-FWB1WB6>)                               -045b  147
      <HR8PL-FWB1WB6>    = Jcurve(<HR8PL-FWB1WB6>)                              -045b  148
      <QREGPL-FWB1WB6>   = Jcurve(<QREGPL-FWB1WB6>)                             -045b  149
C              INITIALIZE CURVES FOR VENT AIR DESICCANT UNIT                    -045b  150
      <DESC-T-FTW>       = Jcurve(<DESC-T-FTW>)                                 -045b  151
      <DESC-W-FTW>       = Jcurve(<DESC-W-FTW>)                                 -045b  152
      <DESC-GAS-FTW>     = Jcurve(<DESC-GAS-FTW>)                               -045b  153
      <DESC-KW-FTW>      = Jcurve(<DESC-KW-FTW>)                                -045b  154
C              TURN OA-FROM-SYSTEM INTO A POINTER                               READSS 790
      IF (<OA-FROM-SYSTEM> .GT. 0)                                              READSS 791
     1 <OA-FROM-SYSTEM> = IS + (<OA-FROM-SYSTEM>-1)*NSS                         READSS 792
C              INITIALZE CURVE POINTERS FOR EVAP COOLER                         READSS 793
      <DIRECT-EFF-FCFM>  = Jcurve(<DIRECT-EFF-FCFM>)                            -045b  155
      <INDIR-EFF-FCFM>   = Jcurve(<INDIR-EFF-FCFM>)                             -045b  156
      IF (<EVAPREPPTR>.GT.0) <EVAPREPPTR> =                                     READSS 796
     1    IBRPB1 + MRLEN1*(<EVAPREPPTR>-1)                                      READSS 797
      IF (IBRPB2.GT.0) <SSJREPPTR> = IBRPB2 + MRLEN2*(NS-1)                     READSS 798
C              if a DUCT-LOSS-ZONE specified,                                   RemPA  462
      IF(<DUCT-LOSS-ZONE> .NE. 0)  THEN                                         RemPA  463
c              convert DUCT-LOSS-ZONE number to ZP2 base pointer                RemPA  464
        ZP2 = IZ + (<DUCT-LOSS-ZONE>-1)*NCZD                                    RemPA  465
c              set pointer negative as flag, will be set positive once          -41a     3
c              the zone is found within this system.                            -41a     4
        <DUCT-LOSS-ZONE> = -ZP2                                                 -41a     5
c              end of DUCT-LOSS-ZONE check                                      RemPA  471
      ENDIF                                                                     READSS 841
c              if a natural-vent exhaust zone specified, set ZP2 ptr            -045d    5
c              negative as flag, will be set positive once the zone is          -045d    6
c              found within this system.                                        -045d    7
      IF (<VENT-EXH-ZONE> .ne. 0)                                               -047k   67
     &    <VENT-EXH-ZONE> = -(IZ + (<VENT-EXH-ZONE>-1)*NCZD)                    -045d    9
      <DESC-CFMD> = 0.                                                          READSS 842
      <DESC-VELD> = 0.                                                          READSS 843
      <REACT-CFMD> = 0.                                                         READSS 844
      <REACT-TEMPD> = 0.                                                        READSS 845
      <DESC-FANKWD> = 0.                                                        READSS 846
      <REACT-FANKWD> = 0.                                                       READSS 847
      <DESC-MOTORKWD> = 0.                                                      READSS 848
      <DESC-TOTKWD> = 0.                                                        READSS 849
C              FOR PIUS, SORT THE SYSTEM SPECIFIC ZONE DATA (ZP1 STUFF)         READSS 850
C              SO THAT INTERIOR ZONES ARE SIMULATED FIRST.                      READSS 851
      IF(<SYSTEM-TYPE>.NE.23)  GOTO 700                                         -036   512
      IF(<NumCondZONES>.LE.1)  GOTO 650                                         -036   513
      NSZ = <NumCondZONES>                                                      -037    43
      DO 640 NZ=2,NSZ                                                           -036   514
      NZM1 = NZ - 1                                                             READSS 860
      DO 630 NZ2=1,NZM1                                                         READSS 861
      NZ3 = NZ - NZ2                                                            READSS 862
      ZP1 = <ISZONES> + NZ3*NZD                                                 READSS 863
      ZP2 = <ZP2>                                                               READSS 864
      IAZ2 = <INDUCED-AIR-ZONE>                                                 READSS 865
      ZP1 = <ISZONES> + (NZ3-1)*NZD                                             READSS 866
      ZP2 = <ZP2>                                                               READSS 867
      IF (IAZ2.GT.0 .OR. <INDUCED-AIR-ZONE>.EQ.0)  GO TO 640                    READSS 868
C              SWITCH BLOCKS                                                    READSS 869
      DO 630 II=1,NZD                                                           READSS 870
      JJ1 = ZP1 + II - 1                                                        READSS 871
      JJ2 = JJ1 + NZD                                                           READSS 872
      TEMP = AA(JJ2)                                                            READSS 873
      AA(JJ2) = AA(JJ1)                                                         READSS 874
      AA(JJ1) = TEMP                                                            READSS 875
  630 CONTINUE                                                                  READSS 876
  640 CONTINUE                                                                  READSS 877
C              INDUCED-AIR-ZONE IS A ZP2 POINTER.  WE CONVERT IT TO             READSS 878
C              A ZP1 POINTER AND STORE IT IN THE ZP1 BLOCK                      READSS 879
  650 ZP1 = <ISZONES>                                                           READSS 880
      DO 680 NZ=1,NSZ                                                           READSS 882
      ZP2 = <ZP2>                                                               READSS 883
      <IND-AIRZ-ZD> = 0                                                         -036   515
      IF (<INDUCED-AIR-ZONE> .LE. 0)  GO TO 680                                 READSS 884
      ZP2S = ZP2                                                                READSS 885
      ZP2 = <INDUCED-AIR-ZONE>                                                  READSS 886
      IF (<ZONE-TYPE> .GT. 1)  THEN                                             READSS 887
          ZP2 = ZP2S                                                            READSS 888
          <INDUCED-AIR-ZONE> = ZP2                                              READSS 889
      ELSE                                                                      READSS 890
          ZP2 = ZP2S                                                            READSS 891
      END IF                                                                    READSS 892
      IAZP2 = <INDUCED-AIR-ZONE>                                                READSS 893
      ZP1B = <ISZONES>                                                          READSS 894
      DO 670 NZ2=1,NSZ                                                          READSS 895
      ZP2B = IA(ZP1B)                                                           READSS 896
      IF (ZP2B .EQ. IAZP2)  GO TO 675                                           READSS 897
  670 ZP1B = ZP1B + NZD                                                         READSS 898
      CALL MSGSIM(-1,II,II,II,II)                                               READSS 899
      WRITE(IOUTPT,672)  (<ZONE-NAME>,II=1,8)                                   -42c   134
  672 FORMAT(14X,'Cannot find INDUCED-AIR-ZONE for ',8A4)                       -42c   135
      call MessageBox( NULL, 'PIU SYSTEM missing INDUCED-AIR-ZONE -'            WinRet  66
     &  //' ABORTING'//char(0),'READSS Errors'//char(0), MB_OK                  WinRet  67
     &  + MB_ICONSTOP+MB_TASKMODAL )                                            WinRet  68
      IwinReturn = 1                                                            WinRet  69
      RETURN                                                                    WinRet  70
  675 <INDUCED-AIR-ZONE> = ZP1B                                                 READSS 903
      <IND-AIRZ-ZD> = ZP1B                                                      READSS 904
  680 ZP1 = ZP1 + NZD                                                           READSS 905
  700 CONTINUE                                                                  READSS 906
c              Set up exhaust-air heat recovery                                 ERV    321
      IF (<sy:RECOVER-EXH> .EQ. 1)  THEN                                        ERV    322
        <sy;ERVentilator> = NewERVentilator(<sy:ERVKeywords>)                   ERV    323
        CALL ERVentilator(201, <sy;ERVentilator>, xx,xx,xx,xx,xx,xx)            ERV    324
        CALL ERVentilator(203, <sy;ERVentilator>, xx,xx,xx,xx,xx,xx)            ERV    325
      ENDIF                                                                     ERV    326
      NSZ = <NZONES>                                                            -029     5
      <VOLMULS>=0.0                                                             READSS 907
C              SET MIN-CFM-SCH COUNTER TO ZERO THEN CHECK IN ZONE LOOP          READSS 909
      <MINCFMSCHS> = 0                                                          READSS 910
      <SAREA> = 0.                                                              READSS 911
      <SPEOPLE> = 0.                                                            READSS 912
C              SET ZP1 TO POINT TO THE FIRST ZONE ON SYSTEM                     READSS 913
      ZP1    = <ISZONES>                                                        READSS 914
C              LOOP THROUGH THE ZONE ON THIS SYSTEM AND                         READSS 915
C              ADJUST THE SYSTEM SPECIFIC DATA FOR EACH                         READSS 916
      DO 510 NZ=1,NSZ                                                           READSS 917
C              PICK UP ZP2 BASE POINTER FROM ZP1 BLOCK                          READSS 918
      ZP2    = <ZP2>                                                            READSS 919
      IF(<ZONE-TYPE> .EQ. 1)                                                    READSS 921
     $  <HAFMLTSUM> = <HAFMLTSUM> + <MULTIPLIER>                                READSS 922
      IF ((<ZONE-TYPE> .EQ. 1) .AND.                                            -044c  627
     $    ((<MIN-CFM-SCH> .NE. 0) .OR. (<MIN-FLOW-CTRL> .NE. 0) .OR.            -044c  628
     $     ((<DDS-TYPE> .GT. 0).AND.                                            -044c  629
     $      ((<CMIN-CFM-SCH> .NE. 0).OR.(<HMIN-CFM-SCH> .NE. 0)))))             -044c  630
     $     <MINCFMSCHS> = 1                                                     -044c  631
C              INITIALIZE THE TEMP HISTORY FOR THIS                             READSS 925
C              ZONE TO THE LOADS CALC TEMP                                      READSS 926
      JJ     = 1                                                                READSS 927
      <TNOW>  = <TLOADS>                                                        READSS 928
      <TPAST> = <TLOADS>                                                        READSS 929
      <TSET>  = <TLOADS>                                                        READSS 930
C              Set <IND-AIRZ-ZD> = -100 for ZONEs that are specified as         -036   516
C              INDUCED-AIR-ZONEs, but not if it is the ZONE itself              -036   517
C              Later this flag is used to identifiy IA ZONEs                    -036   518
      IF(<IND-AIRZ-ZD> .NE. 0) THEN                                             -036   519
        ZP1S = ZP1                                                              -036   520
        ZP1 = <IND-AIRZ-ZD>                                                     -036   521
        IF (ZP1 .NE. ZP1S)  <IND-AIRZ-ZD> = -100                                -036   522
        ZP1 = ZP1S                                                              -036   523
      ENDIF                                                                     -036   524
c              Check if this is one of the plenums                              HVAC2   73
      IF (<ZONE-TYPE> .EQ. 3)  THEN                                             HVAC2   74
c              Increment the total plenum multiplier for the system             HVAC2   75
        <PLENMULT> = <PLENMULT> +                                               HVAC2   76
     1          <MULTIPLIER> * <FLOOR-MULTIPLIER> * <AREA>                      HVAC2   77
      ENDIF                                                                     HVAC2   78
c              see if this is the DUCT-LOSS-ZONE.  If it is, change the         RemPA  472
c              DUCT-LOSS-ZONE pointer to be a ZP1 pointer instead of ZP2        RemPA  473
      IF (-ZP2 .EQ. <DUCT-LOSS-ZONE>)  <DUCT-LOSS-ZONE> = ZP1                   -41a     6
c              same for whole-house fan exhaust zone                            -045d   10
      IF (-ZP2 .eq. <VENT-EXH-ZONE>)  <VENT-EXH-ZONE> = ZP1                     -045d   11
      IF (<ZONE-TYPE>.LT.3 .OR. <PEOPLE>.GT.0.) THEN                            READSS 950
          <SAREA> = <SAREA> + <MULTIPLIER>*<FLOOR-MULTIPLIER>*<AREA>            READSS 951
          <SPEOPLE> = <SPEOPLE>+<MULTIPLIER>*<FLOOR-MULTIPLIER>*<PEOPLE>        READSS 952
      END IF                                                                    READSS 953
                                                                                READSS 954
C              INCREMENT ZP1 TO POINT TO THE NEXT ZONE                          READSS 955
  510 ZP1    = ZP1 + NZD                                                        READSS 956
      <HAFMLTSUM> = <HAFMLTSUM> / 2.0                                           READSS 957
C              IF NO PLENUMS FOUND SET TOTAL MULT TO ONE                        READSS 958
      IF( <PLENMULT> .EQ. 0. )  <PLENMULT> = 1.                                 READSS 959
C              IF NOT VAV TYPE SYSTEM ZERO MIN-CFM-SCH COUNTER                  READSS 960
      IF( (ICODE.EQ.1).OR.                                                      -044c  632
     $    ((ICODE.GE.5).AND.(ICODE.LE.12)).OR.                                  -044c  633
     $    ((ICODE.GE.15).AND.(ICODE.LE.17)).OR.                                 -044c  634
     $    (ICODE.EQ.19).OR.(ICODE.EQ.22).OR.(ICODE.EQ.27) )                     -044c  635
     $      <MINCFMSCHS> = 0                                                    -044c  636
c                                                                               -41a     7
c              Check if duct loss zone belongs to this system                   -41a     8
c              (will be negative if not linked to the zone ZP1)                 -41a     9
      IF (<DUCT-LOSS-ZONE> .LT. 0)  THEN                                        -41a    10
        CALL MSGSIM(-1,II,II,II,II)                                             -41a    11
        WRITE (IOUTPT, 9101)  (<SYSTEM-NAME>,II=1,8)                            -41a    12
      ENDIF                                                                     -41a    13
 9101 FORMAT(14X,'System: ',8A4,' has a duct loss'                     /        -41a    14
     &14X,'into a zone which does not belong to this system.'          )        -41a    15
c              same for whole-house fan exhaust zone                            -045d   12
      IF (<VENT-EXH-ZONE> .LT. 0)  THEN                                         -045d   13
        CALL MSGSIM(-1,II,II,II,II)                                             -045d   14
        WRITE (IOUTPT, 9102)  (<SYSTEM-NAME>,II=1,8)                            -045d   15
      ENDIF                                                                     -045d   16
 9102 FORMAT(14X,'System: ',8A4,' exhausts natural'                    /        -045d   17
     &14X,'ventilation into a zone not part of this system.'           )        -045d   18
  590 CONTINUE                                                                  READSS 964
C                                                                               READSS1039
C              FOR DESIGN AND SIMULATION SET <MULTIPLIER> EQUAL TO              READSS1040
C              <MULTIPLIER> * <FLOOR-MULTIPLIER>                                READSS1041
C                                                                               READSS1042
      ZP2    = IZ                                                               READSS1043
      DO 595 NZ=1,NZONE                                                         READSS1044
      <MULTIPLIER> = <MULTIPLIER> * <FLOOR-MULTIPLIER>                          READSS1045
C              CALCULATE <FCOR> FROM THE CONDUCTION WEIGHTING FACTORS           READSS1046
C              <FCOR> WILL BE USED IN CORRECTING THE INTERIOR WALL LOAD         READSS1047
C              PASSED FROM LOADS.                                               READSS1048
      <FCOR> = (<CONDUCTION-V0>+<CONDUCTION-V1>+<CONDUCTION-V2>) /              READSS1049
     1     (1.-<CONDUCTION-W1>-<CONDUCTION-W2>)                                 READSS1050
      ZP2    = ZP2 + NCZD                                                       READSS1051
  595 CONTINUE                                                                  READSS1052
c                                                                               HVAC9a  46
c              set up the plant-report (BUILDING-HVAC) block                    HVAC14  55
c              length of plant report buffer (LPR) passed from BDL              HVAC14  56
      KPR = IAX + 1                                                             XFC1   176
      J = 0                                                                     WinRet  71
      CALL GETAA(LPR)                                                           -031    17
      DO NZ=1,NZONE                                                             RemPA  572
        ZP2  = IZ + (NZ-1)*NCZD                                                 RemPA  573
        IUSEDZ= 0                                                               RemPA  574
        DO  NS=1,NSYS                                                           RemPA  575
          NSP   = IS + (NS-1)*NSS                                               RemPA  576
          NSZ = <NZONES>                                                        RemPA  577
          ISZ = <ISZONES>                                                       RemPA  578
          DO  NZo = 1,NSZ                                                       RemPA  579
            ZP1 = ISZ + (NZo-1)*NZD                                             RemPA  580
            IF(ZP2 .EQ. <ZP2>)  IUSEDZ= IUSEDZ+ 1                               RemPA  581
          ENDDO                                                                 RemPA  582
        ENDDO                                                                   RemPA  583
        IF( IUSEDZ .GT. 1 )  THEN                                               RemPA  584
          CALL MSGSIM(-1,II,II,II,II)                                           RemPA  585
          IF(J .EQ. 0)                                                          WinRet  72
     &    call MessageBox(NULL, 'Error with ZONE/SYSTEM attachments -'          WinRet  73
     &    //' ABORTING'//char(0),'READSS Errors'//char(0), MB_OK                WinRet  74
     &    + MB_ICONSTOP+MB_TASKMODAL )                                          WinRet  75
          J = 1                                                                 WinRet  76
          WRITE(IOUTPT,9991)(<ZONE-NAME>,II=1,8)                                -42c   136
          IABORT = IABORT + 1                                                   RemPA  587
        ELSE IF( IUSEDZ .EQ. 0)  THEN                                           RemPA  588
          CALL MSGSIM(-2,II,II,II,II)                                           RemPA  589
        ENDIF                                                                   RemPA  591
      ENDDO                                                                     RemPA  592
      IF( IwinReturn .ne. 0 ) RETURN                                            WinRet  77
 9991 FORMAT(14X,'ZONE ',8A4,' is in a SYSTEM more than once.')                 -42c   137
 9992 FORMAT(14X,'ZONE ',8A4,' is not in any SYSTEM.')                          -42c   138
      IENDSF = IAX                                                              XFC1   178
c                                                                               XFC2   212
c              Create attachments for refrigeration equipment                   XFC2   213
c              Loop through systems and zones looking for refrig equip          XFC2   214
      DO  NS=1,NSYS                                                             XFC2   215
        NSP = IS + (NS-1)*NSS                                                   XFC2   216
        ISZ = <ISZONES>                                                         XFC2   217
        NSZ = <NZONES>                                                          XFC2   218
        DO  NZ=1,NSZ                                                            XFC2   219
          ZP1 = ISZ + (NZ-1)*NZD                                                XFC2   220
          ZP2 = <ZP2>                                                           XFC2   221
          IF (<ZONE-TYPE> .NE. 1)  CYCLE                                        XFC2   222
c              Attachments for ice skating rinks                                IcRink  49
          IF (<zn:ICE-RINK> .GT. 0)  THEN                                       IcRink  50
            <sy;IceRink>  = <sy;IceRink> + 1                                    IcRink  51
            <zn:ICE-RINK> = NewIceRink(<zn:IceRinkKeywrd>)                      IcRink  52
            CALL IceRink(201, <zn:ICE-RINK>)                                    IcRink  53
            CALL IceRink(203, <zn:ICE-RINK>)                                    IcRink  54
          ENDIF                                                                 IcRink  55
          IG = 1                                                                XFC2   223
c              See if refg equipment exists                                     XFC2   224
          IF (<REFG-ZONE-BTUH> .EQ. -66666.)  CYCLE                             XFC2   225
c              store pointer to zone with the case(s)                           XFC2   226
          <REFG-ZONE-ZP1> = ZP1                                                 XFC2   227
c              process for each temperature level                               XFC2   228
          DO  IG=1,3                                                            XFC2   229
            IF (<REFG-ZONE-BTUH> .EQ. -66666.)  EXIT                            XFC2   230
c              temperature dependent and fixed extraction rate blocks           XFC2   231
            CALL Create_Loss(ZP1,ZP1, 5, 1,0,                                   XFC2   232
     &                                 <MULTIPLIER>, <zn;RefgCondPtr>)          XFC2   233
            CALL Create_Loss(ZP1,ZP1, 7, 1,0,                                   XFC2   234
     &                                 <MULTIPLIER>, <zn;RefgFixedPtr>)         XFC2   235
          ENDDO                                                                 XFC2   236
        ENDDO                                                                   XFC2   237
      ENDDO                                                                     XFC2   238
c                                                                               HR      94
c              Set up the hourly reports                                        HR      95
      CALL HourlyReports(202)                                                   HR      96
C                                                                               READSS1602
C              CREATE LOADS FILE BUFFER                                         READSS1603
C                                                                               READSS1604
C              SAVE PTR TO START OF BUFFER                                      READSS1605
      IBLDSB = IAX + 1                                                          XFC1   198
C              CALL ROUTINE TO MAKE BUFFER                                      READSS1607
      CALL GETAA(LLDSB*24)                                                      -031    23
C              RESET LEN TO BE LEN OF ONE DAYS DATA                             READSS1609
C              SAVE POINTER TO END OF BUFFER                                    READSS1610
      IELDSB = IAX                                                              XFC1   200
C                                                                               READSS1612
C              IF DUMP-OPTIONS REQUIRES SOME PRINTING                           READSS1613
C                                                                               READSS1614
      IF(IREPRT(2,32).NE.0)  WRITE(IOUTPT,1301) ITBUF,ITBUFB,ITBUFE,            IREPRT  76
     1                                IBLDSB,IELDSB,LLDSB                       READSS1616
 1301 FORMAT(1X, 7HITBUF = ,I5,9H ITBUFB = ,I5,9H ITBUFE = ,I5,                 READSS1617
     1          9H IBLDSB = ,I5,9H IELDSB = ,I5,8H LLDSB = ,I5)                 READSS1618
      IF(IREPRT(2,32).NE.0)                                                     IREPRT  77
     1CALL DUMPIT(20HSYSTEMS DATA ARRAY   ,IA(1),IENDSF)                        READSS1620
      IF (IREPRT(2,32) .NE. 1) GOTO 91000                                       IREPRT  78
      WRITE(IOUTPT,90001) NVECT  ,Nsched,NZONE ,NSYS  ,NPLANT                   Time   341
     1                ,NCZD  ,NZD   ,NSS   ,lpr                                 HVAC14  83
     2                ,Isched,IZ    ,IS    ,IP    ,IATT                         Time   342
     3                ,NRB  ,NHRP  ,IRB  ,IHRP    ,nattch                       READSS1625
     4                ,Icv, Ncv,                                                -045b  157
     $                 nlp, ilp, llp, jlp,     npm, ipm, lpm, jpm,              HVAC  1147
     $                 nch, ich, lch, jch,     nbl, ibl, lbl, jbl,              HVAC  1148
     $                 ndw, idw, ldw, jdw,     ntw, itw, ltw, jtw,              HVAC  1149
     $                 npv, ipv, lpv, jpv,     ngn, ign, lgn, jgn,              PV      38
     $                 ntk, itk, ltk, jtk,     nhx, ihx, lhx, jhx,              HVAC19  29
     $                 nec, iec, lec, jec,     nlm, ilm, llm, jlm,              HVAC  1152
     $                 nem, iem, lem, jem,     nfm, ifm, lfm, jfm,              HVAC  1153
     $                 nsm, ism, lsm, jsm,     ncm, icm, lcm, jcm,              HVAC  1154
     $                 nmc, imc, jmc, lmc,     imm, kpr                         HVAC5   33
      WRITE(IOUTPT,90003,ERR=99101) (I,I=1,15),(IREPRT(2,I),I=1,15),            IREPRT  79
     1                          (I,I=16,30),(IREPRT(2,I),I=16,30),              IREPRT  80
     2                          (I,I=31,36),(IREPRT(2,I),I=31,36),              IREPRT  81
     1                          (CLOCK(I),I=1,7),ITYPLS(CLOCK(8))               READSS1630
99101 CONTINUE                                                                  READSS1631
90001 FORMAT(1H0 /                                                              READSS1632
     1'0NVEC   =',I5,4X,'NSCHED =',I5,4X,'NZONE  =',I5,4X,                      READSS1633
     2'NSYS   =',I5,4X,'NPLANT =',I5,4X /                                       READSS1634
     3'0NCZD   =',I5,4X,'NZD    =',I5,4X,                                       READSS1635
     4'NSS    =',I5,4X,'lpr    =',I5,4X /                                       HVAC14  84
     5'0Isched =',I5,4X,'IZ     =',I5,4X,                                       Time   343
     6'IS     =',I5,4X,'IP     =',I5,4X,'IATT   =',I5 /                         READSS1638
     7'0NRB    =',I5,4X,'NHRP   =',I5,4X,                                       READSS1639
     7'IRB    =',I5,4X,'IHRP   =',I5,4X,'NATTCH  =',I5 /                        READSS1640
     8'0ICURVE =',I5,4X,'NCURVE =',I5,4X,                                       READSS1641
     $/'     nlp,   ilp,   llp,   jlp,       npm,   ipm,   lpm,   jpm,'/        HVAC  1156
     $ 1X,4I7,4X,4I7/                                                           HVAC  1157
     $ '     nch,   ich,   lch,   jch,       nbl,   ibl,   lbl,   jbl,'/        HVAC  1158
     $ 1X,4I7,4X,4I7/                                                           HVAC  1159
     $ '     ndw,   idw,   ldw,   jdw,       ntw,   itw,   ltw,   jtw,'/        HVAC  1160
     $ 1X,4I7,4X,4I7/                                                           HVAC  1161
     $ '     npv,   ipv,   lpv,   jpv,       ngn,   ign,   lgn,   jgn,'/        PV      39
     $ 1X,4I7,4X,4I7/                                                           HVAC  1163
     $ '     ntk,   itk,   ltk,   jtk,       nhx,   ihx,   lhx,   jhx,'/        HVAC19  30
     $ 1X,4I7,4X,4I7/                                                           HVAC  1165
     $ '     nec,   iec,   lec,   jec,       nlm,   ilm,   llm,   jlm,'/        HVAC  1166
     $ 1X,4I7,4X,4I7/                                                           HVAC  1167
     $ '     nem,   iem,   lem,   jem,       nfm,   ifm,   lfm,   jfm,'/        HVAC  1168
     $ 1X,4I7,4X,4I7/                                                           HVAC  1169
     $ '     nsm,   ism,   lsm,   jsm,       ncm,   icm,   lcm,   jcm,'/        HVAC  1170
     $ 1X,4I7,4X,4I7/                                                           HVAC  1171
     $ '     nmc,   imc,   jmc,   lmc,       imm,   kpr      '/                 HVAC5   34
     $ 1X,4I7,4X,3I7/                                                           HVAC  1173
     94X                                                                        READSS1642
     $/)                                                                        READSS1643
90003 FORMAT( / ' REPORT ARRAY :' / 2(1X,15(I4) / 1X,15(I4) //),                READSS1644
     1          (1X,6(I4) / 1X,6(I4) //),5X, 7A4, 4H RUN,I2 //)                 READSS1645
91000 CONTINUE                                                                  READSS1646
C              CHECK IF SUMMARY REPS ARE OK (WEATHER FILE RUN)                  READSS1647
      IF (NRUNPD .GT. NDESDY)  GOTO 1315                                        Time   344
      CALL MSGSIM(-2,I,I,I,I)                                                   READSS1649
      WRITE(IOUTPT,9310)                                                        READSS1650
 9310 FORMAT(14X,'SUMMARY reports are not going to be produced '/               READSS1651
     $       14X,'since no weather file RUN-PERIOD was specified.')             -27C     8
      DO 1312 I=I16,I30                                                         READSS1653
 1312 IF(I.NE.25)  IREPRT(2,I) = 0                                              IREPRT  82
 1315 CONTINUE                                                                  READSS1655
      IF( IREPRT(2,21) .GT. 0 )  IRPZON = IRPZON + 1                            IREPRT  83
      IF( IREPRT(2,22) .GT. 0 )  IRPZON = IRPZON + 1                            IREPRT  84
      IF( IREPRT(2,26) .GT. 0 )  IRPZON = IRPZON + 1                            -036   525
      IF( IREPRT(2,30) .GT. 0 )  IRPZON = IRPZON + 1                            IREPRT  85
      IF( IREPRT(2,17) .GT. 0 )  IRPSYS = IRPSYS + 1                            IREPRT  86
      IF( IREPRT(2,18) .GT. 0 )  IRPSYS = IRPSYS + 1                            IREPRT  87
      IF( IREPRT(2,23) .GT. 0 )  IRPSYS = IRPSYS + 1                            IREPRT  88
      IF( IREPRT(2,24) .GT. 0 )  IRPSYS = IRPSYS + 1                            IREPRT  89
      IF( IREPRT(2,25) .GT. 0 )  IRPSYS = IRPSYS + 1                            IREPRT  90
      IF (IREPRT(2,25).GT.0 .AND. NDESDY.GT.0) IRPSYS=IRPSYS+1                  Time   345
      IF( IREPRT(2,26) .GT. 0 )  IRPSYS = IRPSYS + 1                            IREPRT  92
      IF( IREPRT(2,27) .GT. 0 )  IRPSYS = IRPSYS + 1                            IREPRT  93
      IF( IREPRT(2,29) .GT. 0 )  IRPSYS = IRPSYS + 1                            IREPRT  94
      IF (IREFG .NE. 0) IRPSYS = IRPSYS + 1                                     READSS1668
      IF( IREPRT(2,19) .GT. 0 )  IRPPLT = IRPPLT + 1                            IREPRT  95
      IF( IREPRT(2,20) .GT. 0 )  IRPPLT = IRPPLT + 1                            IREPRT  96
      IF( IREPRT(2,28) .GT. 0 )  IRPPLT = IRPPLT + 1                            IREPRT  97
      IRPSUM = 0                                                                READSS1672
      IE     = 14                                                               READSS1673
      IF(IREPRT(2,15) .EQ. 0)  IE = 30                                          IREPRT  98
      DO 1310 I=1,IE                                                            READSS1675
      IF( (I.NE.15) .AND. (IREPRT(2,I).GT.0) )  IRPSUM = IRPSUM + 1             IREPRT  99
 1310 CONTINUE                                                                  READSS1677
      IRPSUM = IRPSUM + IRPPLT + IRPSYS + IRPZON                                READSS1678
C                                                                               READSS1679
C              WRITE HEADER RECORDS TO STANDARD REPORT FILE                     READSS1680
C                                                                               READSS1681
C              RETURN IF NO REPORTS                                             READSS1682
      IF ( IRPSUM .eq. 0 )   GOTO  4000                                         XFC1   201
C              INITIALIZE UNIQUE REPORT NUMBER                                  READSS1684
      IUNIQ  = 0                                                                READSS1685
C              WRITE HEADER FOR FILE                                            READSS1686
      WRITE (IREPFL) 0,IPROG,(CLOCK(i),i=1,8),VERS,                             REPHDR   5
     $               TITLE,NRUNPD,IRUNPD,IWDID                                  HR      97
      IUNIQ2 = -1000                                                            READSS1688
      IF ((IREPRT(2,1) .EQ. 0) .AND. (IREPRT(2,2) .EQ. 0))  GO TO 2880          IREPRT 100
      NREPRT = 57                                                               READSS1690
      DO 2800 NS=1,NSYS                                                         READSS1691
      IF (IREPRT(2,1) .EQ. 0)  GO TO 2795                                       IREPRT 101
      WRITE (IREPFL)  IFOUR,IUNIQ,IFOUR,I38,IREPRT(2,1)                         IREPRT 102
      IUNIQ = IUNIQ - 1                                                         READSS1694
 2795 NSP = IS + (NS-1)*NSS                                                     READSS1695
      IF (<SYSTEM-TYPE> .NE. 23)  GO TO 2800                                    READSS1696
      IREPRT(2,2) = 1                                                           IREPRT 103
      WRITE (IREPFL) IFOUR,IUNIQ2,IFOUR,NREPRT,IREPRT(2,2)                      IREPRT 104
      IUNIQ2 = IUNIQ2 - 1                                                       READSS1699
 2800 CONTINUE                                                                  READSS1700
 2880 CONTINUE                                                                  READSS1701
C              IF REPORT-ONLY NO MORE RECORDS                                   READSS1702
      IUNIQ  = 1                                                                -031    24
      IF ( IREPRT(2,15) .gt. 0 )  GOTO  4010                                    -031    25
C                                                                               READSS1705
C              SUMMARY REPORTS HEADER RECORDS                                   READSS1706
C                                                                               READSS1707
c?             temporarily turn on plant reports                                RemPA  596
      <PLANT-REPORTS> = 1                                                       RemPA  597
C              PLANT SUMMARY REPORT                                             READSS1708
      IF(IRPPLT .EQ. 0)  GOTO 3000                                              READSS1709
      IF(<PLANT-REPORTS> .EQ. 0)  GOTO 2999                                     READSS1712
      IF(IREPRT(2,19) .EQ. 0)  GOTO 2910                                        IREPRT 106
      NREPRT = 45                                                               READSS1714
      WRITE( IREPFL )  IFOUR, IUNIQ, IFOUR, NREPRT, IREPRT(2,19)                IREPRT 107
      IUNIQ  = IUNIQ + 1                                                        READSS1716
 2910 CONTINUE                                                                  READSS1717
      IF(IREPRT(2,20) .EQ. 0)  GOTO 2920                                        IREPRT 108
      NREPRT = 46                                                               READSS1719
      WRITE( IREPFL )  IFOUR, IUNIQ, IFOUR, NREPRT, IREPRT(2,20)                IREPRT 109
      IUNIQ  = IUNIQ + 1                                                        READSS1721
 2920 CONTINUE                                                                  READSS1722
      IF (IREPRT(2,28).EQ.0)  goto 2930                                         IREPRT 110
C                     SS-M                                                      READSS1724
      NREPRT = 51                                                               READSS1725
      WRITE( IREPFL )  IFOUR, IUNIQ, IFOUR, NREPRT, IREPRT(2,28)                IREPRT 111
      IUNIQ  = IUNIQ+1                                                          READSS1727
 2930 CONTINUE                                                                  READSS1728
 2999 CONTINUE                                                                  READSS1773
C              SYSTEM SUMMARY REPORT                                            READSS1774
 3000 IF(IRPSYS+IRPZON+IREPRT(2,16) .EQ. 0)  GOTO 4000                          IREPRT 112
      DO 3200 NS=1,NSYS                                                         READSS1776
      NSP    = IS + (NS-1)*NSS                                                  READSS1777
      NSZ    = <NZONES>                                                         READSS1778
      ISZ    = <ISZONES>                                                        READSS1779
      ICODE  = <SYSTEM-TYPE>                                                    READSS1780
      IF(<SYSTEM-REPORTS> .EQ. 0)  GOTO 3099                                    READSS1781
C              SS-A                                                             READSS1782
      IF(IREPRT(2,16) .EQ. 0)  GOTO 3010                                        IREPRT 113
      NREPRT = 44                                                               READSS1784
      WRITE( IREPFL )  IFOUR, IUNIQ, IFOUR, NREPRT, IREPRT(2,16)                IREPRT 114
      IUNIQ  = IUNIQ + 1                                                        READSS1786
 3010 CONTINUE                                                                  READSS1787
C              SS-B                                                             READSS1788
      IF(IREPRT(2,17) .EQ. 0)  GOTO 3020                                        IREPRT 115
      WRITE( IREPFL )  IFOUR, IUNIQ, IFOUR, I28, IREPRT(2,17)                   IREPRT 116
      IUNIQ  = IUNIQ + 1                                                        READSS1791
 3020 CONTINUE                                                                  READSS1792
C              SS-C                                                             READSS1793
      IF(IREPRT(2,18)  .EQ. 0)  GOTO 3030                                       IREPRT 117
      WRITE( IREPFL )  IFOUR, IUNIQ, IFOUR, I29, IREPRT(2,18)                   IREPRT 118
      IUNIQ  = IUNIQ + 1                                                        READSS1796
 3030 CONTINUE                                                                  READSS1797
C              SS-H                                                             READSS1798
      IF(IREPRT(2,23) .EQ. 0)  GOTO 3040                                        IREPRT 119
      WRITE( IREPFL )  IFOUR, IUNIQ, IFOUR, I31, IREPRT(2,23)                   IREPRT 120
      IUNIQ  = IUNIQ + 1                                                        READSS1801
 3040 CONTINUE                                                                  READSS1802
C              SS-I                                                             READSS1803
      IF(IREPRT(2,24).EQ.0) GO TO 3050                                          IREPRT 121
      WRITE( IREPFL )  IFOUR, IUNIQ, IFOUR, I35, IREPRT(2,24)                   IREPRT 122
      IUNIQ = IUNIQ + 1                                                         READSS1806
 3050 CONTINUE                                                                  READSS1807
C              SS-J                                                             READSS1808
      IF(IREPRT(2,25).EQ.0) GO TO 3060                                          IREPRT 123
      IF (NDESDY.GT.0) WRITE(IREPFL) IFOUR,IUNIQ,IFOUR,I36,IREPRT(2,25)         Time   347
      IUNIQ = IUNIQ + 1                                                         READSS1811
      WRITE( IREPFL )  IFOUR, IUNIQ, IFOUR, I36, IREPRT(2,25)                   IREPRT 125
      IUNIQ = IUNIQ + 1                                                         READSS1813
 3060 CONTINUE                                                                  READSS1814
C                 SS-K                                                          READSS1815
      IF (IREPRT(2,26).EQ.0) GOTO 3070                                          IREPRT 126
      NREPRT = 52                                                               READSS1817
      WRITE( IREPFL )  IFOUR, IUNIQ, IFOUR, NREPRT, IREPRT(2,26)                IREPRT 127
      IUNIQ  = IUNIQ+1                                                          READSS1819
c              report SS-R is a companion to SS-K                               READSS1820
      NREPRT = 72                                                               READSS1821
      WRITE( IREPFL )  IFOUR, IUNIQ, IFOUR, NREPRT, IONE                        READSS1822
      IUNIQ  = IUNIQ+1                                                          READSS1823
 3070 CONTINUE                                                                  READSS1824
C                SS-L                                                           READSS1825
      IF (IREPRT(2,27) .EQ. 0) GOTO 3080                                        IREPRT 128
      NREPRT = 50                                                               READSS1827
      WRITE( IREPFL )  IFOUR, IUNIQ, IFOUR, NREPRT, IREPRT(2,27)                IREPRT 129
      IUNIQ  = IUNIQ+1                                                          READSS1829
 3080 CONTINUE                                                                  READSS1830
C                    SS-N                                                       READSS1831
      IF (IREPRT(2,29) .EQ.0) GOTO 3090                                         IREPRT 130
      NREPRT = 54                                                               READSS1833
      WRITE( IREPFL )  IFOUR, IUNIQ, IFOUR, NREPRT, IREPRT(2,29)                IREPRT 131
      IUNIQ  = IUNIQ+1                                                          READSS1835
 3090 CONTINUE                                                                  READSS1836
C SPECIAL REPORT REFG, REFRIGERATED EQUIPMENT                                   READSS1837
      IF (<REFG-ZONE-ZP1> .EQ. 0)  GOTO 3094                                    READSS1838
      NREPRT = 56                                                               READSS1839
      WRITE (IREPFL) IFOUR,IUNIQ,IFOUR,NREPRT,IONE                              READSS1840
      IUNIQ = IUNIQ + 1                                                         READSS1841
 3094 CONTINUE                                                                  READSS1842
C              SUPL                                                             READSS1843
C              SPECIAL EVAP OR DESC COOLING REPORT                              READSS1844
      IF (<EVAPREPPTR> .GT. 0) THEN                                             READSS1845
          MR1 = <EVAPREPPTR>                                                    READSS1846
          NREPRT = 58                                                           READSS1847
          WRITE (IREPFL) IFOUR,IUNIQ,IFOUR,NREPRT,IONE                          READSS1848
          IUNIQ = IUNIQ + 1                                                     READSS1849
      END IF                                                                    READSS1850
C              SS-P                                                             READSS1851
C              UNIT LOAD, ENERGY USE, AND PART LOAD FOR PACKAGED UNITS          READSS1852
      IF (ICODE.EQ.17 .OR. ICODE.EQ.19 .OR. ICODE.EQ.21 .OR. ICODE.EQ.27        READSS1853
     $    .OR. ICODE.EQ.28 .OR.                                                 -044e  446
     &   (ICODE.EQ.23 .AND. (<COOL-SOURCE>.EQ.2 .OR.                            -044e4   4
     &                <COOL-SOURCE>.EQ.4 .OR. <COOL-SOURCE>.EQ.9))) THEN        -044e4   5
c           if SS-H is on, do detail reports                                    READSS1855
        IF(IREPRT(2,23).NE.0) THEN                                              IREPRT 132
          NREPRT = 62                                                           READSS1857
          WRITE( IREPFL ) IFOUR, IUNIQ, IFOUR, NREPRT, IREPRT(2,23)             IREPRT 133
          IUNIQ  = IUNIQ + 1                                                    READSS1859
          NREPRT = 63                                                           READSS1860
          WRITE( IREPFL ) IFOUR, IUNIQ, IFOUR, NREPRT, IREPRT(2,23)             IREPRT 134
          IUNIQ  = IUNIQ + 1                                                    READSS1862
        ENDIF                                                                   READSS1863
      ENDIF                                                                     READSS1864
C              SS-Q                                                             READSS1865
C              HEAT PUMP SYSTEM SUMMARY                                         READSS1866
      IF((IHPREP .NE. 0).AND.(IREPRT(2,16).NE.0))  THEN                         IREPRT 135
        IF((<HEAT-SOURCE>.EQ.4) .OR. (<HEAT-SOURCE>.EQ.9).OR.                   READSS1868
     1     (<HEAT-SOURCE>.EQ.2))  THEN                                          READSS1869
          <sy;SS-Q> = Iuniq                                                     -047m    1
          NREPRT = 65                                                           READSS1870
          WRITE (IREPFL) IFOUR,IUNIQ,IFOUR,NREPRT,IREPRT(2,16)                  IREPRT 136
          IUNIQ  = IUNIQ + 1                                                    READSS1872
          NREPRT = 66                                                           READSS1873
          WRITE (IREPFL) IFOUR,IUNIQ,IFOUR,NREPRT,IREPRT(2,16)                  IREPRT 137
          IUNIQ  = IUNIQ + 1                                                    READSS1875
        ENDIF                                                                   READSS1876
      ENDIF                                                                     READSS1877
c              ERV - Energy recovery ventilator                                 ERV    327
      IF (<sy;ERVentilator> .GT. 0)                                             ERV    328
     &  CALL ERVentilator(52, <sy;ERVentilator>, xx,xx,xx,xx,xx,xx)             ERV    329
 3099 CONTINUE                                                                  READSS1878
C               ZONE SUMMARY REPORT                                             READSS1879
      DO 3200 NZ=1,NSZ                                                          READSS1880
      ZP1    = ISZ + (NZ-1)*NZD                                                 READSS1881
      ZP2    = <ZP2>                                                            READSS1882
      IF(<ZONE-REPORTS>.EQ.0)  GOTO 3200                                        READSS1883
C              SS-G                                                             READSS1884
      IF(IREPRT(2,22) .EQ. 0)  GOTO 3110                                        IREPRT 138
      NREPRT = 47                                                               READSS1886
      WRITE( IREPFL )  IFOUR, IUNIQ, IFOUR, NREPRT, IREPRT(2,22)                IREPRT 139
      IUNIQ  = IUNIQ + 1                                                        READSS1888
 3110 CONTINUE                                                                  READSS1889
C              SS-F                                                             READSS1890
      IF(IREPRT(2,21) .EQ. 0)  GOTO 3120                                        IREPRT 140
      WRITE( IREPFL )  IFOUR, IUNIQ, IFOUR, I30, IREPRT(2,21)                   IREPRT 141
      IUNIQ  = IUNIQ + 1                                                        READSS1893
 3120 CONTINUE                                                                  READSS1894
C                    SS-O                                                       READSS1895
      IF (IREPRT(2,30) .EQ.0) GOTO 3095                                         IREPRT 142
      NREPRT = 55                                                               READSS1897
      WRITE( IREPFL )  IFOUR, IUNIQ, IFOUR, NREPRT, IREPRT(2,30)                IREPRT 143
      IUNIQ  = IUNIQ+1                                                          READSS1899
 3095 CONTINUE                                                                  READSS1900
      IF(((ICODE.EQ. 6).OR.(ICODE.EQ. 7).OR.(ICODE.EQ. 9).OR.                   -043a  118
     $    (ICODE.EQ.15).OR.(ICODE.EQ.22)).AND.(<ZONE-TYPE>.EQ.1)) THEN          -043a  119
        IF((IREPRT(2,23).NE.0).OR.(IREPRT(2,27).NE.0)) THEN                     IREPRT 144
          IRPZON = IRPZON + 1                                                   READSS1903
          NREPRT = 62                                                           READSS1904
          II = IOR(IREPRT(2,23),IREPRT(2,27))                                   IREPRT 145
          IF((IREPRT(2,23).EQ.IONE).OR.(IREPRT(2,27).EQ.IONE)) II=IONE          IREPRT 146
          WRITE( IREPFL ) IFOUR, IUNIQ, IFOUR, NREPRT, II                       READSS1907
          IUNIQ  = IUNIQ + 1                                                    READSS1908
          NREPRT = 63                                                           READSS1909
          WRITE( IREPFL ) IFOUR, IUNIQ, IFOUR, NREPRT, II                       READSS1910
          IUNIQ  = IUNIQ + 1                                                    READSS1911
        ENDIF                                                                   READSS1912
      ENDIF                                                                     READSS1913
 3200 CONTINUE                                                                  READSS1914
 4000 CONTINUE                                                                  READSS1915
c                                                                               HVAC5   35
c  *****       NOTE:  ALL SYSTEMS LEVEL HEADER RECORDS MUST BE  *****           HVAC5   36
c  *****              WRITTEN BEFORE THE CALL TO PlantReports   *****           HVAC5   37
c                                                                               HVAC5   38
c                                                                               XFC1   202
c              Set up the pointers and miscellaneous defaults for the           XFC1   203
c              primary plant equipment                                          XFC1   204
 4010 CALL ReadPlant(2)                                                         -031    26
c                                                                               XFC1   206
c              Link all parasitic losses (ducts, pipes, refrigeration)          XFC1   207
c              to their respective zones                                        XFC1   208
      DO  NS=1,NSYS                                                             XFC1   209
        NSP = IS + (NS-1)*NSS                                                   XFC1   210
        NSZ = <NZONES>                                                          XFC1   211
        ISZ = <ISZONES>                                                         XFC1   212
        DO  NZ=1,NSZ                                                            XFC1   213
          ZP1 = ISZ + (NZ-1)*NZD                                                XFC1   214
          CALL CheckLoss(ZP1, <zn;MechLossList>)                                XFC1   215
        ENDDO                                                                   XFC1   216
      ENDDO                                                                     XFC1   217
c                                                                               XFC1   218
c              Call routine to perform design calculations                      XFC1   219
      IF (Iabort .EQ. 0)  THEN                                                  XFC1   220
        CALL DESIGN                                                             XFC1   221
      ELSE                                                                      XFC1   222
        IwinReturn = 1                                                          WinRet  78
      ENDIF                                                                     XFC1   224
#ifdef _DLL                                                                  /* -048   139 */ 
      IF (IwinReturn .ne. 0  .and.  Imsgflg .eq. 0)  THEN                       -048   140
        IF((IREPRT(2,32).NE.0).AND.(IREPRT(2,34).NE.0).and.                     -048   141
     &    (messageboxi(NULL, 'Do you want a STANDARD FILE dump?'                -048   142
     &    //char(0),'HVAC setup errors'//char(0), MB_YESNO                      -048   143
     &    +MB_ICONQUESTION+MB_TASKMODAL ) .eq. IDYES) ) THEN                    -048   144
            CALL DUMPIT(20HSYSTEMS DATA ARRAY   ,IA(1),IENDSF)                  -048   145
            WRITE(IOUTPT,90001)                                                 -048   146
     $      NVECT  ,NSCHED,NZONE ,NSYS  ,NPLANT                                 -048   147
     1      ,NCZD  ,NZD   ,NSS   ,lpr                                           -048   148
     2      ,Isched,IZ    ,IS    ,IP    ,IATT                                   -048   149
     3      ,NRB  ,NHRP  ,IRB  ,IHRP    ,nattch                                 -048   150
     4      ,ICURVE, NCURVE,                                                    -048   151
     $      nlp, ilp, llp, jlp,     npm, ipm, lpm, jpm,                         -048   152
     $      nch, ich, lch, jch,     nbl, ibl, lbl, jbl,                         -048   153
     $      ndw, idw, ldw, jdw,     ntw, itw, ltw, jtw,                         -048   154
     $      npv, ipv, lpv, jpv,     ngn, ign, lgn, jgn,                         -048   155
     $      ntk, itk, ltk, jtk,     nhx, ihx, lhx, jhx,                         -048   156
     $      nec, iec, lec, jec,     nlm, ilm, llm, jlm,                         -048   157
     $      nem, iem, lem, jem,     nfm, ifm, lfm, jfm,                         -048   158
     $      nsm, ism, lsm, jsm,     ncm, icm, lcm, jcm,                         -048   159
     $      nmc, imc, jmc, lmc,     imm, kpr                                    -048   160
          WRITE(IOUTPT,90003,ERR=99101)                                         -048   161
     $      (I,I=1,15),(IREPRT(2,I),I=1,15),                                    -048   162
     $      (I,I=16,30),(IREPRT(2,I),I=16,30),                                  -048   163
     $      (I,I=31,36),(IREPRT(2,I),I=31,36),                                  -048   164
     $      (CLOCK(I),I=1,7),ITYPLS(CLOCK(8))                                   -048   165
        ENDIF                                                                   -048   166
        RETURN                                                                  -048   167
      ENDIF                                                                     -048   168
#endif                                                                       /* -048   169 */ 
C              Make IREPRT(2,) values 0 or 1                                    -031    27
C              (get rid of post-processor >1 vals)                              -031    28
      DO I = 1 , 32                                                             -031    29
        IF( IREPRT(2,I) .GT. 0 )  IREPRT(2,I) = 1                               -031    30
      ENDDO                                                                     -031    31
C              If VERIFICATION is REPORT-ONLY then skip                         -031    32
      IF ( IREPRT(2,15) .gt. 0 )  THEN                                          -031    33
        CALL MSGSIM(-3,IERRF,IERRF,IERRF,IERRF)                                 -044a  145
        WRITE   (IOUTPT, 4050)                                                  -044a  146
 4050   FORMAT(14X,'VERIFICATION is REPORT-ONLY - No Simulation')               -044a  147
        call MessageBox( NULL, 'VERIFICATION is REPORT-ONLY -'                  WinRet  80
     &  //' No Simulation'//char(0),'HVAC Simulation'//char(0), MB_OK           WinRet  81
     &  + MB_ICONINFORMATION+MB_TASKMODAL )                                     WinRet  82
        GOTO  6000                                                              -033     3
      ENDIF                                                                     -031    35
c              Skip if report only                                              XFC1   225
      IF ( IRPSUM .eq. 0 )   GOTO  6000                                         XFC1   226
c                                                                               HVAC5   43
C                                                                               READSS1923
C              WRITE ANY INITIAL RECORDS FOR SUMMARY REPORTS                    READSS1924
C                                                                               READSS1925
      IUNIQ  = 1                                                                READSS1926
C              PLANT SUMMARY REPORT                                             READSS1927
      IF(IRPPLT .EQ. 0)  GOTO 5000                                              READSS1928
      IF(<PLANT-REPORTS> .EQ. 0)  GOTO 4999                                     READSS1931
C              SS-D                                                             READSS1932
      IF(IREPRT(2,19) .EQ. 0)  GOTO 4910                                        IREPRT 149
      WRITE (IREPFL) I22,IUNIQ,ISIX,                                            HVAC11  88
     $  ISSDT, (IBLK,II=1,11)                                                   HVAC11  89
      WRITE (IREPFL) IFOUR,IUNIQ,IONE,ITWO,IZERO                                READSS1936
      WRITE (IREPFL) IFOUR,IUNIQ,IONE,IONE,IZERO                                READSS1937
      IUNIQ  = IUNIQ + 1                                                        READSS1938
 4910 CONTINUE                                                                  READSS1939
C              SS-E                                                             READSS1940
      IF(IREPRT(2,20) .EQ. 0)  GOTO 4920                                        IREPRT 150
      WRITE (IREPFL) I22,IUNIQ,ISIX,                                            HVAC11  90
     $  ISSET, (IBLK,II=1,11)                                                   HVAC11  91
      WRITE (IREPFL) IFOUR,IUNIQ,IONE,IONE,IZERO                                READSS1945
      IUNIQ  = IUNIQ + 1                                                        READSS1946
 4920 CONTINUE                                                                  READSS1947
C                    SS-M                                                       READSS1948
      IF(IREPRT(2,28) .EQ. 0)  GOTO 4930                                        IREPRT 151
      WRITE (IREPFL) I22,IUNIQ,ISIX,                                            HVAC11  92
     $  ISSMT, (IBLK,II=1,11)                                                   HVAC11  93
      WRITE (IREPFL) IFOUR,IUNIQ,IONE,IONE,IZERO                                READSS1952
      IUNIQ  = IUNIQ+1                                                          READSS1953
 4930 CONTINUE                                                                  READSS1954
 4999 CONTINUE                                                                  READSS2033
C              SYSTEM SUMMARY REPORT                                            READSS2034
 5000 IF(IRPSYS+IRPZON+IREPRT(2,16) .EQ. 0)  GOTO 6000                          IREPRT 152
      DO 5200 NS=1,NSYS                                                         READSS2036
      NSP    = IS + (NS-1)*NSS                                                  READSS2037
      NSZ    = <NZONES>                                                         READSS2038
      ISZ    = <ISZONES>                                                        READSS2039
      ICODE  = <SYSTEM-TYPE>                                                    READSS2040
      IF(<SYSTEM-REPORTS> .EQ. 0)  GOTO 5099                                    READSS2041
      IF(IREPRT(2,16) .EQ. 0)  GOTO 5010                                        IREPRT 153
C              SS-A                                                             READSS2043
      WRITE (IREPFL) I22,IUNIQ,ISIX,                                            HVAC11  94
     $  ISSAT, (<SYSTEM-NAME>,II=1,8), NoDesign                                 HVAC11  95
      WRITE (IREPFL) IFOUR,IUNIQ,IONE,ITWO,IZERO                                READSS2046
      WRITE (IREPFL) IFOUR,IUNIQ,IONE,IONE,IZERO                                READSS2047
      IUNIQ  = IUNIQ + 1                                                        READSS2048
 5010 CONTINUE                                                                  READSS2049
C              SS-B                                                             READSS2050
      IF(IREPRT(2,17) .EQ. 0)  GOTO 5020                                        IREPRT 154
      WRITE (IREPFL) I22,IUNIQ,ISIX,                                            HVAC11  96
     $  ISSBT, (<SYSTEM-NAME>,II=1,8), NoDesign                                 HVAC11  97
      WRITE (IREPFL) IFOUR,IUNIQ,IONE,IONE,IZERO                                READSS2054
      IUNIQ  = IUNIQ + 1                                                        READSS2055
 5020 CONTINUE                                                                  READSS2056
C              SS-C                                                             READSS2057
      IF(IREPRT(2,18) .EQ. 0)  GOTO 5030                                        IREPRT 155
      WRITE (IREPFL) I22,IUNIQ,ISIX,                                            HVAC11  98
     $  ISSCT, (<SYSTEM-NAME>,II=1,8), NoDesign                                 HVAC11  99
      WRITE (IREPFL) IFOUR,IUNIQ,IONE,IONE,IZERO                                READSS2061
      IUNIQ  = IUNIQ + 1                                                        READSS2062
 5030 CONTINUE                                                                  READSS2063
C               SS-H                                                            READSS2064
      IF(IREPRT(2,23) .EQ. 0)  GOTO 5040                                        IREPRT 156
      WRITE (IREPFL) I22,IUNIQ,ISIX,                                            HVAC11 100
     $  ISSHT, (<SYSTEM-NAME>,II=1,8), NoDesign                                 HVAC11 101
      WRITE (IREPFL) IFOUR,IUNIQ,IONE,IONE,IZERO                                READSS2068
      IUNIQ  = IUNIQ + 1                                                        READSS2069
 5040 CONTINUE                                                                  READSS2070
C              SS-I                                                             READSS2071
      IF(IREPRT(2,24).EQ.0) GO TO 5050                                          IREPRT 157
      WRITE (IREPFL) I22,IUNIQ,ISIX,                                            HVAC11 102
     $  ISSIT, (<SYSTEM-NAME>,II=1,8), NoDesign                                 HVAC11 103
      WRITE(IREPFL) IFOUR,IUNIQ,IONE,IONE,IZERO                                 READSS2075
      IUNIQ = IUNIQ + 1                                                         READSS2076
 5050 CONTINUE                                                                  READSS2077
C              SS-J                                                             READSS2078
      IF(IREPRT(2,25).EQ.0) GO TO 5060                                          IREPRT 158
      IF (NDESDY.GT.0) WRITE (IREPFL) I22,IUNIQ,ISIX,                           Time   348
     $                  ISSJT, (<SYSTEM-NAME>,II=1,8), IDESDY                   HVAC11 105
      IUNIQ = IUNIQ + 1                                                         READSS2082
      WRITE (IREPFL) I22,IUNIQ,ISIX,                                            HVAC11 106
     $  ISSJT, (<SYSTEM-NAME>,II=1,8), NoDesign                                 HVAC11 107
      IUNIQ = IUNIQ + 1                                                         READSS2085
 5060 CONTINUE                                                                  READSS2086
      IF (IREPRT(2,26).EQ.0) GOTO 5070                                          IREPRT 159
C                   SS-K                                                        READSS2088
      WRITE (IREPFL) I22,IUNIQ,ISIX,                                            HVAC11 108
     $  ISSKT, (<SYSTEM-NAME>,II=1,8), NoDesign                                 HVAC11 109
      WRITE (IREPFL) IFOUR,IUNIQ,IONE,IONE,IZERO                                READSS2091
      IUNIQ  = IUNIQ+1                                                          READSS2092
c              report SS-R is a companion to SS-K                               READSS2093
      WRITE (IREPFL) I22,IUNIQ,ISIX,                                            HVAC11 110
     $  ISSRT, (<SYSTEM-NAME>,II=1,8), NoDesign                                 HVAC11 111
      WRITE (IREPFL) IFOUR,IUNIQ,IONE,IONE,IZERO                                READSS2096
      IUNIQ  = IUNIQ+1                                                          READSS2097
 5070 CONTINUE                                                                  READSS2098
C                   SS-L                                                        READSS2099
      IF (IREPRT(2,27).EQ.0) GOTO 5080                                          IREPRT 160
      WRITE (IREPFL) I22,IUNIQ,ISIX,                                            HVAC11 112
     $  ISSLT, (<SYSTEM-NAME>,II=1,8), NoDesign                                 HVAC11 113
      WRITE (IREPFL) IFOUR,IUNIQ,IONE,IONE,IZERO                                READSS2103
      IUNIQ  = IUNIQ+1                                                          READSS2104
 5080 CONTINUE                                                                  READSS2105
C                SS-N                                                           READSS2106
      IF(IREPRT(2,29).EQ.0) GOTO 5090                                           IREPRT 161
      WRITE (IREPFL) I22,IUNIQ,ISIX,                                            HVAC11 114
     $  ISSNT, (<SYSTEM-NAME>,II=1,8), NoDesign                                 HVAC11 115
      WRITE (IREPFL) IFOUR,IUNIQ,IONE,IONE,IZERO                                READSS2110
      IUNIQ  = IUNIQ+1                                                          READSS2111
 5090 CONTINUE                                                                  READSS2112
C SPECIAL REPORT REFG, REFRIGERATED EQUIPMENT                                   READSS2113
      IF (<REFG-ZONE-ZP1> .EQ. 0)  GOTO 5094                                    READSS2114
      ZP1 = <REFG-ZONE-ZP1>                                                     READSS2115
      ZP2 = <ZP2>                                                               READSS2116
      WRITE (IREPFL) I22,IUNIQ,ISIX,                                            HVAC11 116
     $  ISSRGT, (<ZONE-NAME>,II=1,8), NoDesign                                  HVAC11 117
      WRITE (IREPFL) IFOUR,IUNIQ,IONE,IONE,IZERO                                READSS2119
      IUNIQ = IUNIQ + 1                                                         READSS2120
 5094 CONTINUE                                                                  READSS2121
C              SUPL                                                             READSS2122
C              SPECIAL EVAP OR DESC COOLING REPORT                              READSS2123
      IF (<EVAPREPPTR> .GT. 0) THEN                                             READSS2124
          MR1 = <EVAPREPPTR>                                                    READSS2125
          WRITE (IREPFL) I22,IUNIQ,ISIX,                                        HVAC11 118
     $      ISSUPT, (<SYSTEM-NAME>,II=1,8), NoDesign                            HVAC11 119
          WRITE (IREPFL) IFOUR,IUNIQ,IONE,IONE,IZERO                            READSS2128
          IUNIQ = IUNIQ + 1                                                     READSS2129
      END IF                                                                    READSS2130
C              SS-P                                                             READSS2131
C              UNIT LOAD, ENERGY USE, AND PART LOAD FOR PACKAGED UNITS          READSS2132
      IF (ICODE.EQ.17 .OR. ICODE.EQ.19 .OR. ICODE.EQ.21 .OR. ICODE.EQ.27        READSS2133
     $    .OR. ICODE.EQ.28 .OR.                                                 -044e  448
     &   (ICODE.EQ.23 .AND. (<COOL-SOURCE>.EQ.2 .OR.                            -044e4   6
     &                <COOL-SOURCE>.EQ.4 .OR. <COOL-SOURCE>.EQ.9))) THEN        -044e4   7
c           if SS-H is on, do detail reports                                    READSS2135
        IF(IREPRT(2,23).NE.0) THEN                                              IREPRT 162
          WRITE (IREPFL) I22,IUNIQ,ISIX,                                        HVAC11 120
     $      ISSPTh, (<SYSTEM-NAME>,II=1,8), NoDesign                            HVAC11 121
          WRITE(IREPFL)ININE,IUNIQ,IONE,IONE,IFIVE,(IST(I,ICODE),I=1,2),        READSS2139
     1                  <HEATING-CAPACITY>,<HEATING-EIR>,<SUPPLY-CFM>           READSS2140
          WRITE( IREPFL ) IFOUR,IUNIQ,IONE,ITWO,IZERO                           READSS2141
          IUNIQ  = IUNIQ + 1                                                    READSS2142
          WRITE (IREPFL) I22,IUNIQ,ISIX,                                        HVAC11 122
     $      ISSPTc, (<SYSTEM-NAME>,II=1,8), NoDesign                            HVAC11 123
          WRITE(IREPFL)ININE,IUNIQ,IONE,IONE,IFIVE,(IST(I,ICODE),I=1,2),        READSS2145
     1                  <COOLING-CAPACITY>,<COOLING-EIR>,<SUPPLY-CFM>           READSS2146
          WRITE( IREPFL ) IFOUR,IUNIQ,IONE,ITWO,IZERO                           READSS2147
          IUNIQ  = IUNIQ + 1                                                    READSS2148
        ENDIF                                                                   READSS2149
      ENDIF                                                                     READSS2150
C              SS-Q                                                             READSS2151
C              HEAT PUMP SYSTEM SUMMARY                                         READSS2152
      IF (<sy;SS-Q> .gt. 0) THEN                                                -047m    2
          WRITE (IREPFL) I22,IUNIQ,ISIX,                                        HVAC11 124
     $      ISSHPC, (<SYSTEM-NAME>,II=1,8), NoDesign                            HVAC11 125
          WRITE(IREPFL) IFOUR,IUNIQ,IONE,IONE,IZERO                             READSS2158
          IUNIQ  = IUNIQ + 1                                                    READSS2159
          WRITE (IREPFL) I22,IUNIQ,ISIX,                                        HVAC11 126
     $      ISSHPH, (<SYSTEM-NAME>,II=1,8), NoDesign                            HVAC11 127
          WRITE(IREPFL) IFOUR,IUNIQ,IONE,IONE,IZERO                             READSS2162
          IUNIQ  = IUNIQ + 1                                                    READSS2163
      ENDIF                                                                     READSS2165
c              ERV - Energy recovery ventilator                                 ERV    330
      IF (<sy;ERVentilator> .GT. 0)  THEN                                       ERV    331
        CALL ERVentilator(53, <sy;ERVentilator>, xx,xx,xx,xx,xx,xx)             ERV    332
        CALL ERVentilator(54, <sy;ERVentilator>, xx,xx,xx,xx,xx,xx)             ERV    333
        Iuniq = Iuniq + 1                                                       ERV    334
      ENDIF                                                                     ERV    335
 5099 CONTINUE                                                                  READSS2166
C               ZONE SUMMARY REPORT                                             READSS2167
      DO 5200 NZ=1,NSZ                                                          READSS2168
      ZP1    = ISZ + (NZ-1)*NZD                                                 READSS2169
      ZP2    = <ZP2>                                                            READSS2170
      IF(<ZONE-REPORTS>.EQ.0)  GOTO 5200                                        READSS2171
      IF(IREPRT(2,22) .EQ. 0)  GOTO 5110                                        IREPRT 164
C              SS-G                                                             READSS2173
      WRITE (IREPFL) I22,IUNIQ,ISIX,                                            HVAC11 128
     $  ISSGT, (<ZONE-NAME>,II=1,8), NoDesign                                   HVAC11 129
      WRITE (IREPFL) IFOUR,IUNIQ,IONE,ITWO,IZERO                                READSS2176
      WRITE (IREPFL) IFOUR,IUNIQ,IONE,IONE,IZERO                                READSS2177
      IUNIQ  = IUNIQ + 1                                                        READSS2178
 5110 CONTINUE                                                                  READSS2179
C              SS-F                                                             READSS2180
      IF(IREPRT(2,21) .EQ. 0)  GOTO 5120                                        IREPRT 165
      WRITE (IREPFL) I22,IUNIQ,ISIX,                                            HVAC11 130
     $  ISSFT, (<ZONE-NAME>,II=1,8), NoDesign                                   HVAC11 131
      WRITE (IREPFL) IFOUR,IUNIQ,IONE,IONE,IZERO                                READSS2184
      IUNIQ  = IUNIQ + 1                                                        READSS2185
 5120 CONTINUE                                                                  READSS2186
C              SS-O                                                             READSS2187
      IF(IREPRT(2,30).EQ.0) GOTO 5095                                           IREPRT 166
      WRITE (IREPFL) I22,IUNIQ,ISIX,                                            HVAC11 132
     $  ISSOT, (<ZONE-NAME>,II=1,8), NoDesign                                   HVAC11 133
      WRITE (IREPFL) IFOUR,IUNIQ,IONE,IONE,IZERO                                READSS2192
      IUNIQ  = IUNIQ+1                                                          READSS2193
 5095 CONTINUE                                                                  READSS2194
      IF(((ICODE.EQ. 6).OR.(ICODE.EQ. 7).OR.(ICODE.EQ. 9).OR.                   -043a  120
     $    (ICODE.EQ.15).OR.(ICODE.EQ.22)).AND.(<ZONE-TYPE>.EQ.1)) THEN          -043a  121
        IF((IREPRT(2,23).NE.0).OR.(IREPRT(2,27).NE.0)) THEN                     IREPRT 167
          WRITE (IREPFL) I22,IUNIQ,ISIX,                                        HVAC11 134
     $      ISSPTh, (<ZONE-NAME>,II=1,8), NoDesign                              HVAC11 135
          WRITE(IREPFL)ININE,IUNIQ,IONE,IONE,IFIVE,(IST(I,ICODE),I=1,2),        READSS2199
     1                  <HEATCAPZ>,<HEATING-EIR>,<CFMAX>                        READSS2200
          WRITE( IREPFL ) IFOUR,IUNIQ,IONE,ITWO,IZERO                           READSS2201
          IUNIQ  = IUNIQ + 1                                                    READSS2202
          WRITE (IREPFL) I22,IUNIQ,ISIX,                                        HVAC11 136
     $      ISSPTc, (<ZONE-NAME>,II=1,8), NoDesign                              HVAC11 137
          WRITE(IREPFL)ININE,IUNIQ,IONE,IONE,IFIVE,(IST(I,ICODE),I=1,2),        READSS2205
     1                  <COOLCAPZ>,<COOLING-EIR>,<CFMAX>                        READSS2206
          WRITE( IREPFL ) IFOUR,IUNIQ,IONE,ITWO,IZERO                           READSS2207
          IUNIQ  = IUNIQ + 1                                                    READSS2208
        ENDIF                                                                   READSS2209
      ENDIF                                                                     READSS2210
c              For VAV systems, make sure heat source specified                 Bug40  103
c              if heating anywhere in the system                                Bug40  104
      SELECT CASE (ICODE)                                                       Bug40  105
        CASE (11,13,18,21,23,28)                                                Bug40  106
          IF (<HEAT-SOURCE> .EQ. 0)  <HEAT-SOURCE> = <ZONE-HEAT-SOURCE>         Bug40  107
      END SELECT                                                                Bug40  108
 5200 CONTINUE                                                                  READSS2211
 6000 CONTINUE                                                                  READSS2212
      RETURN                                                                    READSS2213
      END                                                                       READSS2214
      SUBROUTINE REPOUT(IFLAG,IDF)                                              REPOUT   2
C                                                                               REPOUT   3
C                            WRITE MONTHLY SUMS TO REPORT FILE                  REPOUT   4
C                                                                               REPOUT   5
C              DEVELOPED BY                                                     -130     1
C                            J. J. Hirsch & S. D. Gates                         -130     2
C                            James J. Hirsch & Associates                       -130     3
C                            Camarillo, California                              -130     4
C              BASED UPON CODE DEVELOPED BY J. J. Hirsch and                    -130     5
C                            W. F. Buhl                                         -130     6
C                            A. E. Erdem                                        -130     7
C                            Lawrence Berkeley National Laboratory              -130     8
C                            University of California                           -130     9
Copyright (c) 1997 by James J. Hirsch. All Rights Reserved. Unpublished         -130    10
c rights reserved under the Copyright Laws of the United States.                -130    11
c RESTRICTED RIGHTS NOTICE: Government use, reproduction or disclosure          -130    12
c is subject to restrictions as set forth in Rights in Data (g)(3) in           -130    13
c UC/LBL purchase order 4607010 with J.J. Hirsch & Associates.                  -130    14
C                                                                               REPOUT   7
      DIMENSION IBINRH(2,10),IBINTP(3,7,2)                                      REPOUT   8
      COMMON  /BEPS  /  BGAREA, BNAREA, PctSysOvrld, PctPltOvrld,               HVAC6    1
     $                  SiteEnergy, SourceEnergy                                HVAC6    2
      DIMENSION         BEPS(6)                                                 HVAC6    3
      EQUIVALENCE       (BEPS(1),BGAREA)                                        HVAC6    4
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON  /BUF   / DBUF(52,9999), IZREF(9999),                              -048a    8
     &                 DAYMTR(61,24), ElecPeaks5(13,25,24)                      Time     2
      DIMENSION        IDBUF(52,9999), OBUF(42,24,4), IOBUF(42,24,4)            -048a    9
      EQUIVALENCE      (DBUF(1,1),IDBUF(1,1)),                                  /BUF/    5
     1                 (OBUF(1,1,1),DBUF(1,1)),                                 /BUF/    6
     2                 (OBUF(1,1,1),IOBUF(1,1,1))                               /BUF/    7
      COMMON  /BUFERS/  MRLEN1, MRLEN2, IBLDSB,IELDSB,LLDSB,N3,IBRPB1,          HVACi    1
     1                  IERPB1,LRPB1,IBRPB2,IERPB2,LRPB2                        HVACi    2
      COMMON  /CTRL  / VERS(2),IRPFLG(4),IOVRLL(7),IWRTFL,IPROG,                /CTRL/   2
     1                 IFATAL,NAMPRG(3,7),MTRICR                                /CTRL/   3
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                 IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                        /FILES/  3
     2               , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                   /FILES/  4
     3                 IHRREP(3), IHRPAS(2)                                     /FILES/  5
      COMMON  /DESHRQ/ NDESDY, IDDTYP(2), DESHRQ(360)                           Time     3
      COMMON  /HRCNT/   IHOURM, IHOURY,   IDAY1, IDAY2, IMON1,  IMON2           /HRCNT/  2
      COMMON  /HRREP / Irb, Ihrp, Lrb, Lhrp, Nrb, Nhrp, IVTLIM(3,50),           HR       5
     &                 IGRPtr, IBRPtr, IRSch, IRSchT(5),                        HR       6
     &                 NHRTyp(3), ITBUF(3), ITBUFB(3), ITBUFE(3),               HR       7
     &                 IHREOF, ICDFLG                                           HR       8
      COMMON /INTS  /  IZERO,IONE,ITWO,ITHREE,IFOUR,IFIVE,ISIX,                 RemPA    9
     $                 ISEVEN,IEIGHT,ININE,ITEN,                                RemPA   10
     $                 I11,I12,I13,I14,I15,I16,I17,I18,I19,I20,                 RemPA   11
     $                 I21,I22,I23,I24,I25,I26,I27,I28,I29,I30,                 RemPA   12
     $                 I31,I32,I33,I34,I35,I36,I37,I38,I39,I40,                 RemPA   13
     $                 I41,I42,I43,I44,I45,I46,I47,I48,I49,I50,                 RemPA   14
     $                 I51,I52,I53,I54,I55,I56,I57,I58,I59,I60,                 HVAC6    6
     $                 I61,I62,I63,I64,I65,I66,I67,I68,I69,I70,                 HVAC6    7
     $                 I71,I72,I73,I74,I75,I76,I77,I78,I79,I80,                 HVAC6    8
     $                 I81,I82,I83,I84,I85,I86,I87,I88,I89,I90,                 HVAC6    9
     $                 I91,I92,I93,I94,I95,I96,I97,I98,I99,I100                 HVAC6   10
      INTEGER          INTS(101)                                                HVAC6   11
      EQUIVALENCE      (INTS(1),IZERO)                                          /INTS/   7
      COMMON  /LOOP  / Nloop(10,2), NextType(10), NLP2,                         -41a     1
     $                 WLHPoff, RealCall                                        HVAC12   1
      LOGICAL          WLHPoff, RealCall                                        HVAC12   2
      COMMON  /LOOPKY/ CHW, PIPE2, loop3, HW, loop5, STM, WLHP, DHW,            -131     1
     &                 CW, Deleted, PIPE2h, WLHPh, COGEN, NoType,               -131     2
     &                 FIXED, OA, SCH, LOAD,  ZONE, OUTDOOR,                    -131     3
     &                 STANDBY, DEMAND, SNAP, SCHEDULED, SubhourDemand,         -033     1
     &                 CONSTANT, VARIABLE, ModeText(4),                         -131     5
     &                 OFFMODE, FLOATING, HEATMODE, COOLMODE,                   -131     6
     &                 AtCoils, EnterLoop, AtPump,                              -131     7
     &                 INDOORS, OUTDOORS, TUNNEL, UNDERGROUND,                  -131     8
     &                 PRIMARY, SECONDARY,                                      -131     9
     &                 DIRECT, HX,                                              -131    10
     &                 WATER, ETHYLENE, PROPYLENE, BRINE                        -131    11
      INTEGER          CHW, PIPE2, loop3, HW, loop5, STM, WLHP, DHW,            -131    12
     &                 CW, Deleted, PIPE2h, WLHPh, COGEN, NoType,               -131    13
     &                 FIXED, OA, SCH, LOAD,  ZONE, OUTDOOR,                    -131    14
     &                 STANDBY, DEMAND, SNAP, SCHEDULED, SubhourDemand,         -033     2
     &                 CONSTANT, VARIABLE,                                      -131    16
     &                 OFFMODE, FLOATING, HEATMODE, COOLMODE,                   -131    17
     &                 AtCoils, EnterLoop, AtPump,                              -131    18
     &                 INDOORS, OUTDOORS, TUNNEL, UNDERGROUND,                  -131    19
     &                 PRIMARY, SECONDARY,                                      -131    20
     &                 DIRECT, HX,                                              -131    21
     &                 WATER, ETHYLENE, PROPYLENE, BRINE                        -131    22
      COMMON  /MISCD / TEMPS(4,9999),CONS(5),TEMPSL(9999),                      -048a   10
     1                 BLDGQH,BLDGQC,BLDGQL,BLDGP,BPMULT,                       /MISCD/  3
     $                 DBTMIN,DBTMAX,WMIN,WMAX,NSPZ(9999),                      -048a   11
     3                 DQ, DTP, DTR, DTS, FPI, PLRCC , POM, TC2, TDM,           /MISCD/  5
     4                 TRA,WCOL,WCOLM,WMM,YPI,KWBTU,BTUKW,UNFILD,Unusedm        RemPA   45
      REAL             KWBTU                                                    /MISCD/  7
      COMMON  /PTRPLT/ Ipm,Ilp,Ich,Ibl,Idw,Itw,Ipv,Ign,Itk,Ihx,                 PV       1
     &                 Iec,Ilm,Iem,Ifm,Ism,Icm,Imm,Imc,Igl,Isp2,                XFC2     1
     &                 Ispare(5),  Ipe,                                         HVAC19   3
     &                 Npm,Nlp,Nch,Nbl,Ndw,Ntw,Npv,Ngn,Ntk,Nhx,                 PV       2
     &                 Nec,Nlm,Nem,Nfm,Nsm,Ncm,Nmm,Nmc,Ngl,Nsp2,                XFC2     2
     &                 Nspare(5),  Npe,                                         HVAC19   6
     &                 Lpm,Llp,Lch,Lbl,Ldw,Ltw,Lpv,Lgn,Ltk,Lhx,                 PV       3
     &                 Lec,Llm,Lem,Lfm,Lsm,Lcm,Lmm,Lmc,Lgl,Lsp2,                XFC2     3
     &                 Lspare(5),  Lpe,                                         HVAC19   9
     &                 Jpm,Jlp,Jch,Jbl,Jdw,Jtw,Jpv,Jgn,Jtk,Jhx,                 PV       4
     &                 Jec,Jlm,Jem,Jfm,Jsm,Jcm,    Jmc,Jgl,                     HVAC19  11
     &                 Jpe, kpr, NumMeters, NumIntHX                            XFC1     1
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      COMMON  /REPORT/ IREPRT(4,37),IPRG,IUNIQV(100),IUNIQS(100),IUNIQL         HVAC14   4
      COMMON  /TIME  / IDOY, IYR, IMO, IDAY, IHR,                               Time     4
     &                 ISCMO, ISCDAY, ISCHR, IDOW, ISCDOW, iDSdates(6),         -044e5   1
     &                 iTimeFlg, iDSFlg, iDDFlg, InitialFlg, LeapYr,            Time     6
     &                 CLOCK(10), MONDSC(13), MONLEN(12), MONSDA(12)            HR      12
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
      COMMON /SHP   / QCRUN,QCLOAD,QCGAS,QCAUX,QCGSLD,QCGSUP,                   /SHP/    2
     1                QCWAS,QCWASU,QCGSAV,QCFAN,                                /SHP/    3
     2                QHRUN,QHLOAD,QHGAS,QHAUX,QHGSLD,QHGSUP,                   /SHP/    4
     3                QHWAS,QHWASU,QHGDFR,QHFAN,          CUR(25),              /SHP/    5
     4                GSAV1,GASV2,PCH,ISZCZ,GCAP(2),GEDB,QHDFRG,                -044c1   1
     5                GRPM,PLRSUP,CFMCYC,CLPLR,CFMVVT,QHZHP,PCCEDB,             /SHP/    7
     6                IHPREP,IHPOUT,IHPHRR,IHPHRN,IRST,IREN                     /SHP/    8
      COMMON /SHPZ  / QCRUNZ,QCLOADZ,QCGASZ,QCAUXZ,QCGSLDZ,QCGSUPZ,             /SHP/    9
     1                QCWASZ,QCWASUZ,QCGSAVZ,QCFANZ,                            /SHP/   10
     2                QHRUNZ,QHLOADZ,QHGASZ,QHAUXZ,QHGSLDZ,QHGSUPZ,             /SHP/   11
     3                QHWASZ,QHWASUZ,QHGDFRZ,QHFANZ                             /SHP/   12
      DIMENSION       SHP(60),SHPZ(20)                                          /SHP/   13
      EQUIVALENCE     (SHP,QCRUN),(SHPZ,QCRUNZ)                                 /SHP/   14
     1               ,(DFM1,CUR(18)),(DFM2,CUR(19)),(DFM3,CUR(20))              /SHP/   15
C                                                                               REPOUT  25
      INTEGER STAR,BLANK,ISTAR1,ISTAR2                                          REPOUT  26
      COMMON  /IST/    IST(4,32)                                                /IST/    2
      DATA IHYR/3HYR /                                                          RemPA  602
      DATA STAR /2H */                                                          REPOUT  29
      DATA BLANK /2H  /                                                         REPOUT  30
C                                                                               REPOUT  31
      DATA IBINRH/4H90-1,4H00  ,4H80-8,4H9   ,4H70-7,4H9   ,4H60-6,             REPOUT  33
     1            4H9   ,4H50-5,4H9   ,4H40-4,4H9   ,4H30-3,4H9   ,             REPOUT  34
     1            4H20-2,4H9   ,4H10-1,4H9   ,4H 0-0,4H9   /                    REPOUT  35
      DATA IBINTP/4HABOV,4HE 85,4H    ,4H80-8,4H5   ,4H    ,4H75-8,             REPOUT  36
     1  4H0   ,4H    ,                                                          REPOUT  37
     2            4H70-7,4H5   ,4H    ,4H65-7,4H0   ,4H    ,4H60-6,             REPOUT  38
     3 4H5   ,4H    ,4HBELO,                                                    REPOUT  39
     4            4HW 60,4H    ,                                                REPOUT  40
     54HABOV,4HE 29,4H.4  ,                                                     REPOUT  41
     64H26.7,4H-29.,4H4   ,                                                     REPOUT  42
     74H23.9,4H-26.,4H7   ,                                                     REPOUT  43
     84H21.1,4H-23.,4H9   ,                                                     REPOUT  44
     94H18.3,4H-21.,4H1   ,                                                     REPOUT  45
     14H15.6,4H-18.,4H3   ,                                                     REPOUT  46
     24HBELO,4HW 15,4H.6  /                                                     REPOUT  47
      DIMENSION IFAN(2,4)                                                       REPOUT  48
      DATA IFAN /4H  SU, 4HPPLY, 4HHOT , 4HDECK,                                REPOUT  49
     1           4H  RE, 4HTURN, 4H  RE, 4HLIEF /                               REPOUT  50
      IUNIQ  = 1                                                                REPOUT  51
C                                                                               REPOUT  52
C              WRITE MONTHLY RECORDS TO REPORT FILE                             REPOUT  53
C                                                                               REPOUT  54
C              IF THIS IS AN ENDING CALL                                        REPOUT  55
      IF(IFLAG .EQ. 1)  GOTO 5000                                               REPOUT  56
C              PLANT REPORTS                                                    REPOUT  57
      IF(IRPPLT .EQ. 0)  GOTO 1000                                              REPOUT  58
      IF(<PLANT-REPORTS>.EQ.0)  GOTO 900                                        REPOUT  61
C              REPORT SS-D                                                      REPOUT  62
      IF(IREPRT(2,19) .EQ. 0)  GOTO 190                                         IREPRT 168
      IF (IDF.EQ.1) GO TO 180                                                   REPOUT  64
      QC1    = <QCPLMO>*1E-6                                                    REPOUT  65
      QH1    = <QHPLMO>*1E-6                                                    REPOUT  66
      TKW1   = <PKWMO>                                                          REPOUT  67
      QH2    = <QHPLMOM>*1E-3                                                   REPOUT  68
      QC2    = <QCPLMOM>*1E-3                                                   REPOUT  69
      TKW2   = <PKWMOM>                                                         REPOUT  70
      IDH    = <IPQHDAYHR>/32                                                   REPOUT  71
      IHH    = <IPQHDAYHR> - IDH*32                                             REPOUT  72
      IDC    = <IPQCDAYHR>/32                                                   REPOUT  73
      IHC    = <IPQCDAYHR> - IDC*32                                             REPOUT  74
      ITH    = <IPQHDBWBT>/256                                                  REPOUT  75
      IWH    = <IPQHDBWBT> - ITH*256 - 128                                      REPOUT  76
      ITH    = ITH - 128                                                        REPOUT  77
      ITC    = <IPQCDBWBT>/256                                                  REPOUT  78
      IWC    = <IPQCDBWBT> - ITC*256 - 128                                      REPOUT  79
      ITC    = ITC - 128                                                        REPOUT  80
      TH     = ITH                                                              REPOUT  81
      WH     = IWH                                                              REPOUT  82
      TC     = ITC                                                              REPOUT  83
      WC     = IWC                                                              REPOUT  84
C     IF((QC1.EQ.0.0).AND.(QH1 .EQ.0.0)) THEN                                   HVAC15  16
C              IF NO LOADS RECORD                                               HVAC15  17
C       WRITE (IREPFL) I11,IUNIQ,IONE,ITEN,ISEVEN,MONDSC(IMO),                  HVAC15  18
C    $         QC1,QC2,QH1,QH2,TKW1,TKW2                                        HVAC15  19
C     ELSE IF(QC1 .EQ. 0.0)  THEN                                               HVAC15  20
C              IF QC IS ZERO USE SPECIAL FORMAT                                 HVAC15  21
C       WRITE(IREPFL)I15,IUNIQ,IONE,IEIGHT,I11,MONDSC(IMO),                     HVAC15  22
C    $        QC1,QC2,QH1,IDH,IHH,TH,WH,QH2,TKW1,TKW2                           HVAC15  23
C     ELSE IF(QH1  .EQ. 0.0)  THEN                                              HVAC15  24
C              IF QH IS ZERO USE SPECIAL FORMAT                                 HVAC15  25
C       WRITE(IREPFL)I15,IUNIQ,IONE,ININE,I11,MONDSC(IMO),                      HVAC15  26
C    $        QC1,IDC,IHC,TC,WC,QC2,QH1,QH2,TKW1,TKW2                           HVAC15  27
C     ELSE                                                                      HVAC15  28
        WRITE(IREPFL)I19,IUNIQ,IONE,ITHREE,I15,MONDSC(IMO),                     HVAC15  29
     $        QC1,IDC,IHC,TC,WC,QC2,QH1,IDH,IHH,TH,WH,QH2,TKW1,TKW2             HVAC15  30
C     ENDIF                                                                     HVAC15  31
  180 IUNIQ  = IUNIQ + 1                                                        REPOUT 108
  190 CONTINUE                                                                  REPOUT 109
C              SS-E                                                             REPOUT 110
      IF(IREPRT(2,20) .EQ. 0)  GOTO 200                                         IREPRT 169
      IF (IDF.EQ.1) GO TO 195                                                   REPOUT 112
      QH1    = <QHPL-AT-QCPL>*1E-3                                              REPOUT 113
      WRITE (IREPFL) I17,IUNIQ,IONE,ITWO,I13,MONDSC(IMO),                       REPOUT 114
     1               <NHRSQCPL>,<NHRSQHPL>,<NHRSQCQHPL>,                        REPOUT 115
     2               <PFLTHR1MO>,<PHEATONMO>,<PCOOLONMO>,<PFANONMO>,            REPOUT 116
     3               <PFANCYONMO>,<PNTVTHRSMO>,<PFLTHR2MO>,                     REPOUT 117
     4               QH1,<PKW-AT-QCPL>                                          REPOUT 118
  195 IUNIQ = IUNIQ + 1                                                         REPOUT 119
  200 CONTINUE                                                                  REPOUT 120
      IF(IREPRT(2,28).EQ.0)  GOTO 897                                           IREPRT 170
C                   SS-M                                                        REPOUT 122
      IF (IDF.EQ.1) GO TO 895                                                   REPOUT 123
      WRITE (IREPFL) ININE,IUNIQ,IONE,ITWO,IFIVE,MONDSC(IMO),                   REPOUT 124
     1  <PLTFANHTKWMO>,<PLTFANCLKWMO>,<PLTFANCNKWMO>,<PLTFANFLKWMO>             REPOUT 125
  895 IUNIQ = IUNIQ + 1                                                         REPOUT 126
  897 CONTINUE                                                                  REPOUT 127
  900 CONTINUE                                                                  REPOUT 264
C              SYSTEM REPORTS                                                   REPOUT 265
 1000 IF(IRPSYS+IRPZON+IREPRT(2,16) .EQ. 0)  RETURN                             IREPRT 171
      DO 4000 NS=1,NSYS                                                         REPOUT 267
      NSP    = IS + (NS-1)*NSS                                                  REPOUT 268
      NSZ    = <NZONES>                                                         REPOUT 269
      ISZ    = <ISZONES>                                                        REPOUT 270
      ICODE = <SYSTEM-TYPE>                                                     REPOUT 271
      IF(<SYSTEM-REPORTS>.EQ.0)  GOTO 4199                                      REPOUT 272
C              REPORT SS-A                                                      REPOUT 273
      IF(IREPRT(2,16) .EQ. 0)  GOTO 3090                                        IREPRT 172
      IF (IDF.EQ.1) GO TO 3080                                                  REPOUT 275
      QC1    = <QCMO>*1E-6                                                      REPOUT 276
      QH1    = <QHMO>*1E-6                                                      REPOUT 277
      TKW1   = <SKWMO>                                                          REPOUT 278
      QH2    = <QHMOM>*1E-3                                                     REPOUT 279
      QC2    = <QCMOM>*1E-3                                                     REPOUT 280
      TKW2   = <SKWMOM>                                                         REPOUT 281
      IDH    = <IQHDAYHR>/32                                                    REPOUT 282
      IHH    = <IQHDAYHR> - IDH*32                                              REPOUT 283
      IDC    = <IQCDAYHR>/32                                                    REPOUT 284
      IHC    = <IQCDAYHR> - IDC*32                                              REPOUT 285
      ITH    = <IQHDBWBT>/256                                                   REPOUT 286
      IWH    = <IQHDBWBT> - ITH*256 - 128                                       REPOUT 287
      ITH    = ITH - 128                                                        REPOUT 288
      ITC    = <IQCDBWBT>/256                                                   REPOUT 289
      IWC    = <IQCDBWBT> - ITC*256 - 128                                       REPOUT 290
      ITC    = ITC - 128                                                        REPOUT 291
      TH     = ITH                                                              REPOUT 292
      WH     = IWH                                                              REPOUT 293
      TC     = ITC                                                              REPOUT 294
      WC     = IWC                                                              REPOUT 295
C     IF((QC1.EQ.0.0).AND.(QH1 .EQ.0.0)) THEN                                   HVAC15  32
C              IF NO LOADS RECORD                                               HVAC15  33
C       WRITE (IREPFL) I11,IUNIQ,IONE,ITEN,ISEVEN,MONDSC(IMO),                  HVAC15  34
C    $         QC1,QC2,QH1,QH2,TKW1,TKW2                                        HVAC15  35
C     ELSE IF(QC1 .EQ. 0.0)  THEN                                               HVAC15  36
C              IF QC IS ZERO USE SPECIAL FORMAT                                 HVAC15  37
C       WRITE(IREPFL)I15,IUNIQ,IONE,IEIGHT,I11,MONDSC(IMO),                     HVAC15  38
C    $        QC1,QC2,QH1,IDH,IHH,TH,WH,QH2,TKW1,TKW2                           HVAC15  39
C     ELSE IF(QH1  .EQ. 0.0)  THEN                                              HVAC15  40
C              IF QH IS ZERO USE SPECIAL FORMAT                                 HVAC15  41
C       WRITE(IREPFL)I15,IUNIQ,IONE,ININE,I11,MONDSC(IMO),                      HVAC15  42
C    $        QC1,IDC,IHC,TC,WC,QC2,QH1,QH2,TKW1,TKW2                           HVAC15  43
C     ELSE                                                                      HVAC15  44
        WRITE(IREPFL)I19,IUNIQ,IONE,ITHREE,I15,MONDSC(IMO),                     HVAC15  45
     $        QC1,IDC,IHC,TC,WC,QC2,QH1,IDH,IHH,TH,WH,QH2,TKW1,TKW2             HVAC15  46
C     ENDIF                                                                     HVAC15  47
 3080 IUNIQ  = IUNIQ + 1                                                        REPOUT 320
 3090 CONTINUE                                                                  REPOUT 321
C              SS-B                                                             REPOUT 322
      IF(IREPRT(2,17) .EQ. 0)  GOTO 3100                                        IREPRT 173
      IF (IDF.EQ.1) GO TO 3095                                                  REPOUT 324
      QC1    = <QCZMO>*1E-6                                                     REPOUT 325
      QC2    = <QCZMOM>*1E-3                                                    REPOUT 326
      QH1    = <QHZMO>*1E-6                                                     REPOUT 327
      QH2    = <QHZMOM>*1E-3                                                    REPOUT 328
      QH3    = <QHBMO>*1E-6                                                     REPOUT 329
      QH4    = <QHBMOM>*1E-3                                                    REPOUT 330
      QH5    = <QHPMO>*1E-6                                                     REPOUT 331
      QH6    = <QHPMOM>*1E-3                                                    REPOUT 332
      WRITE (IREPFL) I13,IUNIQ,IONE,ITWO,ININE,MONDSC(IMO),                     REPOUT 333
     1               QC1,QC2,QH1,QH2,QH3,QH4,QH5,QH6                            REPOUT 334
 3095 IUNIQ = IUNIQ + 1                                                         REPOUT 335
 3100 CONTINUE                                                                  REPOUT 336
C              SS-C                                                             REPOUT 337
      IF(IREPRT(2,18) .EQ. 0)  GOTO 3200                                        IREPRT 174
      IF (IDF.EQ.1) GO TO 3195                                                  REPOUT 339
      QH1    = <QH-AT-QC>*1E-3                                                  REPOUT 340
      WRITE (IREPFL) I17,IUNIQ,IONE,ITWO,I13,MONDSC(IMO),                       REPOUT 341
     1               <QCHRSMO>,<QHHRSMO>,<QCQHHRSMO>,<FLTHR1MO>,                REPOUT 342
     2               <HEATONMO>,<COOLONMO>,<FANONMO>,<FANCYONMO>,               REPOUT 343
     3               <NTVTHRSMO>,<FLTHR2MO>,                                    REPOUT 344
     4               QH1,<SKW-AT-QC>                                            REPOUT 345
 3195 IUNIQ = IUNIQ + 1                                                         REPOUT 346
 3200 CONTINUE                                                                  REPOUT 347
C              SS-H                                                             REPOUT 348
      IF(IREPRT(2,23) .EQ. 0)  GOTO 3300                                        IREPRT 175
      IF (IDF.EQ.1) GO TO 3295                                                  REPOUT 350
      QH1    = (<SGASMO>+<SOILMO>)*1E-6                                         REPOUT 351
      QH2    = (<SGASMOM>+<SOILMOM>)*1E-3                                       REPOUT 352
      QH3 = <SCGASMO>*1E-6                                                      REPOUT 353
      QH4 = <SCGASMOM>*1E-3                                                     REPOUT 354
      WRITE(IREPFL) I15,IUNIQ,IONE,ITWO,I11,MONDSC(IMO),<FANKWMO>,              REPOUT 355
     1              <FANKWMOM>,QH1,QH2,QH3,QH4,<SKWQHMO>,                       REPOUT 356
     2              <SKWQHMOM>,<SKWQCMO>,<SKWQCMOM>                             REPOUT 357
 3295 IUNIQ = IUNIQ + 1                                                         REPOUT 358
 3300 CONTINUE                                                                  REPOUT 359
C              SS-I                                                             REPOUT 360
      IF(IREPRT(2,24).EQ.0) GO TO 3400                                          IREPRT 176
      IF (IDF.EQ.1) GO TO 3395                                                  REPOUT 362
      QC1    = AMAX1(0.,<QCMO>-<QCLATMO>)*1E-6                                  REPOUT 363
      QC2 = <QCLATMO>*1E-6                                                      REPOUT 364
      QC3 = <QCMOM>*1E-3                                                        REPOUT 365
      QH1    = AMIN1(0.,<QHMO>-<QHLATMO>)*1E-6                                  REPOUT 366
      QH2    = <QHLATMO>*1E-6                                                   REPOUT 367
      QH3    = <QHMOM>*1E-3                                                     REPOUT 368
C              USE SPECIAL FORMAT FOR QCMO EQUAL ZERO                           REPOUT 369
      IF(<QCMO>.EQ.0.0) GO TO 3401                                              REPOUT 370
C              SENSIBLE HEAT RATIO                                              REPOUT 371
      QC4 = (<QCMOM>-<QCLAT-AT-QCMOM>) / (<QCMOM>+0.0001)                       REPOUT 372
      IDC = <IQCDAYHR>/32                                                       REPOUT 373
      IHC = <IQCDAYHR> - IDC*32                                                 REPOUT 374
      WRITE (IREPFL) I14,IUNIQ,IONE,ITWO,ITEN,MONDSC(IMO),                      REPOUT 375
     1               QC1,QC2,QC3,QC4,IDC,IHC,QH1,QH2,QH3                        REPOUT 376
      GO TO 3402                                                                REPOUT 377
 3401 CONTINUE                                                                  REPOUT 378
      WRITE (IREPFL) I11,IUNIQ,IONE,ISIX,ISEVEN,MONDSC(IMO),                    REPOUT 379
     1               QC1,QC2,QC3,QH1,QH2,QH3                                    REPOUT 380
 3402 CONTINUE                                                                  REPOUT 381
 3395 IUNIQ = IUNIQ + 1                                                         REPOUT 382
 3400 CONTINUE                                                                  REPOUT 383
C              SS-J                                                             REPOUT 384
C              NO MONTHLY RECORD -- JUST INCREMENT IUNIQ                        REPOUT 385
      IF(IREPRT(2,25).EQ.0) GO TO 3500                                          IREPRT 177
      IUNIQ = IUNIQ + 2                                                         REPOUT 387
 3500 CONTINUE                                                                  REPOUT 388
      IF(IREPRT(2,26).EQ.0) GOTO 3600                                           IREPRT 178
      IF (IDF .EQ. 1  .or.  IHOURM .EQ. 0) GO TO 3599                           -044d3   2
C              SS-K           TEMPERATURE SUMMAR                                REPOUT 391
C              CALCULATE AVERAGES                                               REPOUT 392
      <TAVMO>=<TAVMO>/FLOAT(IHOURM)                                             REPOUT 393
      IF(<HOURFONMO>.GT.0)<TAVFONMO>=<TAVFONMO>/FLOAT(<HOURFONMO>)              REPOUT 394
      IF(<HOURFOFMO>.GT.0)<TAVFOFMO>=<TAVFOFMO>/FLOAT(<HOURFOFMO>)              REPOUT 395
      <TDIFMO>=<TDIFMO>/FLOAT(IHOURM)                                           REPOUT 396
      IF(<HOURFONMO>.GT.0)<TDIFFONMO>=<TDIFFONMO>/FLOAT(<HOURFONMO>)            REPOUT 397
      IF(<HOURFOFMO>.GT.0)<TDIFFOFMO>=<TDIFFOFMO>/FLOAT(<HOURFOFMO>)            REPOUT 398
      <WDIFMO>=<WDIFMO>/FLOAT(IHOURM)                                           REPOUT 399
      IF (<QCHRSMO>.GT.0) <TAVCLMO>=<TAVCLMO>/FLOAT(<QCHRSMO>)                  REPOUT 400
      IF (<QHHRSMO>.GT.0) <TAVHTMO>=<TAVHTMO>/FLOAT(<QHHRSMO>)                  REPOUT 401
      <TDIFCLMO>=<TDIFCLMO>/24.                                                 REPOUT 402
      <TDIFHTMO>=<TDIFHTMO>/24.                                                 REPOUT 403
      WRITE (IREPFL) I16,IUNIQ,IONE,ITWO,I12,MONDSC(IMO),                       REPOUT 425
     1 <TAVMO>,<TAVCLMO>,<TAVHTMO>,<TAVFONMO>,<TAVFOFMO>,<TDIFMO>,              REPOUT 426
     2 <TDIFFONMO>,<TDIFFOFMO>,<TDIFHTMO>,<TDIFCLMO>,<WDIFMO>                   REPOUT 427
 3599 CONTINUE                                                                  REPOUT 428
      IUNIQ  = IUNIQ+1                                                          REPOUT 429
c              report SS-R is a companion to SS-K                               REPOUT 430
c              no monthly data                                                  REPOUT 431
      IUNIQ = IUNIQ + 1                                                         REPOUT 432
 3600 CONTINUE                                                                  REPOUT 433
      IF(IREPRT(2,27) .EQ. 0) GOTO 3700                                         IREPRT 179
      IF (IDF.EQ.1) GO TO 3695                                                  REPOUT 435
C              SS-L            FAN ELECTRIC REPORT                              REPOUT 436
      WRITE(IREPFL) I21,IUNIQ,IONE,ITWO,I17,                                    REPOUT 437
     1                 MONDSC(IMO),<FANHTKWMO>,<FANCLKWMO>,                     REPOUT 438
     2                 <FANCNKWMO>,<FANFLKWMO>                                  REPOUT 439
     3                ,(<FANPLRMO>,II=1,12)                                     REPOUT 440
 3695 IUNIQ = IUNIQ + 1                                                         REPOUT 441
 3700 CONTINUE                                                                  REPOUT 442
C                SS-N                                                           REPOUT 443
      IF(IREPRT(2,29).NE.0) IUNIQ=IUNIQ+1                                       IREPRT 180
C SPECIAL REPORT REFG, REFRIGERATED EQUIPMENT                                   REPOUT 445
      IF (<REFG-ZONE-ZP1> .EQ. 0)  GOTO 4160                                    REPOUT 446
      IF (IDF.EQ.1) GO TO 4155                                                  REPOUT 447
      DO 4161  IG=1,8                                                           REPOUT 448
 4161 <REFGYR> = <REFGYR> + <REFGMO>                                            REPOUT 449
      WRITE (IREPFL) I13,IUNIQ,IONE,ITWO,ININE,MONDSC(IMO),                     REPOUT 450
     1   (<REFGMO>,IG=1,8)                                                      REPOUT 451
 4155 IUNIQ = IUNIQ + 1                                                         REPOUT 452
 4160 CONTINUE                                                                  REPOUT 453
C              SUPL                                                             REPOUT 454
C              SPECIAL EVAP OR DESC COOLING REPORT                              REPOUT 455
      IF (<EVAPREPPTR>.GT.0 .AND. IDF.EQ.0) THEN                                REPOUT 456
          MR1 = <EVAPREPPTR>                                                    REPOUT 457
          WRITE (IREPFL) I11,IUNIQ,IONE,ITWO,ISEVEN,MONDSC(IMO),                REPOUT 458
     1        <QCEVDSCMO>,<QCSEVDSCMO>,<QCLEVDSCMO>,<EVDSCONMO>,                REPOUT 459
     2        <SKWEVDSCMO>,<SGASEVDSCMO>                                        REPOUT 460
      END IF                                                                    REPOUT 461
      IF (<EVAPREPPTR>.GT.0) IUNIQ=IUNIQ+1                                      REPOUT 462
C              SS-P                                                             REPOUT 463
C              UNIT LOAD, ENERGY USE, AND PART LOAD FOR PACKAGED UNITS          REPOUT 464
      IF (ICODE.EQ.17 .OR. ICODE.EQ.19 .OR. ICODE.EQ.21 .OR. ICODE.EQ.27        REPOUT 465
     $    .OR. ICODE.EQ.28 .OR.                                                 -044e  450
     &   (ICODE.EQ.23 .AND. (<COOL-SOURCE>.EQ.2 .OR.                            -044e  451
     &                <COOL-SOURCE>.EQ.4 .OR. <COOL-SOURCE>.EQ.9))) THEN        -044e  452
c           if SS-H is on, do detail reports                                    REPOUT 467
        IF(IREPRT(2,23).NE.0) THEN                                              IREPRT 181
          IF(IDF .NE. 1)  THEN                                                  REPOUT 469
            ID1 = <IQHDAYHR>/32                                                 REPOUT 470
            IH1 = <IQHDAYHR> - ID1*32                                           REPOUT 471
            ID2 = <SKWQHMOMT>/32                                                REPOUT 472
            IH2 = <SKWQHMOMT> - ID2*32                                          REPOUT 473
            ID3 = <HCMPKWMOMT>/32                                               REPOUT 474
            IH3 = <HCMPKWMOMT> - ID3*32                                         REPOUT 475
            ID4 = <FANKWMOMT>/32                                                REPOUT 476
            IH4 = <FANKWMOMT> - ID4*32                                          REPOUT 477
            WRITE( IREPFL ) I45,IUNIQ,IONE,ITHREE,I41,MONDSC(IMO),              REPOUT 478
     2      <QHMO>,<SKWQHMO>,<HCMPKWMO>,<FANKWMO>,                              REPOUT 479
     3      (<HCMPPLRMO>,II=1,12),                                              REPOUT 480
     4      <QHMOM>,<SKWQHMOM>,<HCMPKWMOM>,<FANKWMOM>,                          REPOUT 481
     3      (<HFANPLRMO>,II=1,12),                                              REPOUT 482
     5      ID1,IH1,ID2,IH2,ID3,IH3,ID4,IH4                                     REPOUT 483
          ENDIF                                                                 REPOUT 484
          IUNIQ  = IUNIQ + 1                                                    REPOUT 485
          IF(IDF .NE. 1)  THEN                                                  REPOUT 486
            ID1 = <IQCDAYHR>/32                                                 REPOUT 487
            IH1 = <IQCDAYHR> - ID1*32                                           REPOUT 488
            ID2 = <SKWQCMOMT>/32                                                REPOUT 489
            IH2 = <SKWQCMOMT> - ID2*32                                          REPOUT 490
            ID3 = <CCMPKWMOMT>/32                                               REPOUT 491
            IH3 = <CCMPKWMOMT> - ID3*32                                         REPOUT 492
            ID4 = <FANKWMOMT>/32                                                REPOUT 493
            IH4 = <FANKWMOMT> - ID4*32                                          REPOUT 494
            WRITE( IREPFL ) I45,IUNIQ,IONE,ITHREE,I41,MONDSC(IMO),              REPOUT 495
     2      <QCMO>,<SKWQCMO>,<CCMPKWMO>,<FANKWMO>,                              REPOUT 496
     3      (<CCMPPLRMO>,II=1,12),                                              REPOUT 497
     4      <QCMOM>,<SKWQCMOM>,<CCMPKWMOM>,<FANKWMOM>,                          REPOUT 498
     3      (<CFANPLRMO>,II=1,12),                                              REPOUT 499
     5      ID1,IH1,ID2,IH2,ID3,IH3,ID4,IH4                                     REPOUT 500
          ENDIF                                                                 REPOUT 501
          IUNIQ  = IUNIQ + 1                                                    REPOUT 502
        ENDIF                                                                   REPOUT 503
      ENDIF                                                                     REPOUT 504
C              SS-Q                                                             REPOUT 505
C              HEAT PUMP SYSTEM SUMMARY                                         REPOUT 506
      IF (<sy;SS-Q> .gt. 0) THEN                                                -047m    3
          IF( IDF .NE. 1)  THEN                                                 REPOUT 510
            WRITE(IREPFL) I15,IUNIQ,IONE,ITWO,I11,MONDSC(IMO),                  REPOUT 511
     1                    (<SHPSMO>,II=1,10)                                    REPOUT 512
          ENDIF                                                                 REPOUT 513
          IUNIQ  = IUNIQ + 1                                                    REPOUT 514
          IF( IDF .NE. 1)  THEN                                                 REPOUT 515
            WRITE(IREPFL) I15,IUNIQ,IONE,ITWO,I11,MONDSC(IMO),                  REPOUT 516
     1                    (<SHPSMO>,II=11,20)                                   REPOUT 517
          ENDIF                                                                 REPOUT 518
          IUNIQ  = IUNIQ + 1                                                    REPOUT 519
C              INCREMENT YEARLY VARS                                            REPOUT 520
        DO 4181 II=1,20                                                         REPOUT 521
 4181   <SHPSYR> = <SHPSYR> + <SHPSMO>                                          REPOUT 522
      ENDIF                                                                     REPOUT 524
      IF (<sy;ERVentilator> .GT. 0)  THEN                                       ERV    336
        CALL ERVentilator(55, <sy;ERVentilator>, xx,xx,xx,xx,xx,xx)             ERV    337
        CALL ERVentilator(45, <sy;ERVentilator>, xx,xx,xx,xx,xx,xx)             ERV    338
        Iuniq = Iuniq + 1                                                       ERV    339
      ENDIF                                                                     ERV    340
 4199 CONTINUE                                                                  REPOUT 525
C              ZONE SUMMARY REPORTS                                             REPOUT 526
      DO 4000 NZ=1,NSZ                                                          REPOUT 527
      ZP1    = ISZ + (NZ-1)*NZD                                                 REPOUT 528
      ZP2 = <ZP2>                                                               REPOUT 529
      IF(<ZONE-REPORTS>.EQ.0)  GOTO 4000                                        REPOUT 530
C              REPORT SS-G                                                      REPOUT 531
      IF(IREPRT(2,22) .EQ. 0)  GOTO 4090                                        IREPRT 183
      IF (IDF.EQ.1) GO TO 4080                                                  REPOUT 533
      QC1    = <ZQCMO>*1E-6                                                     REPOUT 534
      QH1    = <ZQHMO>*1E-6                                                     REPOUT 535
      TKW1   = <ZKWMO>                                                          REPOUT 536
      QH2    = <ZQHMOM>*1E-3                                                    REPOUT 537
      QC2    = <ZQCMOM>*1E-3                                                    REPOUT 538
      TKW2   = <ZKWMOM>                                                         REPOUT 539
      IDH    = <IZQHDAYHR>/32                                                   REPOUT 540
      IHH    = <IZQHDAYHR> - IDH*32                                             REPOUT 541
      IDC    = <IZQCDAYHR>/32                                                   REPOUT 542
      IHC    = <IZQCDAYHR> - IDC*32                                             REPOUT 543
      ITH    = <IZQHDBWBT>/256                                                  REPOUT 544
      IWH    = <IZQHDBWBT> - ITH*256 - 128                                      REPOUT 545
      ITH    = ITH - 128                                                        REPOUT 546
      ITC    = <IZQCDBWBT>/256                                                  REPOUT 547
      IWC    = <IZQCDBWBT> - ITC*256 - 128                                      REPOUT 548
      ITC    = ITC - 128                                                        REPOUT 549
      TH     = ITH                                                              REPOUT 550
      WH     = IWH                                                              REPOUT 551
      TC     = ITC                                                              REPOUT 552
      WC     = IWC                                                              REPOUT 553
C     IF((QC1.EQ.0.0).AND.(QH1 .EQ.0.0)) THEN                                   HVAC15  48
C              IF NO LOADS RECORD                                               HVAC15  49
C       WRITE (IREPFL) I11,IUNIQ,IONE,ITEN,ISEVEN,MONDSC(IMO),                  HVAC15  50
C    $       QC1,QC2,QH1,QH2,TKW1,TKW2                                          HVAC15  51
C     ELSE IF(QC1 .EQ. 0.0)  THEN                                               HVAC15  52
C              IF QC IS ZERO USE SPECIAL FORMAT                                 HVAC15  53
C       WRITE(IREPFL)I15,IUNIQ,IONE,IEIGHT,I11,MONDSC(IMO),QC1,                 HVAC15  54
C    $      QC2,QH1,IDH,IHH,TH,WH,QH2,TKW1,TKW2                                 HVAC15  55
C     ELSE IF(QH1  .EQ. 0.0)  THEN                                              HVAC15  56
C              IF QH IS ZERO USE SPECIAL FORMAT                                 HVAC15  57
C       WRITE(IREPFL)I15,IUNIQ,IONE,ININE,I11,MONDSC(IMO),QC1,                  HVAC15  58
C    $      IDC,IHC,TC,WC,QC2,QH1,QH2,TKW1,TKW2                                 HVAC15  59
C     ELSE                                                                      HVAC15  60
        WRITE(IREPFL)I19,IUNIQ,IONE,ITHREE,I15,MONDSC(IMO),                     HVAC15  61
     $      QC1,IDC,IHC,TC,WC,QC2,QH1,IDH,IHH,TH,WH,QH2,TKW1,TKW2               HVAC15  62
C     ENDIF                                                                     HVAC15  63
 4080 IUNIQ  = IUNIQ + 1                                                        REPOUT 578
 4090 CONTINUE                                                                  REPOUT 579
C              SS-F                                                             REPOUT 580
      IF(IREPRT(2,21) .EQ. 0)  GOTO 4100                                        IREPRT 184
      IF (IDF.EQ.1) GO TO 4095                                                  REPOUT 582
      QC1    = <ZEXMO>*1E-6                                                     REPOUT 583
      QC2    = <ZADMO>*1E-6                                                     REPOUT 584
      QH1    = <ZQHBMO>*1E-6                                                    REPOUT 585
      QH2    = <ZQHBMOM>*1E-3                                                   REPOUT 586
      WRITE (IREPFL) I13,IUNIQ,IONE,ITWO,ININE,MONDSC(IMO),                     REPOUT 587
     1               QC1,QC2,QH1,QH2,<MAXTEMP>,<MINTEMP>,                       REPOUT 588
     2               <NHRSUNDER>,<NHRSOVER>                                     REPOUT 589
 4095 IUNIQ = IUNIQ + 1                                                         REPOUT 590
 4100 CONTINUE                                                                  REPOUT 591
C                 THE FOLLOWING LINE IS A SPACE HOLDER FOR SS-O SINCE           REPOUT 592
C                 THAT REPORT HAS NO MONTHLY RECORDS                            REPOUT 593
      IF(IREPRT(2,30).NE.0) IUNIQ=IUNIQ+1                                       IREPRT 185
      IF(((ICODE.EQ. 6).OR.(ICODE.EQ. 7).OR.(ICODE.EQ. 9).OR.                   -043a  122
     $    (ICODE.EQ.15).OR.(ICODE.EQ.22)).AND.(<ZONE-TYPE>.EQ.1)) THEN          -043a  123
        IF((IREPRT(2,23).NE.0).OR.(IREPRT(2,27).NE.0)) THEN                     IREPRT 186
          IF(IDF .NE. 1)  THEN                                                  REPOUT 597
            ID1 = <IZQHDAYHR>/32                                                REPOUT 598
            IH1 = <IZQHDAYHR> - ID1*32                                          REPOUT 599
            ID2 = <ZKWQHMOMT>/32                                                REPOUT 600
            IH2 = <ZKWQHMOMT> - ID2*32                                          REPOUT 601
            ID3 = <ZHCMPKWMOMT>/32                                              REPOUT 602
            IH3 = <ZHCMPKWMOMT> - ID3*32                                        REPOUT 603
            ID4 = <ZHFANKWMOMT>/32                                              REPOUT 604
            IH4 = <ZHFANKWMOMT> - ID4*32                                        REPOUT 605
            WRITE( IREPFL ) I45,IUNIQ,IONE,ITHREE,I41,MONDSC(IMO),              REPOUT 606
     2      <ZQHMO>,<ZKWQHMO>,<ZHCMPKWMO>,<ZHFANKWMO>,                          REPOUT 607
     3      (<ZHCMPPLRMO>,II=1,12),                                             REPOUT 608
     4      <ZQHMOM>,<ZKWQHMOM>,<ZHCMPKWMOM>,<ZHFANKWMOM>,                      REPOUT 609
     3      (<ZHFANPLRMO>,II=1,12),                                             REPOUT 610
     5      ID1,IH1,ID2,IH2,ID3,IH3,ID4,IH4                                     REPOUT 611
          ENDIF                                                                 REPOUT 612
          IUNIQ  = IUNIQ + 1                                                    REPOUT 613
          IF(IDF .NE. 1)  THEN                                                  REPOUT 614
            ID1 = <IZQCDAYHR>/32                                                REPOUT 615
            IH1 = <IZQCDAYHR> - ID1*32                                          REPOUT 616
            ID2 = <ZKWQCMOMT>/32                                                REPOUT 617
            IH2 = <ZKWQCMOMT> - ID2*32                                          REPOUT 618
            ID3 = <ZCCMPKWMOMT>/32                                              REPOUT 619
            IH3 = <ZCCMPKWMOMT> - ID3*32                                        REPOUT 620
            ID4 = <ZCFANKWMOMT>/32                                              REPOUT 621
            IH4 = <ZCFANKWMOMT> - ID4*32                                        REPOUT 622
            WRITE( IREPFL ) I45,IUNIQ,IONE,ITHREE,I41,MONDSC(IMO),              REPOUT 623
     2      <ZQCMO>,<ZKWQCMO>,<ZCCMPKWMO>,<ZCFANKWMO>,                          REPOUT 624
     3      (<ZCCMPPLRMO>,II=1,12),                                             REPOUT 625
     4      <ZQCMOM>,<ZKWQCMOM>,<ZCCMPKWMOM>,<ZCFANKWMOM>,                      REPOUT 626
     3      (<ZCFANPLRMO>,II=1,12),                                             REPOUT 627
     5      ID1,IH1,ID2,IH2,ID3,IH3,ID4,IH4                                     REPOUT 628
          ENDIF                                                                 REPOUT 629
          IUNIQ  = IUNIQ + 1                                                    REPOUT 630
        ENDIF                                                                   REPOUT 631
      ENDIF                                                                     REPOUT 632
 4000 CONTINUE                                                                  REPOUT 633
      RETURN                                                                    REPOUT 634
C                                                                               REPOUT 635
C              END ALL THE REPORT WRITTEN TO REPORT FILE                        REPOUT 636
C                                                                               REPOUT 637
C              PLANT REPORTS                                                    REPOUT 638
 5000 IF(IRPPLT .EQ. 0)  GOTO 6000                                              REPOUT 639
      IF(<PLANT-REPORTS>.EQ.0)  GOTO 5900                                       REPOUT 642
C              REPORT SS-D                                                      REPOUT 643
      IF(IREPRT(2,19) .EQ. 0)  GOTO 5100                                        IREPRT 187
      IF (IDF.EQ.1) GO TO 5095                                                  REPOUT 645
      QC1    = <QCPLYR>*1E-6                                                    REPOUT 646
      QH1    = <QHPLYR>*1E-6                                                    REPOUT 647
      TKW1   = <PKWYR>                                                          REPOUT 648
      QC2    = <QCPLM>*1E-3                                                     REPOUT 649
      QH2    = <QHPLM>*1E-3                                                     REPOUT 650
      TKW2   = <PKWM>                                                           REPOUT 651
      WRITE (IREPFL) IFOUR,IUNIQ,IONE,IFOUR,IZERO                               REPOUT 652
      WRITE (IREPFL) ISEVEN,IUNIQ,IONE,IFIVE,ITHREE,                            REPOUT 653
     1               QC1,QH1,TKW1                                               REPOUT 654
      WRITE (IREPFL) ISEVEN,IUNIQ,IONE,ISIX,ITHREE,                             REPOUT 655
     1               QC2,QH2,TKW2                                               REPOUT 656
      WRITE (IREPFL) IFIVE,IUNIQ,IONE,I11,IONE,<PQCDAYSUMMAXDD>                 REPOUT 657
      WRITE (IREPFL) IFIVE,IUNIQ,IONE,I12,IONE,<PQCDAYSUMMAX>                   REPOUT 658
      WRITE (IREPFL) ITWO,IUNIQ,ISEVEN                                          REPOUT 659
 5095 IUNIQ = IUNIQ + 1                                                         REPOUT 660
 5100 CONTINUE                                                                  REPOUT 661
C               SS-E                                                            REPOUT 662
      IF(IREPRT(2,20) .EQ. 0)  GOTO 5110                                        IREPRT 188
      IF (IDF.EQ.1) GO TO 5105                                                  REPOUT 664
      WRITE (IREPFL) IFOUR,IUNIQ,IONE,ITHREE,IZERO                              REPOUT 665
      WRITE (IREPFL) I14,IUNIQ,IONE,IFOUR,ITEN,                                 REPOUT 666
     1               <PNHRSQCPL>,<PNHRSQHPL>,<PNHRSQCQHPL>,                     REPOUT 667
     2               <PFLTHR1YR>,<PHEATONYR>,<PCOOLONYR>,<PFANONYR>,            REPOUT 668
     3               <PFANCYONYR>,<PNTVTHRSYR>,<PFLTHR2YR>                      REPOUT 669
      WRITE (IREPFL) ITWO,IUNIQ,ISEVEN                                          REPOUT 670
 5105 IUNIQ = IUNIQ + 1                                                         REPOUT 671
 5110 CONTINUE                                                                  REPOUT 672
      IF(IREPRT(2,28).EQ.0)  GOTO 5897                                          IREPRT 189
      IF (IDF.EQ.1) GO TO 5895                                                  REPOUT 674
C              SS-M     PLANT FAN ELECTRIC REPORT                               REPOUT 675
      WRITE (IREPFL) IFOUR,IUNIQ,IONE,ITHREE,IZERO                              REPOUT 676
      WRITE (IREPFL) IEIGHT,IUNIQ,IONE,IFOUR,IFOUR,                             REPOUT 677
     1     <PLTFANHTKWYR>,<PLTFANCLKWYR>,<PLTFANCNKWYR>,<PLTFANFLKWYR>          REPOUT 678
      WRITE (IREPFL) ITWO,IUNIQ,ISEVEN                                          REPOUT 679
 5895 IUNIQ = IUNIQ + 1                                                         REPOUT 680
 5897 CONTINUE                                                                  REPOUT 681
 5900 CONTINUE                                                                  REPOUT 834
C              SYSTEM REPORTS                                                   REPOUT 835
 6000 IF(IRPSYS+IRPZON+IREPRT(2,16) .EQ. 0)  RETURN                             IREPRT 190
      DO 8000 NS=1,NSYS                                                         REPOUT 837
      NSP    = IS + (NS-1)*NSS                                                  REPOUT 838
      NSZ    = <NZONES>                                                         REPOUT 839
      ISZ    = <ISZONES>                                                        REPOUT 840
      ICODE = <SYSTEM-TYPE>                                                     REPOUT 841
      IF(<SYSTEM-REPORTS>.EQ.0)  GOTO 6999                                      REPOUT 842
C              REPORT SS-A                                                      REPOUT 843
      IF(IREPRT(2,16) .EQ. 0)  GOTO 6100                                        IREPRT 191
      IF (IDF.EQ.1) GO TO 6095                                                  REPOUT 845
      QC1    = <QCYR>*1E-6                                                      REPOUT 846
      QH1    = <QHYR>*1E-6                                                      REPOUT 847
      TKW1   = <SKWYR>                                                          REPOUT 848
      QC2    = <QCYRM>*1E-3                                                     REPOUT 849
      QH2    = <QHYRM>*1E-3                                                     REPOUT 850
      TKW2   = <SKWYRM>                                                         REPOUT 851
      WRITE (IREPFL) IFOUR,IUNIQ,IONE,IFOUR,IZERO                               REPOUT 852
      WRITE (IREPFL) ISEVEN,IUNIQ,IONE,IFIVE,ITHREE,                            REPOUT 853
     1               QC1,QH1,TKW1                                               REPOUT 854
      WRITE (IREPFL) ISEVEN,IUNIQ,IONE,ISIX,ITHREE,                             REPOUT 855
     1               QC2,QH2,TKW2                                               REPOUT 856
      WRITE (IREPFL) ITWO,IUNIQ,ISEVEN                                          REPOUT 857
 6095 IUNIQ = IUNIQ + 1                                                         REPOUT 858
 6100 CONTINUE                                                                  REPOUT 859
C              SS-B                                                             REPOUT 860
      IF(IREPRT(2,17) .EQ. 0)  GOTO 6110                                        IREPRT 192
      IF (IDF.EQ.1) GO TO 6105                                                  REPOUT 862
      QC1    = <QCZYR>*1E-6                                                     REPOUT 863
      QC2    = <QCZYRM>*1E-3                                                    REPOUT 864
      QH1    = <QHZYR>*1E-6                                                     REPOUT 865
      QH2    = <QHZYRM>*1E-3                                                    REPOUT 866
      QH3    = <QHBYR>*1E-6                                                     REPOUT 867
      QH4    = <QHBYRM>*1E-3                                                    REPOUT 868
      QH5    = <QHPYR>*1E-6                                                     REPOUT 869
      QH6    = <QHPYRM>*1E-3                                                    REPOUT 870
      WRITE (IREPFL) IFOUR,IUNIQ,IONE,ITHREE,IZERO                              REPOUT 871
      WRITE (IREPFL) IEIGHT,IUNIQ,IONE,IFOUR,IFOUR,QC1,QH1,QH3,QH5              REPOUT 872
      WRITE (IREPFL) IEIGHT,IUNIQ,IONE,IFIVE,IFOUR,QC2,QH2,QH4,QH6              REPOUT 873
      WRITE (IREPFL) ITWO,IUNIQ,ISEVEN                                          REPOUT 874
 6105 IUNIQ = IUNIQ + 1                                                         REPOUT 875
 6110 CONTINUE                                                                  REPOUT 876
C              SS-C                                                             REPOUT 877
      IF(IREPRT(2,18) .EQ. 0)  GOTO 6120                                        IREPRT 193
      IF (IDF.EQ.1) GO TO 6115                                                  REPOUT 879
      WRITE (IREPFL) IFOUR,IUNIQ,IONE,ITHREE,IZERO                              REPOUT 880
      WRITE (IREPFL) I14,IUNIQ,IONE,IFOUR,ITEN,                                 REPOUT 881
     1               <QCHRSYR>,<QHHRSYR>,<QCQHHRSYR>,<FLTHR1YR>,                REPOUT 882
     2               <HEATONYR>,<COOLONYR>,<FANONYR>,<FANCYONYR>,               REPOUT 883
     3               <NTVTHRSYR>,<FLTHR2YR>                                     REPOUT 884
      WRITE (IREPFL) ITWO,IUNIQ,ISEVEN                                          REPOUT 885
 6115 IUNIQ = IUNIQ + 1                                                         REPOUT 886
 6120 CONTINUE                                                                  REPOUT 887
C              SS-H                                                             REPOUT 888
      IF(IREPRT(2,23) .EQ. 0)  GOTO 6130                                        IREPRT 194
      IF (IDF.EQ.1) GO TO 6125                                                  REPOUT 890
      QH1    = (<SGASYR>+<SOILYR>)*1E-6                                         REPOUT 891
      QH2    = (<SGASYRM>+<SOILYRM>)*1E-3                                       REPOUT 892
      QH3 = <SCGASYR>*1E-6                                                      REPOUT 893
      QH4 = <SCGASYRM>*1E-3                                                     REPOUT 894
      WRITE (IREPFL) IFOUR,IUNIQ,IONE,ITHREE,IZERO                              REPOUT 895
      WRITE(IREPFL) ININE,IUNIQ,IONE,IFOUR,IFIVE,<FANKWYR>,QH1,QH3,             REPOUT 896
     1              <SKWQHYR>,<SKWQCYR>                                         REPOUT 897
      WRITE(IREPFL) ININE,IUNIQ,IONE,IFIVE,IFIVE,<FANKWYRM>,QH2,QH4,            REPOUT 898
     1              <SKWQHYRM>,<SKWQCYRM>                                       REPOUT 899
      WRITE (IREPFL) ITWO,IUNIQ,ISEVEN                                          REPOUT 900
 6125 IUNIQ = IUNIQ + 1                                                         REPOUT 901
 6130 CONTINUE                                                                  REPOUT 902
C              SS-I                                                             REPOUT 903
      IF(IREPRT(2,24).EQ.0) GO TO 6140                                          IREPRT 195
      IF (IDF.EQ.1) GO TO 6135                                                  REPOUT 905
      QC1    = AMAX1(0.,<QCYR>-<QCLATYR>)*1E-6                                  REPOUT 906
      QC2 = <QCLATYR>*1E-6                                                      REPOUT 907
      QC3 = <QCYRM>*1E-3                                                        REPOUT 908
C              SENSIBLE HEAT RATIO FOR PEAK COOLING HOUR                        REPOUT 909
      QC4 = (<QCYRM>-<QCLAT-AT-QCYRM>) / (<QCYRM> + 0.0001)                     REPOUT 910
      QH1    = AMIN1(0.,<QHYR>-<QHLATYR>)*1E-6                                  REPOUT 911
      QH2    = <QHLATYR>*1E-6                                                   REPOUT 912
      QH3    = <QHYRM>*1E-3                                                     REPOUT 913
      WRITE(IREPFL) IFOUR,IUNIQ,IONE,ITHREE,IZERO                               REPOUT 914
      WRITE (IREPFL) IEIGHT,IUNIQ,IONE,IFOUR,IFOUR,QC1,QC2,QH1,QH2              REPOUT 915
      WRITE (IREPFL) ISEVEN,IUNIQ,IONE,IFIVE,ITHREE,QC3,QC4,QH3                 REPOUT 916
      WRITE(IREPFL) ITWO,IUNIQ,ISEVEN                                           REPOUT 917
 6135 IUNIQ = IUNIQ + 1                                                         REPOUT 918
 6140 CONTINUE                                                                  REPOUT 919
C              SS-J                                                             REPOUT 920
      IF(IREPRT(2,25).EQ.0) GO TO 6150                                          IREPRT 196
      MR2 = <SSJREPPTR>                                                         REPOUT 922
C              MONTH AND DAY OF PEAK COOLING AND HEATING DAYS                   REPOUT 923
      IUNIQ = IUNIQ + 1 - IDF                                                   REPOUT 924
      IMC1 = <IQCMODAY>/32                                                      HVAC8    1
      IDC = <IQCMODAY> - IMC1*32                                                HVAC8    2
      IMH = <IQHMODAY>/32                                                       REPOUT 927
      IDH = <IQHMODAY> - IMH*32                                                 REPOUT 928
      IMC2 = <MDCPKDAY>/32                                                      REPOUT 929
      IDC2 = <MDCPKDAY> - IMC2*32                                               REPOUT 930
      WRITE(IREPFL) ITEN,IUNIQ,IONE,IONE,ISIX,MONDSC(IMC1),IDC,                 HVAC8    3
     1              MONDSC(IMH),IDH,MONDSC(IMC2),IDC2                           REPOUT 932
C              HOURLY PROFILES FOR PEAK COOLING AND HEATING DAYS                REPOUT 933
      QC3 = 0.                                                                  REPOUT 934
      QH2 = 0.                                                                  REPOUT 935
      DO 6145 IH=1,24                                                           REPOUT 936
      QC1 = <QCPROFM>*1E-3                                                      REPOUT 937
      QC2 = <SHRPROFM>                                                          REPOUT 938
      QH1 = <QHPROFM>*1E-3                                                      REPOUT 939
C              MAX COOLING AND HEATING FOR THESE DAYS                           REPOUT 940
      QC3 = AMAX1(QC1,QC3)                                                      REPOUT 941
      QH2 = AMIN1(QH1,QH2)                                                      REPOUT 942
      ITEMP = <ITCPROF>/256                                                     REPOUT 943
      IDBTC = ITEMP - 128                                                       REPOUT 944
      IWBTC = <ITCPROF> - 256*ITEMP -128                                        REPOUT 945
      ITEMP = <ITHPROF>/256                                                     REPOUT 946
      IDBTH = ITEMP - 128                                                       REPOUT 947
      IWBTH = <ITHPROF> -256*ITEMP - 128                                        REPOUT 948
      DBTC   = IDBTC                                                            REPOUT 949
      WBTC   = IWBTC                                                            REPOUT 950
      DBTH   = IDBTH                                                            REPOUT 951
      WBTH   = IWBTH                                                            REPOUT 952
      QC4 = <QCPKDAY>*0.001                                                     REPOUT 953
      QC5 = <SHRPKDAY>                                                          REPOUT 954
      QC6 = <QCDAYSUMMAX>*0.001                                                 REPOUT 955
      ITEMP = <ITCPKDAY>/256                                                    REPOUT 956
      IDBTC2 = ITEMP - 128                                                      REPOUT 957
      IWBTC2 = <ITCPKDAY> - 256*ITEMP - 128                                     REPOUT 958
      DBTC2 = FLOAT(IDBTC2)                                                     REPOUT 959
      WBTC2 = FLOAT(IWBTC2)                                                     REPOUT 960
C               CHECK FOR LOADS NOT MET                                         REPOUT 961
      IF (<COOLUNMETFLAGM>.GE.10) THEN                                          REPOUT 962
          ISTAR1 = STAR                                                         REPOUT 963
      ELSE                                                                      REPOUT 964
          ISTAR1 = BLANK                                                        REPOUT 965
      END IF                                                                    REPOUT 966
      IF (MOD(<COOLUNMETFLAGM>,10).EQ.1) THEN                                   REPOUT 967
          ISTAR2 = STAR                                                         REPOUT 968
      ELSE                                                                      REPOUT 969
          ISTAR2 = BLANK                                                        REPOUT 970
      END IF                                                                    REPOUT 971
      WRITE(IREPFL) I18,IUNIQ,IONE,ITWO,I14,IH,QC1,ISTAR1,QC2,DBTC,             REPOUT 972
     1             WBTC,QH1,DBTH,WBTH,QC4,ISTAR2,QC5,DBTC2,WBTC2                REPOUT 973
 6145 CONTINUE                                                                  REPOUT 974
      WRITE(IREPFL) IFOUR,IUNIQ,IONE,ITHREE,IZERO                               REPOUT 975
      WRITE(IREPFL) IFIVE,IUNIQ,IONE,IFIVE,IONE,QC6                             REPOUT 976
      WRITE(IREPFL) ISIX,IUNIQ,IONE,IFOUR,ITWO,QC3,QH2                          REPOUT 977
      IF (<QCYRM> .GT. 0.) THEN                                                 HVAC15  64
        QC1 = <SAREA>/(<QCYRM>*.0000833333)                                     HVAC15  65
      ELSE                                                                      HVAC15  66
        QC1 = <SAREA>                                                           HVAC15  67
      END IF                                                                    HVAC15  68
      QC2 = <QCYRM>/(<SAREA>)                                                   HVAC15  69
      QH1 = <QHYRM>/(<SAREA>)                                                   HVAC15  70
      QC3 = <SUPPLY-CFM>/<SAREA>                                                HVAC15  71
      IF (<SPEOPLE> .GT. 0.) THEN                                               HVAC15  72
        QC4 = <MIN-OUTSIDE-AIR>*<SUPPLY-CFM>/<SPEOPLE>                          HVAC15  73
      ELSE                                                                      HVAC15  74
        QC4 = <MIN-OUTSIDE-AIR>*<SUPPLY-CFM>                                    HVAC15  75
      END IF                                                                    HVAC15  76
      II = <SYSTEM-TYPE>                                                        HVAC15  77
      WRITE(IREPFL) I15,IUNIQ,IONE,ISIX,I11,(IST(I,II),I=1,4),                  HVAC15  78
     $      QC1,QC2,QH1,QC3,QC4,<SPOCM>,<SPOHM>                                 HVAC15  79
      WRITE(IREPFL) ITWO,IUNIQ,ISEVEN                                           REPOUT 993
      IUNIQ = IUNIQ + 1 + IDF                                                   REPOUT 994
 6150 CONTINUE                                                                  REPOUT 995
      IF (IREPRT(2,26) .EQ. 0) GOTO 6175                                        IREPRT 197
      IF (IDF.EQ.1) GO TO 6170                                                  REPOUT 997
      IF (IHOURY .EQ. 0)  GOTO 6169                                             -044d3   3
C              SS-K    TEMPERATURE SUMMARY                                      REPOUT 998
C              CALCULATE AVERAGES                                               REPOUT 999
      <TAVYR>=<TAVYR>/FLOAT(IHOURY)                                             REPOUT1000
      IF(<HOURFONYR>.GT.0)<TAVFONYR>=<TAVFONYR>/FLOAT(<HOURFONYR>)              REPOUT1001
      IF(<HOURFOFYR>.GT.0)<TAVFOFYR>=<TAVFOFYR>/FLOAT(<HOURFOFYR>)              REPOUT1002
      <TDIFYR>=<TDIFYR>/FLOAT(IHOURY)                                           REPOUT1003
      IF(<HOURFONYR>.GT.0)<TDIFFONYR>=<TDIFFONYR>/FLOAT(<HOURFONYR>)            REPOUT1004
      IF(<HOURFOFYR>.GT.0)<TDIFFOFYR>=<TDIFFOFYR>/FLOAT(<HOURFOFYR>)            REPOUT1005
      <WDIFYR>=<WDIFYR>/FLOAT(IHOURY)                                           REPOUT1006
      IF (<QCHRSYR>.GT.0) <TAVCLYR>=<TAVCLYR>/FLOAT(<QCHRSYR>)                  REPOUT1007
      IF (<QHHRSYR>.GT.0) <TAVHTYR>=<TAVHTYR>/FLOAT(<QHHRSYR>)                  REPOUT1008
      <TDIFHTYR>=<TDIFHTYR>/24.                                                 REPOUT1009
      <TDIFCLYR>=<TDIFCLYR>/24.                                                 REPOUT1010
      WRITE (IREPFL) I15,IUNIQ,IONE,ITHREE,I11,                                 REPOUT1011
     1 <TAVYR>,<TAVCLYR>,<TAVHTYR>,<TAVFONYR>,<TAVFOFYR>,<TDIFYR>,              REPOUT1012
     2 <TDIFFONYR>,<TDIFFOFYR>,<TDIFHTYR>,<TDIFCLYR>,<WDIFYR>                   REPOUT1013
 6169 WRITE (IREPFL) ITWO,IUNIQ,ISEVEN                                          -044d3   4
 6170 IUNIQ = IUNIQ +1                                                          REPOUT1015
      IF (IDF.EQ.1) GO TO 6174                                                  REPOUT1016
c              report SS-R is a companion to SS-K                               REPOUT1017
      InducFlag = 0                                                             REPOUT1018
      ID1 = 0                                                                   REPOUT1019
      ID2 = 0                                                                   REPOUT1020
      ID3 = 0                                                                   REPOUT1021
      ID4 = 0                                                                   REPOUT1022
      ZP1 = ISZ                                                                 REPOUT1023
      DO  NZ=1,NSZ                                                              REPOUT1024
        ZP2 = <ZP2>                                                             REPOUT1025
        IF (<ZONE-TYPE> .EQ. 1)  THEN                                           REPOUT1026
          IF (<DDS-TYPE> .EQ. 0)  THEN                                          REPOUT1027
c              single duct systems                                              REPOUT1028
            WRITE (IREPFL) I28,IUNIQ,IONE,ITWO,I24,                             HVAC15  80
     $        (<ZONE-NAME>,II=1,8),<COLDESTZ>,<WARMESTZ>,                       HVAC15  81
     2        <NHRSUNDERYR>,<NHRSOVERYR>,(<CFMPLRZ>,II=1,11),<CFMPLRT>          REPOUT1031
          ELSE                                                                  REPOUT1032
c              dual-duct and multizone systems                                  REPOUT1033
c              cold duct (like above line) then hot line                        HVAC15  82
            WRITE (IREPFL) I40,IUNIQ,IONE,ITHREE,I36,                           HVAC15  83
     $        (<ZONE-NAME>,II=1,8),<COLDESTZ>,<WARMESTZ>,                       HVAC15  84
     $        <NHRSUNDERYR>,<NHRSOVERYR>,(<CFMPLRZ>,II=1,11),<CFMPLRT>,         HVAC15  85
     $          (<CFMPLRZh>,II=1,11),<CFMPLRTh>                                 HVAC15  86
          ENDIF                                                                 REPOUT1041
        ID1 = ID1 + <COLDESTZ>                                                  REPOUT1042
        ID2 = ID2 + <WARMESTZ>                                                  REPOUT1043
        ID3 = ID3 + <NHRSUNDERYR>                                               REPOUT1044
        ID4 = ID4 + <NHRSOVERYR>                                                REPOUT1045
        ENDIF                                                                   REPOUT1046
        ZP1 = ZP1 + NZD                                                         REPOUT1047
      ENDDO                                                                     REPOUT1048
      WRITE (IREPFL) IEIGHT,IUNIQ,IONE,IFIVE,IFOUR,ID1,ID2,ID3,ID4              REPOUT1049
      WRITE (IREPFL) ITWO,IUNIQ,ISEVEN                                          REPOUT1050
 6174 IUNIQ = IUNIQ + 1                                                         REPOUT1051
 6175 CONTINUE                                                                  REPOUT1052
      IF(IREPRT(2,27).EQ.0) GOTO 6200                                           IREPRT 198
      IF (IDF.EQ.1) GO TO 6195                                                  REPOUT1054
C              SS-L   FAN ELECTRIC REPORT                                       REPOUT1055
      WRITE (IREPFL) IFOUR,IUNIQ,IONE,ITHREE,IZERO                              REPOUT1056
      WRITE(IREPFL) I20,IUNIQ,IONE,IFOUR,I16,                                   REPOUT1057
     1               <FANHTKWYR>,<FANCLKWYR>,<FANCNKWYR>,<FANFLKWYR>            REPOUT1058
     3                ,(<FANPLRYR>,II=1,12)                                     REPOUT1059
c              breakdown of annual power consumption by fan type                REPOUT1060
      WRITE(IREPFL) IFOUR,IUNIQ,IONE,IFIVE, IZERO                               REPOUT1061
      IF (<SUPPLY-KW> .GT. 0.)                                                  REPOUT1062
     1  WRITE(IREPFL) ISEVEN,IUNIQ,IONE,ISIX,ITHREE,                            REPOUT1063
     2       (IFAN(I,1),I=1,2),<COLDDECKKWHYR>                                  REPOUT1064
      IF (<HSUPPLY-KW> .GT. 0.)                                                 REPOUT1065
     1  WRITE(IREPFL) ISEVEN,IUNIQ,IONE,ISIX,ITHREE,                            REPOUT1066
     2       (IFAN(I,2),I=1,2),<HOTDECKKWHYR>                                   REPOUT1067
      IF (<RETURN-KW> .GT. 0.)  THEN                                            REPOUT1068
        IFT = 3                                                                 REPOUT1069
        IF (<RETURN-FAN-LOC> .EQ. 3)  IFT = 4                                   REPOUT1070
        WRITE(IREPFL) ISEVEN,IUNIQ,IONE,ISIX,ITHREE,                            REPOUT1071
     1       (IFAN(I,IFT),I=1,2),<RETURNKWHYR>                                  REPOUT1072
      ENDIF                                                                     REPOUT1073
      WRITE(IREPFL) IFIVE,IUNIQ,IONE,ISEVEN,IONE,                               REPOUT1074
     1     (<COLDDECKKWHYR>+<HOTDECKKWHYR>+<RETURNKWHYR>)                       REPOUT1075
      WRITE (IREPFL) ITWO,IUNIQ,ISEVEN                                          REPOUT1076
 6195 IUNIQ = IUNIQ + 1                                                         REPOUT1077
 6200 CONTINUE                                                                  REPOUT1078
      IF(IREPRT(2,29).EQ.0) GOTO 6300                                           IREPRT 199
      IF (IDF.EQ.1) GO TO 6295                                                  REPOUT1080
C                       SS-N                                                    REPOUT1081
      DO 6250 J=1,10                                                            REPOUT1082
      I      = 11-J                                                             REPOUT1083
      I31    = 31                                                               REPOUT1084
      WRITE (IREPFL) I31,IUNIQ,IONE,ITWO,I27,IBINRH(1,J),IBINRH(2,J),           REPOUT1085
     1    (<IRHA>,II=I,275,11)                                                  REPOUT1086
 6250 CONTINUE                                                                  REPOUT1087
      WRITE (IREPFL) IFOUR,IUNIQ,IONE,ITHREE,IZERO                              REPOUT1088
      WRITE (IREPFL) IFOUR,IUNIQ,IONE,IFOUR,IZERO                               REPOUT1089
      WRITE (IREPFL) IFOUR,IUNIQ,IONE,IFIVE,IZERO                               REPOUT1090
      WRITE (IREPFL) IFOUR,IUNIQ,IONE,ISIX,IZERO                                REPOUT1091
      WRITE (IREPFL) IFOUR,IUNIQ,IONE,IFIVE,IZERO                               REPOUT1092
      WRITE (IREPFL) IFOUR,IUNIQ,IONE,IFOUR,IZERO                               REPOUT1093
      WRITE (IREPFL) ITWO,IUNIQ,ISEVEN                                          REPOUT1094
 6295 IUNIQ = IUNIQ + 1                                                         REPOUT1095
 6300 CONTINUE                                                                  REPOUT1096
C SPECIAL REPORT REFG, REFRIGERATED EQUIPMENT                                   REPOUT1097
      IF (<REFG-ZONE-ZP1> .EQ. 0)  GOTO 6350                                    REPOUT1098
      IF (IDF.EQ.1) GO TO 6348                                                  REPOUT1099
      ZP1 = <REFG-ZONE-ZP1>                                                     REPOUT1100
      ZP2 = <ZP2>                                                               REPOUT1101
      IE = <NUM-REFG-EQUIP>                                                     REPOUT1102
      IG = IEIGHT                                                               REPOUT1103
      WRITE (IREPFL) I12,IUNIQ,IONE,ITHREE,IEIGHT,(<REFGYR>,IG=1,8)             REPOUT1104
      DO 6349  IG=1,IE                                                          REPOUT1105
 6349 IF (<REFGHRSOVLD> .GT. 0)                                                 REPOUT1106
     1   WRITE (IREPFL) ISIX,IUNIQ,IONE,IFOUR,ITWO,IG,<REFGHRSOVLD>             REPOUT1107
      WRITE (IREPFL) ITWO,IUNIQ,ISEVEN                                          REPOUT1108
 6348 IUNIQ = IUNIQ + 1                                                         REPOUT1109
 6350 CONTINUE                                                                  REPOUT1110
C              SUPL                                                             REPOUT1111
C              SPECIAL EVAP OR DESC COOLING REPORT                              REPOUT1112
      IF (<EVAPREPPTR>.GT.0 .AND. IDF.EQ.0) THEN                                REPOUT1113
          MR1 = <EVAPREPPTR>                                                    REPOUT1114
          WRITE (IREPFL) IFOUR,IUNIQ,IONE,ITHREE,IZERO                          REPOUT1115
          WRITE (IREPFL) ITEN,IUNIQ,IONE,IFOUR,ISIX,<QCEVDSCYR>,                REPOUT1116
     1        <QCSEVDSCYR>,<QCLEVDSCYR>,<EVDSCONYR>,<SKWEVDSCYR>,               REPOUT1117
     2        <SGASEVDSCYR>                                                     REPOUT1118
          WRITE (IREPFL) ITWO,IUNIQ,ISEVEN                                      REPOUT1119
      END IF                                                                    REPOUT1120
      IF (<EVAPREPPTR>.GT.0) IUNIQ=IUNIQ+1                                      REPOUT1121
C              SS-P                                                             REPOUT1122
C              UNIT LOAD, ENERGY USE, AND PART LOAD FOR PACKAGED UNITS          REPOUT1123
      IF (ICODE.EQ.17 .OR. ICODE.EQ.19 .OR. ICODE.EQ.21 .OR. ICODE.EQ.27        REPOUT1124
     $    .OR. ICODE.EQ.28 .OR.                                                 -044e  453
     &   (ICODE.EQ.23 .AND. (<COOL-SOURCE>.EQ.2 .OR.                            -044e  454
     &                <COOL-SOURCE>.EQ.4 .OR. <COOL-SOURCE>.EQ.9))) THEN        -044e  455
c           if SS-H is on, do detail reports                                    REPOUT1126
        IF(IREPRT(2,23).NE.0) THEN                                              IREPRT 200
          IF(IDF .NE. 1)  THEN                                                  REPOUT1128
            ID1 = <IQHDAYHRYR>/32                                               REPOUT1129
            IH1 = <IQHDAYHRYR> - ID1*32                                         REPOUT1130
            ID2 = <SKWQHYRMT>/32                                                REPOUT1131
            IH2 = <SKWQHYRMT> - ID2*32                                          REPOUT1132
            ID3 = <HCMPKWYRMT>/32                                               REPOUT1133
            IH3 = <HCMPKWYRMT> - ID3*32                                         REPOUT1134
            ID4 = <FANKWYRMT>/32                                                REPOUT1135
            IH4 = <FANKWYRMT> - ID4*32                                          REPOUT1136
            WRITE( IREPFL ) I45,IUNIQ,IONE,IFOUR,I41,IHYR,                      REPOUT1137
     2      <QHYR>,<SKWQHYR>,<HCMPKWYR>,<FANKWYR>,                              REPOUT1138
     3      (<HCMPPLRYR>,II=1,12),                                              REPOUT1139
     4      <QHYRM>,<SKWQHYRM>,<HCMPKWYRM>,<FANKWYRM>,                          REPOUT1140
     3      (<HFANPLRYR>,II=1,12),                                              REPOUT1141
     5      ID1,IH1,ID2,IH2,ID3,IH3,ID4,IH4                                     REPOUT1142
            WRITE( IREPFL ) ITWO,IUNIQ,ISEVEN                                   REPOUT1143
          ENDIF                                                                 REPOUT1144
          IUNIQ  = IUNIQ + 1                                                    REPOUT1145
          IF(IDF .NE. 1)  THEN                                                  REPOUT1146
            ID1 = <IQCDAYHRYR>/32                                               REPOUT1147
            IH1 = <IQCDAYHRYR> - ID1*32                                         REPOUT1148
            ID2 = <SKWQCYRMT>/32                                                REPOUT1149
            IH2 = <SKWQCYRMT> - ID2*32                                          REPOUT1150
            ID3 = <CCMPKWYRMT>/32                                               REPOUT1151
            IH3 = <CCMPKWYRMT> - ID3*32                                         REPOUT1152
            ID4 = <FANKWYRMT>/32                                                REPOUT1153
            IH4 = <FANKWYRMT> - ID4*32                                          REPOUT1154
            WRITE( IREPFL ) I45,IUNIQ,IONE,IFOUR,I41,IHYR,                      REPOUT1155
     2      <QCYR>,<SKWQCYR>,<CCMPKWYR>,<FANKWYR>,                              REPOUT1156
     3      (<CCMPPLRYR>,II=1,12),                                              REPOUT1157
     4      <QCYRM>,<SKWQCYRM>,<CCMPKWYRM>,<FANKWYRM>,                          REPOUT1158
     3      (<CFANPLRYR>,II=1,12),                                              REPOUT1159
     5      ID1,IH1,ID2,IH2,ID3,IH3,ID4,IH4                                     REPOUT1160
            WRITE( IREPFL ) ITWO,IUNIQ,ISEVEN                                   REPOUT1161
          ENDIF                                                                 REPOUT1162
          IUNIQ  = IUNIQ + 1                                                    REPOUT1163
        ENDIF                                                                   REPOUT1164
      ENDIF                                                                     REPOUT1165
C              SS-Q                                                             REPOUT1166
C              HEAT PUMP SYSTEM SUMMARY                                         REPOUT1167
      IF (<sy;SS-Q> .gt. 0) THEN                                                -047m    4
          IF(IDF .NE. 1) THEN                                                   REPOUT1171
            X  =  <SHPSQCFANYR> + <SHPSQCAUXYR> + 0.001                         REPOUT1172
            QC2= (<SHPSQCLOADYR>+<SHPSQCGSLDYR>-<SHPPQCWASUYR>)                 REPOUT1173
     $          /(<SHPSQCGASYR> +<SHPSQCGSUPYR> + 0.001)                        REPOUT1174
            QC1= (<SHPSQCLOADYR>+<SHPSQCGSLDYR>-<SHPPQCWASUYR>)                 REPOUT1175
     $          /(<SHPSQCGASYR> +<SHPSQCGSUPYR>+ X)                             REPOUT1176
            X  =  <SHPSQHFANYR> + <SHPSQHAUXYR> + 0.001                         REPOUT1177
            Y  =-(<SHPSQHLOADYR>+<SHPSQHGSLDYR>-<SHPSQHGDFRYR>)                 REPOUT1178
            QH2=Y/(<SHPSQHGASYR> +<SHPSQHGSUPYR> + 0.001)                       REPOUT1179
            QH1= (Y+<SHPSQHFANYR>)                                              REPOUT1180
     $          /(<SHPSQHGASYR> +<SHPSQHGSUPYR>+ X)                             REPOUT1181
            WRITE(IREPFL) I16,IUNIQ,IONE,ITHREE,I12,                            REPOUT1182
     1                    (<SHPSYR>,II=1,10),QC1,QC2                            REPOUT1183
            WRITE(IREPFL) ITWO,IUNIQ,ISEVEN                                     REPOUT1184
          ENDIF                                                                 REPOUT1185
          IUNIQ  = IUNIQ + 1                                                    REPOUT1186
          IF(IDF .NE. 1) THEN                                                   REPOUT1187
            WRITE(IREPFL) I16,IUNIQ,IONE,ITHREE,I12,                            REPOUT1188
     1                    (<SHPSYR>,II=11,20),QH1,QH2                           REPOUT1189
            WRITE(IREPFL) ITWO,IUNIQ,ISEVEN                                     REPOUT1190
          ENDIF                                                                 REPOUT1191
          IUNIQ  = IUNIQ + 1                                                    REPOUT1192
      ENDIF                                                                     REPOUT1194
      IF (<sy;ERVentilator> .GT. 0)  THEN                                       ERV    341
        CALL ERVentilator(57, <sy;ERVentilator>, xx,xx,xx,xx,xx,xx)             ERV    342
        Iuniq = Iuniq + 1                                                       ERV    343
      ENDIF                                                                     ERV    344
 6999 CONTINUE                                                                  REPOUT1195
C              ZONE REPORTS                                                     REPOUT1196
      DO 8000 NZ=1,NSZ                                                          REPOUT1197
      ZP1    = ISZ + (NZ-1)*NZD                                                 REPOUT1198
      ZP2 = <ZP2>                                                               REPOUT1199
      IF(<ZONE-REPORTS>.EQ.0)  GOTO 8000                                        REPOUT1200
C              REPORT SS-G                                                      REPOUT1201
      IF(IREPRT(2,22) .EQ. 0)  GOTO 8100                                        IREPRT 202
      IF (IDF.EQ.1) GO TO 8095                                                  REPOUT1203
      QC1    = <ZQCYR>*1E-6                                                     REPOUT1204
      QH1    = <ZQHYR>*1E-6                                                     REPOUT1205
      TKW1   = <ZKWYR>                                                          REPOUT1206
      QC2    = <ZQCYRM>*1E-3                                                    REPOUT1207
      QH2    = <ZQHYRM>*1E-3                                                    REPOUT1208
      TKW2   = <ZKWYRM>                                                         REPOUT1209
      WRITE (IREPFL) IFOUR,IUNIQ,IONE,IFOUR,IZERO                               REPOUT1210
      WRITE (IREPFL) ISEVEN,IUNIQ,IONE,IFIVE,ITHREE,                            REPOUT1211
     1               QC1,QH1,TKW1                                               REPOUT1212
      WRITE (IREPFL) ISEVEN,IUNIQ,IONE,ISIX,ITHREE,                             REPOUT1213
     1               QC2,QH2,TKW2                                               REPOUT1214
      WRITE (IREPFL) ITWO,IUNIQ,ISEVEN                                          REPOUT1215
 8095 IUNIQ = IUNIQ + 1                                                         REPOUT1216
 8100 CONTINUE                                                                  REPOUT1217
C              SS-F                                                             REPOUT1218
      IF(IREPRT(2,21) .EQ. 0)  GOTO 8110                                        IREPRT 203
      IF (IDF.EQ.1) GO TO 8105                                                  REPOUT1220
      WRITE (IREPFL) ITWO,IUNIQ,ISEVEN                                          REPOUT1221
 8105 IUNIQ = IUNIQ + 1                                                         REPOUT1222
 8110 CONTINUE                                                                  REPOUT1223
C                       SS-O                                                    REPOUT1224
      IF (IREPRT(2,30).EQ.0) GOTO 6400                                          IREPRT 204
      IF (IDF.EQ.1) GO TO 6395                                                  REPOUT1226
      IMET   = 2                                                                REPOUT1227
      IF (MTRICR.NE.1) IMET=1                                                   REPOUT1228
C     PICK OFF THE RIGHT TEMPERATURE BIN TITLES FOR METRIC OR ENGLISH           REPOUT1229
      DO 6270 J=1,7                                                             REPOUT1230
      I      = 8-J                                                              REPOUT1231
      I32    = 32                                                               REPOUT1232
      WRITE (IREPFL) I32,IUNIQ,IONE,ITWO,I28,IBINTP(1,J,IMET),                  REPOUT1233
     1 IBINTP(2,J,IMET),IBINTP(3,J,IMET),(<ITPA>,II=I,200,8)                    REPOUT1234
 6270 CONTINUE                                                                  REPOUT1235
      WRITE (IREPFL) IFOUR,IUNIQ,IONE,ITHREE,IZERO                              REPOUT1236
      WRITE (IREPFL) IFOUR,IUNIQ,IONE,IFOUR,IZERO                               REPOUT1237
      WRITE (IREPFL) IFOUR,IUNIQ,IONE,IFIVE,IZERO                               REPOUT1238
      WRITE (IREPFL) IFOUR,IUNIQ,IONE,ISIX,IZERO                                REPOUT1239
      WRITE (IREPFL) IFOUR,IUNIQ,IONE,IFIVE,IZERO                               REPOUT1240
      WRITE (IREPFL) IFOUR,IUNIQ,IONE,IFOUR,IZERO                               REPOUT1241
      WRITE (IREPFL) ITWO,IUNIQ,ISEVEN                                          REPOUT1242
 6395 IUNIQ = IUNIQ + 1                                                         REPOUT1243
 6400 CONTINUE                                                                  REPOUT1244
      IF(((ICODE.EQ. 6).OR.(ICODE.EQ. 7).OR.(ICODE.EQ. 9).OR.                   -043a  124
     $    (ICODE.EQ.15).OR.(ICODE.EQ.22)).AND.(<ZONE-TYPE>.EQ.1)) THEN          -043a  125
        IF((IREPRT(2,23).NE.0).OR.(IREPRT(2,27).NE.0)) THEN                     IREPRT 205
          IF(IDF .NE. 1)  THEN                                                  REPOUT1247
            ID1 = <IZQHDAYHRYR>/32                                              REPOUT1248
            IH1 = <IZQHDAYHRYR> - ID1*32                                        REPOUT1249
            ID2 = <ZKWQHYRMT>/32                                                REPOUT1250
            IH2 = <ZKWQHYRMT> - ID2*32                                          REPOUT1251
            ID3 = <ZHCMPKWYRMT>/32                                              REPOUT1252
            IH3 = <ZHCMPKWYRMT> - ID3*32                                        REPOUT1253
            ID4 = <ZHFANKWYRMT>/32                                              REPOUT1254
            IH4 = <ZHFANKWYRMT> - ID4*32                                        REPOUT1255
            WRITE( IREPFL ) I45,IUNIQ,IONE,IFOUR,I41,IHYR,                      REPOUT1256
     2      <ZQHYR>,<ZKWQHYR>,<ZHCMPKWYR>,<ZHFANKWYR>,                          REPOUT1257
     3      (<ZHCMPPLRYR>,II=1,12),                                             REPOUT1258
     4      <ZQHYRM>,<ZKWQHYRM>,<ZHCMPKWYRM>,<ZHFANKWYRM>,                      REPOUT1259
     3      (<ZHFANPLRYR>,II=1,12),                                             REPOUT1260
     5      ID1,IH1,ID2,IH2,ID3,IH3,ID4,IH4                                     REPOUT1261
            WRITE( IREPFL ) ITWO,IUNIQ,ISEVEN                                   REPOUT1262
          ENDIF                                                                 REPOUT1263
          IUNIQ  = IUNIQ + 1                                                    REPOUT1264
          IF(IDF .NE. 1)  THEN                                                  REPOUT1265
            ID1 = <IZQCDAYHRYR>/32                                              REPOUT1266
            IH1 = <IZQCDAYHRYR> - ID1*32                                        REPOUT1267
            ID2 = <ZKWQCYRMT>/32                                                REPOUT1268
            IH2 = <ZKWQCYRMT> - ID2*32                                          REPOUT1269
            ID3 = <ZCCMPKWYRMT>/32                                              REPOUT1270
            IH3 = <ZCCMPKWYRMT> - ID3*32                                        REPOUT1271
            ID4 = <ZCFANKWYRMT>/32                                              REPOUT1272
            IH4 = <ZCFANKWYRMT> - ID4*32                                        REPOUT1273
            WRITE( IREPFL ) I45,IUNIQ,IONE,IFOUR,I41,IHYR,                      REPOUT1274
     2      <ZQCYR>,<ZKWQCYR>,<ZCCMPKWYR>,<ZCFANKWYR>,                          REPOUT1275
     3      (<ZCCMPPLRYR>,II=1,12),                                             REPOUT1276
     4      <ZQCYRM>,<ZKWQCYRM>,<ZCCMPKWYRM>,<ZCFANKWYRM>,                      REPOUT1277
     3      (<ZCFANPLRYR>,II=1,12),                                             REPOUT1278
     5      ID1,IH1,ID2,IH2,ID3,IH3,ID4,IH4                                     REPOUT1279
            WRITE( IREPFL ) ITWO,IUNIQ,ISEVEN                                   REPOUT1280
          ENDIF                                                                 REPOUT1281
          IUNIQ  = IUNIQ + 1                                                    REPOUT1282
        ENDIF                                                                   REPOUT1283
      ENDIF                                                                     REPOUT1284
 8000 CONTINUE                                                                  REPOUT1285
      RETURN                                                                    REPOUT1286
      END                                                                       REPOUT1287
      SUBROUTINE REPSSP                                                         REPSSP   2
C                                                                               REPSSP   3
C             This Routine is called hourly to save data for the SS-P REPORT    REPSSP   4
C                                                                               REPSSP   5
C              DEVELOPED BY                                                     -130     1
C                            J. J. Hirsch & S. D. Gates                         -130     2
C                            James J. Hirsch & Associates                       -130     3
C                            Camarillo, California                              -130     4
C              BASED UPON CODE DEVELOPED BY J. J. Hirsch and                    -130     5
C                            W. F. Buhl                                         -130     6
C                            A. E. Erdem                                        -130     7
C                            Lawrence Berkeley National Laboratory              -130     8
C                            University of California                           -130     9
Copyright (c) 1997 by James J. Hirsch. All Rights Reserved. Unpublished         -130    10
c rights reserved under the Copyright Laws of the United States.                -130    11
c RESTRICTED RIGHTS NOTICE: Government use, reproduction or disclosure          -130    12
c is subject to restrictions as set forth in Rights in Data (g)(3) in           -130    13
c UC/LBL purchase order 4607010 with J.J. Hirsch & Associates.                  -130    14
C                                                                               REPSSP   7
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      COMMON  /REPORT/ IREPRT(4,37),IPRG,IUNIQV(100),IUNIQS(100),IUNIQL         HVAC14   4
      COMMON  /SYSTD / TH,TC,TM,TR,QH,QC,QHZ,QCZ,QHB,QHP,QHUM,                  /SYSTD/  2
     1                 QDHUM,TCMIN,THMAX,QLSUM,QPSUM,CFM,CFMH,CFMC,             /SYSTD/  3
     2                 RCFM,ECFM,CINF,FON,HON,CON,BON,SCONS(3),PH,PC,           /SYSTD/  4
     3                 SKW,FANKW,unused1,WR,WM,WCOIL,WW,PO,D,                   -046f    1
     4                 FTEMP,TCR,QHR,RfanPumpKW,SGAS,SKWQH,SKWQC,QCLAT,         -131    23
     5                 SFKW,RFKW,FONNGT,WSURF,RWalkinQ,TSURF,TRh,               -131    24
     6                 CBF,CBF1,CBF2,EON,PLRCFM,PLRC,PLRH,QCM1,                 /SYSTD/  8
     7                 QCM2,QHM1,EIRM1,EIRM2,EIR,OFKW,QCT,QCS,                  /SYSTD/  9
     8                 WRMAX,WRMIN,CFMRAT,QdistG,QdistL,RON,QHT,                /SYSTD/ 10
     9                 TPOMIN,POMIN,QHSUP,QRSENS,QRLAT,QRREC,QRREJ,             /SYSTD/ 11
     1                 RCOMKW,RDEFKW,RAUXKW,ECFMP,CFMIN,CINFP,DT,DW,            /SYSTD/ 12
     2                 EWB,IC,NATTSP,Q,RETR,SLOAD,QLSUMP,T,TCHUM,TEND,          /SYSTD/ 13
     3                 TS,hgbmin,HPDefE,EconoOnly,TDuctEnv,                     -044e1   1
     4                 QCUNMT,CapRh,CapRph,CapRc                                HVAC25   3
      REAL             SYSTD(113)                                               HVAC19  13
      EQUIVALENCE      (SYSTD(1),TH)                                            RemPA   65
      COMMON /SSPDAT/  PLRCS,QCCKWS,QCCMPS,PLRHS,QHCKWS,QHCMPS                  /SSPDAT/ 2
     $                ,PLRFS,PLRFCS,PLRFHS,sspss                                /SSPDAT/ 3
     $                ,PLRCZ,QCCKWZ,QCCMPZ,PLRHZ,QHCKWZ,QHCMPZ                  /SSPDAT/ 4
     $                ,PLRFZ,PLRFCZ,PLRFHZ,sspsz                                /SSPDAT/ 5
     $                ,ISSPF,IWCCF,IPCCF,SSPSAV                                 /SSPDAT/ 6
      DIMENSION        SSPD(24)                                                 JJHfix   1
      EQUIVALENCE      (SSPD(1),PLRCS)                                          /SSPDAT/ 8
      COMMON  /TIME  / IDOY, IYR, IMO, IDAY, IHR,                               Time     4
     &                 ISCMO, ISCDAY, ISCHR, IDOW, ISCDOW, iDSdates(6),         -044e5   1
     &                 iTimeFlg, iDSFlg, iDDFlg, InitialFlg, LeapYr,            Time     6
     &                 CLOCK(10), MONDSC(13), MONLEN(12), MONSDA(12)            HR      12
C                                                                               REPSSP  14
      INDXPL(part,full)=                                                        INDXPL   2
     $      MAX(1,MIN(11,INT(ABS(part)/AMAX1(1E-6,ABS(full))*10.)+1))           INDXPL   3
C                                                                               REPSSP  16
      IF( CFM .GT. 0.)  THEN                                                    REPSSP  17
      DO 121 I=1,2                                                              REPSSP  18
        IF(I .EQ. 1)  THEN                                                      REPSSP  19
          II = 11                                                               REPSSP  20
          IF( CFM .NE. <SUPPLY-CFM>)  II = INDXPL( CFM, <SUPPLY-CFM> )          REPSSP  21
        ELSE                                                                    REPSSP  22
          II = 12                                                               REPSSP  23
        ENDIF                                                                   REPSSP  24
        <FANPLRMO> = <FANPLRMO> + 1                                             REPSSP  25
        <FANPLRYR> = <FANPLRYR> + 1                                             REPSSP  26
        IF(IREPRT(2,23) .eq. 0)  GOTO 121                                       IREPRT 206
        IF( QH .LT. 0. )  THEN                                                  REPSSP  28
          <HFANPLRMO> = <HFANPLRMO> + 1                                         REPSSP  29
          <HFANPLRYR> = <HFANPLRYR> + 1                                         REPSSP  30
        ENDIF                                                                   REPSSP  31
        IF( QC .GT. 0. )  THEN                                                  REPSSP  32
          <CFANPLRMO> = <CFANPLRMO> + 1                                         REPSSP  33
          <CFANPLRYR> = <CFANPLRYR> + 1                                         REPSSP  34
        ENDIF                                                                   REPSSP  35
  121 CONTINUE                                                                  REPSSP  36
      ENDIF                                                                     REPSSP  37
      IF(IREPRT(2,23) .NE. 0)  THEN                                             IREPRT 207
      IF( PLRCS .GT. 0. )  THEN                                                 REPSSP  39
        II = INDXPL( PLRCS, 1. )                                                REPSSP  40
        <CCMPPLRMO> = <CCMPPLRMO> + 1                                           REPSSP  41
        <CCMPPLRYR> = <CCMPPLRYR> + 1                                           REPSSP  42
        II = 12                                                                 REPSSP  43
        <CCMPPLRMO> = <CCMPPLRMO> + 1                                           REPSSP  44
        <CCMPPLRYR> = <CCMPPLRYR> + 1                                           REPSSP  45
        <CCMPKWMO>  = <CCMPKWMO> + QCCKWS                                       REPSSP  46
        <CCMPKWYR>  = <CCMPKWYR> + QCCKWS                                       REPSSP  47
        <CCMPKWMOM>  = AMAX1(<CCMPKWMOM>,QCCKWS)                                REPSSP  48
        IF(<CCMPKWMOM>.EQ.QCCKWS)  <CCMPKWMOMT> = IDAYHR                        REPSSP  49
        <CCMPKWYRM>  = AMAX1(<CCMPKWYRM>,QCCKWS)                                REPSSP  50
        IF(<CCMPKWYRM>.EQ.QCCKWS)  <CCMPKWYRMT> = IMO*32 + IDAY                 REPSSP  51
      ENDIF                                                                     REPSSP  52
      IF( PLRHS .GT. 0. )  THEN                                                 REPSSP  53
        II = INDXPL( PLRHS, 1. )                                                REPSSP  54
        <HCMPPLRMO> = <HCMPPLRMO> + 1                                           REPSSP  55
        <HCMPPLRYR> = <HCMPPLRYR> + 1                                           REPSSP  56
        II = 12                                                                 REPSSP  57
        <HCMPPLRMO> = <HCMPPLRMO> + 1                                           REPSSP  58
        <HCMPPLRYR> = <HCMPPLRYR> + 1                                           REPSSP  59
        <HCMPKWMO>  = <HCMPKWMO> + QHCKWS                                       REPSSP  60
        <HCMPKWYR>  = <HCMPKWYR> + QHCKWS                                       REPSSP  61
        <HCMPKWMOM>  = AMAX1(<HCMPKWMOM>,QHCKWS)                                REPSSP  62
        IF(<HCMPKWMOM>.EQ.QHCKWS)  <HCMPKWMOMT> = IDAYHR                        REPSSP  63
        <HCMPKWYRM>  = AMAX1(<HCMPKWYRM>,QHCKWS)                                REPSSP  64
        IF(<HCMPKWYRM>.EQ.QHCKWS)  <HCMPKWYRMT> = IMO*32 + IDAY                 REPSSP  65
      ENDIF                                                                     REPSSP  66
      ENDIF                                                                     REPSSP  67
      RETURN                                                                    REPSSP  68
      END                                                                       REPSSP  69
      FUNCTION RHFUNC(TEMP,W,PRESS)                                             RHFUNC   2
C                                                                               RHFUNC   3
C     THIS FUNCATION CALCULATE THE RELATIVE HUMIDITY AS A FUNCTION              RHFUNC   4
C     OF THE DRYBULB TEMPERATURE (TEMP), THE HUMIDITY RATIO (W), AND            RHFUNC   5
C              THE BARAMETRIC PRESSURE.                                         RHFUNC   6
C              DERIVED FROM FUNCTION WFUNC, PPWVMS CONTANS THE PARTIAL          RHFUNC   7
C     PRESSURE OF WATER VAPOR FOR SATURATED AIR IN THE TEMP RANGE               RHFUNC   8
C              FROM -50 TO 149 DEGREES F DRYBULB.                               RHFUNC   9
      COMMON  /PPWVMS/ PPWVMS(200)                                              /PPWVMS/ 2
C              GET LOWER ARRAY INDEX                                            RHFUNC  11
      TTEMP  = AMAX1(-50.0,AMIN1(148.0,TEMP))                                   RHFUNC  12
      IT     = INT(TTEMP)                                                       RHFUNC  13
C              GET DISTANCE TO ACTUAL POINT                                     RHFUNC  14
      DT     = TTEMP-FLOAT(IT)                                                  RHFUNC  15
C              CALCULATE VAPOR PRESSURE AT SATURATION                           RHFUNC  16
      PPW    = PPWVMS(IT+51)+DT*(PPWVMS(IT+52)-PPWVMS(IT+51))                   RHFUNC  17
C              CALCULATE RELATIVE HUMIDITY                                      RHFUNC  18
      RHFUNC = (W*PRESS)/(.01*PPW*(.622+W))                                     RHFUNC  19
      RHFUNC = AMIN1(100.,RHFUNC)                                               RHFUNC  20
      RHFUNC = AMAX1(0.,RHFUNC)                                                 RHFUNC  21
      RETURN                                                                    RHFUNC  22
      END                                                                       RHFUNC  23
      SUBROUTINE RESVVT                                                         RESVVT   2
C                                                                               RESVVT   3
C              SIMULATE THE RESVVT SYSTEM.  THIS SYSTEM IS A RESIDENTIAL        RESVVT   4
C              FORCED AIR SINGLE DUCT HEATING AND COOLING SYSTEM WITH           RESVVT   5
C              INDIVIDUAL ZONE CONTROL BY VAV AIR VALVE.  HEATING AND           RESVVT   6
C              COOLING IS SUPPLIED BY A VARIABLE SPEED AIR-TO-AIR HEAT          RESVVT   7
C              PUMP.  SIMULTANEOUS HEATING AND COOLING DEMANDS ARE MET          RESVVT   8
C              SWITCHING BETWEEN HEATING AND COOLING WHILE OPENING SOME         RESVVT   9
C              AIR VALVES AND ENTIRELY CLOSING THE REST.                        RESVVT  10
C                                                                               RESVVT  11
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON /DDSDAT/ FONh, SFKWh, DTSh, CFMRATh, FONNGTh, RCFMmix,             /DDSDAT/ 2
     1                RfanCFM, EXFIL, DTDUCT, DTDUCTh, TCDFSR, THDFSR,          /DDSDAT/ 3
     2                CFMINh, CFMINc, CFMINhm, CFMINcm, CFMINt,                 /DDSDAT/ 4
     3                TCMINcoil, THMAXcoil, IWarmestZ, IColdestZ                /DDSDAT/ 5
      DIMENSION       DDSDAT(21)                                                /DDSDAT/ 6
      EQUIVALENCE     (DDSDAT(1), FONh)                                         /DDSDAT/ 7
      COMMON  /DESHRQ/ NDESDY, IDDTYP(2), DESHRQ(360)                           Time     3
      COMMON /FFUEL/ FFUEL, FurnAuxFuel, FurnAuxkW, PLRF                        /FFUEL/  2
      COMMON  /ENDUSE/ SUPPKW, HEATKW                                           HVAC27   1
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                 IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                        /FILES/  3
     2               , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                   /FILES/  4
     3                 IHRREP(3), IHRPAS(2)                                     /FILES/  5
      common  /FNSYS/  ISKIPS, MSYSF(120)                                       /FNSYS/  2
      COMMON  /HRREP / Irb, Ihrp, Lrb, Lhrp, Nrb, Nhrp, IVTLIM(3,50),           HR       5
     &                 IGRPtr, IBRPtr, IRSch, IRSchT(5),                        HR       6
     &                 NHRTyp(3), ITBUF(3), ITBUFB(3), ITBUFE(3),               HR       7
     &                 IHREOF, ICDFLG                                           HR       8
      COMMON  /MISCD / TEMPS(4,9999),CONS(5),TEMPSL(9999),                      -048a   10
     1                 BLDGQH,BLDGQC,BLDGQL,BLDGP,BPMULT,                       /MISCD/  3
     $                 DBTMIN,DBTMAX,WMIN,WMAX,NSPZ(9999),                      -048a   11
     3                 DQ, DTP, DTR, DTS, FPI, PLRCC , POM, TC2, TDM,           /MISCD/  5
     4                 TRA,WCOL,WCOLM,WMM,YPI,KWBTU,BTUKW,UNFILD,Unusedm        RemPA   45
      REAL             KWBTU                                                    /MISCD/  7
      COMMON  /PLANTD/ QHMP,TMP,CFMP,QHPP,CFMPP,                                /PLANTD/ 2
     1                 QHZP,TZP,DHWPKW,DHWPLF,DHWQRP                            RemPA   46
      REAL             PLANTD(10)                                               RemPA   47
      EQUIVALENCE      (PLANTD(1), QHMP)                                        RemPA   48
      COMMON  /PTRPLT/ Ipm,Ilp,Ich,Ibl,Idw,Itw,Ipv,Ign,Itk,Ihx,                 PV       1
     &                 Iec,Ilm,Iem,Ifm,Ism,Icm,Imm,Imc,Igl,Isp2,                XFC2     1
     &                 Ispare(5),  Ipe,                                         HVAC19   3
     &                 Npm,Nlp,Nch,Nbl,Ndw,Ntw,Npv,Ngn,Ntk,Nhx,                 PV       2
     &                 Nec,Nlm,Nem,Nfm,Nsm,Ncm,Nmm,Nmc,Ngl,Nsp2,                XFC2     2
     &                 Nspare(5),  Npe,                                         HVAC19   6
     &                 Lpm,Llp,Lch,Lbl,Ldw,Ltw,Lpv,Lgn,Ltk,Lhx,                 PV       3
     &                 Lec,Llm,Lem,Lfm,Lsm,Lcm,Lmm,Lmc,Lgl,Lsp2,                XFC2     3
     &                 Lspare(5),  Lpe,                                         HVAC19   9
     &                 Jpm,Jlp,Jch,Jbl,Jdw,Jtw,Jpv,Jgn,Jtk,Jhx,                 PV       4
     &                 Jec,Jlm,Jem,Jfm,Jsm,Jcm,    Jmc,Jgl,                     HVAC19  11
     &                 Jpe, kpr, NumMeters, NumIntHX                            XFC1     1
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      COMMON  /REPORT/ IREPRT(4,37),IPRG,IUNIQV(100),IUNIQS(100),IUNIQL         HVAC14   4
      COMMON /RSVVTD/ CONFRC,HONFRC,NOWFRC,THMXNS                               /RSVVTD/ 2
      REAL NOWFRC                                                               /RSVVTD/ 3
      COMMON /SHP   / QCRUN,QCLOAD,QCGAS,QCAUX,QCGSLD,QCGSUP,                   /SHP/    2
     1                QCWAS,QCWASU,QCGSAV,QCFAN,                                /SHP/    3
     2                QHRUN,QHLOAD,QHGAS,QHAUX,QHGSLD,QHGSUP,                   /SHP/    4
     3                QHWAS,QHWASU,QHGDFR,QHFAN,          CUR(25),              /SHP/    5
     4                GSAV1,GASV2,PCH,ISZCZ,GCAP(2),GEDB,QHDFRG,                -044c1   1
     5                GRPM,PLRSUP,CFMCYC,CLPLR,CFMVVT,QHZHP,PCCEDB,             /SHP/    7
     6                IHPREP,IHPOUT,IHPHRR,IHPHRN,IRST,IREN                     /SHP/    8
      COMMON /SHPZ  / QCRUNZ,QCLOADZ,QCGASZ,QCAUXZ,QCGSLDZ,QCGSUPZ,             /SHP/    9
     1                QCWASZ,QCWASUZ,QCGSAVZ,QCFANZ,                            /SHP/   10
     2                QHRUNZ,QHLOADZ,QHGASZ,QHAUXZ,QHGSLDZ,QHGSUPZ,             /SHP/   11
     3                QHWASZ,QHWASUZ,QHGDFRZ,QHFANZ                             /SHP/   12
      DIMENSION       SHP(60),SHPZ(20)                                          /SHP/   13
      EQUIVALENCE     (SHP,QCRUN),(SHPZ,QCRUNZ)                                 /SHP/   14
     1               ,(DFM1,CUR(18)),(DFM2,CUR(19)),(DFM3,CUR(20))              /SHP/   15
      COMMON /SSPDAT/  PLRCS,QCCKWS,QCCMPS,PLRHS,QHCKWS,QHCMPS                  /SSPDAT/ 2
     $                ,PLRFS,PLRFCS,PLRFHS,sspss                                /SSPDAT/ 3
     $                ,PLRCZ,QCCKWZ,QCCMPZ,PLRHZ,QHCKWZ,QHCMPZ                  /SSPDAT/ 4
     $                ,PLRFZ,PLRFCZ,PLRFHZ,sspsz                                /SSPDAT/ 5
     $                ,ISSPF,IWCCF,IPCCF,SSPSAV                                 /SSPDAT/ 6
      DIMENSION        SSPD(24)                                                 JJHfix   1
      EQUIVALENCE      (SSPD(1),PLRCS)                                          /SSPDAT/ 8
      COMMON  /SYSTD / TH,TC,TM,TR,QH,QC,QHZ,QCZ,QHB,QHP,QHUM,                  /SYSTD/  2
     1                 QDHUM,TCMIN,THMAX,QLSUM,QPSUM,CFM,CFMH,CFMC,             /SYSTD/  3
     2                 RCFM,ECFM,CINF,FON,HON,CON,BON,SCONS(3),PH,PC,           /SYSTD/  4
     3                 SKW,FANKW,unused1,WR,WM,WCOIL,WW,PO,D,                   -046f    1
     4                 FTEMP,TCR,QHR,RfanPumpKW,SGAS,SKWQH,SKWQC,QCLAT,         -131    23
     5                 SFKW,RFKW,FONNGT,WSURF,RWalkinQ,TSURF,TRh,               -131    24
     6                 CBF,CBF1,CBF2,EON,PLRCFM,PLRC,PLRH,QCM1,                 /SYSTD/  8
     7                 QCM2,QHM1,EIRM1,EIRM2,EIR,OFKW,QCT,QCS,                  /SYSTD/  9
     8                 WRMAX,WRMIN,CFMRAT,QdistG,QdistL,RON,QHT,                /SYSTD/ 10
     9                 TPOMIN,POMIN,QHSUP,QRSENS,QRLAT,QRREC,QRREJ,             /SYSTD/ 11
     1                 RCOMKW,RDEFKW,RAUXKW,ECFMP,CFMIN,CINFP,DT,DW,            /SYSTD/ 12
     2                 EWB,IC,NATTSP,Q,RETR,SLOAD,QLSUMP,T,TCHUM,TEND,          /SYSTD/ 13
     3                 TS,hgbmin,HPDefE,EconoOnly,TDuctEnv,                     -044e1   1
     4                 QCUNMT,CapRh,CapRph,CapRc                                HVAC25   3
      REAL             SYSTD(113)                                               HVAC19  13
      EQUIVALENCE      (SYSTD(1),TH)                                            RemPA   65
      COMMON  /TIME  / IDOY, IYR, IMO, IDAY, IHR,                               Time     4
     &                 ISCMO, ISCDAY, ISCHR, IDOW, ISCDOW, iDSdates(6),         -044e5   1
     &                 iTimeFlg, iDSFlg, iDDFlg, InitialFlg, LeapYr,            Time     6
     &                 CLOCK(10), MONDSC(13), MONLEN(12), MONSDA(12)            HR      12
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
      COMMON  /ZONED / EXCFM,FH,FC,CFMZ,QHBZ,QOVER,THZ,TCZ,ERMAX,ERMIN,         /ZONED/  2
     1                 TRY,FTD,CORINT,G0,G1,G2,G3,SIGMAG,TL,ZQHR,TAVE,          /ZONED/  3
     2                 ZQH,ZQC,FCHPS(15),ACFM,ZKW,TCMINZ,THMAXZ,                /ZONED/  4
     3                 ERMAXM,ERMINM,THR,CSSCND,CSSVEC,HENOW,QGWIN,             /ZONED/  5
     4                 QSNABT,QGOPWL,QGVEC,CFMCVT,SSFPT,CFMVNT,ZFANKW,          /ZONED/  6
     5                 ZKWCBT,ZKWHBT,ZCapRbbrd, XC,ZC,XH,ZH                     -044e2   7
      REAL ZONED(63)                                                            -044e2   8
      EQUIVALENCE (ZONED(1),EXCFM)                                              /ZONED/  9
C                                                                               RESVVT  30
      INTEGER ZP1MN,SUPFLG                                                      RESVVT  31
C                                                                               RESVVT  32
C              INITIALIZE SOME LOCAL VARIABLES                                  RESVVT  33
      SUPFLG = 0                                                                RESVVT  34
      ZP1MN  = 0                                                                RESVVT  35
      QNEWMN = 0.                                                               RESVVT  36
      ECFMC  = 0.                                                               RESVVT  37
      QLSUMC = 0.                                                               RESVVT  38
      QPSUMC = 0.                                                               RESVVT  39
      CINFC  = 0.                                                               RESVVT  40
      TRC    = 0.                                                               RESVVT  41
      ECFMH  = 0.                                                               RESVVT  42
      QLSUMH = 0.                                                               RESVVT  43
      QPSUMH = 0.                                                               RESVVT  44
      CINFH  = 0.                                                               RESVVT  45
      TRH    = 0.                                                               RESVVT  46
      CFMD   = 0.                                                               RESVVT  47
      QLSUMD = 0.                                                               RESVVT  48
      QPSUMD = 0.                                                               RESVVT  49
      CINFD  = 0.                                                               RESVVT  50
      TMH    = 0.                                                               RESVVT  51
      WMH    = 0.                                                               RESVVT  52
      QGBB = 0.                                                                 RESVVT  53
C             SET SS-P flag for saving PLR info                                 RESVVT  54
      ISSPF = 0                                                                 RESVVT  55
      IF((IREPRT(2,23).NE.0).OR.(IREPRT(2,27).NE.0))  ISSPF = 1                 IREPRT 208
C********************** run function : RESVVT-0 ************************        RESVVT  57
      IF( MSYSF(104) .NE. 0 )   CALL  FINTS( MSYSF(104), 0. )                   RESVVT  58
C***********************************************************************        RESVVT  59
c                                                                               HVAC1  586
c              set circulation-loop restrictions on heating and                 HVAC1  587
c              cooling capacity for use in DKTEMP                               HVAC1  588
      IF (<HW-LOOP> .NE. 0)  THEN                                               HVAC1  589
c              heating coil is hot water - pointer to loop                      HVAC1  590
        JLP   = <HW-LOOP>                                                       HVAC1  591
        CapRh = <lp;HCAP_RATIO>                                                 HVAC16 126
      ELSE                                                                      HVAC1  593
        CapRh = 1.0                                                             HVAC1  594
      ENDIF                                                                     HVAC1  595
      IF (<PHW-LOOP> .NE. 0)  THEN                                              HVAC1  596
c              preheat coil is hot water - pointer to loop                      HVAC1  597
        JLP    = <PHW-LOOP>                                                     HVAC1  598
        CapRph = <lp;HCAP_RATIO>                                                HVAC16 127
      ELSE                                                                      HVAC1  600
        CapRph = 1.0                                                            HVAC1  601
      ENDIF                                                                     HVAC1  602
      IF (<CHW-LOOP> .NE. 0)  THEN                                              HVAC1  603
c              cooling coil is hot water - pointer to loop                      HVAC1  604
        JLP   = <CHW-LOOP>                                                      HVAC1  605
        CapRc = <lp;CCAP_RATIO>                                                 HVAC16 128
      ELSE                                                                      HVAC1  607
        CapRc = 1.0                                                             HVAC1  608
      ENDIF                                                                     HVAC1  609
c                                                                               HVAC1  610
C              CALL DKTEMP TO GET THE MIN AND MAX SUPPLY TEMPS                  RESVVT  60
C              TCMIN AND THMAX AS WELL AS THMXMN, THE MAX SUPPLY                RESVVT  61
C              TEMP WITHOUT SUPPLEMENTAL HEATING.                               RESVVT  62
      CALL DKTEMP                                                               RESVVT  63
C              SET ZP1 TO POINT TO THE FIRST ZONE                               RESVVT  64
      ZP1    = ISZ                                                              RESVVT  65
C              ZERO THE SYSTEM HEATING AND COOLING CFM                          RESVVT  66
      CFMHON = 0.                                                               RESVVT  67
      CFMCON = 0.                                                               RESVVT  68
C              INITIALIZE THE HEAT SUPPLY TEMP TO THE SUPPLY TEMP               RESVVT  69
C              AT MAX HEAT OUTPUT WITHOUT SUPPLEMENTAL HEAT                     RESVVT  70
      TH = THMXNS                                                               RESVVT  71
c              Initialize HONFRC and CONFRC for full hour                       RESVVT  72
c              heating and cooling                                              RESVVT  73
      HONFRC = 1.                                                               RESVVT  74
      CONFRC = 1.                                                               RESVVT  75
C              LOOP THROUGH THE ZONES; GET ZONE TEMPS AND EXTR RATES            RESVVT  76
C              ASSUMING NO SUPPLEMENTAL HEAT                                    RESVVT  77
      DO NZ=1,NSZ                                                               RESVVT  78
C              ZERO THE ZONE DATA COMMON BLOCK                                  RESVVT  79
          DO I=1,63                                                             -044e2 126
            ZONED(I) = 0.0                                                      RESVVT  81
          END DO                                                                RESVVT  82
          ZP2    = <ZP2>                                                        RESVVT  83
          <ERMAX> = 0.0                                                         RESVVT  84
          <ERMIN> = 0.0                                                         RESVVT  85
C              FOR CONDITIONED ZONES, SET MAX AND MIN EXTR RATES.               RESVVT  86
C              ASSUME NO SUPPLEMENTAL HEAT AND FULL HOUR HEATING AND            RESVVT  87
C              COOLING.                                                         RESVVT  88
          IF (<ZONE-TYPE>.EQ.1) THEN                                            RESVVT  89
              XC      = CONS(1)*<CFMAX>                                         -044e2 127
              <ERMAX> = XC * (<TNOW>-TCMIN)                                     -044e2 128
              XH      = XC                                                      -044e2 129
              <ERMIN> = XH * (<TNOW>-THMXNS)                                    -044e2 130
C              FOR CONDITIONED ZONES, CALL TEMDEV TO GET THE ZONE               RESVVT  92
C              TEMP AND EXTR RATE (<TNEW> AND <QNEW>) BUT DON'T                 RESVVT  93
C              UPDATE HISTORIES.                                                RESVVT  94
              CALL TEMDEV(1)                                                    RESVVT  95
C              STORE MIN EXTR RATE WITH NO SUPP HEAT                            RESVVT  96
              <ERMINNS> = <ERMIN>                                               RESVVT  97
C              CHECK IF SUPPLEMENTAL HEAT NEEDED                                RESVVT  98
              IF (QOVER.LT.0.) SUPFLG=1                                         RESVVT  99
C              USING THE NEW EXTRACTION RATES, CALCULATE THE HEATING ANO        RESVVT 100
C              COOLING CFM'S REQUIRED                                           RESVVT 101
              TAVE = (<TNEW>+<TNOW>)*0.5                                        RESVVT 102
              IF (<QNEW>.LT.0.) THEN                                            RESVVT 103
                  ZCFM = <QNEW>/(CONS(1)*AMIN1((TAVE-THMXNS),-0.1))             RESVVT 104
                  ZCFM = AMIN1(ZCFM,<CFMAX>)                                    RESVVT 105
                  <CFMZ> = ZCFM                                                 RESVVT 106
                  CFMHON = CFMHON + <MULTIPLIER>*ZCFM                           RESVVT 107
              ELSE IF (<QNEW>.GT.0.) THEN                                       RESVVT 108
                  ZCFM = <QNEW>/(CONS(1)*AMAX1((TAVE-TCMIN),0.1))               RESVVT 109
                  ZCFM = AMIN1(ZCFM,<CFMAX>)                                    RESVVT 110
                  <CFMZ> = ZCFM                                                 RESVVT 111
                  CFMCON = CFMCON + <MULTIPLIER>*ZCFM                           RESVVT 112
              END IF                                                            RESVVT 113
          END IF                                                                RESVVT 114
          ZP1 = ZP1 + NZD                                                       RESVVT 115
      END DO                                                                    RESVVT 116
C              IF NO HEATING OR COOLING NEEDED, SET FON = 0.0                   RESVVT 117
      IF (CFMCON.EQ.0.0 .AND. CFMHON.EQ.0.0) THEN                               RESVVT 118
          HONFRC = 0.                                                           RESVVT 119
          CONFRC = 0.                                                           RESVVT 120
          FON = 0.                                                              RESVVT 121
      END IF                                                                    RESVVT 122
C********************** run function : RESVVT-1 ************************        RESVVT 123
      IF( MSYSF(105) .NE. 0 )   CALL  FINTS( MSYSF(105), 0. )                   RESVVT 124
C***********************************************************************        RESVVT 125
      IF (FON.EQ.0.) GO TO 250                                                  RESVVT 126
C              NOW CHECK TO SEE IF CENTRAL FAN CAN SUPPLY CFM NEEDED BY         RESVVT 127
C              THE ZONES.                                                       RESVVT 128
      CFMRTH = 0.                                                               RESVVT 129
      CFMRTC = 0.                                                               RESVVT 130
      IF (CFMHON.GT.0.)                                                         RESVVT 131
     1  CFMRTH = (<SUPPLY-CFM>-<DUCTCFMLOSS>)/AMAX1(CFMHON,0.1)                 RESVVT 132
      IF (CFMCON.GT.0.)                                                         RESVVT 133
     1  CFMRTC = (<SUPPLY-CFM>-<DUCTCFMLOSS>)/AMAX1(CFMCON,0.1)                 RESVVT 134
      IF ((CFMRTH.GT.0.99.OR.CFMHON.EQ.0.) .AND. (CFMRTC.GT.0.99.OR.            RESVVT 135
     1     CFMCON.EQ.0.)) GO TO 50                                              RESVVT 136
C              ZONES ARE REQUESTING MORE CFM THAN FAN CAN SUPPLY.               RESVVT 137
C              RECALC TEMPS AND EXTR RATES WITH ZONE CFM THAT FAN IS            RESVVT 138
C              ABLE TO SUPPLY.                                                  RESVVT 139
c              first, set heating and cooling cfm ratios for duct               RESVVT 140
c              losses calc'd in TEMDEV                                          RESVVT 141
      IF (<DUCT-LOSS-ZONE> .GT. 0)  THEN                                        RemPA  603
        HONFRC = CFMRTH / (CFMRTH + CFMRTC)                                     RESVVT 143
        CONFRC = CFMRTC / (CFMRTH + CFMRTC)                                     RESVVT 144
      ENDIF                                                                     RESVVT 145
      ZP1 = ISZ                                                                 RESVVT 146
      DO NZ = 1,NSZ                                                             RESVVT 147
          DO I=1,63                                                             -044e2 131
              ZONED(I) = 0.0                                                    RESVVT 149
          END DO                                                                RESVVT 150
          ZP2 = <ZP2>                                                           RESVVT 151
          <ERMAX> = 0.                                                          RESVVT 152
          <ERMIN> = 0.                                                          RESVVT 153
          IF (<ZONE-TYPE>.EQ.1) THEN                                            RESVVT 154
              XC      = CONS(1)*<CFMZ>*CFMRTC                                   -044e2 132
              <ERMAX> = XC * (<TNOW>-TCMIN)                                     -044e2 133
              XH      = CONS(1)*<CFMZ>*CFMRTH                                   -044e2 134
              <ERMIN> = XH * (<TNOW>-THMXNS)                                    -044e2 135
              CALL TEMDEV(2)                                                    RESVVT 157
              IF (QOVER.LT.0.) SUPFLG = 1                                       RESVVT 158
          END IF                                                                RESVVT 159
          ZP1 = ZP1 + NZD                                                       RESVVT 160
      END DO                                                                    RESVVT 161
C              IF SUPPLEMENTAL HEAT IS REQUIRED, WE MUST REDO THE ABOVE         RESVVT 162
C              CALCULATIONS FOR ZONES THAT NEED HEAT, THIS TIME ASSUMING        RESVVT 163
C              SUPPLEMENTAL HEAT IS AVAILABLE                                   RESVVT 164
   50 IF (DBT.GT.<MAX-HSUPP-T>)  SUPFLG=0                                       RESVVT 165
      IF (<SUPP-HEAT-CAP>.GE.0.)  SUPFLG=0                                      RESVVT 166
      IF (DBT.LT.<MIN-HP-T> .AND. <SUPP-HEAT-CAP>.LT.0.) SUPFLG=1               RESVVT 167
      IF (SUPFLG.EQ.0) GO TO 200                                                RESVVT 168
      IF (THMXNS.EQ.THMAX) GO TO 200                                            RESVVT 169
      ZP1 = ISZ                                                                 RESVVT 170
      CFMHON = 0.                                                               RESVVT 171
      DO NZ=1,NSZ                                                               RESVVT 172
          ZP2 = <ZP2>                                                           RESVVT 173
          IF (<QNEW>.LT.0. .AND. <ZONE-TYPE>.EQ.1) THEN                         RESVVT 174
              DO I=1,63                                                         -044e2 136
                  ZONED(I) = 0.                                                 RESVVT 176
              END DO                                                            RESVVT 177
              XC      = 0.                                                      -044e2 137
              <ERMAX> = 0.                                                      -044e2 138
              XH      = CONS(1)*<CFMAX>                                         -044e2 139
              <ERMIN> = XH * (<TNOW>-THMAX)                                     -044e2 140
              CALL TEMDEV(2)                                                    RESVVT 180
              TAVE = (<TNOW>+<TNEW>)*0.5                                        RESVVT 181
              ZCFM = <QNEW>/(CONS(1)*AMIN1((TAVE-THMAX),-0.1))                  RESVVT 182
              ZCFM = AMIN1(ZCFM,<CFMAX>)                                        RESVVT 183
              <CFMZ> = ZCFM                                                     RESVVT 184
              CFMHON = CFMHON + <MULTIPLIER>*ZCFM                               RESVVT 185
          END IF                                                                RESVVT 186
          ZP1 = ZP1 + NZD                                                       RESVVT 187
      END DO                                                                    RESVVT 188
      CFMRTH = (<SUPPLY-CFM>-<DUCTCFMLOSS>)/AMAX1(CFMHON,0.1)                   RESVVT 189
      ZP1 = ISZ                                                                 RESVVT 190
      IF (CFMRTH.GE.1.0) THEN                                                   RESVVT 191
          THH = 0.                                                              RESVVT 192
          DO NZ=1,NSZ                                                           RESVVT 193
              ZP2 = <ZP2>                                                       RESVVT 194
              IF (<QNEW>.LT.0. .AND. <ZONE-TYPE>.EQ.1) THEN                     RESVVT 195
                  TAVE = (<TNOW>+<TNEW>)*0.5                                    RESVVT 196
                  ZCFM = AMIN1(<CFMAX>,CFMRTH*<CFMZ>)                           RESVVT 197
                  THZ = TAVE - <QNEW>/(CONS(1)*AMAX1(ZCFM,1.0))                 RESVVT 198
                  THH = AMAX1(THH,THZ)                                          RESVVT 199
              END IF                                                            RESVVT 200
              ZP1 = ZP1 + NZD                                                   RESVVT 201
          END DO                                                                RESVVT 202
          TH = AMIN1(THH,THMAX)                                                 RESVVT 203
      ELSE                                                                      RESVVT 204
          DO NZ=1,NSZ                                                           RESVVT 205
              ZP2 = <ZP2>                                                       RESVVT 206
              IF (<QNEW>.LT.0. .AND. <ZONE-TYPE>.EQ.1) THEN                     RESVVT 207
                  DO I=1,63                                                     -044e2 141
                      ZONED(I)=0.                                               RESVVT 209
                  END DO                                                        RESVVT 210
                  XC      = 0.                                                  -044e2 142
                  <ERMAX> = 0.                                                  -044e2 143
                  XH      = CONS(1)*<CFMZ>*CFMRTH                               -044e2 144
                  <ERMIN> = XH * (<TNOW>-THMAX)                                 -044e2 145
                  CALL TEMDEV(2)                                                RESVVT 213
              END IF                                                            RESVVT 214
              ZP1 = ZP1 + NZD                                                   RESVVT 215
          END DO                                                                RESVVT 216
          TH = THMAX                                                            RESVVT 217
      END IF                                                                    RESVVT 218
C              FOR CONDITIONED ZONES, LOOP THROUGH THE ZONES AND FIND           RESVVT 219
C              THE LARGEST PART LOADS FOR HEATING AND COOLING.                  RESVVT 220
  200 ZP1    = ISZ                                                              RESVVT 221
      PLRCMX = 0.                                                               RESVVT 222
      PLRHMX = 0.                                                               RESVVT 223
      DO  NZ=1,NSZ                                                              RESVVT 224
          ZP2    = <ZP2>                                                        RESVVT 225
          IF (FON.GT.0.0 .AND. <ZONE-TYPE>.EQ.1) THEN                           RESVVT 226
              IF (<QNEW>.GT.0) THEN                                             RESVVT 227
                  PLRCMX = AMAX1(<QNEW>/<ERMAX>,PLRCMX)                         RESVVT 228
              ELSE IF (<QNEW>.LT.0.) THEN                                       RESVVT 229
                  PLRHMX = AMAX1(<QNEW>/<ERMIN>,PLRHMX)                         RESVVT 230
              END IF                                                            RESVVT 231
          END IF                                                                RESVVT 232
          ZP1 = ZP1 + NZD                                                       RESVVT 233
      END DO                                                                    RESVVT 234
      IF (PLRCMX.LT.0.01) PLRCMX=0.0                                            RESVVT 235
      IF (PLRHMX.LT.0.01) PLRHMX=0.0                                            RESVVT 236
      PLNEED = PLRCMX + PLRHMX                                                  RESVVT 237
C              USE MAX PART LOADS TO SET HEATING AND COOLING ON FRACTIONS       RESVVT 238
      IF (PLRCMX.GT.0. .AND. PLRHMX.EQ.0.) THEN                                 RESVVT 239
          CONFRC = 1.0                                                          RESVVT 240
          HONFRC = 0.                                                           RESVVT 241
      ELSE IF (PLRCMX.EQ.0. .AND. PLRHMX.GT.0.) THEN                            RESVVT 242
          CONFRC = 0.                                                           RESVVT 243
          HONFRC = 1.0                                                          RESVVT 244
      ELSE IF (PLRCMX.EQ.0. .AND. PLRHMX.EQ.0) THEN                             RESVVT 245
          CONFRC = 0.                                                           RESVVT 246
          HONFRC = 0.                                                           RESVVT 247
C              FANS OFF IF NO HEATING OR COOLING NEEDED                         RESVVT 248
          FON    = 0.                                                           RESVVT 249
      ELSE                                                                      RESVVT 250
          CONFRC = PLRCMX/PLNEED                                                RESVVT 251
          HONFRC = PLRHMX/PLNEED                                                RESVVT 252
          TH = THMAX                                                            RESVVT 253
      END IF                                                                    RESVVT 254
  250 CFMHON = 0.                                                               RESVVT 255
      CFMCON = 0.                                                               RESVVT 256
C              LOOP OVER ZONES AND RESET <ERMAX> AND <ERMIN> TO ALLOW           RESVVT 257
C              FOR POSSIBLE SUB-HOUR HEATING AND COOLING.  CALCULATE            RESVVT 258
C              FINAL ZONE EXTR RATES AND TEMPERATURES.                          RESVVT 259
      ZP1 = ISZ                                                                 RESVVT 260
      DO 500 NZ=1,NSZ                                                           RESVVT 261
      ZP2 = <ZP2>                                                               HVAC29  35
      IF (<ZONE-TYPE>.NE.1)  GOTO 491                                           HVAC29  36
      DO I=1,63                                                                 -044e2 146
        ZONED(I) = 0.0                                                          RESVVT 265
      END DO                                                                    RESVVT 266
c              if exhaust made up by infiltration                               -046   274
      IF (<EXHAUST-SOURCE> .eq. 2  .or.                                         -047b   32
     &    <EXHAUST-SOURCE> .eq. 3)  Call ZoneExhaust(9, xx)  ! power            -047b   33
      XC      = CONS(1)*CONFRC*Min(<CFMAX>,<CFMZ>*CFMRTC)                       -044e2 147
      <ERMAX> = XC * (<TNOW>-TCMIN)                                             -044e2 148
      XH      = CONS(1)*HONFRC*Min(<CFMAX>,<CFMZ>*CFMRTH)                       -044e2 149
      IF (SUPFLG.EQ.1) THEN                                                     -044e2 150
        <ERMIN> = XH * (<TNOW>-THMAX)                                           -044e2 151
      ELSE                                                                      -044e2 152
        <ERMIN> = XH * (<TNOW>-THMXNS)                                          -044e2 153
      ENDIF                                                                     -044e2 154
      CALL TEMDEV(3)                                                            RESVVT 276
      ZMULT = <MULTIPLIER>                                                      RESVVT 277
      IF (FON.EQ.0.)  GO TO 300                                                 RESVVT 278
      TAVE = (<TNOW>+<TPAST>)*0.5                                               RESVVT 279
      RETR = 1.                                                                 RESVVT 280
      IF (<QNOW>.GT.1.0) THEN                                                   RESVVT 281
C              COOLING; CFM TO HANDLE LOAD                                      RESVVT 282
          ZCFM = <QNOW>/(CONS(1)*(TAVE-TCMIN))                                  RESVVT 283
          ZCFM   = AMAX1(0.0,ZCFM)                                              RESVVT 284
          ZCFM   = AMIN1(ZCFM,<CFMAX>*CONFRC)                                   RESVVT 285
          CFMZ = ZCFM                                                           RESVVT 286
C              Exhaust flow during cooling                                      -044e  456
          IF (<EXHAUST-SOURCE> .eq. 1  .and.  CONFRC .gt. 0.) THEN              -046   276
            Call ZoneExhaust(1, ZCFM/CONFRC)                                    -044e  458
            CFMCYC = CONFRC                                                     -044e  459
            Call ZoneExhaust(9, ZCFM)                                           -046   277
            ECFMC  = ECFMC + EXCFM*ZMULT                                        -044e  461
          ENDIF                                                                 -044e  462
C              INCREMENT TOTAL COOLING CFM                                      RESVVT 291
          CFMCON = CFMCON + ZCFM*ZMULT                                          RESVVT 292
C              CALC RETURN AIR RATIO                                            RESVVT 293
          IF(ZCFM .GT. 0.)  RETR = (1.0-EXCFM/ZCFM)                             RESVVT 294
C              INCREMENT COOLING SYSTEM ROOM LATENT GAIN                        RESVVT 295
          QLSUMC  = QLSUMC + <QL>*RETR*ZMULT                                    RESVVT 296
C              INCREMENT COOLING SYSTEM LIGHT-HEAT-TO RETURN                    RESVVT 297
          QPSUMC  = QPSUMC + <QLIGHTRETURN> * ZMULT                             RESVVT 298
C              INCREMENT COOLING INFILTRATION AIR CFM                           RESVVT 299
          CINFC   = CINFC + <CFMINF>*RETR*ZMULT                                 RESVVT 300
C              ADD ZONE WEIGHTED EFFECT ON RETURN AIR TEMP                      RESVVT 301
          TRC     = TRC + TAVE*(ZCFM-EXCFM)*ZMULT                               RESVVT 302
      ELSE IF (<QNOW>.LT.-1.0) THEN                                             RESVVT 303
C              HEATING; CFM TO HANDLE LOAD                                      RESVVT 304
          ZCFM = <QNOW>/(CONS(1)*(TAVE-TH))                                     RESVVT 305
          ZCFM   = AMAX1(0.0,ZCFM)                                              RESVVT 306
          ZCFM   = AMIN1(ZCFM,<CFMAX>*HONFRC)                                   RESVVT 307
          CFMZ = ZCFM                                                           RESVVT 308
C              Exhaust flow during heating                                      -044e  463
          IF (<EXHAUST-SOURCE> .eq. 1  .and.  HONFRC .gt. 0.) THEN              -046   278
            Call ZoneExhaust(1, ZCFM/HONFRC)                                    -044e  465
            CFMCYC = HONFRC                                                     -044e  466
            Call ZoneExhaust(9, ZCFM)                                           -046   279
            ECFMH  = ECFMH + EXCFM*ZMULT                                        -044e  468
          ENDIF                                                                 -044e  469
          CFMHON = CFMHON + ZCFM*ZMULT                                          RESVVT 311
          IF(ZCFM .GT. 0.)  RETR = (1.0-EXCFM/ZCFM)                             RESVVT 312
          QLSUMH  = QLSUMH + <QL>*RETR*ZMULT                                    RESVVT 313
          QPSUMH  = QPSUMH + <QLIGHTRETURN> * ZMULT                             RESVVT 314
          CINFH   = CINFH + <CFMINF>*RETR*ZMULT                                 RESVVT 315
          TRH     = TRH + TAVE*(ZCFM-EXCFM)*ZMULT                               RESVVT 316
      ELSE                                                                      RESVVT 317
C              DEADBAND                                                         RESVVT 318
          ZCFM = 0.                                                             RESVVT 319
          CFMZ = 0.                                                             RESVVT 320
          CFMD = 0.                                                             RESVVT 321
          QLSUMD  = QLSUMD + <QL>*ZMULT                                         RESVVT 322
          QPSUMD  = QPSUMD + <QLIGHTRETURN> * ZMULT                             RESVVT 323
          CINFD   = CINFD + <CFMINF>*ZMULT                                      RESVVT 324
      END IF                                                                    RESVVT 325
      CFMZ = ZCFM                                                               RESVVT 326
C              IF BASEBOARDS ARE ELECTRIC                                       RESVVT 333
  300 IF (<BASEBOARD-SOURCE>.EQ.1)  THEN                                        RESVVT 334
        X      = QHBZ*KWBTU                                                     RESVVT 335
        ZKW    = ZKW    - X                                                     RESVVT 336
        SKWQH  = SKWQH  - X*ZMULT                                               RESVVT 337
        JEM       = <HEAT-E-MZ>                                                 HVAC6  712
        <HEAT-EM> = <HEAT-EM> - X*ZMULT                                         HVAC6  713
      ENDIF                                                                     RESVVT 339
      IF(IA(NSP+10).LE.1)  QGBB = QGBB - QHBZ*ZMULT                             RESVVT 340
C              IF BASEBOARDS ARE GAS OR OIL                                     RESVVT 341
      IF((<BASEBOARD-SOURCE>.EQ.2).OR.(<BASEBOARD-SOURCE>.EQ.3)) THEN           RESVVT 342
        CALL FURNAC(QHBZ,<BASEBOARD-RATING>,<BASEBOARD-SOURCE>,ZMULT)           RESVVT 343
        JEM       = <AUX-E-MZ>                                                  HVAC6  714
        <AUX-EM>  = <AUX-EM> + FurnAuxkW                                        HVAC6  715
        JFM       = <HEAT-F-MZ>                                                 HVAC6  716
        <HEAT-FM> = <HEAT-FM> - FFUEL                                           HVAC6  717
        <AUX-FM>  = <AUX-FM>  + FurnAuxFuel                                     HVAC6  718
        QGBB = QGBB - FFUEL                                                     HVAC6  719
      ENDIF                                                                     RESVVT 345
c              save values for coil flow calculations                           RESVVT 346
C********************** run function : RESVVT-2Z ************************       RESVVT 351
      IF( MSYSF(106) .NE. 0 )   CALL  FINTS( MSYSF(106), 0. )                   RESVVT 352
C***********************************************************************        RESVVT 353
c                                                                               HVAC1  611
c              save zonal coil flows and loads for circulation loop calcs       HVAC1  612
      IF (<BBRD-LOOP> .NE. 0)  THEN                                             HVAC1  613
        <BBRD_EDB> = TAVE                                                       HVAC1  614
        <BBRD_Q>   = QHBZ                                                       HVAC1  615
      ENDIF                                                                     HVAC1  616
      ZKW = ZKW + <ZKW>                                                         RESVVT 355
      <SKW> = <SKW> + ZKW*ZMULT                                                 RESVVT 356
C              IF REP-BLOCK BUF AND HOURLY-REP SCHED FILL BUF                   RESVVT 359
      IF((<IZNBUFP>.NE.0).AND.(IRSCH.NE.0))  CALL USERZR( ZP1,ZP2 )             RESVVT 360
      IF(IRPZON .NE. 0)  CALL RPTZON                                            RESVVT 361
  491 ZP1 = ZP1 + NZD                                                           RESVVT 365
  500 CONTINUE                                                                  RESVVT 366
c                                                                               HVAC29  37
c              Store airflows and temperature for duct loss calculations        HVAC29  38
      IF (<DUCT-LOSS-ZONE> .GT. 0)  THEN                                        HVAC29  39
        IF (HONFRC .GT. 0.)  CFMH = CFMHON/HONFRC                               HVAC29  40
        IF (CONFRC .GT. 0.)  CFMC = CFMCON/CONFRC                               HVAC29  41
        TC = TCMIN                                                              HVAC29  42
      ENDIF                                                                     HVAC29  43
c                                                                               HVAC29  44
c              Simulate unconditioned zones                                     HVAC29  45
      NumUncondZONES = <NumUncondZONES>                                         HVAC29  46
      DO  NZ=1,NumUncondZONES                                                   HVAC29  47
c              pick up the pointer to the zone                                  HVAC29  48
        ZP1 = <ISZONES-uncond> + (NZ-1)*NZD                                     HVAC29  49
        ZP2 = <ZP2>                                                             HVAC29  50
        DO  I=1,63                                                              -044e2 155
          ZONED(I) = 0.0                                                        HVAC29  52
        ENDDO                                                                   HVAC29  53
        CALL TEMDEV(0)                                                          HVAC29  54
C              hourly reports                                                   HVAC29  55
        IF((<IZNBUFP>.NE.0).AND.(IRSCH.NE.0))  CALL USERZR( ZP1,ZP2 )           HVAC29  56
        IF(IRPZON .NE. 0)  CALL RPTZON                                          HVAC29  57
      ENDDO                                                                     HVAC29  58
C                                                                               RESVVT 367
C              TOTAL SYSTEM LOADS                                               RESVVT 368
C                                                                               RESVVT 369
C              CALC RETURN CFM FROM ZONES                                       RESVVT 370
      RCFMC = CFMCON - ECFMC                                                    RESVVT 371
      RCFMH = CFMHON - ECFMH                                                    RESVVT 372
c              Account for duct air lost to an unconditioned space              RetLoss152
      ONFRC     = HONFRC + CONFRC                                               -045f   86
      DuctExfil = 0.                                                            RetLoss154
      DuctInfil = 0.                                                            RetLoss155
      AIRLOSSh  = 0.                                                            -045f   87
      AIRLOSSc  = 0.                                                            -045f   88
      IF (<DUCTCFMLOSS> .GT. 0.  .AND.  <DUCT-ZTYPE> .EQ. 2) THEN               -045f   89
        SELECT CASE (<AIR-LOSS-TYPE>)                                           -045f   90
        CASE (2)  ! proportional leakage                                        -045f   91
          AIRLOSSh = CFMHON * <DUCT-AIR-LOSS>/(1.0-<DUCT-AIR-LOSS>)             -045f   92
          AIRLOSSc = CFMCON * <DUCT-AIR-LOSS>/(1.0-<DUCT-AIR-LOSS>)             -045f   93
        CASE DEFAULT  ! constant leakage                                        -045f   94
          AIRLOSSh = <DUCTCFMLOSS> * HONFRC                                     -045f   95
          AIRLOSSc = <DUCTCFMLOSS> * CONFRC                                     -045f   96
        END SELECT                                                              -045f   97
        DuctExfil = AIRLOSSh + AIRLOSSc                                         -045f   98
        IF (DuctExfil .ne. 0.) THEN                                             -047k   68
          DuctInfil = DuctExfil * (1.-<DUCT-AIR-LOSS-OA>)                       -047k   69
c              adjust summed return air quantities                              -047k   70
          ZP1   = <DUCT-LOSS-ZONE>                                              -047k   71
          ZP2   = <ZP2>                                                         -047k   72
          Zmult = <MULTIPLIER>                                                  -047k   73
          Tavg  = (<TNOW>+<TPAST>) * 0.5                ! zone T                -047k   74
          RETR  = DuctInfil                             ! back into duct        -047k   75
     &                / (<CFMINF>*Zmult + DuctExfil)                            -047k   76
          RCFMH  = RCFMH  + DuctInfil               * HONFRC                    -047k   77
          RCFMC  = RCFMC  + DuctInfil               * CONFRC                    -047k   78
          ECFMH  = ECFMH  + (DuctExfil - DuctInfil) * HONFRC                    -047k   79
          ECFMC  = ECFMC  + (DuctExfil - DuctInfil) * CONFRC                    -047k   80
          TRH    = TRH    + DuctInfil * Tavg        * HONFRC                    -047k   81
          TRC    = TRC    + DuctInfil * Tavg        * CONFRC                    -047k   82
          QLSUMH = QLSUMH + <QL>     * RETR * Zmult * HONFRC                    -047k   83
          QLSUMC = QLSUMC + <QL>     * RETR * Zmult * CONFRC                    -047k   84
          CINFH  = CINFH  + <CFMINF> * RETR * Zmult * HONFRC                    -047k   85
          CINFC  = CINFC  + <CFMINF> * RETR * Zmult * CONFRC                    -047k   86
        ENDIF                                                                   -047k   87
      ENDIF                                                                     RetLoss177
C              CALC RETURN AIR TEMP                                             RESVVT 379
      TRC = TRC/(RCFMC+.01)                                                     RESVVT 380
      TRH = TRH/(RCFMH+.01)                                                     RESVVT 381
c     write (ioutpt,1234) rcfmc, rcfmh, trc, trh                                RESVVT 382
c1234 format(' RESVVT, rcfmc=',f10.3,' rcfmh=',f10.3/                           RESVVT 383
c    1       ' trc=',f10.3,' trh=',f10.3)                                       RESVVT 384
C              ASSIGN DEADBAND LATENT AND INF TO ACTIVELY HEATED AND            RESVVT 385
C              COOLED ZONES                                                     RESVVT 386
      QLSUMC = QLSUMC + CONFRC*QLSUMD                                           RESVVT 387
      QLSUMH = QLSUMH + HONFRC*QLSUMD                                           RESVVT 388
      CINFC = CINFC + CONFRC*CINFD                                              RESVVT 389
      CINFH = CINFH + HONFRC*CINFD                                              RESVVT 390
      QPSUMC = QPSUMC + CONFRC*QPSUMD                                           RESVVT 391
      QPSUMH = QPSUMH + HONFRC*QPSUMD                                           RESVVT 392
C              CALL ROUTINE TO SIMULATE AIRHANDLER                              RESVVT 393
      IF (HONFRC.GT.0.) THEN                                                    RESVVT 394
          TC = TH                                                               RESVVT 395
          CFM = CFMHON/HONFRC                                                   RESVVT 396
          IF (HONFRC .GT. 0.)  CFM = CFM + AIRLOSSh/HONFRC                      -045f  100
          CFMH = CFM                                                            HVAC29  60
          CFMC = 0.                                                             HVAC29  61
          IF (CFM/<SUPPLY-CFM>.LT.<MIN-FAN-RATIO>) THEN                         RESVVT 398
              CFMCLH = CFM/(<SUPPLY-CFM>*<MIN-FAN-RATIO>)                       RESVVT 399
          ELSE                                                                  RESVVT 400
              CFMCLH = 1.0                                                      RESVVT 401
          END IF                                                                RESVVT 402
          CFMCYC = CFMCLH                                                       RESVVT 403
          QLSUM = QLSUMH/HONFRC                                                 RESVVT 404
          CINF = CINFH/HONFRC                                                   RESVVT 405
          TR = TRH                                                              RESVVT 406
          RCFM = RCFMH/HONFRC                                                   RESVVT 407
          ECFM = ECFMH/HONFRC                                                   RESVVT 408
          NOWFRC = HONFRC                                                       RESVVT 409
          CALL SDSF                                                             RESVVT 410
C              SAVE SOME VARIABLES                                              RESVVT 411
          TH =TC                                                                RESVVT 412
          TMH = TM                                                              RESVVT 413
          WMH = WM                                                              RESVVT 414
      END IF                                                                    RESVVT 415
      IF (CONFRC.GT.0.) THEN                                                    RESVVT 416
          TC = TCMIN                                                            RESVVT 417
          CFM = CFMCON/CONFRC                                                   RESVVT 418
          IF (CONFRC .GT. 0.)  CFM = CFM + AIRLOSSc/CONFRC                      -045f  101
          CFMC = CFM                                                            HVAC29  63
          CFMH = 0.                                                             HVAC29  64
          IF (CFM/<SUPPLY-CFM>.LT.<MIN-FAN-RATIO>) THEN                         RESVVT 420
              CFMCLC = CFM/(<SUPPLY-CFM>*<MIN-FAN-RATIO>)                       RESVVT 421
          ELSE                                                                  RESVVT 422
              CFMCLC = 1.0                                                      RESVVT 423
          END IF                                                                RESVVT 424
          CFMCYC = CFMCLC                                                       RESVVT 425
          QLSUM = QLSUMC/CONFRC                                                 RESVVT 426
          CINF = CINFC/CONFRC                                                   RESVVT 427
          TR = TRC                                                              RESVVT 428
          RCFM = RCFMC/CONFRC                                                   RESVVT 429
          ECFM = ECFMC/CONFRC                                                   RESVVT 430
          NOWFRC = CONFRC                                                       RESVVT 431
          CALL SDSF                                                             RESVVT 432
      END IF                                                                    RESVVT 433
      IF (CONFRC.EQ.0. .AND. HONFRC.EQ.0.) THEN                                 RESVVT 434
          FON = 0.                                                              RESVVT 435
          CALL SDSF                                                             RESVVT 436
      END IF                                                                    RESVVT 437
C********************** run function : RESVVT-3 ************************        RESVVT 438
      IF( MSYSF(107) .NE. 0 )   CALL  FINTS( MSYSF(107), 0. )                   RESVVT 439
C***********************************************************************        RESVVT 440
                                                                                RESVVT 441
C              IF CONS SPEED ELEC HEAT PUMP GET PERFORMANCE                     RESVVT 442
      IF (<HEAT-SOURCE>.EQ.4 .AND. <COMPRESSOR-TYPE>.EQ.0) THEN                 RESVVT 443
          call  HPUNIT( QH,<HEATING-CAPACITY>,1.0,1.0,QHKW,SLOAD,1.0)           RESVVT 444
          JEM       = <HEAT-E-MS>                                               HVAC6  720
          <HEAT-EM> = <HEAT-EM> + HEATKW                                        HVAC6  721
          JEM       = <SUPP-E-MS>                                               HVAC6  722
          <SUPP-EM> = <SUPP-EM> + SUPPKW                                        HVAC6  723
          QHKW = QHKW*HONFRC                                                    RESVVT 445
          SKWQH = SKWQH + QHKW                                                  RESVVT 446
          <SKW> = <SKW> + QHKW                                                  RESVVT 447
C             ASSIGN SUPPLEMENTAL HEAT TO CORRECT SOURCE                        RESVVT 448
C             IF SUPP SOURCE IS FURNACE THEN                                    RESVVT 449
          IF(<SUPP-SOURCE>.EQ.2 .OR. <SUPP-SOURCE>.EQ.3) THEN                   RESVVT 450
              CALL FURNAC(SLOAD,<SUPP-HEAT-CAP>,<SUPP-SOURCE>,1.0)              RESVVT 451
C              Move supplemental heat to correct END-USES                       -030   133
              JEM       = <AUX-E-MS>                                            -030   134
              <AUX-EM>  = <AUX-EM>  + FurnAuxkW                                 -030   135
              FFUEL     = FFUEL*HONFRC                                          -030   136
              JFM       = <SUPP-F-MS>                                           -030   137
              <SUPP-FM> = <SUPP-FM> - FFUEL                                     -030   138
              <AUX-FM>  = <AUX-FM>  + FurnAuxFuel                               -030   139
              QHGSUP = -FFUEL                                                   RESVVT 456
          ENDIF                                                                 RESVVT 457
C             IF SUPP SOURCE IS ELEC THEN                                       RESVVT 458
          IF (SLOAD.LT.-1.0 .AND. <SUPP-SOURCE>.EQ.1) THEN                      RESVVT 459
              X      = SLOAD*KWBTU*HONFRC                                       RESVVT 460
              SKWQH  = SKWQH  - X                                               RESVVT 461
              <SKW>  = <SKW>  - X                                               RESVVT 462
              JEM       = <SUPP-E-MS>                                           HVAC6  729
              <SUPP-EM> = <SUPP-EM> - X                                         HVAC6  730
              QHGSUP = -SLOAD*HONFRC                                            RESVVT 464
          END IF                                                                RESVVT 465
      END IF                                                                    RESVVT 466
C               IF VAR SPEED ELEC HP GET PERFORMANCE                            RESVVT 467
      IF (<HEAT-SOURCE>.EQ.4 .AND. <COMPRESSOR-TYPE>.EQ.2) THEN                 RESVVT 468
          CALL VHPPWR(QH,TMH,WBFS(TMH,WMH,PATM),CFMHON,2)                       RESVVT 469
      END IF                                                                    RESVVT 470
C              IF GAS HP GET PERFORMANCE                                        RESVVT 471
      IF(<HEAT-SOURCE> .EQ. 9)  THEN                                            RESVVT 472
          CALL GHPPWR(QH,TMH,WBFS(TMH,WMH,PATM),CFMHON,2)                       RESVVT 473
      END IF                                                                    RESVVT 474
C              SAVE CRANK CASE HEATING                                          RESVVT 475
      IF (DBT.LE.<CRANKCASE-MAX-T>) THEN                                        RESVVT 476
          IF (<HEAT-SOURCE>.EQ.9 .OR. (<HEAT-SOURCE>.EQ.4 .AND.                 RESVVT 477
     1        <COMPRESSOR-TYPE>.EQ.2)) THEN                                     RESVVT 478
              T =  QCRUN + QHRUN                                                RESVVT 479
              PLRCC = PLRC                                                      RESVVT 480
          ELSE                                                                  RESVVT 481
              T      = PLRCC*CFMCLC                                             RESVVT 482
              IF(<HEAT-SOURCE> .EQ. 4)  T = T + PLRH*CFMCLH                     RESVVT 483
              IF((T .GT. 0.) .AND. (<MIN-HGB-RATIO> .LT. 1.))  THEN             -044c  637
                IF((T .GE. <MIN-HGB-RATIO>) .OR.                                -044c  638
     $             (<MIN-HGB-RATIO> .LE. 0.)) THEN                              -044c  639
                  T    = 1.0                                                    -044c  640
                ELSE                                                            -044c  641
                  T    = T/<MIN-HGB-RATIO>                                      -044c  642
                ENDIF                                                           -044c  643
              ENDIF                                                             -044c  644
          ENDIF                                                                 RESVVT 491
          T  = <CRANKCASE-HEAT>*AMAX1(0.0,AMIN1(1.0,1.0-T))                     RESVVT 492
          JEM       = <AUX-E-MS>                                                HVAC6  731
          <AUX-EM>  = <AUX-EM>  + T                                             HVAC6  732
          <SKW>  = <SKW> + T                                                    RESVVT 494
          IF (PLRCC.GT.0.0 .OR. <HEAT-SOURCE>.LT.4) THEN                        RESVVT 495
              SKWQC  = SKWQC + T                                                RESVVT 496
              QCAUX  = QCAUX + T*BTUKW                                          RESVVT 497
          ENDIF                                                                 RESVVT 498
          IF (<HEAT-SOURCE>.GE.4) THEN                                          RESVVT 499
              IF(PLRH .GT. 0.0)  THEN                                           RESVVT 500
                  SKWQH  = SKWQH + T                                            RESVVT 501
                  QHAUX  = QHAUX + T*BTUKW                                      RESVVT 502
              ENDIF                                                             RESVVT 503
              IF(PLRCC+PLRH .EQ. 0.0) THEN                                      RESVVT 504
                  SKWQH  = SKWQH + T*0.5                                        RESVVT 505
                  QHAUX  = QHAUX + T*0.5*BTUKW                                  RESVVT 506
                  SKWQC  = SKWQC + T*0.5                                        RESVVT 507
                  QCAUX  = QCAUX + T*BTUKW*0.5                                  RESVVT 508
              ENDIF                                                             RESVVT 509
          END IF                                                                RESVVT 510
      END IF                                                                    RESVVT 511
      IF(IHPREP .NE. 0)  THEN                                                   RESVVT 512
        IF(<BASEBOARD-SOURCE> .NE. 9)  THEN                                     RESVVT 513
          QHGSLD = QHGSLD + QHB                                                 RESVVT 514
          QHGSUP = QHGSUP + QGBB                                                RESVVT 515
        ENDIF                                                                   RESVVT 516
      ENDIF                                                                     RESVVT 517
c              pass supplemental load onto heating loop, if any                 HVAC1  617
      <HT_COIL_Q> = <HT_COIL_Q> + SLOAD*HONFRC                                  HVAC1  618
      QH = QH*HONFRC                                                            RESVVT 524
      QDHUM=QDHUM*CONFRC                                                        RESVVT 525
      QHUM = QHUM*HONFRC                                                        RESVVT 526
      SLOAD = SLOAD*HONFRC                                                      RESVVT 527
c                                                                               DWRECV  93
c              Recover gas heat-pump waste heat to domestic water heater        DWRECV  94
      IF (<HTREC-DW-HEATER> .GT. 0  .AND.  <HEAT-SOURCE> .EQ. 9)                DWRECV  95
     &  CALL GHPPWR(xxx,xxx,xxx,xxx,3)                                          DWRECV  96
C********************** run function : RESVVT-4 ************************        RESVVT 530
      IF( MSYSF(108) .NE. 0 )   CALL  FINTS( MSYSF(108), 0. )                   RESVVT 531
C***********************************************************************        RESVVT 532
C                  SAVE info on PLR for fans and compressors                    RESVVT 533
      IF (ISSPF .EQ. 1  .AND.  InitialFlg .EQ. 0)  CALL REPSSP                  Time   349
c              set cfm ratios to 1.0 so they don't interfere with               RESVVT 535
c              other systems                                                    RESVVT 536
      HONFRC = 1.                                                               RESVVT 537
      CONFRC = 1.                                                               RESVVT 538
      RETURN                                                                    RESVVT 539
      END                                                                       RESVVT 540
      SUBROUTINE RESYS                                                          RESYS    2
C                                                                               RESYS    3
C                            THIS ROUTINE SIMULATES PACKAGED                    RESYS    4
C                            RESIDENTAIL AIR-CONDITIONING AND                   RESYS    5
C                            HEATING SYSTEMS                                    RESYS    6
C                                                                               RESYS    7
C              DEVELOPED BY                                                     -130     1
C                            J. J. Hirsch & S. D. Gates                         -130     2
C                            James J. Hirsch & Associates                       -130     3
C                            Camarillo, California                              -130     4
C              BASED UPON CODE DEVELOPED BY J. J. Hirsch and                    -130     5
C                            W. F. Buhl                                         -130     6
C                            A. E. Erdem                                        -130     7
C                            Lawrence Berkeley National Laboratory              -130     8
C                            University of California                           -130     9
Copyright (c) 1997 by James J. Hirsch. All Rights Reserved. Unpublished         -130    10
c rights reserved under the Copyright Laws of the United States.                -130    11
c RESTRICTED RIGHTS NOTICE: Government use, reproduction or disclosure          -130    12
c is subject to restrictions as set forth in Rights in Data (g)(3) in           -130    13
c UC/LBL purchase order 4607010 with J.J. Hirsch & Associates.                  -130    14
C                                                                               RESYS    9
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON /DHWDAT/ HTT,EHSTOR,HTGIVE,HTASK,HTFILL,HSUPRT,HSTRRT,             /DHWDAT/ 2
     1                DHWWST,DHWWSU,HTTIN,DHWLD,DHWLDR,DHWPLR,DHWHRT,           /DHWDAT/ 3
     2                DHHRFT,DHERFT,DHERFP,HTCAP,HTLOSS,DHWEIR                  /DHWDAT/ 4
      DIMENSION DHWD(20)                                                        /DHWDAT/ 5
      EQUIVALENCE (HTT,DHWD(1))                                                 /DHWDAT/ 6
      COMMON  /DESHRQ/ NDESDY, IDDTYP(2), DESHRQ(360)                           Time     3
C              SYSTEM LEVEL VARIABLES FOR DESICCANT SYSTEMS, BOTH TOTAL         /DSYSTD/ 2
C              AND INTEGRATED                                                   /DSYSTD/ 3
      COMMON  /DSYSTD/  SCGAS, QREG, WBR, WB8, T8, W8, WB9, T9, W9, EFF,        /DSYSTD/ 4
     1                  DTON, DMODE(7), ERMAX4, ERMAX5, ERMAX6, OPMODE,         /DSYSTD/ 5
     2                  DBOA,WOA,DGAS,DKW,TCONDd,QCDTOT,QCDS,QCDL,              /DSYSTD/ 6
     3                  POA,DFANKW,RFANKW,DMOTKW,EVKW,QCEVT,QCEVS,              /DSYSTD/ 7
     4                  QCEVL,TCMNEV                                            /DSYSTD/ 8
      REAL DSYSTD(39)                                                           /DSYSTD/ 9
      EQUIVALENCE (DSYSTD(1), SCGAS)                                            /DSYSTD/10
      common  /FNSYS/  ISKIPS, MSYSF(120)                                       /FNSYS/  2
      COMMON /FFUEL/ FFUEL, FurnAuxFuel, FurnAuxkW, PLRF                        /FFUEL/  2
      COMMON  /ENDUSE/ SUPPKW, HEATKW                                           HVAC27   1
      COMMON  /HRREP / Irb, Ihrp, Lrb, Lhrp, Nrb, Nhrp, IVTLIM(3,50),           HR       5
     &                 IGRPtr, IBRPtr, IRSch, IRSchT(5),                        HR       6
     &                 NHRTyp(3), ITBUF(3), ITBUFB(3), ITBUFE(3),               HR       7
     &                 IHREOF, ICDFLG                                           HR       8
      COMMON  /LOCALD/ STALAT, STALON, ITIMZ, BAZIM, BALTIT,                    /LOCALD/ 2
     1                 SSTALA, CSTALA, TSTALA, SBAZIM, CBAZIM                   /LOCALD/ 3
     +                ,BXORG,BYORG,SHCOEF,TP1,TP2,WSTP1,WSTP2,                  /LOCALD/ 4
     +                 WSHGT,WSHGTL(12),ISREFL,IHOLX                            HOLID1   2
      DIMENSION        LOCALD(32)                                               HOLID1   3
      EQUIVALENCE      (LOCALD(1),STALAT)                                       /LOCALD/ 7
      COMMON  /MISCD / TEMPS(4,9999),CONS(5),TEMPSL(9999),                      -048a   10
     1                 BLDGQH,BLDGQC,BLDGQL,BLDGP,BPMULT,                       /MISCD/  3
     $                 DBTMIN,DBTMAX,WMIN,WMAX,NSPZ(9999),                      -048a   11
     3                 DQ, DTP, DTR, DTS, FPI, PLRCC , POM, TC2, TDM,           /MISCD/  5
     4                 TRA,WCOL,WCOLM,WMM,YPI,KWBTU,BTUKW,UNFILD,Unusedm        RemPA   45
      REAL             KWBTU                                                    /MISCD/  7
      COMMON  /PLANTD/ QHMP,TMP,CFMP,QHPP,CFMPP,                                /PLANTD/ 2
     1                 QHZP,TZP,DHWPKW,DHWPLF,DHWQRP                            RemPA   46
      REAL             PLANTD(10)                                               RemPA   47
      EQUIVALENCE      (PLANTD(1), QHMP)                                        RemPA   48
      COMMON  /PTRPLT/ Ipm,Ilp,Ich,Ibl,Idw,Itw,Ipv,Ign,Itk,Ihx,                 PV       1
     &                 Iec,Ilm,Iem,Ifm,Ism,Icm,Imm,Imc,Igl,Isp2,                XFC2     1
     &                 Ispare(5),  Ipe,                                         HVAC19   3
     &                 Npm,Nlp,Nch,Nbl,Ndw,Ntw,Npv,Ngn,Ntk,Nhx,                 PV       2
     &                 Nec,Nlm,Nem,Nfm,Nsm,Ncm,Nmm,Nmc,Ngl,Nsp2,                XFC2     2
     &                 Nspare(5),  Npe,                                         HVAC19   6
     &                 Lpm,Llp,Lch,Lbl,Ldw,Ltw,Lpv,Lgn,Ltk,Lhx,                 PV       3
     &                 Lec,Llm,Lem,Lfm,Lsm,Lcm,Lmm,Lmc,Lgl,Lsp2,                XFC2     3
     &                 Lspare(5),  Lpe,                                         HVAC19   9
     &                 Jpm,Jlp,Jch,Jbl,Jdw,Jtw,Jpv,Jgn,Jtk,Jhx,                 PV       4
     &                 Jec,Jlm,Jem,Jfm,Jsm,Jcm,    Jmc,Jgl,                     HVAC19  11
     &                 Jpe, kpr, NumMeters, NumIntHX                            XFC1     1
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      COMMON /SHP   / QCRUN,QCLOAD,QCGAS,QCAUX,QCGSLD,QCGSUP,                   /SHP/    2
     1                QCWAS,QCWASU,QCGSAV,QCFAN,                                /SHP/    3
     2                QHRUN,QHLOAD,QHGAS,QHAUX,QHGSLD,QHGSUP,                   /SHP/    4
     3                QHWAS,QHWASU,QHGDFR,QHFAN,          CUR(25),              /SHP/    5
     4                GSAV1,GASV2,PCH,ISZCZ,GCAP(2),GEDB,QHDFRG,                -044c1   1
     5                GRPM,PLRSUP,CFMCYC,CLPLR,CFMVVT,QHZHP,PCCEDB,             /SHP/    7
     6                IHPREP,IHPOUT,IHPHRR,IHPHRN,IRST,IREN                     /SHP/    8
      COMMON /SHPZ  / QCRUNZ,QCLOADZ,QCGASZ,QCAUXZ,QCGSLDZ,QCGSUPZ,             /SHP/    9
     1                QCWASZ,QCWASUZ,QCGSAVZ,QCFANZ,                            /SHP/   10
     2                QHRUNZ,QHLOADZ,QHGASZ,QHAUXZ,QHGSLDZ,QHGSUPZ,             /SHP/   11
     3                QHWASZ,QHWASUZ,QHGDFRZ,QHFANZ                             /SHP/   12
      DIMENSION       SHP(60),SHPZ(20)                                          /SHP/   13
      EQUIVALENCE     (SHP,QCRUN),(SHPZ,QCRUNZ)                                 /SHP/   14
     1               ,(DFM1,CUR(18)),(DFM2,CUR(19)),(DFM3,CUR(20))              /SHP/   15
      COMMON /SSPDAT/  PLRCS,QCCKWS,QCCMPS,PLRHS,QHCKWS,QHCMPS                  /SSPDAT/ 2
     $                ,PLRFS,PLRFCS,PLRFHS,sspss                                /SSPDAT/ 3
     $                ,PLRCZ,QCCKWZ,QCCMPZ,PLRHZ,QHCKWZ,QHCMPZ                  /SSPDAT/ 4
     $                ,PLRFZ,PLRFCZ,PLRFHZ,sspsz                                /SSPDAT/ 5
     $                ,ISSPF,IWCCF,IPCCF,SSPSAV                                 /SSPDAT/ 6
      DIMENSION        SSPD(24)                                                 JJHfix   1
      EQUIVALENCE      (SSPD(1),PLRCS)                                          /SSPDAT/ 8
      COMMON  /SYSTD / TH,TC,TM,TR,QH,QC,QHZ,QCZ,QHB,QHP,QHUM,                  /SYSTD/  2
     1                 QDHUM,TCMIN,THMAX,QLSUM,QPSUM,CFM,CFMH,CFMC,             /SYSTD/  3
     2                 RCFM,ECFM,CINF,FON,HON,CON,BON,SCONS(3),PH,PC,           /SYSTD/  4
     3                 SKW,FANKW,unused1,WR,WM,WCOIL,WW,PO,D,                   -046f    1
     4                 FTEMP,TCR,QHR,RfanPumpKW,SGAS,SKWQH,SKWQC,QCLAT,         -131    23
     5                 SFKW,RFKW,FONNGT,WSURF,RWalkinQ,TSURF,TRh,               -131    24
     6                 CBF,CBF1,CBF2,EON,PLRCFM,PLRC,PLRH,QCM1,                 /SYSTD/  8
     7                 QCM2,QHM1,EIRM1,EIRM2,EIR,OFKW,QCT,QCS,                  /SYSTD/  9
     8                 WRMAX,WRMIN,CFMRAT,QdistG,QdistL,RON,QHT,                /SYSTD/ 10
     9                 TPOMIN,POMIN,QHSUP,QRSENS,QRLAT,QRREC,QRREJ,             /SYSTD/ 11
     1                 RCOMKW,RDEFKW,RAUXKW,ECFMP,CFMIN,CINFP,DT,DW,            /SYSTD/ 12
     2                 EWB,IC,NATTSP,Q,RETR,SLOAD,QLSUMP,T,TCHUM,TEND,          /SYSTD/ 13
     3                 TS,hgbmin,HPDefE,EconoOnly,TDuctEnv,                     -044e1   1
     4                 QCUNMT,CapRh,CapRph,CapRc                                HVAC25   3
      REAL             SYSTD(113)                                               HVAC19  13
      EQUIVALENCE      (SYSTD(1),TH)                                            RemPA   65
      COMMON  /TIME  / IDOY, IYR, IMO, IDAY, IHR,                               Time     4
     &                 ISCMO, ISCDAY, ISCHR, IDOW, ISCDOW, iDSdates(6),         -044e5   1
     &                 iTimeFlg, iDSFlg, iDDFlg, InitialFlg, LeapYr,            Time     6
     &                 CLOCK(10), MONDSC(13), MONLEN(12), MONSDA(12)            HR      12
      COMMON  /TROMWL/ SUMDTX,SUMDTY,QCTOT,QLC0,QGK0,QCGUES,QVNTBG,             /TROMWL/ 2
     1                 VOLVNT,AMF,UCHAN,UCHANC,HRGW,TAIRIN,TZONE,               /TROMWL/ 3
     2                 TGOUT,QCVG,QCVW,IVMODE,TFO,RHO,MWH,FILMU,MRX,CTRM        /TROMWL/ 4
     1    , TAVR, TGLASS, TUNDER, UNIN1                                         /TROMWL/ 5
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
      COMMON  /ZONED / EXCFM,FH,FC,CFMZ,QHBZ,QOVER,THZ,TCZ,ERMAX,ERMIN,         /ZONED/  2
     1                 TRY,FTD,CORINT,G0,G1,G2,G3,SIGMAG,TL,ZQHR,TAVE,          /ZONED/  3
     2                 ZQH,ZQC,FCHPS(15),ACFM,ZKW,TCMINZ,THMAXZ,                /ZONED/  4
     3                 ERMAXM,ERMINM,THR,CSSCND,CSSVEC,HENOW,QGWIN,             /ZONED/  5
     4                 QSNABT,QGOPWL,QGVEC,CFMCVT,SSFPT,CFMVNT,ZFANKW,          /ZONED/  6
     5                 ZKWCBT,ZKWHBT,ZCapRbbrd, XC,ZC,XH,ZH                     -044e2   7
      REAL ZONED(63)                                                            -044e2   8
      EQUIVALENCE (ZONED(1),EXCFM)                                              /ZONED/  9
      REAL  LSR(4)                                                              RESYS   29
      COMMON  /SSRESY/  IVENTF, XRAN                                            /SSRESY/ 2
     1  , CFMCV1, CFMCV2, DEL   , DQGVC1, DQGVNT, DTMIN , FANHTM, FLWMUL        /SSRESY/ 3
     2  , IAFTYP, ISSV  , IVDONE, IZP1RM, IZP1SS, MINH  , MOUH  , MRRFSV        /SSRESY/ 4
     3  , MRRVSF, MRY   , MRZ   , MSRFSV, MSRVSF, NADJ  , NCWCON, NDELT         /SSRESY/ 5
     4  , Q10   , QGVEC1, QGVEC2, QGVNT , QGWAL , QHBZNX, QIN   , QINXS         /SSRESY/ 6
     5  , QLWAL , QOUT  , QOUTXS, QPNX  , QSUNIN, QW    , SSVFP , T1T           /SSRESY/ 7
     6  , T1TB  , T2MAX , T2T   , T2TB  , T2TFV , TINNEW, TNEXT , TOTNEW        /SSRESY/ 8
     7  , UOT   , UVRMG , UVT   , VNTRM , ZDELMN, ZDELMX, ZMNEXT                /SSRESY/ 9
     1  , ECPLR(3), ERMXEC(4), TCMNEC(3), QCV, TVZ, NVCFMS, TNVCFMS             -045d    1
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                 IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                        /FILES/  3
     2               , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                   /FILES/  4
     3                 IHRREP(3), IHRPAS(2)                                     /FILES/  5
      COMMON  /REPORT/ IREPRT(4,37),IPRG,IUNIQV(100),IUNIQS(100),IUNIQL         HVAC14   4
      DIMENSION EVLSR(3)                                                        RESYS   33
      COMMON /WCTRL/   IwinReturn, Imsgflg                                      /WCTRL/  2
#ifndef _DLL                                                                 /* -048     1 */ 
      COMMON /WIN_MB/ MB_OK,MB_ICONSTOP,MB_ICONEXCLAMATION,MB_TASKMODAL,        -048     2
     &                MB_ICONINFORMATION                                        -048     3
#else                                                                        /* -048     4 */ 
      include 'msgbox.fi'                                                       -048     5
#endif                                                                       /* -048     6 */ 
      H(DB,W) = 0.24*DB + (1061.0+0.444*DB)*W                                   H        2
      V(DB,W,P) = 0.754*(DB+459.7)*(1.0+1.605*W)/P                              V        2
      PLRC = CON                                                                RESYS   36
      PLRH   = HON                                                              RESYS   37
      IVENTF = 0                                                                RESYS   38
      IEVAPF = 0                                                                RESYS   39
      EVAPTC = 0.                                                               RESYS   40
      EVAPWB = 0.                                                               RESYS   41
      VENTF  = 0.0                                                              RESYS   42
      OFKW   = 0.0                                                              RESYS   43
      SFKW   = 0.0                                                              RESYS   44
      FANKW  = 0.0                                                              RESYS   45
      TVZ    = 0.0                                                              RESYS   46
      SLOAD  = 0.0                                                              RESYS   47
      QGBB   = 0.0                                                              RESYS   49
      ISSPF  = 0                                                                RESYS   50
      IF((IREPRT(2,23).NE.0).OR.(IREPRT(2,27).NE.0))  ISSPF = 1                 IREPRT 209
C                                                                               RESYS   52
C        INITIALIZE DATA FOR EVAPORATIVE COOLER                                 RESYS   53
C                                                                               RESYS   54
C                                                                               RESYS   55
      QCV    = 0.0                                                              RESYS   56
      IF((<NATURAL-VENT-SCH> .EQ. 0) .OR. (<VENT-METHOD> .EQ. 0) .OR.           -42j     4
     $   ((<NATURAL-VENT-AC> .EQ. 0).AND.(<VENT-METHOD> .EQ. 1)))               -42j     5
     $   GO TO 505                                                              -42j     6
C              PICK UP SCHEDULE OF THE TEMP TO WHICH WE WANT TO                 RESYS   60
C              COOL IF WE ARE DOING COOLING WITH OPEN WINDOWS                   RESYS   61
      TVZ = SchVal(<VENT-TEMP-SCH>, TVZ)                                        Time   350
C              PICK UP THE SCHEDULE VALUE WTHAT TELLS WETHER WE                 RESYS   64
C              CAN USE OPEN WINDOWS FOR COOLING. THE VALUES MEAN-               RESYS   65
C                            0 = DO NOT USE NATURAL VENTING                     RESYS   66
C                            1 = USE NATURAL VENTING IF IT CAN HOLD SETPT       RESYS   67
C                           -1 = USE IF IT CAN HOLD SETPOINT AND THE            RESYS   68
C                                OUTSIDE ENTHALPY IS LESS THAN INSIDE           RESYS   69
      VENTF = SchVal(<NATURAL-VENT-SCH>, 0.)                                    Time   351
C     IF VENTING USED LAST HOUR SKIP                                            RESYS   73
      IF(<PAST-IVENTF> .EQ. 1) GOTO 310                                         RESYS   74
C       IF NO SCHEDULE SKIP                                                     RESYS   75
        IF (<OPEN-VENT-SCH> .GT. 0)  THEN                                       Time   352
          CALL DRAND( XRAN )                                                    Time   353
c              If random value > schedule, then no venting                      Time   354
          VENTF = SchSnap(-1, <OPEN-VENT-SCH>, XRAN, 1.)                        Time   355
        ENDIF                                                                   Time   356
  310 CONTINUE                                                                  RESYS   81
  505 CONTINUE                                                                  RESYS   82
C********************** run function : RESYS-0 *********************            RESYS   83
      IF( MSYSF(59) .NE. 0 )   CALL  FINTS( MSYSF(59), 0. )                     RESYS   84
C*******************************************************************            RESYS   85
C              SET ZP1 TO POINT TO FIRST ZONE ON THE SYSTEM                     RESYS   86
      ZP1    = ISZ                                                              RESYS   87
C                                                                               RESYS   88
C              LOOP THROUGH THE ZONES ON THE SYSTEM                             RESYS   89
C                                                                               RESYS   90
      DO 10 NZ = 1,NSZ                                                          RESYS   91
C              ZERO THE ZONE DATA COMMON BLOCK                                  RESYS   92
      DO 111 I=1,63                                                             -044e2 156
  111 ZONED(I) = 0.0                                                            RESYS   94
C              PICK UP ZP2                                                      RESYS   95
      ZP2    = <ZP2>                                                            RESYS   96
      QCVZ   = 0.0                                                              -42j     7
      VNTCFM = 0.0                                                              -42j     8
C              IF NOT THE CONTROL ZONE SKIP                                     RESYS   97
      IF(NZ .NE. 1)  GOTO 2                                                     RESYS   98
C              ERROR IF CONTROL ZONE IS SUNSPACE                                RESYS   99
      IF (<ISUNSP>.NE.1) GO TO 115                                              RESYS  100
      CALL MSGSIM(-1,0,0,0,0)                                                   RESYS  101
      WRITE(IOUTPT,112) (<ZONE-NAME>,II=1,8)                                    -42c   139
  112 FORMAT(14X,'The control ZONE (',8A4,') in a RESYS SYSTEM'/                -42c   140
     $       14X,'cannot be a sunspace.')                                       -42c   141
        call MessageBox( NULL, 'RESYS has SUNSPACE as CONTROL-ZONE -'           WinRet  84
     &  //' ABORTING'//char(0),'RESYS Errors'//char(0), MB_OK                   WinRet  85
     &  + MB_ICONSTOP+MB_TASKMODAL )                                            WinRet  86
        IwinReturn = 1                                                          WinRet  87
        RETURN                                                                  WinRet  88
  115 CONTINUE                                                                  RESYS  106
      TM     = <TNOW> + <SUPPLY-DELTA-T>*CONS(3)                                RESYS  107
      CONS(1) = (.24+.44*<PASTWR>)*60.0/V(TM,<PASTWR>,PATM)                     RESYS  108
      CONS(2) = 1061.0*60.0/V(TM,<PASTWR>,PATM)                                 RESYS  109
      CONS(3) = .3996/CONS(1)                                                   RESYS  110
C              SET THE LSR ARRAY TO 1.0 (FULL LOAD)                             RESYS  111
C              THIS WILL CONTAIN THE LOW SPEED MULTIPLIERS                      RESYS  112
C              1=CFML/CFMH  2=KWL/KWH  3=QHL/QHH  4=QCL/QCH                     RESYS  113
      DO 1 I=1,4                                                                RESYS  114
    1 LSR(I) = 1.0                                                              RESYS  115
C               Initialize evap cooler low-speed-ratios                         RESYS  116
      DO I=1,3                                                                  RESYS  117
        EVLSR(I) = 1.0                                                          RESYS  118
      ENDDO                                                                     RESYS  119
      <EVAP-CFM> = 0.                                                           RESYS  120
      IF((FON .EQ. 0.0) .OR. (<ZONE-TYPE> .NE. 1))  GOTO 3                      RESYS  121
      TCMIN  = TM                                                               RESYS  122
      THMAX  = TM                                                               RESYS  123
      <ERMAX> = 0.0                                                             RESYS  124
      <ERMIN> = 0.0                                                             RESYS  125
C                                                                               RESYS  126
      IF ((<HEAT-TEMP-SCH> .EQ. 0) .OR. (<COOL-TEMP-SCH> .EQ. 0)                RESYS  127
     $ .OR. (SchVal(<VENT-TEMP-SCH>, 1.) .GE. 0.))  GOTO 300                    Time   357
C                                                                               RESYS  129
C         ADJUST VENT SET TEMP (TVZ) ACCORDING TO PAST HEATING AND              RESYS  130
C         COOLING LOADS AND CURRENT HEATING AND COOLING SET TEMPS.              RESYS  131
C         NDH  = NUMBER OF DAYS OF HISTORY (MAX=4)                              RESYS  132
C         <HT-SUM>= SUM OF HEATING LOADS DURING PAST NDH DAYS                   RESYS  133
C         <CL-SUM>= SUM OF COOLING LOADS DURING PAST NDH DAYS                   RESYS  134
      NDH = 0.5 - SchVal(<VENT-TEMP-SCH>, 1.)                                   Time   358
      IF (NDH .GT. 4) NDH = 4                                                   Time   359
      HSET = SchVal(<HEAT-TEMP-SCH>, 1.)                                        Time   360
      CSET = SchVal(<COOL-TEMP-SCH>, 1.)                                        Time   361
      RATIO = <HT-SUM> / (<HT-SUM> + <CL-SUM> + 0.0001)                         RESYS  139
      TVZ = HSET + RATIO * (CSET - HSET)                                        RESYS  140
      IF (TVZ .LT. 70.0) TVZ = 70.0                                             RESYS  141
  300 CONTINUE                                                                  RESYS  142
C              SET COLD SUPPLY TEMPERATURE                                      RESYS  143
C                                                                               RESYS  144
C              IF COOLING IS OFF THEN SKIP                                      RESYS  145
      IF(CON .EQ. 0.0)  GOTO 410                                                RESYS  146
C               IF SWAMP-COOLER                                                 RESYS  147
      IF (<SWAMP-COOLER> .EQ. 1) THEN                                           RESYS  148
C               Find leaving conditions at full speed                           RESYS  149
          CALL EVAPDR(1.,<DIRECT-EFF>,1.,DBT,WBT,EFF,TCMIN,WBMIN)               RESYS  150
          EVAPTC = TCMIN                                                        RESYS  151
          EVAPWB = WBMIN                                                        RESYS  152
          II = 1                                                                RESYS  153
C              If no DX allowed set min supply temp and skip DX calc            RESYS  154
          IF(<GET-IT-INTO-SYS> .EQ. 0.)  THEN                                   RESYS  155
              TCMINZ = TCMIN                                                    RESYS  156
              GO TO 410                                                         RESYS  157
          ENDIF                                                                 RESYS  158
      ENDIF                                                                     RESYS  159
      EDB    = AMAX1(DBT,<COOL-FT-MIN>)                                         RESYS  160
      IF (IPCCF .gt. 0)  EDB = PCCEDB                                           -045h   65
      IF (<CONDENSER-TYPE> .eq. 3) THEN                                         -045h   66
        EWB = Max(<CL_COIL_EWB>, <COOL-FT-MIN>)                                 -045h   67
      ELSE                                                                      -045h   68
        EWB = Max(<CL_COIL_EWB>, <COOL-FT-MIN>-10.)                             -045h   69
      ENDIF                                                                     -045h   70
C              CALC ADJUSTED TOTAL CAP                                          RESYS  163
      QCM1   = CVAL(<COOL-CAP-FT>,EWB,EDB)                                      RESYS  164
      QCT    = <COOLING-CAPACITY>*QCM1                                          RESYS  165
C              ADJUSTED SENSIBLE                                                RESYS  166
      QCM2   = CVAL(<COOL-SH-FT>,EWB,EDB)                                       RESYS  167
      QCS    = AMAX1(0.0,<COOL-SH-CAP>*QCM2                                     -034   187
     $                     + CONS(1)*<SUPPLY-CFM>*(1.0-<COIL-BF>)               -034   188
     $                              *AMAX1(-20.0,AMIN1(20.0,TM-80.0)) )         -034   189
C              MAKE SURE SENSIBLE <= TOTAL                                      RESYS  170
      QCS    = AMIN1(QCT,QCS)                                                   RESYS  171
C              CALC MIN SUPPLY TEMP                                             RESYS  172
      TCMIN  = TM - (QCS/(CONS(1)*<SUPPLY-CFM>))                                RESYS  173
C              MAKE SURE IT IS NOT BELOW MINIMUM                                RESYS  174
C                                                                               RESYS  175
C                                                                               RESYS  176
C              SET THE HEATING SUPPLY TEMP                                      RESYS  177
C                                                                               RESYS  178
C              CALC HEATING CAPACITY                                            RESYS  179
  410 IF(<HEATING-CAPACITY>*HON .GE. -1.0)  GOTO 2                              RESYS  180
      QHT    = <HEATING-CAPACITY>                                               RESYS  181
C              IF NOT A HEAT-PUMP SKIP                                          RESYS  182
      THMXHP = 0.                                                               RESYS  183
      IF((<HEAT-SOURCE>.NE.4).AND.(<HEAT-SOURCE>.NE.9))  GOTO 420               RESYS  184
C              PICK UP MAX ELEC HEAT CAP                                        RESYS  185
      QHT    = <SUPP-HEAT-CAP>                                                  RESYS  186
C              IF IN ELEC HEAT MODE SKIP                                        RESYS  187
      IF(DBT .LT. <MIN-HP-T>)  GOTO 420                                         RESYS  188
C              ADD IN HEAT PUMP ADJUSTED CAPACITY                               RESYS  189
      QHM1   = CVAL(<HEAT-CAP-FT>,TM,DBT)                                       -131   311
      DFM1 = 0.0                                                                RESYS  191
      IF((DBT.LE.<DEFROST-T>).AND.(<DEFROST-FRAC-FT>.NE.0))                     RESYS  192
     1    DFM1 = CVAL(<DEFROST-FRAC-FT>,WBT,DBT)                                RESYS  193
      QHM1 = QHM1*(1.0-DFM1)                                                    RESYS  194
      QHPT   = <HEATING-CAPACITY>*QHM1                                          RESYS  195
      QHT     = QHPT                                                            RESYS  196
      IF(DBT .LE. <MAX-HSUPP-T>)  QHT = QHT + <SUPP-HEAT-CAP>                   RESYS  197
C              FOR HEAT-PUMPS, IF CONTROL ZONE, SAVE THE                        RESYS  198
C              MIN EXTRACTION RATE WITHOUT SUPP HEAT                            RESYS  199
      THMXHP  = TM - (QHPT/(CONS(1)*<SUPPLY-CFM>))                              RESYS  200
C              CALC MAX SUPPLY T                                                RESYS  201
  420 THMAX  = TM - (QHT/(CONS(1)*<SUPPLY-CFM>))                                RESYS  202
c                                                                               RESYS  203
c              adjust supply air temperature leaving ductwork for the           RESYS  204
c              conductive losses.                                               RESYS  205
      IF (<DUCTUA> .GT. 0.)  THEN                                               RESYS  206
        IZP1 = ZP1                                                              RESYS  207
        ZP1    = <DUCT-LOSS-ZONE>                                               RemPA  606
c              First, calc the duct temperature rise during cooling             RESYS  209
        <DUCT-DT> = <DUCTUA> * (<TNOW> - TCMIN)                                 RESYS  210
     1                       / (CONS(1)*<SUPPLY-CFM> + 0.5*<DUCTUA>)            RESYS  211
c              adjust cooling temp, do not let be below minimum                 RESYS  212
        TCMIN = AMAX1(TCMIN + <DUCT-DT>, <MIN-SUPPLY-T>)                        RESYS  213
c              now heating                                                      RESYS  214
        <HOT-DUCT-DT> = <DUCTUA> * (<TNOW> - THMAX)                             RESYS  215
     1                       / (CONS(1)*<SUPPLY-CFM> + 0.5*<DUCTUA>)            RESYS  216
c              adjust heating temp, do not let be above maximum                 RESYS  217
        THMAX = AMIN1(THMAX + <HOT-DUCT-DT>, <MAX-SUPPLY-T>)                    RESYS  218
        IF (THMXHP .NE. 0.)                                                     RESYS  219
     1    THMXHP = AMIN1(THMXHP + <HOT-DUCT-DT>, <MAX-SUPPLY-T>)                RESYS  220
      ZP1 = IZP1                                                                RESYS  221
      ENDIF                                                                     RESYS  222
c              extraction rates                                                 RESYS  223
      IF (THMXHP .NE. 0.)  ERMNHP =                                             RESYS  224
     1              AMIN1(0.0,CONS(1)*<CFMAX>*(<TNOW>-THMXHP))*PLRH             RESYS  225
C               Set cooling and heating maximum CFM for zone                    -131   312
    2 IF(<SWAMP-COOLER> .ne. 1)  THEN                                           -131   313
C               No evap cooler - set to design duct size                        -131   314
        CFMxc = <CFMAX>                                                         -131   315
        CFMxh = <CFMAX>                                                         -131   316
      ELSE                                                                      -131   317
C               Evap cooler - control zone                                      -131   318
        IF(NZ .eq. 1)  THEN                                                     -131   319
C               If combined evap/mech set to one with highest extraction        -131   320
          II = 1                                                                -131   321
          IF(<GET-IT-INTO-SYS> .ne. 0)  THEN                                    -131   322
            IF(QCS/(CONS(1)*<CFMAX>) .gt. (TM-EVAPTC))  THEN                    -131   323
              CFMxc = <CFMAX>                                                   -131   324
            ELSE                                                                -131   325
              CFMxc = <EVAP-CFMD>*(<CFMAX>/<SUPPLY-CFM>)                        -131   326
            ENDIF                                                               -131   327
          ELSE                                                                  -131   328
C               If not combined set to fraction of evap size                    -131   329
            CFMxc = <EVAP-CFMD>*(<CFMAX>/<SUPPLY-CFM>)                          -131   330
          ENDIF                                                                 -131   331
          CFMxh = <CFMAX>                                                       -131   332
        ELSE                                                                    -131   333
C               Evap cooler - slave zone                                        -131   334
C               If evap cooler on use it's CFM ratio, else use duct size        -131   335
          IF(<EVAP-CFM> .ne. 0.)  THEN                                          -131   336
            CFMxc = <EVAP-CFMD>*(<CFMAX>/<SUPPLY-CFM>)                          -131   337
          ELSE                                                                  -131   338
            CFMxc = <CFMAX>                                                     -131   339
          ENDIF                                                                 -131   340
          CFMxh = CFMxc                                                         -131   341
        ENDIF                                                                   -131   342
      ENDIF                                                                     -131   343
C               Set the maximum extraction rates based on zone flow/supply t's  -131   344
      <ERMAX> = AMAX1(0.0,CONS(1)*CFMxc*(<TNOW>-TCMIN))*PLRC                    -131   345
      <ERMIN> = AMIN1(0.0,CONS(1)*CFMxh*(<TNOW>-THMAX))*PLRH                    -131   346
      TCMINZ  = TCMIN                                                           RESYS  228
      THMAXZ  = THMAX                                                           RESYS  229
  430 CONTINUE                                                                  RESYS  230
C              PICK UP ZONE MULTIPLIER                                          RESYS  231
    3 ZMULT  = <MULTIPLIER>                                                     RESYS  232
c              sum pipe & duct losses                                           RESYS  233
      IF (ZP1 .EQ. <DUCT-LOSS-ZONE>)  THEN                                      RemPA  607
        QdistG = 0.                                                             RESYS  235
        QdistL = 0.                                                             RESYS  236
        DO  II=1,5                                                              -044c4  48
          QdistG = QdistG + AMAX1(<PIPE&DUCTLOSSES>, 0.)                        RESYS  238
          QdistL = QdistL + AMIN1(<PIPE&DUCTLOSSES>, 0.)                        RESYS  239
        ENDDO                                                                   RESYS  240
      ENDIF                                                                     RESYS  241
c                                                                               RESYS  242
C********************** run function : RESYS-1Z ********************            RESYS  255
      IF( MSYSF(60) .NE. 0 )   CALL  FINTS( MSYSF(60), 1. )                     RESYS  256
C*******************************************************************            RESYS  257
C                                                                               RESYS  258
C                            FLOAT TEMPERATURES FOR ZONES                       RESYS  259
C                                                                               RESYS  260
      JJ     = 1                                                                RESYS  261
C              ERMIN WILL BE THE MAXIMUM HEAT ADDITION RATE                     RESYS  262
      ERMIN  = 0.                                                               RESYS  263
C              ERMAX WILL BE THE MAXIMUM HEAT EXTRACTION RATE                   RESYS  264
      ERMAX  = 0.                                                               RESYS  265
C              PICK UP THE SPACE NUMBER FOR THIS ZONE                           RESYS  266
      P2     = <NZSPACE>                                                        RESYS  267
C              SINCE RETURN-AIR-PATH FOR RESYS SYSTEM IS DIRECT,                RESYS  268
C              ADD LIGHT-HEAT-TO RETURN TO ZONE LOAD.  THIS REQUIRES            RESYS  269
C              A SEPARATE HISTORY OF THE RETURN LOAD SO THAT THERE              RESYS  270
C              IS NO INTERFERENCE WITH THE REST OF THE ZONE HISTORY.            RESYS  271
      <QLIGHTRETURN> = 0.0                                                      RESYS  272
      <QPPAST2> = <QPPAST>                                                      RESYS  273
      <QPPAST> = <QPNOW>                                                        RESYS  274
      <QPNOW> = <QP>                                                            RESYS  275
C              IF VARIABLE TEMPERATURE IS ON SKIP                               RESYS  276
      IF(<VARIABLE-T> .GT. 0)  GO TO 500                                        RESYS  277
C              NO VARIABLE TEMP CALCULATION                                     RESYS  278
C                                                                               RESYS  279
      HENOW  = <QS>+<QPNOW>                                                     RESYS  280
      IF (ZP1 .EQ. <DUCT-LOSS-ZONE>)                                            RemPA  608
     1  HENOW = HENOW + (QdistG + QdistL) / ZMULT                               RESYS  282
C              CALC LOAD NO MET TO HOLD SETPOINT                                RESYS  283
      QOVER  = AMAX1(HENOW-<ERMAX>,0.)                                          RESYS  284
      QOVER  = AMIN1(HENOW-<ERMIN>,QOVER)                                       RESYS  285
C              MAKE SURE LOAD IS BETWEEN MIN AND MAX                            RESYS  286
      HENOW  = AMIN1(HENOW,<ERMAX>)                                             RESYS  287
      HENOW  = AMAX1(HENOW,<ERMIN>)                                             RESYS  288
C***                                                                            RESYS  289
      TLDS = <TLOADS>                                                           RESYS  290
C***                                                                            RESYS  291
      <TSET> = <TLOADS>                                                         RESYS  292
      IF (QOVER .GT. .01*<ERMAX>)  <IHROVERS>=1                                 RESYS  293
      IF (QOVER .LT. .01*<ERMIN>)  <IHROVERS>=1                                 RESYS  294
      GOTO 590                                                                  RESYS  295
  500 CONTINUE                                                                  RESYS  296
      CTRM   = 0.0                                                              RESYS  297
C              CHECK FOR VENTED TROMBE WALL                                     RESYS  298
      MTW    = <ITWBUFP>                                                        RESYS  299
      IF (MTW .LE. 0) GO TO 4                                                   RESYS  300
      TAIRIN = <TNOW>                                                           RESYS  301
      TZONE  = <TLOADS>                                                         RESYS  302
C              OBTAIN TROMBE WALL CONVECTIVE HEAT GAIN AND CONDUCTION           RESYS  303
C              HEAT GAINS.                                                      RESYS  304
      CALL DOETRM                                                               RESYS  305
C              QLC0 IS THE CONVECTIVE HEAT GAIN/LOAD FROM THE TROMBE            RESYS  306
C              WALL.  QGK0 IS THE CONDUCTION HEAT GAIN THROUGH THE              RESYS  307
C              TROMBE WALL.  OBTAIN THE TROMBE WALL CONDUCTION LOAD             RESYS  308
C              BY WEIGHTING THE HEAT GAIN.                                      RESYS  309
      QLK0   = <CONDUCTION-V0>* QGK0  + <CONDUCTION-V1>*<QGK1> +                RESYS  310
     1       <CONDUCTION-V2>*<QGK2> + <CONDUCTION-W1>*<QLK1> +                  RESYS  311
     2       <CONDUCTION-W2>*<QLK2>                                             RESYS  312
      CTRM   = QLC0 + QLK0 + <P1>*(<QLC1>+<QLK1>)                               RESYS  313
     1                   + <P2>*(<QLC2>+<QLK2>)                                 RESYS  314
    4 CONTINUE                                                                  RESYS  315
C                                                                               RESYS  316
C              CALCULATE THE TRANSFER ACROSS THE INTERNAL                       RESYS  317
C              PARTITIONS INTO THIS ZONE                                        RESYS  318
C            UA FOR COMMON WALLS BETW SUNSPACES AND REGULAR SPACES WILL BE      RESYS  319
C            ZERO AT THIS POINT.  CORRECTION TO F DUE TO CONDUCTION AND         RESYS  320
C            CONVECTIVE HEAT TRANSFER THRU THESE WALLS IS DONE SEPARATELY       RESYS  321
C            VIA A CALL BELOW TO SUBR SSFCOR                                    RESYS  322
C                                                                               RESYS  323
C              X WILL BE THE COMPONET FOR LAST HOUR                             RESYS  324
C              Y WILL BE THE COMPONET FOR TWO HOURS PAST                        RESYS  325
C              Z WILL  THREE                                                    RESYS  326
      X      = 0.                                                               RESYS  327
      Y      = 0.                                                               RESYS  328
      Z      = 0.                                                               RESYS  329
C              PICK UP THE NUMBER OF ATTACHMENTS                                RESYS  330
      IE     = <NATTCH>                                                         RESYS  331
C              IF NO ATTACHMENTS SKIP                                           RESYS  332
      IF(IE .EQ. 0) GOTO 510                                                    RESYS  333
C              LOOP THROUGH THE ATTACHMENTS                                     RESYS  334
      DO 520 J = 1,IE                                                           RESYS  335
C              CALC POINTER TO ATTACHMENT DATA                                  RESYS  336
      I1 = <IATTCH> + (J-1)*3                                                   RESYS  337
C              PICK UP NUM OF SPACE ON THE OTHER SIDE                           RESYS  338
      NATTSP = IA(I1)                                                           RESYS  339
C              CALC COMPONET FOR PREVIOUS HOURS                                 RESYS  340
      X      = X + AA(I1+1)*(TEMPS(1,NATTSP)-TEMPSL(NATTSP))                    RemPA  609
      Y      = Y + AA(I1+1)*(TEMPS(2,NATTSP)-TEMPSL(NATTSP))                    RemPA  610
      Z      = Z + AA(I1+1)*(TEMPS(3,NATTSP)-TEMPSL(NATTSP))                    RemPA  611
  520 CONTINUE                                                                  RESYS  344
C              CALC NET WEIGHTED ENERGY TRANSFERED                              RESYS  345
      CORINT = X + <P1>*Y + <P2>*Z                                              RESYS  346
  510 CONTINUE                                                                  RESYS  347
C                                                                               RESYS  348
      G0     = <G0>*<AREA> + (<CONDUCHR>+CONS(1)*<CFMINF>)                      RESYS  349
      G1     = <G1>*<AREA> + (<CONDUCHRPAST>+CONS(1)*<VIPAST>)*<P1>             RESYS  350
      G2     = <G2>*<AREA> + (<CONDUCHRPAST2>+CONS(1)*<VIPAST2>)*<P2>           RESYS  351
      G3     = <G3>*<AREA>                                                      RESYS  352
      SIGMAG = G0 + G1 + G2 + G3                                                RESYS  353
C                                                                               RESYS  354
C              OUTDOOR RESET BASEBOARD CALCULATION                              RESYS  355
C                                                                               RESYS  356
C              IF NOT OUTDOOR RESET OR SCHEDULED OFF SKIP                       RESYS  357
      IF((<BASEBOARD-CTRL> .NE. 2).OR.(BON .LE. .01))  GOTO 530                 RESYS  358
C              CALC BASEBOARD ENERGY FOR THE ZONE                               RESYS  359
      QHBZ   = BON*<BASEBOARD-RATING>                                           RESYS  360
C              INCREMENT TOTAL SYSTEM BASEBOARD ENERGY                          RESYS  361
      QHB    = QHB + QHBZ*<MULTIPLIER>                                          RESYS  362
  530 CONTINUE                                                                  RESYS  363
      F      = <TLOADS>*SIGMAG + (<QS>+<QPNOW>) - QHBZ                          RESYS  364
      F      = F + <P1>*(<QSPAST>+<QPPAST>-<QNOW>-<QBPAST>) - G1*<TNOW>         RESYS  365
      F      = F + <P2>*(<QSPAST2>+<QPPAST2>-<QPAST>-<QBPAST2>)                 RESYS  366
     1                                                      - G2*<TPAST>        RESYS  367
      F      = F - G3*<TPAST2>                                                  RESYS  368
      F = F + <FCOR>*CORINT + CTRM                                              RESYS  369
      IF (ZP1 .EQ. <DUCT-LOSS-ZONE>)                                            RemPA  612
     1  F = F + (QdistG + QdistL) / ZMULT                                       RESYS  371
      FTD    = F                                                                RESYS  374
C              CONTRIBUTION TO F FROM CONDUCTION (CSSCND) AND                   RESYS  375
C              CONVECTION (CSSVEC) ACROSS SUNSPACE INTERIOR WALLS               RESYS  376
      CSSCND = 0.                                                               RESYS  377
      CSSVEC = 0.                                                               RESYS  378
      IF (<ISUNSP>.NE.0) THEN                                                   -036   526
        CALL SSFCOR(1)                                                          -036   527
        IF(ABS(CSSCND+CSSVEC) .lt. G0*20.0)  THEN                               -036   528
          F = F + CSSCND + CSSVEC                                               -036   529
        ELSE                                                                    -036   530
          CALL MSGSIM(-1,JJ,JJ,JJ,JJ)                                           -036   531
          WRITE (IOUTPT,1310) (<ZONE-NAME>,II=1,8),IMO,IDAY,IHR,                Time   362
     &                        InitialFlg,                                       Time   363
     $                        CSSVEC,CSSCND,(CSSCND+CSSVEC)/G0                  -036   533
        ENDIF                                                                   -036   534
      IF( IwinReturn .ne. 0 ) RETURN                                            WinRet  89
 1310   FORMAT(                                                                 -036   535
     $ ' In routine TEMDEV for ZONE ',8A4,                                      -036   536
     $ ' on ',I2,'/',I2,' hr ',I2,' (InitialFlg = ',I2,')'                      Time   364
     $/'   SUNSPACE INTERIOR-WALL calculations produced bad values:'            -036   538
     $/'   CSSVEC (convection) = ',F12.0,' CSSVEC (conduction) = ',F12.0        -036   539
     $/'   This would cause a ',F5.0,' degree ZONE temperature change.'         -036   540
     $ '   Values are being ignored.'/'   Check wall definitions for',          -036   541
     $   ' errors and report this inp/lib/wth to DOE-2 support.')               -036   542
      ENDIF                                                                     -036   543
      FTD = F                                                                   RESYS  381
C              CALC ZONE TEMP IF NO HEAT OR COOL                                RESYS  382
      TRY    = F/G0                                                             RESYS  383
C              THZ AND TCZ ARE THE THERMOSTATS SETPOINTS THIS HOUR              RESYS  384
      THZ    = -999.0                                                           RESYS  385
      TCZ    =  999.0                                                           RESYS  386
      IF (<ISUNSP>.EQ.1) THEN                                                   RESYS  387
        <TPAST2> = <TPAST>                                                      RESYS  388
        <TPAST>  = <TNOW>                                                       RESYS  389
        <TNOW>   = TRY                                                          RESYS  390
C              SUNSPACE BASEBOARD HEATING                                       RESYS  391
        IF (<ZONE-TYPE>.EQ.1) THEN                                              RESYS  392
          CALL SSBASB(0)                                                        RESYS  393
          <TNOW> = <TNEW>                                                       RESYS  394
        END IF                                                                  RESYS  395
        GOTO 600                                                                RESYS  396
      ENDIF                                                                     RESYS  397
C********************** run function : RESYS-2Z ********************            RESYS  398
      IF( MSYSF(61) .NE. 0 )   CALL  FINTS( MSYSF(61), 2. )                     RESYS  399
C*******************************************************************            RESYS  400
C              IF THIS IS AN UNCONDITIONED ZONE SKIP                            RESYS  401
C                 ALSO SKIP IF PLENUMS NO ALLOWED                               RESYS  402
      IF(<ZONE-TYPE> .NE. 1)  GO TO 540                                         RESYS  403
C              IF FANS ARE OFF OR NO BASEBOARDS ON SKIP                         RESYS  404
      IBF    = 0                                                                RESYS  405
      IF((<BASEBOARD-RATING>.LT.0.0).AND.(<BASEBOARD-CTRL>.EQ.1).AND.           RESYS  406
     1   (HON.NE.0.0))  IBF    = 1                                              RESYS  407
      BBR    = 0.0                                                              RESYS  408
      IF(IBF .NE. 0)  BBR = <BASEBOARD-RATING>                                  RESYS  409
      IF((FON.EQ.0.0).AND.(IBF.EQ.0))  GOTO 540                                 RESYS  410
      IF((NZ.NE.1).AND.(IBF.EQ.0))  GOTO 5                                      RESYS  411
      THZ    = <THZ>                                                            RESYS  412
      TCZ    = <TCZ>                                                            RESYS  413
      THR    = <THROTTLING-RANGE>                                               RESYS  414
    5 CONTINUE                                                                  RESYS  415
C              MOD BY J. HIRSCH TO DEFAULT VENT-TEMP-SCH VALUE                  RESYS  416
      IF (TVZ .NE. 0.0) GOTO 12                                                 RESYS  417
          TVZ = THZ + THR                                                       RESYS  418
          IF (THZ .EQ. -999.0) TVZ = TCZ - THR                                  RESYS  419
   12 CONTINUE                                                                  RESYS  420
C                                                                               RESYS  421
C              CORRECT EXTRACTION PEAKS FOR TEMP CHANGE DURING HOUR             RESYS  422
      IF(FON .EQ. 0.0)  GOTO 14                                                 RESYS  423
C              ESTIMATE THE TEMP AT END OF HOUR WITH FULL CAPACITY              RESYS  424
      X      = CONS(1)*CFMxc*PLRC*0.5                                           -131   347
      TEND   = (F-<ERMAX>+X*<TNOW>)/(G0+X)                                      RESYS  426
C              IF THIS IS THE CONTROL ZONE DO NOT GO BELOW SETPOINT             RESYS  427
      IF((NZ .EQ. 1).AND.(TRY .GE. TCZ-THR))                                    RESYS  428
     1TEND   = AMAX1(TEND,TCZ-THR)                                              RESYS  429
C              DO NOT LET THE COOLING TURN INTO HEATING                         RESYS  430
      IF((NZ .EQ. 1).AND.(<ERMAX>.LE.X*(<TNOW>-TEND)))                          RESYS  431
     1<ERMAX> = X*(<TNOW>-TEND)                                                 RESYS  432
C              CORRECT MAX EXT FOR AVERAGE TEMP IN HOUR                         RESYS  433
      <ERMAX> = <ERMAX> - X*(<TNOW>-TEND)                                       RESYS  434
C              DO SAME FOR HEATING END                                          RESYS  435
      X      = CONS(1)*<CFMAX>*PLRH*0.5                                         -131   348
      TEND   = (F-<ERMIN>-BBR+X*<TNOW>)/(G0+X)                                  RESYS  437
C              IF THE IS CTRL ZONE WE DO NOT GO ABOVE THE SETPOINT              RESYS  438
      IF((NZ .EQ. 1).AND.(TRY .LE. THZ+THR))                                    RESYS  439
     1TEND    = AMIN1(TEND,THZ+THR)                                             RESYS  440
      IF((NZ.EQ.1).AND.(<ERMIN>+BBR.GT.X*(<TNOW>-TEND)))                        RESYS  441
     1<ERMIN> = X*(<TNOW>-TEND) - BBR                                           RESYS  442
      IF((NZ.NE.1).AND.(IBF.NE.0).AND.(TEND.GT.THZ+THR))                        RESYS  443
     1TEND  = AMAX1(THZ+THR,(F-<ERMIN>+X*<TNOW>)/(G0+X))                        RESYS  444
      <ERMIN> = <ERMIN> - X*(<TNOW>-TEND)                                       RESYS  445
   14 CONTINUE                                                                  RESYS  446
      IF((NZ .NE. 1) .AND. (IVENTF .EQ. 1))  GOTO 563                           -42j     9
      IF((NZ .NE. 1).AND.(PLRH+PLRC+FLOAT(IBF) .LT. 0.01))                      RESYS  448
     1GOTO 540                                                                  RESYS  449
      IF((NZ .NE. 1).AND.(PLRC .NE. 0.0))  GOTO 560                             RESYS  450
      IF((NZ .NE. 1).AND.(PLRH .NE. 0.0))  GOTO 550                             RESYS  451
C              IF IN HEATING RANGE SKIP                                         RESYS  452
      IF(TRY .LT. THZ+THR) GOTO 550                                             RESYS  453
      IF(NZ .NE. 1)  GOTO 540                                                   RESYS  454
C              IF IN COOLING RANGE SKIP                                         RESYS  455
      IF(TRY .GT. TCZ-THR) GOTO 560                                             RESYS  456
C              IF BELOW COOLING SETPOINT AND ABOVE VENTING SETPOINT             RESYS  457
C              AND VENTING ON SKIP                                              RESYS  458
      IF((VENTF.NE.0.0).AND.(TVZ.NE.0.0).AND.(TRY.GT.TVZ))                      RESYS  459
     1      GOTO 560                                                            RESYS  460
C              NO ACTIVE HEATING OR COOLING - ZONE FLOATS                       RESYS  461
  540 HENOW  = 0.0                                                              RESYS  462
  541 <TPAST2> = <TPAST>                                                        RESYS  463
      <TPAST> = <TNOW>                                                          RESYS  464
      <TNOW> = TRY                                                              RESYS  465
      <TSET> = THZ                                                              RESYS  466
      IF((TCZ-TRY) .LT. (TRY-THZ))  <TSET> = TCZ                                RESYS  467
      GOTO 590                                                                  RESYS  468
C              SET HEATING MODE                                                 RESYS  469
  550 <TSET> = THZ                                                              RESYS  470
      ERMIN  = <ERMIN>                                                          RESYS  471
      IF(NZ .NE. 1)  ERMAX = <ERMIN>                                            RESYS  472
      IF(IBF .EQ. 1)  ERMIN = ERMIN + <BASEBOARD-RATING>                        RESYS  473
      GOTO 570                                                                  RESYS  474
C                                                                               RESYS  475
C              COOLING MODE                                                     RESYS  476
C                                                                               RESYS  477
C              IF VENTING NOT ALLOWED SKIP                                      -42j    10
  560 IF(VENTF .EQ. 0.0)  GOTO 569                                              -42j    11
C              IF NOT THE CONTROL ZONE AND VENTING WAS NOT                      RESYS  482
C              USED IN THE CONTROL ZONE SKIP                                    RESYS  483
      IF((NZ.NE.1).AND.(IVENTF.NE.1))  GOTO 569                                 RESYS  484
C              IF NOT THE CONTROL ZONE SKIP                                     RESYS  485
      IF(NZ .NE. 1)  GOTO 563                                                   -42j    12
C              IF THE OUTSIDE TEMP IS TO HIGH SKIP                              RESYS  487
      IF(DBT .GE. <TNOW>)  GOTO 569                                             RESYS  488
C              IF ZONE TEMP IS ABOVE THROTTLING RANGE NO VENTING                RESYS  489
      IF(<TNOW> .GT. TCZ+THR)  GOTO 569                                         RESYS  490
C              IF AN ENTHALPY CHECK WAS REQUIRED                                RESYS  491
      IF((VENTF.LT.0.0).AND.(ENTHAL.GT.H(<TNOW>,<PASTWR>)))  GOTO 569           RESYS  492
C              CALC VENTING EXTRACTION RATE                                     RESYS  493
  563 VNTCFM = <NATURAL-VENT-AC>*<VOLUME>/60.                                   -42j    13
      IF (<VENT-METHOD> .EQ. 1)  GO TO 561                                      RESYS  495
C              OTHERWISE, FOR THE S-G METHOD                                    RESYS  496
      VNTCFM = <VENT-AREA>*SQRT(<WS-VENT-COEF>*<WS-VENT-COEF>                   RESYS  497
     1 *WNDSPD*WNDSPD + <STACK-VENT-COEF>*<STACK-VENT-COEF>                     -047a    2
     2 *ABS(<TNOW>-DBT))                                                        RESYS  499
      VMXCFM = <MAX-VENT-RATE>*<VOLUME>/60.                                     RESYS  500
      VNTCFM = AMIN1(VNTCFM,VMXCFM)                                             RESYS  501
  561 X = CONS(1)*VNTCFM*0.5                                                    RESYS  502
C              CALC TEMP IF FULL OPEN FOR FULL HOUR                             RESYS  503
      TEND   = (F-X*(<TNOW>-2.0*DBT))/(G0+X)                                    RESYS  504
C              CALC THE EXTRACTION TO REACH THIS POINT                          RESYS  505
      ERMAX  = X*((<TNOW>+TEND)-2.0*DBT)                                        RESYS  506
C              IF THIS IS NOT THE CONTROL ZONE WE ARE FORCED INTO VENTING       RESYS  507
      IF(NZ .NE. 1)  GOTO 562                                                   RESYS  508
C              IF THIS WILL NOT KEEP US IN THE COOLING THROTTLING               RESYS  509
C              RANGE THEN WE USE AIRCOND INSTEAD                                RESYS  510
C              IF CAN HOLD COOLING SETPOINT MUST USE MECHANICAL COOLING         RESYS  511
      IF(TEND .GT. TCZ+THR)  GOTO 569                                           RESYS  512
C              SET VENTING FLAG                                                 RESYS  513
      IVENTF = 1                                                                RESYS  514
      PLRH   = 0.0                                                              RESYS  516
      PLRC   = 0.0                                                              RESYS  517
C              CALC EXTRACTION TO GET TO THIS SETPOINT (LESS THAN MAX)          RESYS  518
  562 HENOW  = AMIN1(ERMAX,AMAX1(0.0,F-TVZ*G0))                                 RESYS  519
C              SAVE LOAD HANDLED WITH THE VENTING                               RESYS  520
      QCV    = QCV + HENOW*<MULTIPLIER>                                         RESYS  521
C              SAVE VENTING SETPOINT                                            RESYS  522
      <TSET> = TVZ                                                              RESYS  523
      GOTO 580                                                                  RESYS  524
  569 IF((NZ .EQ. 1).AND.(TRY .LT. TCZ-THR))  GOTO 540                          RESYS  525
      <TSET> = TCZ                                                              RESYS  526
      ERMAX  = <ERMAX>                                                          RESYS  527
      IF(NZ .NE. 1)  ERMIN = <ERMAX>                                            RESYS  528
  570 CONTINUE                                                                  RESYS  529
C              SOLVE FOR THE ZONE LOAD FIRST                                    RESYS  530
      S      = (ERMAX-ERMIN)/0.5                                                RESYS  531
      DENOM  = S + G0                                                           RESYS  532
      W      = .5*(ERMAX+ERMIN) - S*<TSET>                                      RESYS  533
      HENOW  = (G0*W + S*F)/DENOM                                               RESYS  534
C              MAKE SURE LOAD IS BETWEEN MIN AND MAX                            RESYS  538
      HENOW  = AMIN1(HENOW,ERMAX)                                               RESYS  539
      HENOW  = AMAX1(HENOW,ERMIN)                                               RESYS  540
C              CALC ZONE TEMP AND ADJUST HISTORY                                RESYS  541
  580 <TPAST2> = <TPAST>                                                        RESYS  542
      <TPAST> = <TNOW>                                                          RESYS  543
      <TNOW> = (F-HENOW)/G0                                                     RESYS  544
c              Zone overload this hour - dont count if within                   CCIG9    1
c              one degree of the edge of the throttling range.                  CCIG9    2
c              Check if zone temperature below heating throttling range         CCIG9    3
      IF (NZ .EQ. 1  .OR.  IBF .NE. 0)  THEN                                    CCIG9    4
        Tedge = THZ-THR - 1.0                                                   CCIG9    5
        IF (<TNOW> .LT. Tedge)  THEN                                            CCIG9    6
c              zone below heating throttling range - calculate the              CCIG9    7
c              extraction necessary to bring the zone to the edge of            CCIG9    8
c              the throttling range                                             CCIG9    9
          HEedge = F - Tedge*G0                                                 CCIG9   10
c              overload this hour                                               CCIG9   11
          QOVER = AMIN1(HEedge-HENOW, 0.)                                       CCIG9   12
        ENDIF                                                                   CCIG9   13
      ENDIF                                                                     CCIG9   14
c              check if zone temperature above cooling throttling range         CCIG9   15
      IF (NZ .EQ. 1)  THEN                                                      CCIG9   16
        Tedge = TCZ+THR + 1.0                                                   CCIG9   17
        IF (<TNOW> .GT. Tedge)  THEN                                            CCIG9   18
c              zone above cooling throttling range - calculate the              CCIG9   19
c              extraction necessary to bring the zone to the edge of            CCIG9   20
c              the throttling range                                             CCIG9   21
          HEedge = F - Tedge*G0                                                 CCIG9   22
c              overload this hour                                               CCIG9   23
          QOVER = AMAX1(HEedge-HENOW, 0.)                                       CCIG9   24
        ENDIF                                                                   CCIG9   25
      ENDIF                                                                     CCIG9   26
c                                                                               CCIG9   27
C                                                                               RESYS  545
  590 CONTINUE                                                                  RESYS  546
C                                                                               RESYS  547
C     SKIP IF NOT THE CONTROL ZONE                                              RESYS  548
      IF(NZ .NE. 1) GOTO 585                                                    RESYS  549
      IF (ABS(QOVER).GT.1.0 .AND. ABS(<TNOW>-<TSET>).GT.                        RESYS  550
     1    AMAX1(<THROTTLING-RANGE>*2.0,1.0))  <IHROVERS>=1                      RESYS  551
C     SKIP IF LOAD HISTORY NOT REQUIRED                                         RESYS  552
      IF ((<HEAT-TEMP-SCH> .EQ. 0) .OR. (<COOL-TEMP-SCH> .EQ. 0)                RESYS  553
     $ .OR. (SchVal(<VENT-TEMP-SCH>, 1.) .GE. 0.))  GOTO 585                    Time   365
C                                                                               RESYS  555
C              SAVE LOAD HISTORY FOR VENT SET TEMP CALC                         RESYS  556
C              NDH = NUMBER OF DAYS OF HISTORY (FROM VENT-TEMP-SCH)             RESYS  557
C              <HT-CL-HIST> = LOAD HISTORY (FOR NDH*24 HOURS)                   RESYS  558
C                                                                               RESYS  559
C     REMOVE OLDEST VALUE FROM HISTORY SUM                                      RESYS  560
      IV = <HIST-PTR> - (NDH * 24)                                              RESYS  561
      IF(IV .LT. 1) IV = IV + 96                                                RESYS  562
      IF(<HT-CL-HIST> .GT. 0.0)                                                 RESYS  563
     $  <CL-SUM> = <CL-SUM> - <HT-CL-HIST>                                      RESYS  564
      IF(<HT-CL-HIST> .LT. 0.0)                                                 RESYS  565
     $  <HT-SUM> = <HT-SUM> + <HT-CL-HIST>                                      RESYS  566
C     ADD CURRENT VALUE TO HISTORY SUM                                          RESYS  567
      IF(HENOW .GT. 0.0) <CL-SUM> = <CL-SUM> + HENOW                            RESYS  568
      IF(<CL-SUM> .LT. 1.0)  <CL-SUM> = 0.0                                     RESYS  569
      IF(HENOW .LT. 0.0) <HT-SUM> = <HT-SUM> - HENOW                            RESYS  570
      IF(<HT-SUM> .LT. 1.0)  <HT-SUM> = 0.0                                     RESYS  571
C     SAVE CURRENT VALUE AND ADVANCE POINTER                                    RESYS  572
      IV = <HIST-PTR>                                                           RESYS  573
      <HT-CL-HIST> = HENOW                                                      RESYS  574
      IV = IV + 1                                                               RESYS  575
      IF(IV .GT. 96)  IV = IV - 96                                              RESYS  576
      <HIST-PTR> = IV                                                           RESYS  577
C              SAVE HOURLY VALUES FOR DEBUGGING                                 RESYS  578
  585 CONTINUE                                                                  RESYS  579
      FCHPS(1) = FLOAT(IHR)                                                     RESYS  580
      FCHPS(2) = FLOAT(NDH)                                                     RESYS  581
      QCVZ = HENOW                                                              -42j    14
      FCHPS(5) = HSET                                                           RESYS  584
      FCHPS(6) = CSET                                                           RESYS  585
      FCHPS(8) = <HT-SUM>                                                       RESYS  587
      FCHPS(9) = <CL-SUM>                                                       RESYS  588
C                                                                               RESYS  595
C              THERMOSTATIC BASEBOARD CALCULATIONS                              RESYS  596
C                                                                               RESYS  597
      IF((<BASEBOARD-CTRL> .NE. 1).OR.(HENOW .GE. 0.0))  GOTO 600               RESYS  598
C              CALC ZONE BASEBOARD ENERGY                                       RESYS  599
      QHBZ   = HON*<BASEBOARD-RATING>                                           RESYS  600
      QHBZ   = AMAX1(QHBZ,HENOW-ERMAX)                                          RESYS  601
C              CALC NEW ZONE LOAD                                               RESYS  604
      HENOW  = HENOW - QHBZ                                                     RESYS  605
C              INCREMENT TOTAL SYSTEM BASEBOARD ENERGY                          RESYS  606
      QHB    = QHB + QHBZ*<MULTIPLIER>                                          RESYS  607
  600 CONTINUE                                                                  RESYS  608
C********************** run function : RESYS-3Z ********************            RESYS  609
      IF( MSYSF(62) .NE. 0 )   CALL  FINTS( MSYSF(62), 3. )                     RESYS  610
C*******************************************************************            RESYS  611
C              SAVE CURRENT ZONE LOAD                                           RESYS  612
      <QPAST> = <QNOW>                                                          RESYS  613
      <QNOW> = HENOW                                                            RESYS  614
      <QBPAST2> = <QBPAST>                                                      RESYS  615
      <QBPAST> = QHBZ                                                           RESYS  616
      IF (ZP1 .EQ. <DUCT-LOSS-ZONE>)  THEN                                      RemPA  613
        DO  II=1,5                                                              -044c4  49
          <PIPE&DUCTLOSSES> = 0.                                                RESYS  621
        ENDDO                                                                   RESYS  622
      ENDIF                                                                     RESYS  623
C              SAVE SPACE TEMP                                                  RESYS  624
      TEMPS(4,P2)=<TNOW>                                                        RemPA  614
      MTW = <ITWBUFP>                                                           RESYS  626
      IF (MTW .LE. 0)  GO TO 65                                                 RESYS  627
C              SAVE PAST HOURS T-W LOADS AND HEAT GAINS                         RESYS  628
      <QGK2> = <QGK1>                                                           RESYS  629
      <QGK1> =  QGK0                                                            RESYS  630
      <QLK2> = <QLK1>                                                           RESYS  631
      <QLK1> =  QLK0                                                            RESYS  632
      <QLC2> = <QLC1>                                                           RESYS  633
      <QLC1> =  QLC0                                                            RESYS  634
   65 CONTINUE                                                                  RESYS  635
C              SKIP UNNEEDED CALCS                                              RESYS  636
      IF(<ZONE-TYPE> .NE. 1)  GOTO 630                                          RESYS  637
C              IF BASEBOARDS ARE ELECTRIC                                       RESYS  638
      IF (<BASEBOARD-SOURCE>.EQ.1)  THEN                                        RESYS  639
        X      = QHBZ * KWBTU                                                   RESYS  640
        ZKW    = ZKW    - X                                                     RESYS  641
        SKWQH  = SKWQH  - X*ZMULT                                               RESYS  642
        JEM       = <HEAT-E-MZ>                                                 HVAC6  734
        <HEAT-EM> = <HEAT-EM> - X*ZMULT                                         HVAC6  735
      ENDIF                                                                     RESYS  644
      IF (<BASEBOARD-SOURCE>.LE.1)  QGBB   = QGBB - ZQH*ZMULT                   RESYS  645
C              IF BASEBOARDS ARE GAS OR OIL                                     RESYS  646
      IF((<BASEBOARD-SOURCE>.EQ.2).OR.(<BASEBOARD-SOURCE>.EQ.3))  THEN          RESYS  647
        CALL FURNAC(QHBZ,<BASEBOARD-RATING>,                                    RESYS  648
     $              <BASEBOARD-SOURCE>,ZMULT)                                   HVAC6  736
        JEM       = <AUX-E-MZ>                                                  HVAC6  737
        <AUX-EM>  = <AUX-EM> + FurnAuxkW                                        HVAC6  738
        JFM       = <HEAT-F-MZ>                                                 HVAC6  739
        <HEAT-FM> = <HEAT-FM> - FFUEL                                           HVAC6  740
        <AUX-FM>  = <AUX-FM>  + FurnAuxFuel                                     HVAC6  741
        QGBB    = QGBB - FFUEL                                                  HVAC6  742
      ENDIF                                                                     RESYS  651
      QLSUM  = QLSUM + <QL>*ZMULT                                               RESYS  652
      CINF   = CINF + <CFMINF>*ZMULT                                            RESYS  653
      IF(FON .EQ. 0.)  GOTO 630                                                 RESYS  654
      IF((NZ .NE. 1).OR.(IVENTF.NE.0)) GOTO 630                                 RESYS  655
C              ONLY CALC COOL PART LOAD IF INDEED WE ARE COOLING                RESYS  656
      PLRC   = 0.0                                                              RESYS  657
      IF(<QNOW> .GT. 0.0)  PLRC = AMAX1(0.0,<QNOW>/(<ERMAX>+1.0))               RESYS  658
      PLRH   = 0.0                                                              RESYS  659
C              If combined DX and evap check if the evap can do the cooling     RESYS  660
      II = 1                                                                    RESYS  661
      IF((PLRC .GT. 0.).AND.(<SWAMP-COOLER>.EQ.1))  THEN                        RESYS  662
        IF(<GET-IT-INTO-SYS>.EQ.1.)  THEN                                       RESYS  663
        EVQCS = CONS(1)*<EVAP-CFMD>*(<TNOW>-(EVAPTC+<DUCT-DT>))                 RESYS  664
        IF(EVQCS .GE. <QNOW>) THEN                                              RESYS  665
C               Check if low speed is enough                                    RESYS  666
          II = 2                                                                RESYS  667
          IF(<GET-IT-INTO-SYS> .NE. 0.) THEN                                    RESYS  668
            II = 4                                                              RESYS  669
            CALL EVAPDR(1.,<DIRECT-EFF>*<GET-IT-INTO-SYS>,1.,                   RESYS  670
     $                  DBT,WBT,EFF,TX,WX)                                      RESYS  671
            II = 2                                                              RESYS  672
            EVQCX = CONS(1)*<EVAP-CFMD>*<GET-IT-INTO-SYS>                       RESYS  673
     $                     *(<TNOW>-(TX+<DUCT-DT>))                             RESYS  674
            IF(EVQCX .GE. <QNOW>)  THEN                                         RESYS  675
              EVQCS = EVQCX                                                     RESYS  676
              EVAPTC= TX                                                        RESYS  677
              EVAPWB= WX                                                        RESYS  678
              DO II=2,4                                                         RESYS  679
                EVLSR(II-1) = <GET-IT-INTO-SYS>                                 RESYS  680
              ENDDO                                                             RESYS  681
            ENDIF                                                               RESYS  682
          ENDIF                                                                 RESYS  683
C               Calc PLR and then skip to end of zone calc's                    RESYS  684
          IEVAPF = 1                                                            RESYS  685
          TCMIN  = EVAPTC + <DUCT-DT>                                           RESYS  686
          TCMINZ = TCMIN                                                        RESYS  687
          PLRC   = <QNOW>/EVQCS                                                 RESYS  688
          <EVAP-CFM> = <EVAP-CFMD>*PLRC*EVLSR(1)                                RESYS  689
          GOTO 630                                                              RESYS  690
        ENDIF                                                                   RESYS  691
        ELSE                                                                    RESYS  692
          <EVAP-CFM> = <EVAP-CFMD>*PLRC*EVLSR(1)                                RESYS  693
          GOTO 630                                                              RESYS  694
        ENDIF                                                                   RESYS  695
      ENDIF                                                                     RESYS  696
      IF(PLRC .LE. 0.0)                                                         RESYS  697
     1PLRH   = AMAX1(0.0,AMIN1(1.0,<QNOW>/(<ERMIN>-1.0)))                       RESYS  698
C              GET THE HP PART LOAD RATIO FOR HEATING                           RESYS  699
      IF (PLRC.LE.0.0 .AND. (<HEAT-SOURCE>.EQ.4 .OR.                            RESYS  700
     1    <HEAT-SOURCE>.EQ.9)) THEN                                             RESYS  701
          PLRHP = AMAX1(0.0,AMIN1(1.0,<QNOW>/(ERMNHP-1.0)))                     RESYS  702
      ELSE                                                                      RESYS  703
          PLRHP = 0.0                                                           RESYS  704
      END IF                                                                    RESYS  705
  630 CONTINUE                                                                  RESYS  706
C              Set CFMZ for hourly reports                                      -131   349
      IF(<EVAP-CFM> .eq. 0.)  THEN                                              -131   350
        CFMZ   = (PLRC+PLRH)*<CFMAX>                                            -131   351
      ELSE                                                                      -131   352
        CFMZ   = (PLRC+PLRH)*<EVAP-CFMD>*(<CFMAX>/<SUPPLY-CFM>)                 -131   353
      ENDIF                                                                     -131   354
C********************** run function : RESYS-4Z ********************            RESYS  707
      IF( MSYSF(63) .NE. 0 )   CALL  FINTS( MSYSF(63), 4. )                     RESYS  708
C*******************************************************************            RESYS  709
c                                                                               HVAC1  620
c              save baseboard for circulation loop calcs                        HVAC1  621
      IF (<BBRD-LOOPZ> .NE. 0)  THEN                                            HVAC1  622
        <BBRD_EDB>   = TAVE                                                     HVAC1  623
        <BBRD_Q>     = QHBZ                                                     HVAC1  624
      ENDIF                                                                     HVAC1  625
      ZKW    = ZKW + <ZKW>                                                      RESYS  710
      <SKW> = <SKW> + ZKW*ZMULT                                                 RESYS  711
C              SUM END-USE VARIABLES FOR THIS ZONE                              RESYS  712
      ZMULT = <MULTIPLIER>                                                      RESYS  713
      IF((<IZNBUFP>.NE.0).AND.(IRSCH.NE.0))  CALL USERZR(ZP1,ZP2)               RESYS  715
      IF(IRPZON .NE. 0)  CALL RPTZON                                            RESYS  716
      ZP1    = ZP1 + NZD                                                        RESYS  717
   10 CONTINUE                                                                  RESYS  718
C              IF VENTING FLAG ON SKIP                                          RESYS  719
      IF(IVENTF .EQ. 0)  GOTO 26                                                RESYS  720
      PLRH   = 0.0                                                              RESYS  721
      PLRC   = 0.0                                                              RESYS  722
C              SAVE VENTING LOAD FOR REPORTING                                  RESYS  723
      QCZ    = QCV                                                              RESYS  724
      <PASTWR> = HUMRAT                                                         RESYS  725
      <CL_COIL_EWB> = WBT                                                       HVAC1  626
      GOTO 200                                                                  RESYS  727
C              DECIDE WETHER COMPRESSOR IS AT LOW OR HIGH SPEED                 RESYS  728
   26 IF(FON .EQ. 0.0)  GOTO 200                                                RESYS  729
      ZP1    = ISZ                                                              RESYS  730
      ZP2    = <ZP2>                                                            RESYS  731
      I      = 0                                                                RESYS  732
C              CALC THE SENSIBLE LOAD ON THE UNIT                               RESYS  733
      Q      = 0                                                                RESYS  734
      IF(PLRC .GT. 0.0)                                                         RESYS  735
     1  Q = CONS(1)*<SUPPLY-CFM>*(TM-(TCMIN-<DUCT-DT>))*PLRC                    RESYS  736
      IF(PLRH .GT. 0.0)                                                         RESYS  737
     1  Q = CONS(1)*<SUPPLY-CFM>*(TM-(THMAX-<HOT-DUCT-DT>))*PLRH                RESYS  738
      IF((Q .LE. 0.0).AND.(Q .GE. <LOW-SPEED-HEAT>*QHT)) I = 1                  RESYS  739
      IF((Q .GT. 0.0).AND.(Q .LE. <LOW-SPEED-COOL>*QCS)) I = 1                  RESYS  740
      IF((I .EQ. 0).OR.(<COMPRESSOR-TYPE>.NE.1))  GOTO 11                       RESYS  741
      DO 9 II=1,4                                                               RESYS  742
    9 LSR(II) = <LOW-SPEED-RATIOS>                                              RESYS  743
   11 CONTINUE                                                                  RESYS  744
C              FOR OFF RATED CFM                                                RESYS  745
      PLRCFM = <SUPPLY-CFM>/<RATED-CFM>                                         RESYS  746
c              store the duct loss for inclusion in the zone calc next hour     RESYS  747
c              loss is calculated relative to zone                              RESYS  748
      IF (<DUCTUA> .GT. 0.)  THEN                                               RESYS  749
        QLOSS = 0.                                                              RESYS  750
        IF ((PLRH .GE. 0.01) .AND. (HON .NE. 0.))  THEN                         RESYS  751
            QLOSS = -CONS(1) * <SUPPLY-CFM> * <HOT-DUCT-DT> * PLRH              RESYS  752
        ELSE                                                                    RESYS  753
          IF ((PLRC .GE. 0.01) .AND. (CON .NE. 0.))                             RESYS  754
     1      QLOSS = -CONS(1) * <SUPPLY-CFM> * <DUCT-DT>     * PLRC              RESYS  755
        ENDIF                                                                   RESYS  756
        <QDUCT> = QLOSS                                                         RESYS  757
        IF (InitialFlg .EQ. 0)  THEN                                            Time   366
          <DUCTLOSSMO> = <DUCTLOSSMO> + QLOSS                                   RESYS  759
          <DUCTLOSSYR> = <DUCTLOSSYR> + QLOSS                                   RESYS  760
        ENDIF                                                                   RESYS  761
      ENDIF                                                                     RESYS  762
C              IF HEAT REQUIRED SKIP                                            RESYS  763
      IF((PLRH .GE. 0.01).AND.(HON .NE. 0.0))  GOTO 15                          RESYS  764
C              IF COOL REQUIRED SKIP                                            RESYS  765
      IF((PLRC .GE. 0.01).AND.(CON .NE. 0.0))  GOTO 25                          RESYS  766
C                                                                               RESYS  767
C              NO LOAD CONDITION                                                RESYS  768
C                                                                               RESYS  769
      WM     = HUMRAT                                                           RESYS  770
      <PASTWR> = WM                                                             RESYS  771
      <CL_COIL_EWB> = WBT                                                       HVAC1  627
      GOTO 200                                                                  RESYS  773
C                                                                               RESYS  774
C              COOLING CALCULATIONS                                             RESYS  775
C                                                                               RESYS  776
C              ASSUME THAT THE COIL SURF CONDITION IS THAT AS IF IT             RESYS  777
C              WAS AT FULL LOAD                                                 RESYS  778
   25 TC     = TCMIN - <DUCT-DT>                                                RESYS  779
      II     = 1                                                                RESYS  780
      IF((<SWAMP-COOLER> .EQ. 1) .AND.                                          RESYS  781
     $   (<GET-IT-INTO-SYS>.EQ.0. .OR. IEVAPF.EQ.1))  THEN                      RESYS  782
          TM     = DBT                                                          RESYS  783
          TC     = TCMIN - <DUCT-DT>                                            RESYS  784
          QC     = 0.                                                           RESYS  785
          QCEVT  = 0.                                                           RESYS  786
          QCEVS  = CONS(1)*<EVAP-CFM>*(DBT-TC)                                  RESYS  787
          QCEVL  = -QCEVS                                                       RESYS  788
          WCOIL  = WFDBWB(TC,EVAPWB,PATM)                                       RESYS  789
          WM     = WCOIL                                                        RESYS  790
          DW     = QLSUM/(CONS(2)*AMAX1(<EVAP-CFM>,<CFM/ACH>))                  RESYS  791
          F      = CINF/AMAX1(<EVAP-CFM>,<CFM/ACH>)                             RESYS  792
          WR     = AMIN1( (WCOIL+DW+F*HUMRAT)/(1.+F),                           RESYS  793
     $                     WFUNC(<TNOW>,100.,PATM) )                            RESYS  794
          WW     = (HUMRAT-WCOIL)*<EVAP-CFM>*60./V(TM,WM,PATM)                  RESYS  795
          EVKW   = <EVAP-CL-KW>*EVLSR(2)*<EVAP-CFM>                             RESYS  796
          JEM       = <COOL-E-MS>                                               HVAC6  743
          <COOL-EM> = <COOL-EM> + EVKW                                          HVAC6  744
          DTON   = PLRC                                                         RESYS  798
          GO TO 200                                                             RESYS  799
      END IF                                                                    RESYS  800
      IF (<CONDENSER-TYPE> .eq. 3) THEN                                         -045h   71
        EWB = Max(<CL_COIL_EWB>, <COOL-FT-MIN>)                                 -045h   72
      ELSE                                                                      -045h   73
        EWB = Max(<CL_COIL_EWB>, <COOL-FT-MIN>-10.)                             -045h   74
      ENDIF                                                                     -045h   75
      CBF1   = CVAL(<COIL-BF-FT>,EWB,EDB)                                       RESYS  802
      CBF2   = CVAL(<COIL-BF-FCFM>,PLRCFM,PLRCFM)                               RESYS  803
      CBF    = AMIN1(AMAX1(<COIL-BF>*CBF1*CBF2,0.001),1.0)                      -113    26
      WMSAT = WFUNC(TM,100.,PATM)                                               -113    27
      TSURF  = (TC-CBF*TM)/(1.0-CBF)                                            RESYS  805
      WSURF  = WFUNC(TSURF,100.,PATM)                                           RESYS  806
C                                                                               RESYS  807
C              ASSUME THE FANS CYCLE ON AND OFF.                                RESYS  808
C                                                                               RESYS  809
C              CALC FAN ENERGY                                                  RESYS  810
      SFKW   = <SUPPLY-KW>*PLRC                                                 RESYS  811
      CFM    = <SUPPLY-CFM>*PLRC                                                RESYS  812
      OFKW  = 0.0                                                               RESYS  813
C              CALC ROOM LATENT LOAD (IN LBS WTR/LB AIR)                        RESYS  814
      DW     = QLSUM/(CONS(2)*AMAX1(<SUPPLY-CFM>*PLRC,<CFM/ACH>))               RESYS  815
C              CALC INFILTRATION AIR RATIO                                      RESYS  816
      F      = CINF/AMAX1(<SUPPLY-CFM>*PLRC,<CFM/ACH>)                          RESYS  817
C              SPECIAL WM GUESS FOR NO OUTSIDE AIR CASE                         RESYS  818
      WM     = HUMRAT + DW                                                      RESYS  819
      IF(F .GT. 0.01)                                                           RESYS  820
     1WM     = (F*HUMRAT+DW)/F                                                  RESYS  821
      WM = AMIN1(WMSAT,WM)                                                      -113    28
      WCOIL  = WM                                                               RESYS  822
C              IF MIX AIR HUMIDITY IS LEES THAN COIL SURFACE                    RESYS  823
C              CONDITION NO MOISTURE REMOVAL TAKES PLACE (SKIP)                 RESYS  824
      IF(WM .LE. WSURF)  GO TO 7                                                RESYS  825
C              SOLVE FOR HUMIDITIES                                             RESYS  826
      WR     = ((1.0-CBF)*WSURF+DW+F*HUMRAT)/(1.0+F-CBF)                        RESYS  827
      WR = AMIN1(WMSAT,WR)                                                      -113    29
      WM     = WR                                                               RESYS  828
      WCOIL  = CBF*WM + (1.0-CBF)*WSURF                                         RESYS  829
      WR     = WM                                                               RESYS  830
C              CALC UNIT COOLING LOAD.                                          RESYS  831
    7 CONTINUE                                                                  RESYS  832
      QC     = (TM-(TCMIN-<DUCT-DT>))*CONS(1)*<SUPPLY-CFM>*PLRC                 RESYS  833
C              THEN ANY MOISTURE REMOVAL INCREASES THE LOAD                     RESYS  834
      WW     = AMAX1(0.0,WM-WCOIL)*CONS(2)*<SUPPLY-CFM>*PLRC/1061.0             RESYS  835
      QC     = QC + WW*1061.0                                                   RESYS  836
      QCLAT  = WW*1061.0                                                        RESYS  837
C              SAVE WETBULB FOR NEXT HOUR                                       RESYS  838
      <CL_COIL_EWB> = WBFS(TM,WM,PATM)                                          HVAC1  629
      IF (<CONDENSER-TYPE> .eq. 3) THEN                                         -045h   76
        EWB = Max(<CL_COIL_EWB>, <COOL-FT-MIN>)                                 -045h   77
      ELSE                                                                      -045h   78
        EWB = Max(<CL_COIL_EWB>, <COOL-FT-MIN>-10.)                             -045h   79
      ENDIF                                                                     -045h   80
      <PASTWR> = WM                                                             RESYS  841
      IF(IHPREP .NE. 0)  THEN                                                   RESYS  842
        QCFAN  = SFKW*BTUKW                                                     RESYS  843
      ENDIF                                                                     RESYS  844
      IF(<HEAT-SOURCE> .EQ. 9)  THEN                                            RESYS  845
        CALL GHPPWR(QC,TM,EWB,CFM,1)                                            RESYS  846
      ELSE                                                                      RESYS  847
        IF(DBT .GE. <OUTSIDE-FAN-T>)  THEN                                      RESYS  848
          OFKW = <OUTSIDE-FAN-ELEC>*<COOLING-CAPACITY>*0.001                    RESYS  849
        ENDIF                                                                   RESYS  850
        IF(IPCCF .EQ. 1)  THEN                                                  RESYS  851
          OFKW   = OFKW + <EVAP-PCC-ELEC>*<COOLING-CAPACITY>*0.001              RESYS  852
        ENDIF                                                                   RESYS  853
        IF(<OUTSIDE-FAN-MODE> .EQ. 1) OFKW = OFKW*PLRC                          RESYS  854
C                RECAL CAPACITY FOR GOOD ELEC CALC                              RESYS  855
        QCM1   = CVAL(<COOL-CAP-FT>,EWB,EDB)                                    RESYS  856
        QCT    = <COOLING-CAPACITY>*QCM1                                        RESYS  857
C                CALC THE EIR ADJUSTMENT FACTORS                                RESYS  858
        EIRM1  = CVAL(<COOL-EIR-FT>,EWB,EDB)                                    RESYS  859
C                PART LOAD                                                      RESYS  860
        PLRC   = QC/QCT                                                         RESYS  861
        EIRM2  = CVAL(<COOL-EIR-FPLR>,PLRC,PLRC)                                RESYS  862
        EIR    = <COOLING-EIR>*EIRM1*EIRM2*LSR(2)                               -039    31
        SKWQC  = QCT*EIR*KWBTU + OFKW                                           RESYS  865
c              if desuperheat available for DHW, calculate amount               HVAC13  63
        IF (<HTREC-DW-HEATER> .GT. 0)  THEN                                     HVAC14  85
          JDW = <HTREC-DW-HEATER>                                               HVAC14  86
          CUR(6) = CVAL(<COOL-WH-FT>,EWB,EDB)                                   HVAC13  66
          QCWAS  = -CUR(6)*<COOL-WASTE-HEAT>*(QC+QCT*EIR)                       HVAC13  67
          QCWASU = AMAX1(QCWAS, AMIN1(0., <dw;Qask>-<dw;Q_RECVR>))              HVAC16 129
          <dw;Q_RECVR> = <dw;Q_RECVR> + QCWAS                                   HVAC16 130
        END IF                                                                  HVAC13  70
        IF(IHPREP .NE. 0)  THEN                                                 RESYS  872
          QCRUN  = PLRC                                                         RESYS  873
          QCLOAD = QC                                                           RESYS  874
          QCGAS  = QCT*EIR                                                      RESYS  875
          QCAUX  = OFKW*BTUKW                                                   RESYS  876
        ENDIF                                                                   RESYS  877
        IF(ISSPF .NE. 0) THEN                                                   RESYS  878
          PLRCS  = PLRC                                                         RESYS  879
          QCCKWS = SKWQC - OFKW                                                 RESYS  880
          QCCMPS = QC                                                           RESYS  881
        ENDIF                                                                   RESYS  882
        <SKW>  = <SKW>  + SKWQC                                                 RESYS  883
        JEM        = <COOL-E-MS>                                                HVAC6  745
        <COOL-EM>  = <COOL-EM> + (SKWQC-OFKW)                                   HVAC6  746
        JEM        = <HTREJ-E-MS>                                               HVAC6  747
        <HTREJ-EM> = <HTREJ-EM> + OFKW                                          HVAC6  748
      ENDIF                                                                     RESYS  886
      GO TO 200                                                                 RESYS  887
   15 CONTINUE                                                                  RESYS  888
C                                                                               RESYS  889
C              CALCULATE UNIT HEATING ENERGY                                    RESYS  890
C                                                                               RESYS  891
C              CALC LATENT GAIN IN SPACE                                        RESYS  892
      DW     = QLSUM/(CONS(2)*<SUPPLY-CFM>*PLRH)                                RESYS  893
C              CALC INFILTRATION RATIO                                          RESYS  894
      F      = CINF/(<SUPPLY-CFM>*PLRH)                                         RESYS  895
C              WM EQUALS OUTSIDE IF NO SPACE GAIN                               RESYS  896
      WM     = HUMRAT                                                           RESYS  897
      IF(F .GT. 0.1)  WM = HUMRAT + DW/F                                        RESYS  898
      <PASTWR> = WM                                                             RESYS  899
      <CL_COIL_EWB> = WBFS(TM,WM,PATM)                                          HVAC1  631
      QH     = (TM-(THMAX-<HOT-DUCT-DT>))*CONS(1)*<SUPPLY-CFM>*PLRH             RESYS  901
C              SAVE HEATING LOAD FOR REPORTING                                  RESYS  902
      QHZ    = QH                                                               RESYS  903
      IFUEL  = <HEAT-SOURCE>                                                    RESYS  904
C              IF HP, SKIP                                                      RESYS  905
      IF (IFUEL.EQ.4 .OR. IFUEL.EQ.9) GOTO 16                                   RESYS  906
      SFKW   = <SUPPLY-KW>*PLRH                                                 RESYS  907
      CFM    = <SUPPLY-CFM>*PLRH                                                RESYS  908
      GOTO 19                                                                   RESYS  909
   16 CONTINUE                                                                  RESYS  910
C              CALL HEAT-PUMP SIMULATION                                        RESYS  911
      SFKW   = <SUPPLY-KW>*PLRHP                                                RESYS  912
      CFM    = <SUPPLY-CFM>*PLRHP                                               RESYS  913
      IF(IHPREP .NE. 0)  THEN                                                   RESYS  914
        QHFAN  = SFKW*BTUKW                                                     RESYS  915
      ENDIF                                                                     RESYS  916
      IF(<HEAT-SOURCE> .EQ. 9)  THEN                                            RESYS  917
        QHZHP = 0.0                                                             RESYS  918
        IF(<BASEBOARD-SOURCE> .EQ. 9)  THEN                                     RESYS  919
          QHZHP = QHB                                                           RESYS  920
        ENDIF                                                                   RESYS  921
        IF((QHZHP .LE. 0.).AND.(QCRUN .GT. 0.))  THEN                           RESYS  922
          QCWASU = AMAX1(QHZHP,QCWAS)                                           RESYS  923
          QHZHP  = QHZHP - QCWASU                                               RESYS  924
        ENDIF                                                                   RESYS  925
        CALL GHPPWR(QH,TM,<CL_COIL_EWB>,CFM,2)                                  HVAC1  632
      ELSE                                                                      RESYS  927
        call HPUNIT(QH,<HEATING-CAPACITY>,LSR(2),LSR(3),SKWQH,SLOAD,1.0)        RESYS  928
        JEM       = <HEAT-E-MS>                                                 HVAC6  749
        <HEAT-EM> = <HEAT-EM> + HEATKW                                          HVAC6  750
        JEM       = <SUPP-E-MS>                                                 HVAC6  751
        <SUPP-EM> = <SUPP-EM> + SUPPKW                                          HVAC6  752
        IF(DBT .GE. <OUTSIDE-FAN-T>)  THEN                                      RESYS  929
          OFKW = <OUTSIDE-FAN-ELEC>*<COOLING-CAPACITY>*0.001                    RESYS  930
          IF(<OUTSIDE-FAN-MODE> .EQ. 1) OFKW = OFKW*PLRH                        RESYS  931
        ENDIF                                                                   RESYS  932
        QHGSLD = SLOAD                                                          RESYS  933
        SKWQH  = SKWQH  + OFKW                                                  RESYS  934
        JEM        = <HTREJ-E-MS>                                               HVAC6  753
        <HTREJ-EM> = <HTREJ-EM> + OFKW                                          HVAC6  754
        <SKW>  = <SKW>  + SKWQH                                                 RESYS  936
      ENDIF                                                                     RESYS  937
   19 CONTINUE                                                                  RESYS  938
  200 CONTINUE                                                                  RESYS  939
      IF(IVENTF .NE. 0)  GOTO 170                                               RESYS  940
      JEM       = <VENT-E-MS>                                                   HVAC6  755
      <VENT-EM> = <VENT-EM> + SFKW                                              HVAC6  756
      FANKW  = FANKW  + SFKW                                                    RESYS  942
  170 <SKW> = <SKW> + SFKW                                                      RESYS  943
C              If only a EVAP cooler (no DX) then skip crankcase calc           RESYS  944
      II = 1                                                                    RESYS  945
      IF((<SWAMP-COOLER>.EQ.1).AND.(<GET-IT-INTO-SYS>.EQ.0.))  GO TO 210        RESYS  946
C                                                                               RESYS  947
      IF(DBT.GT.<CRANKCASE-MAX-T>)  GOTO 210                                    RESYS  948
C              Set T(otal runtime of compressor) using compressor values        -042f   82
C              PLRC for cooling and PLRH for heating, but ignore PLRC if        -042f   83
C              an evap cooler was running                                       -042f   84
      T      = PLRC                                                             -042f   85
      II = 1                                                                    -042f   86
      IF((<SWAMP-COOLER>.EQ.1).AND.(<GET-IT-INTO-SYS>.NE.1.).AND.               -042f   87
     $   (IEVAPF.EQ.1))  T = 0.                                                 -042f   88
      IF(<HEAT-SOURCE> .EQ. 4)  T = T + PLRH                                    -042f   89
      T      = <CRANKCASE-HEAT>*AMAX1(0.0,AMIN1(1.0,1.0-T))                     RESYS  954
      <SKW>  = <SKW> + T                                                        RESYS  955
      JEM       = <AUX-E-MS>                                                    HVAC6  757
      <AUX-EM>  = <AUX-EM>  + T                                                 HVAC6  758
      IF(<HEAT-SOURCE> .EQ. 9)  T = QCRUN + QHRUN                               RESYS  957
      IF((PLRC.GT.0.0).OR.(<HEAT-SOURCE>.LT.4)) THEN                            RESYS  958
          SKWQC  = SKWQC + T                                                    RESYS  959
          QCAUX  = QCAUX + T*BTUKW                                              RESYS  960
      ENDIF                                                                     RESYS  961
      IF((<HEAT-SOURCE> .EQ. 4).OR.(<HEAT-SOURCE> .EQ. 9))  THEN                RESYS  962
        IF(PLRH .GT. 0.0)  THEN                                                 RESYS  963
            SKWQH  = SKWQH + T                                                  RESYS  964
            QHAUX  = QHAUX + T*BTUKW                                            RESYS  965
        ENDIF                                                                   RESYS  966
        IF(PLRC+PLRH .EQ. 0.0) THEN                                             RESYS  967
            SKWQH  = SKWQH + T*0.5                                              RESYS  968
            QHAUX  = QHAUX + T*0.5*BTUKW                                        RESYS  969
            SKWQC  = SKWQC + T*0.5                                              RESYS  970
            QCAUX  = QCAUX + T*BTUKW*0.5                                        RESYS  971
        ENDIF                                                                   RESYS  972
      ENDIF                                                                     RESYS  973
  210 CONTINUE                                                                  RESYS  976
      IF(IHPREP .NE. 0)  THEN                                                   RESYS  977
        IF(<BASEBOARD-SOURCE> .NE. 9)  THEN                                     RESYS  978
          QHGSLD = QHGSLD + QHB                                                 RESYS  979
          QHGSUP = QHGSUP + QGBB                                                RESYS  980
        ENDIF                                                                   RESYS  981
      ENDIF                                                                     RESYS  982
c              circulation loop load, if attached                               HVAC1  633
      IF (<HEAT-SOURCE> .LT. 0)  THEN                                           HVAC1  634
        <HT_COIL_CFM>   = <SUPPLY-CFM>                                          HVAC1  635
        <HT_COIL_EDB>   = TM                                                    HVAC1  636
        <HT_COIL_CYCLE> = PLRH                                                  HVAC1  637
        <HT_COIL_Q>     = QH                                                    HVAC1  638
        <BBRD_EDB>      = TAVE                                                  HVAC1  639
        <BBRD_Q>        = QHBZ                                                  HVAC1  640
      ENDIF                                                                     HVAC1  641
C             ASSIGN SUPPLEMENTAL HEAT TO CORRECT SOURCE                        RESYS 1000
C             IF HEAT SOURCE NOT HEAT PUMP, SKIP                                RESYS 1001
      IF(<HEAT-SOURCE> .NE. 4) GO TO 75                                         RESYS 1002
C             IF SUPP SOURCE NOT FURNACE SKIP                                   RESYS 1003
      IF((<SUPP-SOURCE> .NE. 2) .AND. (<SUPP-SOURCE> .NE. 3)) GO TO 71          RESYS 1004
        CALL FURNAC(SLOAD, <SUPP-HEAT-CAP>, <SUPP-SOURCE>, 1.0)                 RESYS 1005
        QHGSUP = -FFUEL                                                         HVAC6  759
        JEM       = <AUX-E-MS>                                                  HVAC6  760
        <AUX-EM>  = <AUX-EM>  + FurnAuxkW                                       HVAC6  761
        JFM       = <SUPP-F-MS>                                                 HVAC6  762
        <SUPP-FM> = <SUPP-FM> - FFUEL                                           HVAC6  763
        <AUX-FM>  = <AUX-FM> + FurnAuxFuel                                      HVAC6  764
        GO TO 75                                                                RESYS 1010
C             IF NO SUPPLEMENTAL HEAT LOAD, THEN SKIP                           RESYS 1011
   71 CONTINUE                                                                  RESYS 1012
      IF(SLOAD .GE. -1.0) GO TO 75                                              RESYS 1013
C             IF SUPP SOURCE IS ELECTRIC                                        RESYS 1014
      IF(<SUPP-SOURCE> .EQ. 1)  THEN                                            RESYS 1015
        X      = SLOAD * KWBTU                                                  RESYS 1016
        QHGSUP = -SLOAD                                                         RESYS 1017
        SKWQH  = SKWQH  - X                                                     RESYS 1018
        <SKW>  = <SKW>  - X                                                     RESYS 1019
        JEM       = <SUPP-E-MS>                                                 HVAC6  765
        <SUPP-EM> = <SUPP-EM> - X                                               HVAC6  766
      ENDIF                                                                     RESYS 1021
C             supplemental circulation loop load, if attached                   HVAC1  642
      IF(<SUPP-SOURCE> .LT. 0)  THEN                                            HVAC1  643
        <HT_COIL_CFM>   = <SUPPLY-CFM>                                          HVAC1  644
        <HT_COIL_EDB>   = TM - AMIN1(0.,QH-SLOAD)                               HVAC1  645
     $                                    / (CONS(1)*<SUPPLY-CFM>*PLRHP)        HVAC1  646
        <HT_COIL_CYCLE> = PLRHP                                                 HVAC1  647
        <HT_COIL_Q>     = <HT_COIL_Q> + SLOAD                                   HVAC1  648
      ENDIF                                                                     HVAC1  649
   75 CONTINUE                                                                  HVAC1  650
      QHP    = 0.0                                                              RESYS 1034
C                                                                               RESYS 1035
C ---                                                                           RESYS 1036
C                                                                               RESYS 1037
  749 CONTINUE                                                                  RESYS 1038
C                                                                               RESYS 1039
      <PASTPLRC> = PLRC                                                         RESYS 1040
      <PASTWM>   = WR                                                           RESYS 1041
      <PAST-IVENTF> = IVENTF                                                    RESYS 1042
C                                                                               RESYS 1043
C              SAVE HEATING FAN ENERGY FOR SPECIAL REPORT AS PREHEAT            RESYS 1044
      IF(PLRH .GT. 0.0)  QHP = SFKW*BTUKW                                       RESYS 1045
c                                                                               DWRECV  97
c              Recover gas heat-pump waste heat to domestic water heater        DWRECV  98
      IF (<HTREC-DW-HEATER> .GT. 0  .AND.  <HEAT-SOURCE> .EQ. 9)                DWRECV  99
     &  CALL GHPPWR(xxx,xxx,xxx,xxx,3)                                          DWRECV 100
C********************** run function : RESYS-5 *********************            RESYS 1046
      IF( MSYSF(64) .NE. 0 )   CALL  FINTS( MSYSF(64), 5. )                     RESYS 1047
C*******************************************************************            RESYS 1048
      IF (ISSPF .EQ. 1  .AND.  InitialFlg .EQ. 0)  CALL REPSSP                  Time   367
      RETURN                                                                    RESYS 1050
      END                                                                       RESYS 1051
      SUBROUTINE RPTZON                                                         RPTZON   2
C                                                                               RPTZON   3
C                            UPDATES IFO FOR ZONE REPORTS                       RPTZON   4
C                                                                               RPTZON   5
C              DEVELOPED BY                                                     -130     1
C                            J. J. Hirsch & S. D. Gates                         -130     2
C                            James J. Hirsch & Associates                       -130     3
C                            Camarillo, California                              -130     4
C              BASED UPON CODE DEVELOPED BY J. J. Hirsch and                    -130     5
C                            W. F. Buhl                                         -130     6
C                            A. E. Erdem                                        -130     7
C                            Lawrence Berkeley National Laboratory              -130     8
C                            University of California                           -130     9
Copyright (c) 1997 by James J. Hirsch. All Rights Reserved. Unpublished         -130    10
c rights reserved under the Copyright Laws of the United States.                -130    11
c RESTRICTED RIGHTS NOTICE: Government use, reproduction or disclosure          -130    12
c is subject to restrictions as set forth in Rights in Data (g)(3) in           -130    13
c UC/LBL purchase order 4607010 with J.J. Hirsch & Associates.                  -130    14
C                                                                               RPTZON   7
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON  /BUF   / DBUF(52,9999), IZREF(9999),                              -048a    8
     &                 DAYMTR(61,24), ElecPeaks5(13,25,24)                      Time     2
      DIMENSION        IDBUF(52,9999), OBUF(42,24,4), IOBUF(42,24,4)            -048a    9
      EQUIVALENCE      (DBUF(1,1),IDBUF(1,1)),                                  /BUF/    5
     1                 (OBUF(1,1,1),DBUF(1,1)),                                 /BUF/    6
     2                 (OBUF(1,1,1),IOBUF(1,1,1))                               /BUF/    7
      COMMON /DDSDAT/ FONh, SFKWh, DTSh, CFMRATh, FONNGTh, RCFMmix,             /DDSDAT/ 2
     1                RfanCFM, EXFIL, DTDUCT, DTDUCTh, TCDFSR, THDFSR,          /DDSDAT/ 3
     2                CFMINh, CFMINc, CFMINhm, CFMINcm, CFMINt,                 /DDSDAT/ 4
     3                TCMINcoil, THMAXcoil, IWarmestZ, IColdestZ                /DDSDAT/ 5
      DIMENSION       DDSDAT(21)                                                /DDSDAT/ 6
      EQUIVALENCE     (DDSDAT(1), FONh)                                         /DDSDAT/ 7
      COMMON  /DESHRQ/ NDESDY, IDDTYP(2), DESHRQ(360)                           Time     3
      COMMON  /HRREP / Irb, Ihrp, Lrb, Lhrp, Nrb, Nhrp, IVTLIM(3,50),           HR       5
     &                 IGRPtr, IBRPtr, IRSch, IRSchT(5),                        HR       6
     &                 NHRTyp(3), ITBUF(3), ITBUFB(3), ITBUFE(3),               HR       7
     &                 IHREOF, ICDFLG                                           HR       8
      COMMON  /MISCD / TEMPS(4,9999),CONS(5),TEMPSL(9999),                      -048a   10
     1                 BLDGQH,BLDGQC,BLDGQL,BLDGP,BPMULT,                       /MISCD/  3
     $                 DBTMIN,DBTMAX,WMIN,WMAX,NSPZ(9999),                      -048a   11
     3                 DQ, DTP, DTR, DTS, FPI, PLRCC , POM, TC2, TDM,           /MISCD/  5
     4                 TRA,WCOL,WCOLM,WMM,YPI,KWBTU,BTUKW,UNFILD,Unusedm        RemPA   45
      REAL             KWBTU                                                    /MISCD/  7
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      COMMON  /REPORT/ IREPRT(4,37),IPRG,IUNIQV(100),IUNIQS(100),IUNIQL         HVAC14   4
      COMMON  /SYSTD / TH,TC,TM,TR,QH,QC,QHZ,QCZ,QHB,QHP,QHUM,                  /SYSTD/  2
     1                 QDHUM,TCMIN,THMAX,QLSUM,QPSUM,CFM,CFMH,CFMC,             /SYSTD/  3
     2                 RCFM,ECFM,CINF,FON,HON,CON,BON,SCONS(3),PH,PC,           /SYSTD/  4
     3                 SKW,FANKW,unused1,WR,WM,WCOIL,WW,PO,D,                   -046f    1
     4                 FTEMP,TCR,QHR,RfanPumpKW,SGAS,SKWQH,SKWQC,QCLAT,         -131    23
     5                 SFKW,RFKW,FONNGT,WSURF,RWalkinQ,TSURF,TRh,               -131    24
     6                 CBF,CBF1,CBF2,EON,PLRCFM,PLRC,PLRH,QCM1,                 /SYSTD/  8
     7                 QCM2,QHM1,EIRM1,EIRM2,EIR,OFKW,QCT,QCS,                  /SYSTD/  9
     8                 WRMAX,WRMIN,CFMRAT,QdistG,QdistL,RON,QHT,                /SYSTD/ 10
     9                 TPOMIN,POMIN,QHSUP,QRSENS,QRLAT,QRREC,QRREJ,             /SYSTD/ 11
     1                 RCOMKW,RDEFKW,RAUXKW,ECFMP,CFMIN,CINFP,DT,DW,            /SYSTD/ 12
     2                 EWB,IC,NATTSP,Q,RETR,SLOAD,QLSUMP,T,TCHUM,TEND,          /SYSTD/ 13
     3                 TS,hgbmin,HPDefE,EconoOnly,TDuctEnv,                     -044e1   1
     4                 QCUNMT,CapRh,CapRph,CapRc                                HVAC25   3
      REAL             SYSTD(113)                                               HVAC19  13
      EQUIVALENCE      (SYSTD(1),TH)                                            RemPA   65
      COMMON  /TIME  / IDOY, IYR, IMO, IDAY, IHR,                               Time     4
     &                 ISCMO, ISCDAY, ISCHR, IDOW, ISCDOW, iDSdates(6),         -044e5   1
     &                 iTimeFlg, iDSFlg, iDDFlg, InitialFlg, LeapYr,            Time     6
     &                 CLOCK(10), MONDSC(13), MONLEN(12), MONSDA(12)            HR      12
      COMMON  /ZONED / EXCFM,FH,FC,CFMZ,QHBZ,QOVER,THZ,TCZ,ERMAX,ERMIN,         /ZONED/  2
     1                 TRY,FTD,CORINT,G0,G1,G2,G3,SIGMAG,TL,ZQHR,TAVE,          /ZONED/  3
     2                 ZQH,ZQC,FCHPS(15),ACFM,ZKW,TCMINZ,THMAXZ,                /ZONED/  4
     3                 ERMAXM,ERMINM,THR,CSSCND,CSSVEC,HENOW,QGWIN,             /ZONED/  5
     4                 QSNABT,QGOPWL,QGVEC,CFMCVT,SSFPT,CFMVNT,ZFANKW,          /ZONED/  6
     5                 ZKWCBT,ZKWHBT,ZCapRbbrd, XC,ZC,XH,ZH                     -044e2   7
      REAL ZONED(63)                                                            -044e2   8
      EQUIVALENCE (ZONED(1),EXCFM)                                              /ZONED/  9
      INDXPL(part,full)=                                                        INDXPL   2
     $      MAX(1,MIN(11,INT(ABS(part)/AMAX1(1E-6,ABS(full))*10.)+1))           INDXPL   3
      IF (InitialFlg .GT. 0)  RETURN                                            Time   368
      <ZEXMO> = <ZEXMO> + AMAX1(0.,<QNOW>)                                      RPTZON  21
      <QEXYR> = <QEXYR> + AMAX1(0.,<QNOW>)                                      RPTZON  22
      <ZADMO> = <ZADMO> + AMIN1(0.,<QNOW>)                                      RPTZON  23
      <QADYR> = <QADYR> + AMIN1(0.,<QNOW>)                                      RPTZON  24
      <ZKWMO> = <ZKWMO> + ZKW                                                   RPTZON  25
      <ZQHBMO> = <ZQHBMO> +QHBZ                                                 RPTZON  26
      <ZQHMO> = <ZQHMO> + ZQH                                                   RPTZON  27
      <ZQCMO> = <ZQCMO> + ZQC                                                   RPTZON  28
      <ZKWMOM> = AMAX1(<ZKWMOM>,ZKW)                                            RPTZON  29
      <ZQHBMOM> = AMIN1(<ZQHBMOM>,QHBZ)                                         RPTZON  30
      <ZQHMOM> = AMIN1(<ZQHMOM>,ZQH)                                            RPTZON  31
      <ZQCMOM> = AMAX1(<ZQCMOM>,ZQC)                                            RPTZON  32
      IF(<ZQHMOM> .EQ. ZQH)  <IZQHDAYHR> = IDAYHR                               RPTZON  33
      IF(<ZQHMOM> .EQ. ZQH)  <IZQHDBWBT> = IDBWBT                               RPTZON  34
      IF(<ZQCMOM> .EQ. ZQC)  <IZQCDAYHR> = IDAYHR                               RPTZON  35
      IF(<ZQCMOM> .EQ. ZQC)  <IZQCDBWBT> = IDBWBT                               RPTZON  36
      IF((FON.NE.0.0).OR.((<BASEBOARD-RATING>.LT.0.0).AND.(HON.NE.0.0)))        RPTZON  37
     1<MAXTEMP> = AMAX1(<MAXTEMP>,<TNOW>)                                       RPTZON  38
      IF((FON.NE.0.0).OR.((<BASEBOARD-RATING>.LT.0.0).AND.(HON.NE.0.0)))        RPTZON  39
     1<MINTEMP> = AMIN1(<MINTEMP>,<TNOW>)                                       RPTZON  40
      IF (QOVER .GT. 1.0)  THEN                                                 CCIG9   28
        <NHRSOVER>   = <NHRSOVER>   + 1                                         RPTZON  43
        <NHRSOVERYR> = <NHRSOVERYR> + 1                                         RPTZON  44
      ENDIF                                                                     RPTZON  45
      IF (QOVER .LT. -1.0)  THEN                                                CCIG9   31
        <NHRSUNDER>   = <NHRSUNDER>   + 1                                       RPTZON  48
        <NHRSUNDERYR> = <NHRSUNDERYR> + 1                                       RPTZON  49
      ENDIF                                                                     RPTZON  50
      <ZKWYR> = <ZKWYR> + ZKW                                                   RPTZON  51
      <ZQHBYR> = <ZQHBYR> + QHBZ                                                RPTZON  52
      <ZQHYR> = <ZQHYR> + ZQH                                                   RPTZON  53
      <ZQCYR> = <ZQCYR> + ZQC                                                   RPTZON  54
      <ZKWYRM> = AMAX1(<ZKWYRM>,ZKW)                                            RPTZON  55
      <ZQHBYRM> = AMIN1(<ZQHBYRM>,QHBZ)                                         RPTZON  56
      <ZQHYRM> = AMIN1(<ZQHYRM>,ZQH)                                            RPTZON  57
      IF(<ZQHYRM> .EQ. ZQH)  <IZQHDAYHRYR> = IMO*32 + IDAY                      RPTZON  58
      <ZQCYRM> = AMAX1(<ZQCYRM>,ZQC)                                            RPTZON  59
      IF(<ZQCYRM> .EQ. ZQC)  <IZQCDAYHRYR> = IMO*32 + IDAY                      RPTZON  60
      IF((((ICODE.EQ. 6).OR.(ICODE.EQ. 7).OR.(ICODE.EQ. 9).OR.                  -043a  126
     $     (ICODE.EQ.15).OR.(ICODE.EQ.22)).AND.(<ZONE-TYPE>.EQ.1)) .AND.        -043a  127
     $   ((IREPRT(2,23).NE.0).OR.(IREPRT(2,27).NE.0)) )  THEN                   -043a  128
        IF(FC .GT. 0.) THEN                                                     RPTZON  63
          II = INDXPL(FC,<CFMAX>)                                               RPTZON  64
          <ZCFANPLRMO> = <ZCFANPLRMO> + 1                                       RPTZON  65
          <ZCFANPLRYR> = <ZCFANPLRYR> + 1                                       RPTZON  66
          II = 12                                                               RPTZON  67
          <ZCFANPLRMO> = <ZCFANPLRMO> + 1                                       RPTZON  68
          <ZCFANPLRYR> = <ZCFANPLRYR> + 1                                       RPTZON  69
          <ZCFANKWMO> = <ZCFANKWMO> + ZFANKW                                    RPTZON  70
          IF(<ZCFANKWMO>.LE.ZFANKW) THEN                                        RPTZON  71
            <ZCFANKWMOM> = ZFANKW                                               RPTZON  72
            <ZCFANKWMOMT> = IDAYHR                                              RPTZON  73
          ENDIF                                                                 RPTZON  74
          <ZCFANKWYR> = <ZCFANKWYR> + ZFANKW                                    RPTZON  75
          IF(<ZCFANKWYR>.LE.ZFANKW) THEN                                        RPTZON  76
            <ZCFANKWYRM> = ZFANKW                                               RPTZON  77
            <ZCFANKWYRMT> = IMO*32 + IDAY                                       RPTZON  78
          ENDIF                                                                 RPTZON  79
        ENDIF                                                                   RPTZON  80
        IF(FH .GT. 0.) THEN                                                     RPTZON  81
          II = INDXPL(FH,<CFMAX>)                                               RPTZON  82
          <ZHFANPLRMO> = <ZHFANPLRMO> + 1                                       RPTZON  83
          <ZHFANPLRYR> = <ZHFANPLRYR> + 1                                       RPTZON  84
          II = 12                                                               RPTZON  85
          <ZHFANPLRMO> = <ZHFANPLRMO> + 1                                       RPTZON  86
          <ZHFANPLRYR> = <ZHFANPLRYR> + 1                                       RPTZON  87
          <ZHFANKWMO> = <ZHFANKWMO> + ZFANKW                                    RPTZON  88
          IF(<ZHFANKWMO>.LE.ZFANKW) THEN                                        RPTZON  89
            <ZHFANKWMOM> = ZFANKW                                               RPTZON  90
            <ZHFANKWMOMT> = IDAYHR                                              RPTZON  91
          ENDIF                                                                 RPTZON  92
          <ZHFANKWYR> = <ZHFANKWYR> + ZFANKW                                    RPTZON  93
          IF(<ZHFANKWYR>.LE.ZFANKW) THEN                                        RPTZON  94
            <ZHFANKWYRM> = ZFANKW                                               RPTZON  95
            <ZHFANKWYRMT> = IMO*32 + IDAY                                       RPTZON  96
          ENDIF                                                                 RPTZON  97
        ENDIF                                                                   RPTZON  98
        IF(ICODE .GE. 15)  THEN                                                 -043a  129
        IF(PLRC .GT. 0.)  THEN                                                  RPTZON  99
          II = INDXPL(PLRC,1.0)                                                 RPTZON 100
          <ZCCMPPLRMO> = <ZCCMPPLRMO> + 1                                       RPTZON 101
          <ZCCMPPLRYR> = <ZCCMPPLRYR> + 1                                       RPTZON 102
          II = 12                                                               RPTZON 103
          <ZCCMPPLRMO> = <ZCCMPPLRMO> + 1                                       RPTZON 104
          <ZCCMPPLRYR> = <ZCCMPPLRYR> + 1                                       RPTZON 105
          Z = ZKWCBT*KWBTU                                                      RPTZON 106
          <ZCCMPKWMO> = <ZCCMPKWMO> + Z                                         RPTZON 107
          <ZCCMPKWYR> = <ZCCMPKWYR> + Z                                         RPTZON 108
          IF(<ZCCMPKWMOM>.LE.Z)  THEN                                           RPTZON 109
            <ZCCMPKWMOM> = Z                                                    RPTZON 110
            <ZCCMPKWMOMT> = IDAYHR                                              RPTZON 111
          ENDIF                                                                 RPTZON 112
          IF(<ZCCMPKWYRM>.LE.Z)  THEN                                           RPTZON 113
            <ZCCMPKWYRM> = Z                                                    RPTZON 114
            <ZCCMPKWYRMT> = IMO*32 + IDAY                                       RPTZON 115
          ENDIF                                                                 RPTZON 116
        ENDIF                                                                   RPTZON 117
        IF(PLRH .GT. 0.)  THEN                                                  RPTZON 118
          II = INDXPL(PLRH,1.0)                                                 RPTZON 119
          <ZHCMPPLRMO> = <ZHCMPPLRMO> + 1                                       RPTZON 120
          <ZHCMPPLRYR> = <ZHCMPPLRYR> + 1                                       RPTZON 121
          II = 12                                                               RPTZON 122
          <ZHCMPPLRMO> = <ZHCMPPLRMO> + 1                                       RPTZON 123
          <ZHCMPPLRYR> = <ZHCMPPLRYR> + 1                                       RPTZON 124
          Z = ZKWHBT*KWBTU                                                      RPTZON 125
          <ZHCMPKWMO> = <ZHCMPKWMO> + Z                                         RPTZON 126
          <ZHCMPKWYR> = <ZHCMPKWYR> + Z                                         RPTZON 127
          IF(<ZHCMPKWMOM>.LE.Z)  THEN                                           RPTZON 128
            <ZHCMPKWMOM> = Z                                                    RPTZON 129
            <ZHCMPKWMOMT> = IDAYHR                                              RPTZON 130
          ENDIF                                                                 RPTZON 131
          IF(<ZHCMPKWYRM>.LE.Z)  THEN                                           RPTZON 132
            <ZHCMPKWYRM> = Z                                                    RPTZON 133
            <ZHCMPKWYRMT> = IMO*32 + IDAY                                       RPTZON 134
          ENDIF                                                                 RPTZON 135
        ENDIF                                                                   RPTZON 136
        <ZKWQCMO> = <ZKWQCMO> + <ZKWQC>                                         RPTZON 137
        IF(<ZKWQCMO> .LE. <ZKWQC>)  THEN                                        RPTZON 138
          <ZKWQCMOM> = <ZKWQC>                                                  RPTZON 139
          <ZKWQCMOMT> = IDAYHR                                                  RPTZON 140
        ENDIF                                                                   RPTZON 141
        <ZKWQCYR> = <ZKWQCYR> + <ZKWQC>                                         RPTZON 142
        IF(<ZKWQCYR> .LE. <ZKWQC>)  THEN                                        RPTZON 143
          <ZKWQCYRM> = <ZKWQC>                                                  RPTZON 144
          <ZKWQCYRMT> = IMO*32 + IDAY                                           RPTZON 145
        ENDIF                                                                   RPTZON 146
        <ZKWQHMO> = <ZKWQHMO> + <ZKWQH>                                         RPTZON 147
        IF(<ZKWQHMO> .LE. <ZKWQH>)  THEN                                        RPTZON 148
          <ZKWQHMOM> = <ZKWQH>                                                  RPTZON 149
          <ZKWQHMOMT> = IDAYHR                                                  RPTZON 150
        ENDIF                                                                   RPTZON 151
        <ZKWQHYR> = <ZKWQHYR> + <ZKWQH>                                         RPTZON 152
        IF(<ZKWQHYR> .LE. <ZKWQH>)  THEN                                        RPTZON 153
          <ZKWQHYRM> = <ZKWQH>                                                  RPTZON 154
          <ZKWQHYRMT> = IMO*32 + IDAY                                           RPTZON 155
        ENDIF                                                                   RPTZON 156
        ENDIF                                                                   -043a  130
      ENDIF                                                                     RPTZON 157
c              Zone air part load performance data for SS-R                     RPTZON 158
      IF (<ZONE-TYPE> .EQ. 1)  THEN                                             RPTZON 159
        IF (<DDS-TYPE> .EQ. 0)  THEN                                            RPTZON 160
          IF (CFMZ .GT. 0.)  THEN                                               RPTZON 161
            II = INDXPL( CFMZ, <CFMAX>)                                         RPTZON 162
            <CFMPLRZ> = <CFMPLRZ> + 1                                           RPTZON 163
            <CFMPLRT> = <CFMPLRT> + 1                                           RPTZON 164
          ENDIF                                                                 RPTZON 165
        ELSE                                                                    RPTZON 166
c              dual-duct/multizone systems                                      RPTZON 167
          IF (FC .GT. 0.)  THEN                                                 RPTZON 168
            II = INDXPL( FC, <CFMAX>)                                           RPTZON 169
            <CFMPLRZ> = <CFMPLRZ> + 1                                           RPTZON 170
            <CFMPLRT> = <CFMPLRT> + 1                                           RPTZON 171
          ENDIF                                                                 RPTZON 172
          IF (FH .NE. 0.)  THEN                                                 RPTZON 173
            II = INDXPL( FH, <CFMAXH>)                                          RPTZON 174
            <CFMPLRZh> = <CFMPLRZh> + 1                                         RPTZON 175
            <CFMPLRTh> = <CFMPLRTh> + 1                                         RPTZON 176
          ENDIF                                                                 RPTZON 177
        ENDIF                                                                   RPTZON 178
c              increment hours this zone is the coldest or warmest for reset    RPTZON 179
        IF (ZP1 .EQ. IWarmestZ)  <WARMESTZ> = <WARMESTZ> + 1                    RPTZON 180
        IF (ZP1 .EQ. IColdestZ)  <COLDESTZ> = <COLDESTZ> + 1                    RPTZON 181
      ENDIF                                                                     RPTZON 182
      RETURN                                                                    RPTZON 183
      END                                                                       RPTZON 184
      SUBROUTINE RSHFTW (A,N)                                                   RSHFTW   2
C                                                                               RSHFTW   3
C            SHIFT DATA IN ARRAY A TO RIGHT                                     RSHFTW   4
C                                                                               RSHFTW   5
      DIMENSION A(N)                                                            RSHFTW   6
C                                                                               RSHFTW   7
      J = N - 1                                                                 RSHFTW   8
  100 A(J+1) = A(J)                                                             RSHFTW   9
      J = J - 1                                                                 RSHFTW  10
      IF (J.GT.0) GO TO 100                                                     RSHFTW  11
      RETURN                                                                    RSHFTW  12
      END                                                                       RSHFTW  13
      SUBROUTINE SDSF                                                           SDSF     2
C                                                                               SDSF     3
C                            SINGLE DUCT AIR HANDLER                            SDSF     4
C                                                                               SDSF     5
C              DEVELOPED BY                                                     -130     1
C                            J. J. Hirsch & S. D. Gates                         -130     2
C                            James J. Hirsch & Associates                       -130     3
C                            Camarillo, California                              -130     4
C              BASED UPON CODE DEVELOPED BY J. J. Hirsch and                    -130     5
C                            W. F. Buhl                                         -130     6
C                            A. E. Erdem                                        -130     7
C                            Lawrence Berkeley National Laboratory              -130     8
C                            University of California                           -130     9
Copyright (c) 1997 by James J. Hirsch. All Rights Reserved. Unpublished         -130    10
c rights reserved under the Copyright Laws of the United States.                -130    11
c RESTRICTED RIGHTS NOTICE: Government use, reproduction or disclosure          -130    12
c is subject to restrictions as set forth in Rights in Data (g)(3) in           -130    13
c UC/LBL purchase order 4607010 with J.J. Hirsch & Associates.                  -130    14
C                                                                               SDSF     7
      COMMON /DDSDAT/ FONh, SFKWh, DTSh, CFMRATh, FONNGTh, RCFMmix,             /DDSDAT/ 2
     1                RfanCFM, EXFIL, DTDUCT, DTDUCTh, TCDFSR, THDFSR,          /DDSDAT/ 3
     2                CFMINh, CFMINc, CFMINhm, CFMINcm, CFMINt,                 /DDSDAT/ 4
     3                TCMINcoil, THMAXcoil, IWarmestZ, IColdestZ                /DDSDAT/ 5
      DIMENSION       DDSDAT(21)                                                /DDSDAT/ 6
      EQUIVALENCE     (DDSDAT(1), FONh)                                         /DDSDAT/ 7
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON /DHWDAT/ HTT,EHSTOR,HTGIVE,HTASK,HTFILL,HSUPRT,HSTRRT,             /DHWDAT/ 2
     1                DHWWST,DHWWSU,HTTIN,DHWLD,DHWLDR,DHWPLR,DHWHRT,           /DHWDAT/ 3
     2                DHHRFT,DHERFT,DHERFP,HTCAP,HTLOSS,DHWEIR                  /DHWDAT/ 4
      DIMENSION DHWD(20)                                                        /DHWDAT/ 5
      EQUIVALENCE (HTT,DHWD(1))                                                 /DHWDAT/ 6
C              IMODE IS THE OPERATING MODE OF THE PTGSD SYSTEM                  /DSCTRL/ 2
      COMMON  /DSCTRL/  IMODE                                                   /DSCTRL/ 3
C              SYSTEM LEVEL VARIABLES FOR DESICCANT SYSTEMS, BOTH TOTAL         /DSYSTD/ 2
C              AND INTEGRATED                                                   /DSYSTD/ 3
      COMMON  /DSYSTD/  SCGAS, QREG, WBR, WB8, T8, W8, WB9, T9, W9, EFF,        /DSYSTD/ 4
     1                  DTON, DMODE(7), ERMAX4, ERMAX5, ERMAX6, OPMODE,         /DSYSTD/ 5
     2                  DBOA,WOA,DGAS,DKW,TCONDd,QCDTOT,QCDS,QCDL,              /DSYSTD/ 6
     3                  POA,DFANKW,RFANKW,DMOTKW,EVKW,QCEVT,QCEVS,              /DSYSTD/ 7
     4                  QCEVL,TCMNEV                                            /DSYSTD/ 8
      REAL DSYSTD(39)                                                           /DSYSTD/ 9
      EQUIVALENCE (DSYSTD(1), SCGAS)                                            /DSYSTD/10
      COMMON  /ENDKY / LightEndUse,  TaskEndUse, MiscEndUse, HeatEndUse,        /ENDKY/  2
     &                 CoolEndUse , HtRejEndUse,  AuxEndUse, VentEndUse,        /ENDKY/  3
     &                 RefgEndUse ,  SuppEndUse,  DHWEndUse, ExtEndUse          /ENDKY/  4
      INTEGER          LightEndUse,  TaskEndUse, MiscEndUse, HeatEndUse,        /ENDKY/  5
     &                 CoolEndUse , HtRejEndUse,  AuxEndUse, VentEndUse,        /ENDKY/  6
     &                 RefgEndUse ,  SuppEndUse,  DHWEndUse,  ExtEndUse         /ENDKY/  7
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                 IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                        /FILES/  3
     2               , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                   /FILES/  4
     3                 IHRREP(3), IHRPAS(2)                                     /FILES/  5
      common  /FNSYS/  ISKIPS, MSYSF(120)                                       /FNSYS/  2
      COMMON  /ENDUSE/ SUPPKW, HEATKW                                           HVAC27   1
      COMMON  /HRREP / Irb, Ihrp, Lrb, Lhrp, Nrb, Nhrp, IVTLIM(3,50),           HR       5
     &                 IGRPtr, IBRPtr, IRSch, IRSchT(5),                        HR       6
     &                 NHRTyp(3), ITBUF(3), ITBUFB(3), ITBUFE(3),               HR       7
     &                 IHREOF, ICDFLG                                           HR       8
      COMMON  /MISCD / TEMPS(4,9999),CONS(5),TEMPSL(9999),                      -048a   10
     1                 BLDGQH,BLDGQC,BLDGQL,BLDGP,BPMULT,                       /MISCD/  3
     $                 DBTMIN,DBTMAX,WMIN,WMAX,NSPZ(9999),                      -048a   11
     3                 DQ, DTP, DTR, DTS, FPI, PLRCC , POM, TC2, TDM,           /MISCD/  5
     4                 TRA,WCOL,WCOLM,WMM,YPI,KWBTU,BTUKW,UNFILD,Unusedm        RemPA   45
      REAL             KWBTU                                                    /MISCD/  7
      COMMON  /PLANTD/ QHMP,TMP,CFMP,QHPP,CFMPP,                                /PLANTD/ 2
     1                 QHZP,TZP,DHWPKW,DHWPLF,DHWQRP                            RemPA   46
      REAL             PLANTD(10)                                               RemPA   47
      EQUIVALENCE      (PLANTD(1), QHMP)                                        RemPA   48
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      COMMON  /REPORT/ IREPRT(4,37),IPRG,IUNIQV(100),IUNIQS(100),IUNIQL         HVAC14   4
      COMMON  /RQLSCH/ RQLSCH(3)                                                /RQLSCH/ 2
      COMMON /RSVVTD/ CONFRC,HONFRC,NOWFRC,THMXNS                               /RSVVTD/ 2
      REAL NOWFRC                                                               /RSVVTD/ 3
      COMMON  /SYSTD / TH,TC,TM,TR,QH,QC,QHZ,QCZ,QHB,QHP,QHUM,                  /SYSTD/  2
     1                 QDHUM,TCMIN,THMAX,QLSUM,QPSUM,CFM,CFMH,CFMC,             /SYSTD/  3
     2                 RCFM,ECFM,CINF,FON,HON,CON,BON,SCONS(3),PH,PC,           /SYSTD/  4
     3                 SKW,FANKW,unused1,WR,WM,WCOIL,WW,PO,D,                   -046f    1
     4                 FTEMP,TCR,QHR,RfanPumpKW,SGAS,SKWQH,SKWQC,QCLAT,         -131    23
     5                 SFKW,RFKW,FONNGT,WSURF,RWalkinQ,TSURF,TRh,               -131    24
     6                 CBF,CBF1,CBF2,EON,PLRCFM,PLRC,PLRH,QCM1,                 /SYSTD/  8
     7                 QCM2,QHM1,EIRM1,EIRM2,EIR,OFKW,QCT,QCS,                  /SYSTD/  9
     8                 WRMAX,WRMIN,CFMRAT,QdistG,QdistL,RON,QHT,                /SYSTD/ 10
     9                 TPOMIN,POMIN,QHSUP,QRSENS,QRLAT,QRREC,QRREJ,             /SYSTD/ 11
     1                 RCOMKW,RDEFKW,RAUXKW,ECFMP,CFMIN,CINFP,DT,DW,            /SYSTD/ 12
     2                 EWB,IC,NATTSP,Q,RETR,SLOAD,QLSUMP,T,TCHUM,TEND,          /SYSTD/ 13
     3                 TS,hgbmin,HPDefE,EconoOnly,TDuctEnv,                     -044e1   1
     4                 QCUNMT,CapRh,CapRph,CapRc                                HVAC25   3
      REAL             SYSTD(113)                                               HVAC19  13
      EQUIVALENCE      (SYSTD(1),TH)                                            RemPA   65
      COMMON  /TIME  / IDOY, IYR, IMO, IDAY, IHR,                               Time     4
     &                 ISCMO, ISCDAY, ISCHR, IDOW, ISCDOW, iDSdates(6),         -044e5   1
     &                 iTimeFlg, iDSFlg, iDDFlg, InitialFlg, LeapYr,            Time     6
     &                 CLOCK(10), MONDSC(13), MONLEN(12), MONSDA(12)            HR      12
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
      COMMON  /ZONED / EXCFM,FH,FC,CFMZ,QHBZ,QOVER,THZ,TCZ,ERMAX,ERMIN,         /ZONED/  2
     1                 TRY,FTD,CORINT,G0,G1,G2,G3,SIGMAG,TL,ZQHR,TAVE,          /ZONED/  3
     2                 ZQH,ZQC,FCHPS(15),ACFM,ZKW,TCMINZ,THMAXZ,                /ZONED/  4
     3                 ERMAXM,ERMINM,THR,CSSCND,CSSVEC,HENOW,QGWIN,             /ZONED/  5
     4                 QSNABT,QGOPWL,QGVEC,CFMCVT,SSFPT,CFMVNT,ZFANKW,          /ZONED/  6
     5                 ZKWCBT,ZKWHBT,ZCapRbbrd, XC,ZC,XH,ZH                     -044e2   7
      REAL ZONED(63)                                                            -044e2   8
      EQUIVALENCE (ZONED(1),EXCFM)                                              /ZONED/  9
      REAL LSR(4)                                                               SDSF    27
      COMMON /SHP   / QCRUN,QCLOAD,QCGAS,QCAUX,QCGSLD,QCGSUP,                   /SHP/    2
     1                QCWAS,QCWASU,QCGSAV,QCFAN,                                /SHP/    3
     2                QHRUN,QHLOAD,QHGAS,QHAUX,QHGSLD,QHGSUP,                   /SHP/    4
     3                QHWAS,QHWASU,QHGDFR,QHFAN,          CUR(25),              /SHP/    5
     4                GSAV1,GASV2,PCH,ISZCZ,GCAP(2),GEDB,QHDFRG,                -044c1   1
     5                GRPM,PLRSUP,CFMCYC,CLPLR,CFMVVT,QHZHP,PCCEDB,             /SHP/    7
     6                IHPREP,IHPOUT,IHPHRR,IHPHRN,IRST,IREN                     /SHP/    8
      COMMON /SHPZ  / QCRUNZ,QCLOADZ,QCGASZ,QCAUXZ,QCGSLDZ,QCGSUPZ,             /SHP/    9
     1                QCWASZ,QCWASUZ,QCGSAVZ,QCFANZ,                            /SHP/   10
     2                QHRUNZ,QHLOADZ,QHGASZ,QHAUXZ,QHGSLDZ,QHGSUPZ,             /SHP/   11
     3                QHWASZ,QHWASUZ,QHGDFRZ,QHFANZ                             /SHP/   12
      DIMENSION       SHP(60),SHPZ(20)                                          /SHP/   13
      EQUIVALENCE     (SHP,QCRUN),(SHPZ,QCRUNZ)                                 /SHP/   14
     1               ,(DFM1,CUR(18)),(DFM2,CUR(19)),(DFM3,CUR(20))              /SHP/   15
      COMMON  /DESHRQ/ NDESDY, IDDTYP(2), DESHRQ(360)                           Time     3
      COMMON  /WCCDAT/ GPMS, GPMHS, GPMCS, QHLUPS, QCLUPS,                      /WCCDAT/ 2
     $                 GPMZ, GPMHZ, GPMCZ, QHLUPZ, QCLUPZ                       /WCCDAT/ 3
      DIMENSION        WCCSAV(10)                                               /WCCDAT/ 4
      EQUIVALENCE      (WCCSAV(1), GPMS)                                        /WCCDAT/ 5
      COMMON /WSEDAT/  CAPAIR,CAPWTR,QCWSEM,QCWSE,WSEDTA,WSEDTW,WSEXEF          /WSEDAT/ 2
     $                ,WSENTU,WSEUA,WSEQMX,WSEPLR,WSEDT,WSE13,WSE14             /WSEDAT/ 3
     $                ,WSE15                                                    /WSEDAT/ 4
      DIMENSION        WSESAV(15)                                               /WSEDAT/ 5
      EQUIVALENCE      (WSESAV(1),CAPAIR)                                       /WSEDAT/ 6
      COMMON /SSPDAT/  PLRCS,QCCKWS,QCCMPS,PLRHS,QHCKWS,QHCMPS                  /SSPDAT/ 2
     $                ,PLRFS,PLRFCS,PLRFHS,sspss                                /SSPDAT/ 3
     $                ,PLRCZ,QCCKWZ,QCCMPZ,PLRHZ,QHCKWZ,QHCMPZ                  /SSPDAT/ 4
     $                ,PLRFZ,PLRFCZ,PLRFHZ,sspsz                                /SSPDAT/ 5
     $                ,ISSPF,IWCCF,IPCCF,SSPSAV                                 /SSPDAT/ 6
      DIMENSION        SSPD(24)                                                 JJHfix   1
      EQUIVALENCE      (SSPD(1),PLRCS)                                          /SSPDAT/ 8
      H(DB,W) = 0.24*DB + (1061.0+0.444*DB)*W                                   H        2
C              DW WILL BE THE LATENT GAIN IN THE RETURN AIR                     SDSF    35
C              DUE TO ROOM LATENT LOAD (IN LBS WTR/LB AIR)                      SDSF    36
      DW     = 0.0                                                              SDSF    37
C              Q WILL BE MAIN COIL LOAD                                         SDSF    38
      Q      = 0.                                                               SDSF    39
C              INITIALIZE THE LOW SPEED RATIOS                                  SDSF    40
      DO I=1,4                                                                  SDSF    41
          LSR(I) = 1.                                                           SDSF    42
      END DO                                                                    SDSF    43
      CALL FILLN( 0., WCCSAV(1), 5 )                                            HVAC12 130
C     SAVE ZONE POINTERS FOR FCOIL                                              SDSF    44
      JSZP1 = ZP1                                                               SDSF    45
      JSZP2 = ZP2                                                               SDSF    46
      PLRC = 0.0                                                                SDSF    47
      PLRCC= 0.0                                                                -044c  645
      TR0 = 0.                                                                  SDSF    48
      TRA0 = 0.                                                                 SDSF    49
C              Check if MAX-HUMIDITY over-ride of supply temperature            -030   143
C              needs to be activated (only if was not done already              -030   144
C              in DKTEMP - here if PSZ, PVVT, PVAVS with MAX-COND-RCVRY)        -030   145
      IF( ((<MAX-HUMIDITY>.GT.0.0) .AND. (<MAX-HUMIDITY>.LT.99.)) .AND.         -030   146
     $    ((CON.NE.0.0) .AND. (TC.GT.TCHUM) .AND. (TCHUM.GT.0.0)) .AND.         -030   147
     &    (<MAX-COND-RCVRY> .gt. 0.)  .AND.  <DESICCANT> .eq. 0)  THEN          ERV    350
        IDHUMF = 1                                                              -030   149
        TCSAVH = TC                                                             -030   150
        THSAVH = TCHUM                                                          -030   151
        TC     = TCHUM                                                          -030   152
      ELSE                                                                      -030   153
        IDHUMF = 0                                                              -030   154
      ENDIF                                                                     -030   155
C              IF FANS ARE NOT ON THIS HOUR SKIP                                SDSF    50
      IF((FON .EQ. 0.).OR.(CFMCYC .EQ. 0.))  GOTO 200                           SDSF    51
C              TR0 IS THE RETURN TEMP WHEN RCFM=0.  SET IT TO TEMP              SDSF    52
C              OF FIRST ZONE.                                                   SDSF    53
      ZP1 = ISZ                                                                 SDSF    54
      TR0 = <TNOW>                                                              SDSF    55
C********************** run function : SDSF-0 **********************            SDSF    56
      IF( MSYSF(65) .NE. 0 )   CALL  FINTS( MSYSF(65), 0. )                     SDSF    57
C*******************************************************************            SDSF    58
      CFM     = CFM + .01                                                       SDSF    59
      TRZONE  = TR                                                              SDSF    61
      CFMZONE = CFM                                                             SDSF    62
c                                                                               SDSF    63
c                                                                               -044c4  50
c              Adjust return T for return duct losses; based on entering cfm    -044c4  51
      IF (RCFM*CONFRC .gt. 0.)                                                  -044c4  52
     &  TR = TR + <sy.QductRet> / (CONS(1)*RCFM*CONFRC)                         -044c4  53
c              adjust for duct air loss.  RESVVT already calc'd this            SDSF    64
      DuctExfil = 0.                                                            RetLoss178
      DuctInfil = 0.                                                            RetLoss179
      PlenLoss  = 0.                                                            RetLoss180
      IF (<DUCTCFMLOSS> .GT. 0.  .AND.  ICODE .NE. 27)  THEN                    RetLoss181
        SELECT CASE (<AIR-LOSS-TYPE>)                                           -045f  102
        CASE (2)  ! proportional leakage                                        -045f  103
          DuctExfil = CFM * <DUCT-AIR-LOSS>/(1.0-<DUCT-AIR-LOSS>)               -045f  104
        CASE DEFAULT  ! constant leakage                                        -045f  105
          DuctExfil = <DUCTCFMLOSS> * CFMCYC                                    -045f  106
        END SELECT                                                              -045f  107
        CFM = CFM + DuctExfil                                                   RetLoss183
        IF (<DUCT-ZTYPE> .EQ. 3)  THEN                                          RetLoss184
c              air loss is in plenum - must be accounted for separately         RetLoss185
c              until after the plenum calcs                                     RetLoss186
          PlenLoss = DuctExfil                                                  RetLoss187
        ELSE                                                                    RetLoss188
c              air loss is in unconditioned zone - adjust return and/or         RetLoss189
c              exhaust flow                                                     RetLoss190
          TR        = TR * (RCFM+0.01)                ! weighted return T       RetLoss191
          DuctInfil = DuctExfil * (1.-<DUCT-AIR-LOSS-OA>)                       RetLoss192
          RCFM      = RCFM + DuctInfil                                          RetLoss193
          ECFM      = ECFM + DuctExfil - DuctInfil                              RetLoss194
c              adjust summed return air quantities                              RetLoss195
          ZP1save = ZP1                                                         RetLoss196
          ZP1     = <DUCT-LOSS-ZONE>                                            RetLoss197
          ZP2     = <ZP2>                                                       RetLoss198
          Zmult   = <MULTIPLIER>                                                RetLoss199
          Tavg    = (<TNOW>+<TPAST>) * 0.5            ! zone T                  RetLoss200
          TR      = TR + Tavg*DuctInfil               ! return T                RetLoss201
          TR      = TR / (RCFM+0.01)                  ! return T                RetLoss202
          TRZONE  = TR                                                          -41a    16
          RETR    = DuctInfil                         ! back into duct          RetLoss203
     &                / (<CFMINF>*Zmult + DuctExfil)                            RetLoss204
          QLSUM   = QLSUM + <QL>     * RETR * Zmult   ! latent                  RetLoss205
          CINF    = CINF  + <CFMINF> * RETR * Zmult   ! infiltration            RetLoss206
          ZP1     = ZP1save                                                     RetLoss207
          ZP2     = <ZP2>                                                       RetLoss208
        ENDIF                                                                   RetLoss209
      ENDIF                                                                     RetLoss210
c                                                                               SDSF    79
c              Heat of lights in return air                                     SDSF    80
      DTP = 0.                                                                  SDSF    81
c              if nonzero return air                                            SDSF    82
      IF (RCFM.GT.1.) THEN                                                      SDSF    83
c              calc temp rise due to light load and refrigerated grocery cases  HVAC16 131
        DTP = QPSUM/AMAX1(1., CONS(1)*RCFM)                                     SDSF    85
        IF(<RETURN-AIR-PATH> .GT. 0)  TR  = TR + DTP                            SDSF    86
c              if no return air, set return temp to 1st zone temp               SDSF    87
      ELSE                                                                      SDSF    88
          TR = TR0                                                              SDSF    89
      END IF                                                                    SDSF    90
C                                                                               SDSF    91
C              PLENUM CALCULATIONS                                              SDSF    92
C                                                                               SDSF    93
C              IF NO PLENUMS SKIP                                               SDSF    94
      IF(<NumPlenZONES> .EQ. 0) GOTO 5                                          HVAC2  233
C              ALSO SKIP IF THE IS A FAN-COIL UNIT                              SDSF    96
      IF((ICODE .EQ. 9) .OR. (ICODE .EQ. 10)) GOTO 5                            SDSF    97
C              TRA WILL BE THE NEW RETURN AIR TEMP AFTER                        SDSF   100
C              PASSING THROUGH THE PLENUMS                                      SDSF   101
      TRA = 0.                                                                  SDSF   102
      SUMYQ = 0.                                                                SDSF   103
      SUMFY = 0.                                                                SDSF   104
C              LOOP THROUGH THE PLENUMS                                         SDSF   105
      Nplen = <NumPlenZONES>                                                    HVAC2  234
      DO 7  NZ=1,Nplen                                                          HVAC2  235
c              pick up the pointer to the plenum                                HVAC2  236
      ZP1    = <ISZONES-plenum> + (NZ-1)*NZD                                    HVAC2  237
      ZP2    = <ZP2>                                                            SDSF   111
      DO 111 I=1,63                                                             -044e2 157
  111 ZONED(I) = 0.0                                                            SDSF   113
C              CAL ROUTINE TO CALC PLEN TEMP AND HEAT EXCHANGE                  SDSF   114
      CALL TEMDEV(0)                                                            SDSF   115
C              FRACTION OF RETURN AIR FROM ZONES GOING TO THIS PLENUM           SDSF   116
      FPI = <AREA>/(<PLENMULT>+1.E-6)                                           SDSF   117
c              air flow into plenum from zones.  Also includes duct air         SDSF   118
c              losses which occur in the plenum.                                SDSF   119
       CFMZ = FPI * (RCFM+PLENLOSS)                                             SDSF   120
c              plenum exhaust w/o cycling                                       -044e  470
      IF (<EXHAUST-SOURCE> .eq. 1) THEN   ! makeup by system OA                 -046   280
        Call ZoneExhaust(1, CFMZ/CFMCYC)  ! set EXCFM                           -046   281
        Call ZoneExhaust(9, CFMZ)         ! power                               -046   282
      ENDIF                                                                     -046   283
C              PLENUM TEMP FOR ZERO RETURN CFM                                  SDSF   123
      TRA0 = TRA0 + <AREA>*<MULTIPLIER>*<TNOW>                                  SDSF   124
C              FRACTION OF AIR FLOW IN THIS PLENUM WHICH IS EXHAUSTED           SDSF   125
      YPI = EXCFM / (CFMZ + 1.E-6)                                              SDSF   126
      SUMYQ = SUMYQ + (1.-YPI)*<QNOW>*<MULTIPLIER>                              SDSF   127
      SUMFY = SUMFY + FPI*(1.-YPI)*<MULTIPLIER>                                 SDSF   128
      <SKW> = <SKW> + ZKW*<MULTIPLIER>                                          -044e  473
C              SUM END-USE VARIABLES FOR THIS PLENUM                            SDSF   133
      ZMULT = <MULTIPLIER>                                                      SDSF   134
      IF((<IZNBUFP>.NE.0).AND.(IRSCH.NE.0))  CALL USERZR( ZP1,ZP2 )             SDSF   136
      IF(IRPZON .NE. 0)  CALL RPTZON                                            SDSF   137
    7 CONTINUE                                                                  SDSF   138
      TRA0 = TRA0/<PLENMULT>                                                    SDSF   139
C              IF RETURN AIR PASSES THROUGH THE PLENUMS THEN                    SDSF   140
C              RESET TR TO BE THE NEW TEMP                                      SDSF   141
      IF (RCFM.GT.1.0) THEN                                                     SDSF   142
c              Note that SUMYQ is the load picked up by the zone return         SDSF   143
c              EXCLUDING any plenum duct air loss.  (TEMDEV accounted           SDSF   144
c              for the heat extraction by the duct air loss separately.)        SDSF   145
c              SUMYQ was adjusted by the fraction exhausted, where              SDSF   146
c              the fraction was based in part on the duct air loss.             SDSF   147
          TRA = TR + SUMYQ/(RCFM*CONS(1)*(SUMFY+1.E-6))                         SDSF   148
      ELSE                                                                      SDSF   149
          TRA = TRA0                                                            SDSF   150
      END IF                                                                    SDSF   151
      IF(<RETURN-AIR-PATH> .EQ. 2)  TR = TRA                                    SDSF   152
    5 CONTINUE                                                                  SDSF   153
c                                                                               SDSF   154
c              save supply temperature at the diffuser for hourly reports       SDSF   155
c              and for next hours cfm estimation in DKTEMP                      SDSF   156
      TCDFSR = TC                                                               SDSF   157
      <PASTTCDFSR> = TC                                                         SDSF   158
c                                                                               SDSF   159
c              TCMIN was converted in DKTEMP from a coil temperature to         SDSF   160
c              a diffuser temperature for use in VARVOL, etc. as a lower        SDSF   161
c              limit for temperature reset.  Convert back to the                SDSF   162
c              entering duct temp.                                              SDSF   163
      IF (<DUCTUA> .GT. 0.)  THEN                                               SDSF   164
        TCMIN  = TCMINcoil                                                      SDSF   165
c              same with maximum heating temp                                   SDSF   166
        THMAX  = THMAXcoil                                                      SDSF   167
c              calculate the actual duct delta-T using this hours CFM           SDSF   168
c              and losses calc'd in TEMDEV.  Note that RESVVT calls this        SDSF   169
c              routine twice, once for cooling and once for heating.            SDSF   170
        IF (ICODE .NE. 27  .OR.  CFMC .GT. 0.)  THEN                            HVAC29  65
          DTDUCT = <QDUCT> / (CONS(1)*CFM*CONFRC)                               HVAC29  66
c              adjust coil temperature for duct temperature change.             SDSF   173
c              duct dT calculated above is negative when heating.               SDSF   174
          TC  = TC  - DTDUCT                                                    SDSF   175
c              if TC is below minimum controllable or achievable                SDSF   176
c              temperature, DKTEMP estimated the duct dT wrong (CFM was         SDSF   177
c              too high).  Adjust CFM if so.                                    SDSF   178
          IF ((TC .LT. (TCMIN-0.5)) .AND. (TC .LT. TRZONE))  THEN               SDSF   179
c              assume that the increase in CFM can be approximated by           SDSF   180
c              holding the duct loss constant, the coil temp as cold as         SDSF   181
c              possible (TCMIN), and the average cooling delta-T as the         SDSF   182
c              return air temp (at the zone) minus the supply air temp          SDSF   183
c              (at the zone).                                                   SDSF   184
            dTnew = TRZONE - (TCMIN+DUCTDT(TCMIN,CFM/CFMCYC,2,1,0))             HVAC29  67
            IF (ABS(dTnew) .GT. 1.E-6)  THEN                                    SDSF   186
              CFMNEW = CFM * (TRZONE-(TC+DTDUCT)) / dTnew                       SDSF   187
            ELSE                                                                SDSF   188
              CFMNEW = CFM                                                      SDSF   189
            ENDIF                                                               SDSF   190
            CFMNEW = AMAX1(CFM, AMIN1(CFMNEW,                                   SDSF   191
     1                               (<SUPPLY-CFM>*<MAX-FAN-RATIO>)))           SDSF   192
c              increase return as well.                                         SDSF   193
            RCFM = RCFM + CFMNEW-CFM                                            SDSF   194
            CFM  = CFMNEW                                                       SDSF   195
            TC   = TCMIN                                                        SDSF   196
            DTDUCT = <QDUCT> / (CONS(1)*CFM*CONFRC)                             HVAC29  68
c              check heating mode too                                           SDSF   198
          ELSEIF ((TC .GT. (THMAX+0.5)) .AND. (TC .GT. TRZONE))  THEN           SDSF   199
            dTnew = (THMAX+DUCTDT(THMAX,CFM/CFMCYC,1,1,0)) - TRZONE             HVAC29  69
            IF (ABS(dTnew) .GT. 1.E-6)  THEN                                    SDSF   201
              CFMNEW = CFM * ((TC+DTDUCT)-TRZONE)/ dTnew                        SDSF   202
            ELSE                                                                SDSF   203
              CFMNEW = CFM                                                      SDSF   204
            ENDIF                                                               SDSF   205
            CFMNEW = AMAX1(CFM, AMIN1(CFMNEW,                                   SDSF   206
     1                               (<SUPPLY-CFM>*<MAX-FAN-RATIO>)))           SDSF   207
            RCFM = RCFM + CFMNEW-CFM                                            SDSF   208
            CFM  = CFMNEW                                                       SDSF   209
            TC   = THMAX                                                        SDSF   210
            DTDUCT = <QDUCT> / (CONS(1)*CFM*CONFRC)                             HVAC29  70
          ENDIF                                                                 SDSF   212
        ELSE                                                                    SDSF   213
c              heating call from RESVVT                                         SDSF   214
          DTDUCTh = <QHOTDUCT> / (CONS(1)*CFM*HONFRC)                           HVAC29  71
          TC  = TC  - DTDUCTh                                                   SDSF   216
        ENDIF                                                                   SDSF   217
c              if supply temp and cfm was adjusted, adjust return temp.         SDSF   218
        IF (CFMZONE .NE. CFM)  THEN                                             SDSF   219
c              when CFM was adjusted, return temp from zones was assumed        SDSF   220
c              to be unchanged                                                  SDSF   221
          TR = TRZONE                                                           SDSF   222
c              temp rise due to light load                                      SDSF   223
          DTP = QPSUM/AMAX1(1., CONS(1)*RCFM)                                   SDSF   224
          IF(<RETURN-AIR-PATH> .GT. 0)  TR  = TR + DTP                          SDSF   225
c              temp rise due to plenums - calculation is identical as           SDSF   226
c              before, except that plenum load is assumed to be                 SDSF   227
c              unchanged (TEMDEV is not called)                                 SDSF   228
          Nplen = <NumPlenZONES>                                                HVAC2  238
          IF (Nplen .GT. 0)  THEN                                               HVAC2  239
            TRA0  = 0.                                                          SDSF   230
            SUMYQ = 0.                                                          SDSF   231
            SUMFY = 0.                                                          SDSF   232
            DO 77  NZ=1,Nplen                                                   HVAC2  240
c              pick up the pointer to the plenum                                HVAC2  241
              ZP1    = <ISZONES-plenum> + (NZ-1)*NZD                            HVAC2  242
              ZP2    = <ZP2>                                                    SDSF   236
              FPI = <AREA>/(<PLENMULT>+1.E-6)                                   SDSF   237
              CFMZ = FPI * (RCFM+PLENLOSS)                                      SDSF   238
              IF (<EXHAUST-SOURCE> .eq. 1) THEN  ! makeup by system OA          -046   284
                EXCFM = <zn.ExhCFM>/CFMCYC                                      -046   285
              ELSE                                                              -046   286
                EXCFM = 0.                                                      -046   287
              ENDIF                                                             -046   288
              EXCFM = EXCFM * CFMCYC                                            -044e  475
              TRA0 = TRA0 + <AREA>*<MULTIPLIER>*<TNOW>                          SDSF   240
              YPI = EXCFM / (CFMZ + 1.E-6)                                      SDSF   241
              SUMYQ = SUMYQ + (1.-YPI)*<QNOW>*<MULTIPLIER>                      SDSF   242
              SUMFY = SUMFY + FPI*(1.-YPI)*<MULTIPLIER>                         SDSF   243
   77       CONTINUE                                                            SDSF   244
            TRA0 = TRA0/(<PLENMULT>+1.E-6)                                      SDSF   245
            IF (RCFM.GT.1.0) THEN                                               SDSF   246
              TRA = TR + SUMYQ/(RCFM*CONS(1)*(SUMFY+1.E-6))                     SDSF   247
            ELSE                                                                SDSF   248
              TRA = TRA0                                                        SDSF   249
            ENDIF                                                               SDSF   250
            IF(<RETURN-AIR-PATH> .EQ. 2)  TR = TRA                              SDSF   251
c              end of plenum adjustments                                        SDSF   252
          ENDIF                                                                 SDSF   253
c              end of return temp adjustments                                   SDSF   254
        ENDIF                                                                   SDSF   255
c              end of duct loss calcs.                                          SDSF   256
      ENDIF                                                                     SDSF   257
c              now add plenum duct air loss to return                           SDSF   258
      RCFM = RCFM + PLENLOSS                                                    SDSF   259
c                                                                               SDSF   260
c              Exfiltration due to building pressurization                      SDSF   261
      IF (<ExfilCFM> .GT. 1.)  THEN                                             SDSF   262
c              must be less than the supply from the mixed air plenum           SDSF   263
        EXFIL  = MIN(CFM*FON, <ExfilCFM>)*CFMCYC                                ERV    355
c              exfiltration is only the amount above exhaust                    SDSF   265
        EXFIL  = AMAX1(0., EXFIL-ECFM )                                         SDSF   266
c              adjust QLSUM and CINF for exfiltration effects                   SDSF   267
        IF (EXFIL .LT. RCFM)  THEN                                              SDSF   268
          RETRx = 1. - EXFIL/(RCFM+1.E-6)                                       SDSF   269
        ELSE                                                                    SDSF   270
          RETRx = 0.                                                            SDSF   271
        ENDIF                                                                   SDSF   272
        QLSUM  = QLSUM * RETRx                                                  SDSF   273
        CINF   = CINF  * RETRx                                                  SDSF   274
c              include exfiltration in building exhaust                         SDSF   275
        ECFM   = ECFM + EXFIL                                                   SDSF   276
c              cfm returning from the plenum and/or after                       SDSF   277
c              any barometric relief                                            SDSF   278
        RCFM   = AMAX1(0., RCFM - EXFIL )                                       SDSF   279
      ELSE                                                                      ERV    356
c              Include duct air lost to unconditioned zone                      ERV    357
        EXFIL = DuctExfil - DuctInfil                                           RetLoss211
      ENDIF                                                                     SDSF   280
c                                                                               SDSF   281
c              Air moved by return/relief fan                                   SDSF   282
      RfanCFM = RCFM                                                            SDSF   283
c              pick up supply/return fan temp rise                              SDSF   284
      IF (ICODE .NE. 25) CALL FANPWR(2,CFM,CFM,RfanCFM,DTS,DTSh,DTR)            SDSF   285
      IF (ICODE .EQ. 25) CALL FANPWR(0,CFM,CFM,RfanCFM,DTS,DTSh,DTR)            SDSF   286
      DTS    = <SUPPLY-DELTA-T>*DTS*CONS(3)                                     SDSF   287
      DTR    = <RETURN-DELTA-T>*DTR*CONS(3)                                     SDSF   288
c              add return fan temp rise to TR                                   SDSF   289
      TR     = TR + DTR                                                         SDSF   290
c              if a draw-thru fan, the coil leaving temp is supply              SDSF   291
c              temp minus the rise across the supply fan                        SDSF   292
      TC2    = TC - DTS                                                         SDSF   293
      IF(<FAN-PLACEMENT> .EQ. 1)  TC = TC - DTS                                 SDSF   294
c                                                                               SDSF   295
c              Calc minimum outside air quantity                                -035   153
      POM    = <MIN-OUTSIDE-AIR>                                                -035   154
      SH = SchVal(<MIN-AIR-SCH>, -999.)                                         Time   369
      IF (SH .NE. -999.)  POM = AMAX1(0.0,AMIN1(1.0,SH))                        Time   370
      IF(<MIN-OA-METHOD> .eq. 0) THEN                                           -035   160
        POM = AMIN1(1.,AMAX1(POM*<SUPPLY-CFM>,ECFM)*CFMCYC/CFM)                 -035   161
      ELSEIF((<MIN-OA-METHOD> .lt. 0) .AND. (SH .EQ. -999.0))  THEN             -044c  646
        IF(CFMCYC .GT. 0.) THEN                                                 -044c  647
          POM = AMIN1(1.,AMAX1(<DCVOAcfmS>/CFMCYC,ECFM)/CFM)                    -044c  648
          IF(<MIN-OA-METHOD> .eq. -2)                                           -044c  649
     $      POM = AMIN1(1.,POM/(1.0+POM-<DCVOAcfmFracCrit>))                    -044c  650
        ELSE                                                                    -044c  651
          POM = 1.                                                              -044c  652
        ENDIF                                                                   -044c  653
      ELSE                                                                      -035   162
        POM = AMIN1(1., AMAX1(POM*CFM,ECFM)/CFM)                                -047a    3
      ENDIF                                                                     -035   164
c                                                                               SDSF   306
c              Calc infiltration ratio                                          SDSF   307
      F      = CINF/AMAX1(RCFM,<CFM/ACH>)                                       SDSF   308
c              calc humidity rise due to room latent                            SDSF   309
      DW     = QLSUM/(CONS(2)*AMAX1(RCFM,<CFM/ACH>))                            SDSF   310
C              GET PERFORMANCE OF PTGSD SYSTEM                                  SDSF   311
      IF (ICODE .EQ. 25)  CALL DSCPF1(3)                                        SDSF   312
      IF (ICODE .EQ. 25) RETURN                                                 SDSF   313
C                                                                               SDSF   314
C              MIXED AIR TEMP CALCULATION                                       SDSF   315
C                                                                               SDSF   316
C              CALL ROUTINE TO SIMULATE ECONOMIZER AND                          SDSF   317
C              MIX AIR CONTROLLER                                               SDSF   318
C              GET THE MAXIMUM HUMIDITY SET POINT IN LBS/LBS                    SDSF   319
      WRMAX = WFUNC(TR, <MAX-HUMIDITY>, PATM)                                   SDSF   320
      CALL ECONO(2,TC2,POM)                                                     SDSF   321
c                                                                               SDSF   322
c              Relief fan power consumption                                     SDSF   323
      IF (<RETURN-FAN-LOC> .EQ. 3)  THEN                                        SDSF   324
        RfanCFM = AMAX1(0., RCFM - CFM*(1.-POA) )                               SDSF   325
        CALL FANPWR(1, x, x, RfanCFM, x, x, x)                                  SDSF   326
      ENDIF                                                                     SDSF   327
C                                                                               SDSF   328
c              Preheat                                                          HVAC1  651
      IF((TM .LT. <PREHEAT-T>) .AND. (HON*CapRph .GT. 0.))  THEN                HVAC12 131
        QHP   = AMAX1(CONS(1)*CFM*(TM-<PREHEAT-T>),                             HVAC17a 36
     1                <PREHEAT-CAPACITY>*CapRph)                                HVAC17a 37
c              save for circulation loop calc                                   HVAC17a 38
        <PHT_COIL_CFM>   = CFM / CFMCYC                                         HVAC17a 39
        <PHT_COIL_EDB>   = TM                                                   HVAC1  658
        <PHT_COIL_CYCLE> = CFMCYC * HONFRC                                      HVAC1  659
        <PHT_COIL_Q>     = QHP                                                  HVAC1  660
c              mixed air temp after preheat                                     HVAC1  661
        TM   = TM - QHP / (CONS(1)*CFM)                                         HVAC1  662
      ENDIF                                                                     HVAC1  663
      IF(<FAN-PLACEMENT> .EQ. 0)  TM = TM + DTS                                 SDSF   336
c              If econo should run w/o mech cooling                             -044e1   8
      IF (EconoOnly .eq. 1.)  TC = TM                                           -044e1   9
C              SAVE MIX AIR TEMP FOR NEXT HOUR                                  SDSF   337
      <CL_COIL_EDB> = TM                                                        HVAC1  664
C               FOR EVAP COOL SYSTEM, GET EXIT CONDITIONS                       SDSF   339
      IF (ICODE .EQ. 26) THEN                                                   SDSF   340
c     IF ((<ISYBUFP>.NE.0) .AND. (IRSCH.NE.0)                                   IREPRT 211
c    $                                  .AND. (IREPRT(2,35).NE.0))              IREPRT 212
c    1    WRITE(IOUTPT,9005) TM                                                 SDSF   342
c9005 FORMAT(11H -- SDSF --,2X,7HTM    =,E12.6)                                 SDSF   343
          CALL EVAPPF(1,TC,DBT,HUMRAT,TC1,WCOIL,PEVA)                           SDSF   344
          WR = (WCOIL+DW+F*HUMRAT)/(1.+F)                                       SDSF   345
          <PASTWR> = WR                                                         SDSF   346
c     IF ((<ISYBUFP>.NE.0) .AND. (IRSCH.NE.0)                                   IREPRT 213
c    $                                  .AND. (IREPRT(2,35).NE.0))              IREPRT 214
c    1    WRITE(IOUTPT,9006) TC,WCOIL,WR,TC1                                    SDSF   348
c9006 FORMAT(1H ,7HTC    =,E12.6,2X,7HWCOIL =,E12.6,2X,7HWR    =,E12.6/         SDSF   349
c    1       1H ,7HTC1   =,E12.6)                                               SDSF   350
          CALL EVAPPF(2,TC,DBT,HUMRAT,TC2,WCOIL,PEVA)                           SDSF   351
          WM = PO*HUMRAT + (1.-PO)*WR                                           SDSF   352
          IF (DTON .LE. 0.)  WM = WCOIL                                         SDSF   353
          IF (DTON .GT. 0.999)  TC = TC2                                        SDSF   354
          DQ = H(TM,WM) - H(TC,WCOIL)                                           SDSF   355
          WW = WM - WCOIL                                                       SDSF   356
      GO TO 52                                                                  SDSF   357
c     IF ((<ISYBUFP>.NE.0) .AND. (IRSCH.NE.0)                                   IREPRT 215
c    $                                  .AND. (IREPRT(2,35).NE.0))              IREPRT 216
c    1    WRITE(IOUTPT,9007) TC2,WCOIL,WR,DQ,DTON,WM,TC                         SDSF   359
c9007 FORMAT(1H ,7HTC2   =,E12.6,2X,7HWCOIL =,E12.6,2X,7HWR    =,E12.6/         SDSF   360
c    1       1H ,7HDQ    =,E12.6,2X,7HDTON  =,E12.6,2X,7HWM    =,E12.6/         SDSF   361
c    2       1H ,7HTC    =,E12.6)                                               SDSF   362
      END IF                                                                    SDSF   363
C                                                                               SDSF   364
C              CALCULATE THE COIL LOADS                                         SDSF   365
c                                                                               IcRink  56
c              Initialize moisture removal terms for display fixtures           IcRink  57
c              or ice rinks                                                     IcRink  58
      G  = 0.                                                                   IcRink  59
      GW = 0.                                                                   IcRink  60
      IF (<sy;IceRink> .GT. 0)  THEN                                            IcRink  61
        Nzones = <NumCondZONES>                                                 IcRink  62
        DO  NZ=1,Nzones                                                         IcRink  63
          ZP1 = <ISZONES> + (NZ-1)*NZD                                          IcRink  64
          ZP2 = <ZP2>                                                           IcRink  65
          IF (<zn:ICE-RINK> .GT. 0)  THEN                                       IcRink  66
            Jir  = <zn:ICE-RINK>                                                IcRink  67
            Gnew = <ir;CFMlat> / AMAX1(CFM, <CFM/ACH>)                          IcRink  68
            G    = G  + Gnew                                                    IcRink  69
            GW   = GW + Gnew * <ir;Wrink>                                       IcRink  70
          ENDIF                                                                 IcRink  71
        ENDDO                                                                   IcRink  72
      ENDIF  ! sy;IceRink                                                       IcRink  73
C REFRIG CASE INDEX                                                             SDSF   371
      IG = 0                                                                    SDSF   372
C POINTER TO ZONE HAVING REFRIG EQUIP                                           SDSF   373
      ZP2 = 0                                                                   SDSF   374
      ZP1 = <REFG-ZONE-ZP1>                                                     SDSF   375
      IF (ZP1 .NE. 0)  ZP2 = <ZP2>                                              SDSF   376
C              CFM PART LOAD RATIO                                              SDSF   377
      PLRCFM = CFM/(<RATED-CFM>*CFMCYC)                                         SDSF   378
C              COIL BYPASS FACTOR                                               SDSF   379
      IF (<CONDENSER-TYPE> .eq. 3) THEN                                         -045h   81
        EWB = Max(<CL_COIL_EWB>, <COOL-FT-MIN>)                                 -045h   82
      ELSE                                                                      -045h   83
        EWB = Max(<CL_COIL_EWB>, <COOL-FT-MIN>-10.)                             -045h   84
      ENDIF                                                                     -045h   85
c              water-cooled condensers                                          HVAC12 132
      IF (<CW-LOOP> .GT. 0)  THEN                                               HVAC12 133
c              pointer to condenser water loop                                  HVAC12 134
        JLP = <CW-LOOP>                                                         HVAC12 135
        T1  = <lp;COIL_EWTest>                                                  HVAC16 132
      ELSE                                                                      HVAC12 137
        T1 = DBT                                                                HVAC12 138
        IF (ICODE.NE.19 .AND. ICODE.NE.21 .AND. ICODE.NE.27 .AND.               -044e  476
     &      ICODE.NE.28 .AND.                                                   -044e  477
     &     (ICODE.NE.23 .OR. <COOL-SOURCE> .EQ. 1))  T1=TM                      -044e  478
        IF (IPCCF .gt. 0)  T1 = PCCEDB                                          -045h   86
      ENDIF                                                                     HVAC12 142
c              water-side economizer                                            HVAC12 143
      WSEDTA = 0.0                                                              HVAC12 144
      WSEDTW = 0.0                                                              HVAC12 145
      WSEGPM = 0.                                                               HVAC12 146
      IF (<WSE-LOOP> .GT. 0)  THEN                                              HVAC12 147
c              pointer to water-side econo loop                                 HVAC12 148
        JLP = <WSE-LOOP>                                                        HVAC12 149
c              difference between mixed air temp and loop temp                  HVAC12 150
        WSEDT  = TM - <lp;COIL_EWTest>                                          HVAC16 133
        IF (<lp;CTRL_MODE> .NE. -1  .AND.  TM .GT. TC                           HVAC16 134
     $                         .AND.  WSEDT .GE. <WS-ECONO-MIN-DT>) THEN        HVAC12 153
c              heat exchanger capacities, airside and waterside                 HVAC12 154
          CAPAIR = CONS(1)*CFM/CFMCYC + .01                                     HVAC12 155
          CAPWTR = <lp;BTUH/GPM-F>*<WSEDESGPMS> + .01                           HVAC16 135
c              heat transfer thru heat exchanger                                HVAC12 157
          WSEXEF = <WS-ECONO-XEFF>                                              HVAC12 158
          QCWSEM = AMIN1(CAPAIR,CAPWTR)*WSEDT*WSEXEF                            HVAC12 159
          IF(TM-(QCWSEM/CAPAIR) .LT. TC) THEN                                   HVAC12 160
c              economizer can handle entire load - load and flow ratio          HVAC12 161
            QCWSES = (TM-TC)*CAPAIR                                             HVAC12 162
            WSEPLR = QCWSES/(QCWSEM+.01)                                        HVAC12 163
          ELSE                                                                  HVAC12 164
c              economizer cannot handle entire load                             HVAC12 165
            QCWSES = QCWSEM                                                     HVAC12 166
            WSEPLR = 1.0                                                        HVAC12 167
          ENDIF                                                                 HVAC12 168
c              adjust mixed air temperature                                     HVAC12 169
          WSEDTA = QCWSES / CAPAIR                                              HVAC12 170
          TM     = TM - WSEDTA                                                  HVAC12 171
c              adjust water-side temperature entering the condenser (if any)    HVAC12 172
          WSEDTW = QCWSES / CAPWTR                                              HVAC12 173
          IF (<CW-LOOP> .EQ. <WSE-LOOP>)                                        HVAC12 174
     $      T1 = <lp;COIL_EWTest> + WSEDTW                                      HVAC16 136
c              pass load and flow onto loop                                     HVAC12 176
          <WSE_COIL_Q> = QCWSES                                                 HVAC12 177
          <WSE_COIL_GPM> =  <WSEDESGPMS> * WSEPLR                               HVAC12 178
c              report variables                                                 HVAC12 179
          QCLUPS = QCWSES                                                       HVAC12 180
          QCWSE  = QCWSES                                                       HVAC12 181
          WSEGPS = <WSEDESGPMS> * WSEPLR                                        HVAC12 182
          GPMS   = <WSEDESGPMS> * WSEPLR                                        HVAC12 183
          GPMCS  = <WSEDESGPMS> * WSEPLR                                        HVAC12 184
        ENDIF                                                                   HVAC12 185
      ENDIF                                                                     HVAC12 186
c                                                                               HVAC12 187
      T1 = AMAX1( T1, <COOL-FT-MIN> )                                           HVAC12 188
      CBF1 = CVAL(<COIL-BF-FT>,EWB,T1)                                          SDSF   438
      CBF2   = CVAL(<COIL-BF-FCFM>,PLRCFM,PLRCFM)                               SDSF   439
      CBF    = AMIN1(AMAX1(<COIL-BF>*CBF1*CBF2,0.001),.99)                      REFG     6
      CBFD   = CBF                                                              SDSF   441
C              Calculate the coil surface temperature.  Set the coil            SDSF   442
C              exit temp for when the coil is active                            SDSF   443
      TDM    = TCMIN                                                            SDSF   444
      IF(<FAN-PLACEMENT> .EQ. 1) TDM = TDM - DTS                                SDSF   445
C              To decide if a unit is cycling, we need to estimate the          SDSF   446
C              sensible part load.                                              SDSF   447
      QCM2 = CVAL(<COOL-SH-FT>,EWB,T1)                                          SDSF   448
c              adjust capacity for circulation-loop capacity                    HVAC1  666
      QCM2 = QCM2 * CapRc                                                       HVAC1  667
      QCS = <COOL-SH-CAP>*QCM2                                                  SDSF   449
      IF (ICODE.EQ.19 .OR. ICODE.EQ.21 .OR. ICODE.EQ.27 .OR.                    -044e  479
     &    ICODE.EQ.28 .OR. (ICODE .EQ. 23 .AND. <COOL-SOURCE> .NE. 1))          -044e  480
     $  QCS = AMAX1(0.0,QCS + CONS(1)*CFM/CFMCYC*(1.0-CBF)                      -034   191
     $                               *AMAX1(-20.0,AMIN1(20.0,TM-80.0)) )        -034   192
      PLRCS = 0.                                                                SDSF   453
      IF (QCS .GT. 0.)  PLRCS = CONS(1)*CFM/CFMCYC*(TM-TC)/QCS                  SDSF   454
      PLRCS  = AMAX1(0.,AMIN1(1.,PLRCS))                                        -031    36
      CUR(1) = AMAX1(0.01,AMIN1(1.,CVAL(<COIL-BF-FPLR>,PLRCS,PLRCS)))           -031    37
      CBFD   = CBF + (1.0-CUR(1))*(1.0-CBF)                                     -031    38
      TSURF  = (TDM-CBFD*TM)/(1.-CBFD)                                          -031    39
      WSURF  = WFUNC(TSURF,100.,PATM)                                           -031    40
      IF(TSURF .NE. TM)                                                         -031    41
     $  CBF    = AMAX1(0.01,AMIN1(1.0,(TSURF-TC)/(TSURF-TM)))                   -031    42
C              CALCULATE THE MIXED AIR HUMIDITY LEVEL ASSUMING                  SDSF   465
C              NO MOISTURE REMOVAL ACROSS COILS                                 SDSF   466
 12   IF ((F .LE. 0.01) .AND. ((POA+G) .LE. 0.0)) THEN                          SDSF   467
C              NO OUTSIDE AIR OR REFRIG EQUIP SITUATION                         SDSF   468
        IF(F .GT. 0.0)  THEN                                                    SDSF   469
          WM = HUMRAT + DW/F                                                    SDSF   470
        ELSE                                                                    SDSF   471
          WM = HUMRAT + DW                                                      SDSF   472
        ENDIF                                                                   SDSF   473
      ELSE                                                                      SDSF   474
        WM = ((1.+F+G)*POA*WOA + (1.-POA)*(DW+GW+F*HUMRAT))/(F+POA+G)           SDSF   475
      ENDIF                                                                     SDSF   476
      WMSAT = WFUNC(TM,100.,PATM)                                               -113    33
      WRSAT = WFUNC(TR,100.,PATM)                                               -113    34
      WM = AMIN1(WMSAT,WM)                                                      -113    35
C              IF COOLING IS NO AVAILABLE THIS HOUR SKIP                        SDSF   477
      IF (CON*CapRc .EQ. 0.)  GOTO 25                                           HVAC12 189
C              IF HEATING ONLY SKIP                                             SDSF   480
      IF(TM .LE. TC)  GOTO 25                                                   SDSF   481
C              IF MIXED AIR HUMIDITY IS GREATER THAN COIL                       SDSF   482
C              SURFACE CONDITION SOME MOISTURE REMOVAL                          SDSF   483
C              WILL TAKE PLACE                                                  SDSF   484
      IF(WM .GT. WSURF) GOTO 30                                                 SDSF   485
C              CALCULATE RETURN AIR HUMIDITY LEVEL ASSUMING                     SDSF   486
C              NO MOISTURE ADD/REMOVE                                           SDSF   487
   25 WR     = HUMRAT + DW                                                      SDSF   488
      WR     = AMIN1(WRSAT,WR)                                                  -113    36
C              NO HUMIDIFICATION IF NO OUTSIDE AIR OR REFRIG EQUIP              SDSF   489
      IF ((F+POA+G) .GT. 0.0) THEN                                              SDSF   490
         WR = (POA*WOA + F*HUMRAT+DW+GW)/(POA+F+G)                              SDSF   491
        WR = AMIN1(WRSAT,WR)                                                    -113    37
C              IF THE RETURN AIR LEVEL IS LESS THAN THE MIN                     SDSF   492
C              SETPOINT SOME MOISTURE ADDITION WILL TAKE                        SDSF   493
C              PLACE     SKIP                                                   SDSF   494
        WRMIN  = WFUNC(TR,<MIN-HUMIDITY>,PATM)                                  SDSF   495
        IF(WR .LT. WRMIN) GOTO 20                                               SDSF   496
      ENDIF                                                                     SDSF   497
C                                                                               SDSF   498
C              SENSIBLE COOLING                                                 SDSF   499
C                                                                               SDSF   500
C              CALC ENTHALY CHANGE ACROSS THE COIL                              SDSF   501
   15 Hmix   = H(TM,WM)                                                         HVAC22 141
      Hcoil  = H(TC,WM)                                                         HVAC22 142
      DQ     = Hmix - Hcoil                                                     HVAC22 143
C              SET MOISTURE CHANGE TO ZERO                                      SDSF   503
      WW     = 0.                                                               SDSF   504
C              SET COIL LEAVING CONDITION TO BE MIXED AIR COND                  SDSF   505
      WCOIL  = WM                                                               SDSF   506
      WCOL   = WM                                                               -030   157
      IF((<MAX-HUMIDITY> .LT. 99.) .and. (WR .GT. WRMAX) .and.                  -087    10
     $   (TC .GT. TDM+1.) .and. (TM .GT. TSURF+1.))  THEN                       -087    11
   17   WM = POA*WOA + (1.-POA)*WRMAX                                           -030   158
        WCOL = (1.0+F+G)*WRMAX - DW - F*HUMRAT - GW                             -087    13
        WCOLM = (CBFD*( (1.+F+G)*POA*WOA + (1.-POA)*                            -087    14
     $           (F*HUMRAT+DW+GW)) + (1.-CBFD)*(1.+F+G)*WSURF)                  -087    15
     $          / AMAX1(1.+F+G-CBFD*(1.-POA), 1.E-6)                            -087    16
        WCOLM = AMAX1(WCOLM,WSURF)                                              -087    17
        DTHUM = TC - TDM                                                        -087    18
        CBF   = CBFD                                                            -087    19
        IF(WCOL .LE. WCOLM)  THEN                                               -087    20
          WCOL = WCOLM                                                          -087    21
          GOTO 33                                                               -087    22
        ENDIF                                                                   -087    23
        DO J=1,2                                                                -087    24
          IF(TSURF .NE. TM) THEN                                                -031    43
            CBF = AMAX1(0.01,AMIN1(1.0,(TSURF-(TC-DTHUM))/(TSURF-TM)))          -031    44
          ELSE                                                                  -031    45
            CBF = CBFD                                                          -031    46
          ENDIF                                                                 -031    47
          Wx  = ( (1.+F+G-CBF*(1.-POA))*WCOL -                                  -087    37
     $            CBF*( (1.+F+G)*POA*WOA + (1.-POA)*(F*HUMRAT+DW+GW) ) )        -087    38
     $        / AMAX1( (1.-CBF)*(1.+F+G), 1.E-6)                                -087    39
          IF(Wx .GE. WM)  THEN                                                  HVAC14  87
            DTHUM = 0.                                                          HVAC14  88
            WCOL = WCOIL                                                        -030   159
            GOTO 36                                                             -030   160
          ENDIF                                                                 HVAC14  90
          W2  = WSURF                                                           -087    40
          N   = MAX(1,INT(TM-TSURF))                                            -087    41
          DO I=1,N                                                              -087    42
            Tx = TSURF + FLOAT(I)                                               -087    43
            W1 = WFUNC(Tx,100.0,PATM)                                           -087    44
            IF((Tx .GE. TM).or.(W1 .GE. Wx))  GOTO 43                           -087    45
            IF(I .LT. N)  W2 = W1                                               HVAC14  91
          ENDDO                                                                 -087    47
          DTHUM = 0.                                                            HVAC14  92
          WCOL = WCOIL                                                          -030   161
          GOTO 36                                                               -030   162
   43     Tx  = Tx - 1.0 + AMAX1(AMIN1(1.0,(Wx-W2)/(W1-W2)),0.)                 -087    48
          DTHUM  = TC - (Tx*(1.0-CBF)+CBF*TM)                                   -087    49
        ENDDO                                                                   -087    50
        GOTO 33                                                                 -087    51
      ENDIF                                                                     -087    52
      GOTO 50                                                                   SDSF   507
C                                                                               SDSF   508
C              HUMIDIFICATION REQUIRED                                          SDSF   509
C                                                                               SDSF   510
C              CALC MINIMUM SUPPLY CONDITION TO HOLD                            SDSF   511
C              THE RETURN AIR LEVEL AT THE SETPOINT                             SDSF   512
 20   WMM = (1.+F+G)*WRMIN - DW - F*HUMRAT - GW                                 SDSF   513
C              MAKE SURE THIS IS NOT GREATER THAN SATURATION                    SDSF   514
      IF(<HUMIDIFIER-LOC> .eq. 0)  THEN                                         HVAC16 137
        WMM = AMIN1(WMM,WFUNC(TC,100.0,PATM))                                   ROOMHUM  3
      ENDIF                                                                     ROOMHUM  4
C              CALC MIX AIR COND AT THIS SUPPLY COND                            SDSF   516
      WM = WOA*POA + (1.-POA)*WRMIN                                             SDSF   517
C              CALC ENTHALPY CHANGE ACROSS COIL                                 SDSF   518
      Hmix   = H(TM,WMM)                                                        HVAC22 144
      Hcoil  = H(TC,WMM)                                                        HVAC22 145
      DQ     = Hmix - Hcoil                                                     HVAC22 146
C              CALC MOISTURE ADDITION                                           SDSF   520
      WW     = AMIN1(0.0,WM-WMM)                                                SDSF   521
C              CALC HUMIDIFICATION ENERGY                                       SDSF   522
      QHUM   = WW*CONS(2)*CFM                                                   SDSF   523
C              SET RETURN AIR HUMIDITY LEVEL                                    SDSF   524
      WR     = WRMIN                                                            SDSF   525
C              SET COIL LEAVING CONDITION                                       SDSF   526
      WCOIL  = WM                                                               SDSF   527
      GOTO 50                                                                   SDSF   528
C                                                                               SDSF   529
C              DEHUMIDIFICATION REQUIRED                                        SDSF   530
C                                                                               SDSF   531
C              SOLVE FOR HUMIDITIES AT EACH POINT IN SYSTEM                     SDSF   532
   30 WR = (CBF*POA*WOA + (1.-CBF)*WSURF + DW + GW + F*HUMRAT)                  SDSF   533
     1 / (1. + F + G - CBF*(1.-POA))                                            SDSF   534
      WR     = AMIN1(WRSAT,WR)                                                  -113    38
      WM = POA*WOA + (1.-POA)*WR                                                SDSF   535
      WCOIL  = CBF*WM + (1.0-CBF)*WSURF                                         SDSF   536
C              WCOL IS THE COIL LEAVING CONDITION                               SDSF   537
      WCOL   = WCOIL                                                            SDSF   538
C              IF THE RETURN CONDITION IS BELOW THE MAX SETPOINT                SDSF   539
C              OR THE COIL TEMP IS ALREADY AT ITS MINIMUM SKIP                  SDSF   540
      IF((<MAX-HUMIDITY> .GE. 99.) .OR. (WR .LE. WRMAX) .OR.                    SDSF   541
     $   (TC .LE. TDM+0.5))  GOTO 35                                            SDSF   542
C             Go calc coil temp depression needed to hold MAX-HUMIDITY          -030   163
        GOTO 17                                                                 -030   164
   33 CONTINUE                                                                  -087    53
C              ADJUST FOR LESS AIR DUE TO REDUCED SUPPLY TEMP                   SDSF   562
C              APPROX THIS BY ASSUMING THAT THE AMOUNT OF REDUCTION             SDSF   563
C              IN THE COLD AIR IS THE REDUCTION IN TEMP DIVIDED BY              SDSF   564
C              THE AVERAGE DELTA T FOR COOLING.  WE APPROX THE DELTA            SDSF   565
C              T FOR COOLING USING THE RETURN AIR TEMP MINUS THE                SDSF   566
C              SUPPLY TEMP                                                      SDSF   567
      PCM    = (<SUPPLY-CFM>/CFM)*<MAX-FAN-RATIO>                               SDSF   568
      DTSUP = (TR-DTP) - (TC+DTDUCT)                                            SDSF   569
      IF(<FAN-PLACEMENT> .EQ. 1) DTSUP = DTSUP - DTS                            SDSF   570
      DTSUP = AMAX1(0.,DTSUP)                                                   SDSF   571
      CFMC = CFM*AMAX1(0.,AMIN1(PCM,DTSUP/AMAX1(DTSUP+DTHUM,1.E-6)))            SDSF   572
C              WE NOW SEE IF EXTA AIR NEEDS TO BE PROVIDED FROM                 SDSF   573
C              REHEAT OR IF THE CFM CAN BE REDUCED TO KEEP                      SDSF   574
C              THE SENSIBLE TO THE ZONES THE SAME                               SDSF   575
      CFMH   = (<MIN-CFM-RATIO>*<SUPPLY-CFM>-CFMC)                              SDSF   576
      CFMH   = AMAX1(0.0,CFMH)                                                  SDSF   577
      TC     = TC - DTHUM                                                       SDSF   578
C              SAVE SENSIBLE DEHUMIDIFICATION ENERGY                            SDSF   579
      QDHUM = QDHUM - CONS(1)*(DTSUP+DTHUM)*CFMH*HON                            HVAC12 190
      IF (CapRh .EQ. 0.)  QDHUM = 0.                                            HVAC12 191
C              NOW ABJUST FAN POWER IF NEEDED                                   SDSF   581
      IF(ABS(CFM-CFMH-CFMC) .LE. 0.01)  GOTO 34                                 SDSF   582
      <SKW>  = <SKW> - ((CFM-CFMH-CFMC)/CFM)*(SFKW+RFKW)                        SDSF   583
      FANKW  = FANKW - ((CFM-CFMH-CFMC)/CFM)*(SFKW+RFKW)                        SDSF   584
      JEM       = <VENT-E-MS>                                                   HVAC6  769
      <VENT-EM> = <VENT-EM> - ((CFM-CFMH-CFMC)/CFM)*(SFKW+RFKW)                 HVAC6  770
   34 CONTINUE                                                                  SDSF   586
C              NOW ADJUST THE TOTAL CFM TO NEW VALUE                            SDSF   587
      RCFM   = RCFM - (CFM-CFMC-CFMH)                                           SDSF   588
      CFM    = CFMC + CFMH                                                      SDSF   589
C              CALC RETURN AIR CONDITION                                        SDSF   590
      WR = (WCOL + DW + F*HUMRAT + GW) / (1.0 + F + G)                          SDSF   591
C              CALC MIXED AIR CONDITION                                         SDSF   592
      WM = POA*WOA + (1.-POA)*WR                                                SDSF   593
      GOTO 36                                                                   ROOMHUM  6
   35 CONTINUE                                                                  SDSF   594
      IF((<HUMIDIFIER-LOC>.ne.0).and.(<MIN-HUMIDITY>.GT.0.)) THEN               HVAC16 138
        WRMIN  = WFUNC(TR, <MIN-HUMIDITY>, PATM)                                ROOMHUM  9
        IF(WR .LT. WRMIN) THEN                                                  ROOMHUM 10
          WM   = POA*WOA + (1.-POA)*WRMIN                                       ROOMHUM 11
          WCOL = CBF*WM + (1.-CBF)*WSURF                                        ROOMHUM 12
          WRx  = (WCOL+DW+F*HUMRAT+GW)/(1.+F+G)                                 ROOMHUM 13
          WWx  = WRx - WRMIN                                                    ROOMHUM 14
          QHUM = WWx*CONS(2)*CFM                                                ROOMHUM 15
          WR   = WRMIN                                                          ROOMHUM 16
        ENDIF                                                                   ROOMHUM 17
      ENDIF                                                                     ROOMHUM 18
   36 CONTINUE                                                                  ROOMHUM 19
C              CALC ENTHALPY CHANGE ACROSS THE COIL                             SDSF   595
      Hmix   = H(TM,WM)                                                         HVAC22 147
      Hcoil  = H(TC,WCOL)                                                       HVAC22 148
      DQ     = Hmix - Hcoil                                                     HVAC22 149
C              CALC MOISTURE LEVEL CHANGE                                       SDSF   597
      WW     = WM - WCOL                                                        SDSF   598
C              SAVE COIL LEAVING CONDITION                                      SDSF   599
      WCOIL  = WCOL                                                             SDSF   600
C                                                                               SDSF   601
C SKIP IF NO REFRIG EQUIP PRESENT                                               SDSF   602
 50   IF (ZP2 .EQ. 0) GOTO 52                                                   SDSF   603
C SINCE EACH REFRIG CASE MAY HAVE A DIFFERENT                                   SDSF   604
C EVAPORATOR TEMPERATURE, THE WARMER EVAPORATORS                                SDSF   605
C MAY BE DRY WHILE THE COLDER ONES MAY BE WET,                                  SDSF   606
C DEPENDING ON THE SPACE HUMIDITY RATIO.  ITERATE                               SDSF   607
C THROUGH THE ABOVE HUMIDITY RELATIONSHIPS, ADDING                              SDSF   608
C ONE REFRIG CASE AT A TIME, STARTING WITH THE                                  SDSF   609
C COLDEST.  STOP IF A DRY EVAPORATOR IS FOUND                                   SDSF   610
C (OTHERWISE THE EVAPORATOR WILL ADD MOISTURE                                   SDSF   611
C TO THE SPACE).                                                                SDSF   612
      IG = IG + 1                                                               SDSF   613
C SKIP IF NO MORE REFRIG EQUIP                                                  SDSF   614
      IF (IG .GT. <NUM-REFG-EQUIP>) GOTO 51                                     SDSF   615
C NO REFRIG CASE LATENT HEAT REMOVAL WILL OCCUR                                 SDSF   616
C IF THE SPACE HUMIDITY RATIO IS LESS THAN THE                                  SDSF   617
C EVAPORATOR HUMIDITY RATIO.  SKIP IF SO                                        SDSF   618
      IF (WR .LE. <REFG-EVAP-W>) GOTO 51                                        SDSF   619
C RATIO OF AIR FLOWING THROUGH THE REFRIG CASE                                  SDSF   620
C TO THE SUPPLY CFM, MODIFIED BY THE SCHEDULE                                   SDSF   621
      GNEW = <REFG-CFM> / AMAX1(CFM, <CFM/ACH>) * RQLSCH(IG)                    SDSF   622
C TOTAL FOR ALL THE WET EVAPORATORS SO FAR                                      SDSF   623
      G = G + GNEW                                                              SDSF   624
C PRODUCT OF GNEW AND EVAP HUMIDITY RATIO, SUMMED                               SDSF   625
      GW = GW + GNEW * <REFG-EVAP-W>                                            SDSF   626
C NOW REPEAT SYSTEM HUMIDITY CALCULATIONS                                       SDSF   627
      GO TO 12                                                                  SDSF   628
 51   CONTINUE                                                                  SDSF   629
C SAVE VALUES OF G AND GW FOR USE IN DKTEMP NEXT HOUR                           SDSF   630
      <G> = G                                                                   SDSF   631
      <GW> = GW                                                                 SDSF   632
C                                                                               SDSF   633
C              CALCULATE TOTAL UNIT LOADS                                       SDSF   634
C                                                                               SDSF   635
C              CONVERT ENTHALPY CHANGE TO ENERGY                                -044c2 103
 52   Q      = CONS(4) * CFM * DQ                                               -044c2 104
C              CONVERT MOISTURE CHANGE TO LBS OF WATER                          SDSF   640
      WW     = CONS(4) * CFM * WW                                               -044c2 105
C              IGNORE ALL COIL LOADS LESS THAN 1 BTU/HR                         SDSF   642
      IF( ABS(Q) .LT. 1.0 )  THEN                                               SDSF   643
        Q  = 0.0                                                                SDSF   644
        WW = 0.0                                                                SDSF   645
      ENDIF                                                                     SDSF   646
      IF (ICODE.NE.26) THEN                                                     SDSF   647
          QCLAT = AMAX1(0.0,WW*1061.0)                                          SDSF   648
      ELSE                                                                      SDSF   649
          QCLAT = WW*1061.0                                                     SDSF   650
      END IF                                                                    SDSF   651
      <PASTWR> = WR                                                             SDSF   652
      <PASTWOA> = WOA                                                           SDSF   655
c              Save TM and WM for CONS() terms next hour                        -044c2 106
      <sy.Tmix1> = TM                                                           -044c2 107
      <sy.Wmix1> = WM                                                           -044c2 108
      IF (<sy.FanOnPast> .lt. 0.)  THEN  ! start-up hour                        -044c2 109
        <sy.TmixStart> = TM                                                     -044c2 110
        <sy.WmixStart> = WM                                                     -044c2 111
      ENDIF                                                                     -044c2 112
C              HEATING ENERGY IS TOTAL OF COIL LOAD,                            SDSF   656
C              HUMIDIFICATION ENERGY, AND REHEAT FROM                           SDSF   657
C              THE RESET OF THE COLD DECK TEMP                                  SDSF   658
   60 QH     = AMIN1(0.0, Q) * HON                                              HVAC12 192
      IF(IDHUMF .eq. 1)  THEN                                                   -030   165
        QDHUM = QDHUM - CONS(1)*(TCSAVH-THSAVH)*HON                             -030   166
      ENDIF                                                                     -030   167
      IF (CapRh .EQ. 0.)  QH = 0.                                               HVAC12 193
C              ONLY ADD THE DEHUMIDIFICATION REHEAT CORRECTION IN IF            SDSF   660
C              NOT A SINGLE DUCT CENTRAL SYSTEM OR ZONE HEATING IS              SDSF   661
C              ALREADY REQUIRED.                                                SDSF   662
      IF((ICODE.EQ.9).OR.(ICODE.EQ.10))  THEN                                   SDSF   663
        QH = QH + QDHUM                                                         SDSF   664
      ELSE                                                                      SDSF   665
        QH = QH + QDHUM                                                         SDSF   666
      ENDIF                                                                     SDSF   667
C              COOLING ENERGY                                                   SDSF   668
      QC     = AMAX1(0.0, Q) * CON                                              HVAC12 194
      IF (CapRc .EQ. 0.)  QC = 0.                                               HVAC12 195
c              Calculate heating/cooling load distribution thru the hour        HVAC22 150
      CALL PeakSysBins(Hmix, Hcoil)                                             HVAC22 151
                                                                                HVAC22 152
      IF (ICODE .EQ. 26)  GOTO 1000                                             SDSF   670
      IF (<CONDENSER-TYPE> .eq. 3) THEN                                         -045h   87
        EWB = Max(<CL_COIL_EWB>, <COOL-FT-MIN>)                                 -045h   88
      ELSE                                                                      -045h   89
        EWB = Max(<CL_COIL_EWB>, <COOL-FT-MIN>-10.)                             -045h   90
      ENDIF                                                                     -045h   91
      QCM1   = CVAL(<COOL-CAP-FT>,EWB,T1)                                       SDSF   672
      QCM2 = CVAL(<COOL-SH-FT>,EWB,T1)                                          SDSF   673
c              adjust capacity ratios for circulation loop capacity             HVAC1  669
      QCM1 = QCM1 * CapRc                                                       HVAC1  670
      QCM2 = QCM2 * CapRc                                                       HVAC1  671
      QCT    = <COOLING-CAPACITY>*QCM1                                          SDSF   674
      QCS    = <COOL-SH-CAP>*QCM2                                               SDSF   675
      IF (ICODE.EQ.19 .OR. ICODE.EQ.21 .OR. ICODE.EQ.27 .OR.                    -044e  481
     &    ICODE.EQ.28 .OR. (ICODE .EQ. 23 .AND. <COOL-SOURCE> .NE. 1))          -044e  482
     $  QCS = AMAX1(0.0,QCS + CONS(1)*CFM/CFMCYC*(1.0-CBFD)                     -034   194
     $                               *AMAX1(-20.0,AMIN1(20.0,TM-80.0)) )        -034   195
   69 QCS    = AMIN1(QCS,QCT)                                                   SDSF   680
C              SET THE LOW SPEED RATIOS FOR                                     SDSF   681
C              COMPRESSOR-TYPE=TWO-SPEED                                        SDSF   682
      IF (<COMPRESSOR-TYPE>.EQ.1) THEN                                          SDSF   683
          IF (QC.LE.<LOW-SPEED-COOL>*QCT) THEN                                  SDSF   684
              DO II=1,4                                                         SDSF   685
                  LSR(II) = <LOW-SPEED-RATIOS>                                  SDSF   686
              END DO                                                            SDSF   687
          END IF                                                                SDSF   688
      END IF                                                                    SDSF   689
C              PART LOAD RATIO (WHEN FAN ON)                                    SDSF   690
      PLRC   = QC/(QCT*CFMCYC+1.0)                                              SDSF   691
      PLRC = AMIN1(AMAX1(PLRC,0.),1.0)                                          SDSF   692
C              SAVE SESIBLE PLR FOR NEXT HOURS USE                              SDSF   693
      <PASTPLRC> = (QC-QCLAT)/(QCS+1.0)                                         SDSF   694
C              IF NOT A DX COOLING UNIT SKIP                                    SDSF   695
      IF ((ICODE.LT.19 .OR. ICODE.GT.22) .AND. ICODE.NE.28 .AND.                SDSF   696
     1    ICODE.NE.27 .AND.                                                     -044e  483
     &   (ICODE.NE.23 .OR. <COOL-SOURCE> .EQ. 1))  GO TO 200                    -044e  484
C              IF GAS HP GET PERFORMANCE                                        SDSF   698
      IF (<HEAT-SOURCE>.EQ.9) THEN                                              SDSF   699
          CALL GHPPWR(QC,TM,EWB,CFM,1)                                          SDSF   700
          GO TO 200                                                             SDSF   701
C              IF VAR SPEED ELEC HP GET PERFORMANCE                             SDSF   702
      ELSE IF (<HEAT-SOURCE>.EQ.4 .AND. <COMPRESSOR-TYPE>.EQ.2) THEN            SDSF   703
          CALL VHPPWR(QC,TM,EWB,CFM,1)                                          SDSF   704
          GO TO 200                                                             SDSF   705
      END IF                                                                    SDSF   706
C              IF ABOVE FAN ON TEMP SET KW                                      SDSF   707
      OFKWmax = 0.                                                              HVAC22 153
      IF((DBT.GE.<OUTSIDE-FAN-T>).AND.(CON.GT.0.0))                             HVAC22 154
     $   OFKWmax = <OUTSIDE-FAN-ELEC>*<COOLING-CAPACITY>*0.001                  HVAC22 155
      IF(IPCCF .EQ. 1)  OFKWmax = OFKWmax                                       HVAC22 156
     $           + <EVAP-PCC-ELEC>*<COOLING-CAPACITY>*0.001                     HVAC22 157
C              SET TO ZERO IF INTERMITANT AND NO LOAD                           HVAC22 158
      IF((<OUTSIDE-FAN-MODE>.EQ.1).AND.(Q.LE.0.0))  OFKWmax = 0.0               HVAC22 159
      OFKW = OFKWmax                                                            HVAC22 160
C              IF NO COOLING SKIP                                               SDSF   715
      PLRCC  = 0.0                                                              SDSF   716
      IF(QC .LT. 1.0)  GOTO 150                                                 SDSF   717
C              CALC EIR ADJUSTMENTS                                             SDSF   718
C              PART LOAD THE COMPRESSOR SEES                                    SDSF   719
      PLRCC  = AMAX1(PLRC, <MIN-UNLOAD-RATIO>, hgbmin)                          -044d6   6
C              EIR ADJUSTMENTS                                                  SDSF   721
      EIRM1 = CVAL(<COOL-EIR-FT>,EWB,T1)                                        SDSF   722
      EIRM2  = CVAL(<COOL-EIR-FPLR>,PLRCC,PLRCC)                                SDSF   723
C              ELEC INPUT RATIO                                                 SDSF   724
      EIR = <COOLING-EIR>*EIRM1*EIRM2*LSR(2)                                    SDSF   725
C              CYCLING PART LOAD RATIO (FRAC OF HOUR UNIT IS ON IF              SDSF   726
C              THERE ARE NO CYCLING LOSSES                                      SDSF   727
      CLPLR = CFMCYC*AMIN1(PLRC/(hgbmin+.001),1.0)                              SDSF   728
C              CORRECT FOR CYCLING LOSS TO GET PCTON, THE REAL RUN TIME         SDSF   729
      IF (CLPLR .lt. 1.) THEN  ! cycling                                        -048u   21
        CLPLRM = Max(CLPLR, <COOL-CLOSS-MIN>)                                   -048u   22
        CLCOR  = CVAL(<COOL-CLOSS-FPLR>,CLPLRM,CLPLRM)                          -048u   23
        PCTON  = CLPLR / Max(CLCOR,0.001)                                       -048u   24
      ELSE  ! not cycling                                                       -048u   25
        CLCOR = 1.                                                              -048u   26
        PCTON = 1.                                                              -048u   27
      ENDIF                                                                     -048u   28
      CUR(17) = CLCOR                                                           -048u   29
      QCRUN   = PCTON                                                           -048u   30
C              KW CONSUMED BY COMPRESSOR                                        SDSF   733
      QCKW = EIR*QCT*PCTON*NOWFRC                                               SDSF   734
C              KW CONSUMED BY OUTSIDE FAN                                       SDSF   735
C              IF OUTSIDE FAN INTERMITANT IT IS ON ONLY WITH COMPRESSOR         SDSF   736
      IF (<OUTSIDE-FAN-MODE>.EQ.1 .AND. IWCCF.NE.1) THEN                        SDSF   737
          OFKW = OFKWmax*Min(1.,PCTON)*NOWFRC                                   -048u   31
      ELSE                                                                      HVAC22 162
          OFKW = OFKWmax*CFMCYC*NOWFRC                                          HVAC22 163
      ENDIF                                                                     SDSF   741
      IF (<OUTSIDE-FAN-CFLT> .ne. 0) THEN                                       -047k   88
        CUR( 9) = CVAL(<OUTSIDE-FAN-CFLT>,PLRC,T1)                              -044d6   8
        OFKW    = OFKW*CUR(9)                                                   -044d6   9
      ENDIF                                                                     -044d6  10
c              Adjust heating for recovered condensor heat                      HVAC13  71
  120 QCWAS  = -(QC*NOWFRC+QCKW) * <MAX-COND-RCVRY>                             HVAC13  72
      QCWASU = AMAX1(QH*NOWFRC, QCWAS)                                          HVAC13  73
      QH     = QH - QCWASU/NOWFRC                                               HVAC13  74
c              if superheat available for DHW, calculate amount                 HVAC13  75
      IF (<HTREC-DW-HEATER> .GT. 0)  THEN                                       HVAC14  94
c              amount of waste heat left after space heat recovery              HVAC13  77
        Qhtrej = -(QC*NOWFRC+QCKW) - QCWASU                                     HVAC13  78
c              superheat                                                        HVAC13  79
        CUR(6) = CVAL(<COOL-WH-FT>,EWB,T1)                                      HVAC13  80
        Qsuper = -CUR(6)*<COOL-WASTE-HEAT>*(QC*NOWFRC+QCKW)                     HVAC13  81
c              DHW gets only the superheat, and only if any left                HVAC13  82
c              after space heat recovery.  This assumes that space              HVAC13  83
c              heat will take lower quality heat first, and leave               HVAC13  84
c              as much superheat for dhw as possible.                           HVAC13  85
        Qsuper = AMAX1(Qsuper, Qhtrej)                                          HVAC13  86
c              sum into water heater available waste heat recovery              HVAC13  87
        JDW    = <HTREC-DW-HEATER>                                              HVAC14  95
c              actual amount recovered can't be determined until dw-heater      HVAC13  89
c              is simulated - estimate now for hourly reports and               HVAC13  90
c              water-cooled condensers                                          HVAC13  91
        QCWASU = QCWASU + AMAX1(Qsuper,                                         HVAC13  92
     &                          AMIN1(0., <dw;Qask>-<dw;Q_RECVR>))              HVAC16 139
        <dw;Q_RECVR> = <dw;Q_RECVR> + Qsuper                                    HVAC16 140
c              total waste heat available (for hourly reports)                  HVAC13  95
        QCWAS  = QCWAS + Qsuper                                                 HVAC13  96
      ENDIF                                                                     HVAC13  97
C              SAVE STUFF FOR HEAT PUMP REPORTS                                 SDSF   744
      QCLOAD = QC*NOWFRC                                                        SDSF   745
      QCGAS  = QCKW                                                             SDSF   746
      QCRUN  = PLRCC                                                            SDSF   747
      QCAUX  = OFKW*BTUKW                                                       SDSF   748
      QCKW   = QCKW*KWBTU                                                       HVAC22 164
      QCCKWS = QCKW                                                             HVAC22 165
      PLRCS  = PLRCC                                                            SDSF   759
      QCCMPS = QC*NOWFRC                                                        SDSF   760
      SKWQC  = SKWQC  + QCKW   + OFKW                                           SDSF   770
      <SKW>  = <SKW>  + QCKW   + OFKW                                           SDSF   771
c              assign electric loads to meters                                  HVAC22 166
      IF (QCKW .GT. 0.)  THEN                                                   HVAC22 167
        QCKWmax = MAX(QCKW/EIRM2, QCKW)                                         HVAC22 168
        CALL PeakSysDist(1,2, QCKW,QCKWmax,  CoolEndUse,<COOL-E-MS>)            HVAC22 169
      ENDIF                                                                     HVAC22 170
      CALL PeakSysDist(1,2, OFKW,OFKWmax, HtRejEndUse,<HTREJ-E-MS>)             HVAC22 171
  150 CONTINUE                                                                  SDSF   775
  200 CONTINUE                                                                  SDSF   776
      QC = QC*NOWFRC                                                            SDSF   777
                                                                                -044d   65
c              If water-cooled condenser, pass load and flow onto loop          -044d   66
      IF (<CW-LOOP> .ne. 0) THEN                                                -047k   89
        Jlp = <CW-LOOP>                                                         -044d   68
        IF (PLRCC .gt. 0.)  <CW_COIL_Q> = QC + QCKW*BTUKW + QCWASU              -044d2  11
        QCLUPS = QCLUPS + <CW_COIL_Q>                                           -044d   70
        GPM    = <CWDESGPMS> * Min(1.,PCTON)*NOWFRC                             -048u   32
c              if condenser is on same loop as water-side economizer, pass      -044d   73
c              on only the incremental gpm, but at least nonzero as flag        -044d   74
c              for plant calcs                                                  -044d   75
        IF (<CW-LOOP> .eq. <WSE-LOOP>)                                          -044d   76
     &    GPM = Max(.01, GPM-<WSE_COIL_GPM>)                                    -044d   77
        IF (PLRCC .gt. 0.)  <CW_COIL_GPM> = GPM                                 -044d2  13
      ENDIF                                                                     -044d   79
                                                                                -044d   80
C WHEN REFRIG EQUIP IS PRESENT, THE MOISTURE BALANCE                            SDSF   778
C MUST BE CALCULATED EVEN WHEN THE FANS ARE OFF.                                SDSF   779
      IF ((FON .NE. 0.) .OR. (<REFG-ZONE-ZP1> .EQ. 0)) GOTO 209                 SDSF   780
      G = 0.                                                                    SDSF   781
      GW = 0.                                                                   SDSF   782
      IG = 0                                                                    SDSF   783
      ZP1 = <REFG-ZONE-ZP1>                                                     SDSF   784
      ZP2 = <ZP2>                                                               SDSF   785
      CFMACH = <CFM/ACH>                                                        SDSF   786
C INFILTRATION RATIO                                                            SDSF   787
      F = CINF / CFMACH                                                         SDSF   788
C INTERNAL LATENT GAINS                                                         SDSF   789
      DW = QLSUM / (CONS(2) * CFMACH)                                           SDSF   790
C LAST HOURS HUMIDITY RATIO                                                     SDSF   791
      WRPAST = <PASTWR>                                                         SDSF   792
C THIS HOURS HUMIDITY RATIO                                                     SDSF   793
 202  WR = (WRPAST + F*HUMRAT + GW + DW) / (1.0 + F + G)                        SDSF   794
      WR     = AMIN1(WFUNC(<TNOW>,100.,PTAM),WR)                                -113    40
C NOW ADD IN ONE EVAPORATOR AT A TIME                                           SDSF   795
      IG = IG + 1                                                               SDSF   796
      IF ((IG .GT. <NUM-REFG-EQUIP>) .OR. (WR .LE. <REFG-EVAP-W>))              SDSF   797
     1                                                        GOTO 208          SDSF   798
      GNEW = <REFG-CFM> / CFMACH * RQLSCH(IG)                                   SDSF   799
      G = G + GNEW                                                              SDSF   800
      GW = GW + GNEW*<REFG-EVAP-W>                                              SDSF   801
      GO TO 202                                                                 SDSF   802
 208  <G> = G                                                                   SDSF   803
      <GW> = GW                                                                 SDSF   804
      <PASTWR> = WR                                                             SDSF   805
 209  CONTINUE                                                                  SDSF   806
  210 CONTINUE                                                                  SDSF   807
C     RESTORE ZONE PIONTERS                                                     SDSF   808
      ZP1 = JSZP1                                                               SDSF   809
      ZP2 = JSZP2                                                               SDSF   810
      <PLRC-PREV-HR> = PLRC                                                     SDSF   811
C********************** run function : SDSF-1 **********************            SDSF   812
      IF( MSYSF(66) .NE. 0 )   CALL  FINTS( MSYSF(66), 1. )                     SDSF   813
C*******************************************************************            SDSF   814
c              save coil flows and loads for any circulation loop calcs         HVAC1  672
c              heating and cooling must be summed separately, as                HVAC1  673
c              SDSF is called twice by RESVVT                                   HVAC1  674
 1000 IF (ICODE .NE. 9  .AND.  ICODE .NE. 10)  THEN                             HVAC4   94
        IF (ICODE .NE. 27  .OR.  QH .LT. -1.)  THEN                             HVAC4   95
          IF (CFMCYC .NE. 0.)  THEN                                             -131   355
            <HT_COIL_CFM> = CFM / CFMCYC                                        -131   356
            <CL_COIL_CFM> = CFM / CFMCYC                                        -131   357
          ENDIF                                                                 -131   358
          <HT_COIL_EDB>   = TM                                                  HVAC4   97
          <HT_COIL_CYCLE> = CFMCYC * HONFRC                                     HVAC4   98
          <HT_COIL_Q>     = QH                                                  HVAC4   99
        ENDIF                                                                   HVAC4  100
        IF (ICODE .NE. 27  .OR.  QC .GT. 1.)  THEN                              HVAC4  101
          <CL_COIL_EDB>   = TM                                                  HVAC4  103
          <CL_COIL_EWB>   = WBFS(TM,WM,PATM)                                    HVAC4  104
          <CL_COIL_LWB>   = WBFS(TC,WCOIL,PATM)                                 HVAC4  105
          <CL_COIL_CYCLE> = CFMCYC * CONFRC                                     HVAC4  106
          <CL_COIL_Q>     = QC                                                  HVAC4  107
        ENDIF                                                                   HVAC4  108
      ENDIF                                                                     HVAC4  109
c              not implemented yet                                              HVAC1  689
c     <WSE_COIL_CFM> = CFM * PC                                                 HVAC1  690
c     <WSE_COIL_EWB> =                                                          HVAC1  691
c     <WSE_COIL_Q>   =                                                          HVAC1  692
c     <CW_COIL_GPM>  =                                                          HVAC1  693
c     <CW_COIL_Q>    =                                                          HVAC1  694
c                                                                               HVAC1  695
      RETURN                                                                    SDSF   821
      END                                                                       SDSF   822
      SUBROUTINE SORT(ITABL,NITEMS,LENSRT,LENGTH)                               SORT     2
C                                                                               SORT     3
C              SORT ITABL(LENGTH,NITEMS) USING FIRST                            SORT     4
C              LENSRT WORDS                                                     SORT     5
C                                                                               SORT     6
      DIMENSION ITABL(LENGTH,NITEMS)                                            SORT     7
C                                                                               SORT     8
      IF (NITEMS .LT. 2)  RETURN                                                SORT     9
      DO 200 I=2,NITEMS                                                         SORT    10
      IM1    = I - 1                                                            SORT    11
      DO 100 J=1,IM1                                                            SORT    12
      JT     = I - J + 1                                                        SORT    13
      DO 50 IV=1,LENSRT                                                         SORT    14
      IF (ITABL(IV,JT) .GT. ITABL(IV,JT-1))  GO TO 200                          SORT    15
      IF (ITABL(IV,JT) .LT. ITABL(IV,JT-1))  GO TO 60                           SORT    16
   50 CONTINUE                                                                  SORT    17
      GOTO 200                                                                  SORT    18
   60 CONTINUE                                                                  SORT    19
C              SWITCH NEIGHBORING ITEMS                                         SORT    20
      DO 70 IV=1,LENGTH                                                         SORT    21
      ITEMP  = ITABL(IV,JT)                                                     SORT    22
      ITABL(IV,JT) = ITABL(IV,JT-1)                                             SORT    23
      ITABL(IV,JT-1) = ITEMP                                                    SORT    24
   70 CONTINUE                                                                  SORT    25
  100 CONTINUE                                                                  SORT    26
  200 CONTINUE                                                                  SORT    27
      RETURN                                                                    SORT    28
      END                                                                       SORT    29
      SUBROUTINE  SSBASB(ISVFLG)                                                SSBASB   2
C                                                                               SSBASB   3
C            CALLED BY RESYS.  DOES THERMOSTATIC BASEBOARD HEATING              SSBASB   4
C            OF SUNSPACES.  IT IS ASSUMED THAT THE SUNSPACE                     SSBASB   5
C            RECEIVES NO CENTRAL HEATING OR COOLING, AND THAT, UNLIKE           SSBASB   6
C            OTHER SUBZONES IN RESYS, THE BASEBOARD HEATING                     SSBASB   7
C            OF THE SUNSPACE IS INDEPENDENT OF THE CONTROL ZONE.                SSBASB   8
C                                                                               SSBASB   9
C                                                                               SSBASB  10
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      common  /FNSYS/  ISKIPS, MSYSF(120)                                       /FNSYS/  2
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      COMMON  /SYSTD / TH,TC,TM,TR,QH,QC,QHZ,QCZ,QHB,QHP,QHUM,                  /SYSTD/  2
     1                 QDHUM,TCMIN,THMAX,QLSUM,QPSUM,CFM,CFMH,CFMC,             /SYSTD/  3
     2                 RCFM,ECFM,CINF,FON,HON,CON,BON,SCONS(3),PH,PC,           /SYSTD/  4
     3                 SKW,FANKW,unused1,WR,WM,WCOIL,WW,PO,D,                   -046f    1
     4                 FTEMP,TCR,QHR,RfanPumpKW,SGAS,SKWQH,SKWQC,QCLAT,         -131    23
     5                 SFKW,RFKW,FONNGT,WSURF,RWalkinQ,TSURF,TRh,               -131    24
     6                 CBF,CBF1,CBF2,EON,PLRCFM,PLRC,PLRH,QCM1,                 /SYSTD/  8
     7                 QCM2,QHM1,EIRM1,EIRM2,EIR,OFKW,QCT,QCS,                  /SYSTD/  9
     8                 WRMAX,WRMIN,CFMRAT,QdistG,QdistL,RON,QHT,                /SYSTD/ 10
     9                 TPOMIN,POMIN,QHSUP,QRSENS,QRLAT,QRREC,QRREJ,             /SYSTD/ 11
     1                 RCOMKW,RDEFKW,RAUXKW,ECFMP,CFMIN,CINFP,DT,DW,            /SYSTD/ 12
     2                 EWB,IC,NATTSP,Q,RETR,SLOAD,QLSUMP,T,TCHUM,TEND,          /SYSTD/ 13
     3                 TS,hgbmin,HPDefE,EconoOnly,TDuctEnv,                     -044e1   1
     4                 QCUNMT,CapRh,CapRph,CapRc                                HVAC25   3
      REAL             SYSTD(113)                                               HVAC19  13
      EQUIVALENCE      (SYSTD(1),TH)                                            RemPA   65
      COMMON  /TIME  / IDOY, IYR, IMO, IDAY, IHR,                               Time     4
     &                 ISCMO, ISCDAY, ISCHR, IDOW, ISCDOW, iDSdates(6),         -044e5   1
     &                 iTimeFlg, iDSFlg, iDDFlg, InitialFlg, LeapYr,            Time     6
     &                 CLOCK(10), MONDSC(13), MONLEN(12), MONSDA(12)            HR      12
      COMMON  /ZONED / EXCFM,FH,FC,CFMZ,QHBZ,QOVER,THZ,TCZ,ERMAX,ERMIN,         /ZONED/  2
     1                 TRY,FTD,CORINT,G0,G1,G2,G3,SIGMAG,TL,ZQHR,TAVE,          /ZONED/  3
     2                 ZQH,ZQC,FCHPS(15),ACFM,ZKW,TCMINZ,THMAXZ,                /ZONED/  4
     3                 ERMAXM,ERMINM,THR,CSSCND,CSSVEC,HENOW,QGWIN,             /ZONED/  5
     4                 QSNABT,QGOPWL,QGVEC,CFMCVT,SSFPT,CFMVNT,ZFANKW,          /ZONED/  6
     5                 ZKWCBT,ZKWHBT,ZCapRbbrd, XC,ZC,XH,ZH                     -044e2   7
      REAL ZONED(63)                                                            -044e2   8
      EQUIVALENCE (ZONED(1),EXCFM)                                              /ZONED/  9
C                                                                               SSBASB  17
C                                                                               SSBASB  18
C            INITIALIZATION                                                     SSBASB  19
C                                                                               SSBASB  20
      HENOW = 0.                                                                SSBASB  21
      QHBZ = 0.                                                                 SSBASB  22
C            HEATING SETPOINT                                                   Time   371
      THZSS = SchVal(<HEAT-TEMP-SCH>, -999.)                                    Time   372
C            SKIP IF SUNSP IS UNCONDITIONED                                     SSBASB  27
      IF (<ZONE-TYPE>.NE.1) GO TO 1000                                          SSBASB  28
C            SKIP IF HEATING SCH IS OFF OR NO THERMOSTATIC BASEBOARD            SSBASB  29
      IF (HON.EQ.0.0.OR.<BASEBOARD-CTRL>.NE.1) GO TO 1000                       SSBASB  30
C            HEATING SETPOINT                                                   SSBASB  31
      THZ = THZSS                                                               SSBASB  32
      IF( TRY .GE. THZ )  GOTO  700                                             SSBASB  33
C            HEAT IS NEEDED TO MAINTAIN SETPOINT                                SSBASB  34
      QHBZ = FTD - G0*THZ                                                       SSBASB  35
      QHBZ = AMAX1(QHBZ,<BASEBOARD-RATING>)                                     SSBASB  36
      IF (ISVFLG.NE.1 .AND. ISVFLG.NE.2) QHB=QHB+QHBZ*<MULTIPLIER>              SSBASB  37
C            TEMP AT END OF THIS HOUR                                           SSBASB  38
      <TNEW> = (FTD - QHBZ)/G0                                                  SSBASB  39
700   CONTINUE                                                                  SSBASB  40
C********************** run function : SSBASB-1 ************************        SSBASB  41
      IF( MSYSF(67) .NE. 0 )   CALL  FINTS( MSYSF(67), 0. )                     SSBASB  42
C*******************************************************************            SSBASB  43
 1000 CONTINUE                                                                  SSBASB  44
      RETURN                                                                    SSBASB  45
      END                                                                       SSBASB  46
      SUBROUTINE GetDemands_ER(Ixf, Mode, Tenvir, Zmult,  Var1, Var2)           GetER    2
c                                                                               GetER    3
C              DEVELOPED BY                                                     -130    15
C                            J. J. Hirsch & S. D. Gates                         -130    16
C                            James J. Hirsch & Associates                       -130    17
C                            Camarillo, California                              -130    18
C                                                                               -130    19
Copyright (c) 1997 by James J. Hirsch. All Rights Reserved. Unpublished         -130    20
c rights reserved under the Copyright Laws of the United States.                -130    21
c RESTRICTED RIGHTS NOTICE: Government use, reproduction or disclosure          -130    22
c is subject to restrictions as set forth in Rights in Data (g)(3) in           -130    23
c UC/LBL purchase order 4607010 with J.J. Hirsch & Associates.                  -130    24
C                                                                               -130    25
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      COMMON  /SYSTD / TH,TC,TM,TR,QH,QC,QHZ,QCZ,QHB,QHP,QHUM,                  /SYSTD/  2
     1                 QDHUM,TCMIN,THMAX,QLSUM,QPSUM,CFM,CFMH,CFMC,             /SYSTD/  3
     2                 RCFM,ECFM,CINF,FON,HON,CON,BON,SCONS(3),PH,PC,           /SYSTD/  4
     3                 SKW,FANKW,unused1,WR,WM,WCOIL,WW,PO,D,                   -046f    1
     4                 FTEMP,TCR,QHR,RfanPumpKW,SGAS,SKWQH,SKWQC,QCLAT,         -131    23
     5                 SFKW,RFKW,FONNGT,WSURF,RWalkinQ,TSURF,TRh,               -131    24
     6                 CBF,CBF1,CBF2,EON,PLRCFM,PLRC,PLRH,QCM1,                 /SYSTD/  8
     7                 QCM2,QHM1,EIRM1,EIRM2,EIR,OFKW,QCT,QCS,                  /SYSTD/  9
     8                 WRMAX,WRMIN,CFMRAT,QdistG,QdistL,RON,QHT,                /SYSTD/ 10
     9                 TPOMIN,POMIN,QHSUP,QRSENS,QRLAT,QRREC,QRREJ,             /SYSTD/ 11
     1                 RCOMKW,RDEFKW,RAUXKW,ECFMP,CFMIN,CINFP,DT,DW,            /SYSTD/ 12
     2                 EWB,IC,NATTSP,Q,RETR,SLOAD,QLSUMP,T,TCHUM,TEND,          /SYSTD/ 13
     3                 TS,hgbmin,HPDefE,EconoOnly,TDuctEnv,                     -044e1   1
     4                 QCUNMT,CapRh,CapRph,CapRc                                HVAC25   3
      REAL             SYSTD(113)                                               HVAC19  13
      EQUIVALENCE      (SYSTD(1),TH)                                            RemPA   65
c                                                                               GetER    8
      Var1 = 0.                                                                 GetER    9
      Var2 = 0.                                                                 GetER   10
c                                                                               GetER   11
      Jxf = Ixf                                                                 GetER   12
      DO  WHILE (Jxf .GT. 0)                                                    GetER   13
        IF (<xf;ZonePtr> .NE. ZP1)  THEN                                        -031    48
          Jxf = <xf;NextPtr>                                                    -031    49
          CYCLE                                                                 -031    50
        ENDIF                                                                   -031    51
        SELECT CASE (<xf;SubType>)                                              GetER   15
c                                                                               GetER   16
          CASE (1)                                                              GetER   17
c                                                                               GetER   18
          CASE (2)                                                              GetER   19
c                                                                               GetER   20
          CASE (3)                                                              GetER   21
            CALL PipeDT(Jxf, -77777., -77777., Tenvir, 1,                       GetER   22
     &                  xxx, Qer, Tmean)                                        GetER   23
            IF (Mode .EQ. 1)  THEN                                              GetER   24
              CALL GetDesignVars2(Jxf, xxx, UA)                                 GetER   25
              Qer = UA * (<TNOW> - Tmean)                                       GetER   26
              UA  = UA / Zmult                                                  GetER   27
            ENDIF                                                               GetER   28
            Qer = Qer / Zmult                                                   GetER   29
c                                                                               GetER   30
          CASE (4)                                                              GetER   31
c                                                                               GetER   32
          CASE (5)                                                              GetER   33
c              Refrigerated display fixture conductive loss - adjust for        GetER   34
c              amount which bypasses directly to return                         GetER   35
            CALL GetVars3(Jxf, xxx, UA, CaseT)                                  GetER   36
            IF (Mode .EQ. 1)  THEN                                              GetER   37
              UA  = UA * (1.-<REFG-DIRECT-FRAC>)                                GetER   38
              Qer = UA * (<TNOW> - CaseT)                                       GetER   39
            ELSE                                                                GetER   40
              Qer   = UA * (Tenvir - CaseT)                                     GetER   41
              QPSUM = QPSUM + Qer*<REFG-DIRECT-FRAC>*<xf;Multiplier>            GetER   42
              Qer   = Qer * (1.-<REFG-DIRECT-FRAC>)                             GetER   43
            ENDIF                                                               GetER   44
c                                                                               GetER   45
          CASE (6)                                                              GetER   46
c              Ice Skating Rink                                                 IcRink  74
            CALL IceRink(30, <zn:ICE-RINK>)                                     IcRink  75
            CALL GetVars3(Jxf, Qer, UA, Trink)                                  IcRink  76
            Qer = Qer + UA * (Tenvir - Trink)                                   IcRink  77
          CASE (7)                                                              GetER   48
c              Fixed mechanical gains - negate to convert to an                 GetER   49
c              extraction rate                                                  GetER   50
            CALL GetVars1(Jxf, Qer)                                             GetER   51
            Qer = -Qer                                                          GetER   52
            UA  = 0.                                                            GetER   53
c                                                                               GetER   54
        END SELECT  ! xf;SubType                                                GetER   55
c                                                                               GetER   56
        IF (Mode .EQ. 1)  THEN                                                  GetER   57
          Var1 = Var1 + Qer * <xf;Multiplier>                                   GetER   58
          Var2 = Var2 + UA  * <xf;Multiplier>                                   GetER   59
        ELSE                                                                    GetER   60
          Qer  = Qer * <xf;Multiplier>                                          GetER   61
          Var1 = Var1 + Min(0., Qer)                                            GetER   62
          Var2 = Var2 + Max(0., Qer)                                            GetER   63
        ENDIF                                                                   GetER   64
c                                                                               GetER   65
        Jxf = <xf;NextPtr>                                                      GetER   66
      ENDDO  ! LI                                                               GetER   67
c                                                                               GetER   68
      RETURN                                                                    GetER   69
      END                                                                       GetER   70
      SUBROUTINE  SSFCOR(IFLG)                                                  SSFCOR   2
C                                                                               SSFCOR   3
C              CALLED BY TEMDEV AND RESYS WITH IFLG=1 AND BY DKTEMP             SSFCOR   4
C              WITH IFLG=2 (NO HISTORY UPDATE) FOR ZONES WHICH ARE              SSFCOR   5
C              SUNSPACES (<ISUNSP>=1) OR ZONES NEXT TO A SUNSPACE               SSFCOR   6
C              (<ISUNSP>=2).  CALCULATES THE CONTRIBUTION                       SSFCOR   7
C            TO THE TEMDEV F FACTOR DUE TO CONDUCTIVE AND                       SSFCOR   8
C            CONVECTIVE HEAT TRANSFER ACROSS ALL THE COMMON WALLS IN            SSFCOR   9
C            THE ZONE (A COMMON WALL IS DEFINED AS A STANDARD INTERIOR          SSFCOR  10
C            WALL BETWEEN A SUNSPACE AND A REGULAR SPACE).                      SSFCOR  11
C                                                                               SSFCOR  12
C            THE CONDUCTIVE CONTRIBUTION (CSSCND) IS THE SUM OF TWO             SSFCOR  13
C            PARTS, ONE DUE TO QUICK CONDUCTION THROUGH WINDOWS IN              SSFCOR  14
C            THE COMMON WALLS, AND ANOTHER DUE TO QUICK OR DELAYED              SSFCOR  15
C            CONDUCTION THROUGH THE OPAQUE PART OF COMMON WALLS.                SSFCOR  16
C            IN THE CONDUCTION CALCULATION, THE AIR TEMP OF THE ZONE IS         SSFCOR  17
C            KEPT FIXED AT THE LOADS CALC TEMP WHILE THE AIR TEMP OF            SSFCOR  18
C            THE ADJACENT ZONE IS TAKEN TO BE THE PREVIOUS-HR AIR TEMP          SSFCOR  19
C            AS CALCULATED BY TEMDEV.  THE EFFECT OF SOLAR RADIATION            SSFCOR  20
C            ABSORBED BY THE SUNSP SIDE OF A COMMON WALL IS TAKEN INTO          SSFCOR  21
C            ACCOUNT IN THE CONDUCTANCE CALCULATION (SOLAR GAIN THRU            SSFCOR  22
C            COMMON-WALL WINDOWS IS HANDLED IN THE LOADS PROGRAM AND            SSFCOR  23
C            IS INCLUDED IN THE HOURLY SENSIBLE LOAD PASSED TO SYSTEMS).        SSFCOR  24
C            (THE INT WALL DELAYED CONDUCTION CALCULATION IN BASED ON           SSFCOR  25
C            THE FORMALISM DERIVED BY ENDER ERDEM FOR EXTERIOR WALL             SSFCOR  26
C            CONDUCTION IN THE DOE-2 MODIFIED THERMAL BALANCE LOADS             SSFCOR  27
C            PROGRAM).                                                          SSFCOR  28
C                                                                               SSFCOR  29
C            THE CONVECTIVE CONTRIBUTION (CSSVEC) IS DETERMINED BY THE          SSFCOR  30
C            HEAT TRANSFER BY FORCED OR NATURAL AIR FLOW ACROSS COMMON          SSFCOR  31
C            WALLS IN THE ZONE.  EACH COMMON WALL HAS ASSOCIATED WITH IT        SSFCOR  32
C            ONE OF FIVE DIFFERENT AIR-FLOW TYPES --                            SSFCOR  33
C             (1) NO AIR FLOW (HEAT TRANSFER BY CONDUCTION ONLY),               SSFCOR  34
C             (2) FAN-FORCED THERMOCIRCULATION THROUGH UPPER AND LOWER VENTS    SSFCOR  35
C                   IN THE COMMON WALL,                                         SSFCOR  36
C             (3) FAN-FORCED FLOW OF OUTSIDE AIR INTO THE SUNSPACE,             SSFCOR  37
C                   ACCOMPANIED BY TRANSFER OF                                  SSFCOR  38
C                   SUNSP AIR TO THE ROOM THROUGH A VENT IN THE COMMON WALL,    SSFCOR  39
C             (4) FREE THERMOCIRCULATION THRU UPPER AND LOWER VENTS IN THE      SSFCOR  40
C                   COMMON WALL,                                                SSFCOR  41
C             (5) FREE CONVECTION THROUGH AN OPEN DOORWAY IN THE COMMON         SSFCOR  42
C                   WALL.                                                       SSFCOR  43
C                                                                               SSFCOR  44
C             A SUNSP OR ROOM ADJ TO A SUNSP IS ALLOWED TO HAVE AT MOST         SSFCOR  45
C             ONE COMMON WALL ACROSS WHICH CONVECTION TAKES PLACE.              SSFCOR  46
C             THE CONVECTIVE HEAT TRANSFER ACROSS THE COMMON WALL IS            SSFCOR  47
C             OBTAINED BY DIVIDING THE HOUR INTO SMALL TIME STEPS               SSFCOR  48
C             AND CALCULATING THE CONVECTIVE FLOW BASED ON THE SUNSP            SSFCOR  49
C             AND ROOM TEMPERATURE AT THE BEGINNING OF EACH TIME STEP.          SSFCOR  50
C             VENTING OF THE SUNSPACE IS CALCULATED AT THE SAME TIME THE        SSFCOR  51
C             INTERZONE CONVECTION IS CALCULATED.  IF THERE IS NO INTER-        SSFCOR  52
C             ZONE CONVECTION, SUNSP VENTING IS CALCULATED WITH U0, THE         SSFCOR  53
C             INTERZONE CONVECTIVE CONDUCTANCE, = 0.                            SSFCOR  54
C                                                                               SSFCOR  55
C                                                                               SSFCOR  56
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON  /ENDUSE/ SUPPKW, HEATKW                                           HVAC27   1
      common  /FNSYS/  ISKIPS, MSYSF(120)                                       /FNSYS/  2
      COMMON  /FZZZ1/   CAPXXX, CORINX, CWIDTX, ERMNXX, ERMXXX, FTDEVX          /FZZZ1/  2
     1                , FXXXXX, HEIGHX, HEXXXX, HPCAPX, HPKWXX, IFLGXX          /FZZZ1/  3
     2, IFUELX, ISHXXX, LSR2XX, LSR3XX, PATMXX, PLRXXX, PLSXXX, POMXXX          /FZZZ1/  4
     3, QHFXXX, QMULTX, QNOWXX, SLOADX, TAPPXX, TGINXX, TLOADX, TNOWXX          /FZZZ1/  5
     4, TSETXX, TWOUTX, UCHANX, ICALLX                                          /FZZZ1/  6
      REAL              LSR2XX, LSR3XX                                          /FZZZ1/  7
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      COMMON  /SYSTD / TH,TC,TM,TR,QH,QC,QHZ,QCZ,QHB,QHP,QHUM,                  /SYSTD/  2
     1                 QDHUM,TCMIN,THMAX,QLSUM,QPSUM,CFM,CFMH,CFMC,             /SYSTD/  3
     2                 RCFM,ECFM,CINF,FON,HON,CON,BON,SCONS(3),PH,PC,           /SYSTD/  4
     3                 SKW,FANKW,unused1,WR,WM,WCOIL,WW,PO,D,                   -046f    1
     4                 FTEMP,TCR,QHR,RfanPumpKW,SGAS,SKWQH,SKWQC,QCLAT,         -131    23
     5                 SFKW,RFKW,FONNGT,WSURF,RWalkinQ,TSURF,TRh,               -131    24
     6                 CBF,CBF1,CBF2,EON,PLRCFM,PLRC,PLRH,QCM1,                 /SYSTD/  8
     7                 QCM2,QHM1,EIRM1,EIRM2,EIR,OFKW,QCT,QCS,                  /SYSTD/  9
     8                 WRMAX,WRMIN,CFMRAT,QdistG,QdistL,RON,QHT,                /SYSTD/ 10
     9                 TPOMIN,POMIN,QHSUP,QRSENS,QRLAT,QRREC,QRREJ,             /SYSTD/ 11
     1                 RCOMKW,RDEFKW,RAUXKW,ECFMP,CFMIN,CINFP,DT,DW,            /SYSTD/ 12
     2                 EWB,IC,NATTSP,Q,RETR,SLOAD,QLSUMP,T,TCHUM,TEND,          /SYSTD/ 13
     3                 TS,hgbmin,HPDefE,EconoOnly,TDuctEnv,                     -044e1   1
     4                 QCUNMT,CapRh,CapRph,CapRc                                HVAC25   3
      REAL             SYSTD(113)                                               HVAC19  13
      EQUIVALENCE      (SYSTD(1),TH)                                            RemPA   65
      COMMON  /TIME  / IDOY, IYR, IMO, IDAY, IHR,                               Time     4
     &                 ISCMO, ISCDAY, ISCHR, IDOW, ISCDOW, iDSdates(6),         -044e5   1
     &                 iTimeFlg, iDSFlg, iDDFlg, InitialFlg, LeapYr,            Time     6
     &                 CLOCK(10), MONDSC(13), MONLEN(12), MONSDA(12)            HR      12
      COMMON  /MISCD / TEMPS(4,9999),CONS(5),TEMPSL(9999),                      -048a   10
     1                 BLDGQH,BLDGQC,BLDGQL,BLDGP,BPMULT,                       /MISCD/  3
     $                 DBTMIN,DBTMAX,WMIN,WMAX,NSPZ(9999),                      -048a   11
     3                 DQ, DTP, DTR, DTS, FPI, PLRCC , POM, TC2, TDM,           /MISCD/  5
     4                 TRA,WCOL,WCOLM,WMM,YPI,KWBTU,BTUKW,UNFILD,Unusedm        RemPA   45
      REAL             KWBTU                                                    /MISCD/  7
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
      COMMON  /ZONED / EXCFM,FH,FC,CFMZ,QHBZ,QOVER,THZ,TCZ,ERMAX,ERMIN,         /ZONED/  2
     1                 TRY,FTD,CORINT,G0,G1,G2,G3,SIGMAG,TL,ZQHR,TAVE,          /ZONED/  3
     2                 ZQH,ZQC,FCHPS(15),ACFM,ZKW,TCMINZ,THMAXZ,                /ZONED/  4
     3                 ERMAXM,ERMINM,THR,CSSCND,CSSVEC,HENOW,QGWIN,             /ZONED/  5
     4                 QSNABT,QGOPWL,QGVEC,CFMCVT,SSFPT,CFMVNT,ZFANKW,          /ZONED/  6
     5                 ZKWCBT,ZKWHBT,ZCapRbbrd, XC,ZC,XH,ZH                     -044e2   7
      REAL ZONED(63)                                                            -044e2   8
      EQUIVALENCE (ZONED(1),EXCFM)                                              /ZONED/  9
      COMMON  /BUF   / DBUF(52,9999), IZREF(9999),                              -048a    8
     &                 DAYMTR(61,24), ElecPeaks5(13,25,24)                      Time     2
      DIMENSION        IDBUF(52,9999), OBUF(42,24,4), IOBUF(42,24,4)            -048a    9
      EQUIVALENCE      (DBUF(1,1),IDBUF(1,1)),                                  /BUF/    5
     1                 (OBUF(1,1,1),DBUF(1,1)),                                 /BUF/    6
     2                 (OBUF(1,1,1),IOBUF(1,1,1))                               /BUF/    7
C                                                                               SSFCOR  68
      COMMON  /REPORT/ IREPRT(4,37),IPRG,IUNIQV(100),IUNIQS(100),IUNIQL         HVAC14   4
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                 IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                        /FILES/  3
     2               , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                   /FILES/  4
     3                 IHRREP(3), IHRPAS(2)                                     /FILES/  5
C                                                                               SSFCOR  71
      COMMON  /SSRESY/  IVENTF, XRAN                                            /SSRESY/ 2
     1  , CFMCV1, CFMCV2, DEL   , DQGVC1, DQGVNT, DTMIN , FANHTM, FLWMUL        /SSRESY/ 3
     2  , IAFTYP, ISSV  , IVDONE, IZP1RM, IZP1SS, MINH  , MOUH  , MRRFSV        /SSRESY/ 4
     3  , MRRVSF, MRY   , MRZ   , MSRFSV, MSRVSF, NADJ  , NCWCON, NDELT         /SSRESY/ 5
     4  , Q10   , QGVEC1, QGVEC2, QGVNT , QGWAL , QHBZNX, QIN   , QINXS         /SSRESY/ 6
     5  , QLWAL , QOUT  , QOUTXS, QPNX  , QSUNIN, QW    , SSVFP , T1T           /SSRESY/ 7
     6  , T1TB  , T2MAX , T2T   , T2TB  , T2TFV , TINNEW, TNEXT , TOTNEW        /SSRESY/ 8
     7  , UOT   , UVRMG , UVT   , VNTRM , ZDELMN, ZDELMX, ZMNEXT                /SSRESY/ 9
     1  , ECPLR(3), ERMXEC(4), TCMNEC(3), QCV, TVZ, NVCFMS, TNVCFMS             -045d    1
      COMMON  /DESHRQ/ NDESDY, IDDTYP(2), DESHRQ(360)                           Time     3
      INTEGER      ZP2NXT,ZP1THS,ZP1NXT                                         SSFCOR  74
      DIMENSION T1I(20),T2I(20),DQVC(20),DQV(20),ER1(20),ER2(20)                SSFCOR  75
      COMMON /WCTRL/   IwinReturn, Imsgflg                                      /WCTRL/  2
#ifndef _DLL                                                                 /* -048     1 */ 
      COMMON /WIN_MB/ MB_OK,MB_ICONSTOP,MB_ICONEXCLAMATION,MB_TASKMODAL,        -048     2
     &                MB_ICONINFORMATION                                        -048     3
#else                                                                        /* -048     4 */ 
      include 'msgbox.fi'                                                       -048     5
#endif                                                                       /* -048     6 */ 
C                                                                               SSFCOR  79
      IFLGXX = IFLG                                                             SSFCOR  80
      JJ = 1                                                                    SSFCOR  81
C            INITIALIZE HEAT GAINS, ETC.                                        SSFCOR  82
      QGWIN = 0.                                                                SSFCOR  83
      QGOPWL = 0.                                                               SSFCOR  84
      QGVEC = 0.                                                                SSFCOR  85
      U0 = 0.                                                                   SSFCOR  86
      QGVNT = 0.                                                                SSFCOR  87
      IVDONE = 0                                                                SSFCOR  88
      SSFP = 0.                                                                 SSFCOR  89
      CFMCV1 = 0.                                                               SSFCOR  90
      CFMCV2 = 0.                                                               SSFCOR  91
      QGVEC1 = 0.                                                               SSFCOR  92
      QGVEC2 = 0.                                                               SSFCOR  93
      QSNABT = 0.                                                               SSFCOR  94
      CFMCVT = 0.                                                               SSFCOR  95
      SSFPT  = 0.                                                               SSFCOR  96
C              MAX AND MIN NUMBER OF TIME STEPS AND MIN TEMP CHANGE             -037b   16
C              FOR CONVECTION CALCULATION                                       -037b   17
      ZDELMN = 20.                                                              -037b   18
      ZDELMX = 100.                                                             -037b   19
      DTMIN  = 2.                                                               -037b   20
      NIW1 = <NATTCH>                                                           SSFCOR  97
C              GET NUMBER OF COMMON WALLS WITH CONVECTION.  IF                  SSFCOR  98
C              NCWCON=0, SUNSP VENTING WILL BE DONE BELOW FOR THE               SSFCOR  99
C              FIRST COMMON WALL.  OTHERWISE, IT WILL BE DONE                   SSFCOR 100
C              SIMULTANEOUSLY WITH THE CONVEC CALC FOR THE COMMON               SSFCOR 101
C              WALL WHICH HAS CONVECTIVE FLOW.                                  SSFCOR 102
      NCWCON = 0                                                                SSFCOR 103
      DO 100 IW1 = 1,NIW1                                                       SSFCOR 104
      I1 = <IATTCH> + (IW1-1)*3                                                 SSFCOR 105
      MTW = IA(I1+2)                                                            SSFCOR 106
      IF (MTW.EQ.0) GO TO 100                                                   SSFCOR 107
      IF (<ICWSSPID>.EQ.0.OR.<AIRFLOWTYPE>.EQ.1) GO TO 100                      SSFCOR 108
      NCWCON = NCWCON + 1                                                       SSFCOR 109
  100 CONTINUE                                                                  SSFCOR 110
C                                                                               SSFCOR 111
C            ----LOOP OVER INTERIOR WALLS IN THIS ZONE----                      SSFCOR 112
C                                                                               SSFCOR 113
      DO 1000 IW1 = 1,NIW1                                                      SSFCOR 114
C            PTR TO ATTACHMENT DATA FOR THIS ZONE                               SSFCOR 115
      I1 = <IATTCH> + (IW1-1)*3                                                 SSFCOR 116
C            PTR TO WALL PARAMETERS FOR THIS WALL                               SSFCOR 117
      MTW = IA(I1+2)                                                            SSFCOR 118
C            SKIP IF NO DATA                                                    SSFCOR 119
      IF (MTW.EQ.0) GO TO 1000                                                  SSFCOR 120
C            SKIP IF NOT A COMMON WALL                                          SSFCOR 121
      IF (<ICWSSPID>.EQ.0) GO TO 1000                                           SSFCOR 122
      ZP1THS = ZP1                                                              SSFCOR 123
      ZMTHIS = <MULTIPLIER>                                                     SSFCOR 124
C            GET SPACE NUMBER OF ADJACENT ZONE.  <NZSPACE> =                    SSFCOR 125
C            NO. OF SPACE CORRESP TO THIS ZONE.  <INSPACE> = NO. OF SPACE       SSFCOR 126
C            IN WHICH COMMON WALL WAS DEFINED.                                  SSFCOR 127
      NADJ = <INSPACE>                                                          SSFCOR 128
      IF (<NZSPACE>.EQ.<INSPACE>) NADJ = <NEXTSPACE>                            SSFCOR 129
C              GET MULTIPLIER OF ADJACENT ZONE                                  SSFCOR 130
      ZP2 = IZ + (NSPZ(IA(I1))-1)*NCZD                                          SSFCOR 131
      ZMNEXT = <MULTIPLIER>                                                     SSFCOR 132
      ZP2NXT = ZP2                                                              SSFCOR 133
C              GET ZP1 CORRESPONDING TO ZP2NXT                                  SSFCOR 134
      IZP1T = ZP1                                                               SSFCOR 135
      NSPSAV = NSP                                                              SSFCOR 137
      DO  NS1=1,NSYS                                                            RemPA  616
        NSP  = IS + (NS1-1)*NSS                                                 RemPA  617
        NSZ1 = <NZONES>                                                         RemPA  618
        ISZ1 = <ISZONES>                                                        -037b   21
        DO  NZ1 = 1,NSZ1                                                        RemPA  620
          ZP1 = ISZ1 + (NZ1-1)*NZD                                              -037b   22
          IF (<ZP2>.EQ.ZP2NXT) GO TO 302                                        RemPA  622
        ENDDO                                                                   RemPA  623
      ENDDO                                                                     RemPA  624
  200 CONTINUE                                                                  SSFCOR 147
      CALL MSGSIM(-1,I,I,I,I)                                                   SSFCOR 148
      WRITE (IOUTPT,1301)                                                       SSFCOR 149
 1301 FORMAT(14X,'No ZP1-ZP2NXT match in subroutine SSFCOR')                    SSFCOR 150
        call MessageBox( NULL, 'Cannot find ZONE pointers -'                    WinRet  91
     &  //' ABORTING'//char(0),'SSFCOR Errors'//char(0), MB_OK                  WinRet  92
     &  + MB_ICONSTOP+MB_TASKMODAL )                                            WinRet  93
        IwinReturn = 1                                                          WinRet  94
        RETURN                                                                  WinRet  95
  302 CONTINUE                                                                  SSFCOR 152
      ZP1NXT = ZP1                                                              SSFCOR 153
      ZP1 = IZP1T                                                               SSFCOR 154
      NSP = NSPSAV                                                              SSFCOR 156
            ZP2 = <ZP2>                                                         SSFCOR 157
C            PAST-HR TEMP OF ADJACENT SPACE                                     SSFCOR 158
      TNEXT = TEMPS(1,NADJ)                                                     RemPA  625
C            SET INSPA, ETC.                                                    SSFCOR 160
      INSPA = 1                                                                 SSFCOR 161
      IF (<ISUNSP>.EQ.1) INSPA = 2                                              SSFCOR 162
      IWDFSP = 1                                                                SSFCOR 163
      IF ((<INSPACE>.EQ.<NZSPACE>.AND.<ISUNSP>.EQ.1).OR.                        SSFCOR 164
     .   (<INSPACE>.NE.<NZSPACE>.AND.<ISUNSP>.NE.1)) IWDFSP = 2                 SSFCOR 165
C                                                                               SSFCOR 166
C              --------------------------------------------------               SSFCOR 167
C              CONDUCTION THROUGH OPAQUE PART OF THIS COMMON WALL               SSFCOR 168
C              --------------------------------------------------               SSFCOR 169
C                                                                               SSFCOR 170
      NRESF = <NRESFAC>                                                         SSFCOR 171
C            AIR FILM COEFF, COMBINED CONVECTIVE + RADIATIVE (ASSUMED SAME      SSFCOR 172
C            ON BOTH SIDES OF WALL)                                             SSFCOR 173
      FC = 1./<IFR>                                                             SSFCOR 174
C            ABSORBED SOLAR                                                     SSFCOR 175
      QSUNIN = 0.                                                               SSFCOR 176
      QSUNO = 0.                                                                SSFCOR 177
      IF (INSPA.EQ.1) QSUNO = <QABSW> / <NETWALAREA>                            SSFCOR 178
      IF (INSPA.EQ.2) QSUNIN = <QABSW> / <NETWALAREA>                           SSFCOR 179
C              TOTAL SOL RAD ABSORBED ON SUNSPACE SIDE OF ALL COMMON            SSFCOR 180
C              WALLS IN ZONE                                                    SSFCOR 181
      QSNABT = QSNABT + <QABSW>*ZMNEXT                                          SSFCOR 182
C            CHECK FOR QUICK OR DELAYED WALL                                    SSFCOR 183
      IF (NRESF.GT.0) GO TO 305                                                 SSFCOR 184
C            SET CONSTANTS FOR QUICK WALL                                       SSFCOR 185
      UW = <UWAL>                                                               SSFCOR 186
      C1 = (UW+FC)*(QSUNIN+<TLOADS>*FC) + QSUNO*UW + TNEXT*FC*UW                SSFCOR 187
      C2 = UW + FC                                                              SSFCOR 188
      C3 = (2.*UW + FC)*FC                                                      SSFCOR 189
      C4 = 0.                                                                   SSFCOR 190
      C5 = 0.                                                                   SSFCOR 191
      GO TO 320                                                                 SSFCOR 192
  305 CONTINUE                                                                  SSFCOR 193
C            SET CONSTANTS FOR DELAYED WALLS                                    SSFCOR 194
      STOUTY = 0.                                                               SSFCOR 195
      STINY = 0.                                                                SSFCOR 196
      STOUTX = 0.                                                               SSFCOR 197
      STINZ = 0.                                                                SSFCOR 198
      NRESM1 = NRESF - 1                                                        SSFCOR 199
C              TEMP HISTORY POINTERS                                            SSFCOR 200
C              (S=SUNSPACE SIDE OF WALL, R=SIDE OF WALL IN ROOM ADJ TO SUNSPACE,SSFCOR 201
C               RF=ROOM TEMP FIXED, SF=SUNSPACE TEMP FIXED, RV= ROOM TEMP VARIABSSFCOR 202
C               SV=SUNSPACE TEMP VARIABLE)                                      SSFCOR 203
      MSRFSV = MTW + 36                                                         SSFCOR 204
      MRRFSV = MSRFSV + NRESF                                                   SSFCOR 205
      MSRVSF = MRRFSV + NRESF                                                   SSFCOR 206
      MRRVSF = MSRVSF + NRESF                                                   SSFCOR 207
C              RESPONSE FACTOR POINTERS                                         SSFCOR 208
      MRX = MRRVSF + NRESF                                                      SSFCOR 209
      MRY = MRX + NRESF                                                         SSFCOR 210
      MRZ = MRY + NRESF                                                         SSFCOR 211
C            PTR TO INSIDE SURFACE TEMP HISTORY                                 SSFCOR 212
C            (IF ZONE IS A SUNSP, INSIDE = SUNSP SIDE OF WALL, OUTSIDE =        SSFCOR 213
C            ROOM SIDE OF WALL.  THE REVERSE HOLDS IF ZONE IS A ROOM NEXT       SSFCOR 214
C            TO A SUNSPACE)                                                     SSFCOR 215
      MINH = MRRFSV                                                             SSFCOR 216
      IF (INSPA.EQ.2) MINH = MSRVSF                                             SSFCOR 217
C            PTR TO OUTSIDE SURFACE TEMP HISTORY                                SSFCOR 218
      MOUH = MSRFSV                                                             SSFCOR 219
      IF (INSPA.EQ.2) MOUH = MRRVSF                                             SSFCOR 220
C            CALC SUMMATIONS OF TEMPS * (RESPONSE FACTORS) FROM 1ST PREV        SSFCOR 221
C            HR TO NRESF-1 PREV HR                                              SSFCOR 222
      DO 350 II = 1,NRESM1                                                      SSFCOR 223
      RFY = AA(MRY+II)                                                          SSFCOR 224
      RFX = AA(MRX+II)                                                          SSFCOR 225
      RFZ = AA(MRZ+II)                                                          SSFCOR 226
      IF (IWDFSP.EQ.INSPA) GO TO 310                                            SSFCOR 227
      RFX = AA(MRZ+II)                                                          SSFCOR 228
      RFZ = AA(MRX+II)                                                          SSFCOR 229
  310 CONTINUE                                                                  SSFCOR 230
      DT = AA(MINH+II) - <TLOADS>                                               SSFCOR 231
      STINZ = STINZ + DT*RFZ                                                    SSFCOR 232
      STINY = STINY + DT*RFY                                                    SSFCOR 233
      DT = AA(MOUH+II) - <TLOADS>                                               SSFCOR 234
      STOUTX = STOUTX + DT*RFX                                                  SSFCOR 235
      STOUTY = STOUTY + DT*RFY                                                  SSFCOR 236
  350 CONTINUE                                                                  SSFCOR 237
      RFY1 = AA(MRY)                                                            SSFCOR 238
      RFX1 = AA(MRX)                                                            SSFCOR 239
      RFZ1 = AA(MRZ)                                                            SSFCOR 240
      IF (IWDFSP.EQ.INSPA) GO TO 360                                            SSFCOR 241
      RFX1 = AA(MRZ)                                                            SSFCOR 242
      RFZ1 = AA(MRX)                                                            SSFCOR 243
  360 CONTINUE                                                                  SSFCOR 244
C            PREVIOUS-HR INSIDE SURFACE HEAT FLUX                               SSFCOR 245
      QINXS = <QP-RSUR-RF-SV>                                                   SSFCOR 246
      IF (INSPA.EQ.2) QINXS = <QP-SSUR-RV-SF>                                   SSFCOR 247
C            PREVIOUS-HR OUTSIDE SURFACE HEAT FLUX                              SSFCOR 248
      QOUTXS = <QP-SSUR-RF-SV>                                                  SSFCOR 249
      IF (INSPA.EQ.2) QOUTXS = <QP-RSUR-RV-SF>                                  SSFCOR 250
      A1 = <TLOADS>*(FC+RFZ1-RFY1) - STINZ + STOUTY +                           SSFCOR 251
     .       <RFCOMRATIO>*QINXS + QSUNIN                                        SSFCOR 252
      B1 = <TLOADS>*(RFX1-RFY1) + TNEXT*FC - STOUTX + STINY                     SSFCOR 253
     1        - <RFCOMRATIO>*QOUTXS + QSUNO                                     SSFCOR 254
      C2 = RFX1 + FC                                                            SSFCOR 255
      C1 = A1*C2 + RFY1*B1                                                      SSFCOR 256
      C3 = C2*(RFZ1+FC) - RFY1*RFY1                                             SSFCOR 257
      C4 = B1/C2                                                                SSFCOR 258
      C5 = RFY1/C2                                                              SSFCOR 259
  320 CONTINUE                                                                  SSFCOR 260
C            FOR QUICK OR DELAYED WALL, FIND INSIDE SURF TEMP THIS HOUR         SSFCOR 261
      TINNEW = C1 / C3                                                          SSFCOR 262
C              OUTSIDE SURFACE TEMP THIS HOUR                                   SSFCOR 263
      TOTNEW = C4 + C5*TINNEW                                                   SSFCOR 264
C            HEAT TRANSFER FROM WALL TO ZONE                                    SSFCOR 265
      QW = (TINNEW - <TLOADS>) * <NETWALAREA> / <IFR>                           SSFCOR 266
      QGOPWL = QGOPWL + QW*ZMNEXT                                               SSFCOR 267
      IF (NRESF.EQ.0) GO TO 390                                                 SSFCOR 268
C            INSIDE SURFACE TEMP                                                SSFCOR 269
      AA(MINH) = TINNEW                                                         SSFCOR 270
      IF (NRESF.EQ.0) GO TO 390                                                 SSFCOR 271
C            INSIDE SURFACE HEAT FLUX                                           SSFCOR 272
      QIN = (TOTNEW-<TLOADS>)*RFY1 - (TINNEW-<TLOADS>)*RFZ1                     SSFCOR 273
     1        + STOUTY - STINZ + <RFCOMRATIO>*QINXS                             SSFCOR 274
      IF (IFLG.NE.1) GO TO 380                                                  SSFCOR 275
C            UPDATE INSIDE FLUX FOR USE NEXT HOUR                               SSFCOR 276
      IF (INSPA.EQ.1) <QP-RSUR-RF-SV> = QIN                                     SSFCOR 277
      IF (INSPA.EQ.2) <QP-SSUR-RV-SF> = QIN                                     SSFCOR 278
  380 CONTINUE                                                                  SSFCOR 279
C            STOR OUTSIDE SURFACE TEMP                                          SSFCOR 280
      AA(MOUH) = TOTNEW                                                         SSFCOR 281
C            OUTSIDE SURFACE HEAT FLUX                                          SSFCOR 282
      QOUT = (TOTNEW-<TLOADS>)*RFX1 - (TINNEW-<TLOADS>)*RFY1 +                  SSFCOR 283
     .       STOUTX - STINY + <RFCOMRATIO>*QOUTXS                               SSFCOR 284
      IF (IFLG.NE.1) GO TO 390                                                  SSFCOR 285
C            UPDATE OUTSIDE SURF HEAT FLUX FOR USE NEXT HOUR                    SSFCOR 286
      IF (INSPA.EQ.1) <QP-SSUR-RF-SV> = QOUT                                    SSFCOR 287
      IF (INSPA.EQ.2) <QP-RSUR-RV-SF> = QOUT                                    SSFCOR 288
C            UPDATE INSIDE AND OUTSIDE SURF TEMP HISTORIES                      SSFCOR 289
      CALL RSHFTW (AA(MINH),NRESF)                                              SSFCOR 290
      CALL RSHFTW (AA(MOUH),NRESF)                                              SSFCOR 291
  390 CONTINUE                                                                  SSFCOR 292
C                                                                               SSFCOR 293
C              --------------------------------------------------               SSFCOR 294
C              CONVECTION ACROSS COMMON WALL AND SUNSPACE VENTING               SSFCOR 295
C              --------------------------------------------------               SSFCOR 296
C                                                                               SSFCOR 297
C            AIR FLOW TYPE                                                      SSFCOR 298
      IAFTYP = <AIRFLOWTYPE>                                                    SSFCOR 299
      IF (<ICONVCALC>.EQ.0) GO TO 392                                           SSFCOR 300
C             CONVECTION CALC HAS ALREADY BEEN DONE FOR THIS SPACE              SSFCOR 301
      QGVEC =  <QGVEC>                                                          SSFCOR 302
      CFMCVT = <CFMCVT>                                                         SSFCOR 303
      CFMVNT = <CFMVNT>                                                         SSFCOR 304
      IF (<ISUNSP>.EQ.1.AND.IFLG.EQ.1) THEN                                     SSFCOR 305
          SSFPT = <SSFPT>                                                       SSFCOR 306
          ZKW = ZKW + SSFPT                                                     SSFCOR 307
          FANKW = FANKW + SSFPT                                                 SSFCOR 308
      JEM       = <VENT-E-MZ>                                                   HVAC6  775
      <VENT-EM> = <VENT-EM> + SSFPT * <MULTIPLIER>                              HVAC6  776
      END IF                                                                    SSFCOR 310
      GO TO 501                                                                 SSFCOR 311
  392 CONTINUE                                                                  SSFCOR 312
C              INITIALIZE FLOW MULTIPLIER                                       SSFCOR 313
      FLWMUL = 0.                                                               SSFCOR 314
      T10 = 0.                                                                  SSFCOR 315
      T20 = 0.                                                                  SSFCOR 316
C              SKIP IF NO COMMON WALLS WITH CONVECTION, AND VENTING             SSFCOR 317
C              OF SUNSPACE HAS ALREADY BEEN CALCULATED                          SSFCOR 318
      IF (NCWCON.EQ.0.AND.IVDONE.EQ.1) GO TO 501                                SSFCOR 319
C            PTR TO FIXED-ZONE DATA FOR THE ROOM AND FOR THE SUNSP              SSFCOR 320
      IZP2RM = IZREF(<INSPACE>)                                                 SSFCOR 321
      IZP2SS = IZREF(<NEXTSPACE>)                                               SSFCOR 322
      IF (IWDFSP.EQ.1) GO TO 394                                                SSFCOR 323
      IZP2RM = IZREF(<NEXTSPACE>)                                               SSFCOR 324
      IZP2SS = IZREF(<INSPACE>)                                                 SSFCOR 325
  394 CONTINUE                                                                  SSFCOR 326
              IZP1RM = 0                                                        SSFCOR 327
              IZP1SS = 0                                                        SSFCOR 328
              nspsav = NSP                                                      RemPA  626
              do  NS1=1,NSYS                                                    RemPA  627
                  NSP  = IS + (NS1-1)*NSS                                       RemPA  628
                  ZP1 = <ISZONES>                                               RemPA  629
                  ISZ1  = <ISZONES>                                             -037b   23
                  do     nz1 = 1 , <NZONES>                                     RemPA  631
                      ZP1 = ISZ1 + (NZ1-1)*NZD                                  -037b   24
                      if( <ZP2> .eq. IZP2RM )   IZP1RM = ZP1                    RemPA  633
                      if( <ZP2> .eq. IZP2SS )   IZP1SS = ZP1                    RemPA  634
                      if( IZP1RM .ne. 0 .and. IZP1SS .ne. 0 )    then           RemPA  635
                          goto  90394                                           RemPA  636
                      endif                                                     RemPA  637
                  enddo                                                         RemPA  638
              enddo                                                             RemPA  639
              goto  200                                                         RemPA  640
90394         continue                                                          RemPA  641
              NSP = nspsav                                                      SSFCOR 347
      IZP2SV = ZP2                                                              SSFCOR 348
      ZP2 = IZP2SS                                                              SSFCOR 349
      IZSSCH = <SS-FLOW-SCH>                                                    SSFCOR 350
      IT2MAX = <SS-FLOW-T-SCH>                                                  SSFCOR 351
      ZP2 = IZP2SV                                                              SSFCOR 352
C            GET AIRFLOW SCHEDULE MULTIPLIER                                    SSFCOR 353
C            (DEFAULTS TO 1.0 IF ZS-FLOW-SCH IS NOT SPECIFIED)                  SSFCOR 354
      FLWMUL = AMAX1(0., SchVal(IZSSCH, 1.))                                    Time   373
C              GET LIMIT TEMP FOR ROOM (USED TO PREVENT OVERHEATING             SSFCOR 360
C              BY CONVECTION FROM SUNSP).  DEFAULTS TO 74F.                     SSFCOR 361
      T2MAX = SchVal(IT2MAX, 74.)                                               Time   374
C              GET F, ETC FOR ADJACENT SPACE                                    SSFCOR 367
      ZP1 = ZP1NXT                                                              SSFCOR 368
              ZP2 = <ZP2>                                                       SSFCOR 369
      SVKWNX = <SS-VENT-KW>                                                     SSFCOR 370
      HONNX = SchSnap(-1, <HEATING-SCHEDULE>, DBT, 1.)                          Time   375
      CONNX = SchSnap( 1, <COOLING-SCHEDULE>, DBT, 1.)                          Time   376
      FONNX = SchVal(<FAN-SCHEDULE>, 1.)                                        Time   377
C              CONDUCTION THRU INT WALLS (EXCLUDING SUNSPACE INT WALLS)         SSFCOR 386
      CORINX = 0.                                                               SSFCOR 387
      IE = <NATTCH>                                                             SSFCOR 388
      IF (IE.EQ.0) GO TO 415                                                    SSFCOR 389
      X = 0.                                                                    SSFCOR 390
      Y = 0.                                                                    SSFCOR 391
      Z = 0.                                                                    SSFCOR 392
      DO 408  J=1,IE                                                            SSFCOR 393
      I1 = <IATTCH> + (J-1)*3                                                   SSFCOR 394
      NATTSP = IA(I1)                                                           SSFCOR 395
      X = X + AA(I1+1)*(TEMPS(1,NATTSP)-TEMPSL(NATTSP))                         RemPA  642
      Y = Y + AA(I1+1)*(TEMPS(2,NATTSP)-TEMPSL(NATTSP))                         RemPA  643
      Z = Z + AA(I1+1)*(TEMPS(3,NATTSP)-TEMPSL(NATTSP))                         RemPA  644
  408 CONTINUE                                                                  SSFCOR 399
      CORINX = X + <P1>*Y + <P2>*Z                                              SSFCOR 400
  415 CONTINUE                                                                  SSFCOR 401
C              OUTDOOR RESET BASEBOARD ENERGY                                   SSFCOR 402
      QHBZNX = 0.                                                               SSFCOR 403
      IF((<BASEBOARD-SCH>.GT.0) .and. (HONNX.NE.0.))                            -131   359
     $  QHBZNX = DRSVAL(<BASEBOARD-SCH>)*<BASEBOARD-RATING>                     -131   360
C              LIGHT HEAT                                                       SSFCOR 413
      QPNX = 0.                                                                 SSFCOR 414
      IF (<ZONE-TYPE>.GT.1) GO TO 406                                           SSFCOR 415
      FRAC = 1.                                                                 SSFCOR 416
      IF (<RETURN-AIR-PATH>.EQ.0.OR.FONNX.EQ.0.0.OR.<CFMAX>.LE.0.)              SSFCOR 417
     . GO TO 404                                                                SSFCOR 418
      IF (<sy.FanOnPast> .gt. 0.)  GOTO 403                                     -044c2 113
      CFMLST = <CFMAX>                                                          SSFCOR 420
      TAVG = 0.5*(<DESIGN-HEAT-T> + <DESIGN-COOL-T>)                            SSFCOR 421
      IF (<TNOW>.LT.TAVG) CFMLST = <CFMAXH>                                     SSFCOR 422
  403 FRAC = 1.0 - CFMLST/<CFMAX>                                               SSFCOR 423
  404 QPNX = FRAC * <QP>                                                        SSFCOR 424
  406 CONTINUE                                                                  SSFCOR 425
      G0NX = <G0>*<AREA> + <CONDUCHR> + CONS(1)*<CFMINF>                        SSFCOR 426
      G1NX = <G1>*<AREA> + <P1>*(<CONDUCHRPAST>+CONS(1)*<VIPAST>)               SSFCOR 427
      G2NX = <G2>*<AREA> + <P2>*(<CONDUCHRPAST2>+CONS(1)*<VIPAST2>)             SSFCOR 428
      G3NX = <G3>*<AREA>                                                        SSFCOR 429
      SIGGNX = G0NX + G1NX + G2NX + G3NX                                        SSFCOR 430
      JJ = 1                                                                    SSFCOR 431
      FNX = <TLOADS>*SIGGNX + <QS> + QPNX - QHBZNX + CORINX                     SSFCOR 432
      FNX = FNX + <P1>*<QGVEC1> + <P2>*<QGVEC2>                                 SSFCOR 433
      FNX = FNX + <P1>*(<QSPAST> + <QPPAST> - <QNOW> - <QBPAST>)                SSFCOR 434
      FNX = FNX + <P2>*(<QSPAST2> - <QPAST> - <QBPAST2>)                        SSFCOR 435
      FNX = FNX - G1NX*<TNOW> - G2NX*<TPAST> - G3NX*<TPAST2>                    SSFCOR 436
      FNX = FNX + 3.*(<QLWAL1>-<QLWAL2>) + <QLWAL3>                             SSFCOR 437
     .          + <P1>*<QLWAL1> + <P2>*<QLWAL2>                                 SSFCOR 438
      THRNX = <THROTTLING-RANGE>                                                SSFCOR 439
      SCNX = 0.                                                                 SSFCOR 440
      SHNX = 0.                                                                 SSFCOR 441
      WCNX = 0.                                                                 SSFCOR 442
      WHNX = 0.                                                                 SSFCOR 443
      EMXHNX = 0.                                                               SSFCOR 444
      EMXCNX = 0.                                                               SSFCOR 445
      EMNCNX = 0.                                                               SSFCOR 446
      EMNHNX = 0.                                                               SSFCOR 447
      IF (<ZONE-TYPE>.NE.1) GO TO 418                                           SSFCOR 448
      IBFNX = 0                                                                 SSFCOR 449
      IF (<BASEBOARD-RATING>.LT.0.0.AND.<BASEBOARD-CTRL>.EQ.1.AND.              SSFCOR 450
     .    HONNX.NE.0.) IBFNX = 1                                                SSFCOR 451
      IF (FONNX.EQ.0.0.AND.IBFNX.EQ.0) GO TO 418                                SSFCOR 452
      THNX = <THZ>                                                              SSFCOR 453
      TCNX = <TCZ>                                                              SSFCOR 454
      IF (TCNX.EQ.999.) GO TO 417                                               SSFCOR 455
      EMNCNX = <ERMAXM>                                                         SSFCOR 456
      EMXCNX = <ERMAX>                                                          SSFCOR 457
      SCNX = (<ERMAX>-EMNCNX)/(2.*THRNX)                                        SSFCOR 458
      WCNX = (<ERMAX>+EMNCNX)*0.5                                               SSFCOR 459
  417 IF (THNX.EQ.-999.) GO TO 418                                              SSFCOR 460
      EMNHNX = <ERMIN>                                                          SSFCOR 461
      IF (<BASEBOARD-CTRL>.EQ.1) EMNHNX=EMNHNX+<BASEBOARD-RATING>*HONNX         SSFCOR 462
      EMXHNX = <ERMINM>                                                         SSFCOR 463
      SHNX = (EMXHNX-EMNHNX)/(2.*THRNX)                                         SSFCOR 464
      WHNX = (EMXHNX+EMNHNX)*0.5                                                SSFCOR 465
  418 CONTINUE                                                                  SSFCOR 466
      ZP1 = ZP1THS                                                              SSFCOR 467
              ZP2 = <ZP2>                                                       SSFCOR 468
C                                                                               SSFCOR 469
C              GET F, ETC. FOR THIS SPACE                                       SSFCOR 470
C                                                                               SSFCOR 471
      SVKWTH = <SS-VENT-KW>                                                     SSFCOR 472
      QGWN = <UASUMWIN>*(TNEXT-<TLOADS>)*ZMNEXT                                 SSFCOR 473
      IF (IAFTYP.EQ.5) QGWN = QGWN*(1.-AMAX1(0.,AMIN1(1.,FLWMUL)))              SSFCOR 474
      QLWL = <CONDUCTION-V0>*(QGWN+QGOPWL) + <CONDUCTION-V1>*<QGWAL1>           SSFCOR 475
     . + <CONDUCTION-V2>*<QGWAL2> + <CONDUCTION-W1>*<QLWAL1> +                  SSFCOR 476
     . <CONDUCTION-W2>*<QLWAL2>                                                 SSFCOR 477
      FTH = FTD + QLWL + <P1>*<QLWAL1> + <P2>*<QLWAL2>                          SSFCOR 478
      FTH = FTH + <P1>*<QGVEC1> + <P2>*<QGVEC2>                                 SSFCOR 479
      THRTH = <THROTTLING-RANGE>                                                SSFCOR 480
      SCTH = 0.                                                                 SSFCOR 481
      SHTH = 0.                                                                 SSFCOR 482
      WCTH = 0.                                                                 SSFCOR 483
      WHTH = 0.                                                                 SSFCOR 484
      EMXHTH = 0.                                                               SSFCOR 485
      EMXCTH = 0.                                                               SSFCOR 486
      EMNHTH = 0.                                                               SSFCOR 487
      EMNCTH = 0.                                                               SSFCOR 488
      IF (<ZONE-TYPE>.NE.1) GO TO 426                                           SSFCOR 489
      IBFNTH = 0                                                                SSFCOR 490
      IF (<BASEBOARD-RATING>.LT.0.0.AND.<BASEBOARD-CTRL>.EQ.1.AND.              SSFCOR 491
     .    HON.NE.0.0) IBFNTH = 1                                                SSFCOR 492
      IF (FON.EQ.0.AND.IBFNTH.EQ.0) GO TO 426                                   SSFCOR 493
      THTH  = <THZ>                                                             SSFCOR 494
      TCTH  = <TCZ>                                                             SSFCOR 495
      IF (TCTH.EQ.999.) GO TO 425                                               SSFCOR 496
      EMNCTH = <ERMAXM>                                                         SSFCOR 497
      EMXCTH = <ERMAX>                                                          SSFCOR 498
      SCTH = (<ERMAX> - EMNCTH)/(2.*THRTH)                                      SSFCOR 499
      WCTH = (<ERMAX> + EMNCTH)*.5                                              SSFCOR 500
  425 IF (THTH.EQ.-999.) GO TO 426                                              SSFCOR 501
      EMNHTH = <ERMIN>                                                          SSFCOR 502
      IF (<BASEBOARD-CTRL>.EQ.1) EMNHTH=EMNHTH + <BASEBOARD-RATING>*HON         SSFCOR 503
      EMXHTH = <ERMINM>                                                         SSFCOR 504
      SHTH = (EMXHTH - EMNHTH)/(2.*THRTH)                                       SSFCOR 505
      WHTH = (EMXHTH + EMNHTH)*.5                                               SSFCOR 506
  426 CONTINUE                                                                  SSFCOR 507
C                                                                               SSFCOR 508
C              SET SUNSPACE (1) AND ROOM (2) VARIABLES                          SSFCOR 509
C                                                                               SSFCOR 510
      IF (<ISUNSP>.EQ.2) GO TO 427                                              SSFCOR 511
C              CURRENT SPACE IS A SUNSPACE                                      SSFCOR 512
      SVKW = SVKWTH                                                             SSFCOR 513
      F1 = FTH                                                                  SSFCOR 514
      G01 = G0                                                                  SSFCOR 515
      TH1 = THTH                                                                SSFCOR 516
      TC1 = TCTH                                                                SSFCOR 517
      THR1 = THRTH                                                              SSFCOR 518
      ZM1 = ZMTHIS                                                              SSFCOR 519
      T10 = <TNOW>                                                              SSFCOR 520
      SC1 = SCTH                                                                SSFCOR 521
      SH1 = SHTH                                                                SSFCOR 522
      WC1 = WCTH                                                                SSFCOR 523
      WH1 = WHTH                                                                SSFCOR 524
      EMNC1 = EMNCTH                                                            SSFCOR 525
      EMNH1 = EMNHTH                                                            SSFCOR 526
      EMXC1 = EMXCTH                                                            SSFCOR 527
      EMXH1 = EMXHTH                                                            SSFCOR 528
      F2 = FNX                                                                  SSFCOR 529
      G02 = G0NX                                                                SSFCOR 530
      TH2 = THNX                                                                SSFCOR 531
      TC2 = TCNX                                                                SSFCOR 532
      THR2 = THRNX                                                              SSFCOR 533
      ZM2 = ZMNEXT                                                              SSFCOR 534
      T20 = TNEXT                                                               SSFCOR 535
      SC2 = SCNX                                                                SSFCOR 536
      SH2 = SHNX                                                                SSFCOR 537
      WC2 = WCNX                                                                SSFCOR 538
      WH2 = WHNX                                                                SSFCOR 539
      EMNC2 = EMNCNX                                                            SSFCOR 540
      EMNH2 = EMNHNX                                                            SSFCOR 541
      EMXC2 = EMXCNX                                                            SSFCOR 542
      EMXH2 = EMXHNX                                                            SSFCOR 543
      GO TO 428                                                                 SSFCOR 544
  427 CONTINUE                                                                  SSFCOR 545
C               CURRENT SPACE IS ROOM                                           SSFCOR 546
      SVKW = SVKWNX                                                             SSFCOR 547
      F1 = FNX                                                                  SSFCOR 548
      G01 = G0NX                                                                SSFCOR 549
      TH1 = THNX                                                                SSFCOR 550
      TC1 = TCNX                                                                SSFCOR 551
      THR1 = THRNX                                                              SSFCOR 552
      ZM1 = ZMNEXT                                                              SSFCOR 553
      T10 = TNEXT                                                               SSFCOR 554
      SC1 = SCNX                                                                SSFCOR 555
      SH1 = SHNX                                                                SSFCOR 556
      WC1 = WCNX                                                                SSFCOR 557
      WH1 = WHNX                                                                SSFCOR 558
      EMNC1 = EMNCNX                                                            SSFCOR 559
      EMNH1 = EMNHNX                                                            SSFCOR 560
      EMXC1 = EMXCNX                                                            SSFCOR 561
      EMXH1 = EMXHNX                                                            SSFCOR 562
      F2 = FTH                                                                  SSFCOR 563
      G02 = G0                                                                  SSFCOR 564
      TH2 = THTH                                                                SSFCOR 565
      TC2 = TCTH                                                                SSFCOR 566
      THR2 = THRTH                                                              SSFCOR 567
      ZM2 = ZMTHIS                                                              SSFCOR 568
      T20 = <TNOW>                                                              SSFCOR 569
      SC2 = SCTH                                                                SSFCOR 570
      SH2 = SHTH                                                                SSFCOR 571
      WC2 = WCTH                                                                SSFCOR 572
      WH2 = WHTH                                                                SSFCOR 573
      EMNC2 = EMNCTH                                                            SSFCOR 574
      EMNH2 = EMNHTH                                                            SSFCOR 575
      EMXC2 = EMXCTH                                                            SSFCOR 576
      EMXH2 = EMXHTH                                                            SSFCOR 577
  428 CONTINUE                                                                  SSFCOR 578
C                                                                               SSFCOR 579
C              SET ISSV=1 IF SUNSP CAN VENT THIS HOUR                           SSFCOR 580
C                                                                               SSFCOR 581
              ZP1 = IZP1SS                                                      SSFCOR 582
              ZP2 = <ZP2>                                                       SSFCOR 583
      ISSV = 0                                                                  SSFCOR 584
      UV = 0.                                                                   SSFCOR 585
      CFMV = 0.                                                                 SSFCOR 586
      TVENT = 999.                                                              SSFCOR 587
      IF (<SS-VENT-T-SCH>.EQ.0.OR.DBT.GT.<SS-VENT-LIMIT-T>                      SSFCOR 588
     1    .OR.<SS-VENT-SCH>.EQ.0) GO TO 398                                     SSFCOR 589
      VNTMUL = SchVal(<SS-VENT-SCH>, 1.)                                        Time   378
      IF (VNTMUL.LE.0.) GO TO 398                                               Time   379
      THZSS = <THZ>                                                             Time   380
      TVENT = AMAX1(SchVal(<SS-VENT-T-SCH>, 1.), THZSS)                         Time   381
C              GET VENTING CONDUCTANCE, SET ISSV                                SSFCOR 596
      IF (<SS-VENT-KW>.EQ.0.) CFMV =                                            SSFCOR 597
     1 VNTMUL*(<VOLUME>/60.)*<SS-VENT-CST> + <SS-VENT-WND>*WNDSPD               SSFCOR 598
     2 + <SS-VENT-TEMP>*ABS(DBT-<TNOW>)                                         SSFCOR 599
      IF (<SS-VENT-KW>.GT.0.) CFMV =                                            SSFCOR 600
     1 VNTMUL*(<VOLUME>/60.)*<SS-VENT-CST>                                      SSFCOR 601
      UV = CONS(1)*CFMV                                                         SSFCOR 602
      IF (UV.GT.0.0) ISSV = 1                                                   SSFCOR 603
  398 CONTINUE                                                                  SSFCOR 604
C                                                                               SSFCOR 605
C              SET VNTRM NON-ZERO IF ROOM CAN VENT THIS HR (RESYS ONLY)         SSFCOR 606
C                                                                               SSFCOR 607
      TVR = 0.                                                                  SSFCOR 608
      VNTRM = 0.                                                                SSFCOR 609
      UVRMG = 0.                                                                SSFCOR 610
      IF (ICODE.NE.17) GO TO 440                                                SSFCOR 611
      IF (<NATURAL-VENT-AC>.EQ.0.0.OR.<NATURAL-VENT-SCH>.EQ.0) GO TO 440        SSFCOR 612
C              SKIP IF ROOM NOT CONTROL ZONE AND CONTROL ZONE DIDNT VENT        SSFCOR 613
      IF (NZ.NE.1.AND.IVENTF.EQ.0) GO TO 440                                    SSFCOR 614
C              SKIP IF VENT SCHED VALUE IS ZERO                                 SSFCOR 615
      VNTRM = SchVal(<NATURAL-VENT-SCH>, 1.)                                    Time   382
      IF (VNTRM.EQ.0.) GO TO 440                                                SSFCOR 618
                      ZP1 = IZP1RM                                              SSFCOR 619
                      ZP2 = <ZP2>                                               SSFCOR 620
C              GET VENT TEMP                                                    SSFCOR 621
      TVR = SchVal(<VENT-TEMP-SCH>, TVR)                                        Time   383
      IF (TVR.EQ.0.) TVR = TH2 + THR2                                           SSFCOR 624
      IF (THR2.EQ.-999.) TVR = TC2 - THR2                                       SSFCOR 625
C              GET VENT CONDUCTANCE (DIVIDED BY G02) FOR THIS STEP              SSFCOR 626
      UVRMG = CONS(1)*<NATURAL-VENT-AC>*<VOLUME>*DELT/(60.*G02)                 SSFCOR 627
      IF (NZ.NE.1) GO TO 440                                                    SSFCOR 628
C              ROOM IS CONTROL ZONE                                             SSFCOR 629
C              CHECK OUTSIDE AND INSIDE TEMP CONDITIONS                         SSFCOR 630
      IF (DBT.GE.T20.OR.T20.GT.TC2+THR2) VNTRM = 0.                             SSFCOR 631
C              CHECK ENTHALPY CONDITION                                         SSFCOR 632
      IF (VNTRM.GE.0.) GO TO 440                                                SSFCOR 633
      ENTHIN = 0.24*T20 + (1061.+0.444*T20)*<PASTWR>                            SSFCOR 634
      IF (ENTHAL.GT.ENTHIN) VNTRM = 0.                                          SSFCOR 635
  440 CONTINUE                                                                  SSFCOR 636
              ZP1 = ZP1THS                                                      SSFCOR 637
              ZP2 = <ZP2>                                                       SSFCOR 638
C                                                                               SSFCOR 639
      D0 = T10 - T20                                                            SSFCOR 640
C              TEMP DIFFERENCE SETPOINT FOR CONVECTION CONTROL                  SSFCOR 641
C              (DEFAULTS TO 3F, EXCEPT OA-PREHT DEFAULT = -100F)                SSFCOR 642
      DEL = <AIRCTRLDT>                                                         SSFCOR 643
      IF (IAFTYP.EQ.3.AND.ABS(<AIRCTRLDT>-2.999).LT.0.0001)  DEL=-100.          SSFCOR 644
      IF (IREPRT(2,35) .EQ. 0  .OR.  InitialFlg .GT. 0) GO TO 400               Time   384
      DO 399 I=1,20                                                             SSFCOR 646
      DQVC(I) = 0.                                                              SSFCOR 647
      DQV(I) = 0.                                                               SSFCOR 648
      ER1(I) = 0.                                                               SSFCOR 649
      ER2(I) = 0.                                                               SSFCOR 650
      T1I(I) = 0.                                                               SSFCOR 651
  399 T2I(I) = 0.                                                               SSFCOR 652
  400 CONTINUE                                                                  SSFCOR 653
C              SKIP IF NO CONVECTION AND NO SUNSP VENTING                       SSFCOR 654
      IF (IAFTYP.EQ.1.AND.ISSV.EQ.0) GO TO 500                                  SSFCOR 655
      IF (FLWMUL.LE.0.0.AND.ISSV.EQ.0) GO TO 500                                SSFCOR 656
C                                                                               SSFCOR 657
C              BRANCH ON AIR FLOW TYPE                                          SSFCOR 658
C                                                                               SSFCOR 659
      GO TO (499,502,503,504,505,500),IAFTYP                                    SSFCOR 660
  499 CONTINUE                                                                  SSFCOR 661
C                                                                               SSFCOR 662
C              AIR-FLOW-TYPE = 1 -- NO CONVECTION                               SSFCOR 663
C                                                                               SSFCOR 664
      U0 = 0.                                                                   SSFCOR 665
      GO TO 600                                                                 SSFCOR 666
  502 CONTINUE                                                                  SSFCOR 667
C                                                                               SSFCOR 668
C              AIR-FLOW-TYPE = 2 -- FAN-FORCED THERMOCIRCULATION                SSFCOR 669
C                                                                               SSFCOR 670
      IF (<AIRFLOWRATE>.EQ.0.0) GO TO 500                                       SSFCOR 671
      U0 = CONS(1)*<AIRFLOWRATE>*FLWMUL                                         SSFCOR 672
      GO TO 600                                                                 SSFCOR 673
  503 CONTINUE                                                                  SSFCOR 674
C                                                                               SSFCOR 675
C              AIR-FLOW-TYPE = 3 -- SUNSPACE USED TO PREHEAT                    SSFCOR 676
C                                   OUTSIDE VENTILATION AIR                     SSFCOR 677
C                                                                               SSFCOR 678
      IF (<AIRFLOWRATE>.EQ.0.0) GO TO 500                                       SSFCOR 679
      U0 = CONS(1) * <AIRFLOWRATE> * FLWMUL                                     SSFCOR 680
      GO TO 600                                                                 SSFCOR 681
  504 CONTINUE                                                                  SSFCOR 682
C                                                                               SSFCOR 683
C              AIR-FLOW-TYPE = 4 -- FREE THERMOCIRCULATION                      SSFCOR 684
C                                                                               SSFCOR 685
      CP = 0.24 + 0.44*HUMRAT                                                   SSFCOR 686
      AL2 = <LOW-VENT-AREA>*<LOW-VENT-AREA>                                     SSFCOR 687
      AU2 = <UP-VENT-AREA>*<UP-VENT-AREA>                                       SSFCOR 688
      U0 = 31267*CP*PATM*FLWMUL                                                 SSFCOR 689
      GO TO 600                                                                 SSFCOR 690
  505 CONTINUE                                                                  SSFCOR 691
C                                                                               SSFCOR 692
C              AIR-FLOW-TYPE = 5 -- FREE CONVECTION THRU DOORWAY                SSFCOR 693
C                                                                               SSFCOR 694
      U0 = 4.6*<DOORWAY-WIDTH>*SQRT(<DOORWAY-HEIGHT>*                           SSFCOR 695
     . <DOORWAY-HEIGHT>*<DOORWAY-HEIGHT>)*FLWMUL                                SSFCOR 696
C                                                                               SSFCOR 697
  600 CONTINUE                                                                  SSFCOR 698
C              CHANGE IN ZONE TEMP IF NO CONVECTION, CONDITIONING               SSFCOR 699
C              OR VENTING                                                       SSFCOR 700
      DEL1 = (F1-EMNC1)/G01 - T10                                               SSFCOR 701
      DEL2 = (F2-EMNC2)/G02 - T20                                               SSFCOR 702
C                                                                               SSFCOR 703
C              TIMESTEP FOR CONVECTION CALCULATION                              SSFCOR 704
C                                                                               SSFCOR 705
      U0A = U0                                                                  SSFCOR 706
      UV0 = 0.                                                                  SSFCOR 707
      T1V0 = AMAX1(T10,T10+DEL1)                                                SSFCOR 708
      IF (ISSV.EQ.1.AND.T1V0.GT.TVENT.AND.DBT.LT.(T1V0-3.)) UV0 = UV            SSFCOR 709
      IF (U0A.EQ.0.) GO TO 610                                                  SSFCOR 710
      IF (IAFTYP.EQ.5) U0A = U0*SQRT(AMAX1(ABS(D0),DEL))                        SSFCOR 711
      IF (IAFTYP.NE.4) GO TO 610                                                SSFCOR 712
      T1TR = T10 + 459.7                                                        SSFCOR 713
      T2TR = T20 + 459.7                                                        SSFCOR 714
      X1 = <VENT-SEP>*AMAX1(D0,DEL)/(T1TR*T2TR)                                 SSFCOR 715
      X2 = T1TR/AU2 + T2TR/AL2                                                  SSFCOR 716
      U0A = U0 * SQRT(ABS(X1/X2))                                               SSFCOR 717
  610 CONTINUE                                                                  SSFCOR 718
C              CONVECTIVE GAIN TO SUNSP AND ROOM AT BEGINNING OF HOUR           SSFCOR 719
      IF (IAFTYP.NE.3) Q10 = -ZM2*U0A*AMAX1(D0,DEL)                             SSFCOR 720
      IF (IAFTYP.EQ.3) Q10 = ZM2*U0A*(DBT-T10)                                  SSFCOR 721
      Q10 = Q10 + UV0*(DBT-T1V0)                                                SSFCOR 722
      Q20 = ZM1*U0A*AMAX1(D0,DEL)                                               SSFCOR 723
C              NUMBER OF TIMESTEPS FOR DTMIN TEMP CHANGE PER STEP               SSFCOR 724
      ZDEL1 = AMAX1(ABS(Q10/G01+DEL1),ABS(DEL1))/DTMIN                          SSFCOR 725
      ZDEL2 = AMAX1(ABS(Q20/G02+DEL2),ABS(DEL2))/DTMIN                          SSFCOR 726
      ZDEL = AMAX1(ZDEL1,ZDEL2)                                                 SSFCOR 727
C              CONSTRAIN BETWEEN NDELMN AND NDELMX                              SSFCOR 728
      ZDEL = AMAX1(ZDELMN,AMIN1(ZDEL,ZDELMX))                                   SSFCOR 729
      NDELT = INT(ZDEL)                                                         SSFCOR 730
      DELT = 1./FLOAT(NDELT)                                                    SSFCOR 731
C              COEFS USED IN EXTRAC RATE CALC IN SMALL-TIMESTEP LOOP            SSFCOR 732
      ZA1C = (WC1+SC1*(DELT*(F1/G01-T10)-TC1)) / (1./DELT+SC1/G01)              SSFCOR 733
      ZA2C = (WC2+SC2*(DELT*(F2/G02-T20)-TC2)) / (1./DELT+SC2/G02)              SSFCOR 734
      ZA1H = (WH1+SH1*(DELT*(F1/G01-T10)-TH1)) / (1./DELT+SH1/G01)              SSFCOR 735
      ZA2H = (WH2+SH2*(DELT*(F2/G02-T20)-TH2)) / (1./DELT+SH2/G02)              SSFCOR 736
      ZB1C = SC1/(1./DELT+SC1/G01)                                              SSFCOR 737
      ZB2C = SC2/(1./DELT+SC2/G02)                                              SSFCOR 738
      ZB1H = SH1/(1./DELT+SH1/G01)                                              SSFCOR 739
      ZB2H = SH2/(1./DELT+SH2/G02)                                              SSFCOR 740
      DELDT1 = DEL1 * DELT                                                      SSFCOR 741
      DELDT2 = DEL2 * DELT                                                      SSFCOR 742
      DELCON = DELT/CONS(1)                                                     SSFCOR 743
      DEMNC1 = DELT * EMNC1                                                     SSFCOR 744
      DEMNC2 = DELT * EMNC2                                                     SSFCOR 745
      DEMXC1 = DELT * EMXC1                                                     SSFCOR 746
      DEMXH1 = DELT * EMXH1                                                     SSFCOR 747
      DEMNH1 = DELT * EMNH1                                                     SSFCOR 748
      DEMXC2 = DELT * EMXC2                                                     SSFCOR 749
      DEMXH2 = DELT * EMXH2                                                     SSFCOR 750
      DEMNH2 = DELT * EMNH2                                                     SSFCOR 751
C              INITIALIZE ZONE TEMPS, ETC.                                      SSFCOR 752
      T1T = T10                                                                 SSFCOR 753
      T2T = T20                                                                 SSFCOR 754
      U0T = U0                                                                  SSFCOR 755
C              FAN HEAT FACTOR FOR FORCED-RECIRC                                SSFCOR 756
      FANHTM = <FAN-POWER>*FLWMUL*BTUKW*DELT/CONS(1)                            SSFCOR 757
C                                                                               SSFCOR 758
C              STEP THROUGH THE HOUR IN DELT TIME INCREMENTS                    SSFCOR 759
C                                                                               SSFCOR 760
      DO 700 IT = 1,NDELT                                                       SSFCOR 761
C              TEMPS AT BEGINNING OF TIME STEP                                  SSFCOR 762
      T1TB = T1T                                                                SSFCOR 763
      T2TB = T2T                                                                SSFCOR 764
C              SET CONVEC AND VENT CONDUCT ACCORDING TO T1TB AND T2TB           SSFCOR 765
      U0T = U0                                                                  SSFCOR 766
C              NO CONVECTION IF TEMPERATURE DIFFERENCE TOO SMALL                SSFCOR 767
      IF (T1TB-T2TB.LT.DEL) U0T = 0.                                            SSFCOR 768
C              NO CONVECTION IF ROOM IS OVERHEATED                              SSFCOR 769
      IF (T2TB.GT.T2MAX) U0T = 0.                                               SSFCOR 770
      UVT = 0.                                                                  SSFCOR 771
C              VENT SUNSPACE IF VENTING IS ALLOWED, SUNSP TEMP IS               SSFCOR 772
C              ABOVE VENT TEMP, AND OUTSIDE TEMP IS 3.0 DEGREES OR MORE         SSFCOR 773
C              BELOW SUNSP TEMP                                                 SSFCOR 774
      IF (ISSV.EQ.1.AND.T1TB.GT.TVENT.AND.DBT.LT.(T1TB-3.)) UVT = UV            SSFCOR 775
      IF (U0T.EQ.0.) GO TO 620                                                  SSFCOR 776
C              GET CONVEC CONDUCTANCE FOR FREE-DOORWAY, FREE-RECIRC  RC         SSFCOR 777
      IF (IAFTYP.EQ.5) U0T = U0 * SQRT(ABS(T1TB-T2TB))                          SSFCOR 778
      IF (IAFTYP.NE.4) GO TO 620                                                SSFCOR 779
      T1TR = T1TB + 459.7                                                       SSFCOR 780
      T2TR = T2TB + 459.7                                                       SSFCOR 781
      X1 = <VENT-SEP>*(T1TR-T2TR)/(T1TR*T2TR)                                   SSFCOR 782
      X2 = T1TR/AU2 + T2TR/AL2                                                  SSFCOR 783
      U0T = U0 * SQRT(ABS(X1/X2))                                               SSFCOR 784
  620 CONTINUE                                                                  SSFCOR 785
      U1T = ZM2 * U0T                                                           SSFCOR 786
      U2T = ZM1 * U0T                                                           SSFCOR 787
C                                                                               SSFCOR 788
C             FIND T1 AND T2 AT END OF TIMESTEP                                 SSFCOR 789
C                                                                               SSFCOR 790
C             HEAT GAIN BY INTERZONE CONVECTION FOR THIS TIMESTEP               SSFCOR 791
      DQGVC1 = U1T*(T2TB-T1TB)*DELT                                             SSFCOR 792
      IF (IAFTYP.EQ.3) DQGVC1 = U1T*(DBT-T1TB)*DELT                             SSFCOR 793
      DQGVC2 = U2T*(T1TB-T2TB)*DELT                                             SSFCOR 794
C             ADD FAN HEAT TO ROOM FOR FORCED-RECIRC                            SSFCOR 795
      IF (IAFTYP.EQ.2) DQGVC2 = DQGVC2 + FANHTM*U2T                             SSFCOR 796
C             HEAT GAIN TO SUNSPACE FROM VENTING                                SSFCOR 797
      DQGVNT = UVT*(DBT-T1TB)*DELT                                              SSFCOR 798
      DQ1 = DQGVC1 + DQGVNT                                                     SSFCOR 799
      DQ2 = DQGVC2                                                              SSFCOR 800
C             TEMPS AT END OF TIMESTEP IF NO CONDITIONING                       SSFCOR 801
      T1T = T1TB + DELDT1 + DQ1/G01                                             SSFCOR 802
      T2T = T2TB + DELDT2 + DQ2/G02                                             SSFCOR 803
C             INCREMENT CONVECTIVE GAIN, VENTING GAIN                           SSFCOR 804
      QGVEC1 = QGVEC1 + DQGVC1                                                  SSFCOR 805
      QGVEC2 = QGVEC2 + DQGVC2                                                  SSFCOR 806
      QGVNT  = QGVNT + DQGVNT                                                   SSFCOR 807
C             INCREMENT  CONVECTIVE AND VENTING AIRFLOW                         SSFCOR 808
      CFMCV1 = CFMCV1 + U1T*DELCON                                              SSFCOR 809
      CFMCV2 = CFMCV2 + U2T*DELCON                                              SSFCOR 810
      CFMVNT = CFMVNT + UVT*DELCON                                              SSFCOR 811
C             FIND ROOM TEMP AT END OF STEP IF ROOM VENTS (RESYS ONLY)          SSFCOR 812
      IF (VNTRM.EQ.0.) GO TO 630                                                SSFCOR 813
C             NO VENT IF ROOM IS CNTRL ZONE AND TEMP BELOW VENT TEMP            SSFCOR 814
      IF (T2T.LE.TVR.AND.NZ.EQ.1) GO TO 630                                     SSFCOR 815
C             T2TFV IS ROOM TEMP IF FULL VENTING OCCURS FOR THIS STEP           SSFCOR 816
      T2TFV = T2T - (T2TB-DBT)*UVRMG                                            SSFCOR 817
      IF ((NZ.NE.1).OR.(NZ.EQ.1.AND.T2TFV.LE.TC2+THR2))                         SSFCOR 818
     1  T2T = AMAX1(T2TFV,TVR)                                                  SSFCOR 819
  630 CONTINUE                                                                  SSFCOR 820
C             FIND TEMPS AT END OF STEP IF HEATING OR COOLING REQD              SSFCOR 821
      ER1T = 0.                                                                 SSFCOR 822
      ER2T = 0.                                                                 SSFCOR 823
      IF (T1T.GT.TC1-THR1) GO TO 640                                            SSFCOR 824
      IF (T1T.LT.TH1+THR1) GO TO 650                                            SSFCOR 825
      GO TO 680                                                                 SSFCOR 826
  640 CONTINUE                                                                  SSFCOR 827
C              SUNSP REQUIRES COOLING                                           SSFCOR 828
      ER1T = ZA1C + ZB1C*(T1TB + DQ1/G01)                                       SSFCOR 829
      ER1T = AMIN1(ER1T,DEMXC1)                                                 SSFCOR 830
      ER1T = AMAX1(ER1T,DEMNC1)                                                 SSFCOR 831
      T1T = T1T - ER1T/G01 + DEMNC1/G01                                         SSFCOR 832
      GO TO 680                                                                 SSFCOR 833
  650 CONTINUE                                                                  SSFCOR 834
C              SUNSP REQUIRES HEATING                                           SSFCOR 835
      ER1T = ZA1H + ZB1H*(T1TB + DQ1/G01)                                       SSFCOR 836
      ER1T = AMIN1(ER1T,DEMXH1)                                                 SSFCOR 837
      ER1T = AMAX1(ER1T,DEMNH1)                                                 SSFCOR 838
      T1T = T1T - ER1T/G01 + DEMNC1/G01                                         SSFCOR 839
  680 CONTINUE                                                                  SSFCOR 840
      IF (T2T.GT.TC2-THR2) GO TO 660                                            SSFCOR 841
      IF (T2T.LT.TH2+THR2) GO TO 670                                            SSFCOR 842
      GO TO 690                                                                 SSFCOR 843
  660 CONTINUE                                                                  SSFCOR 844
C              ROOM REQUIRES COOLING                                            SSFCOR 845
      ER2T = ZA2C + ZB2C*(T2TB + DQ2/G02)                                       SSFCOR 846
      ER2T = AMIN1(ER2T,DEMXC2)                                                 SSFCOR 847
      ER2T = AMAX1(ER2T,DEMNC2)                                                 SSFCOR 848
      T2T = T2T - ER2T/G02 + DEMNC2/G02                                         SSFCOR 849
      GO TO 690                                                                 SSFCOR 850
  670 CONTINUE                                                                  SSFCOR 851
C              ROOM REQUIRES HEATING                                            SSFCOR 852
      ER2T = ZA2H + ZB2H*(T2TB + DQ2/G02)                                       SSFCOR 853
      ER2T = AMIN1(ER2T,DEMXH2)                                                 SSFCOR 854
      ER2T = AMAX1(ER2T,DEMNH2)                                                 SSFCOR 855
      T2T = T2T - ER2T/G02 + DEMNC2/G0                                          SSFCOR 856
  690 CONTINUE                                                                  SSFCOR 857
      IF (IREPRT(2,35) .EQ. 0  .OR.  InitialFlg .GT. 0                          Time   385
     &                         .OR.  IT .GT. 20) GOTO 700                       Time   386
C             SAVE TEMPS, ETC. FOR DEBUG PRINT                                  SSFCOR 859
      T1I(IT) = T1T                                                             SSFCOR 860
      T2I(IT) = T2T                                                             SSFCOR 861
      ER1(IT) = ER1T                                                            SSFCOR 862
      ER2(IT) = ER2T                                                            SSFCOR 863
      DQVC(IT)  = DQGVC1                                                        SSFCOR 864
      DQV(IT) = DQGVNT                                                          SSFCOR 865
  700 CONTINUE                                                                  SSFCOR 866
C              SUNSPACE VENT FAN POWER                                          SSFCOR 867
      SSVFP = SVKW * CFMVNT                                                     SSFCOR 868
  500 CONTINUE                                                                  SSFCOR 869
C             SET FLAG INDICATING SUNSP VENTING, IF ANY, HAS BEEN DONE          SSFCOR 870
      IVDONE = 1                                                                SSFCOR 871
C             FILL AA VARIABLES                                                 SSFCOR 872
C                THIS SPACE                                                     SSFCOR 873
      SSFP = SSVFP                                                              SSFCOR 874
      IF (IAFTYP.EQ.2) SSFP = SSFP + <FAN-POWER>*CFMCV1*FLWMUL                  SSFCOR 875
      IF (<ISUNSP>.NE.1.OR.IFLG.NE.1) GO TO 705                                 SSFCOR 876
      SSFPT = SSFP                                                              SSFCOR 877
      ZKW = ZKW + SSFPT                                                         SSFCOR 878
      FANKW = FANKW + SSFPT                                                     SSFCOR 879
      JEM       = <VENT-E-MZ>                                                   HVAC6  777
      <VENT-EM> = <VENT-EM> + SSFPT * <MULTIPLIER>                              HVAC6  778
  705 CONTINUE                                                                  SSFCOR 881
      <ICONVCALC> = 1                                                           SSFCOR 882
      <QGVEC> = QGVEC1                                                          SSFCOR 883
      <QGVNT> = QGVNT                                                           SSFCOR 884
      <CFMCVT> = CFMCV1                                                         SSFCOR 885
      <CFMVNT> = CFMVNT                                                         SSFCOR 886
      <SSFPT> = SSFP                                                            SSFCOR 887
      IF (<ISUNSP>.EQ.1) GO TO 710                                              SSFCOR 888
      <QGVEC> = QGVEC2                                                          SSFCOR 889
      <QGVNT> = 0.                                                              SSFCOR 890
      <CFMCVT> = CFMCV2                                                         SSFCOR 891
      <CFMVNT> = 0.                                                             SSFCOR 892
      <SSFPT> = 0.                                                              SSFCOR 893
  710 CONTINUE                                                                  SSFCOR 894
      QGVEC = <QGVEC>                                                           SSFCOR 895
      CFMCVT = <CFMCVT>                                                         SSFCOR 896
C                ADJACENT SPACE                                                 SSFCOR 897
      ZP1 = ZP1NXT                                                              SSFCOR 898
              ZP2 = <ZP2>                                                       SSFCOR 899
      <ICONVCALC> = 1                                                           SSFCOR 900
      <QGVEC> = QGVEC1                                                          SSFCOR 901
      <QGVNT> = QGVNT                                                           SSFCOR 902
      <CFMCVT> = CFMCV1                                                         SSFCOR 903
      <CFMVNT> = CFMVNT                                                         SSFCOR 904
      <SSFPT> = SSFP                                                            SSFCOR 905
      IF (<ISUNSP>.EQ.1) GO TO 720                                              SSFCOR 906
      <QGVEC> = QGVEC2                                                          SSFCOR 907
      <QGVNT> = 0.                                                              SSFCOR 908
      <CFMCVT> = CFMCV2                                                         SSFCOR 909
      <CFMVNT> = 0.                                                             SSFCOR 910
      <SSFPT> = 0.                                                              SSFCOR 911
  720 CONTINUE                                                                  SSFCOR 912
      ZP1 = ZP1THS                                                              SSFCOR 913
              ZP2 = <ZP2>                                                       SSFCOR 914
  501 CONTINUE                                                                  SSFCOR 915
C                                                                               SSFCOR 916
C              ----------------------------------------------                   SSFCOR 917
C              CONDUCTION THROUGH WINDOWS IN THIS COMMON WALL                   SSFCOR 918
C              ----------------------------------------------                   SSFCOR 919
C               (UASUMWIN, FROM LOADS, CAN VARY HOURLY IF THE INT WIN           SSFCOR 920
C               HAS MOVABLE INSULATION.  UASUMWIN=0 IF THERE ARE NO             SSFCOR 921
C               WINDOWS IN THIS WALL.)                                          SSFCOR 922
C                                                                               SSFCOR 923
      QGWIN1 = <UASUMWIN>*(TNEXT-<TLOADS>)*ZMNEXT                               SSFCOR 924
C              FOR AIR-FLOW-TYPE=FREE-DOORWAY, ASSUME NO CONDUCTION             SSFCOR 925
C              THRU FRACTION OF GLASS, FLWMUL, WHICH IS OPEN                    SSFCOR 926
      IF (IAFTYP.EQ.5) QGWIN1 = QGWIN1*(1.-AMAX1(0.,AMIN1(1.,FLWMUL)))          SSFCOR 927
      QGWIN = QGWIN + QGWIN1                                                    SSFCOR 928
C             DEBUG PRINT                                                       SSFCOR 929
C     IF (IREPRT(2,35).NE.0.AND.INILZE.GT.NWRMUP)                               -036   544
C    .WRITE(IOUTPT,1200)                                                        -036   545
C    . (<ZONE-NAME>,II=1,8),IMO,IDAY,IHR,<ISUNSP>,                              -036   546
C    .DBT,CLDAMT,SOLRAD,<INSPACE>,                                              -036   547
C    . <NEXTSPACE>,ZMNEXT,<TLOADS>,<TNOW>,TNEXT,<UASUMWIN>,QGWIN,               -036   548
C    . QSUNO,QSUNIN,QSNABT,NRESF,UW,TINNEW,TOTNEW,QW,QGOPWL,QIN                 -036   549
C     IF (IREPRT(2,35).NE.0.AND.INILZE.GT.NWRMUP)                               -036   550
C    .WRITE(IOUTPT,1201) QOUT,IAFTYP,                                           -036   551
C    . DT,AA(MTW+32),IZSSCH,FLWMUL,AA(MTW+31),                                  -036   552
C    . CFMCVT,QGVEC,IFLG                                                        -036   553
 1200 FORMAT(                                                                   -036   554
     $42H SSFCOR--M,D,H,ISUNSP,DBT,CLDAMT,SOLRAD   /4X,                         -036   555
     . 8A4/1X,4I4,4X,3F12.4/                                                    -036   556
     .42H INSPACE,NEXTSPACE,ZMNEXT,TLOADS,TNOW,TNEX/4X,2I12,4F12.4/             -036   557
     .42H UASUMWIN,QGWIN,QSUNO,QSUNIN,QSNABT,NRESF /4X,5F12.4,I12/              -036   558
     .42H UW,TINNEW,TOTNEW,QW,QGOPWL,QIN           /4X,6F12.4  )                -036   559
 1201 FORMAT(                                                                   -036   560
     $42H QOUT,IAFTYP,DT,AIRCTRLDT,IZSSCH          /4X,                         -036   561
     . F12.4,I12,2F12.4,I12/                                                    -036   562
     .42H FLWMUL,AIRFLWRATE,QGVT2,QGVT3,QGVT4,QGVT5/4X,6F12.4/                  -036   563
     .42H FLWMUL,AIRFLWRATE                        /4X,2F12.4/                  -036   564
     142H CFMCVT,QGVEC,IFLG                        /4X,2F12.4,I12)              -036   565
C     IF (IREPRT(2,35).NE.0.AND.INILZE.GT.NWRMUP)                               -036   566
C    1 WRITE(IOUTPT,1202) ZP1THS,ZP1NXT,ZP2NXT,CORINX,QHBZNX,                   -036   567
C    2  CONNX,HONNX,CONS(1),EMNC1,EMNC2,T2MAX,F1,G01,TH1,TC1,THR1,ZM1,          -036   568
C    3  F2,G02,TH2,TC2,THR2,ZM2,QGVEC1,QGVEC2,CFMCV1,CFMCV2,QGVNT,              -036   569
C    4  CFMVNT,ZA1C,ZB1C,ZA2C,ZB2C,ZA1H,ZB1H,ZA2H,ZB2H,                         -036   570
C    5  EMNC1,EMXC1,EMNC2,EMXC2,EMNH1,EMXH1,EMNH2,EMXH2                         -036   571
 1202 FORMAT(                                                                   -036   572
     $ 42H ZP1TH,ZP1NX,ZP2NX,CORINX,QHBZNX          /4X,3I12,2F12.4/            -036   573
     1 42H CONNX,HONNX,CONS(1),EMNC1,EMNC2,T2MAX    /4X,6F12.4/                 -036   574
     2 42H F1,G01,TH1,TC1,THR1,ZM1                  /4X,6F12.4/                 -036   575
     3 42H F2,G02,TH2,TC2,THR2,ZM2                  /4X,6F12.4/                 -036   576
     4 42H QGVEC1,QGVEC2,CFMCV1,CVMCV2,QGVNT,CFMVNT /4X,6F12.4/                 -036   577
     5 42H ZA1C,ZB1C,ZA2C,ZB2C,ZA1H,ZB1H,ZA2H,ZB2H  /4X,8F10.1/                 -036   578
     6 42H C--EMN1,MX1,MN2,MX2,H--EMN1,MX1,MN2,MX2  /4X,8F10.1)                 -036   579
C     IF (IREPRT(2,35).NE.0.AND.INILZE.GT.NWRMUP)                               -036   580
C    1 WRITE(IOUTPT,1203) T10,T20,DEL1,DEL2,DELT,NDELT,                         -036   581
C    2  D0,DEL,U0,UV,SSFPT,SVKW,(T1I(II),II=1,20),(T2I(II),II=1,20),            -036   582
C    3  (DQVC(II),II=1,20),(DQV(II),II=1,20),(ER1(II),II=1,20),                 -036   583
C    4  (ER2(II),II=1,20)                                                       -036   584
 1203 FORMAT(                                                                   -036   585
     $ 42H T10,T20,DEL1,DEL2,DELT,NDELT             /4X,5F12.4,I12/             -036   586
     1 42H D0,DEL,U0,UV,SSFPT,SVKW                  /4X,6F12.4/                 -036   587
     2 4H T1I,10(F6.2,2X)/4X,10(F6.2,2X)/                                       -036   588
     3 4H T2I,10(F6.2,2X)/4X,10(F6.2,2X)/                                       -036   589
     4 4H DQ ,10(F6.0,2X)/4X,10(F6.2,2X)/                                       -036   590
     5 4H DQV,10(F6.0,2X)/4X,10(F6.2,2X)/                                       -036   591
     6 4H ER1,10(F6.0,2X)/4X,10(F6.2,2X)/                                       -036   592
     7 4H ER2,10(F6.0,2X)/4X,10(F6.2,2X))                                       -036   593
C     IF (IREPRT(2,35).NE.0.AND.INILZE.GT.NWRMUP)                               -036   594
C    1 WRITE(IOUTPT,1204) QGWN,QLWL,SSFPT,<ICONVCALC>,TVENT,ISSV,               -036   595
C    2   NCWCON,FANHTM,U0A,UV0,Q10,Q20,ZDEL1,ZDEL2,ZDEL,                        -036   596
C    3   TVR,VNTRM,UVRMG,ENTHIN,T2TFV,IVENTF,NZ                                 -036   597
 1204 FORMAT(42H QGWN,QLWL,SSFPT,ICONVCLC,TVENT,ISSV,NCWCN,3F12.4,I12,          -036   598
     1 F12.4,2I6/                                                               -036   599
     2       42H FANHTM,U0A,UV0,Q10,Q20,ZDEL1             ,6F12.4/              -036   600
     3       42H ZDEL2,ZDEL                               ,2F12.4/              -036   601
     4       42H TVR,VNTRM,UVRMG,ENTHIN,T2TFV,IVENTF,NZ   ,5F12.4,2I12)         -036   602
 1000 CONTINUE                                                                  SSFCOR 985
C********************** run function : SSFCOR-1 ************************        SSFCOR 986
      IF( MSYSF(68) .NE. 0 )   CALL  FINTS( MSYSF(68), 0. )                     SSFCOR 987
C*******************************************************************            SSFCOR 988
C            TOTAL HEAT GAIN BY CONDUCTION THRU WINDOWS AND OPAQUE PART         SSFCOR 989
C            OF COMMON WALLS                                                    SSFCOR 990
      QGWAL = QGWIN + QGOPWL                                                    SSFCOR 991
C            GET CORRESPONDING LOAD BY APPLYING CONDUCTION WEIGHTING FACTORS    SSFCOR 992
      QLWAL = <CONDUCTION-V0>*QGWAL + <CONDUCTION-V1>*<QGWAL1> +                SSFCOR 993
     1        <CONDUCTION-V2>*<QGWAL2> + <CONDUCTION-W1>*<QLWAL1> +             SSFCOR 994
     2        <CONDUCTION-W2>*<QLWAL2>                                          SSFCOR 995
C            CORRECTION TO F FROM CONDUCTION                                    SSFCOR 996
      CSSCND = QLWAL + <P1>*<QLWAL1> + <P2>*<QLWAL2>                            SSFCOR 997
C            CORRECTION TO F FROM CONVECTION                                    SSFCOR 998
      CSSVEC = <QGVEC> + <QGVNT> + <P1>*<QGVEC1> + <P2>*<QGVEC2>                SSFCOR 999
      IF (IREPRT(2,35) .NE. 0  .AND.  InitialFlg .EQ. 0)                        Time   387
     $WRITE(IOUTPT,1300)                                                        -036   604
     $ (<ZONE-NAME>,II=1,8),IMO,IDAY,IHR,<ISUNSP>,InitialFlg,                   Time   388
     $QLWAL , <CONDUCTION-V0>,QGWAL , <CONDUCTION-V1>,<QGWAL1>,                 -036   606
     $        <CONDUCTION-V2>,<QGWAL2> , <CONDUCTION-W1>,<QLWAL1>,              -036   607
     $        <CONDUCTION-W2>,<QLWAL2>,                                         -036   608
     $CSSCND , QLWAL , <P1>,<QLWAL1> , <P2>,<QLWAL2>,                           -036   609
     $CSSVEC , <QGVEC> , <QGVNT> , <P1>,<QGVEC1> , <P2>,<QGVEC2>                -036   610
 1300 FORMAT('0SSFCOR-- doing ZONE : ',8A4/                                     -036   611
     $' Month, Day, Hour, ISUNSP, InitialFlg: ',5I4,//                          Time   389
     $' QLWAL =   COND-V0 *       QGWAL  + COND-V1 *     QGWAL1 +'/             -036   613
     $'           COND-V2 *       QGWAL2 + '/                                   -036   614
     $'           COND-W1 *       QLWAL1 + COND-W2 *     QLWAL2'/               -036   615
     $1X,F9.0,2(2X,F6.3,3X,F12.2,2X)/                                           -036   616
     $10X,     (2X,F6.3,3X,F12.2)/                                              -036   617
     $10X,    2(2X,F6.3,3X,F12.2,2X)//                                          -036   618
     $' CSSCND =                  QLWAL  + '/                                   -036   619
     $'                P1 *       QLWAL1 +     P2  *     QLWAL2'/               -036   620
     $1X,F9.0,2X,6X,3X,F12.2/                                                   -036   621
     $10X,2(2X,F6.3,3X,F12.2,2X)//                                              -036   622
     $' CSSVEC =                  QGVEC  +               QGVNT  +'/             -036   623
     $'                P1 *       QGVEC1 +     P2  *     QGVEC2'/               -036   624
     $1X,F9.0,2(2X,  6X,2X,F12.2)/                                              -036   625
     $10X,    2(2X,F6.3,2X,F12.2)// )                                           -036   626
      IF (IFLG.NE.1) RETURN                                                     SSFCOR1003
C            UPDATE HEAT GAIN AND LOAD HISTORIES FOR USE NEXT HOUR              SSFCOR1004
      <QGWAL2> = <QGWAL1>                                                       SSFCOR1005
      <QGWAL1> = QGWAL                                                          SSFCOR1006
      <QLWAL3> = <QLWAL2>                                                       SSFCOR1007
      <QLWAL2> = <QLWAL1>                                                       SSFCOR1008
      <QLWAL1> = QLWAL                                                          SSFCOR1009
      <QGVEC2> = <QGVEC1>                                                       SSFCOR1010
      <QGVEC1> = <QGVEC> + <QGVNT>                                              SSFCOR1011
C                                                                               SSFCOR1012
      RETURN                                                                    SSFCOR1013
      END                                                                       SSFCOR1014
      SUBROUTINE SUMSYS                                                         HVAC22 172
c                                                                               SUM      3
c--- direct sum (no system) to plant                                            SUM      4
c                                                                               SUM      5
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON  /ENDUSE/ SUPPKW, HEATKW                                           HVAC27   1
      COMMON /FFUEL/ FFUEL, FurnAuxFuel, FurnAuxkW, PLRF                        /FFUEL/  2
      common  /FNSYS/  ISKIPS, MSYSF(120)                                       /FNSYS/  2
      COMMON  /HRREP / Irb, Ihrp, Lrb, Lhrp, Nrb, Nhrp, IVTLIM(3,50),           HR       5
     &                 IGRPtr, IBRPtr, IRSch, IRSchT(5),                        HR       6
     &                 NHRTyp(3), ITBUF(3), ITBUFB(3), ITBUFE(3),               HR       7
     &                 IHREOF, ICDFLG                                           HR       8
      COMMON  /MISCD / TEMPS(4,9999),CONS(5),TEMPSL(9999),                      -048a   10
     1                 BLDGQH,BLDGQC,BLDGQL,BLDGP,BPMULT,                       /MISCD/  3
     $                 DBTMIN,DBTMAX,WMIN,WMAX,NSPZ(9999),                      -048a   11
     3                 DQ, DTP, DTR, DTS, FPI, PLRCC , POM, TC2, TDM,           /MISCD/  5
     4                 TRA,WCOL,WCOLM,WMM,YPI,KWBTU,BTUKW,UNFILD,Unusedm        RemPA   45
      REAL             KWBTU                                                    /MISCD/  7
      COMMON  /PLANTD/ QHMP,TMP,CFMP,QHPP,CFMPP,                                /PLANTD/ 2
     1                 QHZP,TZP,DHWPKW,DHWPLF,DHWQRP                            RemPA   46
      REAL             PLANTD(10)                                               RemPA   47
      EQUIVALENCE      (PLANTD(1), QHMP)                                        RemPA   48
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      COMMON  /SYSTD / TH,TC,TM,TR,QH,QC,QHZ,QCZ,QHB,QHP,QHUM,                  /SYSTD/  2
     1                 QDHUM,TCMIN,THMAX,QLSUM,QPSUM,CFM,CFMH,CFMC,             /SYSTD/  3
     2                 RCFM,ECFM,CINF,FON,HON,CON,BON,SCONS(3),PH,PC,           /SYSTD/  4
     3                 SKW,FANKW,unused1,WR,WM,WCOIL,WW,PO,D,                   -046f    1
     4                 FTEMP,TCR,QHR,RfanPumpKW,SGAS,SKWQH,SKWQC,QCLAT,         -131    23
     5                 SFKW,RFKW,FONNGT,WSURF,RWalkinQ,TSURF,TRh,               -131    24
     6                 CBF,CBF1,CBF2,EON,PLRCFM,PLRC,PLRH,QCM1,                 /SYSTD/  8
     7                 QCM2,QHM1,EIRM1,EIRM2,EIR,OFKW,QCT,QCS,                  /SYSTD/  9
     8                 WRMAX,WRMIN,CFMRAT,QdistG,QdistL,RON,QHT,                /SYSTD/ 10
     9                 TPOMIN,POMIN,QHSUP,QRSENS,QRLAT,QRREC,QRREJ,             /SYSTD/ 11
     1                 RCOMKW,RDEFKW,RAUXKW,ECFMP,CFMIN,CINFP,DT,DW,            /SYSTD/ 12
     2                 EWB,IC,NATTSP,Q,RETR,SLOAD,QLSUMP,T,TCHUM,TEND,          /SYSTD/ 13
     3                 TS,hgbmin,HPDefE,EconoOnly,TDuctEnv,                     -044e1   1
     4                 QCUNMT,CapRh,CapRph,CapRc                                HVAC25   3
      REAL             SYSTD(113)                                               HVAC19  13
      EQUIVALENCE      (SYSTD(1),TH)                                            RemPA   65
      COMMON  /TIME  / IDOY, IYR, IMO, IDAY, IHR,                               Time     4
     &                 ISCMO, ISCDAY, ISCHR, IDOW, ISCDOW, iDSdates(6),         -044e5   1
     &                 iTimeFlg, iDSFlg, iDDFlg, InitialFlg, LeapYr,            Time     6
     &                 CLOCK(10), MONDSC(13), MONLEN(12), MONSDA(12)            HR      12
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
      COMMON  /ZONED / EXCFM,FH,FC,CFMZ,QHBZ,QOVER,THZ,TCZ,ERMAX,ERMIN,         /ZONED/  2
     1                 TRY,FTD,CORINT,G0,G1,G2,G3,SIGMAG,TL,ZQHR,TAVE,          /ZONED/  3
     2                 ZQH,ZQC,FCHPS(15),ACFM,ZKW,TCMINZ,THMAXZ,                /ZONED/  4
     3                 ERMAXM,ERMINM,THR,CSSCND,CSSVEC,HENOW,QGWIN,             /ZONED/  5
     4                 QSNABT,QGOPWL,QGVEC,CFMCVT,SSFPT,CFMVNT,ZFANKW,          /ZONED/  6
     5                 ZKWCBT,ZKWHBT,ZCapRbbrd, XC,ZC,XH,ZH                     -044e2   7
      REAL ZONED(63)                                                            -044e2   8
      EQUIVALENCE (ZONED(1),EXCFM)                                              /ZONED/  9
c---- if variable-temp is on skip                                               SUM     17
      if ( <VARIABLE-T> .eq. 0 )     then                                       SUM     18
c-------- set fans,heat, and cool to be on                                      SUM     19
          HON = 1.                                                              SUM     20
          CON = 1.                                                              SUM     21
          FON = 1.                                                              SUM     22
      endif                                                                     SUM     23
c                                                                               SUM     24
c---- set ZP1 to point to the first zone                                        SUM     25
c                                                                               SUM     26
      ZP1    = ISZ                                                              SUM     27
c***************** run function : SUM-1 *********************                   SUM     28
      if ( MSYSF(69) .ne. 0 )     call  FINTS( MSYSF(69), 0. )                  SUM     29
c************************************************************                   SUM     30
c                                                                               SUM     31
c---- loop through the zones on the system                                      SUM     32
c                                                                               SUM     33
      DO   10000   NZ = 1 , NSZ                                                 SUM     34
c                                                                               SUM     35
c-------- zero the zone data common block                                       SUM     36
          DO 111  I=1,63                                                        -044e2 158
              ZONED(I) = 0.0                                                    SUM     38
111       continue                                                              SUM     39
c-------- pick up ptr to ZP2 data                                               SUM     40
          ZP2     = <ZP2>                                                       SUM     41
          <ERMAX> = <ERMAXD> * CON                                              SUM     42
          <ERMIN> = <ERMIND> * HON                                              SUM     43
c***************** run function : SUM-2Z ********************                   SUM     44
          if ( MSYSF(70) .ne. 0 )     call  FINTS( MSYSF(70), 0. )              SUM     45
c***************************************************************                SUM     46
c                                                                               SUM     47
c-------- call routine to calc zone temp and load                               SUM     48
c                                                                               SUM     49
           call  TEMDEV(0)                                                      SUM     50
c                                                                               SUM     51
c-------- if this is an uncond zone skip                                        SUM     52
c                                                                               SUM     53
          if ( <ZONE-TYPE> .eq. 1 )    then                                     SUM     54
c                                                                               SUM     55
c------------ ck if fans are on                                                 SUM     56
c                                                                               SUM     57
              if ( FON .ne. 0. )   then                                         SUM     58
c---------------- separate heating and cooling loads                            SUM     59
                  ZQH = AMIN1( 0., <QNOW> )                                     SUM     60
                  ZQC = AMAX1( 0., <QNOW> )                                     SUM     61
c---------------- increment total system heating/cooling                        SUM     62
                  QHZ = QHZ  +  ZQH * <MULTIPLIER>                              SUM     63
                  QCZ = QCZ  +  ZQC * <MULTIPLIER>                              SUM     64
c---------------- if zone coils are electric                                    SUM     65
                  if ( <HEAT-SOURCE> .eq. 1 )    then                           SUM     66
                      X      = ZQH*KWBTU                                        SUM     67
                      ZKW    = ZKW    - X                                       SUM     68
                      SKWQH  = SKWQH  - X * <MULTIPLIER>                        SUM     69
        JEM       = <HEAT-E-MZ>                                                 HVAC6  780
        <HEAT-EM> = <HEAT-EM> - X*ZMULT                                         HVAC6  781
                  endif                                                         SUM     71
c---------------- if heat coils are fuel                                        SUM     72
                  if ( (<HEAT-SOURCE> .eq. 2) .or.                              SUM     73
     1                 (<HEAT-SOURCE> .eq. 3) )     then                        SUM     74
                       call  FURNAC( ZQH, <ERMIND>, <HEAT-SOURCE>               SUM     75
     1                             , <MULTIPLIER> )                             SUM     76
        JEM       = <AUX-E-MZ>                                                  HVAC6  782
        <AUX-EM>  = <AUX-EM> + FurnAuxkW                                        HVAC6  783
        JFM       = <HEAT-F-MZ>                                                 HVAC6  784
        <HEAT-FM> = <HEAT-FM> - FFUEL                                           HVAC6  785
        <AUX-FM>  = <AUX-FM>  + FurnAuxFuel                                     HVAC6  786
                  endif                                                         SUM     77
              endif                                                             SUM     78
c***************** run function : SUM-3Z ********************                   SUM     79
              if ( MSYSF(71) .ne. 0 )     call  FINTS( MSYSF(71), 0. )          SUM     80
              if ( ISKIPS .ne. 0 )     then                                     SUM     81
                  goto  1200                                                    SUM     82
              endif                                                             SUM     83
c***************************************************************                SUM     84
c------------ if baseboards are electric                                        SUM     85
              if ( <BASEBOARD-SOURCE> .eq. 1 )    then                          SUM     86
                  X      = QHBZ*KWBTU                                           SUM     87
                  ZKW    = ZKW    - X                                           SUM     88
                  SKWQH  = SKWQH  - X * <MULTIPLIER>                            SUM     89
        JEM       = <HEAT-E-MZ>                                                 HVAC6  787
        <HEAT-EM> = <HEAT-EM> - X*ZMULT                                         HVAC6  788
              endif                                                             SUM     91
c------------ if baseboards are fuel                                            SUM     92
              if ( (<BASEBOARD-SOURCE> .eq. 2) .or.                             SUM     93
     1             (<BASEBOARD-SOURCE> .eq. 3) )     then                       SUM     94
                   call  FURNAC ( QHBZ, <BASEBOARD-RATING>                      SUM     95
     1                          , <BASEBOARD-SOURCE>, <MULTIPLIER> )            SUM     96
        JEM       = <AUX-E-MZ>                                                  HVAC6  789
        <AUX-EM>  = <AUX-EM> + FurnAuxkW                                        HVAC6  790
        JFM       = <HEAT-F-MZ>                                                 HVAC6  791
        <HEAT-FM> = <HEAT-FM> - FFUEL                                           HVAC6  792
        <AUX-FM>  = <AUX-FM>  + FurnAuxFuel                                     HVAC6  793
              endif                                                             SUM     97
1200          continue                                                          SUM     98
          endif                                                                 SUM     99
c***************** run function : SUM-4Z ********************                   SUM    100
          if ( MSYSF(94) .ne. 0 )     call  FINTS( MSYSF(94), 0. )              SUM    101
          if ( ISKIPS .ne. 0 )     then                                         SUM    102
              goto  1300                                                        SUM    103
          endif                                                                 SUM    104
c***************************************************************                SUM    105
c                                                                               HVAC1  696
c              save zonal coil flows and loads for circulation loop calcs       HVAC1  697
      <COIL_QZ>     = ZQH + ZQC                                                 HVAC1  698
      <COIL_CYCLEZ> = 1.                                                        HVAC1  699
      <BBRD_EDB>    = TAVE                                                      HVAC1  700
      <BBRD_Q>      = QHBZ                                                      HVAC1  701
c                                                                               HVAC1  702
c-------- increment total system latent load                                    SUM    106
          QLSUM = QLSUM  +  <QL> * <MULTIPLIER>                                 SUM    107
c-------- increment total system light-to-return load                           SUM    108
          QPSUM = QPSUM  +  <QLIGHTRETURN> * <MULTIPLIER>                       SUM    109
c-------- increment total system kw                                             SUM    110
          ZKW   = ZKW + <ZKW>                                                   SUM    111
          <SKW> = <SKW>  +  ZKW * <MULTIPLIER>                                  SUM    112
c-------- increment total system infiltration cfm                               SUM    113
          CINF  = CINF + <CFMINF>                                               SUM    114
C              SUM END-USE VARIABLES FOR THIS ZONE                              SUM    115
      ZMULT = <MULTIPLIER>                                                      SUM    116
1300      continue                                                              SUM    118
c                                                                               SUM    119
c-------- handle hourly-report request                                          SUM    120
c--------   if rep-block buf and hourly-rep sched fill buff                     SUM    121
          if ( (<IZNBUFP> .ne. 0) .and. (IRSCH .ne. 0) )                        SUM    122
     1         call  USERZR( ZP1, ZP2 )                                         SUM    123
          if ( IRPZON .ne. 0 )    call  RPTZON                                  SUM    124
c-------- increment ZP1 to point to next zone                                   SUM    125
          ZP1 = ZP1 + NZD                                                       SUM    126
10000 continue                                                                  SUM    127
c***************** run function : SUM-5 *********************                   SUM    128
          if ( MSYSF(95) .ne. 0 )     call  FINTS( MSYSF(95), 0. )              SUM    129
c***************************************************************                SUM    130
c                                                                               SUM    131
c---- calculate total system loads                                              SUM    132
c                                                                               SUM    133
      if ( <HEAT-SOURCE> .le. 0 )   <QH> = QHZ                                  SUM    134
      QC = QCZ                                                                  SUM    135
      return                                                                    SUM    136
      end                                                                       SUM    137
      SUBROUTINE SVA                                                            SVA      2
C                                                                               SVA      3
C                            VERIFICATION REPORT A                              SVA      4
C                                                                               SVA      5
C              DEVELOPED BY                                                     -130     1
C                            J. J. Hirsch & S. D. Gates                         -130     2
C                            James J. Hirsch & Associates                       -130     3
C                            Camarillo, California                              -130     4
C              BASED UPON CODE DEVELOPED BY J. J. Hirsch and                    -130     5
C                            W. F. Buhl                                         -130     6
C                            A. E. Erdem                                        -130     7
C                            Lawrence Berkeley National Laboratory              -130     8
C                            University of California                           -130     9
Copyright (c) 1997 by James J. Hirsch. All Rights Reserved. Unpublished         -130    10
c rights reserved under the Copyright Laws of the United States.                -130    11
c RESTRICTED RIGHTS NOTICE: Government use, reproduction or disclosure          -130    12
c is subject to restrictions as set forth in Rights in Data (g)(3) in           -130    13
c UC/LBL purchase order 4607010 with J.J. Hirsch & Associates.                  -130    14
C                                                                               SVA      7
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON  /BUF   / DBUF(52,9999), IZREF(9999),                              -048a    8
     &                 DAYMTR(61,24), ElecPeaks5(13,25,24)                      Time     2
      DIMENSION        IDBUF(52,9999), OBUF(42,24,4), IOBUF(42,24,4)            -048a    9
      EQUIVALENCE      (DBUF(1,1),IDBUF(1,1)),                                  /BUF/    5
     1                 (OBUF(1,1,1),DBUF(1,1)),                                 /BUF/    6
     2                 (OBUF(1,1,1),IOBUF(1,1,1))                               /BUF/    7
      COMMON  /CTRL  / VERS(2),IRPFLG(4),IOVRLL(7),IWRTFL,IPROG,                /CTRL/   2
     1                 IFATAL,NAMPRG(3,7),MTRICR                                /CTRL/   3
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                 IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                        /FILES/  3
     2               , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                   /FILES/  4
     3                 IHRREP(3), IHRPAS(2)                                     /FILES/  5
      COMMON  /HRREP / Irb, Ihrp, Lrb, Lhrp, Nrb, Nhrp, IVTLIM(3,50),           HR       5
     &                 IGRPtr, IBRPtr, IRSch, IRSchT(5),                        HR       6
     &                 NHRTyp(3), ITBUF(3), ITBUFB(3), ITBUFE(3),               HR       7
     &                 IHREOF, ICDFLG                                           HR       8
      COMMON /INTS  /  IZERO,IONE,ITWO,ITHREE,IFOUR,IFIVE,ISIX,                 RemPA    9
     $                 ISEVEN,IEIGHT,ININE,ITEN,                                RemPA   10
     $                 I11,I12,I13,I14,I15,I16,I17,I18,I19,I20,                 RemPA   11
     $                 I21,I22,I23,I24,I25,I26,I27,I28,I29,I30,                 RemPA   12
     $                 I31,I32,I33,I34,I35,I36,I37,I38,I39,I40,                 RemPA   13
     $                 I41,I42,I43,I44,I45,I46,I47,I48,I49,I50,                 RemPA   14
     $                 I51,I52,I53,I54,I55,I56,I57,I58,I59,I60,                 HVAC6    6
     $                 I61,I62,I63,I64,I65,I66,I67,I68,I69,I70,                 HVAC6    7
     $                 I71,I72,I73,I74,I75,I76,I77,I78,I79,I80,                 HVAC6    8
     $                 I81,I82,I83,I84,I85,I86,I87,I88,I89,I90,                 HVAC6    9
     $                 I91,I92,I93,I94,I95,I96,I97,I98,I99,I100                 HVAC6   10
      INTEGER          INTS(101)                                                HVAC6   11
      EQUIVALENCE      (INTS(1),IZERO)                                          /INTS/   7
      COMMON  /MISCD / TEMPS(4,9999),CONS(5),TEMPSL(9999),                      -048a   10
     1                 BLDGQH,BLDGQC,BLDGQL,BLDGP,BPMULT,                       /MISCD/  3
     $                 DBTMIN,DBTMAX,WMIN,WMAX,NSPZ(9999),                      -048a   11
     3                 DQ, DTP, DTR, DTS, FPI, PLRCC , POM, TC2, TDM,           /MISCD/  5
     4                 TRA,WCOL,WCOLM,WMM,YPI,KWBTU,BTUKW,UNFILD,Unusedm        RemPA   45
      REAL             KWBTU                                                    /MISCD/  7
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      COMMON  /REPORT/ IREPRT(4,37),IPRG,IUNIQV(100),IUNIQS(100),IUNIQL         HVAC14   4
      COMMON  /TIME  / IDOY, IYR, IMO, IDAY, IHR,                               Time     4
     &                 ISCMO, ISCDAY, ISCHR, IDOW, ISCDOW, iDSdates(6),         -044e5   1
     &                 iTimeFlg, iDSFlg, iDDFlg, InitialFlg, LeapYr,            Time     6
     &                 CLOCK(10), MONDSC(13), MONLEN(12), MONSDA(12)            HR      12
      COMMON  /IST/    IST(4,32)                                                /IST/    2
      DIMENSION NEWTIT(9)                                                       HVAC11 138
      DATA NEWTIT /4HSV-A,4H Sys,4Htem ,4HDesi,4Hgn P,                          HVAC11 139
     $             4Haram,4Heter,4Hs fo,4Hr   /                                 HVAC11 140
      DATA IBLK/4H    /                                                         SVA     22
      DIMENSION IFAN(2,4)                                                       SVA     23
      DATA IFAN /4H  SU, 4HPPLY, 4HHOT , 4HDECK,                                SVA     24
     1           4H  RE, 4HTURN, 4H  RE, 4HLIEF /                               SVA     25
      DIMENSION IFPLACE(3,6)                                                    SVA     26
      DATA IFPLACE /4H   B, 4HLOW-, 4HTHRU,    4H   D, 4HRAW-, 4HTHRU,          SVA     27
     1              4H    , 4H  RE, 4HTURN,    4H    , 4H  RE, 4HLIEF,          SVA     28
     2              4H    , 4H  CO, 4HMMON,    4H   C, 4HOLD-, 4HDECK /         SVA     29
      DIMENSION IFCTRL(2,12)                                                    SVA     30
      DATA IFCTRL  /4HCONS, 4HTANT,   4H   S, 4HPEED,   4H   I, 4HNLET,         SVA     31
     1              4HDISC, 4HHARG,   4H CYC, 4HLING,   4H    , 4H    ,         SVA     32
     2              4H    , 4H    ,   4H    , 4H    ,   4H    , 4H    ,         SVA     33
     3              4H    , 4H    ,   4H 2-S, 4HPEED,   4H BY , 4HUSER /        SVA     34
      DIMENSION ISOURCE(3,3)                                                    SVA     35
      DATA ISOURCE /4H SNA, 4HP-AC, 4HTING,                                     SVA     36
     1              4H    , 4HHOT-, 4HDECK,   4H   C, 4HOLD-, 4HDECK /          SVA     37
      IUNIQ  = 1                                                                SVA     38
      DO 100 NS=1,NSYS                                                          SVA     39
      IUNIQ  = IUNIQ-1                                                          SVA     40
      NSP    = IS + (NS-1)*NSS                                                  SVA     41
      ISZ    = <ISZONES>                                                        SVA     42
      NSZ    = <NZONES>                                                         SVA     43
      ICODE  = <SYSTEM-TYPE>                                                    SVA     44
      WRITE (IREPFL) I22,IUNIQ,ISIX,                                            HVAC11 141
     $  NEWTIT,(<SYSTEM-NAME>,II=1,8),(IBLK,II=1,3)                             HVAC11 142
      C1     = <COOLING-CAPACITY>*0.001                                         SVA     48
      C2     = 0.0                                                              SVA     49
      IF(C1 .NE. 0.0)  C2  = <COOL-SH-CAP>/<COOLING-CAPACITY>                   SVA     50
      C3     = <HEATING-CAPACITY>*0.001                                         SVA     51
      C4     = <SUPPLY-DELTA-T>*CONS(3)                                         SVA     52
      C5     = <RETURN-DELTA-T>*CONS(3)                                         SVA     53
      IISYT = <SYSTEM-TYPE>                                                     SVA     54
      IF ((<HEAT-SOURCE> .NE. 4) .AND. (<HEAT-SOURCE> .NE. 9))  THEN            HVAC12 211
c              no heat pump supplemental heat                                   HVAC12 212
        C6 = 0.                                                                 HVAC12 213
      ELSE                                                                      HVAC12 214
        C6 = <SUPP-HEAT-CAP>*0.001                                              HVAC12 215
      ENDIF                                                                     HVAC12 216
      WRITE(IREPFL)  I16,IUNIQ,IONE,ITWO,I12,                                   HVAC12 217
     1  (IST(I,IISYT),I=1,2),BPMULT,<SAREA>,<SPEOPLE>,                          HVAC12 218
     2  <MIN-OUTSIDE-AIR>,C1,C2,C3,<COOLING-EIR>,<HEATING-EIR>,C6               HVAC12 219
c              fan design parameters - skip if this systems has no fans         SVA     67
      IF (<SUPPLY-CFM> .EQ. 0.)  GOTO 10                                        SVA     68
      WRITE(IREPFL)  IFOUR,IUNIQ,IONE,ITHREE,IZERO                              SVA     69
c                                                                               SVA     70
c              supply fan                                                       SVA     71
      IFP = <FAN-PLACEMENT> + 1                                                 SVA     72
      IFC = <FAN-CONTROL> + 1                                                   SVA     73
      WRITE(IREPFL)  I20,IUNIQ,IONE,IFOUR,I16,                                  SVA     74
     1  (IFAN(I,1),I=1,2),<SUPPLY-CFM>,<CFMRATIO>,                              SVA     75
     2  <SUPPLY-KW>,<SUPPLY-DELTA-T>*CONS(3),<SUPPLY-STATIC>,                   SVA     76
     3  <SUPPLY-EFF>,<SUPPLY-MECH-EFF>,(IFPLACE(I,IFP),I=1,3),                  SVA     77
     4  (IFCTRL(I,IFC),I=1,2),<MAX-FAN-RATIO>,<MIN-FAN-RATIO>                   SVA     78
c                                                                               SVA     79
c              hot deck fan                                                     SVA     80
      IF (<DDS-TYPE> .EQ. 2)  THEN                                              SVA     81
        IFP = <HFAN-PLACEMENT> + 1                                              SVA     82
        IFC = <HFAN-CONTROL> + 1                                                SVA     83
        WRITE(IREPFL)  I20,IUNIQ,IONE,I14,I16,                                  HVAC12 220
     1  (IFAN(I,2),I=1,2),<HSUPPLY-CFM>,<HCFMRATIO>,                            SVA     85
     2  <HSUPPLY-KW>,<HSUPPLY-DELTA-T>*CONS(3),<HSUPPLY-STATIC>,                SVA     86
     3  <HSUPPLY-EFF>,<HSUPPLY-MECH-EFF>,(IFPLACE(I,IFP),I=1,3),                SVA     87
     4  (IFCTRL(I,IFC),I=1,2),<HMAX-FAN-RATIO>,<HMIN-FAN-RATIO>                 SVA     88
      ENDIF                                                                     SVA     89
c                                                                               SVA     90
c              return/relief fan                                                SVA     91
      IF (<RETURN-KW> .GT. 0.)  THEN                                            SVA     92
        IF (<RETURN-FAN-LOC> .EQ. 3)  THEN                                      SVA     93
c              relief fan                                                       SVA     94
          IFP = 4                                                               SVA     95
          IFT = 4                                                               SVA     96
        ELSE                                                                    SVA     97
          IFT = 3                                                               SVA     98
          IF (<DDS-TYPE> .EQ. 2)  THEN                                          SVA     99
c              dual-fan - return either common or cold-deck only                SVA    100
            IFP = <RETURN-FAN-LOC> + 4                                          SVA    101
          ELSE                                                                  SVA    102
c              conventional return fan                                          SVA    103
            IFP = 3                                                             SVA    104
          ENDIF                                                                 SVA    105
        ENDIF                                                                   SVA    106
        IRFC = <RETURN-FAN-CONTR> + 1                                           RemPA  645
        WRITE(IREPFL)  I20,IUNIQ,IONE,I15,I16,                                  HVAC12 221
     1    (IFAN(I,IFT),I=1,2),<RETURN-CFM>,<CFMRATIO>,                          SVA    109
     2    <RETURN-KW>,<RETURN-DELTA-T>*CONS(3),<RETURN-STATIC>,                 SVA    110
     3    <RETURN-EFF>,<RETURN-EFF>/0.9,(IFPLACE(I,IFP),I=1,3),                 SVA    111
     4    (IFCTRL(I,IRFC),I=1,2),<MAX-FAN-RATIO>,<MIN-FAN-RATIO>                RemPA  646
      ENDIF                                                                     SVA    113
   10 CONTINUE                                                                  SVA    114
c              zonal data                                                       SVA    115
      WRITE(IREPFL) IFOUR,IUNIQ,IONE,IFIVE,IZERO                                SVA    116
      NL     = 21                                                               SVA    117
      IUNIT  = 0                                                                SVA    118
      IF((ICODE.EQ.6).OR.(ICODE.EQ.7)) IUNIT = 2                                SVA    119
      IF(ICODE.EQ.9) IUNIT = 1                                                  -039    32
      IF((ICODE.EQ.15).OR.(ICODE.EQ.22)) IUNIT = 1                              SVA    121
c              double space the report every five lines                         SVA    122
      IF5 = 1                                                                   SVA    123
      ZP1    = ISZ                                                              SVA    124
      DO 200 NZ=1,NSZ                                                           SVA    125
      ZP2    = <ZP2>                                                            SVA    126
      C1     = <COOLCAPZ>*0.001                                                 SVA    127
      C2     = 0.0                                                              SVA    128
      IF(C1 .NE. 0.0)  C2 = <COOLSHZ>/<COOLCAPZ>                                SVA    129
      C3     = <ERMAXD>*0.001                                                   SVA    130
      C4     = <HEATCAPZ>*0.001                                                 SVA    131
      C5     = <ERMIND>*0.001                                                   SVA    132
      C6     = <EXHAUST-KW>                                                     SVA    133
      IF(IUNIT .NE. 0)  C6 = C6 + <SUPPLY-KW>*<CFMAX>                           SVA    134
      IF(<BASEBOARD-RATING> .ge. 0.0) THEN                                      -034   196
        WRITE(IREPFL) I23,IUNIQ,IONE,ISIX,I19,(<ZONE-NAME>,II=1,8),             -034   197
     $  <CFMAX>,<EXHAUST-CFM>,C6,<MINCFMR>,<VENTMIN>,C1,C2,C3,C4,C5,            -034   198
     $  <MULTIPLIER>                                                            -034   199
        NBB = 0                                                                 -036   627
      ELSE                                                                      -034   200
        C7 = <BASEBOARD-RATING>*0.001                                           -034   201
        WRITE(IREPFL) I24,IUNIQ,IONE,ISIX,I20,(<ZONE-NAME>,II=1,8),             -034   202
     $  <CFMAX>,<EXHAUST-CFM>,C6,<MINCFMR>,<VENTMIN>,C1,C2,C3,C4,C5,            -034   203
     $  <MULTIPLIER>,C7                                                         -034   204
        NL  = NL + 1                                                            -034   205
        NBB = 1                                                                 -036   628
      ENDIF                                                                     -034   206
      IF (IF5 .LT. 5)  THEN                                                     HVAC12 225
        NL  = NL + 1                                                            HVAC12 226
        IF5 = IF5 + 1 - NBB                                                     -036   629
      ELSE                                                                      HVAC12 228
        WRITE(IREPFL) IFOUR,IUNIQ,IONE,ISEVEN,IZERO                             HVAC12 229
        NL  = NL + 2                                                            HVAC12 230
        IF5 = 1                                                                 HVAC12 231
      ENDIF                                                                     HVAC12 232
      ZP1    = ZP1 + NZD                                                        SVA    148
  200 CONTINUE                                                                  SVA    149
c              Mixing box summary for dual-duct systems                         SVA    150
      IF (<DDS-TYPE> .GT. 0)  THEN                                              SVA    151
c              check if enough lines left                                       SVA    152
C       INEED = NSZ + 7                                                         SVA    153
C       WRITE(IREPFL) ITHREE,IUNIQ,ITHREE,INEED                                 SVA    154
        WRITE(IREPFL) IFOUR,IUNIQ,IONE,IEIGHT,IZERO                             SVA    155
        IF5 = 1                                                                 SVA    156
        ZP1 = ISZ                                                               SVA    157
        DO NZ=1,NSZ                                                             SVA    158
          ZP2 = <ZP2>                                                           SVA    159
          IF (<ZONE-TYPE> .EQ. 1)  THEN                                         SVA    160
            ISRC = <MIN-CFM-SOURCEZ> + 1                                        SVA    161
            WRITE(IREPFL) I21,IUNIQ,IONE,ININE,I17,                             HVAC15  88
     1        (<ZONE-NAME>,II=1,8),  <CFMAX>,<MINCFMRC>,                        HVAC15  89
     2        <CFMAXH>,<MINCFMRH>,<CFMAXT>,<MINCFMR>,                           HVAC12 235
     3        (ISOURCE(I,ISRC),I=1,3)                                           HVAC12 236
            IF (IF5 .LT. 5)  THEN                                               HVAC12 237
              NL  = NL + 1                                                      HVAC12 238
              IF5 = IF5 + 1                                                     HVAC12 239
            ELSE                                                                HVAC12 240
              WRITE(IREPFL) IFOUR,IUNIQ,IONE,ITEN,IZERO                         HVAC12 241
              NL  = NL + 2                                                      HVAC12 242
              IF5 = 1                                                           HVAC12 243
            ENDIF                                                               HVAC12 244
          ENDIF                                                                 SVA    177
          ZP1 = ZP1 + NZD                                                       SVA    178
        ENDDO                                                                   SVA    179
      ENDIF                                                                     SVA    180
C REFRIGERATION EQUIPMENT DESIGN DATA                                           SVA    181
      IF (<REFG-ZONE-ZP1> .EQ. 0)  GOTO 40                                      SVA    182
      ZP1 = <REFG-ZONE-ZP1>                                                     SVA    183
      ZP2 = <ZP2>                                                               SVA    184
      WRITE (IREPFL) I12,IUNIQ,IONE,I11,IEIGHT,(<ZONE-NAME>,II=1,8)             HVAC15  90
      IG = 1                                                                    SVA    186
      IF (<REFG-BTU/WATT> .GT. 0.)  THEN                                        -037a    3
        C1 = 3.413 / <REFG-BTU/WATT>                                            -037a    4
      ELSE                                                                      -037a    5
        C1 = 0.                                                                 -037a    6
      ENDIF                                                                     -037a    7
      C2 = <REFG-HTREJ-DES>                                                     HVAC16 141
      IF (<REFG-COND-TYPE> .EQ. 1) C2 = C2*10.                                  HVAC16 142
      WRITE (IREPFL) I14,IUNIQ,IONE,I12,ITEN,IG,<REFG-DISCHARGE-T>,             CCIG7  114
     1  <REFG-QS-TLOADS>,<QRMIN>,<QRMAX>,<REFG-COMP-CAP>,C1,                    SVA    189
     2  C2,<REFG-FAN-KW>,<REFG-PUMP-KW>                                         HVAC16 143
      IF (<NUM-REFG-EQUIP> .EQ. 1)  GOTO 40                                     SVA    191
      IE = <NUM-REFG-EQUIP>                                                     SVA    192
      DO 30  IG=2,IE                                                            SVA    193
      IF (<REFG-BTU/WATT> .GT. 0.)  THEN                                        XFC2   239
        C1 = 3.413 / <REFG-BTU/WATT>                                            XFC2   240
      ELSE                                                                      XFC2   241
        C1 = 0.                                                                 XFC2   242
      ENDIF                                                                     XFC2   243
 30   WRITE (IREPFL) I11,IUNIQ,IONE,I13,ISEVEN,IG,<REFG-DISCHARGE-T>,           SVA    195
     1  <REFG-QS-TLOADS>,<QRMIN>,<QRMAX>,<REFG-COMP-CAP>,C1                     SVA    196
 40   CONTINUE                                                                  SVA    197
      WRITE(IREPFL)ITWO,IUNIQ,ISEVEN                                            SVA    198
  100 CONTINUE                                                                  SVA    199
      RETURN                                                                    SVA    200
      END                                                                       SVA    201
      SUBROUTINE SVB                                                            SVB      2
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON  /BUF   / DBUF(52,9999), IZREF(9999),                              -048a    8
     &                 DAYMTR(61,24), ElecPeaks5(13,25,24)                      Time     2
      DIMENSION        IDBUF(52,9999), OBUF(42,24,4), IOBUF(42,24,4)            -048a    9
      EQUIVALENCE      (DBUF(1,1),IDBUF(1,1)),                                  /BUF/    5
     1                 (OBUF(1,1,1),DBUF(1,1)),                                 /BUF/    6
     2                 (OBUF(1,1,1),IOBUF(1,1,1))                               /BUF/    7
      COMMON  /CTRL  / VERS(2),IRPFLG(4),IOVRLL(7),IWRTFL,IPROG,                /CTRL/   2
     1                 IFATAL,NAMPRG(3,7),MTRICR                                /CTRL/   3
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                 IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                        /FILES/  3
     2               , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                   /FILES/  4
     3                 IHRREP(3), IHRPAS(2)                                     /FILES/  5
      COMMON  /HRREP / Irb, Ihrp, Lrb, Lhrp, Nrb, Nhrp, IVTLIM(3,50),           HR       5
     &                 IGRPtr, IBRPtr, IRSch, IRSchT(5),                        HR       6
     &                 NHRTyp(3), ITBUF(3), ITBUFB(3), ITBUFE(3),               HR       7
     &                 IHREOF, ICDFLG                                           HR       8
      COMMON /INTS  /  IZERO,IONE,ITWO,ITHREE,IFOUR,IFIVE,ISIX,                 RemPA    9
     $                 ISEVEN,IEIGHT,ININE,ITEN,                                RemPA   10
     $                 I11,I12,I13,I14,I15,I16,I17,I18,I19,I20,                 RemPA   11
     $                 I21,I22,I23,I24,I25,I26,I27,I28,I29,I30,                 RemPA   12
     $                 I31,I32,I33,I34,I35,I36,I37,I38,I39,I40,                 RemPA   13
     $                 I41,I42,I43,I44,I45,I46,I47,I48,I49,I50,                 RemPA   14
     $                 I51,I52,I53,I54,I55,I56,I57,I58,I59,I60,                 HVAC6    6
     $                 I61,I62,I63,I64,I65,I66,I67,I68,I69,I70,                 HVAC6    7
     $                 I71,I72,I73,I74,I75,I76,I77,I78,I79,I80,                 HVAC6    8
     $                 I81,I82,I83,I84,I85,I86,I87,I88,I89,I90,                 HVAC6    9
     $                 I91,I92,I93,I94,I95,I96,I97,I98,I99,I100                 HVAC6   10
      INTEGER          INTS(101)                                                HVAC6   11
      EQUIVALENCE      (INTS(1),IZERO)                                          /INTS/   7
      COMMON  /MISCD / TEMPS(4,9999),CONS(5),TEMPSL(9999),                      -048a   10
     1                 BLDGQH,BLDGQC,BLDGQL,BLDGP,BPMULT,                       /MISCD/  3
     $                 DBTMIN,DBTMAX,WMIN,WMAX,NSPZ(9999),                      -048a   11
     3                 DQ, DTP, DTR, DTS, FPI, PLRCC , POM, TC2, TDM,           /MISCD/  5
     4                 TRA,WCOL,WCOLM,WMM,YPI,KWBTU,BTUKW,UNFILD,Unusedm        RemPA   45
      REAL             KWBTU                                                    /MISCD/  7
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      COMMON  /REPORT/ IREPRT(4,37),IPRG,IUNIQV(100),IUNIQS(100),IUNIQL         HVAC14   4
      COMMON  /TIME  / IDOY, IYR, IMO, IDAY, IHR,                               Time     4
     &                 ISCMO, ISCDAY, ISCHR, IDOW, ISCDOW, iDSdates(6),         -044e5   1
     &                 iTimeFlg, iDSFlg, iDDFlg, InitialFlg, LeapYr,            Time     6
     &                 CLOCK(10), MONDSC(13), MONLEN(12), MONSDA(12)            HR      12
C                                                                               SVB     13
      DIMENSION NEWTIT(9)                                                       HVAC11 143
      DATA NEWTIT /4HSV-B,4H Zon,4He Fa,4Hn Da,4Hta f,                          HVAC11 144
     $             4Hor P,4HIU S,4Hyste,4Hm   /                                 HVAC11 145
      DATA IBLK/ 4H     /                                                       SVB     16
      IUNIQ = -999                                                              SVB     17
      DO 100 NS=1,NSYS                                                          SVB     18
      NSP = IS + (NS-1)*NSS                                                     SVB     19
      IF (<SYSTEM-TYPE> .NE. 23) GO TO 100                                      SVB     20
      IUNIQ = IUNIQ - 1                                                         SVB     21
      ISZ = <ISZONES>                                                           SVB     22
      NSZ = <NZONES>                                                            SVB     23
      WRITE (IREPFL) I22,IUNIQ,ISIX,                                            -029     6
     $  NEWTIT,(<SYSTEM-NAME>,II=1,8),(IBLK,II=1,3)                             HVAC11 147
      IP5  = 0                                                                  REFG    15
      IP6  = 8                                                                  REFG    16
      ZP1 = ISZ                                                                 REFG    17
      DO NZ=1,NSZ                                                               REFG    18
        ZP2 = <ZP2>                                                             REFG    19
        IF(IP5 .EQ. 5) THEN                                                     REFG    20
C              Five lines - time for new group                                  REFG    21
          WRITE (IREPFL) ITHREE,IUNIQ,IONE,ITHREE                               -029     7
          IP5  = 0                                                              REFG    23
          IP6  = IP6 + 1                                                        REFG    24
        ENDIF                                                                   REFG    25
        IF(IP6 .GE. 7)  THEN                                                    REFG    26
C              Seven groups - time for new page                                 REFG    27
          IF(IP6 .NE. 8)  WRITE (IREPFL) ITWO,IUNIQ,ITWO                        -037a    8
C              put out the zone headers                                         REFG    29
          WRITE (IREPFL)  IFOUR,IUNIQ,IFOUR,IONE,IZERO                          REFG    30
          IP5  = 0                                                              REFG    31
          IP6  = 1                                                              REFG    32
        ENDIF                                                                   REFG    33
        C1 = <ZONE-FAN-KW>*<ZFCFMD>                                             REFG    34
        WRITE (IREPFL) I18,IUNIQ,IONE,ITWO,I14,(<ZONE-NAME>,II=1,8),            REFG    35
     1   <ZFCFMD>,<CFMAX>,<MINCFMR>,<REHEAT-DELTA-TZ>,<ZONE-FAN-DT>,C1          REFG    36
        IP5  = IP5 + 1                                                          REFG    37
        ZP1 = ZP1 + NZD                                                         REFG    38
      ENDDO                                                                     REFG    39
      WRITE (IREPFL) ITWO,IUNIQ,ISEVEN                                          SVB     36
  100 CONTINUE                                                                  SVB     37
      RETURN                                                                    SVB     38
      END                                                                       SVB     39
      SUBROUTINE SZCI                                                           SZCI     2
C                                                                               SZCI     3
C                            PLENUM INDUCTION + REHEAT (VAV)                    SZCI     4
C                                                                               SZCI     5
C              DEVELOPED BY                                                     -130     1
C                            J. J. Hirsch & S. D. Gates                         -130     2
C                            James J. Hirsch & Associates                       -130     3
C                            Camarillo, California                              -130     4
C              BASED UPON CODE DEVELOPED BY J. J. Hirsch and                    -130     5
C                            W. F. Buhl                                         -130     6
C                            A. E. Erdem                                        -130     7
C                            Lawrence Berkeley National Laboratory              -130     8
C                            University of California                           -130     9
Copyright (c) 1997 by James J. Hirsch. All Rights Reserved. Unpublished         -130    10
c rights reserved under the Copyright Laws of the United States.                -130    11
c RESTRICTED RIGHTS NOTICE: Government use, reproduction or disclosure          -130    12
c is subject to restrictions as set forth in Rights in Data (g)(3) in           -130    13
c UC/LBL purchase order 4607010 with J.J. Hirsch & Associates.                  -130    14
C                                                                               SZCI     7
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON  /ENDUSE/ SUPPKW, HEATKW                                           HVAC27   1
      COMMON /FFUEL/ FFUEL, FurnAuxFuel, FurnAuxkW, PLRF                        /FFUEL/  2
      common  /FNSYS/  ISKIPS, MSYSF(120)                                       /FNSYS/  2
      COMMON  /HRREP / Irb, Ihrp, Lrb, Lhrp, Nrb, Nhrp, IVTLIM(3,50),           HR       5
     &                 IGRPtr, IBRPtr, IRSch, IRSchT(5),                        HR       6
     &                 NHRTyp(3), ITBUF(3), ITBUFB(3), ITBUFE(3),               HR       7
     &                 IHREOF, ICDFLG                                           HR       8
      COMMON  /MISCD / TEMPS(4,9999),CONS(5),TEMPSL(9999),                      -048a   10
     1                 BLDGQH,BLDGQC,BLDGQL,BLDGP,BPMULT,                       /MISCD/  3
     $                 DBTMIN,DBTMAX,WMIN,WMAX,NSPZ(9999),                      -048a   11
     3                 DQ, DTP, DTR, DTS, FPI, PLRCC , POM, TC2, TDM,           /MISCD/  5
     4                 TRA,WCOL,WCOLM,WMM,YPI,KWBTU,BTUKW,UNFILD,Unusedm        RemPA   45
      REAL             KWBTU                                                    /MISCD/  7
      COMMON  /PLANTD/ QHMP,TMP,CFMP,QHPP,CFMPP,                                /PLANTD/ 2
     1                 QHZP,TZP,DHWPKW,DHWPLF,DHWQRP                            RemPA   46
      REAL             PLANTD(10)                                               RemPA   47
      EQUIVALENCE      (PLANTD(1), QHMP)                                        RemPA   48
      COMMON  /PTRPLT/ Ipm,Ilp,Ich,Ibl,Idw,Itw,Ipv,Ign,Itk,Ihx,                 PV       1
     &                 Iec,Ilm,Iem,Ifm,Ism,Icm,Imm,Imc,Igl,Isp2,                XFC2     1
     &                 Ispare(5),  Ipe,                                         HVAC19   3
     &                 Npm,Nlp,Nch,Nbl,Ndw,Ntw,Npv,Ngn,Ntk,Nhx,                 PV       2
     &                 Nec,Nlm,Nem,Nfm,Nsm,Ncm,Nmm,Nmc,Ngl,Nsp2,                XFC2     2
     &                 Nspare(5),  Npe,                                         HVAC19   6
     &                 Lpm,Llp,Lch,Lbl,Ldw,Ltw,Lpv,Lgn,Ltk,Lhx,                 PV       3
     &                 Lec,Llm,Lem,Lfm,Lsm,Lcm,Lmm,Lmc,Lgl,Lsp2,                XFC2     3
     &                 Lspare(5),  Lpe,                                         HVAC19   9
     &                 Jpm,Jlp,Jch,Jbl,Jdw,Jtw,Jpv,Jgn,Jtk,Jhx,                 PV       4
     &                 Jec,Jlm,Jem,Jfm,Jsm,Jcm,    Jmc,Jgl,                     HVAC19  11
     &                 Jpe, kpr, NumMeters, NumIntHX                            XFC1     1
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      COMMON  /SYSTD / TH,TC,TM,TR,QH,QC,QHZ,QCZ,QHB,QHP,QHUM,                  /SYSTD/  2
     1                 QDHUM,TCMIN,THMAX,QLSUM,QPSUM,CFM,CFMH,CFMC,             /SYSTD/  3
     2                 RCFM,ECFM,CINF,FON,HON,CON,BON,SCONS(3),PH,PC,           /SYSTD/  4
     3                 SKW,FANKW,unused1,WR,WM,WCOIL,WW,PO,D,                   -046f    1
     4                 FTEMP,TCR,QHR,RfanPumpKW,SGAS,SKWQH,SKWQC,QCLAT,         -131    23
     5                 SFKW,RFKW,FONNGT,WSURF,RWalkinQ,TSURF,TRh,               -131    24
     6                 CBF,CBF1,CBF2,EON,PLRCFM,PLRC,PLRH,QCM1,                 /SYSTD/  8
     7                 QCM2,QHM1,EIRM1,EIRM2,EIR,OFKW,QCT,QCS,                  /SYSTD/  9
     8                 WRMAX,WRMIN,CFMRAT,QdistG,QdistL,RON,QHT,                /SYSTD/ 10
     9                 TPOMIN,POMIN,QHSUP,QRSENS,QRLAT,QRREC,QRREJ,             /SYSTD/ 11
     1                 RCOMKW,RDEFKW,RAUXKW,ECFMP,CFMIN,CINFP,DT,DW,            /SYSTD/ 12
     2                 EWB,IC,NATTSP,Q,RETR,SLOAD,QLSUMP,T,TCHUM,TEND,          /SYSTD/ 13
     3                 TS,hgbmin,HPDefE,EconoOnly,TDuctEnv,                     -044e1   1
     4                 QCUNMT,CapRh,CapRph,CapRc                                HVAC25   3
      REAL             SYSTD(113)                                               HVAC19  13
      EQUIVALENCE      (SYSTD(1),TH)                                            RemPA   65
      COMMON  /TIME  / IDOY, IYR, IMO, IDAY, IHR,                               Time     4
     &                 ISCMO, ISCDAY, ISCHR, IDOW, ISCDOW, iDSdates(6),         -044e5   1
     &                 iTimeFlg, iDSFlg, iDDFlg, InitialFlg, LeapYr,            Time     6
     &                 CLOCK(10), MONDSC(13), MONLEN(12), MONSDA(12)            HR      12
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
      COMMON  /ZONED / EXCFM,FH,FC,CFMZ,QHBZ,QOVER,THZ,TCZ,ERMAX,ERMIN,         /ZONED/  2
     1                 TRY,FTD,CORINT,G0,G1,G2,G3,SIGMAG,TL,ZQHR,TAVE,          /ZONED/  3
     2                 ZQH,ZQC,FCHPS(15),ACFM,ZKW,TCMINZ,THMAXZ,                /ZONED/  4
     3                 ERMAXM,ERMINM,THR,CSSCND,CSSVEC,HENOW,QGWIN,             /ZONED/  5
     4                 QSNABT,QGOPWL,QGVEC,CFMCVT,SSFPT,CFMVNT,ZFANKW,          /ZONED/  6
     5                 ZKWCBT,ZKWHBT,ZCapRbbrd, XC,ZC,XH,ZH                     -044e2   7
      REAL ZONED(63)                                                            -044e2   8
      EQUIVALENCE (ZONED(1),EXCFM)                                              /ZONED/  9
      COMMON  /FZZZ5/   INDMOD , FRAC  , CFMAX, QO, TO, R                       /FZZZ5/  2
c                                                                               SZCI    20
      COMMON  /LENS/   MWFLEN, MRLEN, MSHLEN, MWNLEN, MDRLEN, MXLEN,            /LENS/   2
     1                 MULEN, MZLEN, MIWLEN, MFLLEN,                            /LENS/   3
     2                 LMTB, LLDSOU, MSTLEN, LSTFT, MWLLEN                      /LENS/   4
      COMMON  /PTRBGN/ IWFB, IWPB, ICONSB, IGTB, IWLB, IGEOB, ISHADB,           /PTRBGN/ 2
     &                 IWINB, IDRB, IEWB, IUGB, ISPB, IIWPB, IIWB,              /PTRBGN/ 3
     &                 IFLB, ISPCDB, IOTHB, ILHB, IZQCMB, ISSHDB,               /PTRBGN/ 4
     &                 IOHFIB, IZLSK, IZLSL, ISTFB, ILSSH                       PV2      1
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     /PNTRS/  3
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        /PNTRS/  4
      COMMON  /SIZE/   LENGTH,NWF,NWPAR,NCONS,NGT,NWL,NGEO,                     /SIZE/   2
     1                 NGSHAD, NWIN, NDOOR, NEW, NUG, NSPl, NIWP, NIW,          /SIZE/   3
     &                 NFL, NBR, NOTH, NITH, NOPSRF,                            /SIZE/   4
     &                 NSURF, NSSHD, NSHTOT, NEWshade                           /SIZE/   5
c              If we are in a VAV system there is the possibiltiy that          SZCI    21
c              the zones can ask for more air than the fan can supply.          SZCI    22
c              This condition was checked for in DKTEMP, and the ratio          SZCI    23
c              of what the zones may ask for vs. the supply capacity is         SZCI    24
c              stored in CFMRAT.                                                SZCI    25
c                                                                               SZCI    26
C              SINCE THESE UNITS CAN HAVE REHEAT COILS WE MUST                  SZCI    27
C              SAVE HON AND RESET IT FOR THE ZONE LOOP BASED ON                 SZCI    28
C              WETHER HEAT IS POSSILBE                                          SZCI    29
      HONS   = HON                                                              SZCI    30
c              set circulation loop restrictions on heating and                 HVAC1  704
c              cooling capacity for use in DKTEMP.                              HVAC1  705
      IF (<HW-LOOP> .NE. 0)  THEN                                               HVAC1  706
c              heating coil is hot water - pointer to loop                      HVAC1  707
        JLP   = <HW-LOOP>                                                       HVAC1  708
        CapRh = <lp;HCAP_RATIO>                                                 HVAC16 144
      ELSE                                                                      HVAC1  710
        CapRh = 1.0                                                             HVAC1  711
      ENDIF                                                                     HVAC1  712
      IF (<PHW-LOOP> .NE. 0)  THEN                                              HVAC1  713
c              preheat coil is hot water - pointer to loop                      HVAC1  714
        JLP    = <PHW-LOOP>                                                     HVAC1  715
        CapRph = <lp;HCAP_RATIO>                                                HVAC16 145
      ELSE                                                                      HVAC1  717
        CapRph = 1.0                                                            HVAC1  718
      ENDIF                                                                     HVAC1  719
      IF (<CHW-LOOP> .NE. 0)  THEN                                              HVAC1  720
c              cooling coil is water - pointer to loop                          HVAC1  721
        JLP   = <CHW-LOOP>                                                      HVAC1  722
        CapRc = <lp;CCAP_RATIO>                                                 HVAC16 146
      ELSE                                                                      HVAC1  724
        CapRc = 1.0                                                             HVAC1  725
      ENDIF                                                                     HVAC1  726
c              DKTEMP calcs the supply temps                                    HVAC1  727
      CALL DKTEMP                                                               SZCI    32
C              SET ZP1 TO POINT TO THE FIRST ZONE ON THE SYSTEM                 SZCI    33
      ZP1    = ISZ                                                              SZCI    34
      <DCVOAcfmS> = 0.0                                                         -044c  658
      <DCVOAcfmFracCrit> = 0.0                                                  -044c  659
C********************** run function : SZCI-0 **********************            SZCI    35
      IF( MSYSF(72) .NE. 0 )   CALL  FINTS( MSYSF(72), 0. )                     SZCI    36
C*******************************************************************            SZCI    37
C                                                                               SZCI    38
C              LOOP THROUGH THE ZONE ON THIS SYSTEM                             SZCI    39
C                                                                               SZCI    40
      DO 50 NZ=1,NSZ                                                            SZCI    41
C              ZERO THE ZONE DATA COMMON BLOCK                                  SZCI    42
      DO 111 I=1,63                                                             -044e2 159
  111 ZONED(I) = 0.0                                                            SZCI    44
      ZP2    = <ZP2>                                                            SZCI    45
      <ERMAX> = 0.0                                                             SZCI    46
      <ERMIN> = 0.0                                                             SZCI    47
c              if exhaust made up by infiltration                               -046   289
      IF (<EXHAUST-SOURCE> .eq. 2  .or.                                         -047b   34
     &    <EXHAUST-SOURCE> .eq. 3)  Call ZoneExhaust(9, xx)  ! power            -047b   35
C              IF FAN ARE ON AND THIS IS A PLENUM SKIP                          SZCI    48
      IF((FON .NE. 0.) .AND. (<ZONE-TYPE> .EQ. 3))  GO TO 35                    SZCI    49
      ZMULT  = <MULTIPLIER>                                                     SZCI    50
C              EXCFM WILL BE THE ZONE EXHAUST CFM                               SZCI    51
      EXCFM  = 0.                                                               SZCI    52
C              TL WILL BE THE TEMP OF AIR AFTER LIGHT HEAT IS ADDED             SZCI    53
      TL     = 0.                                                               SZCI    54
C              CFMZ IS THE MAIN CFM FOR THIS ZONE                               SZCI    55
      CFMZ   = 0.                                                               SZCI    56
C              ZQH IS THE ZONE REHEAT COIL ENERGY                               SZCI    57
      ZQH    = 0.                                                               SZCI    58
C              ZQHR IS THE PART OF ZQH WHICH NEGATES THE                        SZCI    59
C              COLD AIR FROM CENTRAL FAN                                        SZCI    60
      ZQHR   = 0.                                                               SZCI    61
C              SEE IF ANY HEATING IS POSSIBLE                                   SZCI    62
      ZHON   = 0.0                                                              SZCI    63
C              SKIP UNNEEDED CALCS                                              SZCI    64
      IF((FON .EQ. 0.0) .OR. (<ZONE-TYPE> .NE. 1))  GOTO 5                      SZCI    65
      IF(<REHEAT-DELTA-T> .GT. 0.0)  ZHON = HONS                                SZCI    66
      IF((<BASEBOARD-CTRL>.EQ.1).AND.(<BASEBOARD-RATING>.LT.0.0))               SZCI    67
     1    ZHON = HONS                                                           SZCI    68
      HON    = ZHON                                                             SZCI    69
c              Set reheat coil hourly available capacity ratio                  -044b  120
      IF(<HEATCAPZ> .LT. 0.0) THEN                                              -044b  121
        IF (<HW-LOOPZ> .NE. 0)  THEN                                            -044b  122
c              set hot water circulation loop restrictions                      -044b  123
C              on zonal heating capacity                                        -044b  124
          JLP    = <HW-LOOPZ>                                                   -044b  125
          ZCapRh = <lp;HCAP_RATIO>                                              -044b  126
        ELSE                                                                    -044b  127
C              Not hot water - no on zonal heating restriction                  -044b  128
          ZCapRh = 1.0                                                          -044b  129
        ENDIF                                                                   -044b  130
      ELSE                                                                      -044b  131
C              no coil so no zonal heating capacity                             -044b  132
        ZCapRh = 0.0                                                            -044b  133
      ENDIF                                                                     -044b  134
                                                                                -044e  485
c              Exhaust airflow w/o cycling                                      -044e  486
      IF (<EXHAUST-SOURCE> .eq. 1)           ! makeup by system OA              -046   291
     &  Call ZoneExhaust(1, <CFMAX>*CFMRAT)  ! set EXCFM                        -046   292
C                                                                               SZCI    70
C              EXTRACTION RATE CALCULATIONS                                     SZCI    71
C                                                                               SZCI    72
      TCMINZ = TC                                                               SZCI    73
      F      = <CFMAX>*CFMRAT - EXCFM                                           -044e  488
      IF(F .LE. 0.0)  F = <CFMAX>*CFMRAT                                        SZCI    75
      THMAXZ = (TC + (<TNOW>+<QP>/(CONS(1)*F)))/2.0                             SZCI    76
      XC      = CONS(1)*<CFMAX>*CFMRAT                                          -044e2 160
      <ERMAX> = XC * (<TNOW>-TCMINZ)                                            -044e2 161
      ZC      = XC                                                              -044e2 162
      ERMAXM  = ZC * (<TNOW>-THMAXZ)                                            -044e2 163
      ZH      = ZC                                                              -044e2 164
      ERMINM  = ERMAXM                                                          SZCI    79
      THMAXZ  = THMAXZ + <REHEAT-DELTA-T>*HON*ZCapRh                            HVAC1  736
      XH      = XC                                                              -044e2 165
      <ERMIN> = XH * (<TNOW>-THMAXZ)                                            -044e2 166
C              CALL ROUTINE TO CALC ZONE TEMP AND LOAD                          SZCI    82
    5 CALL TEMDEV(0)                                                            SZCI    83
C              IF FANS ARE OFF OR THIS IS A PLENUM SKIP                         SZCI    84
      IF(<ZONE-TYPE> .NE. 1)  GOTO 32                                           SZCI    85
      IF(FON .EQ. 0.)  GOTO 174                                                 SZCI    86
C              INCREMENT TOTAL EXHAUST CFM                                      -044e  489
      IF (<EXHAUST-SOURCE> .eq. 1)           ! makeup by system OA              -046   293
     &  Call ZoneExhaust(9, <CFMAX>*CFMRAT)  ! exhaust flow & power             -046   294
      ECFM = ECFM + EXCFM*ZMULT                                                 -044e  491
      TAVE   = (<TNOW>+<TPAST>)*0.5                                             SZCI    95
C                                                                               SZCI    96
C              SUBZONE CFM AND REHEAT LOAD CALCULATION                          SZCI    97
C                                                                               SZCI    98
C              SET ZONE CFM TO THE MAX                                          SZCI    99
      ZCFM   = <CFMAX>*CFMRAT                                                   SZCI   100
      IF(TAVE .LE. THZ+THR)  GOTO 9                                             SZCI   101
      IF(TAVE .GE. TCZ-THR)  GOTO 10                                            SZCI   102
      CFMZ   = 0.5*ZCFM                                                         SZCI   103
      F      = CFMZ - EXCFM                                                     SZCI   104
      IF(F .LE. 0.0)  F = ZCFM                                                  SZCI   105
      TL     = TAVE + <QLIGHTRETURN>/(CONS(1) * F)                              SZCI   106
      R      = 0.5                                                              SZCI   107
      GOTO 30                                                                   SZCI   108
    9 CONTINUE                                                                  SZCI   109
C                                                                               SZCI   110
C              HEATING MODE                                                     SZCI   111
C                                                                               SZCI   112
C              IF NOT HEATING SKIP                                              SZCI   113
C              CALC RETURN AIR TEMP                                             SZCI   114
      F      = ZCFM - EXCFM                                                     SZCI   115
      IF(F .LE. 0.0)  F = ZCFM                                                  SZCI   116
      TL     = TAVE + <QLIGHTRETURN>/(CONS(1) * F)                              SZCI   117
C              CALC SETPOINT FOR ROOM                                           SZCI   118
      TSET   = TAVE                                                             SZCI   119
C              CALC ENERGY TO HEAT SUPPLY TO THE SETPOINT                       SZCI   120
C              ASSUME MAXIMUM INDUCTION                                         SZCI   121
      ZQHR   = CONS(1)*ZCFM*(.5*(TL+TC)-TSET)                                   SZCI   122
C              CALC TOTAL ZONE REHEAT COIL ENERGY                               SZCI   123
      ZQH    = AMIN1(0.0,<QNOW>+ZQHR)                                           SZCI   124
      R      = 0.5                                                              SZCI   125
C              SET CFM FOR ZONE TO MINIMUM                                      SZCI   126
      CFMZ   = .5*ZCFM                                                          SZCI   127
      GOTO 25                                                                   SZCI   128
   10 CONTINUE                                                                  SZCI   129
C                                                                               SZCI   130
C              COOLING MODE CALCULATION                                         SZCI   131
C                                                                               SZCI   132
C              FIRST TRY TO HANDLE LOAD WITH MIN CFM MAX INDUC                  SZCI   133
C              CALC RETURN AIR TEMP FOR ZONE                                    SZCI   134
      F      = ZCFM - EXCFM                                                     SZCI   135
      IF(F .LE. 0.0)  F = ZCFM                                                  SZCI   136
      TL     = TAVE + <QLIGHTRETURN>/(CONS(1) * F)                              SZCI   137
C              CALC MAX LOAD THAT CAN BE HANDLED AT THIS COND                   SZCI   138
      QRED   = CONS(1)*ZCFM*(TAVE-0.5*(TL+TC))                                  SZCI   139
C              IF ZONE LOAD IS GREATER SKIP                                     SZCI   140
      IF(<QNOW> .GE. QRED) GOTO 15                                              SZCI   141
      R      = 0.5                                                              SZCI   142
C              SET CFM TO MIN                                                   SZCI   143
      CFMZ   = .5*ZCFM                                                          SZCI   144
      GOTO 25                                                                   SZCI   145
   15 CONTINUE                                                                  SZCI   146
C              FIND RATIO OF INDUCED AIR NEEDED TO MEET THE LOAD                SZCI   147
      R      = ((<QNOW>/(CONS(1)*ZCFM)) + (TC-TAVE)) /                          SZCI   148
     1    (TC-TL)                                                               SZCI   149
C              MAKE SURE RATIO BETWEEN ZERO AND MAX                             SZCI   150
      R      = AMIN1(R,.5)                                                      SZCI   151
      R      = AMAX1(0.,R)                                                      SZCI   152
C              CALC ZONE SUPPLY CFM                                             SZCI   153
      CFMZ   = (1.0-R)*ZCFM                                                     SZCI   154
   25 CONTINUE                                                                  SZCI   155
C              CHECK IF REHEAT IS DONE BY BASEBOARDS                            SZCI   156
      IF((<BASEBOARD-RATING>.GE.0.0).OR.(<BASEBOARD-CTRL>.NE.1))                SZCI   157
     1      GOTO 30                                                             SZCI   158
      IF(ZHON .EQ. 0.0)  GO TO 30                                               SZCI   159
      Q      = AMAX1(<BASEBOARD-RATING>*ZCapRbbrd-QHBZ,ZQH)                     -044e  492
      ZQH    = ZQH - Q                                                          SZCI   161
      QHBZ   = QHBZ + Q                                                         SZCI   162
      QHB    = QHB + Q*ZMULT                                                    SZCI   163
   30 CONTINUE                                                                  SZCI   164
C              IF THE ZONE COILS CANNOT BE SOLAR SUPPLIED SKIP                  SZCI   165
      IF(<ZONE-HEAT-SOURCE> .GE. 0)  GOTO 174                                   SZCI   166
C              KEEP A SUM OF THE LOADS, TEMPS AND CFM FOR THE SOLAR EQ          SZCI   167
      QHZP   = QHZP + ZQH*ZMULT                                                 SZCI   168
      TZP    = TZP + (TL*R+TC*(1.0-R))*CFMZ*ZMULT                               SZCI   169
      CFMZP  = CFMZP + CFMZ*ZMULT                                               SZCI   170
  174 CONTINUE                                                                  SZCI   171
C              IF ZONE COILS ARE ELECTRIC                                       SZCI   172
      IF (<ZONE-HEAT-SOURCE>.EQ.1)  THEN                                        SZCI   173
        X      = ZQH*KWBTU                                                      SZCI   174
        ZKW    = ZKW    - X                                                     SZCI   175
        SKWQH  = SKWQH  - X*ZMULT                                               SZCI   176
        JEM       = <HEAT-E-MZ>                                                 HVAC6  797
        <HEAT-EM> = <HEAT-EM> - X*ZMULT                                         HVAC6  798
      ENDIF                                                                     SZCI   178
C              CHECK FOR FURNACE                                                SZCI   179
      IF((<ZONE-HEAT-SOURCE>.EQ.2).OR.(<ZONE-HEAT-SOURCE>.EQ.3))  THEN          HVAC6  799
        CALL FURNAC(ZQH,<HEATCAPZ>,<ZONE-HEAT-SOURCE>,ZMULT)                    HVAC6  800
        JEM       = <AUX-E-MZ>                                                  HVAC6  801
        <AUX-EM>  = <AUX-EM> + FurnAuxkW                                        HVAC6  802
        JFM       = <HEAT-F-MZ>                                                 HVAC6  803
        <HEAT-FM> = <HEAT-FM> - FFUEL                                           HVAC6  804
        <AUX-FM>  = <AUX-FM>  + FurnAuxFuel                                     HVAC6  805
      ENDIF                                                                     HVAC6  806
C              IF BASEBOARDS ARE ELECTRIC                                       SZCI   182
      IF (<BASEBOARD-SOURCE>.EQ.1)  THEN                                        SZCI   183
        X      = QHBZ*KWBTU                                                     SZCI   184
        ZKW    = ZKW    - X                                                     SZCI   185
        SKWQH  = SKWQH  - X*ZMULT                                               SZCI   186
        JEM       = <HEAT-E-MZ>                                                 HVAC6  807
        <HEAT-EM> = <HEAT-EM> - X*ZMULT                                         HVAC6  808
      ENDIF                                                                     SZCI   188
C              IF BASEBOARDS ARE GAS OR OIL                                     SZCI   189
      IF((<BASEBOARD-SOURCE>.EQ.2).OR.(<BASEBOARD-SOURCE>.EQ.3))  THEN          HVAC6  809
        CALL FURNAC(QHBZ,<BASEBOARD-RATING>,<BASEBOARD-SOURCE>,ZMULT)           HVAC6  810
        JEM       = <AUX-E-MZ>                                                  HVAC6  811
        <AUX-EM>  = <AUX-EM> + FurnAuxkW                                        HVAC6  812
        JFM       = <HEAT-F-MZ>                                                 HVAC6  813
        <HEAT-FM> = <HEAT-FM> - FFUEL                                           HVAC6  814
        <AUX-FM>  = <AUX-FM>  + FurnAuxFuel                                     HVAC6  815
      ENDIF                                                                     HVAC6  816
C              CALC RETURN AIR RATIO                                            SZCI   193
      RETR   = 1.                                                               SZCI   194
      IF(CFMZ .GT. 0.)  RETR = (1.0-EXCFM/CFMZ)                                 SZCI   195
C              INCREMENT TR BY WEIGHTED ZONE TEMP                               SZCI   202
      TR     = TR + TL*(CFMZ-EXCFM)*ZMULT                                       SZCI   203
C              INCREMENT TOTAL SYSTEM CFM                                       SZCI   204
C********************** run function : SZCI-1Z *********************            SZCI   205
      IF( MSYSF(73) .NE. 0 )   CALL  FINTS( MSYSF(73), 1. )                     SZCI   206
C*******************************************************************            SZCI   207
c                                                                               HVAC1  737
c              save zonal coil flows and loads for circulation loop calcs       HVAC1  738
      <COIL_CFMZ>   = CFMZ                                                      HVAC1  739
      <COIL_EDBZ>   = TC                                                        HVAC1  740
      <COIL_EWBZ>   = <CL_COIL_LWB>                                             HVAC1  741
      <COIL_CYCLEZ> = 1.                                                        HVAC1  742
      <COIL_QZ>     = ZQH                                                       HVAC1  743
      <BBRD_EDB>    = TAVE                                                      HVAC1  744
      <BBRD_Q>      = QHBZ                                                      HVAC1  745
      CFM    = CFM + CFMZ*ZMULT                                                 SZCI   208
C              INCREMENT TOTAL ZONE HEAT COIL LOAD                              SZCI   209
      QHZ    = QHZ + ZQH*ZMULT                                                  SZCI   210
C              INCREMENT TOTAL SYSTEM INFILTRATION CFM                          SZCI   213
      CINF   = CINF + <CFMINF>*RETR*ZMULT                                       SZCI   214
C              INREMENT TOTAL SYSTEM LATENT LOAD                                SZCI   215
      QLSUM  = QLSUM + <QL>*RETR*ZMULT                                          SZCI   216
C              DCV - Calculate zone Occupancy based vent CFM and fraction       -044c  660
      IF((<MIN-OA-METHOD>.LT.0) .AND. (CFMZ .GT. 0.))  THEN                     -044c  661
        MZ = ISPB + (<NZSPACE>-1)*MZLEN                                         -044c  662
        <DCVOAcfmZ> = SchVal(<PEOPLE-SCHEDULE>, 1.)                             -045b  158
     &              * <ZPPLNO> * <OA-CFM/PER>                                   -045b  159
        IF(<MIN-OA-METHOD>.EQ.-1) <DCVOAcfmZ> = RETR*<DCVOAcfmZ>                -044c  664
        XX = <OUTSIDE-AIR-CFM>                                                  -044c  665
        IF(XX .EQ. 0.)                                                          -044c  666
     $     XX = AMAX1(<OA-FLOW/AREA>*<AREA>,<OA-CHANGES>*<VOLUME>/60.)          -044c  667
        <DCVOAcfmZ> = AMAX1(<DCVOAcfmZ>,XX)                                     -044c  668
        <DCVOAcfmFrac> = AMIN1(1.,<DCVOAcfmZ>/CFMZ)                             -044c  669
        <DCVOAcfmS> = <DCVOAcfmS> + <DCVOAcfmZ>*ZMULT                           -044c  670
        <DCVOAcfmFracCrit> = AMAX1(<DCVOAcfmFracCrit>,<DCVOAcfmFrac>)           -044c  671
      ELSE                                                                      -044c  672
        <DCVOAcfmZ> = 0.0                                                       -044c  673
        <DCVOAcfmFrac> = 0.0                                                    -044c  674
      ENDIF                                                                     -044c  675
C              INCREMENT TOTAL SYSTEM KW                                        SZCI   217
   32 CONTINUE                                                                  SZCI   218
      IF (<ZONE-TYPE>.EQ.3) GO TO 35                                            SZCI   219
      ZKW = ZKW + <ZKW>                                                         SZCI   220
      <SKW>  = <SKW> + ZKW*ZMULT                                                SZCI   221
C              SUM END-USE VARIABLES FOR THIS ZONE                              SZCI   222
C              IF REP-BLOCK BUFF AND HOURLY-REP SCHED FILL BUFF                 SZCI   224
      IF((<IZNBUFP>.NE.0).AND.(IRSCH.NE.0))  CALL USERZR( ZP1,ZP2 )             SZCI   225
      IF(IRPZON .NE. 0)  CALL RPTZON                                            SZCI   226
C              INCREMENT ZP1 TO POINT TO NEXT ZONE                              SZCI   227
   35 ZP1    = ZP1 + NZD                                                        SZCI   228
   50 CONTINUE                                                                  SZCI   229
C                                                                               SZCI   230
C              CALCULATE TOTAL SYSTEM LOADS                                     SZCI   231
C                                                                               SZCI   232
C              CALC RETURN AIR CFM                                              SZCI   233
      RCFM   = AMAX1(0.0,CFM-ECFM)                                              SZCI   234
C              CALC RETURN AIR TEMP                                             SZCI   235
      TR     = TR/(RCFM+.01)                                                    SZCI   236
C              SET SUPPLY AIR TEMP                                              SZCI   237
C              RESTORE HON                                                      SZCI   238
      HON    = HONS                                                             SZCI   239
C              GET TOTAL EXHAUST CFM AND LATENT GAIN FROM PLENUMS               SZCI   240
      QLSUMP = 0.                                                               SZCI   241
      CINFP = 0.                                                                SZCI   242
      Nplen = <NumPlenZONES>                                                    HVAC2  243
      IF (Nplen .EQ. 0)  GOTO 52                                                HVAC2  244
      DO 51  NZ=1,Nplen                                                         HVAC2  245
c              pick up the pointer to the plenum                                HVAC2  246
      ZP1    = <ISZONES-plenum> + (NZ-1)*NZD                                    HVAC2  247
      ZP2 = <ZP2>                                                               SZCI   246
      IF (<EXHAUST-SOURCE> .eq. 1) THEN      ! makeup by system OA              -046   295
        CFMplen = RCFM * <AREA>/<PLENMULT>                                      -046   296
        Call ZoneExhaust(1, CFMplen)         ! set EXCFM                        -046   297
      ELSE                                                                      -046   298
        EXCFM = 0.                                                              -046   299
      ENDIF                                                                     -046   300
      ECFMP = ECFMP + EXCFM*<MULTIPLIER>                                        SZCI   248
      RETRP = 1. - EXCFM*<PLENMULT>/(<AREA>*(RCFM+1.E-6))                       SZCI   249
      QLSUMP = QLSUMP + <QL>*<MULTIPLIER>*RETRP                                 SZCI   250
      CINFP = CINFP + <CFMINF>*<MULTIPLIER>*RETRP                               SZCI   251
   51 CONTINUE                                                                  SZCI   252
   52 CONTINUE                                                                  HVAC2  248
C              ADJUST QLSUM AND CINF FOR PLENUM EFFECTS                         SZCI   253
      RETRP = 1. - ECFMP/(RCFM+1.E-6)                                           SZCI   254
      QLSUM = QLSUM*RETRP + QLSUMP                                              SZCI   255
      CINF = CINF*RETRP + CINFP                                                 SZCI   256
C              ADD PLENUM EXH TO ZONE EXH FOR USE IN SDSF                       SZCI   257
      ECFM = ECFM + AMIN1(ECFMP,RCFM)                                           SZCI   258
C              CALL ROUTINE TO CALC AIR-HANDLER COIL LOADS                      SZCI   259
      CALL SDSF                                                                 SZCI   260
C              RECAL RETURN CFM ACCOUNTING FOR PLEN EXH (FOR USE IN HREP)       SZCI   261
      RCFM = CFM - ECFM                                                         SZCI   262
C              IF THE MAIN HEAT SOURCE CAN NOT BE SOLAR SKIP                    SZCI   263
      IF(<HEAT-SOURCE> .GE. 0)  GOTO 171                                        SZCI   264
C              KEEP A SUM OF THE MAIN COIL LOADS THAT CAN BE SOLAR ASSIS        SZCI   265
      QHMP   = QHMP + QH                                                        SZCI   266
C              THE MIX AIR INTO THE COIL MUST BE WEIGHTED BY THE CFM            SZCI   267
      TMP    = TMP + TM*CFM                                                     SZCI   268
C              ASLO SUM THE CFM                                                 SZCI   269
      CFMP   = CFMP + CFM                                                       SZCI   270
C              IF THE PREHEAT COILS CAN NOT BE SOLAR SKIP                       SZCI   271
  171 IF(<PREHEAT-SOURCE> .GE. 0)  GOTO 172                                     SZCI   272
C              SAVE THE LOADS AND CFM                                           SZCI   273
      QHPP   = QHPP + QHP                                                       SZCI   274
      CFMPP  = CFMPP + PO*CFM                                                   SZCI   275
C              IF THE BASEBOARDS ARE NOT SOLAR SKIP                             SZCI   276
  172 IF(<BASEBOARD-SOURCE> .GE. 0)  GOTO 173                                   SZCI   277
C              SAVE THE LOAD                                                    SZCI   278
      QHBP   = QHBP + QHB                                                       SZCI   279
  173 CONTINUE                                                                  SZCI   280
C              TOTAL LOADS ARE SUM OF CENTRAL AND ZONE LOADS                    SZCI   281
      IF(<ZONE-HEAT-SOURCE> .LE. 0)  <QH> = QHZ                                 SZCI   282
      QC     = QC + QCZ                                                         SZCI   283
C********************** run function : SZCI-2 **********************            SZCI   284
      IF( MSYSF(74) .NE. 0 )   CALL  FINTS( MSYSF(74), 2. )                     SZCI   285
C*******************************************************************            SZCI   286
      RETURN                                                                    SZCI   287
      END                                                                       SZCI   288
      FUNCTION TABLE3(N1,N2,N3,XP1,XP2,XP3,YP,X1,X2,X3)                         TABLE3   2
      DIMENSION XP1(N1,N2,N3), XP2(N2,N3), XP3(N3), YP(N1,N2,N3)                TABLE3   3
      IX3 = INDX(N3,XP3,X3)                                                     TABLE3   4
      Y3 = TABLE2(N1,N2,XP1(1,1,IX3),XP2(1,IX3),YP(1,1,IX3),X1,X2)              TABLE3   5
      Y3P1 = TABLE2(N1,N2,XP1(1,1,IX3+1),XP2(1,IX3+1),YP(1,1,IX3+1),            TABLE3   6
     1              X1,X2)                                                      TABLE3   7
      TABLE3 = FINTRP(X3,XP3(IX3),XP3(IX3+1),Y3,Y3P1)                           TABLE3   8
      RETURN                                                                    TABLE3   9
      END                                                                       TABLE3  10
      FUNCTION TABLE2(N1,N2,XP1,XP2,YP,X1,X2)                                   TABLE2   2
      DIMENSION XP1(N1,N2), XP2(N2), YP(N1,N2)                                  TABLE2   3
      IX2 = INDX(N2,XP2,X2)                                                     TABLE2   4
      Y2 = TABLE1(N1,XP1(1,IX2),YP(1,IX2),X1)                                   TABLE2   5
      Y2P1 = TABLE1(N1,XP1(1,IX2+1),YP(1,IX2+1),X1)                             TABLE2   6
      TABLE2 = FINTRP(X2,XP2(IX2),XP2(IX2+1),Y2,Y2P1)                           TABLE2   7
C     PRINT 999,N1,N2,IX2,X1,X2,XP1(1,IX2),XP1(1,IX2+1),YP(1,IX2),              TABLE2   8
C    1          YP(1,IX2+1)                                                     TABLE2   9
  999 FORMAT(' TABLE2   N1='I2'  N2='I2'  IX2='I2'  X1='F12.5                   TABLE2  10
     1 /' X2='F12.5'  XP1='F12.5'  XP1='F12.5'  YP='F12.5'  YP='F12.5)          TABLE2  11
      RETURN                                                                    TABLE2  12
      END                                                                       TABLE2  13
      FUNCTION TABLE1(N,XP,YP,X)                                                TABLE1   2
      DIMENSION XP(N), YP(N)                                                    TABLE1   3
      IX = INDX(N,XP,X)                                                         TABLE1   4
      TABLE1 = FINTRP(X,XP(IX),XP(IX+1),YP(IX),YP(IX+1))                        TABLE1   5
C     PRINT 999,N,X,(XP(I),I=1,N),(YP(I),I=1,N)                                 TABLE1   6
  999 FORMAT(/' TABLE1   N='I2'  X='F12.5/(6F12.5))                             TABLE1   7
      RETURN                                                                    TABLE1   8
      END                                                                       TABLE1   9
      SUBROUTINE TDVPIU                                                         TDVPIU   2
C                                                                               TDVPIU   3
C              DO TEMPERATURE AND EXTRACTION RATE CALCULATIONS FOR              TDVPIU   4
C              PIU SYSTEMS                                                      TDVPIU   5
C                                                                               TDVPIU   6
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                 IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                        /FILES/  3
     2               , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                   /FILES/  4
     3                 IHRREP(3), IHRPAS(2)                                     /FILES/  5
      common  /FNSYS/  ISKIPS, MSYSF(120)                                       /FNSYS/  2
      COMMON  /HRREP / Irb, Ihrp, Lrb, Lhrp, Nrb, Nhrp, IVTLIM(3,50),           HR       5
     &                 IGRPtr, IBRPtr, IRSch, IRSchT(5),                        HR       6
     &                 NHRTyp(3), ITBUF(3), ITBUFB(3), ITBUFE(3),               HR       7
     &                 IHREOF, ICDFLG                                           HR       8
      COMMON  /MISCD / TEMPS(4,9999),CONS(5),TEMPSL(9999),                      -048a   10
     1                 BLDGQH,BLDGQC,BLDGQL,BLDGP,BPMULT,                       /MISCD/  3
     $                 DBTMIN,DBTMAX,WMIN,WMAX,NSPZ(9999),                      -048a   11
     3                 DQ, DTP, DTR, DTS, FPI, PLRCC , POM, TC2, TDM,           /MISCD/  5
     4                 TRA,WCOL,WCOLM,WMM,YPI,KWBTU,BTUKW,UNFILD,Unusedm        RemPA   45
      REAL             KWBTU                                                    /MISCD/  7
      COMMON  /PIUDAT/ ERFON,ERFOFF,TFZ,ZFONLY,IBF,BBR,MSTEMP,F,                -044e2   1
     &                 CFMIND,CFMI,FRACIAZ,HONS,RCFMI,RCFMMI,RCFMTX,            -044e2   2
     &                 TIAZ,TIC,TIH,ZCFMT,ZQHSMN,TEND1,TEND2,TRY2,F2,           -044e2   3
     &                 FNSZHP,MAXSTZ                                            -044e2   4
      DIMENSION        ZDPIU(8)                                                 -044e2   5
      EQUIVALENCE     (ZDPIU(1),ERFON)                                          -044e2   6
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      COMMON  /REPORT/ IREPRT(4,37),IPRG,IUNIQV(100),IUNIQS(100),IUNIQL         HVAC14   4
      COMMON  /SYSTD / TH,TC,TM,TR,QH,QC,QHZ,QCZ,QHB,QHP,QHUM,                  /SYSTD/  2
     1                 QDHUM,TCMIN,THMAX,QLSUM,QPSUM,CFM,CFMH,CFMC,             /SYSTD/  3
     2                 RCFM,ECFM,CINF,FON,HON,CON,BON,SCONS(3),PH,PC,           /SYSTD/  4
     3                 SKW,FANKW,unused1,WR,WM,WCOIL,WW,PO,D,                   -046f    1
     4                 FTEMP,TCR,QHR,RfanPumpKW,SGAS,SKWQH,SKWQC,QCLAT,         -131    23
     5                 SFKW,RFKW,FONNGT,WSURF,RWalkinQ,TSURF,TRh,               -131    24
     6                 CBF,CBF1,CBF2,EON,PLRCFM,PLRC,PLRH,QCM1,                 /SYSTD/  8
     7                 QCM2,QHM1,EIRM1,EIRM2,EIR,OFKW,QCT,QCS,                  /SYSTD/  9
     8                 WRMAX,WRMIN,CFMRAT,QdistG,QdistL,RON,QHT,                /SYSTD/ 10
     9                 TPOMIN,POMIN,QHSUP,QRSENS,QRLAT,QRREC,QRREJ,             /SYSTD/ 11
     1                 RCOMKW,RDEFKW,RAUXKW,ECFMP,CFMIN,CINFP,DT,DW,            /SYSTD/ 12
     2                 EWB,IC,NATTSP,Q,RETR,SLOAD,QLSUMP,T,TCHUM,TEND,          /SYSTD/ 13
     3                 TS,hgbmin,HPDefE,EconoOnly,TDuctEnv,                     -044e1   1
     4                 QCUNMT,CapRh,CapRph,CapRc                                HVAC25   3
      REAL             SYSTD(113)                                               HVAC19  13
      EQUIVALENCE      (SYSTD(1),TH)                                            RemPA   65
      COMMON  /TIME  / IDOY, IYR, IMO, IDAY, IHR,                               Time     4
     &                 ISCMO, ISCDAY, ISCHR, IDOW, ISCDOW, iDSdates(6),         -044e5   1
     &                 iTimeFlg, iDSFlg, iDDFlg, InitialFlg, LeapYr,            Time     6
     &                 CLOCK(10), MONDSC(13), MONLEN(12), MONSDA(12)            HR      12
      COMMON  /ZONED / EXCFM,FH,FC,CFMZ,QHBZ,QOVER,THZ,TCZ,ERMAX,ERMIN,         /ZONED/  2
     1                 TRY,FTD,CORINT,G0,G1,G2,G3,SIGMAG,TL,ZQHR,TAVE,          /ZONED/  3
     2                 ZQH,ZQC,FCHPS(15),ACFM,ZKW,TCMINZ,THMAXZ,                /ZONED/  4
     3                 ERMAXM,ERMINM,THR,CSSCND,CSSVEC,HENOW,QGWIN,             /ZONED/  5
     4                 QSNABT,QGOPWL,QGVEC,CFMCVT,SSFPT,CFMVNT,ZFANKW,          /ZONED/  6
     5                 ZKWCBT,ZKWHBT,ZCapRbbrd, XC,ZC,XH,ZH                     -044e2   7
      REAL ZONED(63)                                                            -044e2   8
      EQUIVALENCE (ZONED(1),EXCFM)                                              /ZONED/  9
C                                                                               TDVPIU  18
      IWHERE = 0                                                                TDVPIU  19
      F2 = 0.                                                                   TDVPIU  20
      TEND1 = 0.                                                                TDVPIU  21
      TEND2 = 0.                                                                TDVPIU  22
      FRAC = 0.                                                                 TDVPIU  23
      FRAC2 = 0.                                                                TDVPIU  24
      HE2 = 0.                                                                  TDVPIU  25
C********************** run function : TDVPIU-0 ********************            TDVPIU  26
      IF( MSYSF(75) .NE. 0 )   CALL  FINTS( MSYSF(75), 0. )                     TDVPIU  27
C*******************************************************************            TDVPIU  28
      IF (<BBRD-LOOPZ> .NE. 0)  THEN                                            HVAC12 245
c              zone baseboard coil is hot water - pointer to loop               HVAC12 246
        JLP    = <BBRD-LOOPZ>                                                   HVAC12 247
        ZCapRbbrd = <lp;HCAP_RATIO>                                             HVAC16 148
      ELSE                                                                      HVAC12 249
        ZCapRbbrd = 1.0                                                         HVAC12 250
      ENDIF                                                                     HVAC12 251
      IF ((FON .EQ. 0.) .AND. (ZFONLY .EQ. 1.))  GO TO 2000                     TDVPIU  29
C              PARALLEL PIU.  SYSTEM FANS ON.                                   TDVPIU  30
      IF (<ZFNLHR> .EQ. 0.)  GO TO 1000                                         TDVPIU  31
C              ZONE FANS WERE MOSTLY ON LAST HOUR                               TDVPIU  32
C              GET TEST ENDING TEMP. AT ERMINM EXTR. RATE                       TDVPIU  33
      TRY = (F-ERMINM)/G0                                                       TDVPIU  34
      IF (TRY .GE. THZ+THR)  GO TO 20                                           TDVPIU  35
C              IN HEATING BAND. DO THE USUAL CALCULATIONS                       TDVPIU  36
   10 ERMIN = <ERMIN>                                                           TDVPIU  37
      IF (<BASEBOARD-CTRL> .EQ. 1)  ERMIN = ERMIN +                             TDVPIU  38
     1  <BASEBOARD-RATING>*HON*ZCapRbbrd                                        HVAC12 252
      ERMAX = ERMINM                                                            TDVPIU  40
      HENOW = HE(ERMAX,ERMIN,THZ,F)                                             TDVPIU  41
      <TSET> = THZ                                                              TDVPIU  42
      HENOW = AMIN1(HENOW,ERMAX)                                                TDVPIU  43
      HENOW = AMAX1(HENOW,ERMIN)                                                TDVPIU  44
      <ZFONF> = 1.                                                              TDVPIU  45
      <ZFNLHR> = 1.                                                             TDVPIU  46
      IWHERE = 1                                                                TDVPIU  47
      GO TO 9000                                                                TDVPIU  48
   20 IF (TRY .GT. TCZ-THR)  GO TO 60                                           TDVPIU  49
C              IN DEADBAND                                                      TDVPIU  50
   30 IF (TRY .GT. TFZ)  GO TO 40                                               TDVPIU  51
C              BUT FAN WILL STAY ON                                             TDVPIU  52
      HENOW = ERMINM                                                            TDVPIU  53
      <TNEW> = TRY                                                              TDVPIU  54
      <QNEW> = HENOW                                                            TDVPIU  55
      <TSET> = THZ                                                              TDVPIU  56
      ERMAX = ERMINM                                                            TDVPIU  57
      ERMIN = ERMINM                                                            TDVPIU  58
      <ZFONF> = 1.                                                              TDVPIU  59
      <ZFNLHR> = 1.                                                             TDVPIU  60
      IWHERE = 2                                                                TDVPIU  61
      GO TO 9100                                                                TDVPIU  62
C              IN DEADBAND, BUT FAN MAY TURN OFF.  ASSUME STARTING              TDVPIU  63
C              TEMP. IS TFZ (INSTEAD OF <TNOW>) AND CALCULATE A NEW F           TDVPIU  64
   40 F2 = FF(TFZ)                                                              TDVPIU  65
C              CALCULATE TRIAL ENDING TEMPERATURES ASSUMING ZONE                TDVPIU  66
C              FAN JUST OFF AND JUST ON                                         TDVPIU  67
      TEND1 = (F2-ERFON)/G0                                                     TDVPIU  68
      TEND2 = (F2-ERFOFF)/G0                                                    TDVPIU  69
      FRAC = (TFZ-<TNOW>)/AMAX1(0.001,TRY-<TNOW>)                               TDVPIU  70
      IF (<TNOW> .GE. TFZ)  FRAC = 0.                                           TDVPIU  71
      IF ((TEND1 .GE. TFZ) .AND. (TEND2 .GE. TFZ))  GO TO 45                    TDVPIU  72
      IF ((TEND2 .LT. TFZ) .AND. (TEND1 .GE. TFZ))  GO TO 50                    TDVPIU  73
      IF ((TEND2 .LT. TFZ) .AND. (TEND1 .LT. TFZ))  GO TO 55                    TDVPIU  74
C              THE (SUPPOSEDLY) HIGHER EXTRACTION RATE HAS RESULTED IN          TDVPIU  75
C              A HIGHER TEMPERATURE                                             TDVPIU  76
      HENOW = ERMINM                                                            TDVPIU  77
      <TNEW> = TRY                                                              TDVPIU  78
      <QNEW> = HENOW                                                            TDVPIU  79
      <TSET> = THZ                                                              TDVPIU  80
      ERMAX = ERMINM                                                            TDVPIU  81
      ERMIN = ERMINM                                                            TDVPIU  82
      <ZFONF> = 1.                                                              TDVPIU  83
      <ZFNLHR> = 1.                                                             TDVPIU  84
      IWHERE = 3                                                                TDVPIU  85
      GO TO 9100                                                                TDVPIU  86
C              TEND1 AND TEND2 ARE GREATER THAN OR EQUAL TO TFZ.  FAN           TDVPIU  87
C              WILL SHUT OFF AND STAY OFF.                                      TDVPIU  88
   45 HENOW = FRAC*ERMINM + (1.-FRAC)*ERMAXM                                    TDVPIU  89
      ERMIN = ERMINM                                                            TDVPIU  90
      ERMAX = ERMAXM                                                            TDVPIU  91
      <TSET> = THZ                                                              TDVPIU  92
      <ZFONF> = FRAC                                                            TDVPIU  93
      <ZFNLHR> = 0.                                                             TDVPIU  94
      IF (<ZFONF> .GE. 0.5)  <ZFNLHR> = 1.                                      TDVPIU  95
      IWHERE = 4                                                                TDVPIU  96
      GO TO 9000                                                                TDVPIU  97
C              TEND2 LESS THAN TFZ, TEND1 GREATER THAN OR EQUAL TO              TDVPIU  98
C              TFZ.  FAN WILL CYCLE ON AND OFF.                                 TDVPIU  99
   50 HENOW = FRAC*ERMINM + (1.-FRAC)*(ERFON*(TFZ-TEND2)/(TEND1-TEND2)          TDVPIU 100
     1        + ERFOFF*(TEND1-TFZ)/(TEND1-TEND2))                               TDVPIU 101
      ERMIN = ERMINM                                                            TDVPIU 102
      ERMAX = ERMAXM                                                            TDVPIU 103
      <TSET> = THZ                                                              TDVPIU 104
      <ZFONF> = FRAC + (1.-FRAC)*(TFZ-TEND2)/(TEND1-TEND2)                      TDVPIU 105
      <ZFNLHR> = 0.                                                             TDVPIU 106
      IF (<ZFONF> .GE. 0.5)  <ZFNLHR> = 1.                                      TDVPIU 107
      IWHERE = 5                                                                TDVPIU 108
      GO TO 9000                                                                TDVPIU 109
C              TEND1 AND TEND2 LESS THAN TFZ                                    TDVPIU 110
   55 HENOW = FRAC*ERMINM + (1.-FRAC)*ERFON                                     TDVPIU 111
      ERMIN =ERMINM                                                             TDVPIU 112
      ERMAX = ERFON                                                             TDVPIU 113
      <TSET> = TFZ                                                              TDVPIU 114
      <ZFONF> = FRAC                                                            TDVPIU 115
      <ZFNLHR> = 0.                                                             TDVPIU 116
      IF (<ZFONF> .GE. 0.5)  <ZFNLHR> = 1.                                      TDVPIU 117
      IWHERE = 6                                                                TDVPIU 118
      GO TO 9000                                                                TDVPIU 119
C              COOLING BAND, FAN ON AT START OF HOUR                            TDVPIU 120
   60 IF (TFZ .GT. TCZ-THR)  GO TO 300                                          TDVPIU 121
C              FAN SETPOINT IN DEADBAND                                         TDVPIU 122
C              CALCULATE ENDING TEMPERATURE AT ERMAXM                           TDVPIU 123
      TRY2 = (F-ERMAXM)/G0                                                      TDVPIU 124
C              IF TRY2 IN DEADBAND GO DO DEADBAND STUFF                         TDVPIU 125
      IF (TRY2 .LE. TCZ-THR)  GO TO 30                                          TDVPIU 126
C              IN COOLING BAND, BUT TFZ IN DEADBAND                             TDVPIU 127
      F2 = FF(TFZ)                                                              TDVPIU 128
      HE2 = HE(<ERMAX>,ERMAXM,TCZ,F2)                                           TDVPIU 129
      FRAC = (TFZ-<TNOW>)/AMAX1(0.001,TRY-<TNOW>)                               TDVPIU 130
      IF (<TNOW> .GE. TFZ)  FRAC = 0.                                           TDVPIU 131
      HENOW = FRAC*ERMINM + (1.-FRAC)*HE2                                       TDVPIU 132
      ERMIN = ERMINM                                                            TDVPIU 133
      ERMAX = <ERMAX>                                                           TDVPIU 134
      <TSET> = TCZ                                                              TDVPIU 135
      <ZFONF> = FRAC                                                            TDVPIU 136
      <ZFNLHR> = 0.                                                             TDVPIU 137
      IF (<ZFONF> .GE. 0.5)  <ZFNLHR> = 1.                                      TDVPIU 138
      IWHERE = 7                                                                TDVPIU 139
      GO TO 9000                                                                TDVPIU 140
C              COOLING BAND.  TFZ IN COOLING BAND                               TDVPIU 141
  300 ERMAX = <ERMAX> - (ERFOFF-ERFON)                                          TDVPIU 142
      HENOW = HE(ERMAX,ERMAXM,TCZ,F)                                            TDVPIU 143
      TNOW = (F-HENOW)/G0                                                       TDVPIU 144
      IF (TNOW .GT. TFZ  .AND.  TNOW .NE. <TNOW>)  GO TO 400                    -044e5   9
C              FAN WILL STAY ON                                                 TDVPIU 146
      <TSET> = TCZ                                                              TDVPIU 147
      ERMIN = ERMAXM                                                            TDVPIU 148
      <ZFONF> = 1.                                                              TDVPIU 149
      <ZFNLHR> = 1.                                                             TDVPIU 150
      IWHERE = 8                                                                TDVPIU 151
      GO TO 9000                                                                TDVPIU 152
C              FAN WILL TURN OFF                                                TDVPIU 153
  400 F2 = FF(TFZ)                                                              TDVPIU 154
      ERMIN = ERMAXM + (ERFOFF-ERFON)                                           TDVPIU 155
      ERMAX = <ERMAX>                                                           TDVPIU 156
      HE2 = HE(ERMAX,ERMIN,TCZ,F2)                                              TDVPIU 157
      TNOW2 = (F2-HE2)/G0                                                       TDVPIU 158
      FRAC = (TFZ-<TNOW>)/(TNOW-<TNOW>)                                         TDVPIU 159
      IF (<TNOW> .GE. TFZ)  FRAC = 0.                                           TDVPIU 160
      <TSET> = TCZ                                                              TDVPIU 161
      IF (TNOW2 .LT. TFZ)  GO TO 420                                            TDVPIU 162
C              FAN WILL STAY OFF                                                TDVPIU 163
      HENOW = FRAC*HENOW + (1.-FRAC)*HE2                                        TDVPIU 164
      <ZFONF> = FRAC                                                            TDVPIU 165
                                                                                TDVPIU 166
      <ZFNLHR> = 0.                                                             TDVPIU 167
      IF (<ZFONF> .GE. 0.5)  <ZFNLHR> = 1.                                      TDVPIU 168
      IWHERE = 9                                                                TDVPIU 169
      GO TO 9000                                                                TDVPIU 170
C              FAN WILL CYCLE ON AND OFF                                        TDVPIU 171
  420 TEND1 = (F2-ERFON)/G0                                                     TDVPIU 172
      TEND2 = (F2-ERFOFF)/G0                                                    TDVPIU 173
      HENOW = FRAC*HENOW + (1.-FRAC)*(HE2*(TEND1-TFZ)/(TEND1-TEND2)             TDVPIU 174
     1        + HENOW*(TFZ-TEND2)/(TEND1-TEND2))                                TDVPIU 175
      <ZFONF> = FRAC + (1.-FRAC)*(TFZ-TEND2)/(TEND1-TEND2)                      TDVPIU 176
      <ZFNLHR> = 0.                                                             TDVPIU 177
      IF (<ZFONF> .GE. 0.5) <ZFNLHR> = 1.                                       TDVPIU 178
      IWHERE = 10                                                               TDVPIU 179
      GO TO 9000                                                                TDVPIU 180
C              FAN OFF AT START OF HOUR                                         TDVPIU 181
 1000 IF (TFZ .GT. TCZ-THR)  GO TO 1500                                         TDVPIU 182
C              FAN SETPOINT IS IN THE DEADBAND                                  TDVPIU 183
      TRY = (F-ERMAXM)/G0                                                       TDVPIU 184
      IF (TRY .LE. TCZ-THR)  GO TO 1050                                         TDVPIU 185
C              COOLING, NORMAL CALCULATION - FAN WILL STAY OFF                  TDVPIU 186
      <TSET> = TCZ                                                              TDVPIU 187
      ERMAX = <ERMAX>                                                           TDVPIU 188
      ERMIN = ERMAXM                                                            TDVPIU 189
      HENOW = HE(ERMAX,ERMIN,TCZ,F)                                             TDVPIU 190
      HENOW = AMIN1(HENOW,ERMAX)                                                TDVPIU 191
      HENOW = AMAX1(HENOW,ERMIN)                                                TDVPIU 192
      <ZFONF> = 0.                                                              TDVPIU 193
      <ZFNLHR> = 0.                                                             TDVPIU 194
      IWHERE = 11                                                               TDVPIU 195
      GO TO 9000                                                                TDVPIU 196
C              TRIAL TEMP. IS IN DEADBAND                                       TDVPIU 197
 1050 IF (TRY .LT. TFZ)  GO TO 1100                                             TDVPIU 198
C              BUT FAN WILL STAY OFF                                            TDVPIU 199
      HENOW = ERMAXM                                                            TDVPIU 200
      <TNEW> = TRY                                                              TDVPIU 201
      <QNEW> = HENOW                                                            TDVPIU 202
      <TSET> = THZ                                                              TDVPIU 203
      ERMAX = ERMAXM                                                            TDVPIU 204
      ERMIN = ERMAXM                                                            TDVPIU 205
      <ZFONF> = 0.                                                              TDVPIU 206
      <ZFNLHR> = 0.                                                             TDVPIU 207
      IWHERE = 12                                                               TDVPIU 208
      GO TO 9100                                                                TDVPIU 209
C         FAN WILL PROBABLY TURN ON                                             TDVPIU 210
 1100 IF (TRY .LT. THZ+THR)  GO TO 1200                                         TDVPIU 211
C         TEMPERATURE WILL STAY IN DEADBAND.                                    TDVPIU 212
C        CALCULATE A NEW F ASSUMING STARTING TEMPERATURE IS TFZ, NOT            TDVPIU 213
C        <TNOW>                                                                 TDVPIU 214
 1110 F2 = FF(TFZ)                                                              TDVPIU 215
C        CALCULATE ENDING TEMPERATURES ASSUMING FAN JUST ON AND                 TDVPIU 216
C        JUST OFF                                                               TDVPIU 217
      TEND1 = (F2-ERFON)/G0                                                     TDVPIU 218
      TEND2 = (F2-ERFOFF)/G0                                                    TDVPIU 219
      FRAC = (<TNOW>-TFZ)/(<TNOW>-TRY)                                          TDVPIU 220
      IF (<TNOW> .LE. TFZ)  FRAC = 0.                                           TDVPIU 221
      IF ((TEND1 .LE.  TFZ) .AND. (TEND2 .LE. TFZ)) GO TO 1120                  TDVPIU 222
      IF ((TEND1 .GT. TFZ) .AND. (TEND2 .LE. TFZ))  GO TO 1140                  TDVPIU 223
      IF ((TEND1 .GT. TFZ) .AND. (TEND2 .GT. TFZ))  GO TO 1160                  TDVPIU 224
C              THE (SUPPOSEDLY) HIGHER EXTRACTION RATE HAS RESULTED             TDVPIU 225
C              IN A HIGHER TEMPERATURE                                          TDVPIU 226
C              KEEP GOING                                                       TDVPIU 227
      HENOW = ERMAXM                                                            TDVPIU 228
      <TNEW> = TRY                                                              TDVPIU 229
      <QNEW> = HENOW                                                            TDVPIU 230
      <TSET> = THZ                                                              TDVPIU 231
      ERMAX = ERMAXM                                                            TDVPIU 232
      ERMIN = ERMAXM                                                            TDVPIU 233
      <ZFONF> = 0.                                                              TDVPIU 234
      <ZFNLHR> = 0.                                                             TDVPIU 235
      IWHERE = 13                                                               TDVPIU 236
      GO TO 9100                                                                TDVPIU 237
C              TEND1 AND TEND2 LESS THAN OR EQUAL TO TFZ.  FAN WILL             TDVPIU 238
C              SWITCH ON AND STAY ON                                            TDVPIU 239
 1120 HENOW = FRAC*ERMAXM + (1.-FRAC)*ERMINM                                    TDVPIU 240
      ERMIN = ERMINM                                                            TDVPIU 241
      ERMAX = ERMAXM                                                            TDVPIU 242
      <TSET> = THZ                                                              TDVPIU 243
      <ZFONF> = 1.-FRAC                                                         TDVPIU 244
      <ZFNLHR> = 0.                                                             TDVPIU 245
      IF (<ZFONF> .GE. 0.5) <ZFNLHR> = 1.                                       TDVPIU 246
      IWHERE = 14                                                               TDVPIU 247
      GO TO 9000                                                                TDVPIU 248
C              FAN WILL CYCLE ON AND OFF                                        TDVPIU 249
 1140 HENOW = FRAC*ERMAXM + (1.-FRAC)*(ERFON*(TFZ-TEND2)/(TEND1-TEND2)          TDVPIU 250
     1        + ERFOFF*(TEND1-TFZ)/(TEND1-TEND2))                               TDVPIU 251
      ERMAX = ERMAXM                                                            TDVPIU 252
      ERMIN = ERMINM                                                            TDVPIU 253
      <TSET> = THZ                                                              TDVPIU 254
      <ZFONF> = (1.-FRAC)*(TFZ-TEND2)/(TEND1-TEND2)                             TDVPIU 255
      <ZFNLHR> = 0.                                                             TDVPIU 256
      IF (<ZFONF> .GE. 0.5)  <ZFNLHR> = 1.                                      TDVPIU 257
      IWHERE = 15                                                               TDVPIU 258
      GO TO 9000                                                                TDVPIU 259
C              TEND1 AND TEND2 GREATER THAN TFZ                                 TDVPIU 260
 1160 HENOW = FRAC*ERMAXM + (1.-FRAC)*ERFOFF                                    TDVPIU 261
      ERMIN = ERFOFF                                                            TDVPIU 262
      ERMAX = ERMAXM                                                            TDVPIU 263
      <TSET> = THZ                                                              TDVPIU 264
      <ZFONF> = 1. - FRAC                                                       TDVPIU 265
      <ZFNLHR> = 0.                                                             TDVPIU 266
      IF (<ZFONF> .GE. 0.5)  <ZFNLHR> = 1.                                      TDVPIU 267
      IWHERE = 16                                                               TDVPIU 268
      GO TO 9000                                                                TDVPIU 269
C              TRY IN HEATING BAND                                              TDVPIU 270
 1200 TRY2 = (F-ERMINM)/G0                                                      TDVPIU 271
C              IF IN DEADBAND, TREAT IT AS IF IN DEADBAND                       TDVPIU 272
      IF (TRY2 .GE. THZ+THR)  GO TO 1110                                        TDVPIU 273
C              DEFINATELY IN HEATING BAND                                       TDVPIU 274
C              IF LAST HOUR TEMP. BELOW FAN SET POINT (BECAUSE FAN              TDVPIU 275
C              SETPOINT WAS RAISED AT START UP) GO DO REGULAR HEATING.          TDVPIU 276
      IF (<TNOW> .LE. TFZ)  GO TO 10                                            TDVPIU 277
      F2 = FF(TFZ)                                                              TDVPIU 278
      ERMAX = ERMINM                                                            TDVPIU 279
      ERMIN = <ERMIN>                                                           TDVPIU 280
      HE2 = HE(ERMAX,ERMIN,THZ,F2)                                              TDVPIU 281
      HENOW = FRAC*ERMAXM + (1.-FRAC)*HE2                                       TDVPIU 282
      <TSET> = THZ                                                              TDVPIU 283
      <ZFONF> = 1.-FRAC                                                         TDVPIU 284
      <ZFNLHR> = 0.                                                             TDVPIU 285
      IF (<ZFONF> .GE. 0.5)  <ZFNLHR> = 1.                                      TDVPIU 286
      IWHERE = 17                                                               TDVPIU 287
      GO TO 9000                                                                TDVPIU 288
C              FAN SET POINT IS IN COOLING BAND                                 TDVPIU 289
 1500 ERMAX = <ERMAX>                                                           TDVPIU 290
      ERMIN = ERMAXM + ERFOFF - ERFON                                           TDVPIU 291
      HENOW = HE(ERMAX,ERMIN,TCZ,F)                                             TDVPIU 292
      TNOW = (F-HENOW)/G0                                                       TDVPIU 293
      IF (TNOW .LT. TFZ)  GO TO 1600                                            TDVPIU 294
C              TEMPERATURE REMAINS IN COOLING BAND ABOVE THE                    TDVPIU 295
C              FAN SET POINT                                                    TDVPIU 296
      <TSET> = TCZ                                                              TDVPIU 297
      <ZFONF> = 0.                                                              TDVPIU 298
      <ZFNLHR> = 0.                                                             TDVPIU 299
      IWHERE = 18                                                               TDVPIU 300
      GO TO 9000                                                                TDVPIU 301
C              FAN WILL MOST LIKELY TURN ON.  ASSUME STARTING                   TDVPIU 302
C              TEMP. OF TFZ, AND GET A TRIAL ENDING TEMP. ASSUMING              TDVPIU 303
C              THE FAN IS ON.                                                   TDVPIU 304
 1600 F2 = FF(TFZ)                                                              TDVPIU 305
      ERMIN = ERMAXM                                                            TDVPIU 306
      ERMAX = <ERMAX> - (ERFOFF-ERFON)                                          TDVPIU 307
      HE2 = HE(ERMAX,ERMIN,TCZ,F2)                                              TDVPIU 308
      TNOW2 = (F2-HE2)/G0                                                       TDVPIU 309
      FRAC = (<TNOW>-TFZ)/(<TNOW>-TNOW)                                         TDVPIU 310
      IF (<TNOW> .LE. TFZ)  FRAC = 0.                                           TDVPIU 311
      IF (TNOW2 .LT. TCZ-THR)  GO TO 1800                                       TDVPIU 312
C              FAN GOES ON, BUT TEMPERATURE REMAINS IN THE                      TDVPIU 313
C              COOLING BAND                                                     TDVPIU 314
      IF (TNOW2 .GT. TFZ)  GO TO 1700                                           TDVPIU 315
C              FAN STAYS ON                                                     TDVPIU 316
 1650 HENOW = FRAC*HENOW + (1.-FRAC)*HE2                                        TDVPIU 317
      ERMIN = ERMAXM                                                            TDVPIU 318
      <TSET> = TCZ                                                              TDVPIU 319
      <ZFONF> = 1. - FRAC                                                       TDVPIU 320
      <ZFNLHR> = 0.                                                             TDVPIU 321
      IF (<ZFONF> .GE. 0.5)  <ZFNLHR> = 1.                                      TDVPIU 322
      IWHERE = 19                                                               TDVPIU 323
      GO TO 9000                                                                TDVPIU 324
C              FAN WILL CYCLE ON AND OFF                                        TDVPIU 325
 1700 TEND1 = (F2-ERFON)/G0                                                     TDVPIU 326
      TEND2 = (F2-ERFOFF)/G0                                                    TDVPIU 327
      HENOW = FRAC*HENOW + (1.-FRAC)*(HENOW*(TEND1-TFZ)/(TEND1-TEND2)           TDVPIU 328
     1         + HE2*(TFZ-TEND2)/(TEND1-TEND2))                                 TDVPIU 329
      ERMIN = ERMAXM                                                            TDVPIU 330
      <TSET> = TCZ                                                              TDVPIU 331
      <ZFONF> = (1.-FRAC)*(TFZ-TEND2)/(TEND1-TEND2)                             TDVPIU 332
      <ZFNLHR> = 0.                                                             TDVPIU 333
      IF (<ZFONF> .GE. 0.5)  <ZFNLHR> = 1.                                      TDVPIU 334
      IWHERE = 20                                                               TDVPIU 335
      GO TO 9000                                                                TDVPIU 336
C              TEMPERATURE WANDERS INTO DEADBAND                                TDVPIU 337
 1800 TRY = (F-ERMAXM)/G0                                                       TDVPIU 338
C              IF TRY IN COOLING BAND, DO COOLING STUFF                         TDVPIU 339
      IF (TRY .GE. TCZ-THR)  GO TO 1650                                         TDVPIU 340
C              AND STAYS THERE                                                  TDVPIU 341
      FRAC2 = (TFZ-(TCZ-THR))/(TFZ-TNOW2)                                       TDVPIU 342
      HENOW = FRAC*HENOW + (1.-FRAC)*(FRAC2*HE2+(1.-FRAC2)*ERMAXM)              TDVPIU 343
      ERMIN = ERMAXM                                                            TDVPIU 344
      <TSET> = TCZ                                                              TDVPIU 345
      <ZFONF> = 1. - FRAC                                                       TDVPIU 346
      <ZFNLHR> = 0.                                                             TDVPIU 347
      IF (<ZFONF> .GE. 0.5)  <ZFNLHR> = 1.                                      TDVPIU 348
      IWHERE = 21                                                               TDVPIU 349
      GO TO 9000                                                                TDVPIU 350
C              MAIN FANS OFF, ZONE FANS MAY TURN ON                             TDVPIU 351
 2000 ERMIN = <ERMIN>                                                           TDVPIU 352
      IF (<BASEBOARD-CTRL> .EQ. 1)  ERMIN = ERMIN +                             TDVPIU 353
     1  <BASEBOARD-RATING>*HON*ZCapRbbrd                                        HVAC12 253
      ERMAX = ERMINM                                                            TDVPIU 355
      HENOW = HE(ERMAX,ERMIN,THZ,F)                                             TDVPIU 356
      <TSET> = THZ                                                              TDVPIU 357
      HENOW = AMIN1(HENOW,ERMAX)                                                TDVPIU 358
      HENOW = AMAX1(HENOW,ERMIN)                                                TDVPIU 359
      <ZFONF> = ABS(HENOW)/AMAX1(ABS(ERMIN),0.01)                               TDVPIU 360
      <ZFNLHR> = 0.                                                             TDVPIU 361
      IF (<ZFONF> .GE. 0.5)  <ZFNLHR> = 1.                                      TDVPIU 362
      IWHERE = 22                                                               TDVPIU 363
 9000 <QNEW> = HENOW                                                            TDVPIU 364
      <TNEW> = (F-HENOW)/G0                                                     TDVPIU 365
 9100 CONTINUE                                                                  CCIG9   33
C********************** run function : TDVPIU-1 ********************            TDVPIU 368
      IF( MSYSF(76) .NE. 0 )   CALL  FINTS( MSYSF(76), 1. )                     TDVPIU 369
C*******************************************************************            TDVPIU 370
      RETURN                                                                    TDVPIU 371
      END                                                                       TDVPIU 372
      SUBROUTINE TEMDEV(ISVFLG)                                                 TEMDEV   2
C                                                                               TEMDEV   3
C                            FLOAT TEMPERATURES FOR ZONES                       TEMDEV   4
C                                                                               TEMDEV   5
C              ISVFLG=0: NORMAL CALL; ZONE TEMPS AND EXTR RATES CALC'D,         TEMDEV   6
C                        HISTORIES UPDATED.                                     TEMDEV   7
C              ISVFLG=1: ZONE TEMPS AND EXTR RATES CALC'D AND STORED            TEMDEV   8
C                        IN <TNEW> AND <QNEW>.  F AND G0 SAVED IN <FSAV>        TEMDEV   9
C                        AND <G0SAV>.  HISTORIES NOT UPDATED.                   TEMDEV  10
C              ISVFLG=2: ZONE TEMPS AND EXTR RATES CALC'D AND STORED            TEMDEV  11
C                        IN <TNEW> AND <QNEW>, USING SAVED F AND G0.            TEMDEV  12
C                        HISTORIES NOT UPDATED.                                 TEMDEV  13
C              ISVFLG=3: ZONE TEMPS AND EXTR RATES CALC'D USING SAVED           TEMDEV  14
C                        F AND G0.  HISTORIES UPDATED.                          TEMDEV  15
C                                                                               TEMDEV  16
C              PIUS SHOULD ALWAYS HAVE ISAVFLG=0 SINCE TDVPIU HAS NOT           TEMDEV  17
C              BEEN ALTERED.                                                    TEMDEV  18
      COMMON  /LOCALD/ STALAT, STALON, ITIMZ, BAZIM, BALTIT,                    /LOCALD/ 2
     1                 SSTALA, CSTALA, TSTALA, SBAZIM, CBAZIM                   /LOCALD/ 3
     +                ,BXORG,BYORG,SHCOEF,TP1,TP2,WSTP1,WSTP2,                  /LOCALD/ 4
     +                 WSHGT,WSHGTL(12),ISREFL,IHOLX                            HOLID1   2
      DIMENSION        LOCALD(32)                                               HOLID1   3
      EQUIVALENCE      (LOCALD(1),STALAT)                                       /LOCALD/ 7
C              DEVELOPED BY                                                     -130     1
C                            J. J. Hirsch & S. D. Gates                         -130     2
C                            James J. Hirsch & Associates                       -130     3
C                            Camarillo, California                              -130     4
C              BASED UPON CODE DEVELOPED BY J. J. Hirsch and                    -130     5
C                            W. F. Buhl                                         -130     6
C                            A. E. Erdem                                        -130     7
C                            Lawrence Berkeley National Laboratory              -130     8
C                            University of California                           -130     9
Copyright (c) 1997 by James J. Hirsch. All Rights Reserved. Unpublished         -130    10
c rights reserved under the Copyright Laws of the United States.                -130    11
c RESTRICTED RIGHTS NOTICE: Government use, reproduction or disclosure          -130    12
c is subject to restrictions as set forth in Rights in Data (g)(3) in           -130    13
c UC/LBL purchase order 4607010 with J.J. Hirsch & Associates.                  -130    14
C                                                                               TEMDEV  20
      COMMON /DDSDAT/ FONh, SFKWh, DTSh, CFMRATh, FONNGTh, RCFMmix,             /DDSDAT/ 2
     1                RfanCFM, EXFIL, DTDUCT, DTDUCTh, TCDFSR, THDFSR,          /DDSDAT/ 3
     2                CFMINh, CFMINc, CFMINhm, CFMINcm, CFMINt,                 /DDSDAT/ 4
     3                TCMINcoil, THMAXcoil, IWarmestZ, IColdestZ                /DDSDAT/ 5
      DIMENSION       DDSDAT(21)                                                /DDSDAT/ 6
      EQUIVALENCE     (DDSDAT(1), FONh)                                         /DDSDAT/ 7
      COMMON  /DESHRQ/ NDESDY, IDDTYP(2), DESHRQ(360)                           Time     3
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON  /ENDUSE/ SUPPKW, HEATKW                                           HVAC27   1
      COMMON /FFUEL/ FFUEL, FurnAuxFuel, FurnAuxkW, PLRF                        /FFUEL/  2
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                 IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                        /FILES/  3
     2               , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                   /FILES/  4
     3                 IHRREP(3), IHRPAS(2)                                     /FILES/  5
      common  /FNSYS/  ISKIPS, MSYSF(120)                                       /FNSYS/  2
      COMMON  /HRREP / Irb, Ihrp, Lrb, Lhrp, Nrb, Nhrp, IVTLIM(3,50),           HR       5
     &                 IGRPtr, IBRPtr, IRSch, IRSchT(5),                        HR       6
     &                 NHRTyp(3), ITBUF(3), ITBUFB(3), ITBUFE(3),               HR       7
     &                 IHREOF, ICDFLG                                           HR       8
      COMMON  /MISCD / TEMPS(4,9999),CONS(5),TEMPSL(9999),                      -048a   10
     1                 BLDGQH,BLDGQC,BLDGQL,BLDGP,BPMULT,                       /MISCD/  3
     $                 DBTMIN,DBTMAX,WMIN,WMAX,NSPZ(9999),                      -048a   11
     3                 DQ, DTP, DTR, DTS, FPI, PLRCC , POM, TC2, TDM,           /MISCD/  5
     4                 TRA,WCOL,WCOLM,WMM,YPI,KWBTU,BTUKW,UNFILD,Unusedm        RemPA   45
      REAL             KWBTU                                                    /MISCD/  7
      COMMON /NVNDAT/ VENTF,VNTCFM,NDH,IVENTG,QCVZ,VNTfrac                      -44c6    1
      COMMON  /SSRESY/  IVENTF, XRAN                                            /SSRESY/ 2
     1  , CFMCV1, CFMCV2, DEL   , DQGVC1, DQGVNT, DTMIN , FANHTM, FLWMUL        /SSRESY/ 3
     2  , IAFTYP, ISSV  , IVDONE, IZP1RM, IZP1SS, MINH  , MOUH  , MRRFSV        /SSRESY/ 4
     3  , MRRVSF, MRY   , MRZ   , MSRFSV, MSRVSF, NADJ  , NCWCON, NDELT         /SSRESY/ 5
     4  , Q10   , QGVEC1, QGVEC2, QGVNT , QGWAL , QHBZNX, QIN   , QINXS         /SSRESY/ 6
     5  , QLWAL , QOUT  , QOUTXS, QPNX  , QSUNIN, QW    , SSVFP , T1T           /SSRESY/ 7
     6  , T1TB  , T2MAX , T2T   , T2TB  , T2TFV , TINNEW, TNEXT , TOTNEW        /SSRESY/ 8
     7  , UOT   , UVRMG , UVT   , VNTRM , ZDELMN, ZDELMX, ZMNEXT                /SSRESY/ 9
     1  , ECPLR(3), ERMXEC(4), TCMNEC(3), QCV, TVZ, NVCFMS, TNVCFMS             -045d    1
      COMMON  /PIUDAT/ ERFON,ERFOFF,TFZ,ZFONLY,IBF,BBR,MSTEMP,F,                -044e2   1
     &                 CFMIND,CFMI,FRACIAZ,HONS,RCFMI,RCFMMI,RCFMTX,            -044e2   2
     &                 TIAZ,TIC,TIH,ZCFMT,ZQHSMN,TEND1,TEND2,TRY2,F2,           -044e2   3
     &                 FNSZHP,MAXSTZ                                            -044e2   4
      DIMENSION        ZDPIU(8)                                                 -044e2   5
      EQUIVALENCE     (ZDPIU(1),ERFON)                                          -044e2   6
      COMMON /RSVVTD/ CONFRC,HONFRC,NOWFRC,THMXNS                               /RSVVTD/ 2
      REAL NOWFRC                                                               /RSVVTD/ 3
      COMMON /SHP   / QCRUN,QCLOAD,QCGAS,QCAUX,QCGSLD,QCGSUP,                   /SHP/    2
     1                QCWAS,QCWASU,QCGSAV,QCFAN,                                /SHP/    3
     2                QHRUN,QHLOAD,QHGAS,QHAUX,QHGSLD,QHGSUP,                   /SHP/    4
     3                QHWAS,QHWASU,QHGDFR,QHFAN,          CUR(25),              /SHP/    5
     4                GSAV1,GASV2,PCH,ISZCZ,GCAP(2),GEDB,QHDFRG,                -044c1   1
     5                GRPM,PLRSUP,CFMCYC,CLPLR,CFMVVT,QHZHP,PCCEDB,             /SHP/    7
     6                IHPREP,IHPOUT,IHPHRR,IHPHRN,IRST,IREN                     /SHP/    8
      COMMON /SHPZ  / QCRUNZ,QCLOADZ,QCGASZ,QCAUXZ,QCGSLDZ,QCGSUPZ,             /SHP/    9
     1                QCWASZ,QCWASUZ,QCGSAVZ,QCFANZ,                            /SHP/   10
     2                QHRUNZ,QHLOADZ,QHGASZ,QHAUXZ,QHGSLDZ,QHGSUPZ,             /SHP/   11
     3                QHWASZ,QHWASUZ,QHGDFRZ,QHFANZ                             /SHP/   12
      DIMENSION       SHP(60),SHPZ(20)                                          /SHP/   13
      EQUIVALENCE     (SHP,QCRUN),(SHPZ,QCRUNZ)                                 /SHP/   14
     1               ,(DFM1,CUR(18)),(DFM2,CUR(19)),(DFM3,CUR(20))              /SHP/   15
      COMMON  /PLANTD/ QHMP,TMP,CFMP,QHPP,CFMPP,                                /PLANTD/ 2
     1                 QHZP,TZP,DHWPKW,DHWPLF,DHWQRP                            RemPA   46
      REAL             PLANTD(10)                                               RemPA   47
      EQUIVALENCE      (PLANTD(1), QHMP)                                        RemPA   48
      COMMON  /PTRPLT/ Ipm,Ilp,Ich,Ibl,Idw,Itw,Ipv,Ign,Itk,Ihx,                 PV       1
     &                 Iec,Ilm,Iem,Ifm,Ism,Icm,Imm,Imc,Igl,Isp2,                XFC2     1
     &                 Ispare(5),  Ipe,                                         HVAC19   3
     &                 Npm,Nlp,Nch,Nbl,Ndw,Ntw,Npv,Ngn,Ntk,Nhx,                 PV       2
     &                 Nec,Nlm,Nem,Nfm,Nsm,Ncm,Nmm,Nmc,Ngl,Nsp2,                XFC2     2
     &                 Nspare(5),  Npe,                                         HVAC19   6
     &                 Lpm,Llp,Lch,Lbl,Ldw,Ltw,Lpv,Lgn,Ltk,Lhx,                 PV       3
     &                 Lec,Llm,Lem,Lfm,Lsm,Lcm,Lmm,Lmc,Lgl,Lsp2,                XFC2     3
     &                 Lspare(5),  Lpe,                                         HVAC19   9
     &                 Jpm,Jlp,Jch,Jbl,Jdw,Jtw,Jpv,Jgn,Jtk,Jhx,                 PV       4
     &                 Jec,Jlm,Jem,Jfm,Jsm,Jcm,    Jmc,Jgl,                     HVAC19  11
     &                 Jpe, kpr, NumMeters, NumIntHX                            XFC1     1
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      COMMON  /LENS/   MWFLEN, MRLEN, MSHLEN, MWNLEN, MDRLEN, MXLEN,            /LENS/   2
     1                 MULEN, MZLEN, MIWLEN, MFLLEN,                            /LENS/   3
     2                 LMTB, LLDSOU, MSTLEN, LSTFT, MWLLEN                      /LENS/   4
      COMMON  /PTRBGN/ IWFB, IWPB, ICONSB, IGTB, IWLB, IGEOB, ISHADB,           /PTRBGN/ 2
     &                 IWINB, IDRB, IEWB, IUGB, ISPB, IIWPB, IIWB,              /PTRBGN/ 3
     &                 IFLB, ISPCDB, IOTHB, ILHB, IZQCMB, ISSHDB,               /PTRBGN/ 4
     &                 IOHFIB, IZLSK, IZLSL, ISTFB, ILSSH                       PV2      1
      COMMON  /SYSTD / TH,TC,TM,TR,QH,QC,QHZ,QCZ,QHB,QHP,QHUM,                  /SYSTD/  2
     1                 QDHUM,TCMIN,THMAX,QLSUM,QPSUM,CFM,CFMH,CFMC,             /SYSTD/  3
     2                 RCFM,ECFM,CINF,FON,HON,CON,BON,SCONS(3),PH,PC,           /SYSTD/  4
     3                 SKW,FANKW,unused1,WR,WM,WCOIL,WW,PO,D,                   -046f    1
     4                 FTEMP,TCR,QHR,RfanPumpKW,SGAS,SKWQH,SKWQC,QCLAT,         -131    23
     5                 SFKW,RFKW,FONNGT,WSURF,RWalkinQ,TSURF,TRh,               -131    24
     6                 CBF,CBF1,CBF2,EON,PLRCFM,PLRC,PLRH,QCM1,                 /SYSTD/  8
     7                 QCM2,QHM1,EIRM1,EIRM2,EIR,OFKW,QCT,QCS,                  /SYSTD/  9
     8                 WRMAX,WRMIN,CFMRAT,QdistG,QdistL,RON,QHT,                /SYSTD/ 10
     9                 TPOMIN,POMIN,QHSUP,QRSENS,QRLAT,QRREC,QRREJ,             /SYSTD/ 11
     1                 RCOMKW,RDEFKW,RAUXKW,ECFMP,CFMIN,CINFP,DT,DW,            /SYSTD/ 12
     2                 EWB,IC,NATTSP,Q,RETR,SLOAD,QLSUMP,T,TCHUM,TEND,          /SYSTD/ 13
     3                 TS,hgbmin,HPDefE,EconoOnly,TDuctEnv,                     -044e1   1
     4                 QCUNMT,CapRh,CapRph,CapRc                                HVAC25   3
      REAL             SYSTD(113)                                               HVAC19  13
      EQUIVALENCE      (SYSTD(1),TH)                                            RemPA   65
      COMMON  /TIME  / IDOY, IYR, IMO, IDAY, IHR,                               Time     4
     &                 ISCMO, ISCDAY, ISCHR, IDOW, ISCDOW, iDSdates(6),         -044e5   1
     &                 iTimeFlg, iDSFlg, iDDFlg, InitialFlg, LeapYr,            Time     6
     &                 CLOCK(10), MONDSC(13), MONLEN(12), MONSDA(12)            HR      12
      COMMON  /TROMWL/ SUMDTX,SUMDTY,QCTOT,QLC0,QGK0,QCGUES,QVNTBG,             /TROMWL/ 2
     1                 VOLVNT,AMF,UCHAN,UCHANC,HRGW,TAIRIN,TZONE,               /TROMWL/ 3
     2                 TGOUT,QCVG,QCVW,IVMODE,TFO,RHO,MWH,FILMU,MRX,CTRM        /TROMWL/ 4
     1    , TAVR, TGLASS, TUNDER, UNIN1                                         /TROMWL/ 5
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
      COMMON  /ZONED / EXCFM,FH,FC,CFMZ,QHBZ,QOVER,THZ,TCZ,ERMAX,ERMIN,         /ZONED/  2
     1                 TRY,FTD,CORINT,G0,G1,G2,G3,SIGMAG,TL,ZQHR,TAVE,          /ZONED/  3
     2                 ZQH,ZQC,FCHPS(15),ACFM,ZKW,TCMINZ,THMAXZ,                /ZONED/  4
     3                 ERMAXM,ERMINM,THR,CSSCND,CSSVEC,HENOW,QGWIN,             /ZONED/  5
     4                 QSNABT,QGOPWL,QGVEC,CFMCVT,SSFPT,CFMVNT,ZFANKW,          /ZONED/  6
     5                 ZKWCBT,ZKWHBT,ZCapRbbrd, XC,ZC,XH,ZH                     -044e2   7
      REAL ZONED(63)                                                            -044e2   8
      EQUIVALENCE (ZONED(1),EXCFM)                                              /ZONED/  9
      COMMON  /FZZZ5/   INDMOD , FRAC  , CFMAX, QO, TO, R                       /FZZZ5/  2
      COMMON /WCTRL/   IwinReturn, Imsgflg                                      /WCTRL/  2
#ifndef _DLL                                                                 /* -048     1 */ 
      COMMON /WIN_MB/ MB_OK,MB_ICONSTOP,MB_ICONEXCLAMATION,MB_TASKMODAL,        -048     2
     &                MB_ICONINFORMATION                                        -048     3
#else                                                                        /* -048     4 */ 
      include 'msgbox.fi'                                                       -048     5
#endif                                                                       /* -048     6 */ 
      COMMON  /REPORT/ IREPRT(4,37),IPRG,IUNIQV(100),IUNIQS(100),IUNIQL         HVAC14   4
c                                                                               CCIG12  39
c                                                                               CCIG12  41
      JJ     = 1                                                                TEMDEV  48
      IBF    = 0                                                                TEMDEV  49
C              ERMIN WILL BE THE MAXIMUM HEAT ADDITION RATE                     TEMDEV  50
      ERMIN  = 0.                                                               TEMDEV  51
C              ERMAX WILL BE THE MAXIMUM HEAT EXTRACTION RATE                   TEMDEV  52
      ERMAX  = 0.                                                               TEMDEV  53
      ZMULT = <MULTIPLIER>                                                      TEMDEV  54
C              SAVE ERMAXM, ERMINM FOR SUNSPACE CALC                            TEMDEV  55
      <ERMAXM> = ERMAXM                                                         TEMDEV  56
      <ERMINM> = ERMINM                                                         TEMDEV  57
C              PICK UP THE SPACE NUMBER FOR THIS ZONE                           TEMDEV  58
      P2     = <NZSPACE>                                                        TEMDEV  59
c              flag to indicate that supply fan for single-fan system or        CCIG7  115
c              hot deck and/or cold deck fan in dual-fan system is on           CCIG7  116
      FONhc = FON + FONh                                                        CCIG7  117
      IF (<BBRD-LOOPZ> .NE. 0)  THEN                                            HVAC12 254
c              zone baseboard coil is hot water - pointer to loop               HVAC12 255
        JLP    = <BBRD-LOOPZ>                                                   HVAC12 256
        ZCapRbbrd = <lp;HCAP_RATIO>                                             HVAC16 149
      ELSE                                                                      HVAC12 258
        ZCapRbbrd = 1.0                                                         HVAC12 259
      ENDIF                                                                     HVAC12 260
C********************** run function : TEMDEV-0 ********************            TEMDEV  60
      IF( MSYSF(77) .NE. 0 )   CALL  FINTS( MSYSF(77), 0. )                     TEMDEV  61
C*******************************************************************            TEMDEV  62
C              SKIP CALC OF F AND G0 IF ISAVFL=2 OR 3                           TEMDEV  63
      IF (ISVFLG .eq. 2  .or.  ISVFLG .eq. 3)  GoTo 500                         -045b  162
C              IF UNCONDITIONED OR PLENUM ZONE, SKIP                            TEMDEV  69
      IF(<ZONE-TYPE>.GT.1) GO TO 3                                              TEMDEV  70
C        IF RETURN-AIR-PATH IS DIRECT, THEN LIGHT HEAT SENT TO RETURN           TEMDEV  71
C        <QP> MUST BE ADDED TO THE ZONE.  IF RETURN-AIR-PATH IS NOT             TEMDEV  72
C        DIRECT AND VARIABLE VOLUME FAN, SPLIT LIGHT HEAT TO RETURN             TEMDEV  73
C              BETWEEN PLENUM AND ZONE IN PROPORTION TO LAST HOURS CFM.         TEMDEV  74
      FRAC   = 1.0                                                              TEMDEV  75
      IF (<RETURN-AIR-PATH> .EQ. 0)  GO TO 2                                    TEMDEV  76
C              IF FANS ARE OFF, PUT ALL OF LIGHT HEAT TO ZONE                   TEMDEV  77
      IF(FONhc .EQ. 0.  OR  .<CFMAX> .LE. 0.0) GOTO 2                           CCIG7  118
    1 FRAC   = 1.0 - <COIL_CFMZ>/<CFMAX>                                        HVAC1  746
    2 <QPPAST2> = <QPPAST>                                                      TEMDEV  86
      <QPPAST> = <QPNOW>                                                        TEMDEV  87
      <QPNOW> = FRAC * <QP>                                                     TEMDEV  88
      <QLIGHTRETURN> =  <QP> - <QPNOW>                                          TEMDEV  89
    3 CONTINUE                                                                  TEMDEV  90
c                                                                               TEMDEV  91
C              IF VARIABLE TEMPERATURE IS OFF SKIP                              TEMDEV 104
      IF(<VARIABLE-T> .LE. 0)  GO TO 100                                        TEMDEV 105
      CTRM   = 0.0                                                              TEMDEV 106
C              CHECK FOR VENTED TROMBE WALL                                     TEMDEV 107
      MTW    = <ITWBUFP>                                                        TEMDEV 108
      IF (MTW .LE. 0)  GO TO 4                                                  TEMDEV 109
      TAIRIN = <TNOW>                                                           TEMDEV 110
      TZONE  = <TLOADS>                                                         TEMDEV 111
C              OBTAIN TROMBE WALL CONVECTIVE AND CONDUCTION                     TEMDEV 112
C              HEAT GAINS                                                       TEMDEV 113
      CALL DOETRM                                                               TEMDEV 114
C              QLC0 IS THE CONVECTIVE HEAT GAIN (AND LOAD) FROM                 TEMDEV 115
C              THE TROMBE WALL.                                                 TEMDEV 116
C              QGK0 IS THE CONDUCTION HEAT GAIN THROUGH THE                     TEMDEV 117
C              TROMBE WALL                                                      TEMDEV 118
C              OBTAIN THE T-W CONDUCTION LOAD BY WEIGHTING THE                  TEMDEV 119
C              T-W CONDUCTION HEAT GAIN.                                        TEMDEV 120
      QLK0   = <CONDUCTION-V0>*QGK0 + <CONDUCTION-V1>*<QGK1> +                  TEMDEV 121
     1       <CONDUCTION-V2>*<QGK2> + <CONDUCTION-W1>*<QLK1> +                  TEMDEV 122
     2       <CONDUCTION-W2>*<QLK2>                                             TEMDEV 123
      CTRM   = QLC0 + QLK0 + <P1>*(<QLC1>+<QLK1>)                               TEMDEV 124
     1                   + <P2>*(<QLC2>+<QLK2>)                                 TEMDEV 125
C              SAVE PAST HOURS TROMBE WALL LOADS AND HEAT GAINS                 TEMDEV 126
      <QGK2> = <QGK1>                                                           TEMDEV 127
      <QGK1> = QGK0                                                             TEMDEV 128
      <QLK2> = <QLK1>                                                           TEMDEV 129
      <QLK1> = QLK0                                                             TEMDEV 130
      <QLC2> = <QLC1>                                                           TEMDEV 131
      <QLC1> = QLC0                                                             TEMDEV 132
    4 CONTINUE                                                                  TEMDEV 133
C                                                                               TEMDEV 134
C              CALCULATE THE TRANSFER ACROSS THE INTERNAL                       TEMDEV 135
C              PARTITIONS INTO THIS ZONE                                        TEMDEV 136
C            UA FOR COMMON WALLS BETW SUNSPACES AND REGULAR SPACES WILL BE      TEMDEV 137
C            ZERO AT THIS POINT.  CORRECTION TO F DUE TO CONDUCTIVE AND         TEMDEV 138
C            CONVECTIVE HEAT TRANSFER THRU THESE WALLS IS DONE SEPARATELY       TEMDEV 139
C            VIA A CALL BELOW TO SUBR. SSFCOR                                   TEMDEV 140
C                                                                               TEMDEV 141
C              X WILL BE THE COMPONET FOR LAST HOUR                             TEMDEV 142
C              Y WILL BE THE COMPONET FOR TWO HOURS PAST                        TEMDEV 143
C              Z WILL                     THREE                                 TEMDEV 144
      X      = 0.                                                               TEMDEV 145
      Y      = 0.                                                               TEMDEV 146
      Z      = 0.                                                               TEMDEV 147
C              PICK UP THE NUMBER OF ATTACHMENTS                                TEMDEV 148
      IE     = <NATTCH>                                                         TEMDEV 149
C              IF NO ATTACHMENTS SKIP                                           TEMDEV 150
      IF(IE .EQ. 0) GOTO 8                                                      TEMDEV 151
C              LOOP THROUGH THE ATTACHMENTS                                     TEMDEV 152
      DO 7 J = 1,IE                                                             TEMDEV 153
C              CALC POINTER TO ATTACHMENT DATA                                  TEMDEV 154
      I1 = <IATTCH> + (J-1)*3                                                   TEMDEV 155
C              PICK UP NUM OF SPACE ON THE OTHER SIDE                           TEMDEV 156
      NATTSP = IA(I1)                                                           TEMDEV 157
C              CALC COMPONET FOR PREVIOUS HOURS                                 TEMDEV 158
      X      = X + AA(I1+1)*(TEMPS(1,NATTSP)-TEMPSL(NATTSP))                    RemPA  648
      Y      = Y + AA(I1+1)*(TEMPS(2,NATTSP)-TEMPSL(NATTSP))                    RemPA  649
      Z      = Z + AA(I1+1)*(TEMPS(3,NATTSP)-TEMPSL(NATTSP))                    RemPA  650
    7 CONTINUE                                                                  TEMDEV 162
C              CALC NET WEIGHTED ENERGY TRANSFERED                              TEMDEV 163
      CORINT = X + <P1>*Y + <P2>*Z                                              TEMDEV 164
    8 CONTINUE                                                                  TEMDEV 165
C                                                                               TEMDEV 166
      G0     = <G0> * <AREA>                                                    XFC2   247
     &       +        (<CONDUCHR>      + CONS(1)*<CFMINF>)                      XFC2   248
      G1     = <G1> * <AREA>                                                    XFC2   249
     &       + <P1> * (<CONDUCHRPAST>  + CONS(1)*<VIPAST>)                      XFC2   250
      G2     = <G2> * <AREA>                                                    XFC2   251
     &       + <P2> * (<CONDUCHRPAST2> + CONS(1)*<VIPAST2>)                     XFC2   252
      G3     = <G3>*<AREA>                                                      TEMDEV 172
      SIGMAG = G0 + G1 + G2 + G3                                                TEMDEV 173
C                                                                               TEMDEV 174
C              OUTDOOR RESET BASEBOARD CALCULATION                              TEMDEV 175
C                                                                               TEMDEV 176
C              IF NOT OUTDOOR RESET OR SCHEDULED OFF SKIP                       TEMDEV 177
      IF((<BASEBOARD-CTRL> .NE. 2).OR.(BON*ZCapRbbrd .LE. .01))  GOTO 55        HVAC12 261
C              CALC BASEBOARD ENERGY FOR THE ZONE                               HVAC12 262
      QHBZ   = <BASEBOARD-RATING> * BON*ZCapRbbrd                               HVAC12 263
C              INCREMENT TOTAL SYSTEM BASEBOARD ENERGY                          TEMDEV 181
      QHB    = QHB + QHBZ*<MULTIPLIER>                                          TEMDEV 182
   55 CONTINUE                                                                  TEMDEV 183
      F = FTDEV(<QNOW>,<TNOW>)                                                  TEMDEV 184
      FTD    = F                                                                TEMDEV 185
C              CONTRIBUTION TO F FROM CONDUCTION (CSSCND) AND                   TEMDEV 186
C              CONVECTION (CSSVEC) ACROSS SUNSPACE INTERIOR WALLS               TEMDEV 187
      CSSCND = 0.                                                               TEMDEV 188
      CSSVEC = 0.                                                               TEMDEV 189
      IF (<ISUNSP>.NE.0) THEN                                                   -036   630
        CALL SSFCOR(1)                                                          -036   631
        IF(ABS(CSSCND+CSSVEC) .lt. G0*20.0)  THEN                               -036   632
          F = F + CSSCND + CSSVEC                                               -036   633
        ELSE                                                                    -036   634
          CALL MSGSIM(-1,JJ,JJ,JJ,JJ)                                           -036   635
          WRITE (IOUTPT,1310) (<ZONE-NAME>,II=1,8),IMO,IDAY,IHR,                Time   390
     &                        InitialFlg,                                       Time   391
     $                        CSSVEC,CSSCND,(CSSCND+CSSVEC)/G0                  -036   637
        ENDIF                                                                   -036   638
      IF( IwinReturn .ne. 0 ) RETURN                                            WinRet  97
 1310   FORMAT(                                                                 -036   639
     $ ' In routine TEMDEV for ZONE ',8A4,                                      -036   640
     $ ' on ',I2,'/',I2,' hr ',I2,' (InitialFlg = ',I2,')'                      Time   392
     $/'   SUNSPACE INTERIOR-WALL calculations produced bad values:'            -036   642
     $/'   CSSVEC (convection) = ',F12.0,' CSSVEC (conduction) = ',F12.0        -036   643
     $/'   This would cause a ',F5.0,' degree ZONE temperature change.'         -036   644
     $ '   Values are being ignored.'/'   Check wall definitions for',          -036   645
     $   ' errors and report this inp/lib/wth to DOE-2 support.')               -036   646
      ENDIF                                                                     -036   647
C              SAVE F AND G0                                                    TEMDEV 192
      <FSAV> = F                                                                TEMDEV 193
      <G0SAV> = G0                                                              TEMDEV 194
  500 CONTINUE                                                                  -045b  163
c                                                                               TEMDEV 196
c              Calculate extraction rate adjustment terms for                   XFC1   231
c              heat gains/losses due to parasitic loads.  Included              XFC1   232
c              here are duct air/thermal losses, pipe losses,                   XFC1   233
c              refrigeration equipment, and heat-pump water heaters             XFC1   234
c              Initialize the average zone temperature to be last hours         XFC1   235
      TDuctEnv = <TNOW>                                                         XFC1   236
c              Save original HVAC extraction rate terms in case of              XFC2   253
c              iteration                                                        XFC2   254
      ERMAXsave  = <ERMAX>                                                      XFC2   255
      ERMINsave  = <ERMIN>                                                      XFC2   256
      ERMAXMsave = ERMAXM                                                       XFC2   257
      ERMINMsave = ERMINM                                                       -047a    4
      ERFOFFsave = ERFOFF                                                       XFC2   258
      ERFONsave  = ERFON                                                        XFC2   259
c              Re-entry point for iterative mechanical loss solution            -042i    2
      ErrorMult  = 1.                                                           -042i    3
      ErrorT2    = 0.                                                           -043a1  46
      IterLoss   = 0                                                            -042i    4
  101 IterLoss   = IterLoss + 1                                                 -042i    5
      UADUCT = 0.                                                               -047i    3
      ERloss = 0.                                                               -047i    4
      UAloss = 0.                                                               -047i    5
c              re-initialize extraction terms                                   -045b  164
      F   = <FSAV>                                                              -045b  165
      FTD = <FSAV>                                                              -045b  166
      G0  = <G0SAV>                                                             -045b  167
c              First, check for duct air/thermal losses.  If duct losses        XFC1   240
c              are in a plenum, all plenums share the loss.                     XFC1   241
      IF (ZP1 .EQ. <DUCT-LOSS-ZONE>  .OR.                                       XFC1   242
     1   (<ZONE-TYPE> .EQ. 3  .AND.  <DUCT-ZTYPE> .EQ. 3)) THEN                 XFC1   243
        DuctCFMLoss    = 0.                                                     -045f  108
        HotDuctCFMLoss = 0.                                                     -045f  109
c              Get the log mean temperature of the duct air, based on           XFC1   244
c              this hour's estimated supply temperature and actual CFM.         XFC1   245
        IF (<DDS-TYPE> .EQ. 0  .AND.  ICODE .NE. 27)  THEN                      HVAC29  72
          IF (FON .GT. 0.  .AND.  CFMCYC .GT. 0.)  THEN                         HVAC29  73
c              single duct system - temperature change in duct                  HVAC29  74
            CFMent = CFM / CFMCYC                                               -045f  110
            IF (<DUCTCFMLOSS> .gt. 0.) THEN                                     -045f  111
              SELECT CASE (<AIR-LOSS-TYPE>)                                     -045f  112
              CASE (2)  ! proportional leakage                                  -045f  113
                SELECT CASE (<ZONE-TYPE>)                                       -045f  114
                CASE (2)  ! unconditioned, CFMent excludes loss                 -045f  115
                  DuctCFMLoss = CFMent                                          -045f  116
     &                        * <DUCT-AIR-LOSS>/(1.0-<DUCT-AIR-LOSS>)           -045f  117
                CASE (3)  ! plenum, CFMent includes loss                        -045f  118
                  DuctCFMLoss = CFMent * <DUCT-AIR-LOSS>                        -045f  119
                END SELECT                                                      -045f  120
              CASE DEFAULT                                                      -045f  121
                DuctCFMLoss = <DUCTCFMLOSS>                                     -045f  122
              END SELECT                                                        -045f  123
              CFMent = CFMent + DuctCFMLoss                                     -045f  124
            ENDIF                                                               -045f  125
            X = DUCTDT(TC,CFMent,2,2,0)                                         HVAC29  76
c              If DKTEMP estimated TC using a CFM too high from                 HVAC29  77
c              previous hour, required cold deck temp may be lower than         HVAC29  78
c              minimum allowable.  If so, base losses on minimum coil           HVAC29  79
c              temp allowed.  This will cause losses to be                      HVAC29  80
c              underestimated somewhat.                                         HVAC29  81
            IF (TC-X .LT. TCMINcoil)  THEN                                      HVAC29  82
              TCmean = DUCTDT(TCMINcoil,CFMent,2,1,1)                           HVAC29  83
              TCair  = TCMINcoil + DUCTDT(TCMINcoil,CFMent,2,1,0)               HVAC29  84
            ELSEIF (TC-X .GT. THMAXcoil)  THEN                                  -042i    7
              TCmean = DUCTDT(THMAXcoil,CFMent,2,1,1)                           -042i    8
              TCair  = THMAXcoil + DUCTDT(THMAXcoil,CFMent,2,1,0)               -042i    9
            ELSE                                                                HVAC29  85
              TCmean = DUCTDT(TC,CFMent,2,2,1)                                  HVAC29  86
              TCair  = TC                                                       HVAC29  87
            ENDIF                                                               HVAC29  88
c              If duct air losses exist without duct UAs, reset the duct        HVAC29  89
c              air loss temperature                                             HVAC29  90
            IF (<DUCTCFMLOSS> .GT. 0.  .AND. <DUCTUA> .EQ. 0.)                  HVAC29  91
     &        TCair = TC                                                        HVAC29  92
          ENDIF                                                                 HVAC29  93
        ELSEIF (ICODE .EQ. 27)  THEN                                            HVAC29  94
c              RESVVT system                                                    HVAC29  95
          IF (FON .GT. 0.  .AND.  CFMCYC .GT. 0.)  THEN                         HVAC29  96
            IF (CONFRC .GT. 0.)  THEN                                           HVAC29  97
c                 cooling                                                       HVAC29  98
              CFMent = CFMC / CFMCYC                                            -045f  126
              IF (<DUCTCFMLOSS> .gt. 0.) THEN                                   -045f  127
                SELECT CASE (<AIR-LOSS-TYPE>)                                   -045f  128
                CASE (2)  ! proportional leakage                                -045f  129
                  SELECT CASE (<ZONE-TYPE>)                                     -045f  130
                  CASE (2)  ! unconditioned, CFMent excludes loss               -045f  131
                    DuctCFMLoss = CFMent                                        -045f  132
     &                          * <DUCT-AIR-LOSS>/(1.0-<DUCT-AIR-LOSS>)         -045f  133
                  CASE (3)  ! plenum, CFMent includes loss                      -045f  134
                    DuctCFMLoss = CFMent * <DUCT-AIR-LOSS>                      -045f  135
                  END SELECT                                                    -045f  136
                CASE DEFAULT                                                    -045f  137
                  DuctCFMLoss = <DUCTCFMLOSS>                                   -045f  138
                END SELECT                                                      -045f  139
                CFMent = CFMent + DuctCFMLoss                                   -045f  140
              ENDIF                                                             -045f  141
              X = DUCTDT(TC,CFMent,2,2,0)                                       HVAC29 100
              IF (TC-X .LT. TCMINcoil)  THEN                                    HVAC29 101
                TCmean = DUCTDT(TCMINcoil,CFMent,2,1,1)                         HVAC29 102
                TCair  = TCMINcoil + DUCTDT(TCMINcoil,CFMent,2,1,0)             HVAC29 103
              ELSEIF (TC-X .GT. THMAXcoil)  THEN                                -042i   10
                TCmean = DUCTDT(THMAXcoil,CFMent,2,1,1)                         -042i   11
                TCair  = THMAXcoil + DUCTDT(THMAXcoil,CFMent,2,1,0)             -042i   12
              ELSE                                                              HVAC29 104
                TCmean = DUCTDT(TC,CFMent,2,2,1)                                HVAC29 105
                TCair  = TC                                                     HVAC29 106
              ENDIF                                                             HVAC29 107
            ENDIF                                                               HVAC29 108
            IF (HONFRC .GT. 0.)  THEN                                           HVAC29 109
c                 dual-duct hot duct or RESVVT heating                          HVAC29 110
              CFMent = CFMH / CFMCYC                                            -045f  142
              IF (<DUCTCFMLOSS> .gt. 0.) THEN                                   -045f  143
                SELECT CASE (<AIR-LOSS-TYPE>)                                   -045f  144
                CASE (2)  ! proportional leakage                                -045f  145
                  SELECT CASE (<ZONE-TYPE>)                                     -045f  146
                  CASE (2)  ! unconditioned, CFMent excludes loss               -045f  147
                    HotDuctCFMLoss = CFMent                                     -045f  148
     &                          * <DUCT-AIR-LOSS>/(1.0-<DUCT-AIR-LOSS>)         -045f  149
                  CASE (3)  ! plenum, CFMent includes loss                      -045f  150
                    HotDuctCFMLoss = CFMent * <DUCT-AIR-LOSS>                   -045f  151
                  END SELECT                                                    -045f  152
                CASE DEFAULT                                                    -045f  153
                  HotDuctCFMLoss = <DUCTCFMLOSS>                                -045f  154
                END SELECT                                                      -045f  155
                CFMent = CFMent + HotDuctCFMLoss                                -045f  156
              ENDIF                                                             -045f  157
              X = DUCTDT(TH,CFMent,1,2,0)                                       HVAC29 112
              IF (TH-X .GT. THMAXcoil)  THEN                                    HVAC29 113
                THmean = DUCTDT(THMAXcoil,CFMent,1,1,1)                         HVAC29 114
                THair  = THMAXcoil + DUCTDT(THMAXcoil,CFMent,1,1,0)             HVAC29 115
              ELSEIF (TH-X .LT. TCMINcoil)  THEN                                -042i   13
                THmean = DUCTDT(TCMINcoil,CFMent,1,1,1)                         -042i   14
                THair  = TCMINcoil + DUCTDT(TCMINcoil,CFMent,1,1,0)             -042i   15
              ELSE                                                              HVAC29 116
                THmean = DUCTDT(TH,CFMent,1,2,1)                                HVAC29 117
                THair  = TH                                                     HVAC29 118
              ENDIF                                                             HVAC29 119
            ENDIF                                                               HVAC29 120
c              If duct air losses exist without duct UAs, recalculate           HVAC29 121
c              the mean temperatures                                            HVAC29 122
            IF (<DUCTCFMLOSS> .GT. 0.  .AND. <DUCTUA> .EQ. 0.)                  HVAC29 123
     &        TCair = TC                                                        HVAC29 124
            IF (<HOTDUCTCFMLOSS> .GT. 0.  .AND. <HOTDUCTUA> .EQ. 0.)            HVAC29 125
     &        THair = TH                                                        HVAC29 126
          ENDIF                                                                 HVAC29 127
        ELSE                                                                    HVAC29 128
c              Dual-duct system                                                 HVAC29 129
          IF (FONhc .GT. 0.  .AND.  CFMCYC .GT. 0.)  THEN                       HVAC29 130
c              dual-duct cold duct                                              HVAC29 131
            CFMent = CFMC / CFMCYC                                              -045f  158
            IF (<DUCTCFMLOSS> .gt. 0.) THEN                                     -045f  159
              SELECT CASE (<AIR-LOSS-TYPE>)                                     -045f  160
              CASE (2)  ! proportional leakage                                  -045f  161
                SELECT CASE (<ZONE-TYPE>)                                       -045f  162
                CASE (2)  ! unconditioned, CFMent excludes loss                 -045f  163
                  DuctCFMLoss = CFMent                                          -045f  164
     &                        * <DUCT-AIR-LOSS>/(1.0-<DUCT-AIR-LOSS>)           -045f  165
                CASE (3)  ! plenum, CFMent includes loss                        -045f  166
                  DuctCFMLoss = CFMent * <DUCT-AIR-LOSS>                        -045f  167
                END SELECT                                                      -045f  168
              CASE DEFAULT                                                      -045f  169
                DuctCFMLoss = <DUCTCFMLOSS>                                     -045f  170
              END SELECT                                                        -045f  171
              CFMent = CFMent + DuctCFMLoss                                     -045f  172
            ENDIF                                                               -045f  173
            X = DUCTDT(TC,CFMent,2,2,0)                                         HVAC29 133
            IF (TC-X .LT. TCMINcoil)  THEN                                      HVAC29 134
              TCmean = DUCTDT(TCMINcoil,CFMent,2,1,1)                           HVAC29 135
              TCair  = TCMINcoil + DUCTDT(TCMINcoil,CFMent,2,1,0)               HVAC29 136
            ELSEIF (TC-X .GT. TPOMIN)  THEN                                     -042i   16
              TCmean = DUCTDT(TPOMIN,CFMent,2,1,1)                              -042i   17
              TCair  = TPOMIN + DUCTDT(TPOMIN,CFMent,2,1,0)                     -042i   18
            ELSE                                                                HVAC29 137
              TCmean = DUCTDT(TC,CFMent,2,2,1)                                  HVAC29 138
              TCair  = TC                                                       HVAC29 139
            ENDIF                                                               HVAC29 140
c              dual-duct hot duct                                               HVAC29 141
            CFMent = CFMH / CFMCYC                                              -045f  174
            IF (<HOTDUCTCFMLOSS> .gt. 0.) THEN                                  -045f  175
              SELECT CASE (<AIR-LOSS-TYPE>)                                     -045f  176
              CASE (2)  ! proportional leakage                                  -045f  177
                SELECT CASE (<ZONE-TYPE>)                                       -045f  178
                CASE (2)  ! unconditioned, CFMent excludes loss                 -045f  179
                  HotDuctCFMLoss = CFMent                                       -045f  180
     &                           * <DUCT-AIR-LOSS>/(1.0-<DUCT-AIR-LOSS>)        -045f  181
                CASE (3)  ! plenum, CFMent includes loss                        -045f  182
                  HotDuctCFMLoss = CFMent * <DUCT-AIR-LOSS>                     -045f  183
                END SELECT                                                      -045f  184
              CASE DEFAULT                                                      -045f  185
                HotDuctCFMLoss = <HOTDUCTCFMLOSS>                               -045f  186
              END SELECT                                                        -045f  187
              CFMent = CFMent + HotDuctCFMLoss                                  -045f  188
            ENDIF                                                               -045f  189
            X = DUCTDT(TH,CFMent,1,2,0)                                         HVAC29 143
            IF (TH-X .GT. THMAXcoil)  THEN                                      HVAC29 144
              THmean = DUCTDT(THMAXcoil,CFMent,1,1,1)                           HVAC29 145
              THair  = THMAXcoil + DUCTDT(THMAXcoil,CFMent,1,1,0)               HVAC29 146
            ELSEIF (TH-X .LT. TMMAX)  THEN                                      -042i   19
              THmean = DUCTDT(TMMAX,CFMent,1,1,1)                               -042i   20
              THair  = TMMAX + DUCTDT(TMMAX,CFMent,1,1,0)                       -042i   21
              THair  = TMMAX + DUCTDT(TMMAX,CFMent,1,1,0)                       -042i   22
            ELSE                                                                HVAC29 147
              THmean = DUCTDT(TH,CFMent,1,2,1)                                  HVAC29 148
              THair  = TH                                                       HVAC29 149
            ENDIF                                                               HVAC29 150
c              If duct air losses exist without duct UAs, recalculate           HVAC29 151
c              the mean temperatures                                            HVAC29 152
            IF (<DUCTCFMLOSS> .GT. 0.  .AND. <DUCTUA> .EQ. 0.)                  HVAC29 153
     &        TCair = TC                                                        HVAC29 154
            IF (<HOTDUCTCFMLOSS> .GT. 0.  .AND. <HOTDUCTUA> .EQ. 0.)            HVAC29 155
     &        THair = TH                                                        HVAC29 156
          ENDIF                                                                 HVAC29 157
        ENDIF                                                                   HVAC29 158
c              Return losses                                                    -044c4  54
        IF (<sy:RETURN-UA> .gt. 0.  .and.  FON .gt. 0.                          -044c4  55
     &                              .and.  CFMCYC .gt. 0.)  THEN                -044c4  56
c              CFM and T entering return duct                                   -044c4  57
c              (not yet calculated in calling routine)                          -044c4  58
          CFMent = CFM - ECFM                                                   -044c4  59
          Tent   = TR / CFMent                                                  -044c4  60
          TRmean = DUCTDT(Tent,CFMent/CFMCYC,3,1,1)                             -044c4  61
        ENDIF                                                                   -044c4  62
c              Calculate beginning of hour extraction rates                     XFC1   278
c              due to losses.  CONFRC and HONFRC are the hourly                 XFC1   279
c              heating/cooling cfm fractions in RESVVT.  Note that              XFC1   280
c              HOTDUCTUA is non-zero only for dual-duct and RESVVT.             XFC1   281
c              Fraction of hour fans run                                        XFC1   282
        FANFRC  = CONFRC*FON                                                    XFC1   283
        FANFRCh = HONFRC*FONh                                                   XFC1   284
c              duct extraction rate                                             XFC1   285
        ERDUCT = (<DUCTUA>*(<TNOW>-TCmean)                                      HVAC29 159
     &              + CONS(1)*DuctCFMLoss*(<TNOW>-TCair)) * FANFRC              -045f  190
     &         + (<HOTDUCTUA>*(<TNOW>-THmean)                                   HVAC29 161
     &              + CONS(1)*HotDuctCFMLoss*(<TNOW>-THair)) * FANFRCh          -045f  191
     &         + (<sy:RETURN-UA>*(<TNOW>-TRmean))*Max(FANFRC, FANFRCh)          -044c4  63
c              duct conductivity                                                HVAC29 163
        UADUCT = <DUCTUA>*FANFRC + <HOTDUCTUA>*FANFRCh                          HVAC29 164
     &                           + <sy:RETURN-UA>*Max(FANFRC, FANFRCh)          -044c4  64
     1       + CONS(1)*(DuctCFMLoss*FANFRC + HotDuctCFMLoss*FANFRCh)            -045f  192
c              adjust for cycling fans                                          XFC1   293
        ERDUCT = ERDUCT * CFMCYC                                                XFC1   294
        UADUCT = UADUCT * CFMCYC                                                XFC1   295
c              set up scalar for plenum and non-plenum zones                    XFC1   296
        IF (<ZONE-TYPE> .EQ. 3)  THEN                                           XFC1   297
          ZRATIO = <AREA>/(<PLENMULT>+1.E-6)                                    XFC1   298
        ELSE                                                                    XFC1   299
          ZRATIO = 1.0 / ZMULT                                                  XFC1   300
        ENDIF                                                                   XFC1   301
c              beginning of hour losses and term to adjust losses w/ zone       XFC2   261
c              temperature swing                                                XFC2   262
        ERloss = ERDUCT * ZRATIO                                                XFC2   263
        UAloss = UADUCT * ZRATIO                                                -047i    6
      ENDIF    ! duct losses                                                    XFC1   311
c                                                                               XFC1   312
c              Now check for pipe, refrigeration, heat-pump, or other           XFC1   313
c              losses using the Xface blocks.  Note that these losses           XFC1   314
c              occur only in the designated zone, and are not prorated          XFC1   315
c              amoung the plenums                                               XFC1   316
      IF (<zn;MechLossList>  .GT. 0)  THEN                                      XFC1   317
        CALL GetDemands_ER(<zn;MechLossList>, 1, TDuctEnv, ZMULT,               XFC1   318
     &                     Xer, Xua)                                            XFC1   319
c              beginning of hour losses and term to adjust losses w/ zone       XFC2   274
c              temperature swing                                                XFC2   275
        ERloss = ERloss + Xer                                                   XFC2   276
        UAloss = UAloss + Xua                                                   -047i    7
      ENDIF                                                                     XFC1   329
                                                                                -045d   19
c              Check for natural ventilation exhausting into attic              -045d   20
      IF (IVENTF .eq. 1  .and.  ZP1 .eq. <VENT-EXH-ZONE>                        -045d   21
     &                   .and.  NVCFMS .gt. 0.) THEN                            -045d   22
        TnvExh = TNVCFMS / NVCFMS                                               -045d   23
        dTfan  = <NATURAL-VENT-KW>*VNTfrac*BtuKW / (CONS(1)*NVCFMS)             -045d   24
        TnvExh = TnvExh + dTfan                                                 -045d   25
        VNTCFM = NVCFMS / ZMULT                                                 -045d   26
        UAnv   = CONS(1) * VNTCFM                                               -045d   27
        ERnv   = UAnv*(<TNOW>-TnvExh)                                           -045d   28
c              beginning of hour losses and term to adjust losses w/ zone       -045d   29
c              temperature swing                                                -045d   30
        ERloss = ERloss + ERnv                                                  -045d   31
        UAloss = UAloss + UAnv                                                  -047i    8
      ENDIF                                                                     -045d   33
                                                                                -045d   34
c              Group the mechanical loss and conductivity terms                 -047i    9
c              with extraction terms                                            -047i   10
      IF (ERloss .ne. 0.  .or.  UAloss .ne. 0.) THEN                            -047i   11
        G0  = G0 + UAloss                                                       -047i   12
        F   = F  - ERloss + UAloss*<TNOW>                                       -047i   13
        FTD = F                                                                 -047i   14
      ENDIF                                                                     -047i   15
                                                                                -045b  168
c              Check for temperature-dependent equipment loads; if so then      -045b  169
c              calculate the differential between that calculated at the        -045b  170
c              LOADS temperature and the actual temperature.                    -045b  171
      IF (<zn:EquipKWfT> .ne. 0) THEN            ! dT-dependence exists         -047k   90
        MZ      = ISPB + (<NZSPACE>-1)*MZLEN     ! space ptr                    -045b  173
        MWF     = <MZWF>                         ! weight factor ptr            -045b  174
        MLH     = <MZLDHIST>                     ! weight history               -045b  175
        IM      = 1                              ! for ZTEMP                    -045b  176
        dQeqLat = 0.                             ! latent load                  -045b  177
        dQeqRad = 0.                             ! radiant load                 -045b  178
        dQeqCnv = 0.                             ! convective load              -045b  179
        dKWeq   = 0.                             ! electric load                -045b  180
        DO IL = 1,5                                                             -045b  181
          IF (<EQUIP-SCHEDULE> .eq. 0)  Exit                                    -045b  182
          IF (<EQUIP-PWR-FT>   .eq. 0)  Cycle                                   -045b  183
          SchV    = SchVal(<EQUIP-SCHEDULE>, 1.)                                -045b  184
          dQsch   = <ZQEQ1SUBZ> * SchV           ! load differential            -045b  185
     &            * (Max(0., CVAL(<EQUIP-PWR-FT>, TductEnv, xx))                -047h    2
     &             - Max(0., CVAL(<EQUIP-PWR-FT>,  <ZTEMP>, xx)))               -047h    3
          dQeqLat = dQeqLat + dQsch*<EQUIP-LATENT>  ! latent load               -045b  188
          dQsens  = dQsch  * <EQUIP-SENSIBLE>    ! sensible (extraction)        -045b  189
          dQrad   = dQsens * <EQUIP-RAD-FRAC>    !   weighted portion           -045b  190
          dQcnv   = dQsens - dQrad               !   convective portion         -045b  191
          dQeqRad = dQeqRad + dQrad                                             -045b  192
          dQeqCnv = dQeqCnv + dQcnv                                             -045b  193
          dKWeq   = dKWeq   + dQsch*kWBtu        ! electric demand              -045b  194
        ENDDO                                                                   -045b  195
c              weight the radiative portion                                     -045b  196
        dQeqWgt = <EQUIP-PEOP-V0>*dQeqRad + <EQUIP-PEOP-V1>*<QEQPS11>           -045b  197
     &                                     + <EQUIP-PEOP-V2>*<QEQPS12>          -045b  198
     &          + <EQUIP-PEOP-W1>*<QWGTEQPS11>                                  -045b  199
     &          + <EQUIP-PEOP-W2>*<QWGTEQPS12>                                  -045b  200
        dQeq    = dQeqWgt + dQeqCnv        ! weighted rad & convective          -045b  201
        F       = F   + dQeq                                                    -045b  202
        FTD     = FTD + dQeq                                                    -045b  203
      ENDIF                                                                     -045b  204
c                                                                               TEMDEV 284
C              CALC ZONE TEMP IF NO HEAT OR COOL                                TEMDEV 285
      TRY    = (F-ERMAXM) / G0                                                  -047i   16
C********************** run function : TEMDEV-1 ********************            TEMDEV 287
      IF( MSYSF(78) .NE. 0 )   CALL  FINTS( MSYSF(78), 1. )                     TEMDEV 288
C*******************************************************************            TEMDEV 289
C              THZ AND TCZ ARE THE THERMOSTATS SETPOINTS THIS HOUR              TEMDEV 290
      THZ    = -999.0                                                           TEMDEV 291
      TCZ    =  999.0                                                           TEMDEV 292
C              NO CONDITIONING OF SUNSPACES IN SINGLE ZONE                      TEMDEV 293
C              SYSTEMS (EXCEPT FOR BASEBOARDS)                                  TEMDEV 294
      IF (<ISUNSP>.EQ.1 .AND. (ICODE.EQ.2 .OR. ICODE.EQ.19 .OR.                 TEMDEV 295
     1    ICODE.EQ.28)) THEN                                                    TEMDEV 296
          <QNEW> = 0.                                                           TEMDEV 297
          <TNEW> = TRY                                                          TEMDEV 298
          IF (<ZONE-TYPE>.EQ.1) CALL SSBASB(ISVFLG)                             TEMDEV 299
          GO TO 60                                                              TEMDEV 300
      END IF                                                                    TEMDEV 301
C              IF THIS IS AN UNCONDITIONED ZONE SKIP                            TEMDEV 302
      IF(<ZONE-TYPE>.EQ.2)  GO TO 10                                            TEMDEV 303
C              IF THIS IS A PLENUM ZONE SKIP                                    TEMDEV 304
      IF( <ZONE-TYPE> .EQ. 3 )  GO TO 200                                       TEMDEV 305
C              IF FANS ARE OFF OR NO BASEBOARDS ON SKIP                         TEMDEV 306
      IF((<BASEBOARD-RATING>.LT.0.0).AND.(<BASEBOARD-CTRL>.EQ.1).AND.           HVAC12 264
     1   (HON*ZCapRbbrd .NE.0.0))  IBF = 1                                      HVAC12 265
      BBR    = 0.0                                                              HVAC12 266
      IF(IBF .NE. 0)   BBR = <BASEBOARD-RATING> * ZCapRbbrd                     HVAC12 267
      IF ((FONhc .EQ. 0.) .AND. (ZFONLY .EQ. 0.))  <ZFNLHR> = 0.                CCIG7  120
      IF ((FONhc .EQ. 0.) .AND. (IBF .EQ. 0) .AND. (ZFONLY .EQ. 0.))            CCIG7  121
     1 GO TO 10                                                                 TEMDEV 313
        IF (<DDS-TYPE> .EQ. 0  .OR. (<MINCFMR> .LE. 0.99))  THEN                HVAC29 166
          THZ = <THZ>                                                           HVAC29 167
          TCZ = <TCZ>                                                           HVAC29 168
          THR = <THROTTLING-RANGE>                                              HVAC29 169
        ELSE                                                                    HVAC29 170
c              constant-volume mixing box                                       HVAC29 171
          THZ = (<THZ>+<TCZ>) * 0.5                                             HVAC29 172
          THR = (<TCZ>-<THZ>) * 0.5                                             HVAC29 173
        ENDIF                                                                   HVAC29 174
C              SKIP IF SUM,FPH OR FANS OFF SINCE CONSTANT EXTRACTION PEAKS      TEMDEV 317
      IF ((ICODE .EQ. 1) .OR. (ICODE .EQ. 8) .OR. ((FONhc .EQ.0.) .AND.         CCIG7  122
     1    (ZFONLY .EQ.  0.)))  GO TO 14                                         TEMDEV 319
C              ADJUST COOLING CAPACITY                                          TEMDEV 320
C              CALC TEMP AT END OF HOUR IF AT FULL CAPACITY                     TEMDEV 321
      X = XC*0.5                                                                -047i   17
      Y = X * <TNOW>                                                            -044e2 168
      Z = ZC*0.5                                                                -047i   18
      TEND   = (F-<ERMAX>+Y)/(G0+X)                                             TEMDEV 341
C              IF THIS IS ABOVE THE BOTTOM OF THE COOLING RANGE SKIP            TEMDEV 342
      IF(TEND .GE. TCZ-THR)  GOTO 12                                            TEMDEV 343
C              CALC THE TEMP IF AT MIN CAPACITY THE HOUR                        TEMDEV 344
      TEND   = (F-ERMAXM+Z*<TNOW>)/(G0+Z)                                       TEMDEV 345
C              IF THIS IS ABOVE THE BOTTOM OF RANGE WE WILL NOT GO              TEMDEV 346
C              OUT OF RANGE.  IF IT IS BELOW RANGE IT WILL BE THE               TEMDEV 347
C              ENDING TEMP                                                      TEMDEV 348
      TEND   = AMIN1(TEND,TCZ-THR)                                              TEMDEV 349
C              ADJUST MAX EXTRACTION FOR DELTA T                                TEMDEV 350
   12 <ERMAX> = <ERMAX> - X*(<TNOW>-TEND)                                       TEMDEV 351
C              IF THE BOTTOM OF RANGE HAS NON-ZERO EXTRACTION, ADJUST IT ALSO   TEMDEV 352
      IF(ERMAXM .NE. 0.0)                                                       TEMDEV 353
     1ERMAXM = ERMAXM - Z*(<TNOW>-TEND)                                         TEMDEV 354
C              DO THE SAME FOR THE HEATING END                                  TEMDEV 355
      X = XH*0.5                                                                -047i   19
      Y = X * <TNOW>                                                            -044e2 171
      Z = ZH*0.5                                                                -047i   20
      TEND   = (F-<ERMIN>-BBR+Y)/(G0+X)                                         TEMDEV 375
      IF(TEND .LE. THZ+THR)  GOTO 13                                            TEMDEV 376
      TEND   = (F-ERMINM+Z*<TNOW>)/(G0+Z)                                       TEMDEV 377
      TEND   = AMAX1(TEND,THZ+THR)                                              TEMDEV 378
   13 <ERMIN> = <ERMIN> - X*(<TNOW>-TEND)                                       TEMDEV 379
C              CALL SUBROUTINE TO DO TEMPERATUE FLOAT AND EXTRACTION            TEMDEV 380
C              RATE CALCULATION FOR THE POWERED INDUCTION UNITS                 TEMDEV 381
      ITDPIU = 0                                                                TEMDEV 382
      IF ((ICODE .EQ. 23) .AND. (<TERMINAL-TYPE> .EQ. 4))  ITDPIU = 1           TEMDEV 383
      IF ((ITDPIU .EQ. 1) .AND. (TFZ .LE. TCZ-THR))                             TEMDEV 384
     1 ERMINM = ERMINM - Z*(<TNOW>-TEND)                                        TEMDEV 385
      IF ((ITDPIU .NE. 1) .OR. (TFZ .GT. TCZ-THR))  ERMINM = ERMAXM             TEMDEV 386
      IF ((ICODE .EQ. 23) .AND. (FON .EQ. 0.) .AND. (ZFONLY .EQ. 1))            TEMDEV 387
     1   ITDPIU = 1                                                             TEMDEV 388
      IF (ITDPIU .EQ. 1)  CALL TDVPIU                                           TEMDEV 389
      IF (ITDPIU .EQ. 1)  GO TO 49                                              CCIG9   34
      TRY    = (F-ERMAXM)/G0                                                    TEMDEV 391
C              IF IN HEATING RANGE SKIP                                         TEMDEV 392
   14 CONTINUE                                                                  TEMDEV 393
      IF(TRY .LT. THZ+THR) GOTO 20                                              TEMDEV 394
C              IF FANS OFF AND NO BASEBOARDS SKIP                               TEMDEV 395
      IF(FONhc .EQ. 0.0)  GOTO 10                                               CCIG7  123
C              IF IN COOLING RANGE SKIP                                         TEMDEV 397
C              Also skip if Natural Venting is ON independent of zone temp      NVfix    3
      IF((TRY .GT. TCZ-THR) .OR.                                                NVfix    4
     $   ((IVENTF.EQ.1 .OR. (NZ.EQ.1 .AND. IVENTG.EQ.1)) .AND.                  -42j    15
     $    (TRY .GT. TVZ)))  GOTO 30                                             NVfix    6
C              CHECK FOR SUB-COOLING OR OVERHEATING                             TEMDEV 399
      IF((ERMAXM.EQ.0.0).AND.(ERMINM.EQ.0.0))  GOTO 10                          TEMDEV 400
      HENOW  = ERMAXM                                                           TEMDEV 401
      ERMAX  = ERMAXM                                                           TEMDEV 402
      ERMIN  = ERMAXM                                                           TEMDEV 403
      <TSET> = THZ                                                              TEMDEV 404
      GOTO 45                                                                   TEMDEV 405
C              NO ACTIVE HEATING OR COOLING - ZONE FLOATS                       TEMDEV 406
   10 HENOW  = 0.                                                               -047i   21
      <QNEW> = 0.                                                               -047i   22
      <TNEW> = TRY                                                              TEMDEV 409
      <TSET> = THZ                                                              TEMDEV 410
      GOTO 50                                                                   TEMDEV 411
C              SET HEATING MODE                                                 TEMDEV 412
   20 <TSET> = THZ                                                              TEMDEV 413
      ERMIN  = <ERMIN>                                                          TEMDEV 414
      IF(<BASEBOARD-CTRL> .EQ. 1)                                               TEMDEV 415
     1ERMIN  = ERMIN + <BASEBOARD-RATING> * HON*ZCapRbbrd                       HVAC12 268
      ERMAX  = ERMINM                                                           TEMDEV 417
      GOTO 40                                                                   TEMDEV 418
C              COOLING MODE                                                     TEMDEV 419
C              IF COOLING BY NATURAL VENTILATION                                TEMDEV 420
   30 IF (IVENTF.EQ.1 .OR. (NZ.EQ.1 .AND. IVENTG.EQ.1)) THEN                    -42j    16
C              Calc real nat vent CFM for this zone                             NVfix    7
          IF (<VENT-METHOD>.EQ.1) THEN                                          NVfix    8
            VNTCFMx= <NATURAL-VENT-AC>*<VOLUME>/60.                             NVfix    9
          ELSE IF (<VENT-METHOD>.EQ.2) THEN                                     NVfix   10
            VNTCFMx= <VENT-AREA>*SQRT(<WS-VENT-COEF>*<WS-VENT-COEF>             NVfix   11
     1               *WNDSPD*WNDSPD + <STACK-VENT-COEF>                         -047a    6
     2               *<STACK-VENT-COEF>*ABS(<TNOW>-DBT))                        NVfix   13
            VMXCFM = <MAX-VENT-RATE>*<VOLUME>/60.                               NVfix   14
            VNTCFMx= AMIN1(VNTCFMx,VMXCFM)                                      NVfix   15
          END IF                                                                NVfix   16
          ERMAX = CONS(1)*VNTCFMx*(<TNOW>-DBT)                                  -047i   23
          X     = CONS(1)*VNTCFMx*0.5                                           -047i   24
          Y     = X * <TNOW>                                                    XFC2   328
C              CALC ZONE TEMPERATURE IF FULL VENTING                            XFC2   329
          TEND = (F-ERMAX+Y) / (G0+X)                                           XFC2   330
C              CALC CORRESPONDING EXTRACTION RATE                               XFC2   331
          ERMAX = ERMAX - X*(<TNOW>-TEND)                                       XFC2   332
C              IF CONTROL ZONE, CHECK IF VENTING WILL HOLD THE COOLING          TEMDEV 427
C              SET POINT.  IF IT WILL, SET THE VENTING FLAG FOR THE             TEMDEV 428
C              NONCONTROL ZONES.                                                TEMDEV 429
          IF (NZ.EQ.1 .AND. TEND.LE.TCZ+THR) THEN                               -045d   47
            IVENTF  = 1                                                         -045d   48
            NVCFMS  = 0.                                                        -045d   49
            TNVCFMS = 0.                                                        -045d   50
          ENDIF                                                                 -045d   51
      END IF                                                                    TEMDEV 431
C              CALC NATURAL VENTING EXTRACTION RATE                             TEMDEV 432
      IF (IVENTF.EQ.1) THEN                                                     TEMDEV 433
          HENOW = AMIN1(ERMAX,AMAX1(0.0,F-TVZ*G0))                              TEMDEV 434
          IF((NZ.EQ.1) .AND. (ERMAX.NE.0.0)) THEN                               -44c6    3
            VNTfrac = AMAX1(0.0,AMIN1(1.0,HENOW/ERMAX))                         -44c6    4
          ENDIF                                                                 -44c6    5
          QCV = QCV + HENOW*<MULTIPLIER>                                        TEMDEV 435
          QCVZ   = HENOW                                                        -42j    17
          <TSET> = TVZ                                                          TEMDEV 436
          VNTCFM = VNTCFMx                                                      -42j    18
          <TNEW>  = (F-HENOW) / G0                                              -045d   52
          NVCFMS  = NVCFMS  + VNTCFMx*ZMULT                                     -045d   54
          TNVCFMS = TNVCFMS + VNTCFMx*<TNEW>*ZMULT                              -047i   25
C              SKIP TO CALCULATION OF ZONE TEMPERATURE                          TEMDEV 437
          GO TO 45                                                              TEMDEV 438
      ELSE                                                                      NVfix   19
C              If venting off check if mechanical cooling was requested         NVfix   20
C              if not ... then do correct deadband calc's                       NVfix   21
        IF((NZ.EQ.1 .AND. IVENTG.EQ.1) .AND. (TRY .LE. TCZ-THR)) THEN           -42j    19
C              IF SUB-COOLING OR OVERHEATING go to that code                    NVfix   23
          IF((ERMAXM.EQ.0.0).AND.(ERMINM.EQ.0.0))  GOTO 10                      NVfix   24
C              otherwise just setup for floating                                NVfix   25
          HENOW  = ERMAXM                                                       NVfix   26
          ERMAX  = ERMAXM                                                       NVfix   27
          ERMIN  = ERMAXM                                                       NVfix   28
          <TSET> = THZ                                                          NVfix   29
          GOTO 45                                                               NVfix   30
        ENDIF                                                                   NVfix   31
      END IF                                                                    TEMDEV 439
C              NORMAL COOLING                                                   TEMDEV 440
      <TSET> = TCZ                                                              TEMDEV 441
      ERMAX  = <ERMAX>                                                          TEMDEV 442
      ERMIN  = ERMAXM                                                           TEMDEV 443
   40 CONTINUE                                                                  TEMDEV 444
C              SOLVE FOR THE ZONE LOAD FIRST                                    TEMDEV 445
      S      = (ERMAX-ERMIN)/AMAX1(THR*2.0,0.1)                                 TEMDEV 446
      DENOM  = S + G0                                                           TEMDEV 447
      W      = .5*(ERMAX+ERMIN) - S*<TSET>                                      TEMDEV 448
      HENOW  = (G0*W + S*F)/DENOM                                               TEMDEV 449
C              MAKE SURE LOAD IS BETWEEN MIN AND MAX                            TEMDEV 453
      HENOW  = AMIN1(HENOW,ERMAX)                                               TEMDEV 454
      HENOW  = AMAX1(HENOW,ERMIN)                                               TEMDEV 455
   45 CONTINUE                                                                  TEMDEV 456
C              SAVE EXTR RATE                                                   TEMDEV 457
      <QNEW> = HENOW                                                            TEMDEV 458
C              CALC ZONE TEMPERATURE                                            TEMDEV 459
      <TNEW> = (F-HENOW)/G0                                                     TEMDEV 460
C                                                                               TEMDEV 461
c              Zone overload this hour - dont count if within                   CCIG9   35
c              one degree of the edge of the throttling range.                  CCIG9   36
c              Check if zone temperature below heating throttling range         CCIG9   37
   49 IF (FONh .NE. 0.  .OR.  IBF .NE. 0)  THEN                                 CCIG9   38
        Tedge = THZ-THR - 1.0                                                   CCIG9   39
        IF (<TNEW> .LT. Tedge)  THEN                                            CCIG9   40
c              zone below heating throttling range - calculate the              CCIG9   41
c              extraction necessary to bring the zone to the edge of            CCIG9   42
c              the throttling range                                             CCIG9   43
          HEedge = F - Tedge*G0                                                 CCIG9   44
c              overload this hour                                               CCIG9   45
          QOVER = AMIN1(HEedge-HENOW, 0.)                                       CCIG9   46
        ENDIF                                                                   CCIG9   47
      ENDIF                                                                     CCIG9   48
c              check if zone temperature above cooling throttling range         CCIG9   49
      IF (FON .NE. 0.  .AND.  IVENTF .EQ. 0)  THEN                              CCIG9   50
        Tedge = TCZ+THR + 1.0                                                   CCIG9   51
        IF (<TNEW> .GT. Tedge)  THEN                                            CCIG9   52
c              zone above cooling throttling range - calculate the              CCIG9   53
c              extraction necessary to bring the zone to the edge of            CCIG9   54
c              the throttling range                                             CCIG9   55
          HEedge = F - Tedge*G0                                                 CCIG9   56
c              overload this hour                                               CCIG9   57
          QOVER = AMAX1(HEedge-HENOW, 0.)                                       CCIG9   58
        ENDIF                                                                   CCIG9   59
      ENDIF                                                                     CCIG9   60
c                                                                               CCIG9   61
C              THERMOSTATIC BASEBOARD CALCULATIONS                              TEMDEV 462
C                                                                               TEMDEV 463
   50 IF (IBF.EQ.0) GO TO 60                                                    TEMDEV 464
c              Deadband terminal extraction                                     -047a    7
      ERtrmDb = ERMINMsave - ZH*(<TNOW>-<TNEW>)                                 -047i   26
      IF (HENOW .ge. ERtrmDb)  GoTo 60                                          -047a    9
c              baseboard energy                                                 -047a   10
      QHBZ     = <BASEBOARD-RATING> * HON*ZCapRbbrd                             -047a   11
      QHBZ     = Max(QHBZ, HENOW-ERtrmDb)                                       -047a   12
c              net terminal load                                                -047a   13
      HENOW  = HENOW - QHBZ                                                     TEMDEV 472
      <QNEW> = HENOW                                                            TEMDEV 473
C              INCREMENT TOTAL SYSTEM BASEBOARD ENERGY                          TEMDEV 474
      IF (ISVFLG.NE.1 .AND. ISVFLG.NE.2) QHB=QHB+QHBZ*<MULTIPLIER>              TEMDEV 475
   60 CONTINUE                                                                  TEMDEV 476
c                                                                               XFC1   330
c              Calculate duct & other losses based on new zone temp             -047i   27
c              Note that these losses represent an extraction rate,             XFC1   332
c              i.e., a positive sign represents zone cooling.                   XFC1   333
      IF (ERloss .ne. 0.  .or.  UAloss .ne. 0.                                  -045b  205
     &                    .or.  <zn:EquipKWfT> .ne. 0) THEN                     -045b  206
c              repeat calculations if temperature has changed                   -047i   28
        ErrorT   = <TNEW> - TDuctEnv                                            -047i   29
        IF (Abs(ErrorT) .GT. 0.2)  THEN                                         -042i   24
          IF (IterLoss .gt. 5  .and.  ErrorT*ErrorT2 .lt. 0.)                   -042L4  28
     &      ErrorMult = ErrorMult * 0.5                                         -042L4  29
          ErrorT = ErrorT * ErrorMult                                           -042L4  30
          TDuctEnv = TDuctEnv + ErrorT                                          -042i   29
          ErrorT2  = ErrorT                                                     -042i   30
c              Quit if ErrorMult less than 0.01                                 -043a1  47
          IF (ErrorMult .gt. 0.01) THEN                                         -047i   30
c              Re-initialize terminal extractions and iterate                   -047i   31
            <ERMAX> = ERMAXsave                                                 -047i   32
            <ERMIN> = ERMINsave                                                 -047i   33
            ERMAXM  = ERMAXMsave                                                -047i   34
            ERMINM  = ERMINMsave                                                -047i   35
            IF (ICODE .EQ. 23)  THEN                                            -047i   36
              ERFOFF = ERFOFFsave                                               -047i   37
              ERFON  = ERFONsave                                                -047i   38
            ENDIF                                                               -047i   39
            GoTo 101                                                            -047i   40
          ENDIF                                                                 -047i   41
        ENDIF                                                                   XFC1   342
        TDuctEnv = <TNEW>                                                       -047i   42
c              Correct beginning of hour extraction rate for                    XFC2   334
c              average temperature during the hour                              XFC2   335
        ERloss  = ERloss  - UAloss*(<TNOW>-<TNEW>)                              XFC2   336
        IF (ISVFLG.EQ.1 .OR. ISVFLG.EQ.2) RETURN                                XFC1   343
        QLOSSZ = 0.                                                             XFC1   344
c              Duct losses - must be summed as they may accrue in               XFC1   345
c              multiple plenums and multiple systems                            XFC1   346
        IF (UADUCT .NE. 0.)  THEN                                               -044c4  65
          IF (FON .NE. 0.                                                       XFC1   348
     1      .AND. (<DUCTUA> .GT. 0.  .OR.  <DUCTCFMLOSS> .GT. 0.))  THEN        XFC1   349
c              single duct or cold duct in dual-duct - conduction               XFC1   350
c              and air loss relative to duct                                    XFC1   351
            QLOSSC = <DUCTUA> * (TDuctEnv-TCmean) * ZRATIO*CFMCYC*CONFRC        -047i   43
            QLOSSA = CONS(1)*DuctCFMLoss * (TDuctEnv-TCair)                     -047i   44
     &                      *ZRATIO*CFMCYC*CONFRC                               XFC1   354
            QLOSSZ = QLOSSZ + QLOSSC + QLOSSA                                   XFC1   355
            QLOSSC = QLOSSC * ZMULT                                             XFC1   356
            QLOSSA = QLOSSA * ZMULT                                             XFC1   357
            QLOSS  = QLOSSC + QLOSSA                                            XFC1   358
c              save conduction loss for SDSF or DDSF                            XFC1   359
            <QDUCT> = <QDUCT> + QLOSSC                                          XFC1   360
            IF (InitialFlg .EQ. 0)  THEN                                        Time   393
              IF (QLOSS .GT. 0)  THEN                                           XFC1   362
                <DUCTLOSSMO> = <DUCTLOSSMO> + QLOSS                             XFC1   363
                <DUCTLOSSYR> = <DUCTLOSSYR> + QLOSS                             XFC1   364
              ELSE                                                              XFC1   365
                <HOTDUCTLOSSMO> = <HOTDUCTLOSSMO> + QLOSS                       XFC1   366
                <HOTDUCTLOSSYR> = <HOTDUCTLOSSYR> + QLOSS                       XFC1   367
              ENDIF                                                             XFC1   368
            ENDIF                                                               XFC1   369
          ENDIF  ! cold duct                                                    XFC1   370
c              repeat for hot duct in dual-duct system or RESVVT                XFC1   371
          IF ((<DDS-TYPE> .GT. 0  .OR.  ICODE .EQ. 27)                          XFC1   372
     1         .AND.  FONh .NE. 0.  .AND.                                       XFC1   373
     2         (<HOTDUCTUA>.GT.0. .OR. <HOTDUCTCFMLOSS>.GT.0.))  THEN           XFC1   374
            QLOSSC = <HOTDUCTUA> * (TDuctEnv-THmean) * ZRATIO*CFMCYC*HONFRC     -047i   45
            QLOSSA = CONS(1)*HotDuctCFMLoss * (TDuctEnv-THair)                  -047i   46
     1                                        * ZRATIO*CFMCYC*HONFRC            XFC1   377
            QLOSSZ = QLOSSZ  + QLOSSC + QLOSSA                                  XFC1   378
            QLOSSC = QLOSSC * ZMULT                                             XFC1   379
            QLOSSA = QLOSSA * ZMULT                                             XFC1   380
            QLOSS  = QLOSSC + QLOSSA                                            XFC1   381
c              save conduction loss for DDSF                                    XFC1   382
            <QHOTDUCT> = <QHOTDUCT> + QLOSSC                                    XFC1   383
            IF (InitialFlg .EQ. 0)  THEN                                        Time   394
              QLOSS = MIN(QLOSS, 0.)                                            XFC1   385
              <HOTDUCTLOSSMO> = <HOTDUCTLOSSMO> + QLOSS                         XFC1   386
              <HOTDUCTLOSSYR> = <HOTDUCTLOSSYR> + QLOSS                         XFC1   387
            ENDIF                                                               XFC1   388
          ENDIF  ! hot duct                                                     XFC1   389
c              Return losses                                                    -044c4  66
          IF (<sy:RETURN-UA> .gt. 0.)  THEN                                     -044c4  67
            QLOSSC = <sy:RETURN-UA> * (TDuctEnv-TRmean)                         -047i   47
     &                            * ZRATIO*CFMCYC*Min(1., CONFRC+HONFRC)        -044c4  69
            QLOSSZ = QLOSSZ + QLOSSC                                            -044c4  70
            QLOSSC = QLOSSC * ZMULT                                             -044c4  71
            QLOSS  = QLOSSC                                                     -044c4  72
c              save conduction loss for SDSF or DDSF                            -044c4  73
            <sy.QductRet> = <sy.QductRet> + QLOSSC                              -044c4  74
            IF (InitialFlg .EQ. 0)  THEN                                        -044c4  75
              IF (QLOSS .GT. 0)  THEN                                           -044c4  76
                <DUCTLOSSMO> = <DUCTLOSSMO> + QLOSS                             -044c4  77
                <DUCTLOSSYR> = <DUCTLOSSYR> + QLOSS                             -044c4  78
              ELSE                                                              -044c4  79
                <HOTDUCTLOSSMO> = <HOTDUCTLOSSMO> + QLOSS                       -044c4  80
                <HOTDUCTLOSSYR> = <HOTDUCTLOSSYR> + QLOSS                       -044c4  81
              ENDIF                                                             -044c4  82
            ENDIF                                                               -044c4  83
          ENDIF  ! return duct                                                  -044c4  84
        ENDIF    ! duct losses                                                  XFC1   390
c              Pipe, refrigeration, heat-pump, or other losses using            XFC1   391
c              the Xface blocks.                                                XFC1   392
        IF (<zn;MechLossList>  .GT. 0)  THEN                                    XFC1   393
          CALL GetDemands_ER(<zn;MechLossList>, 2, TDuctEnv, ZMULT,             XFC1   394
     &                     Qheat, Qcool)                                        XFC1   395
          QLOSSZ = QLOSSZ + Qheat + Qcool                                       XFC1   396
          <QHWPIPES>  = <QHWPIPES>  + Qheat * ZMULT                             XFC1   397
          <QCHWPIPES> = <QCHWPIPES> + Qcool * ZMULT                             XFC1   398
        ENDIF                                                                   XFC1   399
c              hourly report variables                                          TEMDEV 568
        QdistG = 0.                                                             TEMDEV 569
        QdistL = 0.                                                             TEMDEV 570
        DO  II=1,5                                                              -044c4  85
          QdistG = QdistG + AMAX1(<PIPE&DUCTLOSSES>, 0.)                        TEMDEV 572
          QdistL = QdistL + AMIN1(<PIPE&DUCTLOSSES>, 0.)                        TEMDEV 573
        ENDDO                                                                   TEMDEV 574
        QdistG = QdistG + Max(QLOSSA, 0.)  ! air leakage                        -045d   56
        QdistL = QdistL + Min(QLOSSA, 0.)                                       -045d   57
c              natural vent exhaust to unconditioned zone                       -045d   58
        IF (IVENTF .eq. 1  .and.  ZP1 .eq. <VENT-EXH-ZONE>)                     -045d   59
     &    QCVZ = CONS(1)*VNTCFM*(<TNEW>-TnvExh)                                 -047i   48
      ENDIF    ! duct and other losses                                          XFC1   400
c              end of pipe & duct calcs                                         TEMDEV 576
c                                                                               HVAC25 178
      IF (ISVFLG.EQ.1 .OR. ISVFLG.EQ.2) RETURN                                  HVAC25 179
C********************** run function : TEMDEV-2 ********************            HVAC25 180
      IF( MSYSF(79) .NE. 0 )   CALL  FINTS( MSYSF(79), 2. )                     HVAC25 181
C*******************************************************************            HVAC25 182
c                                                                               TEMDEV 577
C              IF CONTROL ZONE                                                  TEMDEV 578
      IF (NZ.EQ.1) THEN                                                         TEMDEV 579
C              IF NAT VENTING, TURN OFF THE SYSTEM                              TEMDEV 580
          IF (IVENTF.EQ.1) THEN                                                 TEMDEV 581
              FON = 0.                                                          TEMDEV 582
              CFMCYC = 0.                                                       TEMDEV 583
              <PASTWR> = HUMRAT                                                 TEMDEV 584
              <CL_COIL_EWB> = WBT                                               HVAC1  747
          END IF                                                                TEMDEV 586
C     SKIP IF LOAD HISTORY NOT REQUIRED                                         TEMDEV 587
          IF (<HEAT-TEMP-SCH>.NE.0 .AND. <COOL-TEMP-SCH>.NE.0                   TEMDEV 588
     1        .AND. SchVal(<VENT-TEMP-SCH>, 1.) .LT. 0.)  THEN                  Time   395
C                                                                               TEMDEV 590
C              SAVE LOAD HISTORY FOR VENT SET TEMP CALC                         TEMDEV 591
C              NDH = NUMBER OF DAYS OF HISTORY (FROM VENT-TEMP-SCH)             TEMDEV 592
C              <HT-CL-HIST> = LOAD HISTORY (FOR NDH*24 HOURS)                   TEMDEV 593
C                                                                               TEMDEV 594
C              REMOVE OLDEST VALUE FROM HISTORY SUM                             TEMDEV 595
              IV = <HIST-PTR> - (NDH * 24)                                      TEMDEV 596
              IF(IV .LT. 1) IV = IV + 96                                        TEMDEV 597
              IF(<HT-CL-HIST> .GT. 0.0)                                         TEMDEV 598
     $          <CL-SUM> = <CL-SUM> - <HT-CL-HIST>                              TEMDEV 599
              IF(<HT-CL-HIST> .LT. 0.0)                                         TEMDEV 600
     $          <HT-SUM> = <HT-SUM> + <HT-CL-HIST>                              TEMDEV 601
C              ADD CURRENT VALUE TO HISTORY SUM                                 TEMDEV 602
              IF(HENOW .GT. 0.0) <CL-SUM> = <CL-SUM> + HENOW                    TEMDEV 603
              IF(<CL-SUM> .LT. 1.0)  <CL-SUM> = 0.0                             TEMDEV 604
              IF(HENOW .LT. 0.0) <HT-SUM> = <HT-SUM> - HENOW                    TEMDEV 605
              IF(<HT-SUM> .LT. 1.0)  <HT-SUM> = 0.0                             TEMDEV 606
C              SAVE CURRENT VALUE AND ADVANCE POINTER                           TEMDEV 607
              IV = <HIST-PTR>                                                   TEMDEV 608
              <HT-CL-HIST> = HENOW                                              TEMDEV 609
              IV = IV + 1                                                       TEMDEV 610
              IF(IV .GT. 96)  IV = IV - 96                                      TEMDEV 611
              <HIST-PTR> = IV                                                   TEMDEV 612
          END IF                                                                TEMDEV 613
      END IF                                                                    TEMDEV 614
                                                                                -047o    1
c              Turn exhaust fan off if system fan off                           -047o    2
      IF (FON .eq. 0  .and.  <EXHAUST-SOURCE> .eq. 1)                           -047o    3
     &  Call ZoneExhaust(0, 0.)                                                 -047o    4
                                                                                -047o    5
C              SAVE CURRENT ZONE LOAD                                           TEMDEV 615
      <QPAST> = <QNOW>                                                          TEMDEV 616
      <QNOW> = <QNEW>                                                           TEMDEV 617
      <QBPAST2> = <QBPAST>                                                      TEMDEV 618
      <QBPAST> = QHBZ                                                           TEMDEV 619
C              SAVE SPACE TEMP                                                  CCIG9   62
      <TPAST2> = <TPAST>                                                        CCIG9   63
      <TPAST> = <TNOW>                                                          CCIG9   64
      <TNOW> = <TNEW>                                                           CCIG9   65
      TEMPS(4,P2)=<TNOW>                                                        CCIG9   66
      <FLAST> = F                                                               TEMDEV 629
      <GLAST0> = G0                                                             TEMDEV 630
      IF (QOVER .GT. 1.0)  THEN                                                 -113    41
        <IHROVERS>=1                                                            -113    42
        <pr.OvrldCl> = 1                                                        -047e    5
        QCUNMT = QCUNMT + QOVER                                                 -113    43
      ENDIF                                                                     -113    44
      IF (QOVER .LT. -1.0)  THEN                                                -113    45
        <IHROVERS>=1                                                            -113    46
        <pr.OvrldHt> = 1                                                        -047e    6
      ENDIF                                                                     -113    47
      <zn;QMechLossNow>  = ERloss                                               XFC2   355
c              Mechanical loss hourly report variables                          XFC2   356
      FCHPS(1) = ERloss                                                         XFC2   357
      FCHPS(2) = UAloss                                                         XFC2   358
c              temperature-dependent equip load                                 -045b  207
      IF (<zn:EquipKWfT> .ne. 0) THEN                                           -047k   91
        <QL>         = <QL> + dQeqLat        ! latent                           -045b  209
        <QS>         = <QS> + dQeq           ! sensible                         -045b  210
        <EQUIP-ELEC> = <EQUIP-ELEC> + dKWeq  ! equip elec                       -045b  211
        <ZKW>        = <ZKW>        + dKWeq                                     -045b  212
        JEM          = <EQUIP-E-MZ>          ! elec meter                       -045b  213
        <EQUIP-EM>   = <EQUIP-EM>   + dKWeq*ZMULT                               -045b  214
        <QEQPS12>    = <QEQPS11>             ! weight history                   -045b  215
        <QEQPS11>    = dQeqRad                                                  -045b  216
        <QWGTEQPS12> = <QWGTEQPS11>                                             -045b  217
        <QWGTEQPS11> = dQeqWgt                                                  -045b  218
      ENDIF                                                                     -045b  219
C********************** run function : TEMDEV-3 ********************            TEMDEV 653
      IF( MSYSF(80) .NE. 0 )   CALL  FINTS( MSYSF(80), 3. )                     TEMDEV 654
C*******************************************************************            TEMDEV 655
      RETURN                                                                    TEMDEV 656
C                                                                               TEMDEV 657
C              CALCULATE PLENUM ENERGY EXCHANGE                                 TEMDEV 658
C                                                                               TEMDEV 659
C              if air not through plenum skip                                   TEMDEV 660
  200 IF(<RETURN-AIR-PATH> .NE. 2)  GOTO 10                                     TEMDEV 661
c              Estimate CFM through the plenum.  Note that RCFM                 TEMDEV 662
c              does not include duct air lost in the plenums - air loss         TEMDEV 663
c              is included in the extraction rate terms                         TEMDEV 664
      IF (FONhc .NE. 0.)  THEN                                                  CCIG9   67
        ACFM   = RCFM*<AREA>/(<PLENMULT>+1.E-6)                                 TEMDEV 666
      ELSE                                                                      TEMDEV 667
        ACFM = 0.                                                               TEMDEV 668
      ENDIF                                                                     TEMDEV 669
C              calculate the maximum heat exchange                              TEMDEV 670
      ERMAX = CONS(1)*ACFM*(<TNOW>-TR)                                          -047i   49
      X     = CONS(1)*ACFM*0.5                                                  -047i   50
      Y     = X * <TNOW>                                                        TEMDEV 673
c              floating temperature                                             TEMDEV 674
      TRY   = (F - ERMAX + Y) / (G0 + X)                                        TEMDEV 675
c              and average heat extraction                                      TEMDEV 676
      HENOW = ERMAX - X*(<TNOW>-TRY)                                            TEMDEV 677
      <QNEW> = HENOW                                                            TEMDEV 678
      <TNEW> = TRY                                                              TEMDEV 679
c              If no thermostatic baseboards                                    TEMDEV 680
      IF((<BASEBOARD-CTRL>.NE.1) .OR. (<HEAT-TEMP-SCH>.EQ.0) .OR.               TEMDEV 681
     1   (<BASEBOARD-RATING>.EQ.0.) .OR. (HON*ZCapRbbrd .EQ. 0)) GOTO 60        HVAC12 270
c              thermostatic baseboards in plenum                                TEMDEV 683
c              Pick up the setpoint                                             TEMDEV 684
      THZ    = <THZ>                                                            TEMDEV 685
      THR    = <THROTTLING-RANGE>                                               TEMDEV 686
      <TSET> = THZ                                                              TEMDEV 687
c              if above setpoint, we already have the answer                    TEMDEV 688
      IF(TRY .GE. THZ+THR)  GOTO 60                                             TEMDEV 689
c              see where we go if basebs are at max output                      TEMDEV 690
      TEND   = (F-(ERMAX+<BASEBOARD-RATING>*ZCapRbbrd)+Y) / (G0+X)              HVAC12 271
c              if this puts us above range, set end at top of range.            TEMDEV 692
c              otherwise, we go where we go                                     TEMDEV 693
      TEND   = AMIN1(TEND,THZ+THR)                                              TEMDEV 694
c              now correct steady state exchange for drift                      TEMDEV 695
      ERMAX  = ERMAX - X*(<TNOW>-TEND)                                          TEMDEV 696
c              output at bottom of range is this plus baseb rating              TEMDEV 697
      ERMIN  = ERMAX + <BASEBOARD-RATING>*ZCapRbbrd                             HVAC12 272
c              now solve the linear equations of ext and T'stat                 TEMDEV 699
      S      = (ERMAX-ERMIN)/AMAX1(THR*2.0,0.1)                                 TEMDEV 700
      DENOM  = S + G0                                                           TEMDEV 701
      W      = 0.5*(ERMAX+ERMIN) - S*<TSET>                                     TEMDEV 702
      HENOW  = (G0*W + S*F)/DENOM                                               TEMDEV 703
      HENOW  = AMIN1(HENOW,ERMAX)                                               TEMDEV 705
      HENOW  = AMAX1(HENOW,ERMIN)                                               TEMDEV 706
      <TNEW> = (F-HENOW)/G0                                                     TEMDEV 707
c              correct ERMAX again                                              TEMDEV 708
      ERMAX = CONS(1)*ACFM*(<TNOW>-TR) - X*(<TNOW>-<TNEW>)                      -047i   51
c              Plenum overload this hour - dont count if within                 CCIG9   68
c              one degree of the edge of the throttling range.                  CCIG9   69
      Tedge = THZ-THR - 1.0                                                     CCIG9   70
      IF (<TNEW> .LT. Tedge)  THEN                                              CCIG9   71
c              plenum below heating throttling range - calculate the            CCIG9   72
c              extraction necessary to bring the zone to the edge of            CCIG9   73
c              the throttling range                                             CCIG9   74
        HEedge = F - Tedge*G0                                                   CCIG9   75
c              overload this hour                                               CCIG9   76
        QOVER = AMIN1(HEedge-HENOW, 0.)                                         CCIG9   77
      ENDIF                                                                     CCIG9   78
C              CALC PART THAT BASEB SUPPLIED                                    TEMDEV 710
      QHBZ   = AMIN1(0.0,HENOW-ERMAX)                                           TEMDEV 711
      QHB    = QHB + QHBZ*<MULTIPLIER>                                          TEMDEV 712
C              IF BASEBOARDS ARE ELECTRIC                                       TEMDEV 713
      IF(<BASEBOARD-SOURCE>.EQ.1)  THEN                                         TEMDEV 714
        X      = QHBZ*KWBTU                                                     TEMDEV 715
        ZKW    = ZKW    - X                                                     TEMDEV 716
        SKWQH  = SKWQH  - X * <MULTIPLIER>                                      TEMDEV 717
        JEM       = <HEAT-E-MZ>                                                 HVAC6  818
        <HEAT-EM> = <HEAT-EM> - X*ZMULT                                         HVAC6  819
      ENDIF                                                                     TEMDEV 719
C              IF BASEBOARDS ARE GAS OR OIL                                     TEMDEV 720
      IF((<BASEBOARD-SOURCE>.EQ.2).OR.(<BASEBOARD-SOURCE>.EQ.3))  THEN          HVAC6  820
        CALL FURNAC(QHBZ,<BASEBOARD-RATING>,<BASEBOARD-SOURCE>,                 HVAC6  821
     2                 <MULTIPLIER>)                                            HVAC6  822
        JEM       = <AUX-E-MZ>                                                  HVAC6  823
        <AUX-EM>  = <AUX-EM> + FurnAuxkW                                        HVAC6  824
        JFM       = <HEAT-F-MZ>                                                 HVAC6  825
        <HEAT-FM> = <HEAT-FM> - FFUEL                                           HVAC6  826
        <AUX-FM>  = <AUX-FM>  + FurnAuxFuel                                     HVAC6  827
      ENDIF                                                                     HVAC6  828
C              NOW PASS TO THE RETURN AIR THE REST OF THE EXCHANGED HEAT        TEMDEV 724
      HENOW  = ERMAX                                                            TEMDEV 725
      <QNEW> = HENOW                                                            TEMDEV 726
      GOTO 60                                                                   TEMDEV 727
C                                                                               TEMDEV 728
C              NO VARIABLE TEMP CALCULATION                                     TEMDEV 729
C                                                                               TEMDEV 730
  100 ACFM   = RCFM*<AREA>*<MULTIPLIER>/<PLENMULT>                              TEMDEV 731
      HENOW  = <QS>+<QPNOW> - ERloss                                            -047i   52
C              CALC LOAD NOT MET TO HOLD SETPOINT                               TEMDEV 733
      QOVER  = AMAX1(HENOW-<ERMAX>,0.)                                          TEMDEV 734
      QOVER  = AMIN1(HENOW-<ERMIN>,QOVER)                                       TEMDEV 735
      IF (QOVER .GT. .01*<ERMAX>)  <IHROVERS>=1                                 TEMDEV 736
      IF (QOVER .LT. .01*<ERMIN>)  <IHROVERS>=1                                 TEMDEV 737
C              MAKE SURE LOAD IS BETWEEN MIN AND MAX                            TEMDEV 738
      HENOW  = AMIN1(HENOW,<ERMAX>)                                             TEMDEV 739
      HENOW  = AMAX1(HENOW,<ERMIN>)                                             TEMDEV 740
      <QNEW> = HENOW                                                            TEMDEV 741
      <TSET> = <TLOADS>                                                         TEMDEV 742
      GOTO 50                                                                   TEMDEV 743
      END                                                                       TEMDEV 744
      SUBROUTINE TSOLVE                                                         TSOLVE   2
C                                                                               TSOLVE   3
C              THIS ROUTINE SOLVES FOR THE TEMPERATURES ON THE GLASS            TSOLVE   4
C              AND WALL SURFACES AND FOR THE CONVECTION FLUX OUT OF             TSOLVE   5
C              THE TROMBE CHANNEL BY ITERATING BACK AND FORTH BETWEEN           TSOLVE   6
C              THE HEAT BALANCE (EBAL) AND THE CONVECTION FLUX.                 TSOLVE   7
C                                                                               TSOLVE   8
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                 IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                        /FILES/  3
     2               , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                   /FILES/  4
     3                 IHRREP(3), IHRPAS(2)                                     /FILES/  5
      common  /FNSYS/  ISKIPS, MSYSF(120)                                       /FNSYS/  2
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      COMMON  /TIME  / IDOY, IYR, IMO, IDAY, IHR,                               Time     4
     &                 ISCMO, ISCDAY, ISCHR, IDOW, ISCDOW, iDSdates(6),         -044e5   1
     &                 iTimeFlg, iDSFlg, iDDFlg, InitialFlg, LeapYr,            Time     6
     &                 CLOCK(10), MONDSC(13), MONLEN(12), MONSDA(12)            HR      12
      COMMON  /TROMWL/ SUMDTX,SUMDTY,QCTOT,QLC0,QGK0,QCGUES,QVNTBG,             /TROMWL/ 2
     1                 VOLVNT,AMF,UCHAN,UCHANC,HRGW,TAIRIN,TZONE,               /TROMWL/ 3
     2                 TGOUT,QCVG,QCVW,IVMODE,TFO,RHO,MWH,FILMU,MRX,CTRM        /TROMWL/ 4
     1    , TAVR, TGLASS, TUNDER, UNIN1                                         /TROMWL/ 5
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
C                                                                               TSOLVE  16
      DATA ITMAX /20/                                                           TSOLVE  17
C                                                                               TSOLVE  18
      UCHANC = 0                                                                TSOLVE  19
C********************** run function : TSOLVE-0 ********************            TSOLVE  20
      IF( MSYSF(81) .NE. 0 )   CALL  FINTS( MSYSF(81), 0. )                     TSOLVE  21
C*******************************************************************            TSOLVE  22
C              CHECK FOR VENT OPEN OR CLOSED BY LOOKING                         TSOLVE  23
C              AT THE VENT SCHEDULE                                             TSOLVE  24
      IF (<TROM-VENT-SCH> .LE. 0)  GO TO 5                                      TSOLVE  25
      IF (SchVal(<TROM-VENT-SCH>, 1.) .GT. 0.)  GOTO 10                         Time   396
C              VENTS ARE SCHEDULED CLOSED OR THERE IS NOT ENOUGH                TSOLVE  28
C              ENERGY TO DRIVE THE CONVECTION                                   TSOLVE  29
    5 CONTINUE                                                                  TSOLVE  30
      IVMODE = 0                                                                TSOLVE  31
      QCTOT  = 0.                                                               TSOLVE  32
      QCGUES = 0.                                                               TSOLVE  33
      AMF    = 0.                                                               TSOLVE  34
      VOLVNT = 0.                                                               TSOLVE  35
      QVNTBG = 0.0                                                              TSOLVE  36
C              CALCULATE CONVECTION ACROSS CHANNEL FOR CLOSED                   TSOLVE  37
C              VENT CASE                                                        TSOLVE  38
      CALL CONCHN(AA(MWH+1),<TGLASSIN>,PATM,<WALL-HEIGHT>,<CHAN-WIDTH>,         TSOLVE  39
     1            UCHANC)                                                       TSOLVE  40
      CALL EBAL                                                                 TSOLVE  41
      GOTO  2000                                                                TSOLVE  42
C                                                                               TSOLVE  43
   10 CONTINUE                                                                  TSOLVE  44
C              VENT SCHEDULE SAYS THE VENTS ARE OPEN.  CHECK TO SEE IF          TSOLVE  45
C              THERE IS ENOUGH ENERGY TO DRIVE THE CONVECTION IN                TSOLVE  46
C              THE TROMBE WALL CHANNEL.                                         TSOLVE  47
      IVMODE = 1                                                                TSOLVE  48
C              QVNTBG IS THE LOWER LIMIT ON CONVECTION                          TSOLVE  49
      QCGUES = QVNTBG                                                           TSOLVE  50
      CALL EBAL                                                                 TSOLVE  51
C                                                                               TSOLVE  52
C              CHECK IF GLASS TEMPERATURES ARE TOO LOW                          TSOLVE  53
      TAB    = .5*(<TGLASSIN>+AA(MWH+1))                                        TSOLVE  54
      TAP10  = TAIRIN+10.                                                       TSOLVE  55
      IF(TAB.GT.TAP10)GO TO 20                                                  TSOLVE  56
C                                                                               TSOLVE  57
C              VENTS ARE CLOSED DUE TO LACK OF SOLAR                            TSOLVE  58
C              GO TO 5 AND CALCULATE FOR THE VENT CLOSED CASE                   TSOLVE  59
      GO TO 5                                                                   TSOLVE  60
C                                                                               TSOLVE  61
   20 CONTINUE                                                                  TSOLVE  62
C              THERE IS ENOUGH ENERGY TO DRIVE THE CONVECTION. GO               TSOLVE  63
C              THROUGH ITERATIONS AND SOLVE FOR TEMPERATURES AND                TSOLVE  64
C              FLUXES.                                                          TSOLVE  65
      IVMODE = 1                                                                TSOLVE  66
      QCLO    = 0.                                                              TSOLVE  67
C              SET THE UPPER LIMIT ON CONVECTION (QCHI) USING THE               TSOLVE  68
C              TEMPS CALCULATED FOR THE SMALLEST POSSIBLE FLOW CASE             TSOLVE  69
      IF (<TGLASSIN>.LT.TAIRIN) <TGLASSIN>=TAIRIN+5.                            TSOLVE  70
      IF (AA(MWH+1).LT.TAIRIN) AA(MWH+1)=TAIRIN+5.                              TSOLVE  71
      CALL BERNOU                                                               TSOLVE  72
      QCHI   = QCTOT                                                            TSOLVE  73
C              MAKE THE FIRST CONVECTION GUESS                                  TSOLVE  74
      QCGUES = (3./5.)*(QCHI-QVNTBG)+QVNTBG                                     TSOLVE  75
      HCGW    = 0.                                                              TSOLVE  76
      ITER    = 0                                                               TSOLVE  77
      QCTOT  = 0.                                                               TSOLVE  78
C              ITERATION LOOP                                                   TSOLVE  79
      NRNOCV = 0                                                                TSOLVE  80
  100 CONTINUE                                                                  TSOLVE  81
      ITER   = ITER + 1                                                         TSOLVE  82
      IF(ITER .GT. ITMAX) GO TO 1000                                            TSOLVE  83
      CALL EBAL                                                                 TSOLVE  84
C              ALLOW CALC TO BUMP INTO LOWER LIMIT 5 TIMES                      TSOLVE  85
C              BEFORE DECIDING VENTS ARE CLOSED                                 TSOLVE  86
      TAB    = .5*(<TGLASSIN>+AA(MWH+1))                                        TSOLVE  87
      IF(TAB.GT.TAP10)GO TO 110                                                 TSOLVE  88
      IF (<TGLASSIN>.GT.AA(MWH+1)) GO TO 102                                    TSOLVE  89
      <TGLASSIN>=2.*(TAIRIN+10.01)-AA(MWH+1)                                    TSOLVE  90
      GO TO 103                                                                 TSOLVE  91
  102 AA(MWH+1)=2.*(TAIRIN+10.01)-<TGLASSIN>                                    TSOLVE  92
  103 CONTINUE                                                                  TSOLVE  93
      NRNOCV = NRNOCV+1                                                         TSOLVE  94
      IF(NRNOCV.GT.5) GO TO 5                                                   TSOLVE  95
  110 CONTINUE                                                                  TSOLVE  96
      CALL BERNOU                                                               TSOLVE  97
C              DELTAQ IS THE DIFFERENCE BETWEEN THE GUESS AND THE               TSOLVE  98
C              CALCULATED CONVECTION                                            TSOLVE  99
  115 DELTAQ = QCTOT - QCGUES                                                   TSOLVE 100
C              CHECK FOR CONVERGENCE                                            TSOLVE 101
      DQMAX  = ABS(0.01*QCGUES)                                                 TSOLVE 102
      IF(ABS(DELTAQ).LT.DQMAX) GO TO 2000                                       TSOLVE 103
C              MAKE NEW ESTIMATE OF QCGUES                                      TSOLVE 104
      IF(ITER.EQ.1) GO TO 155                                                   TSOLVE 105
      DY     = QCTOT-YOLD                                                       TSOLVE 106
      DX     = QCGUES-XOLD                                                      TSOLVE 107
      XNEW   = ((XOLD*DY)-(YOLD*DX))/(DY-DX)                                    TSOLVE 108
  155 XOLD   = QCGUES                                                           TSOLVE 109
      YOLD   = QCTOT                                                            TSOLVE 110
      IF(ITER.GT.1) QCGUES=XNEW                                                 TSOLVE 111
      IF(ITER.EQ.1) QCGUES = QCGUES + (0.50*DELTAQ)                             TSOLVE 112
      IF(QCGUES.LT.QVNTBG) QCGUES=QVNTBG                                        TSOLVE 113
      IF(QCGUES.GT.QCHI) QCGUES=QCHI                                            TSOLVE 114
      GO TO 100                                                                 TSOLVE 115
C                                                                               TSOLVE 116
 1000 CONTINUE                                                                  TSOLVE 117
C              NO CONVERGENCE                                                   TSOLVE 118
      WRITE(IOUTPT,2003) ITER,IHR,IDAY,IMO                                      TSOLVE 119
C                                                                               TSOLVE 120
 2000 CONTINUE                                                                  TSOLVE 121
C              PROGRAM CONVERGED                                                TSOLVE 122
C********************** run function : TSOLVE-1 ********************            TSOLVE 123
      IF( MSYSF(82) .NE. 0 )   CALL  FINTS( MSYSF(82), 1. )                     TSOLVE 124
C*******************************************************************            TSOLVE 125
      RETURN                                                                    TSOLVE 126
C                                                                               TSOLVE 127
 2003 FORMAT (1X,27HNO CONVERGENCE AFTER ITER =,I2,4X,7HHOUR = ,I2,             TSOLVE 128
     1        4X,6HDAY = ,I2,4X,8HMONTH = ,I2)                                  TSOLVE 129
      END                                                                       TSOLVE 130
      SUBROUTINE UNITH                                                          UNITH    2
C                                                                               UNITH    3
C                            UNIT HEATER                                        UNITH    4
C                                                                               UNITH    5
C              DEVELOPED BY                                                     -130     1
C                            J. J. Hirsch & S. D. Gates                         -130     2
C                            James J. Hirsch & Associates                       -130     3
C                            Camarillo, California                              -130     4
C              BASED UPON CODE DEVELOPED BY J. J. Hirsch and                    -130     5
C                            W. F. Buhl                                         -130     6
C                            A. E. Erdem                                        -130     7
C                            Lawrence Berkeley National Laboratory              -130     8
C                            University of California                           -130     9
Copyright (c) 1997 by James J. Hirsch. All Rights Reserved. Unpublished         -130    10
c rights reserved under the Copyright Laws of the United States.                -130    11
c RESTRICTED RIGHTS NOTICE: Government use, reproduction or disclosure          -130    12
c is subject to restrictions as set forth in Rights in Data (g)(3) in           -130    13
c UC/LBL purchase order 4607010 with J.J. Hirsch & Associates.                  -130    14
C                                                                               UNITH    7
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON  /ENDUSE/ SUPPKW, HEATKW                                           HVAC27   1
      COMMON /FFUEL/ FFUEL, FurnAuxFuel, FurnAuxkW, PLRF                        /FFUEL/  2
      common  /FNSYS/  ISKIPS, MSYSF(120)                                       /FNSYS/  2
      COMMON  /HRREP / Irb, Ihrp, Lrb, Lhrp, Nrb, Nhrp, IVTLIM(3,50),           HR       5
     &                 IGRPtr, IBRPtr, IRSch, IRSchT(5),                        HR       6
     &                 NHRTyp(3), ITBUF(3), ITBUFB(3), ITBUFE(3),               HR       7
     &                 IHREOF, ICDFLG                                           HR       8
      COMMON  /MISCD / TEMPS(4,9999),CONS(5),TEMPSL(9999),                      -048a   10
     1                 BLDGQH,BLDGQC,BLDGQL,BLDGP,BPMULT,                       /MISCD/  3
     $                 DBTMIN,DBTMAX,WMIN,WMAX,NSPZ(9999),                      -048a   11
     3                 DQ, DTP, DTR, DTS, FPI, PLRCC , POM, TC2, TDM,           /MISCD/  5
     4                 TRA,WCOL,WCOLM,WMM,YPI,KWBTU,BTUKW,UNFILD,Unusedm        RemPA   45
      REAL             KWBTU                                                    /MISCD/  7
      COMMON  /PLANTD/ QHMP,TMP,CFMP,QHPP,CFMPP,                                /PLANTD/ 2
     1                 QHZP,TZP,DHWPKW,DHWPLF,DHWQRP                            RemPA   46
      REAL             PLANTD(10)                                               RemPA   47
      EQUIVALENCE      (PLANTD(1), QHMP)                                        RemPA   48
      COMMON  /PTRPLT/ Ipm,Ilp,Ich,Ibl,Idw,Itw,Ipv,Ign,Itk,Ihx,                 PV       1
     &                 Iec,Ilm,Iem,Ifm,Ism,Icm,Imm,Imc,Igl,Isp2,                XFC2     1
     &                 Ispare(5),  Ipe,                                         HVAC19   3
     &                 Npm,Nlp,Nch,Nbl,Ndw,Ntw,Npv,Ngn,Ntk,Nhx,                 PV       2
     &                 Nec,Nlm,Nem,Nfm,Nsm,Ncm,Nmm,Nmc,Ngl,Nsp2,                XFC2     2
     &                 Nspare(5),  Npe,                                         HVAC19   6
     &                 Lpm,Llp,Lch,Lbl,Ldw,Ltw,Lpv,Lgn,Ltk,Lhx,                 PV       3
     &                 Lec,Llm,Lem,Lfm,Lsm,Lcm,Lmm,Lmc,Lgl,Lsp2,                XFC2     3
     &                 Lspare(5),  Lpe,                                         HVAC19   9
     &                 Jpm,Jlp,Jch,Jbl,Jdw,Jtw,Jpv,Jgn,Jtk,Jhx,                 PV       4
     &                 Jec,Jlm,Jem,Jfm,Jsm,Jcm,    Jmc,Jgl,                     HVAC19  11
     &                 Jpe, kpr, NumMeters, NumIntHX                            XFC1     1
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      COMMON  /SYSTD / TH,TC,TM,TR,QH,QC,QHZ,QCZ,QHB,QHP,QHUM,                  /SYSTD/  2
     1                 QDHUM,TCMIN,THMAX,QLSUM,QPSUM,CFM,CFMH,CFMC,             /SYSTD/  3
     2                 RCFM,ECFM,CINF,FON,HON,CON,BON,SCONS(3),PH,PC,           /SYSTD/  4
     3                 SKW,FANKW,unused1,WR,WM,WCOIL,WW,PO,D,                   -046f    1
     4                 FTEMP,TCR,QHR,RfanPumpKW,SGAS,SKWQH,SKWQC,QCLAT,         -131    23
     5                 SFKW,RFKW,FONNGT,WSURF,RWalkinQ,TSURF,TRh,               -131    24
     6                 CBF,CBF1,CBF2,EON,PLRCFM,PLRC,PLRH,QCM1,                 /SYSTD/  8
     7                 QCM2,QHM1,EIRM1,EIRM2,EIR,OFKW,QCT,QCS,                  /SYSTD/  9
     8                 WRMAX,WRMIN,CFMRAT,QdistG,QdistL,RON,QHT,                /SYSTD/ 10
     9                 TPOMIN,POMIN,QHSUP,QRSENS,QRLAT,QRREC,QRREJ,             /SYSTD/ 11
     1                 RCOMKW,RDEFKW,RAUXKW,ECFMP,CFMIN,CINFP,DT,DW,            /SYSTD/ 12
     2                 EWB,IC,NATTSP,Q,RETR,SLOAD,QLSUMP,T,TCHUM,TEND,          /SYSTD/ 13
     3                 TS,hgbmin,HPDefE,EconoOnly,TDuctEnv,                     -044e1   1
     4                 QCUNMT,CapRh,CapRph,CapRc                                HVAC25   3
      REAL             SYSTD(113)                                               HVAC19  13
      EQUIVALENCE      (SYSTD(1),TH)                                            RemPA   65
      COMMON  /TIME  / IDOY, IYR, IMO, IDAY, IHR,                               Time     4
     &                 ISCMO, ISCDAY, ISCHR, IDOW, ISCDOW, iDSdates(6),         -044e5   1
     &                 iTimeFlg, iDSFlg, iDDFlg, InitialFlg, LeapYr,            Time     6
     &                 CLOCK(10), MONDSC(13), MONLEN(12), MONSDA(12)            HR      12
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
      COMMON  /ZONED / EXCFM,FH,FC,CFMZ,QHBZ,QOVER,THZ,TCZ,ERMAX,ERMIN,         /ZONED/  2
     1                 TRY,FTD,CORINT,G0,G1,G2,G3,SIGMAG,TL,ZQHR,TAVE,          /ZONED/  3
     2                 ZQH,ZQC,FCHPS(15),ACFM,ZKW,TCMINZ,THMAXZ,                /ZONED/  4
     3                 ERMAXM,ERMINM,THR,CSSCND,CSSVEC,HENOW,QGWIN,             /ZONED/  5
     4                 QSNABT,QGOPWL,QGVEC,CFMCVT,SSFPT,CFMVNT,ZFANKW,          /ZONED/  6
     5                 ZKWCBT,ZKWHBT,ZCapRbbrd, XC,ZC,XH,ZH                     -044e2   7
      REAL ZONED(63)                                                            -044e2   8
      EQUIVALENCE (ZONED(1),EXCFM)                                              /ZONED/  9
      V(DB,W,P) = 0.754*(DB+459.7)*(1.0+1.605*W)/P                              V        2
C              UNIT HEATER AND VENTILATOR CAN PROVIDE NO ACTIVE COOLING         UNITH   21
      CON    = 0.                                                               UNITH   22
C              SET ZP1 TO POINT TO THE FIRST ZONE                               UNITH   23
      ZP1    = ISZ                                                              UNITH   24
C********************** run function : UNITH-0 *********************            UNITH   25
      IF( MSYSF(83) .NE. 0 )   CALL  FINTS( MSYSF(83), 0. )                     UNITH   26
C*******************************************************************            UNITH   27
C                                                                               UNITH   28
C              LOOP THROUGH THE ZONES                                           UNITH   29
C                                                                               UNITH   30
      DO 10 NZ = 1,NSZ                                                          UNITH   31
C              ZERO THE ZONE DATA COMMON BLOCK                                  UNITH   32
      DO 111 I=1,63                                                             -044e2 173
  111 ZONED(I) = 0.0                                                            UNITH   34
      ZFANKW = 0.                                                               UNITH   35
      ZP2    = <ZP2>                                                            UNITH   36
      <ERMAX> = 0.0                                                             UNITH   37
      <ERMIN> = 0.0                                                             UNITH   38
      CONS(1)=(.24+.44*HUMRAT)*60./V(<TNOW>,HUMRAT,PATM)                        UNITH   39
      CONS(2) = 1061.0*60.0/V(<TNOW>,HUMRAT,PATM)                               UNITH   40
      CONS(3) = .3996/CONS(1)                                                   UNITH   41
c              if exhaust made up by infiltration                               -046   301
      IF (<EXHAUST-SOURCE> .eq. 2  .or.                                         -047b   36
     &    <EXHAUST-SOURCE> .eq. 3)  Call ZoneExhaust(9, xx)  ! power            -047b   37
c                                                                               HVAC1  749
c              Set reheat coil hourly available capacity ratio                  -044b  135
      IF(<HEATCAPZ> .LT. 0.0) THEN                                              -044b  136
        IF (<HW-LOOPZ> .NE. 0)  THEN                                            -044b  137
c              set hot water circulation loop restrictions                      -044b  138
C              on zonal heating capacity                                        -044b  139
          JLP    = <HW-LOOPZ>                                                   -044b  140
          ZCapRh = <lp;HCAP_RATIO>                                              -044b  141
        ELSE                                                                    -044b  142
C              Not hot water - no on zonal heating restriction                  -044b  143
          ZCapRh = 1.0                                                          -044b  144
        ENDIF                                                                   -044b  145
      ELSE                                                                      -044b  146
C              no coil so no zonal heating capacity                             -044b  147
        ZCapRh = 0.0                                                            -044b  148
      ENDIF                                                                     -044b  149
C              PICK UP ZONE MULTIPLIER                                          UNITH   42
      ZMULT  = <MULTIPLIER>                                                     UNITH   43
      <ERMAX> = 0.0                                                             UNITH   44
      <ERMIN> = (<HEATCAPZ>*HON*ZCapRh                                          HVAC1  758
     $       + CONS(1)*<CFMAX>*<SUPPLY-DELTA-T>*CONS(3))*FON                    HVAC1  759
C              CAL ROUTINE TO CALC ZONE TEMP AND LOAD                           UNITH   47
      CALL TEMDEV(0)                                                            UNITH   48
C              IF FANS ARE OFF OR THIS IS NOT A COND ZONE SKIP                  UNITH   49
      ZFANKW = 0.0                                                              UNITH   50
C********************** run function : UNITH-1Z ********************            UNITH   51
      IF( MSYSF(84) .NE. 0 )   CALL  FINTS( MSYSF(84), 1. )                     UNITH   52
C*******************************************************************            UNITH   53
      IF(<ZONE-TYPE> .NE. 1)  GOTO 15                                           UNITH   54
      IF(FON .EQ. 0.0)  GOTO 174                                                UNITH   55
      IF(<ERMIN> .GE. 0.0)  GOTO 174                                            UNITH   56
      ZQH    = AMIN1(0.0,<QNOW>)*HON                                            UNITH   57
      IF (ZCapRh .EQ. 0.)  ZQH = 0.                                             HVAC12 273
      CFMZ   = (ZQH/<ERMIN>)*<CFMAX>                                            UNITH   58
      FH     = CFMZ                                                             -043a  131
C              Don't collect S-P compressor energy info for non-DX systems      -043a  132
      ZQH    = AMIN1(0.0,ZQH+CONS(1)*CFMZ*<SUPPLY-DELTA-T>*CONS(3))             UNITH   59
      ZFANKW = CFMZ*<SUPPLY-KW>                                                 UNITH   60
  174 CONTINUE                                                                  UNITH   61
C              IF ZONE COILS OR BASEBOARDS ARE FUEL                             UNITH   68
      IF((<HEAT-SOURCE>.EQ.2).OR.(<HEAT-SOURCE>.EQ.3))  THEN                    HVAC6  830
        CALL FURNAC(ZQH,<HEATCAPZ>,<HEAT-SOURCE>,ZMULT)                         HVAC6  831
        JEM       = <AUX-E-MZ>                                                  HVAC6  832
        <AUX-EM>  = <AUX-EM> + FurnAuxkW                                        HVAC6  833
        JFM       = <HEAT-F-MZ>                                                 HVAC6  834
        <HEAT-FM> = <HEAT-FM> - FFUEL                                           HVAC6  835
        <AUX-FM>  = <AUX-FM>  + FurnAuxFuel                                     HVAC6  836
      ENDIF                                                                     HVAC6  837
C              IF ZONE COILS ARE ELECTRIC                                       UNITH   71
      IF (<HEAT-SOURCE>.EQ.1)  THEN                                             UNITH   72
        X      = ZQH*KWBTU                                                      UNITH   73
        ZKW    = ZKW    - X                                                     UNITH   74
        SKWQH  = SKWQH  - X*ZMULT                                               UNITH   75
        JEM       = <HEAT-E-MZ>                                                 HVAC6  838
        <HEAT-EM> = <HEAT-EM> - X*ZMULT                                         HVAC6  839
      ENDIF                                                                     UNITH   77
C              IF BASEBOARDS ARE ELECTRIC                                       UNITH   78
      IF (<BASEBOARD-SOURCE>.EQ.1)  THEN                                        UNITH   79
        X      = QHBZ*KWBTU                                                     UNITH   80
        ZKW    = ZKW    - X                                                     UNITH   81
        SKWQH  = SKWQH  - X*ZMULT                                               UNITH   82
        JEM       = <HEAT-E-MZ>                                                 HVAC6  840
        <HEAT-EM> = <HEAT-EM> - X*ZMULT                                         HVAC6  841
      ENDIF                                                                     UNITH   84
C              IF BASEBOARDS ARE GAS OR OIL                                     UNITH   85
      IF((<BASEBOARD-SOURCE>.EQ.2).OR.(<BASEBOARD-SOURCE>.EQ.3))  THEN          HVAC6  842
        CALL FURNAC(QHBZ,<BASEBOARD-RATING>,<BASEBOARD-SOURCE>,ZMULT)           HVAC6  843
        JEM       = <AUX-E-MZ>                                                  HVAC6  844
        <AUX-EM>  = <AUX-EM> + FurnAuxkW                                        HVAC6  845
        JFM       = <HEAT-F-MZ>                                                 HVAC6  846
        <HEAT-FM> = <HEAT-FM> - FFUEL                                           HVAC6  847
        <AUX-FM>  = <AUX-FM>  + FurnAuxFuel                                     HVAC6  848
      ENDIF                                                                     HVAC6  849
   15 CONTINUE                                                                  UNITH   89
C************************** run function : UNITH-2Z ****************            UNITH   90
          IF( MSYSF(85) .NE. 0 )   CALL  FINTS( MSYSF(85), 2. )                 UNITH   91
C*******************************************************************            UNITH   92
c                                                                               HVAC1  760
c              save zonal coil flows and loads for circulation loop calcs       HVAC1  761
      IF(<ZONE-TYPE> .EQ. 1)  THEN                                              -131   361
        <COIL_CFMZ>   = <CFMAX>                                                 -131   362
        <COIL_EDBZ>   = TAVE                                                    -131   363
        <COIL_CYCLEZ> = CFMZ / <CFMAX>                                          -131   364
        <COIL_QZ>     = ZQH                                                     -131   365
      ENDIF                                                                     -131   366
      <BBRD_EDB>    = TAVE                                                      HVAC1  766
      <BBRD_Q>      = QHBZ                                                      HVAC1  767
      FANKW  = FANKW + ZFANKW*ZMULT                                             HVAC6  850
      JEM       = <VENT-E-MZ>                                                   HVAC6  851
      <VENT-EM> = <VENT-EM> + ZFANKW * ZMULT                                    HVAC6  852
      QHZ    = QHZ   + ZQH * ZMULT                                              HVAC6  853
      ZKW    = ZKW   + ZFANKW + <ZKW>                                           HVAC6  854
      <SKW>  = <SKW> + ZKW*ZMULT                                                UNITH  102
C              SUM END-USE VARIABLES FOR THIS ZONE                              UNITH  103
C              IF REP-BLOCK BUF AND HOURLY-REP SCHED FILL BUF                   UNITH  105
      FCHPS(2) = ZQH                                                            UNITH  106
      FCHPS(4) = ZFANKW                                                         UNITH  107
      IF((<IZNBUFP>.NE.0).AND.(IRSCH.NE.0))  CALL USERZR( ZP1,ZP2 )             UNITH  108
      IF(IRPZON .NE. 0)  CALL RPTZON                                            UNITH  109
C              INCREMENT ZP1 TO POINT TO THE NEXT ZONE                          UNITH  110
   10 ZP1    = ZP1 + NZD                                                        UNITH  111
C                                                                               UNITH  112
C              CALCULATE TOTAL SYSTEM LOADS                                     UNITH  113
C                                                                               UNITH  114
      IF(<HEAT-SOURCE> .LE. 0)  QH = QHZ                                        UNITH  120
C********************** run function : UNITH-3 *********************            UNITH  121
      IF( MSYSF(85) .NE. 0 )   CALL  FINTS( MSYSF(86), 3. )                     UNITH  122
C*******************************************************************            UNITH  123
      RETURN                                                                    UNITH  124
      END                                                                       UNITH  125
      SUBROUTINE UNITV                                                          UNITV    2
C                                                                               UNITV    3
C                            UNIT VENTILATOR                                    UNITV    4
C                                                                               UNITV    5
C              DEVELOPED BY                                                     -130     1
C                            J. J. Hirsch & S. D. Gates                         -130     2
C                            James J. Hirsch & Associates                       -130     3
C                            Camarillo, California                              -130     4
C              BASED UPON CODE DEVELOPED BY J. J. Hirsch and                    -130     5
C                            W. F. Buhl                                         -130     6
C                            A. E. Erdem                                        -130     7
C                            Lawrence Berkeley National Laboratory              -130     8
C                            University of California                           -130     9
Copyright (c) 1997 by James J. Hirsch. All Rights Reserved. Unpublished         -130    10
c rights reserved under the Copyright Laws of the United States.                -130    11
c RESTRICTED RIGHTS NOTICE: Government use, reproduction or disclosure          -130    12
c is subject to restrictions as set forth in Rights in Data (g)(3) in           -130    13
c UC/LBL purchase order 4607010 with J.J. Hirsch & Associates.                  -130    14
C                                                                               UNITV    7
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON  /ENDUSE/ SUPPKW, HEATKW                                           HVAC27   1
      COMMON /FFUEL/ FFUEL, FurnAuxFuel, FurnAuxkW, PLRF                        /FFUEL/  2
      common  /FNSYS/  ISKIPS, MSYSF(120)                                       /FNSYS/  2
      COMMON  /HRREP / Irb, Ihrp, Lrb, Lhrp, Nrb, Nhrp, IVTLIM(3,50),           HR       5
     &                 IGRPtr, IBRPtr, IRSch, IRSchT(5),                        HR       6
     &                 NHRTyp(3), ITBUF(3), ITBUFB(3), ITBUFE(3),               HR       7
     &                 IHREOF, ICDFLG                                           HR       8
      COMMON  /MISCD / TEMPS(4,9999),CONS(5),TEMPSL(9999),                      -048a   10
     1                 BLDGQH,BLDGQC,BLDGQL,BLDGP,BPMULT,                       /MISCD/  3
     $                 DBTMIN,DBTMAX,WMIN,WMAX,NSPZ(9999),                      -048a   11
     3                 DQ, DTP, DTR, DTS, FPI, PLRCC , POM, TC2, TDM,           /MISCD/  5
     4                 TRA,WCOL,WCOLM,WMM,YPI,KWBTU,BTUKW,UNFILD,Unusedm        RemPA   45
      REAL             KWBTU                                                    /MISCD/  7
      COMMON  /PLANTD/ QHMP,TMP,CFMP,QHPP,CFMPP,                                /PLANTD/ 2
     1                 QHZP,TZP,DHWPKW,DHWPLF,DHWQRP                            RemPA   46
      REAL             PLANTD(10)                                               RemPA   47
      EQUIVALENCE      (PLANTD(1), QHMP)                                        RemPA   48
      COMMON  /PTRPLT/ Ipm,Ilp,Ich,Ibl,Idw,Itw,Ipv,Ign,Itk,Ihx,                 PV       1
     &                 Iec,Ilm,Iem,Ifm,Ism,Icm,Imm,Imc,Igl,Isp2,                XFC2     1
     &                 Ispare(5),  Ipe,                                         HVAC19   3
     &                 Npm,Nlp,Nch,Nbl,Ndw,Ntw,Npv,Ngn,Ntk,Nhx,                 PV       2
     &                 Nec,Nlm,Nem,Nfm,Nsm,Ncm,Nmm,Nmc,Ngl,Nsp2,                XFC2     2
     &                 Nspare(5),  Npe,                                         HVAC19   6
     &                 Lpm,Llp,Lch,Lbl,Ldw,Ltw,Lpv,Lgn,Ltk,Lhx,                 PV       3
     &                 Lec,Llm,Lem,Lfm,Lsm,Lcm,Lmm,Lmc,Lgl,Lsp2,                XFC2     3
     &                 Lspare(5),  Lpe,                                         HVAC19   9
     &                 Jpm,Jlp,Jch,Jbl,Jdw,Jtw,Jpv,Jgn,Jtk,Jhx,                 PV       4
     &                 Jec,Jlm,Jem,Jfm,Jsm,Jcm,    Jmc,Jgl,                     HVAC19  11
     &                 Jpe, kpr, NumMeters, NumIntHX                            XFC1     1
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      COMMON  /SYSTD / TH,TC,TM,TR,QH,QC,QHZ,QCZ,QHB,QHP,QHUM,                  /SYSTD/  2
     1                 QDHUM,TCMIN,THMAX,QLSUM,QPSUM,CFM,CFMH,CFMC,             /SYSTD/  3
     2                 RCFM,ECFM,CINF,FON,HON,CON,BON,SCONS(3),PH,PC,           /SYSTD/  4
     3                 SKW,FANKW,unused1,WR,WM,WCOIL,WW,PO,D,                   -046f    1
     4                 FTEMP,TCR,QHR,RfanPumpKW,SGAS,SKWQH,SKWQC,QCLAT,         -131    23
     5                 SFKW,RFKW,FONNGT,WSURF,RWalkinQ,TSURF,TRh,               -131    24
     6                 CBF,CBF1,CBF2,EON,PLRCFM,PLRC,PLRH,QCM1,                 /SYSTD/  8
     7                 QCM2,QHM1,EIRM1,EIRM2,EIR,OFKW,QCT,QCS,                  /SYSTD/  9
     8                 WRMAX,WRMIN,CFMRAT,QdistG,QdistL,RON,QHT,                /SYSTD/ 10
     9                 TPOMIN,POMIN,QHSUP,QRSENS,QRLAT,QRREC,QRREJ,             /SYSTD/ 11
     1                 RCOMKW,RDEFKW,RAUXKW,ECFMP,CFMIN,CINFP,DT,DW,            /SYSTD/ 12
     2                 EWB,IC,NATTSP,Q,RETR,SLOAD,QLSUMP,T,TCHUM,TEND,          /SYSTD/ 13
     3                 TS,hgbmin,HPDefE,EconoOnly,TDuctEnv,                     -044e1   1
     4                 QCUNMT,CapRh,CapRph,CapRc                                HVAC25   3
      REAL             SYSTD(113)                                               HVAC19  13
      EQUIVALENCE      (SYSTD(1),TH)                                            RemPA   65
      COMMON  /TIME  / IDOY, IYR, IMO, IDAY, IHR,                               Time     4
     &                 ISCMO, ISCDAY, ISCHR, IDOW, ISCDOW, iDSdates(6),         -044e5   1
     &                 iTimeFlg, iDSFlg, iDDFlg, InitialFlg, LeapYr,            Time     6
     &                 CLOCK(10), MONDSC(13), MONLEN(12), MONSDA(12)            HR      12
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
      COMMON  /ZONED / EXCFM,FH,FC,CFMZ,QHBZ,QOVER,THZ,TCZ,ERMAX,ERMIN,         /ZONED/  2
     1                 TRY,FTD,CORINT,G0,G1,G2,G3,SIGMAG,TL,ZQHR,TAVE,          /ZONED/  3
     2                 ZQH,ZQC,FCHPS(15),ACFM,ZKW,TCMINZ,THMAXZ,                /ZONED/  4
     3                 ERMAXM,ERMINM,THR,CSSCND,CSSVEC,HENOW,QGWIN,             /ZONED/  5
     4                 QSNABT,QGOPWL,QGVEC,CFMCVT,SSFPT,CFMVNT,ZFANKW,          /ZONED/  6
     5                 ZKWCBT,ZKWHBT,ZCapRbbrd, XC,ZC,XH,ZH                     -044e2   7
      REAL ZONED(63)                                                            -044e2   8
      EQUIVALENCE (ZONED(1),EXCFM)                                              /ZONED/  9
      COMMON  /LENS/   MWFLEN, MRLEN, MSHLEN, MWNLEN, MDRLEN, MXLEN,            /LENS/   2
     1                 MULEN, MZLEN, MIWLEN, MFLLEN,                            /LENS/   3
     2                 LMTB, LLDSOU, MSTLEN, LSTFT, MWLLEN                      /LENS/   4
      COMMON  /PTRBGN/ IWFB, IWPB, ICONSB, IGTB, IWLB, IGEOB, ISHADB,           /PTRBGN/ 2
     &                 IWINB, IDRB, IEWB, IUGB, ISPB, IIWPB, IIWB,              /PTRBGN/ 3
     &                 IFLB, ISPCDB, IOTHB, ILHB, IZQCMB, ISSHDB,               /PTRBGN/ 4
     &                 IOHFIB, IZLSK, IZLSL, ISTFB, ILSSH                       PV2      1
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     /PNTRS/  3
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        /PNTRS/  4
      COMMON  /SIZE/   LENGTH,NWF,NWPAR,NCONS,NGT,NWL,NGEO,                     /SIZE/   2
     1                 NGSHAD, NWIN, NDOOR, NEW, NUG, NSPl, NIWP, NIW,          /SIZE/   3
     &                 NFL, NBR, NOTH, NITH, NOPSRF,                            /SIZE/   4
     &                 NSURF, NSSHD, NSHTOT, NEWshade                           /SIZE/   5
      V(DB,W,P) = 0.754*(DB+459.7)*(1.0+1.605*W)/P                              V        2
      CON    = 1.                                                               UNITV   21
C              SET ZP1 TO POINT TO THE FIRST ZONE                               UNITV   22
      ZP1    = ISZ                                                              UNITV   23
C********************** run function : UNITV-0 *********************            UNITV   24
      IF( MSYSF(87) .NE. 0 )   CALL  FINTS( MSYSF(87), 0. )                     UNITV   25
C*******************************************************************            UNITV   26
C               CHECK FOR AIR FROM ANOTHER SYSTEM.  IF YES,                     UNITV   27
C               GET NEW AIR CONDITIONS (DBIN0, WIN0, WBIN0)                     UNITV   28
      CALL FRMSYS(DBIN0,WIN0,WBIN0)                                             UNITV   29
C                                                                               UNITV   30
C              LOOP THROUGH THE ZONES                                           UNITV   31
C                                                                               UNITV   32
      DO 10 NZ = 1,NSZ                                                          UNITV   33
C              ZERO THE ZONE DATA COMMON BLOCK                                  UNITV   34
      DO 111 I=1,63                                                             -044e2 174
  111 ZONED(I) = 0.0                                                            UNITV   36
      ZP2    = <ZP2>                                                            UNITV   37
      <ERMAX> = 0.0                                                             UNITV   38
      <ERMIN> = 0.0                                                             UNITV   39
      TM     = <TNOW>                                                           UNITV   40
      IF (<sy.FanOnPast> .gt. 0.)  THEN                                         -044c2 114
        CONS(4) = 60. / V(<zn.Tmix1>,HUMRAT,PATM)                               -044c2 115
      ELSE  ! use value from last start-up hour                                 -044c2 116
        CONS(4) = 60. / V(<zn.TmixStart>,HUMRAT,PATM)                           -044c2 117
      ENDIF                                                                     -044c2 118
      CONS(1) = (.24+.44*HUMRAT) * CONS(4)                                      -044c2 119
      CONS(2) = 1061.0 * CONS(4)                                                -044c2 120
      CONS(3) = 0.3996 / CONS(1)                                                -044c2 121
c              if exhaust made up by infiltration                               -046   303
      IF (<EXHAUST-SOURCE> .eq. 2  .or.                                         -047b   38
     &    <EXHAUST-SOURCE> .eq. 3)  Call ZoneExhaust(9, xx)  ! power            -047b   39
c                                                                               HVAC1  771
c              Set reheat coil hourly available capacity ratio                  -044b  150
      IF(<HEATCAPZ> .LT. 0.0) THEN                                              -044b  151
        IF (<HW-LOOPZ> .NE. 0)  THEN                                            -044b  152
c              set hot water circulation loop restrictions                      -044b  153
C              on zonal heating capacity                                        -044b  154
          JLP    = <HW-LOOPZ>                                                   -044b  155
          ZCapRh = <lp;HCAP_RATIO>                                              -044b  156
        ELSE                                                                    -044b  157
C              Not hot water - no on zonal heating restriction                  -044b  158
          ZCapRh = 1.0                                                          -044b  159
        ENDIF                                                                   -044b  160
      ELSE                                                                      -044b  161
C              no coil so no zonal heating capacity                             -044b  162
        ZCapRh = 0.0                                                            -044b  163
      ENDIF                                                                     -044b  164
C              PICK UP ZONE MULTIPLIER                                          UNITV   44
      ZMULT  = <MULTIPLIER>                                                     UNITV   45
C              SKIP UNNEEDED CALCS                                              UNITV   46
      IF((FON .EQ. 0.0) .OR. (<ZONE-TYPE> .NE. 1))  GOTO 5                      UNITV   47
C                                                                               UNITV   48
C              CALC EXTRACTION RATES                                            UNITV   49
C                                                                               UNITV   50
C              SET SUPPLY TEMP FOR COOLING                                      UNITV   51
      TM = DBIN0 + <SUPPLY-DELTA-T>*CONS(3)                                     UNITV   52
      TCMINZ  = TM                                                              UNITV   55
      XC      = CONS(1)*<CFMAX>                                                 -044e2 175
      <ERMAX> = XC * (<TNOW>-TM)                                                -044e2 176
C              OUTSIDE AIR DAMPER POSITION                                      -044c  680
      PO     = <VENTMIN>/<CFMAX>                                                -044c  681
C              NOW CHECK FOR SCHEDULE FOR OUTSIDE AIR                           -044c  682
      SH = SchVal(<MIN-AIR-SCH>, -999.)                                         -044c  683
      IF (SH .NE. -999.)  PO = SH                                               -044c  684
      PO = AMAX1(0.,AMIN1(1.,PO))                                               -044c  685
C              NOW CHECK FOR DCV                                                -044c  686
      IF((<MIN-OA-METHOD>.LT.0) .AND. (SH .EQ. -999.0))  THEN                   -044c  687
        MZ = ISPB + (<NZSPACE>-1)*MZLEN                                         -044c  688
        <DCVOAcfmZ> = SchVal(<PEOPLE-SCHEDULE>, 1.)                             -045b  220
     &              * <ZPPLNO> * <OA-CFM/PER>                                   -045b  221
        XX = <OUTSIDE-AIR-CFM>                                                  -044c  690
        IF(XX .EQ. 0.)                                                          -044c  691
     $     XX = AMAX1(<OA-FLOW/AREA>*<AREA>,<OA-CHANGES>*<VOLUME>/60.)          -044c  692
        <DCVOAcfmZ> = AMAX1(<DCVOAcfmZ>,XX)                                     -044c  693
        <DCVOAcfmFrac> = AMIN1(1.,<DCVOAcfmZ>/<CFMAX>)                          -044c  694
        PO = <DCVOAcfmFrac>                                                     -044c  695
      ELSE                                                                      -044c  696
        <DCVOAcfmZ> = 0.0                                                       -044c  697
        <DCVOAcfmFrac> = 0.0                                                    -044c  698
      ENDIF                                                                     -044c  699
C              IF NIGHT CYCLE NO OUTSIDE AIR                                    UNITV   67
      IF(FONNGT .NE. 0.0)  PO = 0.0                                             UNITV   68
c              Exhaust airflow w/o cycling                                      -044e  498
      IF (<EXHAUST-SOURCE> .eq. 1)    ! makeup by system OA                     -046   305
     &  Call ZoneExhaust(1, <CFMAX>)  ! set EXCFM                               -046   306
      IF (EXCFM .gt. 0.)  PO = Max(PO*<CFMAX>, EXCFM) / <CFMAX>                 -044e  500
      IF(PO .EQ. 0.0)  <ERMAX> = 0.0                                            UNITV   69
C              CLAC MIX AIR TEMP                                                UNITV   70
      TM = PO*DBIN0 + (1.-PO)*<TNOW> + <SUPPLY-DELTA-T>*CONS(3)                 UNITV   71
C              CALC MAX SUPPLY TEMP                                             UNITV   72
      TH     = TM - (<HEATCAPZ>/(CONS(1)*<CFMAX>))*HON*ZCapRh                   HVAC1  780
      TH     = AMIN1(TH,AMAX1(TM,<MAX-SUPPLY-T>))                               UNITV   74
      THMAXZ  = TH                                                              UNITV   75
C              ADDITION RATE                                                    UNITV   76
C              THE TOP OF THE HEATING RANGE IS FULL COOLING POINT               UNITV   77
      IF (PO .ne. 0.) THEN                                                      -044e2 177
        IF (<COOL-TEMP-SCH> .eq. 0) THEN                                        -044e2 178
          ZC     = XC                                                           -044e2 179
          ERMAXM = <ERMAX>                                                      -044e2 180
        ELSE                                                                    -044e2 181
          ZC     = CONS(1)*<CFMAX>                                              -044e2 182
          ERMAXM = ZC * (<TNOW>-TM)                                             -044e2 183
        ENDIF                                                                   -044e2 184
        ERMINM = ERMAXM                                                         -044e2 185
      ENDIF                                                                     -044e2 186
      XH      = CONS(1)*<CFMAX>                                                 -044e2 187
      <ERMIN> = XH * (<TNOW>-THMAXZ)                                            -044e2 188
      ZH      = ZC                                                              -047a   14
C              CAL ROUTINE TO CALC ZONE TEMP AND LOAD                           UNITV   83
    5 CALL TEMDEV(0)                                                            UNITV   84
C              IF FANS ARE OFF OR THIS IS NOT A COND ZONE SKIP                  UNITV   85
      ZFANKW = 0.0                                                              UNITV   86
      IF(<ZONE-TYPE> .NE. 1)  GOTO 15                                           UNITV   87
      IF(FON .EQ. 0.0)  GOTO 174                                                UNITV   88
      D      = 1.0                                                              UNITV   89
      IF((FONNGT.NE.0.0).AND.(<QNOW>.LT.0.0))  D = <QNOW>/<ERMIN>               UNITV   90
      IF((FONNGT.NE.0.0).AND.(<QNOW>.EQ.0.0))  GOTO 174                         UNITV   91
      CFMZ   = <CFMAX>*D                                                        UNITV   92
      FH     = CFMZ                                                             -043a  133
c              save cycling for coil flow calcs.                                UNITV   93
      TAVE   = (<TNOW>+<TPAST>)*0.5                                             UNITV   95
      TM = PO*DBIN0 + (1.-PO)*TAVE + <SUPPLY-DELTA-T>*CONS(3)                   UNITV   96
      TSET   = TAVE                                                             UNITV   97
C              THE HEATING COIL LOAD IS THE SUM OF THE HEATING OF MIXED         UNITV   98
C              TO THE AVERAGE ROOM TEMP PLUS THE ZONE AXTRACTION RATE           UNITV   99
      ZQH    = AMIN1(0.0,CONS(1)*CFMZ*(TM-TSET) + <QNOW>)*HON                   UNITV  100
      IF (ZCapRh .EQ. 0.)  ZQH = 0.                                             HVAC12 274
      IF(TAVE .GT. THZ+THR)  ZQH = 0.0                                          UNITV  101
      ZFANKW = <SUPPLY-KW>*CFMZ                                                 UNITV  102
      JEM       = <VENT-E-MZ>                                                   HVAC6  856
      <VENT-EM> = <VENT-EM> + ZFANKW * ZMULT                                    HVAC6  857
c              Save TM for CONS() terms next hour                               -044c2 122
      <zn.Tmix1> = TM                                                           -044c2 123
      IF (<sy.FanOnPast> .lt. 0.)  <zn.TmixStart> = TM                          -044c2 124
  174 CONTINUE                                                                  HVAC1  781
C              IF ZONE COILS OR BASEBOARDS ARE FUEL                             UNITV  111
      IF((<HEAT-SOURCE>.EQ.2).OR.(<HEAT-SOURCE>.EQ.3))  THEN                    HVAC6  858
        CALL FURNAC(ZQH,<HEATCAPZ>,<HEAT-SOURCE>,ZMULT)                         HVAC6  859
        JEM       = <AUX-E-MZ>                                                  HVAC6  860
        <AUX-EM>  = <AUX-EM> + FurnAuxkW                                        HVAC6  861
        JFM       = <HEAT-F-MZ>                                                 HVAC6  862
        <HEAT-FM> = <HEAT-FM> - FFUEL                                           HVAC6  863
        <AUX-FM>  = <AUX-FM>  + FurnAuxFuel                                     HVAC6  864
      ENDIF                                                                     HVAC6  865
C              IF ZONE COILS ARE ELECTRIC                                       UNITV  114
      IF (<HEAT-SOURCE>.EQ.1)  THEN                                             UNITV  115
        X      = ZQH*KWBTU                                                      UNITV  116
        ZKW    = ZKW    - X                                                     UNITV  117
        SKWQH  = SKWQH  - X*ZMULT                                               UNITV  118
        JEM       = <HEAT-E-MZ>                                                 HVAC6  866
        <HEAT-EM> = <HEAT-EM> - X*ZMULT                                         HVAC6  867
      ENDIF                                                                     UNITV  120
C              IF BASEBOARDS ARE ELECTRIC                                       UNITV  121
      IF(<BASEBOARD-SOURCE>.EQ.1)  THEN                                         UNITV  122
        X      = QHBZ*KWBTU                                                     UNITV  123
        ZKW    = ZKW    - X                                                     UNITV  124
        SKWQH  = SKWQH  - X*ZMULT                                               UNITV  125
        JEM       = <HEAT-E-MZ>                                                 HVAC6  868
        <HEAT-EM> = <HEAT-EM> - X*ZMULT                                         HVAC6  869
      ENDIF                                                                     UNITV  127
C              IF BASEBOARDS ARE GAS OR OIL                                     UNITV  128
      IF((<BASEBOARD-SOURCE>.EQ.2).OR.(<BASEBOARD-SOURCE>.EQ.3))  THEN          HVAC6  870
        CALL FURNAC(QHBZ,<BASEBOARD-RATING>,<BASEBOARD-SOURCE>,ZMULT)           HVAC6  871
        JEM       = <AUX-E-MZ>                                                  HVAC6  872
        <AUX-EM>  = <AUX-EM> + FurnAuxkW                                        HVAC6  873
        JFM       = <HEAT-F-MZ>                                                 HVAC6  874
        <HEAT-FM> = <HEAT-FM> - FFUEL                                           HVAC6  875
        <AUX-FM>  = <AUX-FM>  + FurnAuxFuel                                     HVAC6  876
      ENDIF                                                                     HVAC6  877
      QHZ    = QHZ + ZQH*ZMULT                                                  UNITV  132
      ZKW    = ZKW + ZFANKW                                                     UNITV  133
      FANKW  = FANKW + ZFANKW*ZMULT                                             -043a  134
   15 CONTINUE                                                                  UNITV  134
C********************** run function : UNITV-1Z ********************            UNITV  135
      IF( MSYSF(88) .NE. 0 )   CALL  FINTS( MSYSF(88), 1. )                     UNITV  136
C*******************************************************************            UNITV  137
c                                                                               HVAC1  782
c              save zonal coil flows and loads for circulation loop calcs       HVAC1  783
      IF(<ZONE-TYPE> .EQ. 1)  THEN                                              -131   367
        <COIL_CFMZ>   = CFMZ                                                    -131   368
        <COIL_EDBZ>   = TM                                                      -131   369
        <COIL_CYCLEZ> = D                                                       -131   370
        <COIL_QZ>     = ZQH                                                     -131   371
      ENDIF                                                                     -131   372
      <BBRD_EDB>    = TAVE                                                      HVAC1  788
      <BBRD_Q>      = QHBZ                                                      HVAC1  789
c              exhaust fan                                                      -044e  501
      IF (<EXHAUST-SOURCE> .eq. 1)    ! makeup by system OA                     -046   307
     &  Call ZoneExhaust(9, CFMZ)     ! power                                   -046   308
      ECFM = ECFM + EXCFM*ZMULT                                                 -044e  503
C              INCREMENT TOTAL SYSTEM KW                                        UNITV  138
      ZKW    = ZKW + <ZKW>                                                      UNITV  140
      <SKW>  = <SKW> + ZKW*ZMULT                                                UNITV  141
C              SUM END-USE VARIABLES FOR THIS ZONE                              UNITV  142
C              IF REP-BLOCK BUF AND HOURLY-REP SCHED FILL BUF                   UNITV  145
      FCHPS(2) = ZQH                                                            UNITV  146
      FCHPS(4) = ZFANKW                                                         UNITV  147
      FCHPS(5) = TM                                                             UNITV  148
      FCHPS(9) = PO                                                             UNITV  149
      IF((<IZNBUFP>.NE.0).AND.(IRSCH.NE.0))  CALL USERZR( ZP1,ZP2 )             UNITV  150
      IF(IRPZON .NE. 0)  CALL RPTZON                                            UNITV  151
C              INCREMENT ZP1 TO POINT TO THE NEXT ZONE                          UNITV  152
   10 ZP1    = ZP1 + NZD                                                        UNITV  153
C                                                                               UNITV  154
C              CALCULATE TOTAL SYSTEM LOADS                                     UNITV  155
C                                                                               UNITV  156
      IF(<HEAT-SOURCE> .LE. 0)  QH = QHZ                                        UNITV  162
C********************** run function : UNITV-2 *********************            UNITV  163
      IF( MSYSF(89) .NE. 0 )   CALL  FINTS( MSYSF(89), 2. )                     UNITV  164
C*******************************************************************            UNITV  165
      RETURN                                                                    UNITV  171
      END                                                                       UNITV  172
      SUBROUTINE  USERSR( NSP )                                                 USERSR   2
C                                                                               USERSR   3
C                            FILL SYSTEM REPORT-BLOCK BUFFER                    USERSR   4
C                                                                               USERSR   5
C              DEVELOPED BY                                                     -130     1
C                            J. J. Hirsch & S. D. Gates                         -130     2
C                            James J. Hirsch & Associates                       -130     3
C                            Camarillo, California                              -130     4
C              BASED UPON CODE DEVELOPED BY J. J. Hirsch and                    -130     5
C                            W. F. Buhl                                         -130     6
C                            A. E. Erdem                                        -130     7
C                            Lawrence Berkeley National Laboratory              -130     8
C                            University of California                           -130     9
Copyright (c) 1997 by James J. Hirsch. All Rights Reserved. Unpublished         -130    10
c rights reserved under the Copyright Laws of the United States.                -130    11
c RESTRICTED RIGHTS NOTICE: Government use, reproduction or disclosure          -130    12
c is subject to restrictions as set forth in Rights in Data (g)(3) in           -130    13
c UC/LBL purchase order 4607010 with J.J. Hirsch & Associates.                  -130    14
C                                                                               USERSR   7
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
C              SYSTEM LEVEL VARIABLES FOR DESICCANT SYSTEMS, BOTH TOTAL         /DSYSTD/ 2
C              AND INTEGRATED                                                   /DSYSTD/ 3
      COMMON  /DSYSTD/  SCGAS, QREG, WBR, WB8, T8, W8, WB9, T9, W9, EFF,        /DSYSTD/ 4
     1                  DTON, DMODE(7), ERMAX4, ERMAX5, ERMAX6, OPMODE,         /DSYSTD/ 5
     2                  DBOA,WOA,DGAS,DKW,TCONDd,QCDTOT,QCDS,QCDL,              /DSYSTD/ 6
     3                  POA,DFANKW,RFANKW,DMOTKW,EVKW,QCEVT,QCEVS,              /DSYSTD/ 7
     4                  QCEVL,TCMNEV                                            /DSYSTD/ 8
      REAL DSYSTD(39)                                                           /DSYSTD/ 9
      EQUIVALENCE (DSYSTD(1), SCGAS)                                            /DSYSTD/10
      COMMON /DDSDAT/ FONh, SFKWh, DTSh, CFMRATh, FONNGTh, RCFMmix,             /DDSDAT/ 2
     1                RfanCFM, EXFIL, DTDUCT, DTDUCTh, TCDFSR, THDFSR,          /DDSDAT/ 3
     2                CFMINh, CFMINc, CFMINhm, CFMINcm, CFMINt,                 /DDSDAT/ 4
     3                TCMINcoil, THMAXcoil, IWarmestZ, IColdestZ                /DDSDAT/ 5
      DIMENSION       DDSDAT(21)                                                /DDSDAT/ 6
      EQUIVALENCE     (DDSDAT(1), FONh)                                         /DDSDAT/ 7
      COMMON  /MISCD / TEMPS(4,9999),CONS(5),TEMPSL(9999),                      -048a   10
     1                 BLDGQH,BLDGQC,BLDGQL,BLDGP,BPMULT,                       /MISCD/  3
     $                 DBTMIN,DBTMAX,WMIN,WMAX,NSPZ(9999),                      -048a   11
     3                 DQ, DTP, DTR, DTS, FPI, PLRCC , POM, TC2, TDM,           /MISCD/  5
     4                 TRA,WCOL,WCOLM,WMM,YPI,KWBTU,BTUKW,UNFILD,Unusedm        RemPA   45
      REAL             KWBTU                                                    /MISCD/  7
      COMMON  /REFGD / QRNOW, CRNOW, QR(3), RQSSCH(3), AUXSCH(3),               /REFGD/  2
     &                 QSENS(3), QLAT(3), QDEF(3),SWEATKW(3),                   /REFGD/  3
     &                 COMPKW1(3), COMPKW2(3), QREC1(3), QREC2(3),              /REFGD/  4
     &                 QREJ1(3), QREJ2(3), TcondR, PLR(3), TREJ1, TREJ2,        /REFGD/  5
     &                 TREC1, TREC2, EIR1(3), EIR1r(3),EIR2(3), GPMcw,          /REFGD/  6
     &                 FRAC1, FRAC2, CONDcap, CONDplr, TcondFloat, EIR3         /REFGD/  7
      REAL             REFGDAT(65)                                              /REFGD/  8
      EQUIVALENCE      (REFGDAT(1), QRNOW)                                      /REFGD/  9
      COMMON  /SYSTD / TH,TC,TM,TR,QH,QC,QHZ,QCZ,QHB,QHP,QHUM,                  /SYSTD/  2
     1                 QDHUM,TCMIN,THMAX,QLSUM,QPSUM,CFM,CFMH,CFMC,             /SYSTD/  3
     2                 RCFM,ECFM,CINF,FON,HON,CON,BON,SCONS(3),PH,PC,           /SYSTD/  4
     3                 SKW,FANKW,unused1,WR,WM,WCOIL,WW,PO,D,                   -046f    1
     4                 FTEMP,TCR,QHR,RfanPumpKW,SGAS,SKWQH,SKWQC,QCLAT,         -131    23
     5                 SFKW,RFKW,FONNGT,WSURF,RWalkinQ,TSURF,TRh,               -131    24
     6                 CBF,CBF1,CBF2,EON,PLRCFM,PLRC,PLRH,QCM1,                 /SYSTD/  8
     7                 QCM2,QHM1,EIRM1,EIRM2,EIR,OFKW,QCT,QCS,                  /SYSTD/  9
     8                 WRMAX,WRMIN,CFMRAT,QdistG,QdistL,RON,QHT,                /SYSTD/ 10
     9                 TPOMIN,POMIN,QHSUP,QRSENS,QRLAT,QRREC,QRREJ,             /SYSTD/ 11
     1                 RCOMKW,RDEFKW,RAUXKW,ECFMP,CFMIN,CINFP,DT,DW,            /SYSTD/ 12
     2                 EWB,IC,NATTSP,Q,RETR,SLOAD,QLSUMP,T,TCHUM,TEND,          /SYSTD/ 13
     3                 TS,hgbmin,HPDefE,EconoOnly,TDuctEnv,                     -044e1   1
     4                 QCUNMT,CapRh,CapRph,CapRc                                HVAC25   3
      REAL             SYSTD(113)                                               HVAC19  13
      EQUIVALENCE      (SYSTD(1),TH)                                            RemPA   65
      COMMON /SHP   / QCRUN,QCLOAD,QCGAS,QCAUX,QCGSLD,QCGSUP,                   /SHP/    2
     1                QCWAS,QCWASU,QCGSAV,QCFAN,                                /SHP/    3
     2                QHRUN,QHLOAD,QHGAS,QHAUX,QHGSLD,QHGSUP,                   /SHP/    4
     3                QHWAS,QHWASU,QHGDFR,QHFAN,          CUR(25),              /SHP/    5
     4                GSAV1,GASV2,PCH,ISZCZ,GCAP(2),GEDB,QHDFRG,                -044c1   1
     5                GRPM,PLRSUP,CFMCYC,CLPLR,CFMVVT,QHZHP,PCCEDB,             /SHP/    7
     6                IHPREP,IHPOUT,IHPHRR,IHPHRN,IRST,IREN                     /SHP/    8
      COMMON /SHPZ  / QCRUNZ,QCLOADZ,QCGASZ,QCAUXZ,QCGSLDZ,QCGSUPZ,             /SHP/    9
     1                QCWASZ,QCWASUZ,QCGSAVZ,QCFANZ,                            /SHP/   10
     2                QHRUNZ,QHLOADZ,QHGASZ,QHAUXZ,QHGSLDZ,QHGSUPZ,             /SHP/   11
     3                QHWASZ,QHWASUZ,QHGDFRZ,QHFANZ                             /SHP/   12
      DIMENSION       SHP(60),SHPZ(20)                                          /SHP/   13
      EQUIVALENCE     (SHP,QCRUN),(SHPZ,QCRUNZ)                                 /SHP/   14
     1               ,(DFM1,CUR(18)),(DFM2,CUR(19)),(DFM3,CUR(20))              /SHP/   15
      COMMON  /WCCDAT/ GPMS, GPMHS, GPMCS, QHLUPS, QCLUPS,                      /WCCDAT/ 2
     $                 GPMZ, GPMHZ, GPMCZ, QHLUPZ, QCLUPZ                       /WCCDAT/ 3
      DIMENSION        WCCSAV(10)                                               /WCCDAT/ 4
      EQUIVALENCE      (WCCSAV(1), GPMS)                                        /WCCDAT/ 5
      COMMON /WSEDAT/  CAPAIR,CAPWTR,QCWSEM,QCWSE,WSEDTA,WSEDTW,WSEXEF          /WSEDAT/ 2
     $                ,WSENTU,WSEUA,WSEQMX,WSEPLR,WSEDT,WSE13,WSE14             /WSEDAT/ 3
     $                ,WSE15                                                    /WSEDAT/ 4
      DIMENSION        WSESAV(15)                                               /WSEDAT/ 5
      EQUIVALENCE      (WSESAV(1),CAPAIR)                                       /WSEDAT/ 6
      COMMON /NVNDAT/ VENTF,VNTCFM,NDH,IVENTG,QCVZ,VNTfrac                      -44c6    1
      COMMON  /SSRESY/  IVENTF, XRAN                                            /SSRESY/ 2
     1  , CFMCV1, CFMCV2, DEL   , DQGVC1, DQGVNT, DTMIN , FANHTM, FLWMUL        /SSRESY/ 3
     2  , IAFTYP, ISSV  , IVDONE, IZP1RM, IZP1SS, MINH  , MOUH  , MRRFSV        /SSRESY/ 4
     3  , MRRVSF, MRY   , MRZ   , MSRFSV, MSRVSF, NADJ  , NCWCON, NDELT         /SSRESY/ 5
     4  , Q10   , QGVEC1, QGVEC2, QGVNT , QGWAL , QHBZNX, QIN   , QINXS         /SSRESY/ 6
     5  , QLWAL , QOUT  , QOUTXS, QPNX  , QSUNIN, QW    , SSVFP , T1T           /SSRESY/ 7
     6  , T1TB  , T2MAX , T2T   , T2TB  , T2TFV , TINNEW, TNEXT , TOTNEW        /SSRESY/ 8
     7  , UOT   , UVRMG , UVT   , VNTRM , ZDELMN, ZDELMX, ZMNEXT                /SSRESY/ 9
     1  , ECPLR(3), ERMXEC(4), TCMNEC(3), QCV, TVZ, NVCFMS, TNVCFMS             -045d    1
C              TRANSFER SYSTEM KW TO THE SYSTEM DATA COMMON BLOCK               USERSR  16
      SKW    = <SKW>                                                            USERSR  17
C              TRANSFER THE CONS(1-3) VARIABLES                                 USERSR  18
      SCONS(1) = CONS(1)                                                        USERSR  19
      SCONS(2) = CONS(2)                                                        USERSR  20
      SCONS(3) = CONS(3)                                                        USERSR  21
      D        = CONS(4)                                                        -044c2 125
C                                                                               USERSR  22
C              TRANSFER THE SYSTEM DATA COMMON BLOCK TO REP-BLOCK BUFFER        USERSR  23
      IPTR   = <ISYBUFP> - 1                                                    USERSR  24
      DO 100  I=1,89                                                            USERSR  25
      AA(IPTR+I) = SYSTD(I)                                                     USERSR  26
  100 CONTINUE                                                                  USERSR  27
C              ADD DESICCANT SYSTEM VARIABLES TO THE HOURLY REP BUFFER          USERSR  28
      DO 200 I=1,31                                                             USERSR  29
      AA(IPTR+89+I) = DSYSTD(I)                                                 USERSR  30
  200 CONTINUE                                                                  USERSR  31
      AA(IPTR+125) = HPDefE                                                     USERSR  32
      AA(IPTR+126) = DTS                                                        -034   207
      AA(IPTR+127) = DTR                                                        -034   208
      AA(IPTR+128) = TDuctEnv                                                   HVAC25 185
      DO 300 I=1,4                                                              USERSR  36
          AA(IPTR+120+I) = DSYSTD(34+I)                                         USERSR  37
  300 CONTINUE                                                                  USERSR  38
      DO 310 I=1,15                                                             USERSR  39
        AA(IPTR+138+I) = WSESAV(I)                                              USERSR  40
        IF (I .LE. 5)  AA(IPTR+I+128) = WCCSAV(I)                               HVAC12 276
  310 CONTINUE                                                                  USERSR  42
C              Add Natural Ventilation control variables                        -42j    22
        AA(IPTR+134) = IVENTF                                                   -42j    23
        AA(IPTR+135) = INT(VENTF)                                               -42j    24
        AA(IPTR+136) = IVENTG                                                   -42j    25
        AA(IPTR+137) = QCV                                                      -42j    26
        AA(IPTR+138) = VNTfrac                                                  -44c6    6
      AA(IPTR+154) = PLRCC                                                      -044c1  12
C              ADD GAS HP VARS TO BLOCK                                         -044c1  13
      DO 400 II=1,60                                                            USERSR  45
  400 AA(IPTR+154+II) = SHP(II)                                                 USERSR  46
c              add dual-duct hot-deck variables                                 USERSR  47
      DO II=1,12                                                                USERSR  48
        AA(IPTR+214+II) = DDSDAT(II)                                            USERSR  49
      ENDDO                                                                     USERSR  50
c              add refrigeration variables                                      HVAC16 153
      IF (<REFG-ZONE-ZP1> .GT. 0)  THEN                                         HVAC16 154
        DO II=1,65                                                              HVAC16 155
          AA(IPTR+226+II) = REFGDAT(II)                                         HVAC16 156
        ENDDO                                                                   HVAC16 157
      ELSE                                                                      -044c  700
C              if no refrig place the WARMEST/COLDEST TSIG values here          -044c  701
        AA(IPTR+268) = <TSIGc>                                                  -044c  702
        AA(IPTR+290) = <TSIGh>                                                  -044c  703
      ENDIF                                                                     HVAC16 158
c              Energy Recovery Ventilator                                       ERV    360
      IF (<sy;ERVentilator> .GT. 0)                                             ERV    361
     &  CALL ERVentilator(62, <sy;ERVentilator>, xx,xx,xx,xx,xx,xx)             ERV    362
c              DCV items                                                        -044c  704
      AA(IPTR+319) = <DCVOAcfmS>                                                -044c  705
      AA(IPTR+320) = <DCVOAcfmFracCrit>                                         -044c  706
      RETURN                                                                    USERSR  51
      END                                                                       USERSR  52
      SUBROUTINE  USERZR( ZP1,ZP2 )                                             USERZR   2
C                                                                               USERZR   3
C                            FILL ZONE REPORT-BLOCK BUFFER                      USERZR   4
C                                                                               USERZR   5
C              DEVELOPED BY                                                     -130     1
C                            J. J. Hirsch & S. D. Gates                         -130     2
C                            James J. Hirsch & Associates                       -130     3
C                            Camarillo, California                              -130     4
C              BASED UPON CODE DEVELOPED BY J. J. Hirsch and                    -130     5
C                            W. F. Buhl                                         -130     6
C                            A. E. Erdem                                        -130     7
C                            Lawrence Berkeley National Laboratory              -130     8
C                            University of California                           -130     9
Copyright (c) 1997 by James J. Hirsch. All Rights Reserved. Unpublished         -130    10
c rights reserved under the Copyright Laws of the United States.                -130    11
c RESTRICTED RIGHTS NOTICE: Government use, reproduction or disclosure          -130    12
c is subject to restrictions as set forth in Rights in Data (g)(3) in           -130    13
c UC/LBL purchase order 4607010 with J.J. Hirsch & Associates.                  -130    14
C                                                                               USERZR   7
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON  /ZONED / EXCFM,FH,FC,CFMZ,QHBZ,QOVER,THZ,TCZ,ERMAX,ERMIN,         /ZONED/  2
     1                 TRY,FTD,CORINT,G0,G1,G2,G3,SIGMAG,TL,ZQHR,TAVE,          /ZONED/  3
     2                 ZQH,ZQC,FCHPS(15),ACFM,ZKW,TCMINZ,THMAXZ,                /ZONED/  4
     3                 ERMAXM,ERMINM,THR,CSSCND,CSSVEC,HENOW,QGWIN,             /ZONED/  5
     4                 QSNABT,QGOPWL,QGVEC,CFMCVT,SSFPT,CFMVNT,ZFANKW,          /ZONED/  6
     5                 ZKWCBT,ZKWHBT,ZCapRbbrd, XC,ZC,XH,ZH                     -044e2   7
      REAL ZONED(63)                                                            -044e2   8
      EQUIVALENCE (ZONED(1),EXCFM)                                              /ZONED/  9
      COMMON  /WCCDAT/ GPMS, GPMHS, GPMCS, QHLUPS, QCLUPS,                      /WCCDAT/ 2
     $                 GPMZ, GPMHZ, GPMCZ, QHLUPZ, QCLUPZ                       /WCCDAT/ 3
      DIMENSION        WCCSAV(10)                                               /WCCDAT/ 4
      EQUIVALENCE      (WCCSAV(1), GPMS)                                        /WCCDAT/ 5
      COMMON /WSEDAT/  CAPAIR,CAPWTR,QCWSEM,QCWSE,WSEDTA,WSEDTW,WSEXEF          /WSEDAT/ 2
     $                ,WSENTU,WSEUA,WSEQMX,WSEPLR,WSEDT,WSE13,WSE14             /WSEDAT/ 3
     $                ,WSE15                                                    /WSEDAT/ 4
      DIMENSION        WSESAV(15)                                               /WSEDAT/ 5
      EQUIVALENCE      (WSESAV(1),CAPAIR)                                       /WSEDAT/ 6
      COMMON /NVNDAT/ VENTF,VNTCFM,NDH,IVENTG,QCVZ,VNTfrac                      -44c6    1
      COMMON  /SSRESY/  IVENTF, XRAN                                            /SSRESY/ 2
     1  , CFMCV1, CFMCV2, DEL   , DQGVC1, DQGVNT, DTMIN , FANHTM, FLWMUL        /SSRESY/ 3
     2  , IAFTYP, ISSV  , IVDONE, IZP1RM, IZP1SS, MINH  , MOUH  , MRRFSV        /SSRESY/ 4
     3  , MRRVSF, MRY   , MRZ   , MSRFSV, MSRVSF, NADJ  , NCWCON, NDELT         /SSRESY/ 5
     4  , Q10   , QGVEC1, QGVEC2, QGVNT , QGWAL , QHBZNX, QIN   , QINXS         /SSRESY/ 6
     5  , QLWAL , QOUT  , QOUTXS, QPNX  , QSUNIN, QW    , SSVFP , T1T           /SSRESY/ 7
     6  , T1TB  , T2MAX , T2T   , T2TB  , T2TFV , TINNEW, TNEXT , TOTNEW        /SSRESY/ 8
     7  , UOT   , UVRMG , UVT   , VNTRM , ZDELMN, ZDELMX, ZMNEXT                /SSRESY/ 9
     1  , ECPLR(3), ERMXEC(4), TCMNEC(3), QCV, TVZ, NVCFMS, TNVCFMS             -045d    1
      INTEGER ZP1,ZP2                                                           USERZR  12
      IPTR   = <IZNBUFP>                                                        USERZR  13
C                                                                               USERZR  14
C              FIRST TRANSFER ZP1,ZP2 DATA TO THE BUFFER                        USERZR  15
C                                                                               USERZR  16
      AA(IPTR)   = <QS>                                                         USERZR  17
      AA(IPTR+1) = <QL>                                                         USERZR  18
      AA(IPTR+2) = <ZKW>                                                        USERZR  19
      AA(IPTR+3) = <QP>                                                         USERZR  20
      AA(IPTR+4) = <CFMINF>                                                     USERZR  21
      AA(IPTR+5) = <TNOW>                                                       USERZR  22
      AA(IPTR+6) = <TSET>                                                       USERZR  23
      AA(IPTR+7) = <QNOW>                                                       USERZR  24
      AA(IPTR+8) = <CONDUCHR>                                                   USERZR  25
      AA(IPTR+9) = 0.0                                                          USERZR  26
      IPTRX = IPTR + 9                                                          USERZR  27
C                                                                               USERZR  28
C              NEXT TRANSFER ZONE DATA COMMON BLOCK TO BUFFER                   USERZR  29
C                                                                               USERZR  30
      AA(IPTRX+1) = <zn.ExhCFM>  ! EXCFM=0 if EXHAUST-SOURCE=2                  -046   309
      DO 100 I=2,45                                                             -046   310
      AA(IPTRX+I) = ZONED(I)                                                    USERZR  32
  100 CONTINUE                                                                  USERZR  33
C              SUNSPACE-RELATED ZONE VARIABLES                                  USERZR  34
      AA(IPTR+55) = <SGIW0>                                                     USERZR  35
      AA(IPTR+56) = <SLIW0>                                                     USERZR  36
      IPTRX = IPTR + 56                                                         USERZR  37
      DO 200 I=1,5                                                              USERZR  38
      AA(IPTRX+I) = ZONED(48+I)                                                 USERZR  39
  200 CONTINUE                                                                  USERZR  40
      AA(IPTRX+6) = <CFMVNT>                                                    USERZR  41
      AA(IPTRX+7) = -<QGVNT>                                                    USERZR  42
      AA(IPTRX+4) = -AA(IPTRX+4)                                                USERZR  43
      DO  I=1,5                                                                 HVAC12 278
        AA(IPTR+I+63) = WCCSAV(5+I)                                             HVAC12 279
      ENDDO                                                                     HVAC12 280
C              Add Natural Ventilation zone variables                           -42j    30
        AA(IPTR+69) = QCVZ                                                      -42j    31
        AA(IPTR+70) = VNTCFM                                                    -42j    32
        AA(IPTR+71) = VNTCFM*60.0/<VOLUME>                                      -42j    33
        AA(IPTR+72) = TVZ                                                       -42j    34
C              74 is unused                                                     -42j    35
      DO 320 I=1,12                                                             USERZR  47
        AA(IPTR+I+73) = WSESAV(I)                                               USERZR  48
  320 CONTINUE                                                                  USERZR  49
c              Ice skating rink                                                 IcRink  78
      IF (<zn:ICE-RINK> .GT. 0)  CALL IceRink(62, <zn:ICE-RINK>)                IcRink  79
c              DCV items                                                        -044c  707
      AA(IPTR+99)  = <DCVOAcfmZ>                                                -044c  708
      AA(IPTR+100) = <DCVOAcfmFrac>                                             -044c  709
      RETURN                                                                    USERZR  50
      END                                                                       USERZR  51
      SUBROUTINE VARVOL                                                         VARVOL   2
C                                                                               VARVOL   3
C                            VAV SINGLE DUCT ZONE CALCULATIONS                  VARVOL   4
C                                                                               VARVOL   5
C              DEVELOPED BY                                                     -130     1
C                            J. J. Hirsch & S. D. Gates                         -130     2
C                            James J. Hirsch & Associates                       -130     3
C                            Camarillo, California                              -130     4
C              BASED UPON CODE DEVELOPED BY J. J. Hirsch and                    -130     5
C                            W. F. Buhl                                         -130     6
C                            A. E. Erdem                                        -130     7
C                            Lawrence Berkeley National Laboratory              -130     8
C                            University of California                           -130     9
Copyright (c) 1997 by James J. Hirsch. All Rights Reserved. Unpublished         -130    10
c rights reserved under the Copyright Laws of the United States.                -130    11
c RESTRICTED RIGHTS NOTICE: Government use, reproduction or disclosure          -130    12
c is subject to restrictions as set forth in Rights in Data (g)(3) in           -130    13
c UC/LBL purchase order 4607010 with J.J. Hirsch & Associates.                  -130    14
C                                                                               VARVOL   7
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                 IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                        /FILES/  3
     2               , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                   /FILES/  4
     3                 IHRREP(3), IHRPAS(2)                                     /FILES/  5
      COMMON  /REPORT/ IREPRT(4,37),IPRG,IUNIQV(100),IUNIQS(100),IUNIQL         HVAC14   4
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON  /BIN5  / Bin5Cool(12), Bin5Heat(12), Bin5CFM(12),                 /BIN5/   2
     &                 Bin5PLR(12), TCstart, TCend, THstart, THend              /BIN5/   3
      DIMENSION        Bin5Bins(52)                                             /BIN5/   4
      EQUIVALENCE      (Bin5Bins(1), Bin5Cool(1))                               /BIN5/   5
      COMMON  /ENDUSE/ SUPPKW, HEATKW                                           HVAC27   1
      COMMON  /ENDKY / LightEndUse,  TaskEndUse, MiscEndUse, HeatEndUse,        /ENDKY/  2
     &                 CoolEndUse , HtRejEndUse,  AuxEndUse, VentEndUse,        /ENDKY/  3
     &                 RefgEndUse ,  SuppEndUse,  DHWEndUse, ExtEndUse          /ENDKY/  4
      INTEGER          LightEndUse,  TaskEndUse, MiscEndUse, HeatEndUse,        /ENDKY/  5
     &                 CoolEndUse , HtRejEndUse,  AuxEndUse, VentEndUse,        /ENDKY/  6
     &                 RefgEndUse ,  SuppEndUse,  DHWEndUse,  ExtEndUse         /ENDKY/  7
      common  /FNSYS/  ISKIPS, MSYSF(120)                                       /FNSYS/  2
      COMMON  /HRREP / Irb, Ihrp, Lrb, Lhrp, Nrb, Nhrp, IVTLIM(3,50),           HR       5
     &                 IGRPtr, IBRPtr, IRSch, IRSchT(5),                        HR       6
     &                 NHRTyp(3), ITBUF(3), ITBUFB(3), ITBUFE(3),               HR       7
     &                 IHREOF, ICDFLG                                           HR       8
      COMMON  /MISCD / TEMPS(4,9999),CONS(5),TEMPSL(9999),                      -048a   10
     1                 BLDGQH,BLDGQC,BLDGQL,BLDGP,BPMULT,                       /MISCD/  3
     $                 DBTMIN,DBTMAX,WMIN,WMAX,NSPZ(9999),                      -048a   11
     3                 DQ, DTP, DTR, DTS, FPI, PLRCC , POM, TC2, TDM,           /MISCD/  5
     4                 TRA,WCOL,WCOLM,WMM,YPI,KWBTU,BTUKW,UNFILD,Unusedm        RemPA   45
      REAL             KWBTU                                                    /MISCD/  7
      COMMON  /PLANTD/ QHMP,TMP,CFMP,QHPP,CFMPP,                                /PLANTD/ 2
     1                 QHZP,TZP,DHWPKW,DHWPLF,DHWQRP                            RemPA   46
      REAL             PLANTD(10)                                               RemPA   47
      EQUIVALENCE      (PLANTD(1), QHMP)                                        RemPA   48
C              SYSTEM LEVEL VARIABLES FOR DESICCANT SYSTEMS, BOTH TOTAL         /DSYSTD/ 2
C              AND INTEGRATED                                                   /DSYSTD/ 3
      COMMON  /DSYSTD/  SCGAS, QREG, WBR, WB8, T8, W8, WB9, T9, W9, EFF,        /DSYSTD/ 4
     1                  DTON, DMODE(7), ERMAX4, ERMAX5, ERMAX6, OPMODE,         /DSYSTD/ 5
     2                  DBOA,WOA,DGAS,DKW,TCONDd,QCDTOT,QCDS,QCDL,              /DSYSTD/ 6
     3                  POA,DFANKW,RFANKW,DMOTKW,EVKW,QCEVT,QCEVS,              /DSYSTD/ 7
     4                  QCEVL,TCMNEV                                            /DSYSTD/ 8
      REAL DSYSTD(39)                                                           /DSYSTD/ 9
      EQUIVALENCE (DSYSTD(1), SCGAS)                                            /DSYSTD/10
      COMMON /NVNDAT/ VENTF,VNTCFM,NDH,IVENTG,QCVZ,VNTfrac                      -44c6    1
      COMMON  /SSRESY/  IVENTF, XRAN                                            /SSRESY/ 2
     1  , CFMCV1, CFMCV2, DEL   , DQGVC1, DQGVNT, DTMIN , FANHTM, FLWMUL        /SSRESY/ 3
     2  , IAFTYP, ISSV  , IVDONE, IZP1RM, IZP1SS, MINH  , MOUH  , MRRFSV        /SSRESY/ 4
     3  , MRRVSF, MRY   , MRZ   , MSRFSV, MSRVSF, NADJ  , NCWCON, NDELT         /SSRESY/ 5
     4  , Q10   , QGVEC1, QGVEC2, QGVNT , QGWAL , QHBZNX, QIN   , QINXS         /SSRESY/ 6
     5  , QLWAL , QOUT  , QOUTXS, QPNX  , QSUNIN, QW    , SSVFP , T1T           /SSRESY/ 7
     6  , T1TB  , T2MAX , T2T   , T2TB  , T2TFV , TINNEW, TNEXT , TOTNEW        /SSRESY/ 8
     7  , UOT   , UVRMG , UVT   , VNTRM , ZDELMN, ZDELMX, ZMNEXT                /SSRESY/ 9
     1  , ECPLR(3), ERMXEC(4), TCMNEC(3), QCV, TVZ, NVCFMS, TNVCFMS             -045d    1
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      COMMON  /RQLSCH/ RQLSCH(3)                                                /RQLSCH/ 2
      COMMON  /SYSTD / TH,TC,TM,TR,QH,QC,QHZ,QCZ,QHB,QHP,QHUM,                  /SYSTD/  2
     1                 QDHUM,TCMIN,THMAX,QLSUM,QPSUM,CFM,CFMH,CFMC,             /SYSTD/  3
     2                 RCFM,ECFM,CINF,FON,HON,CON,BON,SCONS(3),PH,PC,           /SYSTD/  4
     3                 SKW,FANKW,unused1,WR,WM,WCOIL,WW,PO,D,                   -046f    1
     4                 FTEMP,TCR,QHR,RfanPumpKW,SGAS,SKWQH,SKWQC,QCLAT,         -131    23
     5                 SFKW,RFKW,FONNGT,WSURF,RWalkinQ,TSURF,TRh,               -131    24
     6                 CBF,CBF1,CBF2,EON,PLRCFM,PLRC,PLRH,QCM1,                 /SYSTD/  8
     7                 QCM2,QHM1,EIRM1,EIRM2,EIR,OFKW,QCT,QCS,                  /SYSTD/  9
     8                 WRMAX,WRMIN,CFMRAT,QdistG,QdistL,RON,QHT,                /SYSTD/ 10
     9                 TPOMIN,POMIN,QHSUP,QRSENS,QRLAT,QRREC,QRREJ,             /SYSTD/ 11
     1                 RCOMKW,RDEFKW,RAUXKW,ECFMP,CFMIN,CINFP,DT,DW,            /SYSTD/ 12
     2                 EWB,IC,NATTSP,Q,RETR,SLOAD,QLSUMP,T,TCHUM,TEND,          /SYSTD/ 13
     3                 TS,hgbmin,HPDefE,EconoOnly,TDuctEnv,                     -044e1   1
     4                 QCUNMT,CapRh,CapRph,CapRc                                HVAC25   3
      REAL             SYSTD(113)                                               HVAC19  13
      EQUIVALENCE      (SYSTD(1),TH)                                            RemPA   65
      COMMON  /REFGD / QRNOW, CRNOW, QR(3), RQSSCH(3), AUXSCH(3),               /REFGD/  2
     &                 QSENS(3), QLAT(3), QDEF(3),SWEATKW(3),                   /REFGD/  3
     &                 COMPKW1(3), COMPKW2(3), QREC1(3), QREC2(3),              /REFGD/  4
     &                 QREJ1(3), QREJ2(3), TcondR, PLR(3), TREJ1, TREJ2,        /REFGD/  5
     &                 TREC1, TREC2, EIR1(3), EIR1r(3),EIR2(3), GPMcw,          /REFGD/  6
     &                 FRAC1, FRAC2, CONDcap, CONDplr, TcondFloat, EIR3         /REFGD/  7
      REAL             REFGDAT(65)                                              /REFGD/  8
      EQUIVALENCE      (REFGDAT(1), QRNOW)                                      /REFGD/  9
      COMMON  /TIME  / IDOY, IYR, IMO, IDAY, IHR,                               Time     4
     &                 ISCMO, ISCDAY, ISCHR, IDOW, ISCDOW, iDSdates(6),         -044e5   1
     &                 iTimeFlg, iDSFlg, iDDFlg, InitialFlg, LeapYr,            Time     6
     &                 CLOCK(10), MONDSC(13), MONLEN(12), MONSDA(12)            HR      12
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
      COMMON  /ZONED / EXCFM,FH,FC,CFMZ,QHBZ,QOVER,THZ,TCZ,ERMAX,ERMIN,         /ZONED/  2
     1                 TRY,FTD,CORINT,G0,G1,G2,G3,SIGMAG,TL,ZQHR,TAVE,          /ZONED/  3
     2                 ZQH,ZQC,FCHPS(15),ACFM,ZKW,TCMINZ,THMAXZ,                /ZONED/  4
     3                 ERMAXM,ERMINM,THR,CSSCND,CSSVEC,HENOW,QGWIN,             /ZONED/  5
     4                 QSNABT,QGOPWL,QGVEC,CFMCVT,SSFPT,CFMVNT,ZFANKW,          /ZONED/  6
     5                 ZKWCBT,ZKWHBT,ZCapRbbrd, XC,ZC,XH,ZH                     -044e2   7
      REAL ZONED(63)                                                            -044e2   8
      EQUIVALENCE (ZONED(1),EXCFM)                                              /ZONED/  9
      COMMON  /FZZZ4/   IREC  , ISZHUM, QNEED, QRDEF, QREJ, TCOND               /FZZZ4/  2
      COMMON  /DESHRQ/ NDESDY, IDDTYP(2), DESHRQ(360)                           Time     3
      COMMON /WSEDAT/  CAPAIR,CAPWTR,QCWSEM,QCWSE,WSEDTA,WSEDTW,WSEXEF          /WSEDAT/ 2
     $                ,WSENTU,WSEUA,WSEQMX,WSEPLR,WSEDT,WSE13,WSE14             /WSEDAT/ 3
     $                ,WSE15                                                    /WSEDAT/ 4
      DIMENSION        WSESAV(15)                                               /WSEDAT/ 5
      EQUIVALENCE      (WSESAV(1),CAPAIR)                                       /WSEDAT/ 6
      COMMON /SSPDAT/  PLRCS,QCCKWS,QCCMPS,PLRHS,QHCKWS,QHCMPS                  /SSPDAT/ 2
     $                ,PLRFS,PLRFCS,PLRFHS,sspss                                /SSPDAT/ 3
     $                ,PLRCZ,QCCKWZ,QCCMPZ,PLRHZ,QHCKWZ,QHCMPZ                  /SSPDAT/ 4
     $                ,PLRFZ,PLRFCZ,PLRFHZ,sspsz                                /SSPDAT/ 5
     $                ,ISSPF,IWCCF,IPCCF,SSPSAV                                 /SSPDAT/ 6
      DIMENSION        SSPD(24)                                                 JJHfix   1
      EQUIVALENCE      (SSPD(1),PLRCS)                                          /SSPDAT/ 8
      DIMENSION Xlimits(2)                                                      HVAC16 160
      REAL LSR(4)                                                               VARVOL  31
      COMMON  /LENS/   MWFLEN, MRLEN, MSHLEN, MWNLEN, MDRLEN, MXLEN,            /LENS/   2
     1                 MULEN, MZLEN, MIWLEN, MFLLEN,                            /LENS/   3
     2                 LMTB, LLDSOU, MSTLEN, LSTFT, MWLLEN                      /LENS/   4
      COMMON  /PTRBGN/ IWFB, IWPB, ICONSB, IGTB, IWLB, IGEOB, ISHADB,           /PTRBGN/ 2
     &                 IWINB, IDRB, IEWB, IUGB, ISPB, IIWPB, IIWB,              /PTRBGN/ 3
     &                 IFLB, ISPCDB, IOTHB, ILHB, IZQCMB, ISSHDB,               /PTRBGN/ 4
     &                 IOHFIB, IZLSK, IZLSL, ISTFB, ILSSH                       PV2      1
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     /PNTRS/  3
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        /PNTRS/  4
      COMMON  /SIZE/   LENGTH,NWF,NWPAR,NCONS,NGT,NWL,NGEO,                     /SIZE/   2
     1                 NGSHAD, NWIN, NDOOR, NEW, NUG, NSPl, NIWP, NIW,          /SIZE/   3
     &                 NFL, NBR, NOTH, NITH, NOPSRF,                            /SIZE/   4
     &                 NSURF, NSSHD, NSHTOT, NEWshade                           /SIZE/   5
      COMMON /RSVVTD/ CONFRC,HONFRC,NOWFRC,THMXNS                               /RSVVTD/ 2
      REAL NOWFRC                                                               /RSVVTD/ 3
      COMMON /SHP   / QCRUN,QCLOAD,QCGAS,QCAUX,QCGSLD,QCGSUP,                   /SHP/    2
     1                QCWAS,QCWASU,QCGSAV,QCFAN,                                /SHP/    3
     2                QHRUN,QHLOAD,QHGAS,QHAUX,QHGSLD,QHGSUP,                   /SHP/    4
     3                QHWAS,QHWASU,QHGDFR,QHFAN,          CUR(25),              /SHP/    5
     4                GSAV1,GASV2,PCH,ISZCZ,GCAP(2),GEDB,QHDFRG,                -044c1   1
     5                GRPM,PLRSUP,CFMCYC,CLPLR,CFMVVT,QHZHP,PCCEDB,             /SHP/    7
     6                IHPREP,IHPOUT,IHPHRR,IHPHRN,IRST,IREN                     /SHP/    8
      COMMON /SHPZ  / QCRUNZ,QCLOADZ,QCGASZ,QCAUXZ,QCGSLDZ,QCGSUPZ,             /SHP/    9
     1                QCWASZ,QCWASUZ,QCGSAVZ,QCFANZ,                            /SHP/   10
     2                QHRUNZ,QHLOADZ,QHGASZ,QHAUXZ,QHGSLDZ,QHGSUPZ,             /SHP/   11
     3                QHWASZ,QHWASUZ,QHGDFRZ,QHFANZ                             /SHP/   12
      DIMENSION       SHP(60),SHPZ(20)                                          /SHP/   13
      EQUIVALENCE     (SHP,QCRUN),(SHPZ,QCRUNZ)                                 /SHP/   14
     1               ,(DFM1,CUR(18)),(DFM2,CUR(19)),(DFM3,CUR(20))              /SHP/   15
      COMMON /FFUEL/ FFUEL, FurnAuxFuel, FurnAuxkW, PLRF                        /FFUEL/  2
      COMMON /WCTRL/   IwinReturn, Imsgflg                                      /WCTRL/  2
#ifndef _DLL                                                                 /* -048     1 */ 
      COMMON /WIN_MB/ MB_OK,MB_ICONSTOP,MB_ICONEXCLAMATION,MB_TASKMODAL,        -048     2
     &                MB_ICONINFORMATION                                        -048     3
#else                                                                        /* -048     4 */ 
      include 'msgbox.fi'                                                       -048     5
#endif                                                                       /* -048     6 */ 
c                                                                               VARVOL  35
      INTEGER ZP1save                                                           -041b    5
      LOGICAL Floating                                                          -041b    6
c              If we are in a VAV system there is the possibiltiy that          VARVOL  36
c              the zones can ask for more air than the fan can supply.          VARVOL  37
c              This condition was checked for in DKTEMP, and the ratio          VARVOL  38
c              of what the zones may ask for vs. the supply capacity is         VARVOL  39
c              stored in CFMRAT.                                                VARVOL  40
c                                                                               VARVOL  41
      QGBB   = 0.0                                                              VARVOL  42
      QGZC   = 0.0                                                              VARVOL  43
      DO I=1,4                                                                  VARVOL  44
          LSR(I) = 1.0                                                          VARVOL  45
      END DO                                                                    VARVOL  46
C              SINCE ONLY ZONES WITH REHEAT COILS CAN BE HEATED                 VARVOL  47
C              ACTIVELY WE NEED TO SAVE HON AND SET IT ON THE                   VARVOL  48
C              BASIS OF REHEAT COILS FOR THE ZONE LOOP                          VARVOL  49
      HONS     = HON                                                            -041b    7
      IWCCF    = 0                                                              -041b    8
      Floating = .False.                                                        -041b    9
C             SET SS-P flag for saving PLR info                                 VARVOL  66
      ISSPF = 0                                                                 VARVOL  67
      IF((IREPRT(2,23).NE.0).OR.(IREPRT(2,27).NE.0))  ISSPF = 1                 IREPRT 225
      IF((ICODE .GE. 6).AND.(ICODE.LE.10))  ISSPF = 0                           VARVOL  69
c                                                                               XFC2   363
c              See if refg equipment exists                                     XFC2   364
      IF (<REFG-ZONE-ZP1> .GT. 0)  THEN                                         XFC2   365
c              pointers to the zone containing the refg equip                   XFC2   366
        ZP1 = <REFG-ZONE-ZP1>                                                   XFC2   367
        ZP2 = <ZP2>                                                             XFC2   368
c              fraction of AUX and ASH kw that is space gain                    XFC2   369
        FRACspace = (1.0-<REFG-AUX-FRAC>)                                       XFC2   370
c              Process all equipment operating at different levels              XFC2   371
        IE = <NUM-REFG-EQUIP>                                                   XFC2   372
        DO  IG=1,IE                                                             XFC2   373
c              First, temperature-independent loads.                            XFC2   374
c              schedules for auxiliary heat gains                               XFC2   375
          AUXSCH(IG) = SchVal(<REFG-AUX-SCH>, 1.)                               Time   399
          Qfixed = <REFG-AUX-KW>*BTUKW*AUXSCH(IG) * FRACspace                   XFC2   379
c              Anti-sweat heaters                                               XFC2   380
c              use last hour's return humidity to decide ASH space gain         XFC2   381
          IF (<REFG-ASH-KW> .GT. 0.                                             XFC2   382
     &                       .AND.  <REFG-AUX-FRAC> .LT. 1.0)  THEN             XFC2   383
c              Setpoint if heaters controlled on room humidity ratio            XFC2   384
            WON  = <REFG-ASH-HIGHW>                                             XFC2   385
            WOFF = <REFG-ASH-LOWW>                                              XFC2   386
            IF(<PASTWR> .GT. WOFF) THEN                                         XFC2   387
              FRACON = 1.0                                                      XFC2   388
              IF(WON .GT. 0.  .AND.  <PASTWR> .LT. WON                          XFC2   389
     &                        .AND.  WON .GT. WOFF)  THEN                       XFC2   390
c                 Power consumption of anti-sweat heaters as                    XFC2   391
c                 a function of space humidity ratio                            XFC2   392
                FRACON  = AMIN1(1.,AMAX1(0.,                                    XFC2   393
     &                                  (<PASTWR>-WOFF)/(WON - WOFF)))          XFC2   394
              ENDIF                                                             XFC2   395
            ELSE                                                                XFC2   396
              FRACON = 0.0                                                      XFC2   397
            ENDIF                                                               XFC2   398
c             Heat into space                                                   XFC2   399
            Qfixed = Qfixed + <REFG-ASH-KW>*BTUKW*FRACON * FRACspace            XFC2   400
            FRACON  = 0.0                                                       XFC2   401
          ENDIF                                                                 XFC2   402
c              store temperature-independent load for TEMDEV                    XFC2   403
          CALL PutVars1(<zn;RefgFixedPtr>, Qfixed)                              XFC2   404
c                                                                               XFC2   405
c              Next, temperature-dependent loads.  Modify the design UA         XFC2   406
c              by the hourly schedule.                                          XFC2   407
          RQSSCH(IG) = SchVal(<REFG-SENS-SCH>, 1.)                              Time   400
          CALL GetDesignVars3(<zn;RefgCondPtr>, xx,UA,TCASE)                    XFC2   411
          UA = UA * RQSSCH(IG)                                                  XFC2   412
          CALL PutVars3(<zn;RefgCondPtr>, xx,UA,TCASE)                          XFC2   413
c                                                                               XFC2   414
c              schedules for latent heat gains                                  XFC2   415
          RQLSCH(IG) = SchVal(<REFG-LAT-SCH>, 1.)                               Time   401
        ENDDO  ! IG                                                             XFC2   419
      ENDIF    ! REFG-ZONE-ZP1                                                  XFC2   420
C********************** run function : VARVOL-0 ********************            VARVOL 100
      IF( MSYSF(90) .NE. 0 )   CALL  FINTS( MSYSF(90), 0. )                     VARVOL 101
C*******************************************************************            VARVOL 102
 40   CONTINUE                                                                  VARVOL 103
C                                                                               VARVOL 104
c                                                                               HVAC1  790
c              set circulation-loop restrictions on heating and                 HVAC1  791
c              cooling capacity for use in DKTEMP                               HVAC1  792
      IF (<HW-LOOP> .NE. 0)  THEN                                               HVAC1  793
c              heating coil is hot water - pointer to loop                      HVAC1  794
        JLP   = <HW-LOOP>                                                       HVAC1  795
        CapRh = <lp;HCAP_RATIO>                                                 HVAC16 217
      ELSE                                                                      HVAC1  797
        CapRh = 1.0                                                             HVAC1  798
      ENDIF                                                                     HVAC1  799
      IF (<PHW-LOOP> .NE. 0)  THEN                                              HVAC1  800
c              preheat coil is hot water - pointer to loop                      HVAC1  801
        JLP    = <PHW-LOOP>                                                     HVAC1  802
        CapRph = <lp;HCAP_RATIO>                                                HVAC16 218
      ELSE                                                                      HVAC1  804
        CapRph = 1.0                                                            HVAC1  805
      ENDIF                                                                     HVAC1  806
      IF (<CHW-LOOP> .NE. 0)  THEN                                              HVAC1  807
c              cooling coil is hot water - pointer to loop                      HVAC1  808
        JLP   = <CHW-LOOP>                                                      HVAC1  809
        CapRc = <lp;CCAP_RATIO>                                                 HVAC16 219
      ELSE                                                                      HVAC1  811
        CapRc = 1.0                                                             HVAC1  812
      ENDIF                                                                     HVAC1  813
c              If a water-cooled condenser                                      -044d   81
      IF (<CW-LOOP> .ne. 0) THEN                                                -047k   92
        Jlp = <CW-LOOP>                                                         -044d   83
c              If loop pumps scheduled off (-1), or hi/lo alarm, make           -044d   84
c              sure cooling and/or heating is off                               -044d   85
        IF (<lp;CTRL_MODE> .EQ. -1  .or.                                        -044d   86
     &     (<HEAT-SOURCE> .eq. 4  .and.  ! connected to WLHP                    -044d   87
     &     (<lp;COIL_EWTest> .lt. <lp:MIN-ALARM-T>  .or.                        -044d   88
     &      <lp;COIL_EWTest> .gt. <lp:MAX-ALARM-T>)))  THEN                     -044d   89
          CON   = 0.                                                            -044d   90
          CapRc = 0.                                                            -044d   91
          IF (<HEAT-SOURCE> .eq. 4)  CapRh = 0.                                 -044d   92
        ENDIF                                                                   -044d   93
      ENDIF                                                                     -044d   94
c                                                                               HVAC1  814
C              CALL THE ROUTINE TO SET SUPPLY TEMP                              VARVOL 105
C              FOR SINGLE ZONE SYSTEMS THIS IS DONE ONLY TO                     VARVOL 106
C              GET THE LIMITS FOR THE SUPPLY AIR TEMP                           VARVOL 107
      CALL DKTEMP                                                               VARVOL 108
C              CALL NATVNT TO CHECK FOR NATURAL ENTILATION                      -42j    36
      IF(<VENT-METHOD> .NE. 0)  CALL NATVNT                                     -42j    37
C              FOR SINGLE ZONE SYSTEMS TC (IF NON-ZERO) IS THE MAX              VARVOL 111
C              SUPPLY FOR HUMIDITY CONTROL. SAVE IT                             VARVOL 112
      TCHUM  = TC                                                               VARVOL 113
      DO I=1,38                                                                 -44c3a  37
        DSYSTD(I)=0.0                                                           -44c3a  38
      ENDDO                                                                     -44c3a  39
      <DCVOAcfmS> = 0.0                                                         -044c  714
      <DCVOAcfmFracCrit> = 0.0                                                  -044c  715
      IZMODE = 0                                                                -44c3a  40
C              SET ZP1 TO POINT TO THE FIRST ZONE                               VARVOL 114
      ZP1    = ISZ                                                              VARVOL 115
C                                                                               VARVOL 116
C              LOOP THROUGH THE ZONES                                           VARVOL 117
C                                                                               VARVOL 118
      DO 50 NZ=1,NSZ                                                            VARVOL 119
      ISZCZ  = 0                                                                VARVOL 120
      IEVCZ = 0                                                                 VARVOL 121
      ISZHUM = 0                                                                VARVOL 122
      IF( NZ .EQ. 1 )  THEN                                                     VARVOL 123
C              Single zone systems - control zone flags                         VARVOL 124
        IF((ICODE.EQ.2).OR.(ICODE.EQ.19).OR.(ICODE.EQ.28)) THEN                 VARVOL 125
          ISZCZ = 1                                                             VARVOL 126
C              IF THE MAX-HUMIDITY CONTROLLER HAS TAKEN OVER SET A FLAG         VARVOL 127
          IF (TC .GT. 0.0  .AND.  <DESICCANT> .EQ. 0  .AND.                     ERV    364
     &      <MAX-HUMIDITY> .GT. 0.  .AND.  <MAX-HUMIDITY> .LT. 99.)             ERV    365
     &      ISZHUM = 1                                                          ERV    366
C              packaged systems - if condenser h-recovery allow central heat    VARVOL 131
          IF( (ICODE.NE.2).AND.(<MAX-COND-RCVRY>.GT.0) ) ISZHUM = 0             VARVOL 132
        ENDIF                                                                   VARVOL 133
C              Evap-cooler system - control zone flag                           VARVOL 134
        IF(ICODE .EQ. 26) IEVCZ = 1                                             VARVOL 135
      ENDIF                                                                     VARVOL 136
C              ZERO THE ZONE DATA COMMON BLOCK                                  VARVOL 137
      DO 111 I=1,63                                                             -044e2 189
  111 ZONED(I) = 0.0                                                            VARVOL 139
      ZP2    = <ZP2>                                                            VARVOL 140
      ZMULT  = <MULTIPLIER>                                                     VARVOL 141
      IZNTYP = <ZONE-TYPE>                                                      VARVOL 142
      <ERMAX> = 0.0                                                             VARVOL 144
      <ERMIN> = 0.0                                                             VARVOL 145
      QCVZ   = 0.0                                                              -42j    38
      VNTCFM = 0.0                                                              -42j    39
c              calc exh pwr if makup by infiltration                            -046   311
      IF (<EXHAUST-SOURCE> .eq. 2  .or.                                         -047b   40
     &    <EXHAUST-SOURCE> .eq. 3)  Call ZoneExhaust(9, xx)                     -047b   41
C              IF FANS ARE ON AND THIS IS A PLENUM SKIP                         VARVOL 146
      IF(((FON.NE.0.).AND.(CFMCYC.NE.0.)) .AND. (<ZONE-TYPE>.EQ.3))             VARVOL 147
     $  GOTO 35                                                                 VARVOL 148
C              SKIP UNNEEDED CALCS                                              VARVOL 151
      ZHON   = 0.                                                               VARVOL 152
C              ZONE HEATING IS AVAIL IF BASEBOARDS ARE PRESENT                  -41l     1
      IF((<BASEBOARD-CTRL>.EQ.1).AND.(<BASEBOARD-RATING>.LT.0.))                -41l     2
     $     ZHON = HONS                                                          -41l     3
      IF((FON.EQ.0.).OR.(CFMCYC.EQ.0.).OR.(<ZONE-TYPE>.NE.1))  GOTO 5           VARVOL 153
C              IF NOT A SINGLE ZONE SYSTEM OR THE CONTROL ZONE                  -41l     4
C              ZONE HEATING AVAIL IF A REHEAT COIL IS PRESENT                   -41l     5
      IF(<REHEAT-DELTA-T> .GT.0.0)  ZHON = HONS                                 VARVOL 158
C              IF NOT SZRH OR PSZ CONTROL ZONE USE ZONE HEATING FLAG            VARVOL 161
      IF ((ISZCZ .EQ. 0) .AND. (IEVCZ .EQ. 0)) HON = ZHON                       VARVOL 162
C                                                                               VARVOL 163
c              Extraction rate calculation.  All supply temperatures            VARVOL 164
c              such as TC, TCHUM, TCMIN, TPOMIN, TH, and THMAX were             VARVOL 165
c              adjusted in DKTEMP to include duct losses, and are the           VARVOL 166
c              temperature entering the zone.                                   VARVOL 167
c              Set reheat coil hourly available capacity ratio                  -044b  165
      IF(<HEATCAPZ> .LT. 0.0) THEN                                              -044b  166
        IF (<HW-LOOPZ> .NE. 0)  THEN                                            -044b  167
c              set hot water circulation loop restrictions                      -044b  168
C              on zonal heating capacity                                        -044b  169
          JLP    = <HW-LOOPZ>                                                   -044b  170
          ZCapRh = <lp;HCAP_RATIO>                                              -044b  171
        ELSE                                                                    -044b  172
C              Not hot water - no on zonal heating restriction                  -044b  173
          ZCapRh = 1.0                                                          -044b  174
        ENDIF                                                                   -044b  175
      ELSE                                                                      -044b  176
C              no coil so no zonal heating capacity                             -044b  177
        ZCapRh = 0.0                                                            -044b  178
      ENDIF                                                                     -044b  179
C                                                                               VARVOL 168
C              Set max, min, and deadband supply temps                          VARVOL 169
      IF(ISZCZ .EQ. 1) THEN                                                     VARVOL 170
C              If this is the control zone for aingle zone system               VARVOL 171
        TC = TCMIN                                                              -047i   53
        TCMINZ = TC                                                             VARVOL 173
C              IF HUM CTRL - MAX SUPPLY IS CTRL ZONE TEMP PLUS REHEAT           VARVOL 174
C              Else it is just the max supply temp                              VARVOL 175
C              If hum control and no central heat, supply cold air              -034   210
C              and reheat with ZONE coils                                       -034   211
        IF((ISZHUM .EQ. 1) .and. (<HEATING-CAPACITY>.GE.-1.))  THEN             -034   212
          THMAXZ = AMIN1(<MAX-SUPPLY-T>,                                        HVAC1  823
     $                   TCHUM + <REHEAT-DELTA-T>*HON*ZCapRh)                   HVAC1  824
          TM     = TCHUM                                                        VARVOL 178
        ELSE                                                                    VARVOL 179
          THMAXZ = THMAX                                                        VARVOL 180
          TM     = TPOMIN                                                       VARVOL 181
        ENDIF                                                                   VARVOL 182
        IF(<INDOOR-FAN-MODE>.EQ.1)  TM = <TNOW>                                 VARVOL 183
      ELSEIF (IEVCZ .EQ. 1) THEN                                                VARVOL 184
c              Evaporative cooler control zone                                  VARVOL 185
        TCMINZ = TCMIN                                                          VARVOL 186
        THMAXZ = THMAX                                                          VARVOL 187
        TM = TPOMIN                                                             VARVOL 188
        IF(<INDOOR-FAN-MODE>.EQ.1)  TM = <TNOW>                                 VARVOL 189
      ELSE                                                                      VARVOL 190
c              VAV zone, or single-zone/evap-cooler non control zone            VARVOL 191
        TCMINZ = TC                                                             VARVOL 192
        TM     = TC                                                             VARVOL 194
c              if reheat loop is overloaded, throttle airflow for               -047f   13
c              reverse action tstat, otherwise throttle dT                      -047f   14
        IF (<THERMOSTAT-TYPE> .ne. 3) THEN                                      -047f   15
          THMAXZ = AMIN1(<MAX-SUPPLY-T>,                                        -047f   16
     $                   TC + <REHEAT-DELTA-T>*HON*ZCapRh)                      -047f   17
        ELSE  ! reverse action - throttle airflow below                         -047f   18
          THMAXZ = AMIN1(<MAX-SUPPLY-T>,                                        -047f   19
     $                   TC + <REHEAT-DELTA-T>*HON)                             -047f   20
        ENDIF                                                                   -047f   21
      ENDIF                                                                     VARVOL 195
C              Set the zone max, min and deadband extraction rates              VARVOL 196
c              The user may specify a larger min-cfm during heating.            VARVOL 197
c              This will cause a jump in the min-cfm once in the heating        VARVOL 198
c              throttling range.                                                VARVOL 199
C                                                                               -44c3a  41
c              First pick up the zone mode - heating or cooling -               -44c3a  42
C              relative to the thermostat setpoint.  For PVVT                   -44c3a  43
C              systems this is done using the CONTROL-ZONE.                     -44c3a  44
      IF(((ICODE.EQ.28).AND.(ISZCZ.EQ.1)) .OR. (ICODE.NE.28)) THEN              -44c3a  45
        IF (<TNOW> .LT. <THZ>+<THROTTLING-RANGE>) THEN                          -44d5    2
          IZMODE = -1                                                           -44d5    3
        ELSEIF (<TNOW> .GT. <TCZ>-<THROTTLING-RANGE>) THEN                      -44d5    4
          IZMODE =  1                                                           -44d5    5
        ELSE                                                                    -44d5    6
          IZMODE = 0                                                            -44d5    7
        ENDIF                                                                   -44d5    8
      ENDIF                                                                     -44c3a  48
c              Max supply airflow w/o cycling                                   -044e  504
      CFMmax = <CFMAX> * CFMRAT                                                 -044e  505
c              Exhaust airflow w/o cycling if makeup by system OA               -046   313
      IF (<EXHAUST-SOURCE> .eq. 1)  Call ZoneExhaust(1, CFMmax)                 -046   314
c              min heating & cooling airflows                                   -044e  508
      IF (<INDOOR-FAN-MODE> .eq. 1  .and.  ! intermittent                       -046   315
     &                ISZCZ .eq. 1) THEN   ! control zone                       -046   316
        CFMINh = Min(CFMmax, <CFMAX>*<MINCFMRH>) * CFMCYC                       -046   317
        CFMINc = Min(CFMmax, <CFMAX>*<MINCFMR>)  * CFMCYC                       -046   318
      ELSE                                                                      -046   319
        CFMINh = Min(CFMmax, Max(<CFMAX>*<MINCFMRH>, EXCFM)) * CFMCYC           -046   320
        CFMINc = Min(CFMmax, Max(<CFMAX>*<MINCFMR>,  EXCFM)) * CFMCYC           -046   321
      ENDIF                                                                     -046   322
c              extraction - cooling, heating, top of deadband                   -044e  511
      XC      = CONS(1) * CFMmax * CFMCYC                                       -044e2 190
      <ERMAX> = XC * (<TNOW>-TCMINZ)                                            -044e2 191
c              if reverse-action VAV, throttle airflow if loop overload         -047f   22
      IF (ZCapRh .eq. 1.) THEN                                                  -047f   23
        XH    = CONS(1) * Min(CFMmax, <CFMAXH>) * CFMCYC                        -047f   24
      ELSE  ! loop overloaded                                                   -047f   25
        XH    = CONS(1) * Min(CFMmax,Max(<CFMAXH>*ZCapRh,CFMINh))*CFMCYC        -047f   26
      ENDIF                                                                     -047f   27
      <ERMIN> = XH * (<TNOW>-THMAXZ)                                            -044e2 193
      IF (<INDOOR-FAN-MODE> .eq. 0) THEN  ! continuous                          -044e2 194
        ZC      = CONS(1) * CFMINc                                              -044e2 195
        ERMAXM  = ZC * (<TNOW>-TM)                                              -044e2 196
      ENDIF                                                                     -044e2 197
      IF (IZMODE .LT. 0)  THEN                                                  -44c3a  49
c              minimum cfm while heating                                        VARVOL 201
        CFMIN  = CFMINh                                                         -44d5   17
c              extraction at bottom of deadband                                 -44d5   18
        IF (<INDOOR-FAN-MODE> .eq. 0) THEN  ! continuous                        -044e2 198
          ZH     = CONS(1)*CFMINh                                               -044e2 199
          ERMINM = ZH * (<TNOW>-TM)                                             -044e2 200
        ENDIF                                                                   -044e2 201
      ELSE                                                                      VARVOL 203
c              minimum cfm while cooling or deadband                            VARVOL 204
        CFMIN  = CFMINc                                                         -44d5   20
        ZH     = ZC                                                             -044e2 202
        ERMINM = ERMAXM                                                         -44d5   21
      ENDIF                                                                     VARVOL 206
c              PVVT/staged-volume                                               -042f  128
      IF (ICODE .EQ. 28)  THEN                                                  -042f  129
        IF (ISZCZ .EQ. 1  .AND.  <AIR/TEMP-CONTROL> .GT. 1)  THEN               -042f  130
c              Staged-Volume control zone                                       -042f  131
          NV      = <sy;StgVNumClStgs>  ! index into staging arrays             -042f  132
          TCMINZ  = <sy.StgVCoolT>                                              -042f  133
          XC      = CONS(1) * <CFMAX>*<sy.StgVCoolCFMr>                         -044e2 203
          <ERMAX> = XC * (<TNOW>-<sy.StgVCoolT>)                                -044e2 204
          NV      = <sy;StgVNumHtStgs>                                          -042f  136
          THMAXZ  = <sy.StgVHeatT>                                              -042f  137
          XH      = CONS(1) * <CFMAX>*<sy.StgVHeatCFMr>                         -044e2 205
          <ERMIN> = XH * (<TNOW>-<sy.StgVHeatT>)                                -044e2 206
          NV = 1                                                                -042f  140
          ZC     = CONS(1) * <CFMAX>*<sy.StgVCoolCFMr>                          -044e2 207
          ERMAXM = ZC * (<TNOW>-TM)                                             -044e2 208
          ZH     = ZC                                                           -044e2 209
          ERMINM = ERMAXM                                                       -042f  143
        ELSEIF (ISZCZ .EQ. 0)  THEN                                             -042f  144
C              Flow is always set by control zone (CFMVVT is fraction)          -042f  145
          CFMIN   = Min(<CFMAX>*CFMVVT, <CFMAX>*CFMRAT)                         -044e2 210
          IF (<EXHAUST-SOURCE> .eq. 1)   ! makeup by system OA                  -046   323
     &      Call ZoneExhaust(1, CFMIN)   ! set EXCFM                            -046   324
          CFMIN   = CFMIN * CFMCYC                                              -044e2 212
          XC      = CONS(1) * CFMIN                                             -044e2 213
          <ERMAX> = XC * (<TNOW>-TCMINZ)                                        -044e2 214
          ZC      = XC                                                          -044e2 215
          ERMAXM  = ZC * (<TNOW>-TM)                                            -044e2 216
          ZH      = ZC                                                          -044e2 217
          ERMINM  = ERMAXM                                                      -044e2 218
          CFMINh  = Min(<CFMAXH>*CFMVVT,<CFMAXH>*CFMRAT)*CFMCYC                 -044e2 219
          XH      = CONS(1) * CFMINh                                            -044e2 220
          <ERMIN> = XH * (<TNOW>-THMAXZ)                                        -044e2 221
        ENDIF                                                                   -042f  151
      ENDIF                                                                     -042f  152
C              CALC ZONE TEMP AND LOAD                                          VARVOL 221
    5 CALL TEMDEV(0)                                                            VARVOL 222
C              IF FANS ARE OFF OR THIS IS NOT A COND ZONE SKIP                  VARVOL 223
      IF (<ZONE-TYPE>.NE.1) GO TO 29                                            VARVOL 224
      TAVE   = (<TNOW>+<TPAST>)*0.5                                             VARVOL 225
      IF((FON .EQ. 0.) .OR. (CFMCYC .EQ. 0.)) goto 174                          VARVOL 226
C              IF THIS IS NOT A THE SZRH/PSZ/PVVT/EVAP-COOL CONTROL ZONE SKIP   VARVOL 227
      IF ((ISZCZ .EQ. 0) .AND. (IEVCZ .EQ. 0)) GO TO 8                          VARVOL 228
      CFMZ   = CFMIN                                                            VARVOL 229
      IF (ICODE.EQ.28 .OR. ICODE.EQ.26 .OR. (<INDOOR-FAN-MODE>.EQ.1             -044e4   8
     $      .AND. (ICODE.EQ.2 .OR. ICODE.EQ.19)) ) THEN                         -044e4   9
C              Set to MAX or MIN supply T depending on                          VARVOL 232
C              which band of the throttling range for the  control zone         VARVOL 233
        IF((<TNOW>.GE.TCZ-THR).OR.(TAVE.GE.TCZ-THR))  THEN                      -044b  180
C              Cooling band                                                     VARVOL 235
          IZMODE = 1                                                            -44c3a  52
          TC = TCMIN                                                            VARVOL 236
          GOTO 9                                                                VARVOL 237
        ELSEIF((<TNOW>.LE.THZ+THR).OR.(TAVE.LE.THZ+THR))  THEN                  -044b  181
C              Heating band                                                     VARVOL 239
          IZMODE = -1                                                           -44c3a  53
          TC = THMAX                                                            VARVOL 240
          GOTO 10                                                               VARVOL 241
        ELSE                                                                    VARVOL 242
C              Deadband - If continuous fans calc mixed supply temp             VARVOL 243
          IF(<INDOOR-FAN-MODE> .EQ. 0)  THEN                                    VARVOL 244
            IZMODE = 0                                                          -44c3a  54
            CFMZ   = CFMIN                                                      -041d   37
            CFMVVT = CFMIN / <CFMAX>                                            -041d   38
            IF (ICODE .EQ. 28  .AND.  <AIR/TEMP-CONTROL> .GT. 1)  THEN          -042f  153
c              staged-volume                                                    -041d   40
              NV = 1                                                            -041d   41
              <sy.StgVFracHi> = 1.                                              -041d   42
              <sy.StgVCFMrHi> = <sy.StgVCoolCFMr>                               -041d   43
            ENDIF                                                               -041d   44
            GOTO 7                                                              VARVOL 245
C              Deadband - If intermittent fans                                  VARVOL 246
          ELSE                                                                  VARVOL 247
C              If a load was calculated that means we started the               VARVOL 248
C              hour in a heating or cooling band then cycle                     VARVOL 249
            IF (<QNOW>.LT.-1.0) THEN                                            VARVOL 250
              IZMODE = -1                                                       -44c3a  55
              TC = THMAX                                                        VARVOL 251
              GO TO 10                                                          VARVOL 252
            END IF                                                              VARVOL 253
            IF (<QNOW>.GT.1.0) THEN                                             VARVOL 254
              IZMODE = 1                                                        -44c3a  56
              TC = TCMIN                                                        VARVOL 255
              GO TO 9                                                           VARVOL 256
            END IF                                                              VARVOL 257
C              IF no load the system if off the entire hour                     VARVOL 258
            IZMODE = 0                                                          -44c3a  57
            CFMCYC = 0.0                                                        VARVOL 259
            CFMZ   = 0.0                                                        VARVOL 260
            GOTO 20                                                             VARVOL 261
          ENDIF                                                                 VARVOL 262
        ENDIF                                                                   VARVOL 263
      ENDIF                                                                     VARVOL 264
C              IF PSZ or SZRH use control zone requirement to set supply T      VARVOL 265
C              and make sure it is within obtainable range                      VARVOL 266
      TC   = TAVE - <QNOW>/(CONS(1)*<CFMAX>)                                    VARVOL 267
      TC   = AMAX1(TCMIN,AMIN1(TC,THMAX))                                       VARVOL 268
c              set start and end of hour supply temperatures for                HVAC22 175
c              control zone                                                     HVAC22 176
      CALL PeakSupplyTemps(1, TCMIN,TPOMIN, THMAX,TPOMIN)                       HVAC22 177
c                                                                               HVAC22 178
C              IF THE MAX-HUM CONTROL IS ACTIVE THE MAIN AIR-HANDLER            VARVOL 269
C              SUPPLIES MAX OF TCHUM AND THE REST OF THE HEAT COMES             VARVOL 270
C              FROM THE ZONE COILS                                              VARVOL 271
C              If hum control and no central heat, supply cold air              -034   213
C              and reheat with ZONE coils                                       -034   214
      IF((ISZHUM.EQ.1) .and. (<HEATING-CAPACITY>.GE.-1.)) THEN                  -034   215
        TC     = AMIN1(TC,TCHUM)                                                VARVOL 273
c              adjust start and end of hour supply temperatures                 HVAC22 179
        TCstart = MIN(TCstart, TCHUM)                                           HVAC22 180
        TCend   = MIN(TCend,   TCHUM)                                           HVAC22 181
        GOTO 8                                                                  VARVOL 274
      ENDIF                                                                     VARVOL 275
C              If not in deadband: TC and CFMZ are set for CTRL zone so skip    VARVOL 276
      IF( (<TNOW>.LE.THZ+THR) .OR. (TAVE.LE.THZ+THR) .OR.                       -044b  182
     $    (<TNOW>.GE.TCZ-THR) .OR. (TAVE.GE.TCZ-THR))  GOTO 20                  -044b  183
C              If in deadband: calc a better mix air temp passed to space(s)    VARVOL 280
C              WE MUST CALC THE SUPPLY AIR PASSED WHEN NO ACTIVE COOLING        VARVOL 281
C              OR HEATING AND THE OA DAMPERS ARE AT THEIR MIN POSITION.         VARVOL 282
C              THIS IS THEN PASSED TO ALL OTHER ZONES AND THE AIR HANDLER       VARVOL 283
C              SIMULATION AS THE SUPPLY TEMP.                                   VARVOL 284
    7 Floating = .True.                                                         -041b   10
      TC = TAVE                                                                 -041b   11
      IF (<sy;ReturnInfil> .GT. 0.) THEN                                        -041b   12
c              return duct air gain                                             -041b   13
        ZP1save = ZP1                                                           -041b   14
        ZP1     = <DUCT-LOSS-ZONE>                                              -041b   15
        TC      = <TNOW>*<sy;ReturnInfil> + TC*<sy;ReturnNoInfil>               -041b   16
        ZP1     = ZP1save                                                       -041b   17
      ENDIF                                                                     -041b   18
c              include return fan heat and outdoor air                          -041b   19
      TC = TC + <RETURN-DELTA-T>*CONS(3)                                        -041b   20
      TC = POMIN*DBT + (1.0-POMIN)*TC                                           -041b   21
      IF(HON*CapRph .NE. 0.0)  TC = AMAX1(TC,<PREHEAT-T>)                       HVAC12 290
      TC     = TC + <SUPPLY-DELTA-T>*CONS(3)                                    VARVOL 287
C              Add light heat recovered from return air                         VARVOL 288
      IF (<RETURN-AIR-PATH> .EQ. 1  .AND.  EXCFM .LT. CFMZ)                     -044e  518
     $  TC = TC + (1.-POMIN)*<QLIGHTRETURN>/(CONS(1)*(CFMZ-EXCFM))              -044e  519
c              adjust for duct temp rise                                        VARVOL 291
      TC     = TC + DUCTDT(TC,<CL_COIL_CFM>,2,1,0)                              HVAC1  827
C              If a plenum or multiple zones use DKTEMP estimate                VARVOL 293
      IF( ((<RETURN-AIR-PATH>.EQ.2).AND.(<NumPlenZONES>.NE.0)) .OR.             HVAC2  249
     1    (<NumCondZONES>.GT.1) )  TC = TPOMIN                                  HVAC2  250
      IF ((<MAX-HUMIDITY> .GT. 99.  .OR.  <MAX-HUMIDITY> .LE. 0.)               ERV    367
     &                               .AND.  <DESICCANT> .EQ. 0)  CON=0.0        ERV    368
      GOTO 20                                                                   VARVOL 297
    8 CONTINUE                                                                  VARVOL 298
C              IF BETWEEN SETPOINTS                                             VARVOL 299
      IF(TAVE .LE. THZ+THR)  GOTO 10                                            VARVOL 300
      IF(TAVE .GE. TCZ-THR)  GOTO 9                                             VARVOL 301
      CFMZ   = Min(CFMINh, CFMINc)                                              -44d5   22
      GOTO 20                                                                   VARVOL 303
    9 CONTINUE                                                                  VARVOL 304
C                                                                               VARVOL 305
C              COOLING MODE CALCULATIONS                                        VARVOL 306
C                                                                               VARVOL 307
C              CALC CFM NEEDED TO HANDLE LOAD                                   VARVOL 308
      ZCFM   = <QNOW>/(CONS(1)*(TAVE-TC+0.00001))                               VARVOL 309
C              MAKE SURE ITS NOT ABOVE MAX                                      VARVOL 310
      ZCFM   = AMIN1(ZCFM,<CFMAX>*CFMRAT)                                       VARVOL 311
C              MAKE SURE ITS NOT BELOW THE MIN                                  VARVOL 312
      ZCFM   = AMAX1(0.0,ZCFM)                                                  VARVOL 313
      CFMZ   = AMAX1(ZCFM,CFMIN)                                                VARVOL 314
C           CONTROL ZONE (PSZ,PVVT) SET TEMP and FLOW                           VARVOL 315
      IF(ISZCZ.EQ.1 .OR. IEVCZ.EQ.1)  THEN                                      VARVOL 316
c              PVVT staged-volume                                               StgVol 245
        IF (ICODE .EQ. 28  .AND.  <AIR/TEMP-CONTROL> .GT. 1)  THEN              -042f  154
c              Determine operating stage - floating, econo, mechanical          StgVol 247
          <sy.StgVCFMrLo> = 0.                                                  -042k   15
          DO  I=1,<sy;StgVNumClStgs>                                            -042k   16
            NV   = I                                                            -042k   17
            Qmax = CONS(1) * <CFMAX> * <sy.StgVCoolCFMr>                        -042k   18
     &                               * (TAVE - <sy.StgVCoolT>)                  -042k   19
            <sy.StgVCFMrHi> = <sy.StgVCoolCFMr>                                 -042k   20
            IF (Qmax .GE. <QNOW>)  Exit                                         -042k   21
            <sy.StgVCFMrLo> = <sy.StgVCFMrHi>                                   -042k   22
            Qmin            = Qmax                                              -042k   23
          ENDDO                                                                 -042k   24
c              fraction of time unit operating at higher stage                  -042k   25
          IF (NV .EQ. 1)  THEN      ! floating                                  -042k   26
            <sy.StgVFracHi> = 1.                                                -042k   27
            ZCFM = <CFMAX> * <sy.StgVCoolCFMr>                                  -042k   28
            CFMZ = ZCFM                                                         -044e1  10
          ELSEIF (NV .EQ. 2)  THEN  ! economizer only                           -042k   29
            EconoOnly = 1.  ! force economizer to run                           -044e1  11
c              airflow necessary to hold setpoint and flow ratio                -042k   31
            dT = TAVE-<sy.StgVCoolT>                                            -044d1  40
            IF (Abs(dT) .gt. 0.0001) THEN                                       -044d1  41
              ZCFM = <QNOW> / (CONS(1) * dT)                                    -044d1  42
              ZCFM = Min(<CFMAX>, ZCFM)                                         -044e1  12
            ELSE                                                                -044d1  44
              ZCFM = <CFMAX>                                                    -044d1  45
            ENDIF                                                               -044d1  46
            CFMZ = Max(ZCFM, CFMIN)                                             -044e1  13
            <sy.StgVCFMrHi> = CFMZ / <CFMAX>                                    -044e1  14
            <sy.StgVFracHi> = ZCFM / CFMZ                                       -044e1  15
          ELSEIF (NV .eq. 3  .and.  <INDOOR-FAN-MODE> .eq. 1                    -044e1  16
     &                       .and.  <ECON-LOCKOUT> .eq. 1) THEN                 -044e1  17
c              stage 1 cooling w/ cycling fan and non-integrated econo          -044e1  18
            <sy.StgVCFMrLo> = 0.   ! no econo                                   -044e1  19
            IF (Qmax .gt. <QNOW>) THEN                                          -044e1  20
              <sy.StgVFracHi> = <QNOW> / Qmax                                   -044e1  21
            ELSE                                                                -044e1  22
              <sy.StgVFracHi> = 1.                                              -044e1  23
            ENDIF                                                               -044e1  24
            CFMr = <sy.StgVCFMrHi> * <sy.StgVFracHi>                            -044e1  25
            ZCFM = <CFMAX> * CFMr                                               -044e1  26
            CFMZ = ZCFM                                                         -044e1  27
          ELSE  ! active cooling                                                -042k   34
            IF (Qmax .gt. Qmin)  THEN                                           -042k   35
              <sy.StgVFracHi> = Min(1., (<QNOW>-Qmin)/(Qmax-Qmin))              -042k   36
            ELSE                                                                -042k   37
              <sy.StgVFracHi> = 1.                                              -042k   38
            ENDIF                                                               -042k   39
            CFMr = <sy.StgVCFMrHi> * <sy.StgVFracHi>                            -042k   40
     &           + <sy.StgVCFMrLo> * (1.-<sy.StgVFracHi>)                       -042k   41
            ZCFM = <CFMAX> * CFMr                                               -042k   42
            CFMZ = ZCFM                                                         -044e1  28
          ENDIF                                                                 -042k   43
c              weighted average supply temperature                              -042k   45
          TC = TAVE - <QNOW>/(CONS(1)*(ZCFM+.000001))                           -044e1  29
c              airflow ratio to passed to slave zones                           -042k   47
          IF (<INDOOR-FAN-MODE> .EQ. 0  .OR.                                    -042k   48
     &            <sy.StgVCFMrLo> .GT. 0.)  THEN ! continuous fan               -042k   49
            CFMVVT = CFMZ / <CFMAX>              ! average CFM                  -042k   50
          ELSEIF (<sy.StgVCFMrHi> .GT. 0.)  THEN ! intermittent fan             -042k   51
            CFMVVT = <sy.StgVCFMrHi>             ! frac CFM when on             -042k   52
            CFMCYC = <sy.StgVFracHi>             ! frac cycled on               -042k   53
            CFMZ   = ZCFM                                                       -044e1  30
            <sy.StgVFracHi> = 1.                                                -042k   54
          ELSE                                   ! fan off                      -042k   55
            CFMCYC = 0.                                                         -042k   56
            CFMVVT = 0.                                                         -042k   57
          ENDIF                                                                 -042k   58
C           PVVT case for CONTINUOUS fans                                       StgVol 293
        ELSEIF ((ICODE .EQ. 28 .OR. ICODE .EQ. 26) .AND.                        -044e4  10
     &                              <INDOOR-FAN-MODE> .EQ. 0)  THEN             -044e4  11
C           Set flow ratio for subzones                                         VARVOL 319
          CFMVVT = CFMZ/<CFMAX>                                                 VARVOL 320
C           supply temp reset if at min flow                                    VARVOL 321
          IF(ZCFM .LT. CFMZ)  TC = TAVE - <QNOW>/(CONS(1)*CFMZ)                 VARVOL 322
C           PVVT/PSZ case for INTERMITTANT fans                                 VARVOL 323
        ELSEIF(<INDOOR-FAN-MODE>.EQ.1)  THEN                                    VARVOL 324
C           FAN on-cycle fraction of hour                                       VARVOL 325
          CFMVVT = CFMZ/<CFMAX>                                                 -44c3a  58
          IF(ZCFM .LT. CFMZ)  THEN                                              VARVOL 326
            CFMCYC = ZCFM/CFMZ                                                  VARVOL 327
            CFMZ   = ZCFM                                                       VARVOL 328
          ENDIF                                                                 VARVOL 329
          IF (<EVAP-CL-TYPE>.GT.0 .AND. ICODE.NE.26 .AND.                       VARVOL 330
     1      <EVAP-CL+M-SUP>.EQ.0) THEN                                          VARVOL 331
            IF (TCMNEV+0.1.LT.TAVE) THEN                                        VARVOL 332
              ZCFMEV = <QNOW>/(CONS(1)*(TAVE-TCMNEV))                           VARVOL 333
              ZCFMEV = AMIN1(ZCFMEV,<CFMAX>*CFMRAT)                             VARVOL 334
              ZCFMEV = AMAX1(0.,ZCFMEV)                                         VARVOL 335
              CFMZEV = AMAX1(ZCFMEV,CFMIN)                                      VARVOL 336
              CFMCEV = ZCFMEV/CFMZEV                                            VARVOL 337
              IF (CFMCEV.LT.0.99) THEN                                          VARVOL 338
                CFMCYC = CFMCEV                                                 VARVOL 339
                ZCFM = CFMCYC*CFMIN                                             VARVOL 340
                CFMZ = ZCFM                                                     VARVOL 341
                CON=0.                                                          VARVOL 342
                TC = TCMNEV                                                     VARVOL 343
              END IF                                                            VARVOL 344
            END IF                                                              VARVOL 345
          END IF                                                                VARVOL 346
        ENDIF                                                                   VARVOL 347
      ELSEIF (ICODE .EQ. 28  .OR.  ICODE .EQ. 26)  THEN  ! PVVT subzone         -044e4  12
                                                                                -044e4  13
        ZCFM = CFMIN                                                            -042    48
        CFMZ = CFMIN                                                            -042    49
      ENDIF                                                                     -042    50
      IF (<EVAP-CL+M-SUP>.EQ.0 .AND. ICODE.NE.26 .AND.                          VARVOL 349
     1  TCMNEV.LT.TC+0.1) CON=0.                                                VARVOL 350
      GOTO 20                                                                   VARVOL 351
   10 CONTINUE                                                                  VARVOL 352
C                                                                               VARVOL 353
C              HEATING MODE CALCULATIONS                                        VARVOL 354
C                                                                               VARVOL 355
C              CALC CFM TO HANDLE LOAD                                          VARVOL 356
      DT     = <REHEAT-DELTA-T> * ZCapRh                                        HVAC1  828
      IF((ICODE.EQ.28 .AND. ISZCZ .EQ. 1)  .OR.  IEVCZ.EQ.1) THEN               -044e4  14
                                                                                -044e4  15
        DT     = 0.                                                             VARVOL 359
      ENDIF                                                                     VARVOL 360
      IF((ISZCZ.EQ.1) .and. (<INDOOR-FAN-MODE>.EQ.1)) THEN                      -034   216
C              If a heat pump is used, first allow it to run for the            -034   217
C              entire hour before using the supplemental heat                   -034   218
        TH = TC                                                                 -034   219
        IF((<HEAT-SOURCE>.EQ.4).or.(<HEAT-SOURCE>.EQ.9)) TH=THMXNS              -034   220
C              If heat possible ...                                             -034   221
        IF(TH+DT .GT. TAVE) THEN                                                -034   222
C              Calc flow to handle load                                         -034   223
          ZCFM = <QNOW>/(CONS(1)*(TAVE-(TH+DT)))                                -034   224
C              If flow needed above max?                                        -034   225
          IF(ZCFM .LE. AMIN1(<CFMAXH>,<CFMAX>*CFMRAT)) THEN                     -034   226
C              No ... no supplemental heat                                      -034   227
            TC = THMXNS                                                         -034   228
          ELSE                                                                  -034   229
C              Yes ... use supplemental heat, recalc TC and set flow to max     -034   230
            ZCFM = AMIN1(<CFMAXH>,<CFMAX>*CFMRAT)                               -034   231
            TC   = TAVE - <QNOW>/(CONS(1)*ZCFM)                                 -034   232
          ENDIF                                                                 -034   233
        ELSE                                                                    -034   234
C              No heat possible ... flow at maximum                             -034   235
          ZCFM = AMIN1(<CFMAXH>,<CFMAX>*CFMRAT)                                 -034   236
        ENDIF                                                                   -034   237
      ELSEIF((ISZCZ.EQ.1 .OR. IEVCZ.EQ.1) .and.                                 -044e4  16
     &                                    <INDOOR-FAN-MODE>.EQ.0) THEN          -044e4  17
          ZCFM = <QNOW>/(CONS(1)*(TAVE-(TC+DT)))                                -044b  185
      ELSEIF (ICODE .EQ. 28  .OR.  ICODE .EQ. 26)  THEN  ! PVVT subzone         -044e4  18
        ZCFM = CFMIN                                                            -042    52
      ELSE                                                                      -042    53
C              If heat possible ...                                             -042    54
        IF(TC+DT .GT. TAVE) THEN                                                -042    55
C              Calc flow to handle load                                         -042    56
          ZCFM = <QNOW>/(CONS(1)*(TAVE-(TC+DT)))                                -042    57
        ELSE                                                                    -042    58
C              No heat possible ... flow at maximum                             -042    59
          ZCFM = AMIN1(<CFMAXH>,<CFMAX>*CFMRAT)                                 -042    60
        ENDIF                                                                   -042    61
      ENDIF                                                                     -042    62
C              MAKE SURE IT IS IN ALLOWED RANGE                                 VARVOL 362
      ZCFM   = AMAX1(0.0,ZCFM)                                                  VARVOL 363
      ZCFM   = AMIN1(ZCFM,<CFMAXH>,<CFMAX>*CFMRAT)                              VARVOL 364
      CFMZ   = AMAX1(ZCFM,CFMIN)                                                VARVOL 365
C           CONTROL ZONE (PSZ,PVVT) SET TEMP and FLOW                           VARVOL 366
      IF(ISZCZ.EQ.1 .OR. IEVCZ.EQ.1)  THEN                                      VARVOL 367
c              PVVT staged-volume                                               StgVol 295
        IF (ICODE .EQ. 28  .AND.  <AIR/TEMP-CONTROL> .GT. 1)  THEN              -042f  155
c              Determine operating stage - floating, mechanical                 StgVol 297
          <sy.StgVCFMrLo> = 0.                                                  -042k   59
          DO  I=1,<sy;StgVNumHtStgs>                                            -042k   60
            NV   = I                                                            -042k   61
            Qmax = CONS(1) * <CFMAX> * <sy.StgVHeatCFMr>                        -042k   62
     &                               * (TAVE - <sy.StgVHeatT>)                  -042k   63
            <sy.StgVCFMrHi> = <sy.StgVHeatCFMr>                                 -042k   64
            IF (Qmax .LE. <QNOW>)  Exit                                         -042k   65
            <sy.StgVCFMrLo> = <sy.StgVCFMrHi>                                   -042k   66
            Qmin            = Qmax                                              -042k   67
          ENDDO                                                                 -042k   68
c              fraction of time unit operating at higher stage                  -042k   69
          IF (NV .EQ. 1)  THEN   ! floating                                     -042k   70
            <sy.StgVFracHi> = 1.                                                -042k   71
            ZCFM = <CFMAX> * <sy.StgVHeatCFMr>                                  -042k   72
          ELSE  ! active heating                                                -042k   73
            IF (Qmax .lt. Qmin)  THEN                                           -042k   74
              <sy.StgVFracHi> = Min(1., (<QNOW>-Qmin)/(Qmax-Qmin))              -042k   75
            ELSE                                                                -042k   76
              <sy.StgVFracHi> = 1.                                              -042k   77
            ENDIF                                                               -042k   78
            CFMr = <sy.StgVCFMrHi> * <sy.StgVFracHi>                            -042k   79
     &           + <sy.StgVCFMrLo> * (1.-<sy.StgVFracHi>)                       -042k   80
            ZCFM = <CFMAX> * CFMr                                               -042k   81
          ENDIF                                                                 -042k   82
          CFMZ = ZCFM                                                           -042k   83
c              weighted average supply temperature                              -042k   84
          TC   = TAVE - <QNOW>/(CONS(1)*(CFMZ+.000001))                         -042k   85
c              airflow ratio passed to slave zones                              -042k   86
          IF (<INDOOR-FAN-MODE> .EQ. 0  .OR.                                    -042k   87
     &            <sy.StgVCFMrLo> .GT. 0.)  THEN ! continuous fan               -042k   88
            CFMVVT = CFMZ / <CFMAX>              ! average CFM                  -042k   89
          ELSEIF (<sy.StgVCFMrHi> .GT. 0.)  THEN ! intermittent fan             -042k   90
            CFMVVT = <sy.StgVCFMrHi>             ! frac CFM when on             -042k   91
            CFMCYC = <sy.StgVFracHi>             ! frac cycled on               -042k   92
            <sy.StgVFracHi> = 1.                                                -042k   93
          ELSE                                   ! fan off                      -042k   94
            CFMCYC = 0.                                                         -042k   95
            CFMVVT = 0.                                                         -042k   96
          ENDIF                                                                 -042k   97
C           PVVT case for CONTINUOUS fans                                       StgVol 337
        ELSEIF ((ICODE .EQ. 28 .OR. ICODE .EQ. 26) .AND.                        -044e4  19
     &                              <INDOOR-FAN-MODE> .EQ. 0)  THEN             -044e4  20
C           Set flow ratio for subzones                                         VARVOL 370
          CFMVVT = CFMZ/<CFMAX>                                                 VARVOL 371
C           supply temp reset if at min flow                                    VARVOL 372
          IF(ZCFM .LT. CFMZ)  TC = TAVE - <QNOW>/(CONS(1)*CFMZ)                 VARVOL 373
C           PVVT/PSZ case for INTERMITTANT fans                                 VARVOL 374
        ELSEIF(<INDOOR-FAN-MODE>.EQ.1)  THEN                                    VARVOL 375
C           FAN on-cycle fraction of hour                                       VARVOL 376
          CFMVVT = CFMZ/<CFMAX>                                                 -44c3a  59
          IF(ZCFM .LT. CFMZ)  THEN                                              VARVOL 377
            CFMCYC = ZCFM/CFMZ                                                  VARVOL 378
            CFMZ   = ZCFM                                                       VARVOL 379
          ENDIF                                                                 VARVOL 380
        ENDIF                                                                   VARVOL 381
        IF(ISZHUM .EQ. 0) GOTO 20                                               VARVOL 382
      ENDIF                                                                     VARVOL 383
C              IF NO REHEAT AVAILABLE SKIP                                      VARVOL 384
      IF((ZHON*ZCapRh .EQ. 0.0) .OR. (TAVE .GT. THZ+THR))  GOTO 20              HVAC12 291
C              CALC TEMP TO WHICH WE GET ZERO ACTIVE HEATING                    VARVOL 386
      TSET   = TAVE                                                             VARVOL 387
C              CALC ENERGY USED TO SUPPLY THAT TEMP                             VARVOL 388
      ZQHR   =  CFMZ*CONS(1)*(TC-TSET)                                          VARVOL 389
C              CALC TOTAL ZONE HEAT LOAD AS THE SUM OF                          VARVOL 390
C              THE AOVE AND THE ZONE LOAD                                       VARVOL 391
      ZQH    = AMIN1(0.,ZQHR+<QNOW>)                                            VARVOL 392
C                if dehumid control then place reheat in central coil           VARVOL 393
      IF(ISZHUM .NE. 0)  THEN                                                   VARVOL 394
        QDHUM = QDHUM + ZQH*ZMULT                                               VARVOL 395
        ZQH   = 0.                                                              VARVOL 396
      ENDIF                                                                     VARVOL 397
C              INCREMENT TOTAL EXHAUST CFM                                      -044e  520
   20 IF (<EXHAUST-SOURCE> .eq. 1)  ! makeup by airhandler                      -046   325
     &  Call ZoneExhaust(9, CFMZ)   ! adj EXCFM & calc pwr                      -046   326
      ECFM = ECFM + EXCFM*ZMULT                                                 -044e  522
C              CHECK IF REHEAT DONE BY BASEBOARDS                               VARVOL 408
      IF(ZQH .EQ. 0.0)  GOTO 174                                                VARVOL 409
      IF((<BASEBOARD-RATING>.GE.0.0).OR.(<BASEBOARD-CTRL>.NE.1))                VARVOL 410
     1      GOTO 23                                                             VARVOL 411
      IF(ZHON .NE. 0.0)  THEN                                                   HVAC22 182
        Q      = MAX(<BASEBOARD-RATING>*ZCapRbbrd-QHBZ,ZQH)                     -044e  523
        ZQH    = ZQH - Q                                                        HVAC22 184
        QHBZ   = QHBZ + Q                                                       HVAC22 185
        QHB    = QHB + Q*ZMULT                                                  HVAC22 186
      ENDIF                                                                     HVAC22 187
   23 CONTINUE                                                                  HVAC22 188
  174 CONTINUE                                                                  HVAC22 189
c                                                                               HVAC22 190
c              Calculate the zone load distribution within the hour             HVAC22 191
      CALL PeakZoneBins(1, CFMIN,<CFMAX>)                                       HVAC22 192
      IF (ZHON .eq. 0.  .and.  QHBZ .eq. 0.)  GO TO 25                          -048f    1
C              IF ZONE COILS ARE ELECTRIC                                       VARVOL 429
      IF (<ZONE-HEAT-SOURCE>.EQ.1)  THEN                                        VARVOL 430
        X      = ZQH*KWBTU                                                      VARVOL 431
        ZKW    = ZKW    - X                                                     VARVOL 432
        SKWQH  = SKWQH  - X*ZMULT                                               VARVOL 433
c              assign electric load to meter                                    HVAC22 194
        CALL PeakZoneDist(1, -X,<MAX_HEAT_KWZ>, HeatEndUse,<HEAT-E-MZ>)         HVAC22 195
      ENDIF                                                                     VARVOL 435
      IF(<ZONE-HEAT-SOURCE>.LE.1)  QGZC = QGZC - ZQH*ZMULT                      VARVOL 436
      IF((<ZONE-HEAT-SOURCE>.EQ.2).OR.(<ZONE-HEAT-SOURCE>.EQ.3))  THEN          VARVOL 437
        CALL FURNAC(ZQH,<HEATCAPZ>,<ZONE-HEAT-SOURCE>,ZMULT)                    VARVOL 438
        JEM       = <AUX-E-MZ>                                                  HVAC6  883
        <AUX-EM>  = <AUX-EM> + FurnAuxkW                                        HVAC6  884
        JFM       = <HEAT-F-MZ>                                                 HVAC6  885
        <HEAT-FM> = <HEAT-FM> - FFUEL                                           HVAC6  886
        <AUX-FM>  = <AUX-FM>  + FurnAuxFuel                                     HVAC6  887
        QGZC = QGZC - FFUEL                                                     HVAC6  888
      ENDIF                                                                     VARVOL 440
C              IF BASEBOARDS ARE ELECTRIC                                       VARVOL 441
      IF (<BASEBOARD-SOURCE>.EQ.1)  THEN                                        VARVOL 442
        X      = QHBZ*KWBTU                                                     VARVOL 443
        ZKW    = ZKW    - X                                                     VARVOL 444
        SKWQH  = SKWQH  - X*ZMULT                                               VARVOL 445
c              assign electric load to meter                                    HVAC22 196
        CALL PeakZoneDist(1, -X,<MAX_BBRD_KWZ>, HeatEndUse,<HEAT-E-MZ>)         HVAC22 197
      ENDIF                                                                     VARVOL 447
      IF(<BASEBOARD-SOURCE>.LE.1)  QGBB = QGBB - QHBZ*ZMULT                     VARVOL 448
C              IF BASEBOARDS ARE GAS OR OIL                                     VARVOL 449
      IF((<BASEBOARD-SOURCE>.EQ.2).OR.(<BASEBOARD-SOURCE>.EQ.3)) THEN           VARVOL 450
        CALL FURNAC(QHBZ,<BASEBOARD-RATING>,<BASEBOARD-SOURCE>,ZMULT)           VARVOL 451
        JEM       = <AUX-E-MZ>                                                  HVAC6  891
        <AUX-EM>  = <AUX-EM> + FurnAuxkW                                        HVAC6  892
        JFM       = <HEAT-F-MZ>                                                 HVAC6  893
        <HEAT-FM> = <HEAT-FM> - FFUEL                                           HVAC6  894
        <AUX-FM>  = <AUX-FM>  + FurnAuxFuel                                     HVAC6  895
        QGBB = QGBB - FFUEL                                                     HVAC6  896
      ENDIF                                                                     VARVOL 453
      QHZ    = QHZ + ZQH*ZMULT                                                  VARVOL 454
C              CALC RETURN AIR RATIO                                            VARVOL 455
   25 RETR   = 1.                                                               VARVOL 456
      IF(CFMZ .GT. 0.)  RETR = (1.0-EXCFM/CFMZ)                                 VARVOL 457
C              INCREMENT TOTAL SYSTEM ROOM LATENT GAIN                          VARVOL 458
      QLSUM  = QLSUM + <QL>*RETR*ZMULT                                          VARVOL 459
C              INCREMENT TOTAL SYSTEM LIGHT-HEAT-TO RETURN                      VARVOL 460
      QPSUM  = QPSUM + <QLIGHTRETURN> * ZMULT                                   VARVOL 461
C              INCREMENT TOTAL INFILTRATION AIR CFM                             VARVOL 462
      CINF   = CINF + <CFMINF>*RETR*ZMULT                                       VARVOL 463
C              DCV - Calculate zone Occupancy based vent CFM and fraction       -044c  716
      IF((<MIN-OA-METHOD>.LT.0) .AND. (CFMZ .GT. 0.))  THEN                     -044c  717
        MZ = ISPB + (<NZSPACE>-1)*MZLEN                                         -044c  718
        <DCVOAcfmZ> = SchVal(<PEOPLE-SCHEDULE>, 1.)                             -045b  222
     &              * <ZPPLNO> * <OA-CFM/PER>                                   -045b  223
        IF(<MIN-OA-METHOD>.EQ.-1) <DCVOAcfmZ> = RETR*<DCVOAcfmZ>                -044c  720
        XX = <OUTSIDE-AIR-CFM>                                                  -044c  721
        IF(XX .EQ. 0.)                                                          -044c  722
     $     XX = AMAX1(<OA-FLOW/AREA>*<AREA>,<OA-CHANGES>*<VOLUME>/60.)          -044c  723
        <DCVOAcfmZ> = AMAX1(<DCVOAcfmZ>,XX)                                     -044c  724
        <DCVOAcfmFrac> = AMIN1(1.,<DCVOAcfmZ>/CFMZ)                             -044c  725
        <DCVOAcfmS> = <DCVOAcfmS> + <DCVOAcfmZ>*ZMULT                           -044c  726
        <DCVOAcfmFracCrit> = AMAX1(<DCVOAcfmFracCrit>,<DCVOAcfmFrac>)           -044c  727
      ELSE                                                                      -044c  728
        <DCVOAcfmZ> = 0.0                                                       -044c  729
        <DCVOAcfmFrac> = 0.0                                                    -044c  730
      ENDIF                                                                     -044c  731
C              IF THIS IS NO A CEILING BYPASS SYSTEM SKIP                       VARVOL 464
      IF(ICODE .NE. 18)  GOTO 27                                                VARVOL 465
C              SUPPLY CFM IS CONSTANT                                           VARVOL 466
      CFM    = CFM + <CFMAX>*ZMULT*FON                                          VARVOL 467
C              BUT CONTRIBUTION OF THIS ZONE TO THE RETURN                      VARVOL 468
C              AIR TEMP IS PART AT ZONE TEMP AND PART AT                        VARVOL 469
C              SUPPLY TEMP                                                      VARVOL 470
      TR     = TR+(TAVE*(CFMZ-EXCFM)+TC*(<CFMAX>-CFMZ))*ZMULT                   -038a    1
      GOTO 29                                                                   VARVOL 472
   27 CONTINUE                                                                  VARVOL 473
C              INCREMENT TOTAL SUPPLY CFM                                       VARVOL 474
      CFM    = CFM + CFMZ*ZMULT                                                 VARVOL 475
C              ADD ZONE WEIGHTED EFFECT ON RETURN AIR TEMP                      VARVOL 476
      TR     = TR + TAVE*(CFMZ-EXCFM)*ZMULT                                     VARVOL 477
   29 CONTINUE                                                                  VARVOL 478
C********************** run function : VARVOL-1Z *******************            VARVOL 486
      IF( MSYSF(91) .NE. 0 )   CALL  FINTS( MSYSF(91), 1. )                     VARVOL 487
C*******************************************************************            VARVOL 488
c                                                                               HVAC1  830
c              save zonal coil flows and loads for circulation loop calcs       HVAC1  831
      IF (CFMCYC .GT. 0.)  THEN                                                 HVAC29 179
        <COIL_CFMZ> = CFMZ / CFMCYC                                             HVAC29 180
      ELSE                                                                      HVAC29 181
        <COIL_CFMZ> = CFMZ                                                      HVAC29 182
      ENDIF                                                                     HVAC29 183
      <COIL_EDBZ>   = TC                                                        HVAC1  833
      <COIL_CYCLEZ> = CFMCYC                                                    HVAC1  834
      <COIL_QZ>     = ZQH                                                       HVAC1  835
      <BBRD_EDB>    = TAVE                                                      HVAC1  836
      <BBRD_Q>      = QHBZ                                                      HVAC1  837
c                                                                               HVAC1  838
      ZKW = ZKW + <ZKW>                                                         VARVOL 489
      <SKW> = <SKW> + ZKW*ZMULT                                                 VARVOL 490
C              SUM END-USE VARIABLES FOR THIS ZONE                              VARVOL 491
C              IF REP-BLOCK BUF AND HOURLY-REP SCHED FILL BUF                   VARVOL 493
      IF((<IZNBUFP>.NE.0).AND.(IRSCH.NE.0))  CALL USERZR( ZP1,ZP2 )             VARVOL 494
      IF(IRPZON .NE. 0)  CALL RPTZON                                            VARVOL 495
C              INCREMENT ZP1 TO POINT TO NEXT ZONE                              VARVOL 496
   35 ZP1    = ZP1 + NZD                                                        VARVOL 497
   50 CONTINUE                                                                  VARVOL 498
c              return cfm                                                       VARVOL 499
      RCFM = CFM - ECFM                                                         VARVOL 500
C                                                                               VARVOL 501
C              TOTAL SYSTEM LOADS                                               VARVOL 502
C                                                                               VARVOL 503
C              CALC RETURN AIR TEMP                                             VARVOL 504
      TR     = TR/(RCFM+.01)                                                    VARVOL 505
C              RESTORE HEATING AVAILIBILITY FLAG                                VARVOL 506
      IF (Floating)  THEN                                                       -041b   22
        HON = 0.                                                                -041b   23
      ELSE                                                                      -041b   24
        HON = HONS                                                              -041b   25
      ENDIF                                                                     -041b   26
C              GET TOTAL EXHAUST CFM AND LATENT GAIN FROM PLENUMS               VARVOL 508
      QLSUMP = 0.                                                               VARVOL 509
      CINFP = 0.                                                                VARVOL 510
      Nplen = <NumPlenZONES>                                                    HVAC2  251
      IF (Nplen .EQ. 0)  GOTO 52                                                HVAC2  252
      DO 51  NZ=1,Nplen                                                         HVAC2  253
c              pick up the pointer to the plenum                                HVAC2  254
      ZP1    = <ISZONES-plenum> + (NZ-1)*NZD                                    HVAC2  255
      ZP2 = <ZP2>                                                               VARVOL 514
      IF (<EXHAUST-SOURCE> .eq. 1) THEN  ! makeup by system OA                  -046   327
        IF (RCFM .gt. 0.) THEN                                                  -046   328
          CFMplen = RCFM * <AREA>/(<PLENMULT>*CFMCYC)                           -046   329
          Call ZoneExhaust(1, CFMplen)   ! set EXCFM                            -046   330
          EXCFM = EXCFM * CFMCYC                                                -046   331
          ECFMP = ECFMP + EXCFM*<MULTIPLIER>                                    -046   332
          RETRP = 1. - EXCFM*<PLENMULT>/(<AREA>*(RCFM+1.E-6))                   -046   333
        ELSE                                                                    -046   334
          Call ZoneExhaust(1, 0.)                                               -046   335
          RETRP = 1.                                                            -046   336
        ENDIF                                                                   -046   337
      ELSE                                                                      -046   338
        RETRP = 1.                                                              -046   339
      ENDIF  ! EXHAUST-SOURCE                                                   -046   340
      QLSUMP = QLSUMP + <QL>*<MULTIPLIER>*RETRP                                 VARVOL 518
      CINFP = CINFP + <CFMINF>*<MULTIPLIER>*RETRP                               VARVOL 519
   51 CONTINUE                                                                  VARVOL 520
   52 CONTINUE                                                                  HVAC2  256
C              ADJUST QLSUM AND CINF FOR PLENUM EFFECTS                         VARVOL 521
      RETRP = 1. - ECFMP/(RCFM+1.E-6)                                           VARVOL 522
      QLSUM = QLSUM*RETRP + QLSUMP                                              VARVOL 523
      CINF = CINF*RETRP + CINFP                                                 VARVOL 524
C              ADD PLENUM EXHAUST TO ZONE EXHAUST FOR USE IN SDSF               VARVOL 525
      ECFM = ECFM + AMIN1(ECFMP,RCFM)                                           VARVOL 526
C              CALL ROUTINE TO SIMULATE AIRHANDLER                              VARVOL 527
      CALL SDSF                                                                 VARVOL 528
C              RETURN CFM (INCLUDING PLENUM EXHAUST) FOR HOURLY REP             VARVOL 529
      ECFM = AMIN1(ECFM,CFM)                                                    VARVOL 530
      RCFM = CFM - ECFM                                                         VARVOL 531
C              PUT QCV IN QCZ FOR REPORT SS-B AND HOURLY REPORT                 VARVOL 532
      QCZ = QCV                                                                 VARVOL 533
c                                                                               HVAC16 221
c              SKIP IF NO REFRIGERATION EQUIPMENT                               HVAC16 222
      IF (<REFG-ZONE-ZP1> .EQ. 0) GOTO 80                                       HVAC16 223
      ZP1   = <REFG-ZONE-ZP1>                                                   HVAC16 224
      ZP2   = <ZP2>                                                             HVAC16 225
      ZMULT = <MULTIPLIER>                                                      HVAC16 226
c              calculate the sensible and latent zone loads                     HVAC16 227
      IE = <NUM-REFG-EQUIP>                                                     HVAC16 228
      DO 72  IG=1,IE                                                            HVAC16 229
      Tave  = (<TNOW> + <TPAST>)  * 0.5                                         HVAC16 230
      Wave  = (WR     + <PASTWR>) * 0.5                                         HVAC16 231
      QSENS(IG) = <REFG-CONDUCTANCE> * (<REFG-DISCHARGE-T>-Tave)                HVAC16 232
     1                              * RQSSCH(IG) * ZMULT                        HVAC16 233
      QLAT(IG)  = <REFG-QL-DES-W> * DIM(Wave, <REFG-EVAP-W>)                    HVAC16 234
     1         / (<REFG-ZONE-DES-W>-<REFG-EVAP-W>) * RQLSCH(IG) * ZMULT         HVAC16 235
c              compressor load                                                  HVAC16 236
      QR(IG) = -(QSENS(IG)+QLAT(IG))                                            HVAC16 237
     &       + (<REFG-AUX-KW>*BTUKW*<REFG-AUX-FRAC>                             HVAC16 238
     &                               + <REFG-AUX-BTU>)*AUXSCH(IG)*ZMULT         HVAC16 239
      IF((<REFG-WALKIN-LOAD>.NE.0.).and.(<REFG-WALKIN-LOC>.EQ.IG))  THEN        DWRECV 101
        RWalkinQ = <REFG-WALKIN-LOAD> * SchVal(<REFG-WALKIN-SCH>, 1.)           Time   402
        QR(IG) = QR(IG) + RWalkinQ                                              DWRECV 108
      ENDIF                                                                     DWRECV 109
      QRSENS = QRSENS + QSENS(IG)                                               HVAC16 240
      QRLAT  = QRLAT  + QLAT(IG)                                                HVAC16 241
c              defrost energy - none if Tevep > 32                              HVAC16 242
      IF (<REFG-EVAP-T> .GE. 32.) GOTO 71                                       HVAC16 243
      IF (<REFG-DEF-EFF> .GT. 0.)  QDEF(IG) = -QLAT(IG)/<REFG-DEF-EFF>          -031    52
c              part of defrost that becomes a load on the unit                  HVAC16 245
      QRDEF = QDEF(IG) + QLAT(IG)                                               HVAC16 246
c              timed electric defrost always matches                            HVAC16 247
c              the design deforst value                                         HVAC16 248
      IF ((<REFG-DEF-MECH> .NE. 0) .OR. (<REFG-DEF-CTRL> .NE. 0))               HVAC16 249
     1                                                      GOTO 71             HVAC16 250
      QDEF(IG) = -<REFG-QL-DES-W> / <REFG-DEF-EFF> * ZMULT                      HVAC16 251
      QRDEF    = QDEF(IG) + QLAT(IG)                                            HVAC16 252
 71   QR(IG)   = QR(IG)   + QRDEF                                               HVAC16 253
      IF(<REFG-ASH-KW>.GT.0.) THEN                                              HVAC16 254
        SWEATKW(IG) = <REFG-ASH-KW>                                             HVAC16 255
c              Setpoint if heaters controlled on room humidity ratio            HVAC16 256
        WON  = <REFG-ASH-HIGHW>                                                 HVAC16 257
        WOFF = <REFG-ASH-LOWW>                                                  HVAC16 258
        IF(WR .gt. WOFF) THEN                                                   HVAC16 259
          FRACON = 1.0                                                          HVAC16 260
          IF((WON.GT.0.) .and. (WR.LT.WON) .and. (WON.GT.WOFF))  THEN           HVAC16 261
c             Power consumption of anti-sweat heaters as                        HVAC16 262
c             a function of space humidity ratio                                HVAC16 263
            FRACON  = AMIN1(1.,AMAX1(0.,(WR-WOFF)/(WON - WOFF)))                HVAC16 264
          ENDIF                                                                 HVAC16 265
        ELSE                                                                    HVAC16 266
          FRACON = 0.0                                                          HVAC16 267
        ENDIF                                                                   HVAC16 268
        SWEATKW(IG) = SWEATKW(IG) * FRACON                                      HVAC16 269
c             Heat into case                                                    HVAC16 270
        QR(IG) = QR(IG) + SWEATKW(IG) * <REFG-AUX-FRAC> * BTUKW * ZMULT         HVAC16 271
        RAUXKW = RAUXKW + SWEATKW(IG) * ZMULT                                   HVAC16 272
      ENDIF                                                                     HVAC16 273
c              auxiliary elec and defrost elec                                  HVAC16 274
      RAUXKW = RAUXKW + <REFG-AUX-KW>*AUXSCH(IG)*ZMULT                          HVAC16 275
      IF (<REFG-DEF-MECH> .EQ. 0) RDEFKW =                                      HVAC16 276
     1                            RDEFKW + QDEF(IG)*KWBTU                       HVAC16 277
 72   CONTINUE                                                                  HVAC16 278
c              Compressors for the equip can be either separate or common.      HVAC16 279
c              Combine the ones that are common                                 HVAC16 280
      COMMON = 0.0                                                              HVAC16 281
      IGROUP = 0                                                                HVAC16 282
      DO 74  IG=1,IE                                                            HVAC16 283
      IF (<REFG-COMP-GROUP> .EQ. 0) GOTO 74                                     HVAC16 284
      COMMON = COMMON + QR(IG)                                                  HVAC16 285
      QR(IG) = 0.                                                               HVAC16 286
      IF (IGROUP .EQ. 0) IGROUP = IG                                            HVAC16 287
 74   CONTINUE                                                                  HVAC16 288
      IF (IGROUP .NE. 0) QR(IGROUP) = COMMON                                    HVAC16 289
c              get condensing temperature                                       HVAC16 290
      IF (<REFG-COND-TYPE> .NE. 3)  THEN                                        HVAC16 291
c              air-cooled or evaporative condenser                              HVAC16 292
c              ambient temperature (drybulb or wetbulb)                         HVAC16 293
        IF (<REFG-COND-TYPE> .EQ. 1)  THEN                                      HVAC16 294
c              air-cooled                                                       HVAC16 295
          AMBT = DBT                                                            HVAC16 296
        ELSE                                                                    HVAC16 297
c              evaporative condenser                                            HVAC16 298
          AMBT = WBT                                                            HVAC16 299
        ENDIF                                                                   HVAC16 300
c              condensing temperature depends on control scheme                 HVAC16 301
        IF (<REFG-SETPT-CTRL> .eq. 2)  THEN                                     HVAC16 302
c              ambient control or floating out of control                       HVAC16 303
          TcondR = <REFG-PAST-TCOND>                                            HVAC16 304
        ELSEIF (<REFG-SETPT-CTRL> .eq. 1)  THEN                                 HVAC16 305
c              variable setpoint                                                HVAC16 306
          TcondR = AMBT + <REFG-SETPT-VAL>                                      HVAC16 307
        ELSE                                                                    HVAC16 308
c              fixed setpoint                                                   HVAC16 309
          TcondR = <REFG-SETPT-VAL>                                             HVAC16 310
        ENDIF                                                                   HVAC16 311
c              must be at least the ambient temperature                         HVAC16 312
        TcondR = AMAX1(TcondR, AMBT)                                            HVAC16 313
      ELSE                                                                      HVAC16 314
c              water cooled condenser - may be either CW, WLHP, or CHW          HVAC16 315
c              pointer to loop                                                  HVAC16 316
        Jlp = <REFG-CW-LOOP>                                                    HVAC16 317
        IF (<lp:TYPE> .EQ. 1)  THEN                                             HVAC16 318
c              CHW loop - supply temperature is last hours                      HVAC16 319
          TcondR = <lp;COIL_EWT>                                                HVAC16 320
        ELSE                                                                    HVAC16 321
c              CW or WLHP loop - supply temperature estimated in PLANTi         HVAC16 322
          TcondR = <lp;COIL_EWTest>                                             HVAC16 323
        ENDIF                                                                   HVAC16 324
      ENDIF                                                                     HVAC16 325
c              must be at least the minimum temperature                         HVAC16 326
      TcondR = AMAX1(TcondR, <REFG-MIN-COND-T>)                                 HVAC16 327
c              recoverable heat needed                                          HVAC16 328
      QNEED = -QH                                                               HVAC16 329
      IF (<REFG-MAX-HTREC> .NE. -66666.) QNEED =                                HVAC16 330
     1                              AMIN1(-QH, <REFG-MAX-HTREC>)                HVAC16 331
c              loop through units, starting with the warmest                    HVAC16 332
      DO 76 I=1,IE                                                              HVAC16 333
        IG = IE - I + 1                                                         HVAC16 334
c              skip if no compressor load                                       HVAC16 335
        IF(QR(IG) .LE. 1.)  GOTO 76                                             HVAC16 336
c              part load ratio                                                  HVAC16 337
        IF(QR(IG) .GT. <REFG-COMP-CAP>) <REFGHRSOVLD>=<REFGHRSOVLD>+1           HVAC16 338
        QR(IG) = AMIN1(QR(IG), <REFG-COMP-CAP>)                                 HVAC16 339
        PLR(IG) = QR(IG) / <REFG-COMP-CAP>                                      HVAC16 340
c              POWER CORRECTION FACTORS                                         HVAC16 341
c              True correction is combination of heat-recovery                  HVAC16 342
c              and non-recovery performance                                     HVAC16 343
        EIR1(IG) = CVAL(<REFG-KW-FTCOND>, TcondR, TcondR)                       HVAC16 344
c              if this unit will produce recoverable heat,                      HVAC16 345
        IF((QNEED .GT. 1.) .AND. (<REFG-HTREC-UNITS> .EQ. 1)) THEN              HVAC16 346
          EIR1r(IG) = CVAL(<REFG-KW-HR-FTC>, TcondR, TcondR)                    HVAC16 347
        ELSE                                                                    HVAC16 348
          EIR1r(IG) = EIR1(IG)                                                  HVAC16 349
        ENDIF                                                                   HVAC16 350
        EIR2(IG) = CVAL(<REFG-KW-FPLR>, PLR(IG), PLR(IG))                       HVAC16 351
c              Compressor electrical consumption.  Note that                    HVAC16 352
c              REFG-BTU/WATT was converted to BTUE/BTUC in DESIGN.              HVAC16 353
c              (in each stage of operation)                                     HVAC16 354
        COMPKW1(IG) = <REFG-COMP-CAP> * <REFG-BTU/WATT>                         HVAC16 355
     &                                * EIR1(IG) * EIR2(IG)                     HVAC16 356
        COMPKW2(IG) = <REFG-COMP-CAP> * <REFG-BTU/WATT>                         HVAC16 357
     &                                * EIR1r(IG) * EIR2(IG)                    HVAC16 358
c              GROSS WASTE HEAT in each stage (if full operation)               HVAC16 359
        QREJ1(IG) = QR(IG) + COMPKW1(IG)                                        HVAC16 360
        QREJ2(IG) = QR(IG) + COMPKW2(IG)                                        HVAC16 361
        IF((QNEED .GT. 1.) .AND. (<REFG-HTREC-UNITS> .EQ. 1)) THEN              HVAC16 362
          QREC1(IG) = QREJ1(IG)*<REFG-HREC-STAGE1>                              HVAC16 363
          QREC2(IG) = QREJ2(IG)*<REFG-HREC-STAGE2>                              HVAC16 364
        ENDIF                                                                   HVAC16 365
        TREJ1 = TREJ1 + QREJ1(IG)                                               HVAC16 366
        TREJ2 = TREJ2 + QREJ2(IG)                                               HVAC16 367
        TREC1 = TREC1 + QREC1(IG)                                               HVAC16 368
        TREC2 = TREC2 + QREC2(IG)                                               HVAC16 369
c              flow if variable-flow water-cooled condenser                     HVAC16 370
        GPMcw = GPMcw + <REFGDESGPMS>*PLR(IG)                                   HVAC16 371
 76   CONTINUE                                                                  HVAC16 372
C              RECOVERED HEAT                                                   HVAC16 373
c              calc amount avail from each stage of heat recovery               HVAC16 374
c              operation                                                        HVAC16 375
      FRAC1 = 1.0                                                               HVAC16 376
      FRAC2 = 0.0                                                               HVAC16 377
      IF((QNEED.gt.1.0) .and. (TREC1+TREC2.gt.0.)) THEN                         HVAC16 378
        IF(QNEED.gt.TREC1)  THEN                                                HVAC16 379
          IF(QNEED.ge.TREC2) THEN                                               HVAC16 380
            FRAC1 = 0.0                                                         HVAC16 381
            FRAC2 = 1.0                                                         HVAC16 382
          ELSE                                                                  HVAC16 383
            FRAC1 = (TREC2-QNEED)/(TREC2-TREC1)                                 HVAC16 384
            FRAC2 = 1.0 - FRAC1                                                 HVAC16 385
          ENDIF                                                                 HVAC16 386
        ENDIF                                                                   HVAC16 387
      ENDIF                                                                     HVAC16 388
      RfanPumpKW = 0.                                                           -131   373
      RCOMKW = 0.                                                               HVAC16 390
      QREJ   = 0.                                                               HVAC16 391
      QREC   = 0.                                                               HVAC16 392
      DO i=1,3                                                                  HVAC16 393
        COMPKW1(i) = COMPKW1(i) * KWBTU                                         HVAC16 394
        COMPKW2(i) = COMPKW2(i) * KWBTU                                         HVAC16 395
        RCOMKW = RCOMKW + (COMPKW1(i)*FRAC1 + COMPKW2(i)*FRAC2)                 HVAC16 396
        QREJ   = QREJ   + (  QREJ1(i)*FRAC1 +   QREJ2(i)*FRAC2)                 HVAC16 397
        QREC   = QREC   + (  QREC1(i)*FRAC1 +   QREC2(i)*FRAC2)                 HVAC16 398
      ENDDO                                                                     HVAC16 399
      QRREC = AMIN1(QNEED,QREC)                                                 HVAC16 400
      QRREJ = AMAX1(QREJ-QRREC,0.)                                              HVAC16 401
c              NET HEATING LOAD                                                 HVAC16 402
      QH = QH + QRREC                                                           HVAC16 403
c              initialize past hr Tcond (use next hr if overload)               HVAC16 404
c              and the fraction of fan power                                    HVAC16 405
      <REFG-PAST-TCOND> = 0.0                                                   HVAC16 406
      EIR3 = 0.0                                                                HVAC16 407
c              NOW REJECT HEAT                                                  HVAC16 408
      IF (<REFG-COND-TYPE> .EQ. 1) THEN                                         HVAC16 409
c              air cooled                                                       HVAC16 410
        IF(<REFG-SETPT-CTRL> .NE. 2) THEN                                       HVAC16 411
c              fixed and variable control                                       HVAC16 412
          CONDcap = <REFG-HTREJ-DES>*(TcondR-DBT)                               HVAC16 413
          IF( CONDcap .ge. QRREJ )  THEN                                        HVAC16 414
c              can maintain setpoint - calc plt                                 HVAC16 415
            CONDplr = QRREJ/CONDcap                                             HVAC16 416
          ELSE                                                                  HVAC16 417
c              cannot maintain setpoint - float for next hour                   HVAC16 418
            CONDplr = 1.0                                                       HVAC16 419
            TcondFloat = DBT + QRREJ/<REFG-HTREJ-DES>                           HVAC16 420
            <REFG-PAST-TCOND> = TcondFloat                                      HVAC16 421
          ENDIF                                                                 HVAC16 422
          EIR3 = CVAL(<REFG-FAN-PWR-FPL>, CONDplr, CONDplr)                     HVAC16 423
        ELSE                                                                    HVAC16 424
c              ambient control - calc fraction of cond active                   HVAC16 425
          EIR3 = CVAL(<REFG-AMB-COND-FT>, DBT, DBT)                             HVAC16 426
          TcondFloat = DBT + QRREJ/(<REFG-HTREJ-DES>*EIR3)                      HVAC16 427
          <REFG-PAST-TCOND> = TcondFloat                                        HVAC16 428
        ENDIF                                                                   HVAC16 429
      ELSEIF (<REFG-COND-TYPE> .EQ. 2) THEN                                     HVAC16 430
c              evaporative condenser                                            HVAC16 431
C              spray pump energy - runs whenever units are running              HVAC16 432
        IF((QRREJ+QRREC) .GT. 1.0)  THEN                                        HVAC16 433
          RAUXKW = RAUXKW + <REFG-PUMP-KW>                                      HVAC16 434
          RfanPumpKW = <REFG-PUMP-KW>                                           -131   374
        ENDIF                                                                   HVAC16 436
        IF(<REFG-SETPT-CTRL> .NE. 2) THEN                                       HVAC16 437
c              fixed and variable control                                       HVAC16 438
          CONDcap = <REFG-HTREJ-DES>                                            HVAC16 439
     $               *CVAL(<REFG-COND-CAP-FT>,TcondR,WBT)                       HVAC16 440
          IF( CONDcap .ge. QRREJ )  THEN                                        HVAC16 441
c              can maintain setpoint - calc plt                                 HVAC16 442
            CONDplr = QRREJ/CONDcap                                             HVAC16 443
          ELSE                                                                  HVAC16 444
c              cannot maintain setpoint - float for next hour                   HVAC16 445
            CONDplr = 1.0                                                       HVAC16 446
            Xlimits(2) = AMAX1(WBT,<REFG-MIN-COND-T>)                           HVAC16 447
            Xlimits(1) = 130.                                                   HVAC16 448
            Jcv = <REFG-COND-CAP-FT>                                            -045b  224
            CALL CURINV(<cv:COEF-1>,<cv:TYPE>                                   -045b  225
     $           ,1,TcondF,WBT,QRREJ/<REFG-HTREJ-DES>,Xlimits(1),IERR)          HVAC16 450
            TcondFloat = AMIN1(AMAX1(TcondF,Xlimits(2)),Xlimits(1))             HVAC16 451
            <REFG-PAST-TCOND> = TcondFloat                                      HVAC16 452
          ENDIF                                                                 HVAC16 453
          EIR3 = CVAL(<REFG-FAN-PWR-FPL>, CONDplr, CONDplr)                     HVAC16 454
        ELSE                                                                    HVAC16 455
c              ambient control - calc fraction of cond active                   HVAC16 456
          EIR3 = CVAL(<REFG-AMB-COND-FT>, WBT, WBT)                             HVAC16 457
          Xlimits(2) = AMAX1(WBT,<REFG-MIN-COND-T>)                             HVAC16 458
          Xlimits(1) = 120.                                                     HVAC16 459
          Jcv = <REFG-COND-CAP-FT>                                              -045b  226
          CALL CURINV(<cv:COEF-1>,<cv:TYPE>                                     -045b  227
     $      ,1,TcondF,WBT,QRREJ/(<REFG-HTREJ-DES>*EIR3),Xlimits(1),IERR)        IcRink  81
          TcondFloat = AMIN1(AMAX1(TcondF,Xlimits(2)),Xlimits(1))               HVAC16 462
          <REFG-PAST-TCOND> = TcondFloat                                        HVAC16 463
        ENDIF                                                                   HVAC16 464
      ELSE                                                                      HVAC16 465
c              water-cooled condenser                                           HVAC16 466
c              pointer to loop                                                  HVAC16 467
        Jlp = <REFG-CW-LOOP>                                                    HVAC16 468
c              error if loop forced off when heat rejection present             HVAC16 469
        IF (QRREJ .NE. 0.  .AND.  <lp;CTRL_MODE> .EQ. -1)  THEN                 HVAC16 470
          CALL MSGSIM(-1,II,II,II,II)                                           HVAC16 471
          WRITE (IOUTPT,9100) (<SYSTEM-NAME>,II=1,8),                           HVAC16 472
     &                        (<lp:NAME>    ,II=1,8)                            HVAC16 473
          call MessageBox( NULL, 'Refrigeration CW loop is off -'               HVAC16 474
     &      //' ABORTING'//char(0),'VARVOL Errors'//char(0), MB_OK              HVAC16 475
     &      + MB_ICONSTOP )                                                     HVAC16 476
          IwinReturn = 1                                                        HVAC16 477
          RETURN                                                                HVAC16 478
        ENDIF                                                                   HVAC16 479
        <REFG_COIL_Q>   = QRREJ                                                 HVAC16 480
        <REFG_COIL_GPM> = GPMcw                                                 HVAC16 481
        EIR3            = 0.                                                    HVAC16 482
      ENDIF                                                                     HVAC16 483
 9100 FORMAT(14X,'System: ',8A4,' has refrigeration'                  /         HVAC16 484
     &       14X,'equipment rejecting heat, but the attached'          /        HVAC16 485
     &       14X,'loop: ',8A4,' has been scheduled off.  The loop must'/        HVAC16 486
     &       14X,'always be available for refrigeration equipment.'    )        HVAC16 487
c              CONDENSER FAN ENERGY                                             HVAC16 488
      RAUXKW = RAUXKW + <REFG-FAN-KW>*EIR3                                      HVAC16 489
      RfanPumpKW = RfanPumpKW + <REFG-FAN-KW>*EIR3                              -131   375
 78   <SKW> = <SKW> + RDEFKW + RAUXKW + RCOMKW                                  HVAC16 491
      Jem       = <REFG-E-MS>                                                   HVAC16 492
      <REFG-EM> = <REFG-EM> + RDEFKW + RAUXKW + RCOMKW                          HVAC16 493
 80   CONTINUE                                                                  HVAC16 494
C              SET LOW SPEED RATIOS                                             VARVOL 650
      IF (<COMPRESSOR-TYPE>.EQ.1) THEN                                          VARVOL 651
          IF (QH.GE.<LOW-SPEED-HEAT>*QHT) THEN                                  VARVOL 652
              DO II=1,4                                                         VARVOL 653
                  LSR(II) = <LOW-SPEED-RATIOS>                                  VARVOL 654
              END DO                                                            VARVOL 655
          END IF                                                                VARVOL 656
      END IF                                                                    VARVOL 657
C********************** run function : VARVOL-2 ********************            VARVOL 658
      IF( MSYSF(92) .NE. 0 )   CALL  FINTS( MSYSF(92), 2. )                     VARVOL 659
C*******************************************************************            VARVOL 660
C              IF CONSTANT SPEED ELEC HEAT PUMP GET PERFORMANCE                 VARVOL 661
C              THEN ASSIGN SUPPLEMENTAL HEAT TO CORRECT SOURCE                  VARVOL 662
      IF (<HEAT-SOURCE>.NE.4) GO TO 75                                          VARVOL 663
      IF (<COMPRESSOR-TYPE>.GT.1) GO TO 75                                      VARVOL 664
      IF (<CW-LOOP> .ne. 0) THEN  ! wlhp                                        -047k   93
        Call HP_Water(QH,<HEATING-CAPACITY>,LSR(2),LSR(3),QHKW,SLOAD,1.)        -044d   96
      ELSE  ! air-to-air                                                        -044d   97
        Call HPUNIT(QH,<HEATING-CAPACITY>,LSR(2),LSR(3),QHKW,SLOAD,1.)          -044d   98
      ENDIF                                                                     -044d   99
c              assign electric loads to meters                                  HVAC22 198
      IF (HEATKW .GT. 0.)  THEN                                                 HVAC22 199
        HEATKWmax = MAX(HEATKW/EIRM2, HEATKW)                                   HVAC22 200
        CALL PeakSysDist(1,1, HEATKW,HEATKWmax, HeatEndUse,<HEAT-E-MS>)         HVAC22 201
      ENDIF                                                                     HVAC22 202
      CALL PeakSysDist(1,1, SUPPKW,<MAX_SUPP_KW>,                               HVAC22 203
     &                                        SuppEndUse,<SUPP-E-MS>)           HVAC22 204
        SKWQH = SKWQH + QHKW                                                    VARVOL 666
        <SKW> = <SKW> + QHKW                                                    VARVOL 667
C             IF SUPP SOURCE NOT FURNACE SKIP                                   VARVOL 676
      IF((<SUPP-SOURCE> .EQ. 2) .OR. (<SUPP-SOURCE> .EQ. 3)) THEN               VARVOL 677
        CALL FURNAC(SLOAD, <SUPP-HEAT-CAP>, <SUPP-SOURCE>, 1.0)                 VARVOL 678
        JEM       = <AUX-E-MZ>                                                  HVAC6  903
        <AUX-EM>  = <AUX-EM> + FurnAuxkW                                        HVAC6  904
        JFM       = <HEAT-F-MZ>                                                 HVAC6  905
        <HEAT-FM> = <HEAT-FM> - FFUEL                                           HVAC6  906
        <AUX-FM>  = <AUX-FM>  + FurnAuxFuel                                     HVAC6  907
        QHGSUP = -FFUEL                                                         VARVOL 682
        GO TO 75                                                                VARVOL 683
      ENDIF                                                                     VARVOL 684
C             IF NO SUPPLEMENTAL HEAT LOAD, THEN SKIP                           VARVOL 685
      IF(SLOAD .GE. -1.0) GO TO 75                                              VARVOL 686
C             IF SUPP SOURCE NOT ELECTRIC, THEN SKIP                            VARVOL 687
      IF(<SUPP-SOURCE> .NE. 1) GO TO 73                                         VARVOL 688
        X      = SLOAD*KWBTU                                                    VARVOL 689
        SKWQH  = SKWQH  - X                                                     VARVOL 690
        <SKW>  = <SKW>  - X                                                     VARVOL 691
c              assign electric load to meter                                    HVAC22 205
        CALL PeakSysDist(1,1, -X,<MAX_SUPP_KW>, SuppEndUse,<SUPP-E-MS>)         HVAC22 206
        QHGSUP = -SLOAD                                                         VARVOL 693
C             IF SUPP SOURCE NOT HOT WATER, THEN SKIP                           VARVOL 694
   73 CONTINUE                                                                  VARVOL 695
      IF(<SUPP-SOURCE> .GT. 0) GO TO 75                                         VARVOL 696
        QHSUP = SLOAD                                                           VARVOL 697
C             IF SUPP SOURCE CANNOT BE SOLAR, THEN SKIP                         VARVOL 698
      IF(<SUPP-SOURCE> .GE. 0) GO TO 75                                         VARVOL 699
        QHMP  = QHMP + SLOAD                                                    VARVOL 700
        TMP   = TMP + TM * CFM                                                  VARVOL 701
        CFMP = CFMP + CFM                                                       VARVOL 702
C              IF GAS HP GET PERFORMANCE                                        VARVOL 703
   75 IF(<HEAT-SOURCE> .NE. 9)  GOTO 169                                        VARVOL 704
      QHZHP = 0.0                                                               VARVOL 705
      IF(<BASEBOARD-SOURCE> .EQ. 5)  QHZHP = QHZHP + QHB                        DWRECV 110
      IF(<ZONE-HEAT-SOURCE> .EQ. 5)  QHZHP = QHZHP + QHZ                        DWRECV 111
      IF(<PREHEAT-SOURCE>   .EQ. 5)  QHZHP = QHZHP + QHP                        DWRECV 112
      IF(<HUMIDIFIER-TYPE>  .EQ. 5)  QHZHP = QHZHP + QHUM                       DWRECV 113
      IF ((<WASTE-HEAT-USE> .EQ. 1  .OR.  <WASTE-HEAT-USE> .EQ. 3)              DWRECV 114
     &                 .AND.  QHZHP .LE. 0.  .AND.  QCRUN .GT. 0.)  THEN        DWRECV 115
        QCWASU = AMAX1(QHZHP,QCWAS)                                             VARVOL 719
        QHZHP  = QHZHP - QCWASU                                                 VARVOL 720
      ENDIF                                                                     VARVOL 721
      CALL GHPPWR(QH,TM,WBFS(TM,WM,PATM),CFM,2)                                 VARVOL 722
C              IF VARIABLE SPEED ELEC HEAT PUMP GET PERFORMANCE                 VARVOL 723
  169 IF (<HEAT-SOURCE>.NE.4 .OR. <COMPRESSOR-TYPE>.NE.2)  GO TO 170            VARVOL 724
      QHZHP = 0.0                                                               VARVOL 725
      IF(<BASEBOARD-SOURCE> .EQ. 4)  THEN                                       VARVOL 726
        QHZHP = QHZHP + QHB                                                     VARVOL 727
      ENDIF                                                                     VARVOL 728
      IF(<ZONE-HEAT-SOURCE> .EQ. 4)  THEN                                       VARVOL 729
        QHZHP = QHZHP + QHZ                                                     VARVOL 730
      ENDIF                                                                     VARVOL 731
      IF(<PREHEAT-SOURCE> .EQ. 4)  THEN                                         VARVOL 732
        QHZHP = QHZHP + QHP                                                     VARVOL 733
      ENDIF                                                                     VARVOL 734
      IF(<HUMIDIFIER-TYPE> .EQ. 4)  THEN                                        VARVOL 735
        QHZHP = QHZHP + QHUM                                                    VARVOL 736
      ENDIF                                                                     VARVOL 737
      CALL VHPPWR(QH+QHZHP,TM,WBFS(TM,WM,PATM),CFM,2)                           VARVOL 738
  170 CONTINUE                                                                  VARVOL 739
C              IF NOT DX HEAT OR COOL SKIP                                      VARVOL 740
      IF(((ICODE.LT.19).OR.(ICODE.GT.22)).AND.(ICODE.NE.28)) GOTO 175           VARVOL 741
C              SAVE CRANK CASE HEATING                                          VARVOL 742
      IF(DBT .GT. <CRANKCASE-MAX-T>)  GOTO 175                                  VARVOL 743
      IF(<HEAT-SOURCE> .EQ. 9)  THEN                                            VARVOL 744
        T =  QCRUN + QHRUN                                                      VARVOL 745
        PLRCC = PLRC                                                            VARVOL 746
      ELSE                                                                      VARVOL 747
        T      = PLRCC*CFMCYC                                                   VARVOL 748
        IF(<HEAT-SOURCE> .EQ. 4)  T = T + PLRH*CFMCYC                           VARVOL 749
        IF((T .GT. 0.) .AND. (<MIN-HGB-RATIO> .LT. 1.))  THEN                   -044c  732
          IF((T .GE. <MIN-HGB-RATIO>) .OR.                                      -044c  733
     $       (<MIN-HGB-RATIO> .LE. 0.)) THEN                                    -044c  734
            T    = 1.0                                                          -044c  735
          ELSE                                                                  -044c  736
            T    = T/<MIN-HGB-RATIO>                                            -044c  737
          ENDIF                                                                 -044c  738
        ENDIF                                                                   -044c  739
      ENDIF                                                                     VARVOL 757
      T      = <CRANKCASE-HEAT>*AMAX1(0.0,AMIN1(1.0,1.0-T))                     VARVOL 758
      JEM       = <AUX-E-MS>                                                    HVAC6  910
      <AUX-EM>  = <AUX-EM>  + T                                                 HVAC6  911
      <SKW>  = <SKW> + T                                                        VARVOL 760
      IF((PLRCC.GT.0.0).OR.(<HEAT-SOURCE>.LT.4)) THEN                           VARVOL 761
          SKWQC  = SKWQC + T                                                    VARVOL 762
          QCAUX  = QCAUX + T*BTUKW                                              VARVOL 763
      ENDIF                                                                     VARVOL 764
      IF(<HEAT-SOURCE> .LT. 4)  GOTO 175                                        VARVOL 765
      IF(PLRH .GT. 0.0)  THEN                                                   VARVOL 766
          SKWQH  = SKWQH + T                                                    VARVOL 767
          QHAUX  = QHAUX + T*BTUKW                                              VARVOL 768
      ENDIF                                                                     VARVOL 769
      IF(PLRCC+PLRH .EQ. 0.0) THEN                                              VARVOL 770
          SKWQH  = SKWQH + T*0.5                                                VARVOL 771
          QHAUX  = QHAUX + T*0.5*BTUKW                                          VARVOL 772
          SKWQC  = SKWQC + T*0.5                                                VARVOL 773
          QCAUX  = QCAUX + T*BTUKW*0.5                                          VARVOL 774
      ENDIF                                                                     VARVOL 775
  175 CONTINUE                                                                  VARVOL 776
      IF(IHPREP .NE. 0)  THEN                                                   VARVOL 777
        IF(<ZONE-HEAT-SOURCE> .NE. 9)  THEN                                     VARVOL 778
          QHGSLD = QHGSLD + QHZ                                                 VARVOL 779
          QHGSUP = QHGSUP + QGZC                                                VARVOL 780
        ENDIF                                                                   VARVOL 781
        IF(<BASEBOARD-SOURCE> .NE. 9)  THEN                                     VARVOL 782
          QHGSLD = QHGSLD + QHB                                                 VARVOL 783
          QHGSUP = QHGSUP + QGBB                                                VARVOL 784
        ENDIF                                                                   VARVOL 785
      ENDIF                                                                     VARVOL 786
C              IF THE MAIN HEAT SOURCE CAN NOT BE SOLAR SKIP                    VARVOL 787
      IF(<HEAT-SOURCE> .GE. 0)  GOTO 171                                        VARVOL 788
C              KEEP A SUM OF THE MAIN COIL LOADS THAT CAN BE SOLAR ASSIS        VARVOL 789
      QHMP = QHMP + QH - QRREC                                                  VARVOL 790
C                                                                               VARVOL 791
C              THE MIX AIR INTO THE COIL MUST BE WEIGHTED BY THE CFM            VARVOL 792
      TMP    = TMP + TM*CFM                                                     VARVOL 793
C              ASLO SUM THE CFM                                                 VARVOL 794
      CFMP   = CFMP + CFM                                                       VARVOL 795
C              IF THE PREHEAT COILS CAN NOT BE SOLAR SKIP                       VARVOL 796
  171 IF(<PREHEAT-SOURCE> .GE. 0)  GOTO 172                                     VARVOL 797
C              SAVE THE LOADS AND CFM                                           VARVOL 798
      QHPP   = QHPP + QHP                                                       VARVOL 799
      CFMPP  = CFMPP + PO*CFM                                                   VARVOL 800
C              IF THE BASEBOARDS ARE NOT SOLAR SKIP                             VARVOL 801
  172 IF(<BASEBOARD-SOURCE> .GE. 0)  GOTO 173                                   VARVOL 802
C              SAVE THE LOAD                                                    VARVOL 803
      QHBP   = QHBP + QHB                                                       VARVOL 804
  173 CONTINUE                                                                  VARVOL 805
C              LOADS ARE THE SUM OF AIRHANDLER COIL LOADS PLUS                  VARVOL 806
C              ZONE COIL LOADS                                                  VARVOL 807
      IF(<ZONE-HEAT-SOURCE> .LE. 0)  <QH> = QHZ                                 VARVOL 808
      <PAST-IVENTF> = IVENTF                                                    VARVOL 809
      IF (IVENTF.EQ.0) THEN                                                     -44c3a  60
        QC = QC + QCZ                                                           -44c3a  61
      ELSE IF(<NATURAL-VENT-KW> .gt. 0.0) THEN                                  -44c3a  62
        Jem       = <VENT-E-MS>                                                 -44c3a  63
        <em;VENT> = <em;VENT> + <NATURAL-VENT-KW>*VNTfrac                       -44c6    7
        FANKW     = FANKW     + <NATURAL-VENT-KW>*VNTfrac                       -44c6    8
        <SKW>     = <SKW>     + <NATURAL-VENT-KW>*VNTfrac                       -44c6    9
      ENDIF                                                                     -44c3a  67
c                                                                               DWRECV 116
c              Recover gas heat-pump waste heat to domestic water heater        DWRECV 117
      IF (<HTREC-DW-HEATER> .GT. 0  .AND.  <HEAT-SOURCE> .EQ. 9)                DWRECV 118
     &  CALL GHPPWR(xxx,xxx,xxx,xxx,3)                                          DWRECV 119
C********************** run function : VARVOL-3 ********************            VARVOL 811
      IF( MSYSF(93) .NE. 0 )   CALL  FINTS( MSYSF(93), 3. )                     VARVOL 812
C*******************************************************************            VARVOL 813
C                  SAVE info on PLR for fans and compressors                    VARVOL 814
      IF (ISSPF .EQ. 1  .AND.  InitialFlg .EQ. 0)  CALL REPSSP                  Time   403
      RETURN                                                                    VARVOL 816
      END                                                                       VARVOL 817
      SUBROUTINE VHPPWR(HPLOAD,MAT,MATW,CFMINP,IMODE)                           VHPPWR   2
C                                                                               VHPPWR   3
C                                                                               VHPPWR   4
C     THIS ROUTINE CALCULATES THE ENERGY CONSUMPTION OF THE VARIABLE            VHPPWR   5
C     SPEED HEAT PUMP FOR A SPECIFIC SET OF LOAD AND ENVIRONMENTAL CONDITIONS   VHPPWR   6
C                                                                               VHPPWR   7
C     INPUTS ARE:                                                               VHPPWR   8
C        LOAD (NEGATIVE INDICATES HEATING)   (HPLOAD)                           VHPPWR   9
C        MIXED AIR DRY-BULB TEMPERATURE      (MAT)                              VHPPWR  10
C        MIXED AIR WET-BULB TEMPERATURE      (MATW)                             VHPPWR  11
C        COOL/HEAT MODE  (1/2)               (IMODE)                            VHPPWR  12
C                                                                               VHPPWR  13
C     OUTPUTS ARE:                                                              VHPPWR  14
C        GHP ENGINE RPM                      (GRPM)                             VHPPWR  15
C        ELEC CONSUMPTION                    (QCGAS,QHGAS)                      VHPPWR  16
C        AUXILLIARY ELECTRICAL CONSUMPTION    (QCAUX,QHAUX)                     VHPPWR  17
C                                                                               VHPPWR  18
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON /DHWDAT/ HTT,EHSTOR,HTGIVE,HTASK,HTFILL,HSUPRT,HSTRRT,             /DHWDAT/ 2
     1                DHWWST,DHWWSU,HTTIN,DHWLD,DHWLDR,DHWPLR,DHWHRT,           /DHWDAT/ 3
     2                DHHRFT,DHERFT,DHERFP,HTCAP,HTLOSS,DHWEIR                  /DHWDAT/ 4
      DIMENSION DHWD(20)                                                        /DHWDAT/ 5
      EQUIVALENCE (HTT,DHWD(1))                                                 /DHWDAT/ 6
C              SYSTEM LEVEL VARIABLES FOR DESICCANT SYSTEMS, BOTH TOTAL         /DSYSTD/ 2
C              AND INTEGRATED                                                   /DSYSTD/ 3
      COMMON  /DSYSTD/  SCGAS, QREG, WBR, WB8, T8, W8, WB9, T9, W9, EFF,        /DSYSTD/ 4
     1                  DTON, DMODE(7), ERMAX4, ERMAX5, ERMAX6, OPMODE,         /DSYSTD/ 5
     2                  DBOA,WOA,DGAS,DKW,TCONDd,QCDTOT,QCDS,QCDL,              /DSYSTD/ 6
     3                  POA,DFANKW,RFANKW,DMOTKW,EVKW,QCEVT,QCEVS,              /DSYSTD/ 7
     4                  QCEVL,TCMNEV                                            /DSYSTD/ 8
      REAL DSYSTD(39)                                                           /DSYSTD/ 9
      EQUIVALENCE (DSYSTD(1), SCGAS)                                            /DSYSTD/10
      COMMON  /ENDUSE/ SUPPKW, HEATKW                                           HVAC27   1
      COMMON  /MISCD / TEMPS(4,9999),CONS(5),TEMPSL(9999),                      -048a   10
     1                 BLDGQH,BLDGQC,BLDGQL,BLDGP,BPMULT,                       /MISCD/  3
     $                 DBTMIN,DBTMAX,WMIN,WMAX,NSPZ(9999),                      -048a   11
     3                 DQ, DTP, DTR, DTS, FPI, PLRCC , POM, TC2, TDM,           /MISCD/  5
     4                 TRA,WCOL,WCOLM,WMM,YPI,KWBTU,BTUKW,UNFILD,Unusedm        RemPA   45
      REAL             KWBTU                                                    /MISCD/  7
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      COMMON /RSVVTD/ CONFRC,HONFRC,NOWFRC,THMXNS                               /RSVVTD/ 2
      REAL NOWFRC                                                               /RSVVTD/ 3
      COMMON /SHP   / QCRUN,QCLOAD,QCGAS,QCAUX,QCGSLD,QCGSUP,                   /SHP/    2
     1                QCWAS,QCWASU,QCGSAV,QCFAN,                                /SHP/    3
     2                QHRUN,QHLOAD,QHGAS,QHAUX,QHGSLD,QHGSUP,                   /SHP/    4
     3                QHWAS,QHWASU,QHGDFR,QHFAN,          CUR(25),              /SHP/    5
     4                GSAV1,GASV2,PCH,ISZCZ,GCAP(2),GEDB,QHDFRG,                -044c1   1
     5                GRPM,PLRSUP,CFMCYC,CLPLR,CFMVVT,QHZHP,PCCEDB,             /SHP/    7
     6                IHPREP,IHPOUT,IHPHRR,IHPHRN,IRST,IREN                     /SHP/    8
      COMMON /SHPZ  / QCRUNZ,QCLOADZ,QCGASZ,QCAUXZ,QCGSLDZ,QCGSUPZ,             /SHP/    9
     1                QCWASZ,QCWASUZ,QCGSAVZ,QCFANZ,                            /SHP/   10
     2                QHRUNZ,QHLOADZ,QHGASZ,QHAUXZ,QHGSLDZ,QHGSUPZ,             /SHP/   11
     3                QHWASZ,QHWASUZ,QHGDFRZ,QHFANZ                             /SHP/   12
      DIMENSION       SHP(60),SHPZ(20)                                          /SHP/   13
      EQUIVALENCE     (SHP,QCRUN),(SHPZ,QCRUNZ)                                 /SHP/   14
     1               ,(DFM1,CUR(18)),(DFM2,CUR(19)),(DFM3,CUR(20))              /SHP/   15
      COMMON /SSPDAT/  PLRCS,QCCKWS,QCCMPS,PLRHS,QHCKWS,QHCMPS                  /SSPDAT/ 2
     $                ,PLRFS,PLRFCS,PLRFHS,sspss                                /SSPDAT/ 3
     $                ,PLRCZ,QCCKWZ,QCCMPZ,PLRHZ,QHCKWZ,QHCMPZ                  /SSPDAT/ 4
     $                ,PLRFZ,PLRFCZ,PLRFHZ,sspsz                                /SSPDAT/ 5
     $                ,ISSPF,IWCCF,IPCCF,SSPSAV                                 /SSPDAT/ 6
      DIMENSION        SSPD(24)                                                 JJHfix   1
      EQUIVALENCE      (SSPD(1),PLRCS)                                          /SSPDAT/ 8
      COMMON  /SYSTD / TH,TC,TM,TR,QH,QC,QHZ,QCZ,QHB,QHP,QHUM,                  /SYSTD/  2
     1                 QDHUM,TCMIN,THMAX,QLSUM,QPSUM,CFM,CFMH,CFMC,             /SYSTD/  3
     2                 RCFM,ECFM,CINF,FON,HON,CON,BON,SCONS(3),PH,PC,           /SYSTD/  4
     3                 SKW,FANKW,unused1,WR,WM,WCOIL,WW,PO,D,                   -046f    1
     4                 FTEMP,TCR,QHR,RfanPumpKW,SGAS,SKWQH,SKWQC,QCLAT,         -131    23
     5                 SFKW,RFKW,FONNGT,WSURF,RWalkinQ,TSURF,TRh,               -131    24
     6                 CBF,CBF1,CBF2,EON,PLRCFM,PLRC,PLRH,QCM1,                 /SYSTD/  8
     7                 QCM2,QHM1,EIRM1,EIRM2,EIR,OFKW,QCT,QCS,                  /SYSTD/  9
     8                 WRMAX,WRMIN,CFMRAT,QdistG,QdistL,RON,QHT,                /SYSTD/ 10
     9                 TPOMIN,POMIN,QHSUP,QRSENS,QRLAT,QRREC,QRREJ,             /SYSTD/ 11
     1                 RCOMKW,RDEFKW,RAUXKW,ECFMP,CFMIN,CINFP,DT,DW,            /SYSTD/ 12
     2                 EWB,IC,NATTSP,Q,RETR,SLOAD,QLSUMP,T,TCHUM,TEND,          /SYSTD/ 13
     3                 TS,hgbmin,HPDefE,EconoOnly,TDuctEnv,                     -044e1   1
     4                 QCUNMT,CapRh,CapRph,CapRc                                HVAC25   3
      REAL             SYSTD(113)                                               HVAC19  13
      EQUIVALENCE      (SYSTD(1),TH)                                            RemPA   65
      COMMON  /TIME  / IDOY, IYR, IMO, IDAY, IHR,                               Time     4
     &                 ISCMO, ISCDAY, ISCHR, IDOW, ISCDOW, iDSdates(6),         -044e5   1
     &                 iTimeFlg, iDSFlg, iDDFlg, InitialFlg, LeapYr,            Time     6
     &                 CLOCK(10), MONDSC(13), MONLEN(12), MONSDA(12)            HR      12
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
      REAL*4 HPLOAD,LOAD,MAT,MATW,DCAP(2),RPM(2)                                VHPPWR  31
C            Intialize on time (for cycling) and cycle loss                     VHPPWR  32
      PCTON  = 1.0                                                              VHPPWR  33
      CLPLR  = 1.0                                                              VHPPWR  34
C            SET UNIT SIZE BASED ON HEAT OR COOL CAPACITY                       VHPPWR  35
      EDB    = DBT                                                              VHPPWR  36
C            IF EVAP COOLED CONDENSOR                                           VHPPWR  37
      IF (IPCCF .gt. 0)  EDB = PCCEDB                                           -045h   92
C            PTAC IS A ZONAL SYSTEM                                             VHPPWR  39
      IF(ICODE .eq. 22)  THEN                                                   VHPPWR  40
        SIZE   = <COOLCAPZ>                                                     VHPPWR  41
        CSIZE  = <COOLCAPZ>                                                     VHPPWR  42
        SHSIZE = <COOLSHZ>                                                      VHPPWR  43
        SMULT  = <MULTIPLIER>                                                   VHPPWR  44
        CFMS   = <CFMAX>                                                        VHPPWR  45
        IF(IMODE .eq. 2)  THEN                                                  VHPPWR  46
          SIZE   = -<HEATCAPZ>                                                  VHPPWR  47
        ENDIF                                                                   VHPPWR  48
      ELSE                                                                      VHPPWR  49
        SIZE   = <COOLING-CAPACITY>                                             VHPPWR  50
        CSIZE  = SIZE                                                           VHPPWR  51
        SHSIZE = <COOL-SH-CAP>                                                  VHPPWR  52
        SMULT  = 1.0                                                            VHPPWR  53
        CFMS   = <SUPPLY-CFM>                                                   VHPPWR  54
        IF(IMODE .eq. 2)  THEN                                                  VHPPWR  55
          SIZE   = -<HEATING-CAPACITY>                                          VHPPWR  56
        ENDIF                                                                   VHPPWR  57
      ENDIF                                                                     VHPPWR  58
      GEDB = MAT                                                                VHPPWR  59
      RPM(1) = 1.0                                                              VHPPWR  60
C                SAVE INPUT LOAD                                                VHPPWR  61
      LOAD= HPLOAD                                                              VHPPWR  62
      IF (IMODE .EQ. 1) THEN                                                    VHPPWR  63
C                                                                               VHPPWR  64
C                             COOLING                                           VHPPWR  65
C                                                                               VHPPWR  66
C                CALCULATE CAPACITY FOR THE GIVEN CONDITIONS AT DIF RPM's       VHPPWR  67
C                                                                               VHPPWR  68
C                IF NO LOAD, SKIP                                               VHPPWR  69
        IF(HPLOAD .LE. 1.0)  GOTO 250                                           VHPPWR  70
C                RATIO OF LOW RPM LIMIT TO HIGH RPM LILIT                       VHPPWR  71
        RPM(2) = (<COOL-RPM-LIMIT2>/<COOL-RPM-LIMIT1>)                          VHPPWR  72
C                  Pick up high and low RPM capacities                          VHPPWR  73
        QCM1   = CVAL(<COOL-CAP-FT>,MATW,EDB)                                   VHPPWR  74
        CUR(21) = CVAL(<COOL-CAP-FRPM>,RPM(1),EDB)                              VHPPWR  75
C                  HIGH LIMIT CAPACITY                                          VHPPWR  76
        GCAP(1) = QCM1*CUR(21)*SIZE                                             VHPPWR  77
        QCT = GCAP(1)                                                           VHPPWR  78
        CUR(21) = CVAL(<COOL-CAP-FRPM>,RPM(2),EDB)                              VHPPWR  79
C                  LOW LIMIT CAPACITY                                           VHPPWR  80
        GCAP(2) = QCM1*CUR(21)*SIZE                                             VHPPWR  81
C                PART LOAD RATIO                                                VHPPWR  82
        PLRC= LOAD/(QCT+1.)                                                     VHPPWR  83
C              GET RPM NEEDED TO MEET THIS LOAD                                 VHPPWR  84
C              IF LOAD LESS THAN LOW LIMIT SET RPM TO MIN                       VHPPWR  85
        IF(LOAD .LE. GCAP(2))  THEN                                             VHPPWR  86
          GRPM = RPM(2)                                                         VHPPWR  87
C              IF LOAD ABOVE HIGH LIMIT SET RPM TO MAX                          VHPPWR  88
        ELSEIF(LOAD .GE. GCAP(1))  THEN                                         VHPPWR  89
          GRPM = RPM(1)                                                         VHPPWR  90
C              OTHERWISE GET RPM FOR THIS PLRC BY INVERTING THE                 VHPPWR  91
C              CAPACITY AS A FUNCTION OF RPM CURVE                              VHPPWR  92
        ELSE                                                                    VHPPWR  93
          Jcv = <COOL-CAP-FRPM>                                                 -045b  228
          Y   = EDB                                                             -045b  229
          Z   = PLRC                                                            -045b  230
          CALL CURINV(<cv:COEF-1>,<cv:TYPE>, 1,GRPM,Y,Z, RPM(1),IERR)           -045b  231
          GRPM = AMIN1(AMAX1(GRPM,RPM(2)),RPM(1))                               VHPPWR  98
        ENDIF                                                                   VHPPWR  99
C              GET EIR AS A FUNCTION OF OUTSIDE DRYBULB, INSIDE                 VHPPWR 100
C              WETBULB, AND RPM.                                                VHPPWR 101
C              THE TEMP DEPENDENCE IS A WEIGHTED AVERAGE OF THE DEPENDENCE      VHPPWR 102
C              AT HIGH SPEED AND AT LOW SPEED.                                  VHPPWR 103
        RPMFRC = (GRPM-RPM(2))/(RPM(1)-RPM(2))                                  VHPPWR 104
        EIRMHS = CVAL(<COOL-EIR-FT>,MATW,DBT)                                   VHPPWR 105
        EIRMLS = CVAL(<COOL-EIR-LS-FT>,MATW,DBT)                                VHPPWR 106
        EIRM1 = EIRMHS*RPMFRC + EIRMLS*(1.-RPMFRC)                              VHPPWR 107
        CUR(4) = CVAL(<COOL-EIR-FRPM>,GRPM,EDB)                                 VHPPWR 108
        EIRM2 = CUR(4)                                                          VHPPWR 109
        EIR   = EIRM1*EIRM2*<COOLING-EIR>                                       VHPPWR 110
C              ELEC USED BY COMPRESSOR IN BTU/HR                                VHPPWR 111
        QCGASZ= EIR*QCT                                                         VHPPWR 112
C                IF LOAD IS LESS THAN CAPACITY AT LOW RPM, THEN THE UNIT CYCLES VHPPWR 113
        IF (LOAD .LT. GCAP(2))  THEN                                            VHPPWR 114
          CLPLR= LOAD/(GCAP(2)+1.)                                              VHPPWR 115
          IF (CLPLR .lt. 1.) THEN  ! cycling                                    -048u   33
            VAL     = Max(CLPLR,<COOL-CLOSS-MIN>)                               -048u   34
            CUR(17) = CVAL(<COOL-CLOSS-FPLR>,VAL,VAL)                           -048u   35
            PCTON   = CLPLR / Max(CUR(17),0.001)                                -048u   36
          ELSE  ! not cycling                                                   -048u   37
            CUR(17) = 1.                                                        -048u   38
            PCTON   = 1.                                                        -048u   39
          ENDIF                                                                 -048u   40
          QCGASZ= QCGASZ *PCTON                                                 VHPPWR 119
        ENDIF                                                                   VHPPWR 120
        QCRUNZ = PCTON                                                          VHPPWR 121
C              ADJUST FOR FRAC HOUR COOLING (RESVVT SYSTEM)                     VHPPWR 122
        QCRUNZ = QCRUNZ*NOWFRC                                                  VHPPWR 123
        QCGASZ = QCGASZ*NOWFRC                                                  VHPPWR 124
C                IF LOAD GREATER THAN CAPACITY AT HIGH RPM, LOAD NOT MET.       VHPPWR 125
        IF (LOAD .GT. GCAP(1))  THEN                                            VHPPWR 126
C                SUPPLEMENTAL LOAD                                              VHPPWR 127
          QCGSLDZ= LOAD -GCAP(1)                                                VHPPWR 128
C                LOAD MET BY HEAT PUMP                                          VHPPWR 129
          LOAD  = GCAP(1)                                                       VHPPWR 130
        ENDIF                                                                   VHPPWR 131
c              If desuperheat available for dhw, calc amount                    DWRECV 120
        IF (<HTREC-DW-HEATER> .GT. 0) THEN                                      DWRECV 121
          CUR(6) = CVAL(<COOL-WH-FT>,MATW,EDB)                                  DWRECV 122
          CUR(7) = CVAL(<COOL-WH-FRPM>,GRPM,EDB)                                DWRECV 123
          QCWASZ = -CUR(6)*CUR(7)*<COOL-WASTE-HEAT>*LOAD                        DWRECV 124
c              actual amount recovered can't be determined until dw-heater      DWRECV 125
c              is simulated - estimate now for hourly reports                   DWRECV 126
          QCWASUZ = AMAX1(QCWASZ, (<dw;Qask>-<dw;Q_RECVR>)/smult)               DWRECV 127
c              sum total available for heater                                   DWRECV 128
          <dw;Q_RECVR> = <dw;Q_RECVR> + QCWASZ*smult                            DWRECV 129
        ENDIF                                                                   DWRECV 130
C                COLLECT SUMMARY DATA                                           VHPPWR 138
C                KW USED BY OUTSIDE FAN                                         VHPPWR 139
        OFKW   = 0.0                                                            VHPPWR 140
        IF(DBT .ge. <OUTSIDE-FAN-T>)  THEN                                      VHPPWR 141
          OFKW   = <OUTSIDE-FAN-ELEC>*CSIZE*0.001                               VHPPWR 142
          IF(<OUTSIDE-FAN-CFLT>.ne.0) THEN                                      VHPPWR 143
            CUR( 9)= CVAL(<OUTSIDE-FAN-CFLT>,PLRC,EDB)                          VHPPWR 144
            OFKW   = OFKW*CUR(9)                                                VHPPWR 145
          ENDIF                                                                 VHPPWR 146
C              IF THERE IS AN EVAP COOLED CONDENSOR, INCLUDE                    VHPPWR 147
C              ITS ELEC CONSUMPTION IN OFKW                                     VHPPWR 148
          IF(IPCCF .EQ. 1)  THEN                                                VHPPWR 149
            OFKW   = OFKW + <EVAP-PCC-ELEC>*CSIZE*0.001                         VHPPWR 150
          ENDIF                                                                 VHPPWR 151
C              IF OUTSIDE-FAN-MODE=INTERMITTANT, IT WILL CYCLE                  VHPPWR 152
C              IF THE COMPRESSOR DOES                                           VHPPWR 153
          IF(<OUTSIDE-FAN-MODE>.eq.1)                                           VHPPWR 154
     $      OFKW   = OFKW*Min(1.,PCTON)                                         -048u   41
          OFKW = OFKW*NOWFRC                                                    VHPPWR 156
C              INCREMENT THE END USE VARIABLE HTRJKW, THE KW USED TO            VHPPWR 157
C              REJECT HEAT                                                      VHPPWR 158
          JEM        = <HTREJ-E-MS>                                             HVAC6  912
          <HTREJ-EM> = <HTREJ-EM> + OFKW                                        HVAC6  913
        ENDIF                                                                   VHPPWR 160
        QCAUXZ = OFKW*BTUKW                                                     VHPPWR 161
        SKWQC  = SKWQC + OFKW + QCGASZ*KWBTU                                    VHPPWR 162
        <SKW>  = <SKW> + OFKW + QCGASZ*KWBTU                                    VHPPWR 163
        QCLOADZ= LOAD*NOWFRC                                                    VHPPWR 164
        JEM       = <COOL-E-MS>                                                 HVAC6  914
        <COOL-EM> = <COOL-EM> + QCGASZ*KWBTU                                    HVAC6  915
        IF( ISSPF .EQ. 1)  THEN                                                 VHPPWR 166
          PLRCS  = PLRC                                                         VHPPWR 167
          QCCMPS = LOAD*NOWFRC                                                  VHPPWR 168
        ENDIF                                                                   VHPPWR 169
        GRPM  = GRPM*<COOL-RPM-LIMIT1>                                          VHPPWR 170
        IF( ICODE .eq. 22)  THEN                                                VHPPWR 171
          DO II=1,10                                                            VHPPWR 172
            IF(SHPZ(II) .ne. 0.0)  SHP(II) = SHP(II) + SHPZ(II)*SMULT           VHPPWR 173
          ENDDO                                                                 VHPPWR 174
        ELSE                                                                    VHPPWR 175
          DO II=1,10                                                            VHPPWR 176
            SHP(II) = SHPZ(II)                                                  VHPPWR 177
          ENDDO                                                                 VHPPWR 178
        ENDIF                                                                   VHPPWR 179
        QCCKWS = QCGAS*KWBTU                                                    VHPPWR 180
C                ELSE WE ARE DOING HEATING.                                     VHPPWR 181
 250    CONTINUE                                                                VHPPWR 182
      ELSE                                                                      VHPPWR 183
C                                                                               VHPPWR 184
C                             HEATING                                           VHPPWR 185
C                                                                               VHPPWR 186
C                CONVERT HEATING LOAD TO A POSITIVE VALUE.                      VHPPWR 187
        LOAD= ABS(LOAD)                                                         VHPPWR 188
C             If no main heating load just pass other loads to supp src or skip VHPPWR 189
        IF(LOAD .LT. 1.)  THEN                                                  VHPPWR 190
          IF(QHZHP .LT. -1.)  THEN                                              VHPPWR 191
            QHGSLDZ = QHZHP                                                     VHPPWR 192
            GOTO 350                                                            VHPPWR 193
          ELSE                                                                  VHPPWR 194
            GOTO 400                                                            VHPPWR 195
          ENDIF                                                                 VHPPWR 196
        ENDIF                                                                   VHPPWR 197
C             If GHP off or cooling just pass other loads to supp src           VHPPWR 198
        IF((DBT.LT.<MIN-HP-T>).OR.(QCRUNZ.GT.0.0))  THEN                        VHPPWR 199
          QHGSLDZ = QHZHP - LOAD                                                VHPPWR 200
          GOTO 350                                                              VHPPWR 201
        ENDIF                                                                   VHPPWR 202
        DFM1 = 0.0                                                              VHPPWR 203
        DFM2   = 0.                                                             VHPPWR 204
        DFM3   = 0.                                                             VHPPWR 205
C              GET THE FRAC OF THE HOUR DEFROST OCCURS                          VHPPWR 206
        IF((DBT.LE.<DEFROST-T>).AND.(<DEFROST-FRAC-FT>.NE.0))                   VHPPWR 207
     1    DFM1 = CVAL(<DEFROST-FRAC-FT>,WBT,DBT)                                VHPPWR 208
C              CAPACITY TEMP DEPENDENCE                                         VHPPWR 209
        QHM1   = CVAL(<HEAT-CAP-FT>,MAT,DBT)                                    -131   376
C              RATIO OF LOW RPM LIMIT TO HIGH RPM LIMIT                         VHPPWR 211
        RPM(2) = (<HEAT-RPM-LIMIT2>/<HEAT-RPM-LIMIT1>)                          VHPPWR 212
        QWH = 0.                                                                VHPPWR 213
        CUR(12) = CVAL(<HEAT-WH-FT>,MAT,DBT)                                    DWRECV 131
C              CALCULATE CAPACITIES AT RPM HIGH LIMIT (II=1)                    VHPPWR 216
C              AND AT RPM LOW LIMIT (II=2)                                      VHPPWR 217
        DO II=1,2                                                               VHPPWR 218
          CUR(22) = CVAL(<HEAT-CAP-FRPM>,RPM(II),DBT)                           VHPPWR 219
          GCAP(II) = QHM1*CUR(22)*SIZE                                          VHPPWR 220
          DCAP(II)  = QHM1*CUR(22)*SHSIZE                                       VHPPWR 221
          GCAP(II) = GCAP(II)*(1.0-DFM1)                                        VHPPWR 222
c              If desuperheater supplying DHW, and there is DHW demand,         HVAC13 110
C              reduce capacity available for space heating                      HVAC13 111
          IF (<HTREC-DW-HEATER> .GT. 0)  THEN                                   HVAC14  96
            WHM2 = CVAL(<HEAT-WH-FRPM>,RPM(II),EDB)                             HVAC13 113
            QWH  = CUR(12)*WHM2*<HEAT-WASTE-HEAT>*GCAP(II)                      HVAC13 114
            JDW  = <HTREC-DW-HEATER>                                            HVAC14  97
            QWH  = AMIN1(QWH, -<dw;Qask>)                                       HVAC16 495
          ENDIF                                                                 HVAC13 117
          GCAP(II) = GCAP(II) - QWH                                             VHPPWR 230
        ENDDO                                                                   VHPPWR 231
C              DEFROST LOAD IF NO CYCLING                                       VHPPWR 232
        QHGDFRZ = DCAP(1)*DFM1                                                  VHPPWR 233
C              ADD IT TO HEAT LOAD TO GET TOTAL HEAT LOAD                       VHPPWR 234
        HLOAD = QHGDFRZ + LOAD                                                  VHPPWR 235
C              HEATING CAPACITY                                                 VHPPWR 236
        QHT  = -GCAP(1)                                                         VHPPWR 237
C              HEATING PART LOAD RATIO                                          VHPPWR 238
        PLRH = HLOAD/(GCAP(1)+1.)                                               VHPPWR 239
        DFM2    = PLRH                                                          VHPPWR 240
C              CALCULATE THE RPM REQ'D TO MEET THIS LOAD                        VHPPWR 241
C              IF LOAD LESS THAN LOW LIMIT SET RPM TO MIN                       VHPPWR 242
        IF(HLOAD .LE. GCAP(2))  THEN                                            VHPPWR 243
          DFM2    = LOAD/(GCAP(2)+1.0)                                          VHPPWR 244
          QHGDFRZ = QHGDFRZ*DFM2                                                VHPPWR 245
          HLOAD   = LOAD + QHGDFRZ                                              VHPPWR 246
          PLRH    = HLOAD/(GCAP(1)+1.0)                                         VHPPWR 247
          GRPM    = RPM(2)                                                      VHPPWR 248
C              IF LOAD GREATER THAN HIGH LIMIT SET RPM TO MAX                   VHPPWR 249
        ELSEIF(HLOAD .GE. GCAP(1))  THEN                                        VHPPWR 250
          GRPM = RPM(1)                                                         VHPPWR 251
C              OTHERWISE GET RPM FOR THIS PLRC BY INVERTING THE                 VHPPWR 252
C              CAPACITY AS A FUNCTION OF RPM CURVE                              VHPPWR 253
        ELSE                                                                    VHPPWR 254
          Jcv = <HEAT-CAP-FRPM>                                                 -045b  232
          Y   = DBT                                                             -045b  233
          Z   = PLRH                                                            -045b  234
          CALL CURINV(<cv:COEF-1>,<cv:TYPE>, 1,GRPM,Y,Z, RPM(1),IERR)           -045b  235
          GRPM = AMIN1(AMAX1(GRPM,RPM(2)),RPM(1))                               VHPPWR 259
        ENDIF                                                                   VHPPWR 260
C              EIR TEMP DEPENDENCE.  IT IS THE WEIGHTED AVERAGE OF THE          VHPPWR 261
C              TEMP DEPENDENCE AT HIGH SPEED AND AT LOW SPEED.                  VHPPWR 262
        RPMFRC = (GRPM-RPM(2))/(RPM(1)-RPM(2))                                  VHPPWR 263
        EIRMHS = CVAL(<HEAT-EIR-FT>,MAT,DBT)                                    -131   377
        EIRMLS = CVAL(<HEAT-EIR-LS-FT>,MAT,DBT)                                 -131   378
        EIRM1 = RPMFRC*EIRMHS + (1.-RPMFRC)*EIRMLS                              VHPPWR 266
C              EIR RPM DEPENDENCE                                               VHPPWR 267
        CUR(10) = CVAL(<HEAT-EIR-FRPM>,GRPM,DBT)                                VHPPWR 268
        EIRM2  = CUR(10)                                                        VHPPWR 269
C              EIR                                                              VHPPWR 270
        EIR    = EIRM1*EIRM2*<HEATING-EIR>                                      VHPPWR 271
C                Calc Defrost mode elec consumption and add to heating elec     VHPPWR 272
        DFM3   = EIRM1*EIRM2*<COOLING-EIR>                                      VHPPWR 273
        QHDFRG = DFM3*DCAP(1)*DFM2*DFM1                                         VHPPWR 274
C                ELEC CONSUMPTION IN BTU/HR                                     VHPPWR 275
        QHGASZ = EIR*(-QHT) + QHDFRG                                            VHPPWR 276
C                IF LOAD IS LESS THAN CAPACITY AT LOW RPM, THEN THE UNIT CYCLES VHPPWR 277
        IF (HLOAD .LT. GCAP(2))  THEN                                           VHPPWR 278
          CLPLR = HLOAD/(GCAP(2)+1.)                                            VHPPWR 279
          IF (CLPLR .lt. 1.) THEN  ! cycling                                    -048u   42
            VAL     = Max(CLPLR,<HEAT-CLOSS-MIN>)                               -048u   43
            CUR(16) = CVAL(<HEAT-CLOSS-FPLR>,VAL,VAL)                           -048u   44
            PCTON   = CLPLR / Max(CUR(16),0.001)                                -048u   45
          ELSE  ! not cycling                                                   -048u   46
            CUR(16) = 1.                                                        -048u   47
            PCTON   = 1.                                                        -048u   48
          ENDIF                                                                 -048u   49
          QHGASZ= QHGASZ *PCTON                                                 VHPPWR 283
        ENDIF                                                                   VHPPWR 284
        QHRUNZ = PCTON                                                          VHPPWR 285
C              ADJUST FOR FRAC HOUR HEATING                                     VHPPWR 286
        QHRUNZ = QHRUNZ*NOWFRC                                                  VHPPWR 287
        QHGASZ = QHGASZ*NOWFRC                                                  VHPPWR 288
        QHDFRG = QHDFRG*NOWFRC                                                  VHPPWR 289
C                IF LOAD GREATER THAN CAPACITY AT HIGH RPM, LOAD NOT MET.       VHPPWR 290
        IF (HLOAD .GT. GCAP(1))  THEN                                           VHPPWR 291
C                SUPPLEMENTAL LOAD                                              VHPPWR 292
          QHGSLDZ =  QHGSLDZ + (HLOAD -GCAP(1))                                 VHPPWR 293
C                LOAD MET BY HEAT PUMP                                          VHPPWR 294
C         HLOAD = GCAP(1)                                                       VHPPWR 295
        ENDIF                                                                   VHPPWR 296
c              If desuperheat available for dhw, calc amount                    DWRECV 132
        IF (<HTREC-DW-HEATER> .GT. 0)  THEN                                     DWRECV 133
          CUR(13) = CVAL(<HEAT-WH-FRPM>,GRPM,DBT)                               DWRECV 134
          QHWASZ = -CUR(12)*CUR(13)*<HEAT-WASTE-HEAT>*HLOAD                     DWRECV 135
c              actual amount recovered can't be determined until dw-heater      DWRECV 136
c              is simulated - estimate now for hourly reports                   DWRECV 137
          QHWASUZ = AMAX1(QHWASZ, (<dw;Qask>-<dw;Q_RECVR>)/smult)               DWRECV 138
c              sum total available for heater                                   DWRECV 139
          <dw;Q_RECVR> = <dw;Q_RECVR> + QHWASZ*smult                            DWRECV 140
        END IF                                                                  DWRECV 141
C                                                                               VHPPWR 302
C                COLLECT SUMMARY DATA                                           VHPPWR 303
C                KW USED BY OUTSIDE FAN                                         VHPPWR 304
        OFKW   = 0.0                                                            VHPPWR 305
        IF(DBT .ge. <OUTSIDE-FAN-T>)  THEN                                      VHPPWR 306
          OFKW   = <OUTSIDE-FAN-ELEC>*CSIZE*0.001                               VHPPWR 307
          IF(<OUTSIDE-FAN-HFLT>.ne.0) THEN                                      VHPPWR 308
            CUR(15)= CVAL(<OUTSIDE-FAN-HFLT>,PLRH,DBT)                          VHPPWR 309
            OFKW   = OFKW*CUR(15)                                               VHPPWR 310
          ENDIF                                                                 VHPPWR 311
C              IF OUTSIDE-FAN-MODE=INTERMITTANT, IT WILL CYCLE                  VHPPWR 312
C              IF THE COMPRESSOR DOES                                           VHPPWR 313
          IF(<OUTSIDE-FAN-MODE>.eq.1)                                           VHPPWR 314
     $      OFKW   = OFKW*Min(1.,PCTON)                                         -048u   50
          OFKW = OFKW*NOWFRC                                                    VHPPWR 316
C              INCREMENT THE END USE VARIABLE HTRJKW, THE KW USED TO            VHPPWR 317
C              REJECT HEAT                                                      VHPPWR 318
          JEM        = <HTREJ-E-MS>                                             HVAC6  916
          <HTREJ-EM> = <HTREJ-EM> + OFKW                                        HVAC6  917
        ENDIF                                                                   VHPPWR 320
        QHAUXZ = OFKW*BTUKW                                                     VHPPWR 321
        SKWQH  = SKWQH + OFKW + QHGASZ*KWBTU                                    VHPPWR 322
        <SKW>  = <SKW> + OFKW + QHGASZ*KWBTU                                    VHPPWR 323
        JEM       = <HEAT-E-MS>                                                 HVAC6  918
        <HEAT-EM> = <HEAT-EM> + QHGASZ*KWBTU                                    HVAC6  919
        QHLOADZ= -AMIN1(HLOAD,GCAP(1))                                          VHPPWR 325
        QHGSLDZ= -QHGSLDZ                                                       VHPPWR 326
        QHGDFRZ= -QHGDFRZ                                                       VHPPWR 327
        GRPM  =  GRPM*<HEAT-RPM-LIMIT1>                                         VHPPWR 328
        IF( ISSPF .EQ. 1)  THEN                                                 VHPPWR 329
          PLRHS  = PLRH                                                         VHPPWR 330
          QHCMPS = HLOAD*NOWFRC                                                 VHPPWR 331
        ENDIF                                                                   VHPPWR 332
        QHGSLDZ = QHGSLDZ + QHZHP                                               VHPPWR 333
        IF(QHGSLDZ .GT. -1.0)  GOTO 400                                         VHPPWR 334
C                 DO SUP HEATING                                                VHPPWR 335
 350    IF((DBT.LE.<MAX-HSUPP-T>).AND.(<SUPP-HEAT-CAP>.NE.0.)) THEN             VHPPWR 336
           QHGSUPZ = -QHGSLDZ                                                   VHPPWR 337
           <SKW>  = <SKW> - QHGSLDZ*KWBTU                                       VHPPWR 338
           SKWQH  = SKWQH - QHGSLDZ*KWBTU                                       VHPPWR 339
      JEM       = <SUPP-E-MS>                                                   HVAC6  920
      <SUPP-EM> = <SUPP-EM> - QHGSLDZ*KWBTU                                     HVAC6  921
        ENDIF                                                                   VHPPWR 341
 400    CONTINUE                                                                VHPPWR 342
        IF( ICODE .eq. 22)  THEN                                                VHPPWR 343
          DO II=11,20                                                           VHPPWR 344
            IF(SHPZ(II) .ne. 0.0)  SHP(II) = SHP(II) + SHPZ(II)*SMULT           VHPPWR 345
          ENDDO                                                                 VHPPWR 346
        ELSE                                                                    VHPPWR 347
          DO II=11,20                                                           VHPPWR 348
            SHP(II) = SHPZ(II)                                                  VHPPWR 349
          ENDDO                                                                 VHPPWR 350
        ENDIF                                                                   VHPPWR 351
        QHCKWS = QHGAS*KWBTU                                                    VHPPWR 352
      ENDIF                                                                     VHPPWR 353
      RETURN                                                                    VHPPWR 354
      END                                                                       VHPPWR 355
      SUBROUTINE VNTDES                                                         VNTDES   2
C                                                                               VNTDES   3
C              CALCULATE THE WIND AND STACK COEFFICIENTS FOR                    VNTDES   4
C              NATURAL VENTILATION USING THE SHERMAN-GRIMSRUD METHOD            VNTDES   5
C                                                                               VNTDES   6
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                 IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                        /FILES/  3
     2               , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                   /FILES/  4
     3                 IHRREP(3), IHRPAS(2)                                     /FILES/  5
      COMMON  /LOCALD/ STALAT, STALON, ITIMZ, BAZIM, BALTIT,                    /LOCALD/ 2
     1                 SSTALA, CSTALA, TSTALA, SBAZIM, CBAZIM                   /LOCALD/ 3
     +                ,BXORG,BYORG,SHCOEF,TP1,TP2,WSTP1,WSTP2,                  /LOCALD/ 4
     +                 WSHGT,WSHGTL(12),ISREFL,IHOLX                            HOLID1   2
      DIMENSION        LOCALD(32)                                               HOLID1   3
      EQUIVALENCE      (LOCALD(1),STALAT)                                       /LOCALD/ 7
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
C                                                                               VNTDES  11
      ZP1 = ISZ                                                                 VNTDES  12
      DO 1000 NZ=1,NSZ                                                          VNTDES  13
      ZP2 = <ZP2>                                                               VNTDES  14
      BLDHT = <VOLUME>/<AREA> + <Z-ZONE>                                        VNTDES  15
      BLDHT = AMAX1(0.,<VOLUME>/<AREA> + <Z-ZONE>)                              -023     3
      WINDC = 88.*1.153*SHCOEF*(1.-<HOR-VENT-FRAC>)**.33333*                    VNTDES  16
     1       (TP1*(BLDHT/32.8)**TP2)/(WSTP1*(WSHGT/32.8)**WSTP2)                VNTDES  17
      BLDHT = BLDHT - <Z-ZONE>                                                  VNTDES  18
      STACKC = 60.*(1.+0.5*<HOR-VENT-FRAC>)*.33333 *                            VNTDES  19
     1        (SQRT(8.*<ZNEUTRAL-LEVEL>)*SQRT(1.-<ZNEUTRAL-LEVEL>)/             VNTDES  20
     2        (SQRT(<ZNEUTRAL-LEVEL>)+SQRT(1.-<ZNEUTRAL-LEVEL>))) *             VNTDES  21
     3        SQRT(32.*BLDHT/531.)                                              VNTDES  22
C ****************** DEBUG PRINT *******************************                VNTDES  23
      NMZP2 = ZP2 + 7                                                           -42c   142
      WRITE (IOUTPT,9000) (IA(N99),N99=ZP2,NMZP2)                               -42c   143
      WRITE (IOUTPT,9001) <AREA>, <VOLUME>, <Z-ZONE>,                           VNTDES  26
     1 <HOR-VENT-FRAC>, <ZNEUTRAL-LEVEL>                                        VNTDES  27
      <VENT-AREA> = <FRAC-VENT-AREA>*<AREA>                                     VNTDES  28
      <WS-VENT-COEF> = WINDC                                                    VNTDES  29
      <STACK-VENT-COEF> = STACKC                                                VNTDES  30
C *************************** DEBUG PRINT **************************            VNTDES  31
      WRITE (IOUTPT,9002) <FRAC-VENT-AREA>, <VENT-AREA>,                        VNTDES  32
     1 <WS-VENT-COEF>, <STACK-VENT-COEF>                                        VNTDES  33
      ZP1 = ZP1 + NZD                                                           VNTDES  34
 1000 CONTINUE                                                                  VNTDES  35
C ***************************** DEBUG FORMATS **********************            VNTDES  36
 9000 FORMAT (//5X,'FOR ZONE ', 8A4 / )                                         -42c   144
 9001 FORMAT(5X,'AREA            =',E13.4,'VOLUME           =',E13.4,           VNTDES  38
     1          'Z-ZONE          =',E13.4,'HOR-VENT-FRAC    =',E13.4/           VNTDES  39
     2       5X,'ZNEUTRAL-LEVEL  =',E13.4)                                      VNTDES  40
 9002 FORMAT(5X,'FRAC-VENT-AREA  =',E13.4,'VENT-AREA        =',E13.4,           VNTDES  41
     1          'WS-VENT-COEF    =',E13.4,'STACK-VENT-COEF  =',E13.4)           VNTDES  42
      RETURN                                                                    VNTDES  43
      END                                                                       VNTDES  44
      FUNCTION WBFS(T,W,PB)                                                     WBFS     2
C                                                                               WBFS     3
C              FINDS WET BULB TEMPERATURE WHEN ENTHALPY                         WBFS     4
C              IS POSITIVE AND TEMP,HUMRAT, AND PRESSURE ARE KNOWN              WBFS     5
      COMMON  /PPWVMS/ PPWVMS(200)                                              /PPWVMS/ 2
      H(DB,W) = 0.24*DB + (1061.0+0.444*DB)*W                                   H        2
      H1     = H(T,W)                                                           WBFS     8
      IF((H1 .GE. 1.0).AND.(PB.GE.28.5).AND.(PB.LE.31.5))  THEN                 WBFS     9
C              if pressure is within +- 5 percent of standard PTAM              WBFS    10
C              and the enthalpy is positive use a log fit                       WBFS    11
        Y      = ALOG(H1)                                                       WBFS    12
        IF (H1.LE.11.758) THEN                                                  WBFS    13
          WBFS = 0.6041+Y*(3.4841+Y*(1.3601+Y*0.97307))                         WBFS    14
        ELSE                                                                    WBFS    15
          WBFS = 30.9185+Y*(-39.68200+Y*(20.5841-1.758*Y))                      WBFS    16
        ENDIF                                                                   WBFS    17
      ELSE                                                                      WBFS    18
C              otherwise find WBT by stepping down from dry buld until          WBFS    19
C              we find the temp that has the same saturation enthalpy           WBFS    20
        IF(T .LE. 149.)  THEN                                                   WBFS    21
          IE  = INT( AMAX1( -50.0,AMIN1(149.0,T) )+0.0001 )                     WBFS    22
          H2  = H(FLOAT(IE),0.622*PPWVMS(IE+51)/(PB-PPWVMS(IE+51)))             WBFS    23
          IE2 = IE + 50                                                         WBFS    24
          DO I=1,IE2                                                            WBFS    25
            H3=H(FLOAT(IE-I),0.622*PPWVMS(IE-I+51)/(PB-PPWVMS(IE-I+51)))        WBFS    26
            IF(H3 .LE. H1)  THEN                                                WBFS    27
C              found bracketing temps - now interpolate between them            WBFS    28
              WBFS = FLOAT(IE-I) + (H1-H3)/(H2-H3)                              WBFS    29
              RETURN                                                            WBFS    30
            ENDIF                                                               WBFS    31
            H2     = H3                                                         WBFS    32
          ENDDO                                                                 WBFS    33
        ENDIF                                                                   WBFS    34
        WBFS   = T                                                              WBFS    35
      ENDIF                                                                     WBFS    36
      RETURN                                                                    WBFS    37
      END                                                                       WBFS    38
      FUNCTION WFDBWB(DB,WB,PRESS)                                              WFDBWB   2
C                                                                               WFDBWB   3
C              CALCULATE THE HUMIDITY RATIO (LBS WATER/LBS DRY AIR)             WFDBWB   4
C              GIVEN THE DRY BULB (DEG F). WET BULB (DEG F), AND                WFDBWB   5
C              PRESSURE (INCHES OF HG).  SEE ASHRAE FUNDAMENTALS,               WFDBWB   6
C              PAGES 6.12 AND 6.13                                              WFDBWB   7
C                                                                               WFDBWB   8
C              GET THE VAPOR PRESSURE AT THE WET BULB TEMPERATURE               WFDBWB   9
C                                                                               WFDBWB  10
      PWSSTR = PVSAT(WB)                                                        WFDBWB  11
C                                                                               WFDBWB  12
C              CALC THE HUMIDITY RATIO AT SATURATION AT THE WET BULB TEMP       WFDBWB  13
C                                                                               WFDBWB  14
      WSSTAR = .62198*PWSSTR/(PRESS-PWSSTR)                                     WFDBWB  15
      WFDBWB = ((1093.-.556*WB)*WSSTAR - .24*(DB-WB))/(1093.+.444*DB-WB)        WFDBWB  16
      RETURN                                                                    WFDBWB  17
      END                                                                       WFDBWB  18
      FUNCTION WFUNC(TEMP,RH,PRESS)                                             WFUNC    2
C                                                                               WFUNC    3
C                            THIS FUNCTION CALCULATES THE HUMIDITY              WFUNC    4
C                            RATIO (LBS WTR/LB AIR) AS A FUNCTION               WFUNC    5
C                            OF THE DRYBULB TEMPERATURE (TEMP) AND              WFUNC    6
C                            THE RELATIVE HUMIDITY (RH IN PERCENT)              WFUNC    7
C                                                                               WFUNC    8
C               PPWVMS CONTAINS THE PARTIAL PRESSURE OF WATER VAPOR             WFUNC    9
C               FOR SATURATED AIR IN THE TEMPERATURE RANGE FROM                 WFUNC   10
C               -50 TO 149  DEGREES F DRYBULB                                   WFUNC   11
      COMMON  /PPWVMS/ PPWVMS(200)                                              /PPWVMS/ 2
C              GET LOWER ARRAY INDEX                                            WFUNC   13
      TTEMP  = AMAX1(-50.0,AMIN1(148.0,TEMP))                                   WFUNC   14
      IT     = INT(TTEMP)                                                       WFUNC   15
C              GET DISTANCE TO ACTUAL POINT                                     WFUNC   16
      DT     = TTEMP - FLOAT(IT)                                                WFUNC   17
C              CALC VAPOR PRESSURE AT SATURATION                                WFUNC   18
      PPW    = PPWVMS(IT+51) + DT*(PPWVMS(IT+52)-PPWVMS(IT+51))                 WFUNC   19
C              CALC HUMIDITY RATIO                                              WFUNC   20
      WFUNC  = 0.622*(0.01*RH*PPW)/(PRESS-(0.01*RH*PPW))                        WFUNC   21
      RETURN                                                                    WFUNC   22
      END                                                                       WFUNC   23
      SUBROUTINE ZERO(N)                                                        ZERO     2
C                                                                               ZERO     3
C                            ZERO SYSTEM AND ZONE DATA (INITIALIZE)             ZERO     4
C                            N = 1  MONTHLY INITIALIZATION                      ZERO     5
C                            N = 2  RUN-PERIOD INITIALIZATION                   ZERO     6
C                            N = 3  RUN INITIALIZATION                          ZERO     7
C                            N = 4  INITIALIZE 1ST RUN-PER AFTER DES DAYS       ZERO     8
C                                                                               ZERO     9
C              DEVELOPED BY                                                     -130     1
C                            J. J. Hirsch & S. D. Gates                         -130     2
C                            James J. Hirsch & Associates                       -130     3
C                            Camarillo, California                              -130     4
C              BASED UPON CODE DEVELOPED BY J. J. Hirsch and                    -130     5
C                            W. F. Buhl                                         -130     6
C                            A. E. Erdem                                        -130     7
C                            Lawrence Berkeley National Laboratory              -130     8
C                            University of California                           -130     9
Copyright (c) 1997 by James J. Hirsch. All Rights Reserved. Unpublished         -130    10
c rights reserved under the Copyright Laws of the United States.                -130    11
c RESTRICTED RIGHTS NOTICE: Government use, reproduction or disclosure          -130    12
c is subject to restrictions as set forth in Rights in Data (g)(3) in           -130    13
c UC/LBL purchase order 4607010 with J.J. Hirsch & Associates.                  -130    14
C                                                                               ZERO    11
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON  /BUFERS/  MRLEN1, MRLEN2, IBLDSB,IELDSB,LLDSB,N3,IBRPB1,          HVACi    1
     1                  IERPB1,LRPB1,IBRPB2,IERPB2,LRPB2                        HVACi    2
      COMMON  /HRREP / Irb, Ihrp, Lrb, Lhrp, Nrb, Nhrp, IVTLIM(3,50),           HR       5
     &                 IGRPtr, IBRPtr, IRSch, IRSchT(5),                        HR       6
     &                 NHRTyp(3), ITBUF(3), ITBUFB(3), ITBUFE(3),               HR       7
     &                 IHREOF, ICDFLG                                           HR       8
      COMMON  /MISCD / TEMPS(4,9999),CONS(5),TEMPSL(9999),                      -048a   10
     1                 BLDGQH,BLDGQC,BLDGQL,BLDGP,BPMULT,                       /MISCD/  3
     $                 DBTMIN,DBTMAX,WMIN,WMAX,NSPZ(9999),                      -048a   11
     3                 DQ, DTP, DTR, DTS, FPI, PLRCC , POM, TC2, TDM,           /MISCD/  5
     4                 TRA,WCOL,WCOLM,WMM,YPI,KWBTU,BTUKW,UNFILD,Unusedm        RemPA   45
      REAL             KWBTU                                                    /MISCD/  7
      COMMON  /PTRPLT/ Ipm,Ilp,Ich,Ibl,Idw,Itw,Ipv,Ign,Itk,Ihx,                 PV       1
     &                 Iec,Ilm,Iem,Ifm,Ism,Icm,Imm,Imc,Igl,Isp2,                XFC2     1
     &                 Ispare(5),  Ipe,                                         HVAC19   3
     &                 Npm,Nlp,Nch,Nbl,Ndw,Ntw,Npv,Ngn,Ntk,Nhx,                 PV       2
     &                 Nec,Nlm,Nem,Nfm,Nsm,Ncm,Nmm,Nmc,Ngl,Nsp2,                XFC2     2
     &                 Nspare(5),  Npe,                                         HVAC19   6
     &                 Lpm,Llp,Lch,Lbl,Ldw,Ltw,Lpv,Lgn,Ltk,Lhx,                 PV       3
     &                 Lec,Llm,Lem,Lfm,Lsm,Lcm,Lmm,Lmc,Lgl,Lsp2,                XFC2     3
     &                 Lspare(5),  Lpe,                                         HVAC19   9
     &                 Jpm,Jlp,Jch,Jbl,Jdw,Jtw,Jpv,Jgn,Jtk,Jhx,                 PV       4
     &                 Jec,Jlm,Jem,Jfm,Jsm,Jcm,    Jmc,Jgl,                     HVAC19  11
     &                 Jpe, kpr, NumMeters, NumIntHX                            XFC1     1
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      COMMON  /REPORT/ IREPRT(4,37),IPRG,IUNIQV(100),IUNIQS(100),IUNIQL         HVAC14   4
      COMMON /RSVVTD/ CONFRC,HONFRC,NOWFRC,THMXNS                               /RSVVTD/ 2
      REAL NOWFRC                                                               /RSVVTD/ 3
      COMMON  /TROMWL/ SUMDTX,SUMDTY,QCTOT,QLC0,QGK0,QCGUES,QVNTBG,             /TROMWL/ 2
     1                 VOLVNT,AMF,UCHAN,UCHANC,HRGW,TAIRIN,TZONE,               /TROMWL/ 3
     2                 TGOUT,QCVG,QCVW,IVMODE,TFO,RHO,MWH,FILMU,MRX,CTRM        /TROMWL/ 4
     1    , TAVR, TGLASS, TUNDER, UNIN1                                         /TROMWL/ 5
      INTEGER  SN                                                               ZERO    20
      COMMON  /SSRESY/  IVENTF, XRAN                                            /SSRESY/ 2
     1  , CFMCV1, CFMCV2, DEL   , DQGVC1, DQGVNT, DTMIN , FANHTM, FLWMUL        /SSRESY/ 3
     2  , IAFTYP, ISSV  , IVDONE, IZP1RM, IZP1SS, MINH  , MOUH  , MRRFSV        /SSRESY/ 4
     3  , MRRVSF, MRY   , MRZ   , MSRFSV, MSRVSF, NADJ  , NCWCON, NDELT         /SSRESY/ 5
     4  , Q10   , QGVEC1, QGVEC2, QGVNT , QGWAL , QHBZNX, QIN   , QINXS         /SSRESY/ 6
     5  , QLWAL , QOUT  , QOUTXS, QPNX  , QSUNIN, QW    , SSVFP , T1T           /SSRESY/ 7
     6  , T1TB  , T2MAX , T2T   , T2TB  , T2TFV , TINNEW, TNEXT , TOTNEW        /SSRESY/ 8
     7  , UOT   , UVRMG , UVT   , VNTRM , ZDELMN, ZDELMX, ZMNEXT                /SSRESY/ 9
     1  , ECPLR(3), ERMXEC(4), TCMNEC(3), QCV, TVZ, NVCFMS, TNVCFMS             -045d    1
C              SET BASE POINTER TO POINT TO FIRST SYSTEM                        ZERO    22
      JJ     = 1                                                                ZERO    23
C              SET NUMBER TO BE ZEROED FOR SYSTEMS                              ZERO    24
      IE0 = <+=IE0>                                                             IcRink  82
      IE1 = <+=IE1>                                                             IcRink  83
      IE2 = <+=IE2>                                                             IcRink  84
      IE = IE1                                                                  ZERO    28
      IF (N.EQ.3 .OR. N.EQ.4) IE=IE2                                            ZERO    29
C              SET NUMBER TO BE ZEROED FOR ZONES                                ZERO    30
      IEZ0 = <+=IEZ0>                                                           IcRink  85
      IEZ1 = <+=IEZ1>                                                           IcRink  86
      IEZ2 = <+=IEZ2>                                                           IcRink  87
      IEZ = IEZ1                                                                ZERO    34
      IF (N.EQ.3 .OR. N.EQ.4) IEZ=IEZ2                                          ZERO    35
c              set num to be zeroed for central plant reports                   RemPA  665
      IEP0 = <+=IEP0>                                                           IcRink  88
      IEP1 = <+=IEP1>                                                           IcRink  89
      IEP2 = <+=IEP2>                                                           IcRink  90
      IEP = IEP1                                                                RemPA  669
      IF (N.EQ.3 .OR. N.EQ.4) IEP=IEP2                                          RemPA  670
c                                                                               RemPA  671
c              initialize central plant reports                                 RemPA  672
      DO  I=IEP0,IEP                                                            RemPA  673
        AA(KPR+I) = 0.0                                                         RemPA  674
      ENDDO                                                                     RemPA  675
      IF (N .GT. 2)  THEN                                                       RemPA  676
        <NHRSOVERP> = 0                                                         RemPA  677
        <NHRSONP> = 0                                                           RemPA  678
        XRAN = 0.5                                                              RemPA  679
        IF (N.EQ.3) <PQCDAYSUMMAXDD> = 0.                                       RemPA  680
      ENDIF                                                                     RemPA  681
C                                                                               ZERO    61
C              LOOP THROUGH THE SYSTEMS                                         ZERO    62
C                                                                               ZERO    63
      DO 310  NS=1,NSYS                                                         RemPA  682
      NSP   = IS + (NS-1)*NSS                                                   RemPA  683
      MR2 = <SSJREPPTR>                                                         ZERO    66
      MR1 = <EVAPREPPTR>                                                        ZERO    67
      IF (N .LT. 3)  GO TO 149                                                  ZERO    68
      IF (IREPRT(2,25) .NE. 0) <QCDAYSUMMAX> = 0.                               IREPRT 226
      IF (IREPRT(2,29) .EQ. 0)  GO TO 149                                       IREPRT 227
      DO 148 II=1,275                                                           -048f    2
      <IRHA> = 0                                                                ZERO    72
  148 CONTINUE                                                                  ZERO    73
      <HT_COIL_EDB>  = 70.                                                      HVAC1  839
      <PHT_COIL_EDB> = 45.                                                      HVAC1  840
      <CL_COIL_EDB>  = 80.                                                      HVAC1  841
      <CL_COIL_EWB>  = 67.                                                      HVAC1  842
      <CL_COIL_LWB>  = 54.                                                      HVAC1  843
      <WSE_COIL_EDB> = 80.                                                      HVAC1  844
      <WSE_COIL_EWB> = 65.                                                      HVAC1  845
      <WSE_COIL_LWB> = 54.                                                      HVAC1  846
  149 CONTINUE                                                                  ZERO    74
C              LOOP THRUGH THE ITEMS TO BE ZERO                                 ZERO    75
              DO  200  I = IE0 , IE                                             ZERO    76
      AA(NSP+I) = 0.0                                                           ZERO    77
  200 CONTINUE                                                                  ZERO    78
C               EVAP OR DESC REPORT VARIABLES                                   ZERO    79
      IF (MR1 .GT. 0) THEN                                                      ZERO    80
          NFVAR = MRLEN1/2 - 1                                                  ZERO    81
          DO 160 II=1,NFVAR                                                     ZERO    82
              <EVDSCMO> = 0.                                                    ZERO    83
              IF (N.EQ.3 .OR. N.EQ.4) <EVDSCYR> = 0.                            ZERO    84
  160     CONTINUE                                                              ZERO    85
          <EVDSCONMO> = 0                                                       ZERO    86
          IF (N.EQ.3 .OR. N.EQ.4) THEN                                          ZERO    87
              <EVDSCONYR> = 0                                                   ZERO    88
              <SWATEREVYR> = 0.                                                 ZERO    89
          END IF                                                                ZERO    90
      END IF                                                                    ZERO    91
C               SS-J REPORT VARIABLES                                           ZERO    92
      IF (MR2.GT.0 .AND. N.GE.3) THEN                                           ZERO    93
          <QRESYRM> = 0.                                                        ZERO    94
          <IQCMODAY> = 0                                                        ZERO    95
          <IQHMODAY> = 0                                                        ZERO    96
          <QCDAYSUMMAX> = 0.                                                    ZERO    97
          <MDCPKDAY> = 0                                                        ZERO    98
          <SPOHM> = 0.                                                          ZERO    99
          <SPOCM> = 0.                                                          ZERO   100
          DO 165 IH=1,24                                                        ZERO   101
              <QCPROF> = 0.                                                     ZERO   102
              <SHRPROF> = 0.                                                    ZERO   103
              <QHPROF> = 0.                                                     ZERO   104
              <ITPROF> = 0                                                      ZERO   105
              <QCPROFM> = 0.                                                    ZERO   106
              <SHRPROFM> = 0.                                                   ZERO   107
              <QHPROFM> = 0.                                                    ZERO   108
              <ITCPROF> = 0                                                     ZERO   109
              <ITHPROF> = 0                                                     ZERO   110
              <QCPKDAY> = 0.                                                    ZERO   111
              <SHRPKDAY> = 0.                                                   ZERO   112
              <ITCPKDAY> = 0                                                    ZERO   113
              <COOLUNMETFLAG> = 0                                               ZERO   114
              <COOLUNMETFLAGM> =0                                               ZERO   115
  165    CONTINUE                                                               ZERO   116
      END IF                                                                    ZERO   117
C              LOOP THROUGH THE ZONES ON THIS SYSTEM                            ZERO   118
      ISZ    = <ISZONES>                                                        ZERO   119
      NSZ    = <NZONES>                                                         ZERO   120
      DO 250 NZ=1,NSZ                                                           ZERO   121
C              GET ZP1,ZP2 BASE PTRS                                            ZERO   122
      ZP1    = ISZ + (NZ-1)*NZD                                                 ZERO   123
      ZP2    = <ZP2>                                                            ZERO   124
      IF(N .LT. 2)  GO TO 230                                                   ZERO   125
      IF (IREPRT(2,30).EQ.0.OR.N.LT.3) GOTO 201                                 IREPRT 228
      DO 147 II=1,200                                                           ZERO   127
      <ITPA> = 0                                                                ZERO   128
  147 CONTINUE                                                                  ZERO   129
  201 CONTINUE                                                                  ZERO   130
C              INITIALIZE TROMBE WALL STUFF                                     ZERO   131
      MTW    = <ITWBUFP>                                                        ZERO   132
      IF (MTW .LE. 0)  GO TO 210                                                ZERO   133
      <QGK1> = 0.                                                               ZERO   134
      <QGK2> = 0.                                                               ZERO   135
      <QLK1> = 0.                                                               ZERO   136
      <QLK2> = 0.                                                               ZERO   137
      <QLC1> = 0.                                                               ZERO   138
      <QLC2> = 0.                                                               ZERO   139
      <QCOND> = 0.                                                              ZERO   140
      <QXOLD> = 0.                                                              ZERO   141
      <TGLASSIN> = <TLOADS>                                                     ZERO   142
      MWH = MTW + 35                                                            ZERO   143
      NRESF  = <NRESFAC>                                                        ZERO   144
      DO 205 J=1,NRESF                                                          ZERO   145
      AA(J+MWH) = <TLOADS>                                                      ZERO   146
  205 CONTINUE                                                                  ZERO   147
  210 CONTINUE                                                                  ZERO   148
C            INITIALIZE SUNSPACE COMMON WALLS DEFINED IN THIS ZONE              ZERO   149
      IF (<NCOMWAL>.EQ.0) GO TO 590                                             ZERO   150
      NIW1 = <NATTCH>                                                           ZERO   151
      DO 580 IW1 = 1,NIW1                                                       ZERO   152
C            POINTER TO ATTACHMENT DATA FOR THIS ZONE                           ZERO   153
      I1 = <IATTCH> + (IW1-1)*3                                                 ZERO   154
      MTW = IA(I1+2)                                                            ZERO   155
      IF (MTW.EQ.0) GO TO 580                                                   ZERO   156
C           SKIP IF COMMON WALL WAS NOT DEFINED IN THIS ZONE                    ZERO   157
      IF (<NZSPACE>.NE.<INSPACE>) GO TO 580                                     ZERO   158
C           INITIALIZE CONDUCTIVE HEAT FLUXES                                   ZERO   159
      <QP-SSUR-RF-SV> = 0.                                                      ZERO   160
      <QP-RSUR-RF-SV> = 0.                                                      ZERO   161
      <QP-SSUR-RV-SF> = 0.                                                      ZERO   162
      <QP-RSUR-RV-SF> = 0.                                                      ZERO   163
      IF (<NRESFAC>.EQ.0) GO TO 580                                             ZERO   164
      N1 = 4*<NRESFAC>                                                          ZERO   165
C           INITIALIZE SURFACE TEMPERATURE HISTORY                              ZERO   166
C*** LATER INITIALIZE TO ROOM, SSP AIR TEMPS                                    ZERO   167
      DO 570 I1 = 1,N1                                                          ZERO   168
      AA(MTW+35+I1) = <TLOADS>                                                  ZERO   169
  570 CONTINUE                                                                  ZERO   170
  580 CONTINUE                                                                  ZERO   171
  590 CONTINUE                                                                  ZERO   172
C              ZERO PREVIOUS-HOUR CONDUCTIVE AND CONVECTIVE LOADS               ZERO   173
C              (USED FOR SUNSPACES AND SPACES ADJACENT TO SUNSPACES)            ZERO   174
      <QLWAL1> = 0.                                                             ZERO   175
      <QLWAL2> = 0.                                                             ZERO   176
      <QLWAL3> = 0.                                                             ZERO   177
      <QGVEC1> = 0.                                                             ZERO   178
      <QGVEC2> = 0.                                                             ZERO   179
      <QGWAL1> = 0.                                                             ZERO   180
      <QGWAL2> = 0.                                                             ZERO   181
C              ZERO SOLAR FROM SUNSPACE (USED FOR SPACES ADJ TO A SUNSP)        ZERO   182
      <SGIW0> = 0.                                                              ZERO   183
      <SGIW1> = 0.                                                              ZERO   184
      <SGIW2> = 0.                                                              ZERO   185
      <SLIW0> = 0.                                                              ZERO   186
      <SLIW1> = 0.                                                              ZERO   187
      <SLIW2> = 0.                                                              ZERO   188
C              ZERO ERMINM, ERMAXM (USED BY SUNSPACE CALC)                      ZERO   189
      <ERMAXM> = 0.                                                             ZERO   190
      <ERMINM> = 0.                                                             ZERO   191
C              SET TEMP HISTORY TO LOADS CALC TEMP                              ZERO   192
      <TNEW> = <TLOADS>                                                         ZERO   193
      <TNOW>  = <TLOADS>                                                        ZERO   194
      <TPAST> = <TLOADS>                                                        ZERO   195
      <TPAST2> = <TLOADS>                                                       ZERO   196
      <TSET>  = <TLOADS>                                                        ZERO   197
      SN     = <NZSPACE>                                                        ZERO   198
      DO 220 I=1,4                                                              -42c   145
      DO 220 J=1,4                                                              ZERO   200
      TEMPS(J,SN) = <TLOADS>                                                    RemPA  684
  220 CONTINUE                                                                  ZERO   202
      <COIL_EDBZ> = 80.0                                                        HVAC1  847
      <COIL_EWBZ> = 67.0                                                        HVAC1  848
C              ZERO BASEBOARD HISTORY                                           ZERO   205
      <QBPAST> = 0.0                                                            ZERO   206
      <QBPAST2> = 0.0                                                           ZERO   207
C REFRIGERATED EQUIPMENT                                                        ZERO   208
      <PASTWOA> = .008                                                          ZERO   209
      <PASTTR> = 78.                                                            ZERO   210
C              PIU RELATED ITEMS                                                ZERO   213
      <ZFONF> = 1.                                                              ZERO   214
      <ZFNLHR> = 1.                                                             ZERO   215
      <FLAST> = 0.                                                              ZERO   216
      <GLAST0> = 0.                                                             ZERO   217
230               DO  240  I = IEZ0 , IEZ                                       ZERO   218
  240 AA(ZP1+I) = 0.0                                                           ZERO   219
      <MINTEMP> = 200.0                                                         ZERO   220
  250 CONTINUE                                                                  ZERO   223
      IF(N .LT. 2)  GOTO 310                                                    ZERO   224
C              PICK ARBITRARY NUMBER FOR MIX AIR TEMP HISTORY                   ZERO   225
      <WRMIN> = 1.0                                                             ZERO   227
      <PASTWR> = 0.008                                                          ZERO   229
      <DWLEFT> = 0.0                                                            ZERO   230
      <QCLEFT> = 0.0                                                            ZERO   231
      <QHLEFT> = 0.0                                                            ZERO   232
      <PASTPLRH> = 0.0                                                          ZERO   233
      <PASTPLRC> = 0.0                                                          ZERO   234
      <PASTWM> = 0.008                                                          ZERO   235
      <PAST-IVENTF> = 0                                                         ZERO   237
      <HT-SUM> = 0.0                                                            ZERO   238
      <CL-SUM> = 0.0                                                            ZERO   239
      <HIST-PTR> = 1                                                            ZERO   240
      DO 260 IV=1,96                                                            ZERO   241
        <HT-CL-HIST> = 0.0                                                      ZERO   242
  260 CONTINUE                                                                  ZERO   243
  310 CONTINUE                                                                  ZERO   245
c              initial cfm fractions for RESVVT                                 ZERO   247
        CONFRC = 1.                                                             ZERO   248
        HONFRC = 1.                                                             ZERO   249
c                                                                               ZERO   250
      RETURN                                                                    ZERO   251
      END                                                                       ZERO   252
      Subroutine ZoneExhaust(Mode, SupCFM)                                      ZonExh   2
                                                                                ZonExh   3
c              Calculates the zonal exhaust flow and power                      ZonExh   4
                                                                                ZonExh   5
c              Mode     Calculation mode                                        ZonExh   6
c                         0  exhaust fan off                                    -047o    6
c                         1  exhaust flow, system-oa makeup                     -046   341
c                         2  exhaust flow, infiltration makeup                  -046   342
c                         9  exhaust power                                      -046   343
c              SupCFM   Calculation mode                                        ZonExh   9
c                         1  Maximum possible                                   ZonExh  10
c                         2  Actual                                             ZonExh  11
c              EXCFM    Exhaust CFM in /ZONED/                                  ZonExh  12
                                                                                ZonExh  13
C              DEVELOPED BY                                                     -130    15
C                            J. J. Hirsch & S. D. Gates                         -130    16
C                            James J. Hirsch & Associates                       -130    17
C                            Camarillo, California                              -130    18
C                                                                               -130    19
Copyright (c) 1997 by James J. Hirsch. All Rights Reserved. Unpublished         -130    20
c rights reserved under the Copyright Laws of the United States.                -130    21
c RESTRICTED RIGHTS NOTICE: Government use, reproduction or disclosure          -130    22
c is subject to restrictions as set forth in Rights in Data (g)(3) in           -130    23
c UC/LBL purchase order 4607010 with J.J. Hirsch & Associates.                  -130    24
C                                                                               -130    25
#ifdef _DLL                                                                  /* -048a    1 */ 
      COMMON        // AA( 75 000 000)                                          -048a    2
      INTEGER          IA( 75 000 000)                                          -048a    3
#else                                                                        /* -048a    4 */ 
      COMMON        // AA( 75 000 000)                                          -048a    5
      INTEGER          IA( 75 000 000)                                          -048a    6
#endif                                                                       /* -048a    7 */ 
      EQUIVALENCE      (AA(1), IA(1))                                           HR       3
      COMMON  /PTRSYS/ nzone , iz    , nczd  , zp2 ,         mtw  ,             -045b    1
     $                 nsys  , is    , nss   , nsp ,  ns   , icode,             RemPA   53
     $                 nsz   , isz   , nzd   , zp1 ,  nz   ,                    RemPA   54
     $                 nspace, lpr   ,                                          HVAC25   1
     $                 nattch, iatt  ,                                          RemPA   58
     $                 P2, IDAYHR, IDBWBT,                                      RemPA   59
     $                 IRPPLT, IRPSUM, IRPSYS, IRPZON, MR1, MR2                 RemPA   60
      INTEGER          ZP1, ZP2, P2                                             RemPA   61
      COMMON /SHP   / QCRUN,QCLOAD,QCGAS,QCAUX,QCGSLD,QCGSUP,                   /SHP/    2
     1                QCWAS,QCWASU,QCGSAV,QCFAN,                                /SHP/    3
     2                QHRUN,QHLOAD,QHGAS,QHAUX,QHGSLD,QHGSUP,                   /SHP/    4
     3                QHWAS,QHWASU,QHGDFR,QHFAN,          CUR(25),              /SHP/    5
     4                GSAV1,GASV2,PCH,ISZCZ,GCAP(2),GEDB,QHDFRG,                -044c1   1
     5                GRPM,PLRSUP,CFMCYC,CLPLR,CFMVVT,QHZHP,PCCEDB,             /SHP/    7
     6                IHPREP,IHPOUT,IHPHRR,IHPHRN,IRST,IREN                     /SHP/    8
      COMMON /SHPZ  / QCRUNZ,QCLOADZ,QCGASZ,QCAUXZ,QCGSLDZ,QCGSUPZ,             /SHP/    9
     1                QCWASZ,QCWASUZ,QCGSAVZ,QCFANZ,                            /SHP/   10
     2                QHRUNZ,QHLOADZ,QHGASZ,QHAUXZ,QHGSLDZ,QHGSUPZ,             /SHP/   11
     3                QHWASZ,QHWASUZ,QHGDFRZ,QHFANZ                             /SHP/   12
      DIMENSION       SHP(60),SHPZ(20)                                          /SHP/   13
      EQUIVALENCE     (SHP,QCRUN),(SHPZ,QCRUNZ)                                 /SHP/   14
     1               ,(DFM1,CUR(18)),(DFM2,CUR(19)),(DFM3,CUR(20))              /SHP/   15
      COMMON  /SYSTD / TH,TC,TM,TR,QH,QC,QHZ,QCZ,QHB,QHP,QHUM,                  /SYSTD/  2
     1                 QDHUM,TCMIN,THMAX,QLSUM,QPSUM,CFM,CFMH,CFMC,             /SYSTD/  3
     2                 RCFM,ECFM,CINF,FON,HON,CON,BON,SCONS(3),PH,PC,           /SYSTD/  4
     3                 SKW,FANKW,unused1,WR,WM,WCOIL,WW,PO,D,                   -046f    1
     4                 FTEMP,TCR,QHR,RfanPumpKW,SGAS,SKWQH,SKWQC,QCLAT,         -131    23
     5                 SFKW,RFKW,FONNGT,WSURF,RWalkinQ,TSURF,TRh,               -131    24
     6                 CBF,CBF1,CBF2,EON,PLRCFM,PLRC,PLRH,QCM1,                 /SYSTD/  8
     7                 QCM2,QHM1,EIRM1,EIRM2,EIR,OFKW,QCT,QCS,                  /SYSTD/  9
     8                 WRMAX,WRMIN,CFMRAT,QdistG,QdistL,RON,QHT,                /SYSTD/ 10
     9                 TPOMIN,POMIN,QHSUP,QRSENS,QRLAT,QRREC,QRREJ,             /SYSTD/ 11
     1                 RCOMKW,RDEFKW,RAUXKW,ECFMP,CFMIN,CINFP,DT,DW,            /SYSTD/ 12
     2                 EWB,IC,NATTSP,Q,RETR,SLOAD,QLSUMP,T,TCHUM,TEND,          /SYSTD/ 13
     3                 TS,hgbmin,HPDefE,EconoOnly,TDuctEnv,                     -044e1   1
     4                 QCUNMT,CapRh,CapRph,CapRc                                HVAC25   3
      REAL             SYSTD(113)                                               HVAC19  13
      EQUIVALENCE      (SYSTD(1),TH)                                            RemPA   65
      COMMON  /TIME  / IDOY, IYR, IMO, IDAY, IHR,                               Time     4
     &                 ISCMO, ISCDAY, ISCHR, IDOW, ISCDOW, iDSdates(6),         -044e5   1
     &                 iTimeFlg, iDSFlg, iDDFlg, InitialFlg, LeapYr,            Time     6
     &                 CLOCK(10), MONDSC(13), MONLEN(12), MONSDA(12)            HR      12
      COMMON  /ZONED / EXCFM,FH,FC,CFMZ,QHBZ,QOVER,THZ,TCZ,ERMAX,ERMIN,         /ZONED/  2
     1                 TRY,FTD,CORINT,G0,G1,G2,G3,SIGMAG,TL,ZQHR,TAVE,          /ZONED/  3
     2                 ZQH,ZQC,FCHPS(15),ACFM,ZKW,TCMINZ,THMAXZ,                /ZONED/  4
     3                 ERMAXM,ERMINM,THR,CSSCND,CSSVEC,HENOW,QGWIN,             /ZONED/  5
     4                 QSNABT,QGOPWL,QGVEC,CFMCVT,SSFPT,CFMVNT,ZFANKW,          /ZONED/  6
     5                 ZKWCBT,ZKWHBT,ZCapRbbrd, XC,ZC,XH,ZH                     -044e2   7
      REAL ZONED(63)                                                            -044e2   8
      EQUIVALENCE (ZONED(1),EXCFM)                                              /ZONED/  9
                                                                                ZonExh  20
      DIMENSION PTLD(4,4)                                                       ZonExh  21
      DATA PTLD /.00153028  ,.00520806  ,1.1086242,-.11635563,                  ZonExh  22
     1           .35071223  ,.3080535   ,-.5413736, .87198823,                  ZonExh  23
     2           .37073425  ,.97250253  ,-.3424076,0.0        ,                 ZonExh  24
     3           0.0        ,1.0        ,0.0      ,0.0        /                 ZonExh  25
                                                                                ZonExh  26
c              zn.ExhCFM is the exhaust airflow, regardless of whether          -046   345
c              the makeup is via the air handler or infiltration.               -046   346
c              EXCFM = zn.ExhCFM if makeup is via the air handler;              -046   347
c                    = 0 if makeup is via infiltration.                         -046   348
                                                                                -046   349
      SELECT CASE (Mode)                                                        ZonExh  28
c                                                                               ZonExh  29
c                                                                               ZonExh  30
c ============ EXHAUST FAN OFF ================================================ -047o    7
      CASE (0)                                                                  -047o    8
                                                                                -047o    9
c              This mode called when EXHAUST-SOURCE = AIR-HANDLER and           -047o   10
c              AHU fan is off                                                   -047o   11
                                                                                -047o   12
      <zn.ExhCFM> = 0.                                                          -047o   13
c                                                                               -047o   14
c                                                                               -047o   15
c ============ HOURLY AIRFLOW, SYSTEM-OA ====================================== -046   350
      CASE (1)                                                                  -046   351
                                                                                -046   352
c              This call is for exhaust makeup from the system OA               -046   353
                                                                                -046   354
c              EXCFM in this call is when fan is on; NOT average for            -046   355
c              hour (i.e., not multiplied by CFMCYC or CONFRC)                  -046   356
                                                                                -046   357
      EXCFM = 0.                                                                -046   358
                                                                                -046   359
      IF (FON .gt. 0.     .and.              ! fans are on                      -047k   94
     &    FONNGT .eq. 0.  .and.              ! night cycle is off               -047k   95
     &    CFMCYC .gt. 0.  .and.              ! fan is cycled on                 -047k   96
     &    <AIRFLOW-TRACKING> .ne. 2) THEN    ! not tracking airflow             -047k   97
c             Exhaust fan schedule                                              -047k   98
        SchV = SchVal(<EXHAUST-FAN-SCHZ>, 1.)                                   -047k   99
        IF (SchV .gt. 0.) THEN               ! exhaust scheduled on             -047k  100
c             exhaust without fan cycling; passed in /ZONED/                    -047k  101
          EXCFM = Min(<EXHAUST-CFM>*SchV, SupCFM)                               -047k  102
        ENDIF                                                                   -047k  103
      ENDIF                                                                     -047k  104
                                                                                -046   373
      <zn.ExhCFM> = EXCFM                                                       -046   374
c                                                                               -046   375
c                                                                               -046   376
c ============ HOURLY AIRFLOW, INFILTRATION =================================== -046   377
      CASE (2)                                                                  -046   378
                                                                                -046   379
c              EXCFM in this call is only if exhaust is made up by              -046   380
c              infiltration; unbalanced by air-handler OA                       -046   381
                                                                                -046   382
c             Exhaust fan schedule                                              -046   383
      SchV = SchVal(<EXHAUST-FAN-SCHZ>, 1.)                                     -046   384
      IF (SchV .gt. 0.) THEN               ! scheduled off                      -046   385
        <zn.ExhCFM> = <EXHAUST-CFM> * SchV                                      -046   386
      ELSE                                                                      -046   387
        <zn.ExhCFM> = 0.                                                        -046   388
      ENDIF                                                                     -046   389
                                                                                -046   390
c              no exhaust made up by system OA (for DKTEMP)                     -046   391
      EXCFM = 0.                                                                -046   392
c                                                                               -046   393
c                                                                               -046   394
c ============ HOURLY POWER =================================================== -046   395
      CASE (9)                                                                  -046   396
                                                                                -046   397
      IF (<EXHAUST-SOURCE> .eq. 1) THEN  ! makeup by system-oa                  -046   398
        IF (CFMCYC .eq. 0.) THEN                                                -046   399
          EXCFM       = 0.                                                      -046   400
          <zn.ExhCFM> = 0.                                                      -046   401
          Return                                                                -046   402
        ENDIF                                                                   -046   403
                                                                                -046   404
c              Adjust exhaust flow for tracking mode                            -046   405
        SELECT CASE (<AIRFLOW-TRACKING>)                                        -046   406
        CASE (2)  ! track supply airflow                                        -046   407
          <zn.ExhCFM> = SupCFM/CFMCYC                                           -046   408
        CASE (3)  ! track both supply and exhaust                               -046   409
          <zn.ExhCFM> = Max(<zn.ExhCFM>, SupCFM/CFMCYC)                         -046   410
          SupCFM      = <zn.ExhCFM> * CFMCYC                                    -046   411
        END SELECT                                                              -046   412
      ENDIF  ! EXHAUST-SOURCE                                                   -046   413
                                                                                -046   414
      IF (<zn.ExhCFM> .eq. 0.)  Return                                          -046   415
                                                                                -046   416
c              Exhaust power ratio; if PLR above 1, go linear                   -046   417
      IF (<zn.ExhCFM> .ge. <EXHAUST-CFM>) THEN                                  -046   418
        PLS = <zn.ExhCFM> / <EXHAUST-CFM>                                       -046   419
      ELSE                                                                      -046   420
        SELECT CASE (<EXHAUST-FAN-CTRL>)                                        -046   421
        CASE (1:4)  ! default curves                                            -046   422
          CFMr = <zn.ExhCFM> / <EXHAUST-CFM>                                    -046   423
          I    = <EXHAUST-FAN-CTRL>                                             -046   424
          PLS  = PTLD(1,I) + CFMr*(PTLD(2,I)                                    -046   425
     &                     + CFMr*(PTLD(3,I) + CFMr*PTLD(4,I)))                 -046   426
        CASE (11)  ! user defined                                               -046   427
          CFMr = <zn.ExhCFM> / <EXHAUST-CFM>                                    -046   428
          PLS  = CVAL(<EXHAUST-EIR-FPLR>,CFMr,CFMr)                             -046   429
        CASE DEFAULT  ! constant-volume                                         -046   430
          PLS  = 1.0                                                            -046   431
        END SELECT                                                              -046   432
      ENDIF                                                                     -046   433
c              exhaust power                                                    -046   434
      ExhKW = <EXHAUST-KW> * PLS                                                -046   435
                                                                                -046   436
c              Exhaust flow and power, adjusted for cycling                     -046   437
      IF (<EXHAUST-SOURCE> .eq. 1) THEN  ! makeup by system-oa                  -046   438
        <zn.ExhCFM> = <zn.ExhCFM> * CFMCYC                                      -046   439
        EXCFM       = <zn.ExhCFM>        ! used in return & OA calcs            -046   440
        ExhKW       = ExhKW       * CFMCYC                                      -046   441
      ENDIF                                                                     -046   442
                                                                                ZonExh  93
      JEM       = <VENT-E-MZ>                                                   ZonExh  94
      ZKW       = ZKW       + ExhKW                                             ZonExh  95
      FANKW     = FANKW     + ExhKW*<MULTIPLIER>                                ZonExh  96
      <VENT-EM> = <VENT-EM> + ExhKW*<MULTIPLIER>                                ZonExh  97
                                                                                ZonExh  98
      END SELECT  ! Mode                                                        ZonExh  99
                                                                                ZonExh 100
      Return                                                                    ZonExh 101
      End  ! ZoneExhaust                                                        ZonExh 102
