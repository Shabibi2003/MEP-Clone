      SUBROUTINE  ECON                                                          ECON     2
C                                                                               ECON     3
C                                                                               ECON     4
C                                                                               ECON     5
C              ***************************************************              ECON     6
C              *                                                 *              ECON     7
C              *                ECONOMICS PROGRAM                *              ECON     8
C              *                                                 *              ECON     9
C              ***************************************************              ECON    10
C                                                                               ECON    11
C              DEVELOPED BY                                                     -130     1
C                            S. D. Gates                                        -130     2
C                            J. J. Hirsch                                       -130     3
C                            James J. Hirsch & Associates                       -130     4
C                            Camarillo, California                              -130     5
C              PARTLY BASED UPON EARLIER SOFTWARE DEVELOPED BY                  -130     6
C                            F. C. Winkelmann                                   -130     7
C                            J. H. Eto                                          -130     8
C                            Lawrence Berkeley National Laboratory              -130     9
C                            University of California                           -130    10
C                                                                               -130    11
Copyright (c) 1997 by James J. Hirsch. All Rights Reserved. Unpublished         -130    12
c rights reserved under the Copyright Laws of the United States.                -130    13
c RESTRICTED RIGHTS NOTICE: Government use, reproduction or disclosure          -130    14
c is subject to restrictions as set forth in Rights in Data (g)(3) in           -130    15
c UC/LBNL purchase order 4607010 with J.J. Hirsch & Associates.                 -130    16
C                                                                               COPYR96 14
C              =======================================================          ECON    27
C                                                                               ECON    28
C                                                                               ECON    29
C                                                                               ECON    30
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044a    1
     1                IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL,                        /FILES/  3
     2                IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                    /FILES/  4
     3                IHRREP(3), IHRPAS(2)                                      /FILES/  5
      COMMON /COSTS / FCPLAN,RCPLAN,EU,EUS,EC(25),OMPLAN(25),                   HVAC7    1
     $                OMBLDG(25),OMTOT(25),ECSAV(25),OMSAV(25),                 HVAC7    2
     $                TOTSAV(25),CREPTO,CINTOT,ECBTOT,ECTOT,ECSTOT,             HVAC7    3
     $                OMBSTO,OMPTOT,OMBLTO,OMTO,OMSTOT,TOTS,NY,TINV,PVI,        HVAC7    4
     $                PAYBAC,EUSAV,EUSSAV,EUSPVI,EURPVI,SIR,                    HVAC7    5
     $                BGAREA,BNAREA                                             HVAC7    6
      COMMON /RUNSE / NDESDY, ISCB, NVECT, NSCHED, LENSCH                       /RUNSE/  2
      COMMON //       IA(75 000 000)                                            -048a    1
      DIMENSION       AA(75 000 000)                                            -048a    2
      EQUIVALENCE    (AA(1), IA(1))                                             /BLANK/  4
      COMMON /PTRECO/ IUR, IBC, IRA, IBA, ICC, IMT, IMC, Iextra,                HVAC27   1
     $                NUR, NBC, NRA, NBA, NCC, NMT, NMC, Nem,                   HVAC22   1
     $                LUR, LBC, LRA, LBA, LCC, LMT, LMC,                        HVAC7   11
     $                JUR, JBC, JRA,      JCC, JMT, JMC, Jextra,                HVAC27   2
     $                LenBlockOffset                                            Rfg1     2
      COMMON /WCTRL/  IwinReturn, Imsgflg                                       /WCTRL/  2
c              For DLLs, delete Win_MB and enable msgbox.fi                     /WCTRL/  3
#ifndef _DLL                                                                 /* -051     1 */ 
      COMMON /WIN_MB/ MB_OK,MB_ICONSTOP,MB_ICONEXCLAMATION,MB_TASKMODAL,        -051     2
     &                MB_ICONINFORMATION                                        -051     3
#else                                                                        /* -051     4 */ 
      include 'msgbox.fi'                                                       -051     5
#endif                                                                       /* -051     6 */ 
C                                                                               ECON    36
C                                                                               ECON    37
C              INITIALIZE DATA                                                  ECON    38
      CALL INITE                                                                ECON    39
C                                                                               ECON    40
C              READ ECONOMICS STANDARD FILE AND PLANT DESIGN FILE               ECON    41
      CALL READSE(ISIM)                                                         HVAC7   15
      IF (IwinReturn .ne. 0) THEN                                               -050x    1
        Call MessageBox( NULL,'Errors reading ECONOMICS standard file'          -050x    2
     &    //' - ABORTING'//char(0),'ECON Errors'//char(0), MB_OK                -050x    3
     &    + MB_ICONSTOP + MB_TASKMODAL )                                        -050x    4
        Return                                                                  -050x    5
      ENDIF                                                                     -050x    6
C                                                                               HVAC7   16
C              SKIP SIMULATION IF BDL DID NOT WRITE A STANDARD FILE             HVAC7   17
      IF (ISIM .EQ. 0)  RETURN                                                  HVAC7   18
C                                                                               ECON    46
C              PERFORM ECONOMICS CALCULATIONS                                   ECON    47
C              FIRST CALCULATE ENERGY COSTS                                     ECON    48
      CALL COSTEN                                                               ECON    49
      IF( IwinReturn .ne. 0 ) RETURN                                            Rfg1     4
C                                                                               ECON    50
C              NOW CALCULATE LIFE-CYCLE BUILDING COMPONENT COSTS                ECON    51
      CALL NPCOST                                                               ECON    52
C              CALCULATE THE COST OF ALL PLANT COMPONENTS                       HVAC7   19
      CALL EQCOST                                                               HVAC7   20
C                                                                               ECON    53
C              FINALLY, CALCULATE SAVINGS AND INVESTMENT QUANTITIES             ECON    54
      CALL SCOST                                                                ECON    55
C                                                                               ECON    56
C              WRITE SUMMARY REPORTS                                            HVAC8    1
      CALL EconReports(2)                                                       HVAC8    2
C                                                                               ECON    62
      RETURN                                                                    ECON    63
      END                                                                       ECON    64
      SUBROUTINE BLKCHG                                                         HVAC7   21
C                                                                               BLKCHG   3
C               CALCULATES THE COSTS ASSOCIATED WITH BLOCK CHARGES              BLKCHG   4
C               INCLUDING ENERGY, KWH/KW, KWH/KW WITH A LIMIT-SUM, AND          BLKCHG   5
C               DEMAND CHARGES.                                                 BLKCHG   6
C                                                                               BLKCHG   7
C               CALLED BY UTRATE FOR EACH UTILITY-RATE                          BLKCHG   8
C               IUR = POINTER TO UTILITY-RATE DATA                              BLKCHG   9
C                                                                               BLKCHG  10
C              DEVELOPED BY                                                     -130     1
C                            S. D. Gates                                        -130     2
C                            J. J. Hirsch                                       -130     3
C                            James J. Hirsch & Associates                       -130     4
C                            Camarillo, California                              -130     5
C              PARTLY BASED UPON EARLIER SOFTWARE DEVELOPED BY                  -130     6
C                            F. C. Winkelmann                                   -130     7
C                            J. H. Eto                                          -130     8
C                            Lawrence Berkeley National Laboratory              -130     9
C                            University of California                           -130    10
C                                                                               -130    11
Copyright (c) 1997 by James J. Hirsch. All Rights Reserved. Unpublished         -130    12
c rights reserved under the Copyright Laws of the United States.                -130    13
c RESTRICTED RIGHTS NOTICE: Government use, reproduction or disclosure          -130    14
c is subject to restrictions as set forth in Rights in Data (g)(3) in           -130    15
c UC/LBNL purchase order 4607010 with J.J. Hirsch & Associates.                 -130    16
C                                                                               BLKCHG  12
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044a    1
     1                IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL,                        /FILES/  3
     2                IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                    /FILES/  4
     3                IHRREP(3), IHRPAS(2)                                      /FILES/  5
      COMMON /UTLTYS/ TOTCST, KWBTU                                             HVAC17   1
      REAL            KWBTU                                                     /UTLTYS/ 4
      COMMON //       IA(75 000 000)                                            -048a    1
      DIMENSION       AA(75 000 000)                                            -048a    2
      EQUIVALENCE    (AA(1), IA(1))                                             /BLANK/  4
      COMMON /PTRECO/ IUR, IBC, IRA, IBA, ICC, IMT, IMC, Iextra,                HVAC27   1
     $                NUR, NBC, NRA, NBA, NCC, NMT, NMC, Nem,                   HVAC22   1
     $                LUR, LBC, LRA, LBA, LCC, LMT, LMC,                        HVAC7   11
     $                JUR, JBC, JRA,      JCC, JMT, JMC, Jextra,                HVAC27   2
     $                LenBlockOffset                                            Rfg1     2
C                                                                               HVAC7   22
      INTEGER DataEntry, Cumulative                                             HVAC7   23
      DATA    Cumulative /1/                                                    HVAC7   24
C               NUMBER OF BLOCK-CHARGES IN THIS UTILITY-RATE                    BLKCHG  19
      NURBC = <NUM-BLOCK-CHGS>                                                  BLKCHG  20
C               SKIP IF NO BLOCK-CHARGES DEFINED IN THIS UTILITY-RATE           BLKCHG  21
      IF (NURBC .EQ. 0)  GOTO 999                                               BLKCHG  22
C                                                                               BLKCHG  23
C               LOOP THRU EACH BLOCK-CHARGE                                     BLKCHG  24
      DO 100  JB=1,NURBC                                                        BLKCHG  25
C               POINTER TO BLOCK-CHARGE DATA                                    HVAC7   25
        JBC = <BLOCK-CHARGES>                                                   HVAC7   26
C                                                                               BLKCHG  29
C               YEARLY ENERGY, AND YEARLY CHARGE                                BLKCHG  30
        YRENGY = 0.                                                             BLKCHG  31
C                                                                               BLKCHG  32
C               COUNT THE NUMBER OF TIMES THE BLOCK SCHEDULE CHANGED VALUE.     BLKCHG  33
C               IF MORE THAN TWICE IN ANY BILLING PERIOD, THEN THE BLOCK IS     BLKCHG  34
C               BEING USED IN A TIME-OF-USE FORMAT.                             BLKCHG  35
C               BLOCK-USE-TYPE:  1=YEARLY, 2=SEASONAL, 3=TIME-OF-USE            BLKCHG  36
        <BLOCK-USE-TYPE> = 1                                                    BLKCHG  37
        DO  IB=1,12                                                             BLKCHG  38
          IF (<BC-NUM-SCH-CHNG> .GT. 2)  <BLOCK-USE-TYPE> = 3                   BLKCHG  39
        ENDDO                                                                   BLKCHG  40
C               IF NOT TIME-OF-USE, SEE IF SEASONAL                             BLKCHG  41
C               FOR SEASONAL, AT LEAST ONE MONTH MUST BE INACTIVE               BLKCHG  42
        IF (<BLOCK-USE-TYPE> .NE. 3)  THEN                                      BLKCHG  43
           DO  IB=1,12                                                          BLKCHG  44
             IF (<BC-BILL-ACTV-HRS> .EQ. 0)  <BLOCK-USE-TYPE> = 2               BLKCHG  45
           ENDDO                                                                BLKCHG  46
        ENDIF                                                                   BLKCHG  47
C               IF TIME-OF-USE, PRINT WARNING IF NOT LINKED TO ANOTHER BLOCK.   BLKCHG  48
        ID = 1                                                                  BLKCHG  49
        IF (<BLOCK-USE-TYPE> .EQ. 3)  THEN                                      BLKCHG  50
            IF (<TOU-SEASON-LINKS> .LE. 0)  THEN                                BLKCHG  51
                CALL MSGSIM(-3,IDUM,IDUM,IDUM,IDUM)                             BLKCHG  52
                WRITE(IOUTPT,1001) (<BC-NAME>,II=1,4)                           BLKCHG  53
            ENDIF                                                               BLKCHG  56
C               IF NOT TIME-OF-USE, PRINT WARNING IF BLOCK IS LINKED            BLKCHG  57
          ELSE                                                                  BLKCHG  58
            IF (<TOU-SEASON-LINKS> .GT. 0)  THEN                                BLKCHG  59
                CALL MSGSIM(-3,IDUM,IDUM,IDUM,IDUM)                             BLKCHG  60
                WRITE(IOUTPT,1002) (<BC-NAME>,II=1,4)                           BLKCHG  61
            ENDIF                                                               BLKCHG  64
        ENDIF                                                                   BLKCHG  65
C                                                                               BLKCHG  66
 1001 FORMAT(13X, 'BLOCK-CHARGE ', 4A4, ' IS USED IN A TIME-OF-USE '            BLKCHG  67
     1     / 13X, 'FORMAT, BUT IS NOT TOU-SEASON-LINKED TO ANY OTHER '          BLKCHG  68
     2     / 13X, 'BLOCK-CHARGES FOR SEASONAL CHANGES.  THEREFORE, ANY '        BLKCHG  69
     3     / 13X, 'SEASONAL CHANGE MUST OCCUR ON THE BILLING DAY OR '           BLKCHG  70
     4     / 13X, 'ERRORS WILL RESULT.  REFER TO REPORT ES-F.')                 BLKCHG  71
 1002 FORMAT(13X, 'BLOCK-CHARGE ', 4A4, ' IS TOU-SEASON-LINKED TO '             BLKCHG  72
     1     / 13X, 'ANOTHER BLOCK-CHARGE, BUT IS NOT USED IN A TIME-OF',         BLKCHG  73
     2            '-USE FORMAT.'                                                BLKCHG  74
     3     / 13X, 'TOU-SEASON-LINK WILL BE IGNORED.  REFER TO REPORT ',         BLKCHG  75
     4            'ES-F.')                                                      BLKCHG  76
C                                                                               BLKCHG  77
C                                                                               BLKCHG  78
C               LOOP THRU EACH BILLING MONTH                                    BLKCHG  79
        DO 90  IB=1,12                                                          BLKCHG  80
C                                                                               BLKCHG  81
C               SKIP BILLING MONTH IF PARENT UTILITY-RATE NOT ACTIVE.           BLKCHG  82
          IF (<UR-QUALIFY> .EQ. 0)  GOTO 90                                     BLKCHG  83
C               OR BLOCK-CHARGE NOT ACTIVE THIS BILLING MONTH                   BLKCHG  84
          IF (<BC-BILL-ACTV-HRS> .EQ. 0.)  GOTO 90                              BLKCHG  85
C                                                                               BLKCHG  86
C               TIME-OF-USE ENERGY AND DEMAND CHARGES ARE BASED ON THE PERIOD   BLKCHG  87
C               IN WHICH THE BLOCK-CHARGE IS ACTIVE.  ALL OTHER DEMANDS ARE     BLKCHG  88
C               BASED ON THE PEAK HOURLY OR DAILY DEMAND OF THE BILLING PERIOD. BLKCHG  89
          IF (<BLOCK-USE-TYPE> .LT. 3)  THEN                                    BLKCHG  90
C                    ENERGY AND DEMAND AS SUMMED IN PARENT UTILITY-RATE         BLKCHG  91
              ENERGY = <UR-MTR-ENGY>                                            BLKCHG  92
              DEMAND = <UR-MTR-DEM>                                             BLKCHG  93
C                    FRACTION OF HOURS THIS BLOCK-CHARGE WAS ACTIVE IN THIS     BLKCHG  94
C                    BILLING PERIOD.                                            BLKCHG  95
              FRAC = <BC-BILL-ACTV-HRS> / AMAX1(<BC-BILL-TOTL-HRS>,1.)          BLKCHG  96
            ELSE                                                                BLKCHG  97
C                    ENERGY AND DEMAND DURING BLOCK'S ACTIVE HOURS              BLKCHG  98
              ENERGY = <BC-ACTV-ENGY>                                           BLKCHG  99
              DEMAND = <BC-ACTV-DEM>                                            BLKCHG 100
              FRAC   = 1.0                                                      BLKCHG 101
C                    IF A CHANGE IN SEASON OCCURS WHEN USING A TOU-BLOCK        BLKCHG 102
C                    (TWO LINKED BLOCK-CHARGES ACTIVE IN THE SAME BILLING       BLKCHG 103
C                    PERIOD), THE DEMAND IS THE GREATER OF THE DEMANDS IN THE   BLKCHG 104
C                    TWO BLOCK-CHARGES, AND THE ENERGY IS THE SUM OF THE ENERGY BLKCHG 105
C                    IN THE TWO BLOCKS.                                         BLKCHG 106
              HOURS1 = <BC-BILL-ACTV-HRS>                                       BLKCHG 107
              TOTHRS = HOURS1                                                   BLKCHG 108
C                    LOOP THRU UP TO 2 TOU-LINKS                                BLKCHG 109
              DO  ID=1,2                                                        BLKCHG 110
                IF (<TOU-SEASON-LINKS> .GT. 0)  THEN                            BLKCHG 111
C                    GET ENERGY AND DEMAND IN LINKED BLOCK-CHARGE               BLKCHG 112
                  JBC    = <TOU-SEASON-LINKS>                                   HVAC7   27
                  ENERGY = ENERGY + <BC-ACTV-ENGY>                              BLKCHG 114
                  DEMAND = AMAX1(DEMAND, <BC-ACTV-DEM>)                         BLKCHG 115
                  TOTHRS = TOTHRS + <BC-BILL-ACTV-HRS>                          BLKCHG 116
C                    RESTORE POINTER TO ORIGINAL                                BLKCHG 117
                  JBC = <BLOCK-CHARGES>                                         HVAC7   28
                ENDIF                                                           BLKCHG 119
              ENDDO                                                             BLKCHG 120
C                    CHARGES WILL BE PRORATED BASED ON RELATIVE NUMBER OF       BLKCHG 121
C                    ACTIVE HOURS BETWEEN THE TWO BLOCK-CHARGES                 BLKCHG 122
              IF (TOTHRS .GT. 0.)  FRAC = HOURS1 / TOTHRS                       BLKCHG 123
          ENDIF                                                                 BLKCHG 124
C                                                                               BLKCHG 125
C               NOW LOOP THROUGH ASSOCIATED RATCHETS AND DETERMINE              BLKCHG 126
C               BILLING DEMAND.  IF NO RATCHETS LISTED, USE RATCHETS DEFINED    BLKCHG 127
C               IN PARENT UTILITY-RATE.                                         BLKCHG 128
          NBCR = <NUM-BC-RATCHETS>                                              BLKCHG 129
          IF (NBCR .EQ. 0)  GOTO 15                                             BLKCHG 130
C               IGNORE ACTUAL MONTHLY DEMAND IF A RATCHET WAS DEFINED           BLKCHG 131
C               WITH A DURATION OF ONLY 1 MONTH                                 BLKCHG 132
            IF (<BC-IGNORE-DEM> .EQ. 1)  DEMAND = 0.                            BLKCHG 133
            DO 10  JR=1,NBCR                                                    BLKCHG 134
C                    POINTER TO RATCHET                                         BLKCHG 135
              JRA = <BC-DEM-RATCHETS>                                           HVAC7   29
   10         DEMAND = AMAX1(DEMAND, <R-BILL-DEM>)                              BLKCHG 137
          GOTO 30                                                               BLKCHG 138
C                                                                               BLKCHG 139
C               PARENT UTILITY-RATE RATCHETS - ONLY IF NONE EXPLICITY ENTERED   BLKCHG 140
C               UNDER BLOCK-CHARGE                                              BLKCHG 141
   15     NURR = <NUM-DEM-RATCHETS>                                             HVAC7   30
          IF (NURR .EQ. 0)  GOTO 30                                             BLKCHG 143
C               IGNORE ACTUAL MONTHLY DEMAND IF A RATCHET WAS DEFINED           BLKCHG 144
C               WITH A DURATION OF ONLY ONE MONTH                               BLKCHG 145
            IF (<IGNORE-MON-DEM> .EQ. 1)  DEMAND = 0                            BLKCHG 146
            DO 20  JR=1,NURR                                                    BLKCHG 147
C                    POINTER TO RATCHET                                         BLKCHG 148
              JRA = <UR-DEM-RATCHETS>                                           HVAC7   31
   20         DEMAND = AMAX1(DEMAND, <R-BILL-DEM>)                              BLKCHG 150
C                                                                               BLKCHG 151
C               ADJUST BILLING ENERGY AND DEMAND BASED ON MINIMUM               BLKCHG 152
C               ALLOWABLE QUANTITIES DEFINED IN THE PARENT UTILITY RATE.        BLKCHG 153
   30     IF (<USE-MIN-QUAL> .EQ. 1)                                            BLKCHG 154
     -      THEN                                                                BLKCHG 155
                 ID = 1                                                         BLKCHG 156
                 ENERGY = AMAX1(ENERGY,  <ENERGY-QUALS> )                       BLKCHG 157
                 DEMAND = AMAX1(DEMAND,  <DEMAND-QUALS> )                       BLKCHG 158
            ENDIF                                                               BLKCHG 159
C                                                                               BLKCHG 160
C               NOW ASSESS THE CHARGES, ENERGY AND DEMAND                       BLKCHG 161
          ECHRG  = 0.                                                           BLKCHG 162
          DCHRG  = 0.                                                           BLKCHG 163
C               ENERGY OR DEMAND NOT YET ALLOCATED                              BLKCHG 164
          ELEFT  = ENERGY                                                       BLKCHG 165
          DLEFT  = DEMAND                                                       BLKCHG 166
C               TOTAL ENERGY ALLOCATED - USED FOR                               BLKCHG 167
C               KWH/KW OR KWH/KW-LIMITSUM TYPE LIMIT.                           BLKCHG 168
          ALLOC  = 0.                                                           BLKCHG 169
C               NUMBER OF DIFFERENT BLOCK TYPES ENTERED                         BLKCHG 170
          NBTYPE = <NUM-BLOCK-TYPES>                                            BLKCHG 171
C                                                                               BLKCHG 172
C                                                                               HVAC7   32
C               TO PROCESS THE 5 BLOCKx-DATA TYPES, AN OFFSET IS APPLIED        HVAC7   33
C               TO THE ORIGINAL BLOCK POINTER TO SHIFT TO THE NEXT BLOCK        HVAC7   34
C               TYPE.  THIS OFFSET (LenBlockOffset) IS CALCD IN BDL.            HVAC7   35
C               STORE ORIGINAL POINTER                                          HVAC7   36
          JBCold = JBC                                                          HVAC7   37
C               INCREMENTAL OR CUMULATIVE DATA ENTRY                            HVAC7   38
          DataEntry = <ENERGY-DATA-ARE>                                         HVAC7   39
C               LOOP THROUGH THE BLOCKS                                         HVAC7   40
          DO 50  IBTN=1,NBTYPE                                                  HVAC7   41
C                   BLOCK TYPE                                                  HVAC7   42
            IBTYPE = <BLOCK1-TYPE>                                              HVAC7   43
C                   LOOP OVER THE DATA ENTRIES IN EACH BLOCKx-DATA              HVAC7   44
            DO 40  ID=1,10                                                      HVAC7   45
C                            BLOCK SIZE                                         HVAC7   46
              BLKSIZ = <BLOCKS-1>                                               HVAC7   47
C                            SKIP REST OF ENTRIES IF ZERO                       HVAC7   48
              IF (BLKSIZ .EQ. 0.)  GOTO 50                                      HVAC7   49
              IF (IBTYPE .EQ. 2) BLKSIZ = BLKSIZ * DEMAND                       HVAC7   50
C              IF ENTRIES ARE CUMULATIVE, MODIFY BLOCK SIZE                     HVAC7   51
C              TO BE THE AMOUNT LEFT OVER FROM ALL PREVIOUS BLOCKS              HVAC7   52
              IF (DataEntry .EQ. Cumulative)                                    HVAC7   53
     $          BLKSIZ = AMAX1(0.,BLKSIZ-ALLOC)                                 HVAC7   54
C              LIMIT ON THIS ENTRY, IF ANY                                      HVAC7   55
              IF (IBTYPE .EQ. 2  .OR.  IBTYPE .EQ. 3)  THEN                     HVAC7   56
                ALIMIT = <LIMITS-1>                                             HVAC7   57
                IF (ALIMIT .EQ. 0.0)  ALIMIT = 1.E20                            HVAC7   58
C                            IF THE LIMIT IS KWH/KW-LIMITSUM, ADJUST THE LIMIT  HVAC7   59
C                            FOR THE AMOUNT ALREADY ALLOCATED                   HVAC7   60
                IF (IBTYPE .EQ. 3)  ALIMIT = ALIMIT*DEMAND - ALLOC              HVAC7   61
              ELSE                                                              HVAC7   62
                ALIMIT = 1.E20                                                  HVAC7   63
              ENDIF                                                             HVAC7   64
C                                                                               HVAC7   65
C              ENERGY CHARGES                                                   HVAC7   66
              IF (IBTYPE .LT. 4)  THEN                                          HVAC7   67
                  BLKSIZ = AMIN1(BLKSIZ, ELEFT, ALIMIT)                         HVAC7   68
                  ECHRG  = ECHRG  + BLKSIZ*<COSTS-1>                            HVAC7   69
                  ERATE  = <COSTS-1>                                            HVAC7   70
                  ELEFT  = ELEFT  - BLKSIZ                                      HVAC7   71
                  ALLOC  = ALLOC  + BLKSIZ                                      HVAC7   72
              ELSE                                                              HVAC7   73
C              DEMAND CHARGES                                                   HVAC7   74
                  BLKSIZ = AMIN1(BLKSIZ, DLEFT)                                 HVAC7   75
                  DCHRG  = DCHRG  + BLKSIZ*<COSTS-1>                            HVAC7   76
                  DRATE  = <COSTS-1>                                            HVAC7   77
                  DLEFT  = DLEFT  - BLKSIZ                                      HVAC7   78
              ENDIF                                                             HVAC7   79
C                                                                               HVAC7   80
C               END OF CALCULATIONS FOR THIS SET                                HVAC7   81
   40       CONTINUE                                                            HVAC7   82
C               INCREMENT JBC TO SHIFT ALL BLOCK1 REFERENCES TO BLOCK2, ETC.    HVAC7   83
   50     JBC = JBC + LenBlockOffset                                            HVAC7   84
C               RESTORE JBC                                                     HVAC7   85
          JBC = JBCold                                                          HVAC7   86
C                                                                               BLKCHG 223
C               VERY LAST BLOCK IN BLOCK-CHARGE TAKES ALL LEFT                  BLKCHG 224
          IF (ECHRG .GT. 0.)  ECHRG = ECHRG + ELEFT*ERATE                       BLKCHG 225
          IF (DCHRG .GT. 0.)  DCHRG = DCHRG + DLEFT*DRATE                       BLKCHG 226
C               PRORATE CHARGES BY FRACTION CALCULATED PREVIOUSLY               BLKCHG 227
          ECHRG  = ECHRG * FRAC                                                 BLKCHG 228
          DCHRG  = DCHRG * FRAC                                                 BLKCHG 229
C               AND STORE FOR BLOCK-CHARGES REPORT                              BLKCHG 230
          IF (ECHRG .GT. 0.)  <BC-BILL-ENGY> = ENERGY                           HVAC7   87
          IF (DCHRG .GT. 0.)  <BC-BILL-DEM>  = DEMAND                           HVAC7   88
          <BC-BILL-ECHG> = ECHRG                                                BLKCHG 233
          <BC-YR-ECHG>   = <BC-YR-ECHG> + ECHRG                                 BLKCHG 234
          <BC-BILL-DCHG> = DCHRG                                                BLKCHG 235
          <BC-YR-DCHG>   = <BC-YR-DCHG> + DCHRG                                 BLKCHG 236
          <BC-BILL-FRAC> = FRAC                                                 BLKCHG 237
          YRENGY         = YRENGY + ENERGY*FRAC                                 BLKCHG 238
C               FLAG FOR REPORTS WHETHER CHARGES WILL BE PRORATED               BLKCHG 239
          IF ((FRAC .LT. .99999) .AND. (FRAC .GT. 0.))                          BLKCHG 240
     1                     <CHARGES-PRORATED> = <CHARGES-PRORATED> + 1          BLKCHG 241
C                                                                               BLKCHG 242
C               UPLOAD TO PARENT UTILITY-RATE                                   BLKCHG 243
          <UR-BLK-ENGY-CHG>  = <UR-BLK-ENGY-CHG> + ECHRG                        BLKCHG 244
          <UR-BLK-DEM-CHG>   = <UR-BLK-DEM-CHG>  + DCHRG                        BLKCHG 245
C                                                                               BLKCHG 246
C               END OF CALCULATIONS FOR THIS BILLING PERIOD                     BLKCHG 247
   90   CONTINUE                                                                BLKCHG 248
C                                                                               BLKCHG 249
C               STORE YEARLY SUM OF ENERGY IN THIS BLOCK                        BLKCHG 250
        <BC-YR-ENGY>   = <BC-YR-ENGY> + YRENGY                                  BLKCHG 251
C               BLOCK ENERGY IS UPLOADED TO PARENT UTILITY-RATE SO THAT A       BLKCHG 252
C               CHECK CAN BE MADE TO ENSURE THAT ENERGY IS NOT DOUBLE-COUNTED   BLKCHG 253
C               BETWEEN DIFFERENT BLOCK-CHARGES UNDER THE SAME UTILITY-RATE.    BLKCHG 254
        <UR-YR-BLK-ENGY> = <UR-YR-BLK-ENGY> + YRENGY                            BLKCHG 255
C                                                                               BLKCHG 256
C               A BLOCK-CHARGE SHOULD ONLY SHARE 0, 2 OR 4 BILLING PERIODS      BLKCHG 257
C               WITH ANOTHER.  (FOR EXAMPLE, A SPRING/FALL BLOCK MAY SHARE ONE  BLKCHG 258
C               BILLING PERIOD WITH WINTER AND ANOTHER WITH SUMMER IN THE       BLKCHG 259
C               SPRING, AND AGAIN IN THE FALL).  ALSO SOMETIMES ONLY ONE        BLKCHG 260
C               PERIOD WILL BE SHARED WHEN THE BILLING DAY IS VERY CLOSE TO     BLKCHG 261
C               THE SEASONAL CHANGE.  GIVE WARNING IF OTHERWISE.                BLKCHG 262
        N = <CHARGES-PRORATED>                                                  BLKCHG 263
        IF ((N .NE. 0) .AND. (N .NE. 1) .AND. (N .NE. 2)                        BLKCHG 264
     1                                  .AND. (N .NE. 4))  THEN                 BLKCHG 265
            CALL MSGSIM(-2,IDUM,IDUM,IDUM,IDUM)                                 BLKCHG 266
            WRITE(IOUTPT,1003) (<BC-NAME>,II=1,4), N                            BLKCHG 267
        ENDIF                                                                   BLKCHG 270
 1003 FORMAT(13X, 'BLOCK-CHARGE ', 4A4, ' SHARES ', I2, ' BILLING ',            BLKCHG 271
     1            'PERIODS WITH OTHER'                                          BLKCHG 272
     2     / 13X, 'BLOCK-CHARGES.  NORMALLY ONLY 0, 1, 2, OR 4 ',               BLKCHG 273
     2            'PERIODS ARE SHARED.'                                         BLKCHG 274
     3     / 13X, 'THIS BLOCK MIGHT BE TOU-SEASON-LINKED TO THE',               BLKCHG 275
     3            ' WRONG BLOCK.'                                               BLKCHG 276
     4     / 13X, 'CHECK INPUT DATA AND REPORT ES-F CAREFULLY TO ',             BLKCHG 277
     4            'VERIFY INTENT.  ')                                           BLKCHG 278
C                                                                               BLKCHG 279
C               END OF CALCULATIONS FOR THIS BLOCK-CHARGE                       BLKCHG 280
  100 CONTINUE                                                                  BLKCHG 281
C                                                                               BLKCHG 282
  999 CONTINUE                                                                  BLKCHG 283
      RETURN                                                                    BLKCHG 284
      END                                                                       BLKCHG 285
      SUBROUTINE COSTEN                                                         COSTEN   2
C                                                                               COSTEN   3
C              CALCULATE ENERGY COSTS IN FOUR STEPS.                            COSTEN   4
C              FIRST    PROCESS PLANT HOURLY OUTPUT FILE, SUM ENERGY INTO       COSTEN   5
C                       BILLING PERIODS AND FIND MAXIMUM DEMAND IN EACH         COSTEN   6
C                       PERIOD.                                                 COSTEN   7
C              SECOND   DETERMINE VALUES OF EACH RATCHET FOR EACH BILLING       COSTEN   8
C                       PERIOD.                                                 COSTEN   9
C              THIRD    DETERMINE VALUES OF EACH BLOCK-CHARGE GROUP USING       COSTEN  10
C                       ACTUAL DEMANDS OR RATCHETS CALCULATED ABOVE.            COSTEN  11
C              FOURTH   DETERMINE COSTS OF EACH UTILITY-RATE USING              COSTEN  12
C                       BLOCK-CHARGES AND ACTUAL DEMANDS OR RATCHETS            COSTEN  13
C                       CALCULATED ABOVE.                                       COSTEN  14
C                                                                               COSTEN  15
C              DEVELOPED BY                                                     -130     1
C                            S. D. Gates                                        -130     2
C                            J. J. Hirsch                                       -130     3
C                            James J. Hirsch & Associates                       -130     4
C                            Camarillo, California                              -130     5
C              PARTLY BASED UPON EARLIER SOFTWARE DEVELOPED BY                  -130     6
C                            F. C. Winkelmann                                   -130     7
C                            J. H. Eto                                          -130     8
C                            Lawrence Berkeley National Laboratory              -130     9
C                            University of California                           -130    10
C                                                                               -130    11
Copyright (c) 1997 by James J. Hirsch. All Rights Reserved. Unpublished         -130    12
c rights reserved under the Copyright Laws of the United States.                -130    13
c RESTRICTED RIGHTS NOTICE: Government use, reproduction or disclosure          -130    14
c is subject to restrictions as set forth in Rights in Data (g)(3) in           -130    15
c UC/LBNL purchase order 4607010 with J.J. Hirsch & Associates.                 -130    16
C                                                                               COSTEN  16
      COMMON /COSTS / FCPLAN,RCPLAN,EU,EUS,EC(25),OMPLAN(25),                   HVAC7    1
     $                OMBLDG(25),OMTOT(25),ECSAV(25),OMSAV(25),                 HVAC7    2
     $                TOTSAV(25),CREPTO,CINTOT,ECBTOT,ECTOT,ECSTOT,             HVAC7    3
     $                OMBSTO,OMPTOT,OMBLTO,OMTO,OMSTOT,TOTS,NY,TINV,PVI,        HVAC7    4
     $                PAYBAC,EUSAV,EUSSAV,EUSPVI,EURPVI,SIR,                    HVAC7    5
     $                BGAREA,BNAREA                                             HVAC7    6
      COMMON /PTRECO/ IUR, IBC, IRA, IBA, ICC, IMT, IMC, Iextra,                HVAC27   1
     $                NUR, NBC, NRA, NBA, NCC, NMT, NMC, Nem,                   HVAC22   1
     $                LUR, LBC, LRA, LBA, LCC, LMT, LMC,                        HVAC7   11
     $                JUR, JBC, JRA,      JCC, JMT, JMC, Jextra,                HVAC27   2
     $                LenBlockOffset                                            Rfg1     2
      COMMON /UTLTYS/ TOTCST, KWBTU                                             HVAC17   1
      REAL            KWBTU                                                     /UTLTYS/ 4
      COMMON //       IA(75 000 000)                                            -048a    1
      DIMENSION       AA(75 000 000)                                            -048a    2
      EQUIVALENCE    (AA(1), IA(1))                                             /BLANK/  4
      COMMON /WCTRL/  IwinReturn, Imsgflg                                       /WCTRL/  2
c              For DLLs, delete Win_MB and enable msgbox.fi                     /WCTRL/  3
#ifndef _DLL                                                                 /* -051     1 */ 
      COMMON /WIN_MB/ MB_OK,MB_ICONSTOP,MB_ICONEXCLAMATION,MB_TASKMODAL,        -051     2
     &                MB_ICONINFORMATION                                        -051     3
#else                                                                        /* -051     4 */ 
      include 'msgbox.fi'                                                       -051     5
#endif                                                                       /* -051     6 */ 
C                                                                               COSTEN  21
C               PROCESS PLANT OUTPUT FILE                                       COSTEN  22
      CALL PLTPRO                                                               COSTEN  23
      IF( IwinReturn .ne. 0 ) RETURN                                            Rfg1     6
C                                                                               COSTEN  24
C               DETERMINE ALL CHARGES ASSOCIATED WITH EACH UTILITY-RATE         COSTEN  25
      CALL UTRATE                                                               COSTEN  26
C                                                                               COSTEN  27
C               CALCULATE LIFE-CYCLE ENERGY COSTS                               COSTEN  28
C                                                                               COSTEN  29
      A1 = <DISCOUNT-RATE> / 100.                                               HVAC7   89
      E  = <PROJECT-LIFE>                                                       HVAC7   90
      IYEARS = MIN0(INT(E + .999), 25)                                          COSTEN  32
C                                                                               COSTEN  33
      DO 300  IYEAR=1,IYEARS                                                    COSTEN  34
        DO 250  IURN=1,NUR                                                      COSTEN  35
          JUR = IUR + (IURN-1)*LUR                                              HVAC7   91
          X = (1. + <ESCALATION>/100.) / (1. + A1)                              COSTEN  37
          CST = <UR-YR-CHG> * (X**(IYEAR-1))                                    COSTEN  38
          EC(IYEAR) = EC(IYEAR) + CST                                           COSTEN  39
  250   CONTINUE                                                                COSTEN  40
  300 CONTINUE                                                                  COSTEN  41
C                                                                               COSTEN  42
      RETURN                                                                    COSTEN  43
      END                                                                       COSTEN  44
      BLOCK DATA DATECO                                                         DATECO   2
c                                                                               DATECO   3
      COMMON /NAMES / NAMRES(4,14), WINDOW(2), QUALRT(2,4),                     HVAC30   1
     $                RTYPE(2,2),   NOYES(2),  IBLANK(4)                        HVAC7    8
c                                                                               DATECO   5
      DATA NAMRES                                                               DATECO   6
     $    / 4HSTEA,4HM   ,4H    ,4H    ,  4HCHIL,4HLED-,4HWATE,4HR   ,          DATECO   7
     $      4HELEC,4HTRIC,4HITY ,4H    ,                                        DATECO   8
     $      4HNATU,4HRAL-,4HGAS ,4H    ,  4HLPG ,4H    ,4H    ,4H    ,          DATECO   9
     $      4HFUEL,4H-OIL,4H    ,4H    ,  4HDIES,4HEL-O,4HIL  ,4H    ,          DATECO  10
     $      4HCOAL,4H    ,4H    ,4H    ,  4HMETH,4HANOL,4H    ,4H    ,          DATECO  11
     $      4HOTHE,4HR-FU,4HEL  ,4H    ,                                        DATECO  12
     $      4HHEAT,4H-SAL,4HE   ,4H    ,  4HCOOL,4H-SAL,4HE   ,4H    ,          DATECO  13
     $      4HELEC,4HTRIC,4H-SAL,4HE   ,  4H    ,4H    ,4H    ,4H    /          HVAC27   3
      DATA WINDOW /4HHOUR, 4HDAY /                                              DATECO  15
      DATA QUALRT /4HALL , 4HYEAR,                                              HVAC30   2
     2             4H MON, 4H-MIN,                                              HVAC30   3
     3             4HYEAR, 4H-MIN,                                              HVAC30   4
     4             4H MON, 4HTHLY/                                              HVAC30   5
      DATA RTYPE  /4HHIGH, 4HEST ,                                              DATECO  20
     1             4HAVER, 4HAGE /                                              DATECO  21
      DATA NOYES  /3H NO,  3HYES/                                               DATECO  22
      DATA IBLANK /4H    , 4H    , 4H    , 4H    /                              DATECO  23
c                                                                               DATECO  24
      END                                                                       DATECO  25
      SUBROUTINE DEFCHK                                                         DEFCHK   2
C                                                                               DEFCHK   3
C              CHECK DEFAULT VALUES AND CONSISTENCY OF PLANT UTILITIES          DEFCHK   4
C                                                                               DEFCHK   5
C              DEVELOPED BY                                                     -130     1
C                            S. D. Gates                                        -130     2
C                            J. J. Hirsch                                       -130     3
C                            James J. Hirsch & Associates                       -130     4
C                            Camarillo, California                              -130     5
C              PARTLY BASED UPON EARLIER SOFTWARE DEVELOPED BY                  -130     6
C                            F. C. Winkelmann                                   -130     7
C                            J. H. Eto                                          -130     8
C                            Lawrence Berkeley National Laboratory              -130     9
C                            University of California                           -130    10
C                                                                               -130    11
Copyright (c) 1997 by James J. Hirsch. All Rights Reserved. Unpublished         -130    12
c rights reserved under the Copyright Laws of the United States.                -130    13
c RESTRICTED RIGHTS NOTICE: Government use, reproduction or disclosure          -130    14
c is subject to restrictions as set forth in Rights in Data (g)(3) in           -130    15
c UC/LBNL purchase order 4607010 with J.J. Hirsch & Associates.                 -130    16
      COMMON /CTRL  / VERS(2),IRPFLG(4),IOVRLL(7),IWRTFL,                       /CTRL/   2
     1                IPROG, IFATAL, NAMPRG(3,7), MTRICR                        /CTRL/   3
      INTEGER        VERS                                                       Rfg1     1
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044a    1
     1                IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL,                        /FILES/  3
     2                IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                    /FILES/  4
     3                IHRREP(3), IHRPAS(2)                                      /FILES/  5
      COMMON /NAMES / NAMRES(4,14), WINDOW(2), QUALRT(2,4),                     HVAC30   1
     $                RTYPE(2,2),   NOYES(2),  IBLANK(4)                        HVAC7    8
      COMMON /PTRECO/ IUR, IBC, IRA, IBA, ICC, IMT, IMC, Iextra,                HVAC27   1
     $                NUR, NBC, NRA, NBA, NCC, NMT, NMC, Nem,                   HVAC22   1
     $                LUR, LBC, LRA, LBA, LCC, LMT, LMC,                        HVAC7   11
     $                JUR, JBC, JRA,      JCC, JMT, JMC, Jextra,                HVAC27   2
     $                LenBlockOffset                                            Rfg1     2
      COMMON /RUNSE / NDESDY, ISCB, NVECT, NSCHED, LENSCH                       /RUNSE/  2
      COMMON /UNITT/   VKONV(300), DUMLOG(4), JUNITT(4,300,2)                   /UNITT/  2
      COMMON /UTLTYS/ TOTCST, KWBTU                                             HVAC17   1
      REAL            KWBTU                                                     /UTLTYS/ 4
      COMMON //       IA(75 000 000)                                            -048a    1
      DIMENSION       AA(75 000 000)                                            -048a    2
      EQUIVALENCE    (AA(1), IA(1))                                             /BLANK/  4
C                                                                               DEFCHK  13
      DIMENSION DCOST(14)                                                       DEFCHK  14
      COMMON /WCTRL/  IwinReturn, Imsgflg                                       /WCTRL/  2
c              For DLLs, delete Win_MB and enable msgbox.fi                     /WCTRL/  3
#ifndef _DLL                                                                 /* -051     1 */ 
      COMMON /WIN_MB/ MB_OK,MB_ICONSTOP,MB_ICONEXCLAMATION,MB_TASKMODAL,        -051     2
     &                MB_ICONINFORMATION                                        -051     3
#else                                                                        /* -051     4 */ 
      include 'msgbox.fi'                                                       -051     5
#endif                                                                       /* -051     6 */ 
      DATA DCOST  /13.00,  0.12,  0.07,  0.50,  0.97,                           DEFCHK  15
     6              1.19,  1.05, 30.00,  1.13,  0.95,                           DEFCHK  16
     1              0.00,  0.00,  0.05,  0.05/                                  DEFCHK  17
C                                                                               DEFCHK  28
C               ABORT FLAG                                                      DEFCHK  29
      IABT = 0                                                                  DEFCHK  30
c              Set the units - english or metric                                HVAC7   94
      IUNIT = 2                                                                 HVAC7   95
      IF (MTRICR .EQ. 1)  IUNIT = 1                                             HVAC7   96
                                                                                DEFCHK  35
c               Set up the UTILITY-RATES                                        Rfg1     8
      IF (NUR .EQ. 0)  GOTO 999                                                 Rfg1     9
      DO  IURN=1,NUR                                                            Rfg1    10
c               pointer to utility-rate                                         Rfg1    11
        JUR  = IUR + (IURN-1)*LUR                                               Rfg1    12
c               resource type                                                   Rfg1    13
        IRES = <UR-TYPE>                                                        Rfg1    14
c                                                                               Rfg1    15
c              First, check to see if any meters specified                      Rfg1    16
        IM = 1                                                                  Rfg1    17
        IF (<UR-METERS> .EQ. 0)  THEN                                           Rfg1    18
c              no meters specified - default to all of this type                Rfg1    19
          IM = 0                                                                Rfg1    20
          DO  Nmtr=1,Nmt                                                        Rfg1    21
            Jmt = Imt + (Nmtr-1)*Lmt                                            Rfg1    22
            IF (IRES .NE. 4)  THEN  ! non-fuel meters                           Rfg1    23
              IF (<METER-TYPE> .EQ. IRES                                        Rfg1    24
     &                                .AND.  <METER_PARENT> .EQ. 0) THEN        Rfg1    25
                IM = IM + 1                                                     Rfg1    26
                <UR-METERS> = Jmt                                               Rfg1    27
              ENDIF                                                             Rfg1    28
            ELSE  ! fuel meters                                                 Rfg1    29
              IF (<METER-TYPE> .GE. 4  .AND. <METER-TYPE> .LE. 10               Rfg1    30
     &                                 .AND. <METER_PARENT> .EQ. 0) THEN        Rfg1    31
                IM = IM + 1                                                     Rfg1    32
                <UR-METERS> = Jmt                                               Rfg1    33
              ENDIF                                                             Rfg1    34
            ENDIF                                                               Rfg1    35
          ENDDO                                                                 Rfg1    36
c              error if no meters found                                         Rfg1    37
          IF (IM .EQ. 0)  THEN                                                  Rfg1    38
            CALL MSGSIM(-1,II,II,II,II)                                         Rfg1    39
            WRITE (IOUTPT,1001)  (<UR-NAME>,II=1,8)                             Rfg1    40
            IABT = 1                                                            Rfg1    41
          ENDIF                                                                 Rfg1    42
          <NUM-METERS> = IM                                                     Rfg1    43
        ELSE                                                                    Rfg1    44
c              convert meter pointers to numbers                                Rfg1    45
          DO  IM=1,25                                                           Rfg1    46
            IF (<UR-METERS> .GT. 0)  THEN                                       Rfg1    47
              <NUM-METERS> = IM                                                 Rfg1    48
              <UR-METERS>  = Imt + (<UR-METERS>-1)*Lmt                          Rfg1    49
            ELSE                                                                Rfg1    50
              EXIT                                                              Rfg1    51
            ENDIF                                                               Rfg1    52
          ENDDO                                                                 Rfg1    53
        ENDIF                                                                   Rfg1    54
c                                                                               Rfg1    55
c              Map over resource index                                          Rfg1    56
        SELECT CASE (<UR-TYPE>)                                                 Rfg1    57
          CASE (4)  ! Fuel meters                                               Rfg1    58
            IM        = 1                                                       Rfg1    59
            Jmt       = <UR-METERS>                                             Rfg1    60
            <UR-TYPE> = <METER-TYPE>                                            Rfg1    61
            IRES      = <METER-TYPE>                                            Rfg1    62
c              check for consistency of fuel meters                             Rfg1    63
            Nmeter = <NUM-METERS>                                               Rfg1    64
            DO IM=1,Nmeter                                                      Rfg1    65
              IF (<METER-TYPE> .NE.  IRES)  THEN                                Rfg1    66
                CALL MSGSIM(-2,II,II,II,II)                                     Rfg1    67
                WRITE (IOUTPT,1002)  (<UR-NAME>,II=1,8)                         Rfg1    68
              ENDIF                                                             Rfg1    69
            ENDDO                                                               Rfg1    70
          CASE (5)  ! Electric sale                                             Rfg1    71
            <UR-TYPE> = 13                                                      Rfg1    72
            IRES      = 13                                                      Rfg1    73
        END SELECT                                                              Rfg1    74
 1001   FORMAT(14x,'UTILITY-RATE: ',8A4,' has no meters'               /        Rfg1    75
     &         14x,'specified, but no meters were found that match the'/        Rfg1    76
     &         14x,'type.'                                             )        Rfg1    77
 1002   FORMAT(14x,'UTILITY-RATE: ',8A4,' has meters for'              /        Rfg1    78
     &         14x,'more than one type of fuel.  Results may be'       /        Rfg1    79
     &         14x,'erroneous.'                                        )        Rfg1    80
c                                                                               Rfg1    81
c              calc pointers to referenced block charges and ratchets           Rfg1    82
        DO  JB=1,20                                                             Rfg1    83
          IF (<BLOCK-CHARGES> .GT. 0)  THEN                                     Rfg1    84
            <BLOCK-CHARGES> = IBC + (<BLOCK-CHARGES>-1)*LBC                     Rfg1    85
            <NUM-BLOCK-CHGS> = JB                                               Rfg1    86
          ENDIF                                                                 Rfg1    87
          IF (JB .LT. 16)  THEN                                                 Rfg1    88
            JR = JB                                                             Rfg1    89
            IF (<UR-DEM-RATCHETS> .GT. 0)  THEN                                 Rfg1    90
              <UR-DEM-RATCHETS>  = IRA +(<UR-DEM-RATCHETS>-1)*LRA               Rfg1    91
              <NUM-DEM-RATCHETS> = JR                                           Rfg1    92
            ENDIF                                                               Rfg1    93
            IF (<MIN-MON-RATCHETS> .GT. 0)  THEN                                Rfg1    94
              <MIN-MON-RATCHETS> = IRA +(<MIN-MON-RATCHETS>-1)*LRA              Rfg1    95
              <NUM-MIN-MON-RAT>  = JR                                           Rfg1    96
            ENDIF                                                               Rfg1    97
          ENDIF                                                                 Rfg1    98
        ENDDO  ! JB                                                             Rfg1    99
c              store number of entries for tax blocks                           Rfg1   100
        DO  ID=1,3                                                              Rfg1   101
          IF (<PCT-TAX-BLOCKS>  .GT. 0.)  <NUM-PCT-TAX-BLKS> = ID               Rfg1   102
          IF (<UNIT-TAX-BLOCKS> .GT. 0.)  <NUM-UNT-TAX-BLKS> = ID               Rfg1   103
          IF (<PCT-SRG-BLOCKS>  .GT. 0.)  <NUM-PCT-SRG-BLKS> = ID               Rfg1   104
          IF (<UNIT-SRG-BLOCKS> .GT. 0.)  <NUM-UNT-SRG-BLKS> = ID               Rfg1   105
        ENDDO                                                                   Rfg1   106
C                                                                               Rfg1   107
C               USE DEFAULT UTILITY COST IF NO ENERGY-COST, ENERGY-COST-SCH,    Rfg1   108
C               ENERGY-COST-ADJ, DEMAND-CHG, OR BLOCK-CHARGES ARE DEFINED       Rfg1   109
        NUM = 0                                                                 Rfg1   110
        DO  IB=1,12                                                             Rfg1   111
          IF ((<ENERGY-CHG> .NE. 0.) .OR. (<ENERGY-CHG-SCH> .NE. 0)             Rfg1   112
     &         .OR.  (<ENERGY-COST-ADJS> .NE. 0.)                               Rfg1   113
     &         .OR.  (<ENERGY-ADJ-SCH> .NE. 0)                                  Rfg1   114
     &         .OR.  (<DEMAND-CHGS> .NE. 0.))  NUM = NUM + 1                    Rfg1   115
        ENDDO                                                                   Rfg1   116
        IF (NUM .EQ. 0  .AND.  <NUM-BLOCK-CHGS> .EQ. 0)  THEN                   Rfg1   117
          <ENERGY-CHG> = DCOST(IRES)                                            Rfg1   118
c              get pointer to energy units                                      Rfg1   119
          IM = 1                                                                Rfg1   120
          JMT = <UR-METERS>                                                     Rfg1   121
          CALL MSGSIM(-2,IDUM,IDUM,IDUM,IDUM)                                   Rfg1   122
          WRITE(IOUTPT,1003)  (<UR-NAME>,II=1,4), DCOST(IRES),                  Rfg1   123
     1                    (JUNITT(I,<METER-UNIT-INDEX>,IUNIT),I=1,2)            Rfg1   124
        ENDIF                                                                   Rfg1   125
 1003   FORMAT(13X, 47HNO ENERGY COSTS, DEMAND COSTS, OR BLOCK-CHARGES ,        Rfg1   126
     1            19H HAVE BEEN DEFINED                                         Rfg1   127
     2     / 13X, 17HFOR UTILITY-RATE , 4A4                                     Rfg1   128
     2     / 13X, 12HDEFAULT OF $, F5.2, 5H PER , 2A4, 9H ASSUMED.)             Rfg1   129
c                                                                               Rfg1   130
c              Demand interval is in increments of 5 minutes                    Rfg1   131
        <NUM_WINDOW_BINS> = INT(<DEMAND-INTERVAL>)/5                            Rfg1   132
c              factor to convert bin kWh to peak kW                             Rfg1   133
        <PEAK_MULTIPLIER> = 60. / FLOAT(<NUM_WINDOW_BINS>*5)                    Rfg1   134
C                                                                               Rfg1   135
C               IGNORE ACTUAL MONTHLY DEMAND IF ANY RATCHETS SPECIFIED WHICH    Rfg1   136
C               HAVE A RATCHET DURATION OF ONE MONTH                            Rfg1   137
        NURR = <NUM-DEM-RATCHETS>                                               Rfg1   138
        DO  JR=1,NURR                                                           Rfg1   139
          JRA = <UR-DEM-RATCHETS>                                               Rfg1   140
          IF (<NUM-RATCHET-MON> .EQ. 1)  <IGNORE-MON-DEM> = 1                   Rfg1   141
        ENDDO                                                                   Rfg1   142
C                                                                               Rfg1   143
C              ALSO TRUE FOR MIN-MON-DEM-RAT; THESE ADD TO UR-DEM-RATCHETS      Rfg1   144
        <IGNORE-MIN-MON-D> = <IGNORE-MON-DEM>                                   Rfg1   145
        NURR = <NUM-MIN-MON-RAT>                                                Rfg1   146
        DO  JR=1,NURR                                                           Rfg1   147
          JRA = <MIN-MON-RATCHETS>                                              Rfg1   148
          IF (<NUM-RATCHET-MON> .EQ. 1)  <IGNORE-MIN-MON-D> = 1                 Rfg1   149
        ENDDO                                                                   Rfg1   150
c                                                                               Rfg1   151
c              convert BILLING-DAYS to integer                                  Rfg1   152
        DO  IB=1,12                                                             Rfg1   153
          <BILLING-DAY> = INT(<BILLING-DAYR>+0.1)                               Rfg1   154
        ENDDO                                                                   Rfg1   155
c                                                                               Rfg1   156
c               Pointer to schedules                                            Rfg1   157
        <QUAL-SCH>       = IPTSCH(ISCB ,<QUAL-SCH>)                             Rfg1   158
        <ENERGY-CHG-SCH> = IPTSCH(ISCB ,<ENERGY-CHG-SCH>)                       Rfg1   159
        <ENERGY-ADJ-SCH> = IPTSCH(ISCB ,<ENERGY-ADJ-SCH>)                       Rfg1   160
      ENDDO  ! Utility rate processing                                          Rfg1   161
C                                                                               DEFCHK 174
C               NOW BLOCK CHARGES                                               DEFCHK 175
  100 IF (NBC .EQ. 0)  GOTO 200                                                 DEFCHK 176
      DO 199  IBCN=1,NBC                                                        DEFCHK 177
        JBC = IBC + (IBCN-1)*LBC                                                HVAC7  211
C                                                                               DEFCHK 179
C               SET UP SCHEDULE POINTER                                         DEFCHK 180
        <BLOCK-SCH> = IPTSCH(ISCB ,<BLOCK-SCH>)                                 HVAC7  212
c                                                                               HVAC7  213
c               Calc pointers to referenced ratchets                            HVAC7  214
        DO  JR=1,5                                                              HVAC7  215
          IF (<BC-DEM-RATCHETS> .GT. 0)  THEN                                   HVAC7  216
            JRA = IRA + (<BC-DEM-RATCHETS>-1)*LRA                               HVAC7  217
            <BC-DEM-RATCHETS> = JRA                                             HVAC7  218
            <NUM-BC-RATCHETS> = JR                                              HVAC7  219
c               ignore actual monthly demand if any RATCHETS specified which    HVAC7  220
c               have a RATCHET duration of one month                            HVAC7  221
            IF (INT(<NUM-RATCHET-MONR>+0.1).eq.1) <BC-IGNORE-DEM> = 1           -034     3
          ENDIF                                                                 HVAC7  223
        ENDDO                                                                   HVAC7  224
c               store number of BLOCKx-TYPEs                                    HVAC7  225
        ID = 1                                                                  HVAC7  226
        IF (<BLOCKS-1> .GT. 0.)  <NUM-BLOCK-TYPES> = 1                          HVAC7  227
        IF (<BLOCKS-2> .GT. 0.)  <NUM-BLOCK-TYPES> = 2                          HVAC7  228
        IF (<BLOCKS-3> .GT. 0.)  <NUM-BLOCK-TYPES> = 3                          HVAC7  229
        IF (<BLOCKS-4> .GT. 0.)  <NUM-BLOCK-TYPES> = 4                          HVAC7  230
        IF (<BLOCKS-5> .GT. 0.)  <NUM-BLOCK-TYPES> = 5                          HVAC7  231
C                                                                               DEFCHK 192
C               END OF BLOCK-CHARGE DEFAULT PROCESSING                          DEFCHK 193
  199 CONTINUE                                                                  DEFCHK 194
C                                                                               DEFCHK 195
C               FINALLY, RATCHETS                                               DEFCHK 196
  200 IF (NRA.EQ. 0)  GOTO 300                                                  HVAC7  232
      DO 299  IRN=1,NRA                                                         HVAC7  233
        JRA = IRA + (IRN-1)*LRA                                                 HVAC7  234
c              Convert NUM-MONTHS from real to integer                          HVAC20  11
        <NUM-RATCHET-MON> = INT(<NUM-RATCHET-MONR>+0.1)                         HVAC20  12
C                                                                               DEFCHK 200
C               SET UP SCHEDULE POINTER                                         DEFCHK 201
        <RATCHET-SCH> = IPTSCH(ISCB ,<RATCHET-SCH>)                             HVAC7  235
C                                                                               DEFCHK 204
C               END OF RATCHET DEFAULT PROCESSING                               DEFCHK 205
  299 CONTINUE                                                                  DEFCHK 206
C                                                                               DEFCHK 207
  300 CONTINUE                                                                  DEFCHK 208
c              Find all unique ratchets associated with each UTILITY-RATE       HVAC7  236
c              including those in BLOCK-CHARGES.                                HVAC7  237
      DO  IURN=1,NUR                                                            HVAC7  238
        JUR = IUR + (IURN-1)*LUR                                                HVAC7  239
c              First, transfer the DEMAND-RATCHETS                              HVAC7  240
        NURR = <NUM-DEM-RATCHETS>                                               HVAC7  241
        DO  JR=1,NURR                                                           HVAC7  242
          <UR_ALL_RATCHETS> = <UR-DEM-RATCHETS>                                 HVAC7  243
        ENDDO                                                                   HVAC7  244
        <NUM_ALL_RATCHETS> = NURR                                               HVAC7  245
c              Next, transfer the MIN-MON-DEM-RATCHETS that are different       HVAC7  246
c              from the DEMAND-RATCHETS already transferred                     HVAC7  247
        NURR = <NUM-MIN-MON-RAT>                                                HVAC7  248
        DO 5  NR=1,NURR                                                         HVAC7  249
c              get the ratchet pointer                                          HVAC7  250
          JR = NR                                                               HVAC7  251
          JRA = <MIN-MON-RATCHETS>                                              HVAC7  252
c              compare to the pointers already in the list                      HVAC7  253
          NR1 = <NUM_ALL_RATCHETS>                                              HVAC7  254
          DO  JR=1,NR1                                                          HVAC7  255
            IF (JRA .EQ. <UR_ALL_RATCHETS>)  GOTO 5                             HVAC7  256
          ENDDO                                                                 HVAC7  257
c              this pointer is unique, store in list                            HVAC7  258
          JR = NR1+1                                                            HVAC7  259
          <UR_ALL_RATCHETS> = JRA                                               HVAC7  260
          <NUM_ALL_RATCHETS> = JR                                               HVAC7  261
    5   CONTINUE                                                                HVAC7  262
c              now find any unique BLOCK-CHARGE ratchets                        HVAC7  263
        NB = <NUM-BLOCK-CHGS>                                                   HVAC7  264
        DO  JB=1,NB                                                             HVAC7  265
          JBC  = <BLOCK-CHARGES>                                                HVAC7  266
          NBCR = <NUM-BC-RATCHETS>                                              HVAC7  267
          DO 6  NR=1,NBCR                                                       HVAC7  268
            JR  = NR                                                            HVAC7  269
            JRA = <BC-DEM-RATCHETS>                                             HVAC7  270
c              compare to the pointers already in the list                      HVAC7  271
            NR1 = <NUM_ALL_RATCHETS>                                            HVAC7  272
            DO  JR=1,NR1                                                        HVAC7  273
              IF (JRA .EQ. <UR_ALL_RATCHETS>)  GOTO 6                           HVAC7  274
            ENDDO                                                               HVAC7  275
c              this pointer is unique, store in list                            HVAC7  276
            JR = NR1+1                                                          HVAC7  277
            <UR_ALL_RATCHETS> = JRA                                             HVAC7  278
            <NUM_ALL_RATCHETS> = JR                                             HVAC7  279
    6     CONTINUE                                                              HVAC7  280
c              end of block-charge ratchet checks                               HVAC7  281
        ENDDO                                                                   HVAC7  282
c              end of utility-rate ratchet checks                               HVAC7  283
      ENDDO                                                                     HVAC7  284
c                                                                               HVAC8    3
 999  CONTINUE                                                                  DEFCHK 212
C                                                                               DEFCHK 213
      IF (IABT .EQ. 1)  CALL ABT                                                DEFCHK 214
      RETURN                                                                    DEFCHK 215
      END                                                                       DEFCHK 216
      SUBROUTINE EconReports(Mode)                                              ECOREP   2
c                                                                               ECOREP   3
c              Outputs all of the report data to the report file                ECOREP   4
c              for the ECONOMICS simulation.                                    ECOREP   5
c                                                                               ECOREP   6
c              Mode = -0  Initialize all reports and return                     ECOREP   7
c                          new (positive) value for Iuniq                       ECOREP   8
c                      1  Write monthly report records (unused)                 ECOREP   9
c                      2  Write yearly report records                           ECOREP  10
c                                                                               ECOREP  11
C              DEVELOPED BY                                                     -130     1
C                            S. D. Gates                                        -130     2
C                            J. J. Hirsch                                       -130     3
C                            James J. Hirsch & Associates                       -130     4
C                            Camarillo, California                              -130     5
C              PARTLY BASED UPON EARLIER SOFTWARE DEVELOPED BY                  -130     6
C                            F. C. Winkelmann                                   -130     7
C                            J. H. Eto                                          -130     8
C                            Lawrence Berkeley National Laboratory              -130     9
C                            University of California                           -130    10
C                                                                               -130    11
Copyright (c) 1997 by James J. Hirsch. All Rights Reserved. Unpublished         -130    12
c rights reserved under the Copyright Laws of the United States.                -130    13
c RESTRICTED RIGHTS NOTICE: Government use, reproduction or disclosure          -130    14
c is subject to restrictions as set forth in Rights in Data (g)(3) in           -130    15
c UC/LBNL purchase order 4607010 with J.J. Hirsch & Associates.                 -130    16
      COMMON //       IA(75 000 000)                                            -048a    1
      DIMENSION       AA(75 000 000)                                            -048a    2
      EQUIVALENCE    (AA(1), IA(1))                                             /BLANK/  4
      COMMON /COSTS / FCPLAN,RCPLAN,EU,EUS,EC(25),OMPLAN(25),                   HVAC7    1
     $                OMBLDG(25),OMTOT(25),ECSAV(25),OMSAV(25),                 HVAC7    2
     $                TOTSAV(25),CREPTO,CINTOT,ECBTOT,ECTOT,ECSTOT,             HVAC7    3
     $                OMBSTO,OMPTOT,OMBLTO,OMTO,OMSTOT,TOTS,NY,TINV,PVI,        HVAC7    4
     $                PAYBAC,EUSAV,EUSSAV,EUSPVI,EURPVI,SIR,                    HVAC7    5
     $                BGAREA,BNAREA                                             HVAC7    6
      COMMON /CTRL  / VERS(2),IRPFLG(4),IOVRLL(7),IWRTFL,                       /CTRL/   2
     1                IPROG, IFATAL, NAMPRG(3,7), MTRICR                        /CTRL/   3
      INTEGER        VERS                                                       Rfg1     1
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044a    1
     1                IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL,                        /FILES/  3
     2                IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                    /FILES/  4
     3                IHRREP(3), IHRPAS(2)                                      /FILES/  5
      COMMON  /INTS  / IZERO,IONE,ITWO,ITHREE,IFOUR,IFIVE,ISIX,                 /INTS/   2
     $                 ISEVEN,IEIGHT,ININE,ITEN,                                /INTS/   3
     $                 I11,I12,I13,I14,I15,I16,I17,I18,I19,I20,                 /INTS/   4
     $                 I21,I22,I23,I24,I25,I26,I27,I28,I29,I30,                 /INTS/   5
     $                 I31,I32,I33,I34,I35,I36,I37,I38,I39,I40,                 /INTS/   6
     $                 I41,I42,I43,I44,I45,I46,I47,I48,I49,I50,                 /INTS/   7
     $                 I51,I52,I53,I54,I55,I56,I57,I58,I59,I60,                 /INTS/   8
     $                 I61,I62,I63,I64,I65,I66,I67,I68,I69,I70,                 /INTS/   9
     $                 I71,I72,I73,I74,I75,I76,I77,I78,I79,I80,                 /INTS/  10
     $                 I81,I82,I83,I84,I85,I86,I87,I88,I89,I90,                 /INTS/  11
     $                 I91,I92,I93,I94,I95,I96,I97,I98,I99,I100                 /INTS/  12
      INTEGER          INTS(101)                                                /INTS/  13
      EQUIVALENCE      (INTS(1),IZERO)                                          /INTS/  14
      COMMON /IRUNPD/ NRUNPD, JRUNPD, IRUNPD(6,15)                              /IRUNPD/ 2
      COMMON /NAMES / NAMRES(4,14), WINDOW(2), QUALRT(2,4),                     HVAC30   1
     $                RTYPE(2,2),   NOYES(2),  IBLANK(4)                        HVAC7    8
      COMMON /PTRECO/ IUR, IBC, IRA, IBA, ICC, IMT, IMC, Iextra,                HVAC27   1
     $                NUR, NBC, NRA, NBA, NCC, NMT, NMC, Nem,                   HVAC22   1
     $                LUR, LBC, LRA, LBA, LCC, LMT, LMC,                        HVAC7   11
     $                JUR, JBC, JRA,      JCC, JMT, JMC, Jextra,                HVAC27   2
     $                LenBlockOffset                                            Rfg1     2
      COMMON /TIME  / IDOY, IDOW, IDSTF, ISCHR, ISCDAY, iDSdates(6),            -044e5   1
     1                IMO, IDAY, IYR, IHR, CLOCK(10), IDSFLG,                   HOLID1   2
     2                MONDSC(12), MONLEN(12), MONSDA(12), IEOMDR                /TIME/   4
      COMMON /TITLE / ITITLE(10,5)                                              /TITLE/  2
      COMMON  /REPORT/ IREPRT(4,37),IPRG,IUNIQV(100),IUNIQS(100),IUNIQL         BIGNAM   1
      COMMON /UNITT/   VKONV(300), DUMLOG(4), JUNITT(4,300,2)                   /UNITT/  2
      COMMON /UTLTYS/ TOTCST, KWBTU                                             HVAC17   1
      REAL            KWBTU                                                     /UTLTYS/ 4
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
c                                                                               ECOREP  27
c                                                                               ECOREP  28
      INTEGER   NumEcoRep(30)                                                   ECOREP  29
      INTEGER CLOCK                                                             ECOREP  30
      DIMENSION C(5), CT(5)                                                     ECOREP  31
      DIMENSION TOTALS(26)                                                      ECOREP  32
      DIMENSION NAMQAL(4,8), NAMUSE(3,3)                                        ECOREP  33
      INTEGER UNAMES(8,3,20)                                                    HVAC30   6
      INTEGER PlantEquip(4), ESE(9), ESF(9), NoDesign(3)                        HVAC11   5
      DIMENSION METERS(35)                                                      HVAC30   7
c                                                                               ECOREP  38
c              report generator numbers for economics output reports            ECOREP  39
c              verification (1-15)   summary (16,30)                            ECOREP  40
      DATA NumEcoRep /13,  0,  0,  0,  0,  0,  0,  0,  0,  0,                   ECOREP  41
     1                 0,  0,  0,  0,  0,                                       ECOREP  42
     2                14, 15, 16, 17, 18, 19,  0,  0,  0,  0,                   ECOREP  43
     3                 0,  0,  0,  0,  0/                                       ECOREP  44
c                                                                               ECOREP  45
      DATA NAMQAL /4H   M, 4HIN-E, 4HNERG, 3HY: ,                               ECOREP  46
     2             4H   M, 4HAX-E, 4HNERG, 3HY: ,                               ECOREP  47
     3             4H   M, 4HIN-D, 4HEMAN, 3HD: ,                               ECOREP  48
     4             4H   M, 4HAX-D, 4HEMAN, 3HD: ,                               ECOREP  49
     5             4H QUA, 4HLIFY, 4H-RAT, 3HE: ,                               ECOREP  50
     6             4H USE, 4H-MIN, 4H-QUA, 3HL: ,                               ECOREP  51
     7             4HQUAL, 4HIFIE, 4HR-SC, 3HH: ,                               ECOREP  52
     8             4H   I, 4HNVER, 4HT-SC, 3HH: /                               ECOREP  53
      DATA NAMUSE /4HYEAR, 4HLY  , 4H    ,                                      ECOREP  54
     1             4HSEAS, 4HONAL, 4H    ,                                      ECOREP  55
     2             4HTIME, 4H-OF-, 4HUSE /                                      ECOREP  56
      DATA PlantEquip /4HEQUI, 4HPMEN, 4HT   , 4H    /                          ECOREP  57
      DATA ESE      /4HES-E,4H Sum,4Hmary,4H of ,4HUtil,                        HVAC11   6
     $               4Hity-,4HRate,4H:   ,4H    /                               HVAC11   7
      DATA ESF      /4HES-F,4H Blo,4Hck-C,4Hharg,4Hes a,                        HVAC11   8
     $               4Hnd R,4Hatch,4Hets ,4Hfor /                               HVAC11   9
      DATA NoDesign /4H    ,4H    ,4H    /                                      HVAC11  10
      DATA IBLK   /4H    /                                                      ECOREP  62
c                                                                               ECOREP  63
c              General reports have data stored in dimensioned arrays.          ECOREP  64
c              For those reports, the unique report number required by          ECOREP  65
c              the report generator (Iuniq) is stored in IREPRT(4,x).           ECOREP  66
c                                                                               ECOREP  67
c              Reports specific to a UTILITY-RATE have data stored in           ECOREP  68
c              EDTT variables.  For those reports, Iuniq is stored as           ECOREP  69
c              an EDTT variable.                                                ECOREP  70
c                                                                               ECOREP  71
c              Reports for fuels must have units that change according          ECOREP  72
c              to the fuel type (NATURAL-GAS, etc.).  This routine must         ECOREP  73
c              output the correct units, as the report generator cannot         ECOREP  74
c              accommodate units that change from one fuel type to the          ECOREP  75
c              next.                                                            ECOREP  76
c                                                                               ECOREP  77
c              Conversion factor                                                ECOREP  78
      BTUMWH = KWBTU * 1000.                                                    ECOREP  79
c              Set the units - english or metric                                ECOREP  80
      IUNIT = 2                                                                 ECOREP  81
      IF (MTRICR .EQ. 1)  IUNIT = 1                                             ECOREP  82
c                                                                               ECOREP  83
c              Check if reports are being initialized                           ECOREP  84
      IF (Mode .GT. 0)  GOTO(1000,2000), Mode                                   ECOREP  85
c                                                                               ECOREP  86
c              Report initialization                                            ECOREP  87
      REWIND IREPFL                                                             ECOREP  88
      WRITE (IREPFL) 0,IPROG,(CLOCK(i),i=1,8),VERS,                             REPHDR   2
     $               ITITLE,NRUNPD,IRUNPD,IWDID                                 REPHDR   3
c              make Iuniq positive                                              ECOREP  90
      Iuniq = -Mode                                                             ECOREP  91
c                                                                               ECOREP  92
c              Verification reports                                             ECOREP  93
      DO  I=1,14                                                                ECOREP  94
        IF (IREPRT(4,I) .GT. 0  .AND.  NumEcoRep(I) .GT. 0)  THEN               ECOREP  95
          WRITE(IREPFL)  IFOUR, Iuniq, IFOUR, NumEcoRep(I), IONE                ECOREP  96
c              store the unique report number for this report                   ECOREP  97
          IREPRT(4,I) = Iuniq                                                   ECOREP  98
c              increment the unique report number for the next report           ECOREP  99
          Iuniq = Iuniq + 1                                                     ECOREP 100
        ELSE                                                                    ECOREP 101
          IREPRT(4,I) = 0                                                       ECOREP 102
        ENDIF                                                                   ECOREP 103
      ENDDO                                                                     ECOREP 104
c              Skip summary report initialization if no run is to be            ECOREP 105
c              made                                                             ECOREP 106
      IF (IREPRT(4,15) .EQ. 1)  GOTO 500                                        ECOREP 107
c                                                                               ECOREP 108
c              Summary reports                                                  ECOREP 109
c              ES-A thru ES-D                                                   ECOREP 110
      DO  I=16,19                                                               ECOREP 111
        IF (IREPRT(4,I) .GT. 0  .AND.  NumEcoRep(I) .GT. 0)  THEN               ECOREP 112
          WRITE(IREPFL)  IFOUR, Iuniq, IFOUR, NumEcoRep(I), IONE                ECOREP 113
c              store the unique report number for this report                   ECOREP 114
          IREPRT(4,I) = Iuniq                                                   ECOREP 115
c              increment the unique report number for the next report           ECOREP 116
          Iuniq = Iuniq + 1                                                     ECOREP 117
        ELSE                                                                    ECOREP 118
          IREPRT(4,I) = 0                                                       ECOREP 119
        ENDIF                                                                   ECOREP 120
      ENDDO                                                                     ECOREP 121
c                                                                               ECOREP 122
c              ES-E, one report for each UTILITY-RATE                           ECOREP 123
      IF (IREPRT(4,20) .GT. 0  .AND.  NumEcoRep(20) .GT. 0)  THEN               ECOREP 124
        DO  NURR=1,NUR                                                          ECOREP 125
          JUR = IUR + (NURR-1)*LUR                                              ECOREP 126
          WRITE(IREPFL) IFOUR, Iuniq, IFOUR, NumEcoRep(20), IONE                ECOREP 127
c              store the unique number for this report                          ECOREP 128
          <UR_ES-E_IUNIQ> = Iuniq                                               ECOREP 129
          Iuniq = Iuniq + 1                                                     ECOREP 130
c              Put report ES-F immediately following the                        ECOREP 131
c              parent UTILITY-RATE.  Dont print if no RATCHETS                  ECOREP 132
c              or BLOCK-CHARGES                                                 ECOREP 133
          IF (IREPRT(4,21) .GT. 0  .AND.  NumEcoRep(21) .GT. 0  .AND.           ECOREP 134
     $               (<NUM-BLOCK-CHGS>+<NUM_ALL_RATCHETS> .GT. 0))  THEN        ECOREP 135
            WRITE(IREPFL) IFOUR, Iuniq, IFOUR, NumEcoRep(21), IONE              ECOREP 136
c              store the unique number for this report                          ECOREP 137
            <UR_ES-F_IUNIQ> = Iuniq                                             ECOREP 138
            Iuniq = Iuniq + 1                                                   ECOREP 139
          ENDIF                                                                 ECOREP 140
        ENDDO                                                                   ECOREP 141
      ELSE                                                                      ECOREP 142
        IREPRT(4,20) = 0                                                        ECOREP 143
      ENDIF                                                                     ECOREP 144
c                                                                               ECOREP 145
c                                                                               ECOREP 146
  500 CONTINUE                                                                  ECOREP 147
c              Now write the initial records for each report,                   ECOREP 148
c              which includes all verification and design information           ECOREP 149
c                                                                               ECOREP 150
c              EV-A - Life-cycle costing parameters                             ECOREP 151
      IF (IREPRT(4,1) .EQ. 0)  GOTO 200                                         ECOREP 152
        Iuniq = IREPRT(4,1)                                                     ECOREP 153
        WRITE(IREPFL) IEIGHT,Iuniq,IONE,IONE,IFOUR,                             ECOREP 154
     $     <DISCOUNT-RATE>, <LABOR-INFLTN>,                                     ECOREP 155
     $     <MATERIALS-INFLTN>, <PROJECT-LIFE>                                   ECOREP 156
        WRITE(IREPFL) IFOUR,Iuniq,IONE,ITWO,IZERO                               ECOREP 157
c              skip rest if no COMPONENT-COSTS or MATERIALS-COSTs               ECOREP 158
        IF (NCC .EQ. 0  .AND.  NMC .EQ. 0)  THEN                                ECOREP 159
          WRITE(IREPFL) IFOUR,Iuniq,IONE,IFIVE,IZERO                            HVAC12   1
        ELSE                                                                    ECOREP 161
c              loop over component costs                                        ECOREP 162
          DO  NC=1,NCC                                                          ECOREP 163
            JCC = ICC + (NC-1)*LCC                                              ECOREP 164
            WRITE(IREPFL) I21,Iuniq,IONE,ITHREE,I17,                            ECOREP 165
     $        (<CC-NAME>,II=1,4), <CC-NUMBER>, (<CC-UNIT-NAME>,II=1,4),         ECOREP 166
     $        <CC-LIFE>,<CC-FIRST-COST>,<CC-INSTALL-COST>,                      ECOREP 167
     $        <CC-ANNUAL-COST>,<CC-MIN-OVHL-COST>,<CC-MIN-OVHL-INT>,            ECOREP 168
     $        <CC-MAJ-OVHL-COST>,<CC-MAJ-OVHL-INT>                              ECOREP 169
          ENDDO                                                                 ECOREP 170
c              Loop over MATERIALS-COST blocks defined in SYSTEMS/PLANT         ECOREP 171
          DO IM=1,NMC                                                           ECOREP 172
            JMC = IMC + (IM-1)*LMC                                              ECOREP 173
            WRITE(IREPFL) I21,Iuniq,IONE,IFOUR,I17,                             HVAC12   2
     $        (<MC-NAME>,II=1,4), 1., (PlantEquip(I),I=1,4),                    ECOREP 175
     $        <EQUIPMENT-LIFE>,<FIRST-COST>,<INSTALLATION>,                     ECOREP 176
     $        <MAINTENANCE>,<MINOR-OVHL-COST>,<MINOR-OVHL-INT>,                 ECOREP 177
     $        <MAJOR-OVHL-COST>,<MAJOR-OVHL-INT>                                ECOREP 178
          ENDDO                                                                 ECOREP 179
        ENDIF                                                                   ECOREP 180
        WRITE (IREPFL) ITWO, Iuniq, ISEVEN                                      ECOREP 181
  200 CONTINUE                                                                  ECOREP 182
                                                                                ECOREP 183
 1000 CONTINUE                                                                  ECOREP 184
      RETURN                                                                    ECOREP 185
c                                                                               ECOREP 186
 2000 CONTINUE                                                                  ECOREP 187
c              Year end summaries                                               ECOREP 188
c              ES-A (16)                                                        ECOREP 189
      IF (IREPRT(4,16) .EQ. 0)  GOTO 2170                                       ECOREP 190
      Iuniq = IREPRT(4,16)                                                      ECOREP 191
      WRITE (IREPFL) IFOUR, Iuniq, IONE, IONE, IZERO                            ECOREP 192
c              loop over years in project lifetime                              ECOREP 193
      DO  IY=1,NY                                                               ECOREP 194
        WRITE (IREPFL) I14, Iuniq, IONE, ITWO, ITEN,                            ECOREP 195
     $    IY, <BA-ENERGY-COST>,EC(IY),ECSAV(IY),                                ECOREP 196
     $    <BA-OPER-COST>,OMPLAN(IY),OMBLDG(IY),OMTOT(IY),OMSAV(IY),             ECOREP 197
     $    TOTSAV(IY)                                                            ECOREP 198
      ENDDO                                                                     ECOREP 199
c              year-end totals                                                  ECOREP 200
      WRITE (IREPFL) IFOUR, Iuniq, IONE, ITHREE, IZERO                          ECOREP 201
      WRITE (IREPFL) I13, Iuniq, IONE, IFOUR, ININE,                            ECOREP 202
     &             ECBTOT,ECTOT,ECSTOT,OMBSTO,OMPTOT,                           ECOREP 203
     &             OMBLTO,OMTO,OMSTOT,TOTS                                      ECOREP 204
      WRITE (IREPFL) ITWO, Iuniq, ISEVEN                                        ECOREP 205
c                                                                               ECOREP 206
c              ES-B (17)                                                        ECOREP 207
 2170 IF (IREPRT(4,17) .EQ. 0)  GOTO 2180                                       ECOREP 208
      Iuniq = IREPRT(4,17)                                                      ECOREP 209
      WRITE (IREPFL) IFOUR, Iuniq, IONE, IONE, IZERO                            ECOREP 210
      DO  I=1,5                                                                 ECOREP 211
        CT(I)  = 0.                                                             ECOREP 212
      ENDDO                                                                     ECOREP 213
      IF (NCC .EQ. 0  .AND.  NMC .EQ. 0)  THEN                                  ECOREP 214
c              No component costs defined                                       ECOREP 215
        WRITE (IREPFL) IFOUR, Iuniq, IONE, ITHREE, IZERO                        ECOREP 216
      ELSE                                                                      ECOREP 217
c              COMPONENT-COSTS                                                  ECOREP 218
        DO  NC=1,NCC                                                            ECOREP 219
          JCC = ICC + (NC-1)*LCC                                                ECOREP 220
C              first cost including installation                                ECOREP 221
          C(1)   = <CC_FIRST_TOTAL> + <CC_INSTALL_TOTAL>                        ECOREP 222
C              life-cycle cost of replacements                                  ECOREP 223
          C(2)   = <CC_REPLACE_PV>                                              ECOREP 224
C              life-cycle operations cost                                       ECOREP 225
C              (annual cost plus major and minor overhauls)                     ECOREP 226
          C(3)   = <CC_ANNUAL_PV> + <CC_OVERHAUL_PV>                            ECOREP 227
C              total life-cycle cost                                            ECOREP 228
          C(4)   = C(1) + C(2) + C(3)                                           ECOREP 229
C              first cost plus replacements (investment)                        ECOREP 230
          C(5)   = C(1) + C(2)                                                  ECOREP 231
C              sum component costs                                              ECOREP 232
          DO  J=1,5                                                             ECOREP 233
            CT(J)  = CT(J) + C(J)                                               ECOREP 234
          ENDDO                                                                 ECOREP 235
          WRITE (IREPFL) I17, Iuniq, IONE, ITWO, I13,                           HVAC30   8
     $      (<CC-NAME>,II=1,8),(C(J),J=1,5)                                     HVAC30   9
        ENDDO                                                                   ECOREP 238
c              MATERIALS-COSTS                                                  ECOREP 239
        DO  NC=1,NMC                                                            ECOREP 240
          JMC = IMC + (NC-1)*LMC                                                ECOREP 241
C              first cost including installation                                ECOREP 242
          C(1)   = <FIRST_TOTAL> + <INSTALL_TOTAL>                              ECOREP 243
C              life-cycle cost of replacements                                  ECOREP 244
          C(2)   = <REPLACE_PV>                                                 ECOREP 245
C              life-cycle operations cost                                       ECOREP 246
C              (annual cost plus major and minor overhauls)                     ECOREP 247
          C(3)   = <ANNUAL_PV> + <OVERHAUL_PV>                                  ECOREP 248
C              total life-cycle cost                                            ECOREP 249
          C(4)   = C(1) + C(2) + C(3)                                           ECOREP 250
C              first cost plus replacements (investment)                        ECOREP 251
          C(5)   = C(1) + C(2)                                                  ECOREP 252
C              sum component costs                                              ECOREP 253
          DO  J=1,5                                                             ECOREP 254
            CT(J)  = CT(J) + C(J)                                               ECOREP 255
          ENDDO                                                                 ECOREP 256
            WRITE (IREPFL) I17, Iuniq, IONE, IFIVE, I13,                        HVAC30  10
     $        (<MC-NAME>,II=1,8),(C(J),J=1,5)                                   HVAC30  11
        ENDDO                                                                   ECOREP 259
c              totals                                                           ECOREP 260
        WRITE (IREPFL) ININE, Iuniq, IONE, IFOUR, IFIVE,                        ECOREP 261
     &    (CT(I),I=1,5)                                                         ECOREP 262
      ENDIF                                                                     ECOREP 263
      WRITE (IREPFL) ITWO, Iuniq, ISEVEN                                        ECOREP 264
c                                                                               ECOREP 265
c              ES-C (18)                                                        ECOREP 266
 2180 IF (IREPRT(4,18) .EQ. 0)  GOTO 2190                                       ECOREP 267
      Iuniq = IREPRT(4,18)                                                      ECOREP 268
      WRITE (IREPFL) IFOUR, Iuniq, IONE, IONE, IZERO                            ECOREP 269
c              percent energy savings relative to baseline                      ECOREP 270
      IF(<BA-SITE-ENERGY> .NE. 0.)  THEN                                        ECOREP 271
        PERBLD = 100.*(EUSAV/<BA-SITE-ENERGY>)                                  ECOREP 272
      ELSE                                                                      ECOREP 273
        PERBLD = 0.                                                             ECOREP 274
      ENDIF                                                                     ECOREP 275
      IF(<BA-SOURCE-ENERGY> .NE. 0.)  THEN                                      ECOREP 276
        PERSRC = 100.*(EUSSAV/<BA-SOURCE-ENERGY>)                               ECOREP 277
      ELSE                                                                      ECOREP 278
        PERSRC = 0.                                                             ECOREP 279
      ENDIF                                                                     ECOREP 280
      WRITE (IREPFL) I12, Iuniq, IONE, ITWO, IEIGHT,                            ECOREP 281
     $  <BA-SITE-ENERGY>,   EU, EUSAV,  PERBLD,                                 ECOREP 282
     $  <BA-SOURCE-ENERGY>,EUS, EUSSAV, PERSRC                                  ECOREP 283
      WRITE (IREPFL) IFIVE, Iuniq, IONE, ITHREE, IONE,                          ECOREP 284
     $  <PROJECT-LIFE>                                                          ECOREP 285
      WRITE (IREPFL) I12, Iuniq, IONE, IFOUR, IEIGHT,                           ECOREP 286
     $  TINV,<BA-REPLACE-COST>,PVI,TOTS,SIR,PAYBAC,                             ECOREP 287
     $                EUSPVI,EURPVI                                             ECOREP 288
c              overall life-cycle costs                                         ECOREP 289
      WRITE (IREPFL) IFOUR, Iuniq, IONE, IFIVE, IZERO                           ECOREP 290
c              total first cost                                                 ECOREP 291
      CINTOT = CINTOT + FCPLAN                                                  ECOREP 292
c              total replacement cost                                           ECOREP 293
      CREPTO = CREPTO + RCPLAN                                                  ECOREP 294
c              total baseline life-cycle cost                                   ECOREP 295
      BLCC   = <BA-FIRST-COST> + OMBSTO + <BA-REPLACE-COST> + ECBTOT            ECOREP 296
c              total life-cycle cost for present case                           ECOREP 297
      TLCC   = CINTOT + OMTO  + CREPTO + ECTOT                                  ECOREP 298
c              savings (baseline minum this run)                                ECOREP 299
      S1     = <BA-FIRST-COST> - CINTOT                                         ECOREP 300
      S2     = OMBSTO - OMTO                                                    ECOREP 301
      S3     = <BA-REPLACE-COST> - CREPTO                                       ECOREP 302
      S4     = ECBTOT - ECTOT                                                   ECOREP 303
      S5     = BLCC - TLCC                                                      ECOREP 304
c              percent savings                                                  ECOREP 305
      PS1    = 0.                                                               ECOREP 306
      PS2    = 0.                                                               ECOREP 307
      PS3    = 0.                                                               ECOREP 308
      PS4    = 0.                                                               ECOREP 309
      PS5    = 0.                                                               ECOREP 310
      IF(<BA-FIRST-COST> .GT. 0.0)   PS1 = 100.*S1/<BA-FIRST-COST>              ECOREP 311
      IF(OMBSTO .GT. 0.)             PS2 = 100.*S2/OMBSTO                       ECOREP 312
      IF(<BA-REPLACE-COST> .GT. 0.)  PS3 = 100.*S3/<BA-REPLACE-COST>            ECOREP 313
      IF(ECBTOT .GT. 0.)             PS4 = 100.*S4/ECBTOT                       ECOREP 314
      IF(BLCC .GT. 0.)               PS5 = 100.*S5/BLCC                         ECOREP 315
      WRITE (IREPFL) I14, Iuniq, IONE, ISIX, ITEN,                              ECOREP 316
     $  <BA-FIRST-COST>,OMBSTO,<BA-REPLACE-COST>,                               ECOREP 317
     $  ECBTOT,BLCC,CINTOT,                                                     ECOREP 318
     1  OMTO ,CREPTO,ECTOT,TLCC                                                 ECOREP 319
      WRITE (IREPFL) IFOUR, Iuniq, IONE, ISEVEN, IZERO                          ECOREP 320
      WRITE (IREPFL) I14, Iuniq, IONE, IEIGHT, ITEN,                            ECOREP 321
     $  S1,S2,S3,S4,S5,PS1,PS2,PS3,PS4,PS5                                      ECOREP 322
      WRITE (IREPFL) ITWO, Iuniq, ISEVEN                                        ECOREP 323
c              end of ES-C                                                      ECOREP 324
c                                                                               ECOREP 325
c              ES-D (19)                                                        ECOREP 326
 2190 IF (IREPRT(4,19) .EQ. 0)  GOTO 2200                                       ECOREP 327
      Iuniq = IREPRT(4,19)                                                      ECOREP 328
      WRITE (IREPFL) IFOUR, Iuniq, IONE, IONE, IZERO                            ECOREP 329
c              write a line for each utility                                    ECOREP 330
      DO  IURN=1,NUR                                                            ECOREP 331
        JUR     = IUR + (IURN-1)*LUR                                            ECOREP 332
        IRES    = <UR-TYPE>                                                     ECOREP 333
        ENERGY  = <UR-YR-ENGY>                                                  ECOREP 334
        ECOST   = <UR-YR-CHG>                                                   ECOREP 335
        IQUAL   = <UR-YR-QUALIFY> + 1                                           ECOREP 336
        VIRRAT  = 0.                                                            ECOREP 337
        IF (ENERGY .NE. 0.)  VIRRAT = ECOST / ENERGY                            HVAC27   5
c              transfer meter names into output array                           ECOREP 339
        NMETER = <NUM-METERS>                                                   ECOREP 340
        II     = 1                                                              ECOREP 341
        DO  IM=1,NMETER                                                         ECOREP 342
          JMT        = <UR-METERS>                                              ECOREP 343
          METERS(IM) = <METER-NAME>                                             ECOREP 344
        ENDDO                                                                   ECOREP 345
        IF (NMETER .LT. 26)  THEN                                               ECOREP 346
          IBEGIN = NMETER + 1                                                   HVAC12   4
          DO  IM=IBEGIN,26                                                      HVAC12   5
            METERS(IM) = IBLANK(1)                                              ECOREP 349
          ENDDO                                                                 ECOREP 350
        ENDIF                                                                   ECOREP 351
c              get pointer to first meter in this UTILITY-RATE so               ECOREP 352
c              that the UNIT-INDEX can be picked up                             ECOREP 353
        IM  = 1                                                                 ECOREP 354
        JMT = <UR-METERS>                                                       ECOREP 355
        WRITE (IREPFL)  I24, Iuniq, IONE, ITWO, I20,                            HVAC30  12
     $    (<UR-NAME>,II=1,8), (NAMRES(II,IRES),II=1,4),                         HVAC30  13
     $    (METERS(IM),IM=1,2), ENERGY,                                          ECOREP 358
     $    (JUNITT(I,<METER-UNIT-INDEX>,IUNIT),I=1,2),                           ECOREP 359
     $    ECOST, VIRRAT, NOYES(IQUAL)                                           ECOREP 360
        IF (NMETER .GT. 2)  THEN                                                ECOREP 361
          Nprint  = 1                                                           ECOREP 362
   40     Nprint  = Nprint + 2                                                  ECOREP 363
          Nprint1 = Nprint + 1                                                  ECOREP 364
          WRITE (IREPFL) ISIX, Iuniq, IONE, ITHREE, ITWO,                       HVAC12   6
     $      (METERS(IM),IM=Nprint,Nprint1)                                      ECOREP 366
          IF (Nprint1 .LT. NMETER)  GOTO 40                                     ECOREP 367
        ENDIF                                                                   ECOREP 368
      ENDDO                                                                     ECOREP 369
c                                                                               ECOREP 370
c               totals                                                          ECOREP 371
      WRITE (IREPFL) IFIVE, Iuniq, IONE, IFOUR, IONE, TOTCST                    ECOREP 372
c               energy cost per bldg area                                       ECOREP 373
      ECOST = TOTCST / BGAREA                                                   ECOREP 374
      WRITE (IREPFL) IFIVE, Iuniq, IONE, IFIVE, IONE, ECOST                     ECOREP 375
      ECOST = TOTCST / BNAREA                                                   ECOREP 376
      WRITE (IREPFL) IFIVE, Iuniq, IONE, ISIX, IONE, ECOST                      ECOREP 377
      WRITE (IREPFL) ITWO, Iuniq, ISEVEN                                        ECOREP 386
c               end of report ES-D                                              ECOREP 387
c                                                                               ECOREP 388
c              ES-E (20)                                                        ECOREP 389
 2200 IF (IREPRT(4,20) .EQ. 0)  GOTO 2210                                       ECOREP 390
c              loop thru for each UTILITY-RATE                                  ECOREP 391
      DO 2201  IURN=1,NUR                                                       ECOREP 392
        JUR     = IUR + (IURN-1)*LUR                                            ECOREP 393
        Iuniq   = <UR_ES-E_IUNIQ>                                               ECOREP 394
c              put the name of the UTILITY-RATE in the title                    ECOREP 395
        WRITE(IREPFL) I22,Iuniq, ISIX,                                          ECOREP 396
     $    ESE, (<UR-NAME>,II=1,8), NoDesign                                     HVAC11  11
c              get pointer to first meter in this UTILITY-RATE so               ECOREP 398
c              that the UNIT-INDEX can be picked up                             ECOREP 399
        IM  = 1                                                                 ECOREP 400
        JMT = <UR-METERS>                                                       ECOREP 401
c                                                                               ECOREP 402
c               transfer the U-NAMES of applicable BLOCK-CHARGES and RATCHETS   ECOREP 403
        DO  I=1,480                                                             HVAC30  14
          UNAMES(I,1,1) = IBLANK(1)                                             HVAC30  15
        ENDDO                                                                   ECOREP 406
c               Fill the U-name array with block-charges and ratchets           HVAC30  16
c               first BLOCK-CHARGES                                             HVAC30  17
        NURBC = MIN(20,<NUM-BLOCK-CHGS>)                                        HVAC30  18
        NumBlocksOrRatchets = NURBC                                             HVAC30  19
        DO  JB=1,NURBC                                                          HVAC30  20
          JBC = <BLOCK-CHARGES>                                                 HVAC30  21
          DO  II=1,8                                                            HVAC30  22
            UNAMES(II,1,JB) = <BC-NAME>                                         HVAC30  23
          ENDDO                                                                 HVAC30  24
        ENDDO                                                                   HVAC30  25
c               now demand RATCHETS                                             HVAC30  26
        NURR = MIN(20, <NUM-DEM-RATCHETS>)                                      HVAC30  27
        NumBlocksOrRatchets = MAX(NumBlocksOrRatchets, NURR)                    HVAC30  28
        DO  JR=1,NURR                                                           HVAC30  29
          JRA = <UR-DEM-RATCHETS>                                               HVAC30  30
          DO  II=1,8                                                            HVAC30  31
            UNAMES(II,2,JR) = <R-NAME>                                          HVAC30  32
          ENDDO                                                                 HVAC30  33
        ENDDO                                                                   HVAC30  34
c               now MIN-MON-RATCHETS                                            HVAC30  35
        NURR = MIN(20, <NUM-MIN-MON-RAT>)                                       HVAC30  36
        NumBlocksOrRatchets = MAX(NumBlocksOrRatchets, NURR)                    HVAC30  37
        DO  JR=1,NURR                                                           HVAC30  38
          JRA = <MIN-MON-RATCHETS>                                              HVAC30  39
          DO  II=1,8                                                            HVAC30  40
             UNAMES(II,3,JR) = <R-NAME>                                         HVAC30  41
          ENDDO                                                                 HVAC30  42
        ENDDO                                                                   HVAC30  43
c               totals for miscellaneous items                                  ECOREP 440
        DO  I=1,9                                                               ECOREP 441
          TOTALS(I) = 0.                                                        ECOREP 442
        ENDDO                                                                   ECOREP 443
        DO  IB = 1,12                                                           ECOREP 444
          TOTALS(1) = TOTALS(1) + <UR-MTR-ENGY>                                 ECOREP 445
          TOTALS(2) = TOTALS(2) + <UR-BILL-ENGY>                                ECOREP 446
          TOTALS(3) = AMAX1(TOTALS(3), <UR-MTR-DEM>)                            ECOREP 447
          TOTALS(4) = TOTALS(4) + <UR-BILL-ENGY-CHG>                            ECOREP 448
          TOTALS(5) = TOTALS(5) + <UR-BILL-DEM-CHG>                             ECOREP 449
          TOTALS(6) = TOTALS(6) + <UR-BILL-ECA-CHG>                             ECOREP 450
          TOTALS(7) = TOTALS(7) + <UR-BILL-TAXES>                               ECOREP 451
          TOTALS(8) = TOTALS(8) + <UR-BILL-SRGS>                                ECOREP 452
          TOTALS(9) = TOTALS(9) + <MONTH-CHGS>                                  ECOREP 453
        ENDDO                                                                   ECOREP 454
c              number of meters                                                 ECOREP 455
        NMETER = <NUM-METERS>                                                   ECOREP 456
        NLEFT  = 6 - NMETER                                                     ECOREP 457
c                                                                               ECOREP 458
        IRES = <UR-TYPE>                                                        ECOREP 459
        IWIN = INT(<DEMAND-INTERVAL>)                                           HVAC22   7
        IF (IWIN .GT. 60)  IWIN = 24                                            HVAC22   8
        WRITE (IREPFL) I12, Iuniq, IONE, IONE, IEIGHT,                          HVAC30  44
     $    (NAMRES(I,IRES),I=1,4),                                               HVAC30  45
     $    IWIN,  1./<METER-BTU/UNIT>,                                           HVAC22  11
     $    (JUNITT(I,<METER-UNIT-INDEX>,IUNIT),I=1,2)                            ECOREP 464
c                                                                               ECOREP 465
        IB = 1                                                                  ECOREP 466
        WRITE (IREPFL) ISIX, Iuniq, IONE, ITWO, ITWO,                           ECOREP 467
     $    <BILLING-DAY>, <RATE-LIMITATION>                                      ECOREP 468
c              transfer meter names into output array                           HVAC30  46
        NMETER = MIN(34, <NUM-METERS>)                                          HVAC30  47
        II     = 1                                                              ECOREP 471
        DO  IM=1,NMETER                                                         ECOREP 472
          JMT        = <UR-METERS>                                              ECOREP 473
          METERS(IM) = <METER-NAME>                                             ECOREP 474
        ENDDO                                                                   ECOREP 475
        IF (NMETER .LT. 35)  THEN                                               HVAC30  48
          NMETER = NMETER + 1                                                   HVAC30  49
          DO  IM=NMETER,35                                                      HVAC30  50
            METERS(IM) = IBLANK(1)                                              ECOREP 479
          ENDDO                                                                 ECOREP 480
        ENDIF                                                                   ECOREP 481
        WRITE (IREPFL) NMETER+4, Iuniq, IONE, ITHREE, NMETER,                   ECOREP 482
     $    (METERS(IM),IM=1,NMETER)                                              ECOREP 483
c                                                                               ECOREP 484
c               write POWER-FACTOR stuff only if electricity                    ECOREP 485
        IF (IRES .EQ. 3)                                                        ECOREP 486
     $    WRITE (IREPFL) ISEVEN, Iuniq, IONE, IFOUR, ITHREE,                    ECOREP 487
     $      <POWER-FACTOR>, <EXCESS-KVAR-FRAC>, <EXCESS-KVAR-CHG>               ECOREP 488
c                                                                               ECOREP 489
        WRITE (IREPFL) IFOUR, Iuniq, IONE, IFIVE, IZERO                         ECOREP 490
c                                                                               ECOREP 491
        ID = 1                                                                  ECOREP 492
        WRITE (IREPFL) I33, Iuniq, IONE, ISIX, I29,                             HVAC30  51
     $    (NAMQAL(I,1),I=1,4), <ENERGY-QUALS>,                                  HVAC30  52
     $    ((UNAMES(I,J,1),I=1,8),J=1,3)                                         HVAC30  53
        ID = 2                                                                  HVAC30  54
        WRITE (IREPFL) I33, Iuniq, IONE, ISIX, I29,                             HVAC30  55
     $    (NAMQAL(I,2),I=1,4), <ENERGY-QUALS>,                                  HVAC30  56
     $    ((UNAMES(I,J,2),I=1,8),J=1,3)                                         HVAC30  57
        ID = 1                                                                  HVAC30  58
        WRITE (IREPFL) I33, Iuniq, IONE, ISIX, I29,                             HVAC30  59
     $    (NAMQAL(I,3),I=1,4), <DEMAND-QUALS>,                                  HVAC30  60
     $    ((UNAMES(I,J,3),I=1,8),J=1,3)                                         HVAC30  61
        ID = 2                                                                  HVAC30  62
        WRITE (IREPFL) I33, Iuniq, IONE, ISIX, I29,                             HVAC30  63
     $    (NAMQAL(I,4),I=1,4), <DEMAND-QUALS>,                                  HVAC30  64
     $    ((UNAMES(I,J,4),I=1,8),J=1,3)                                         HVAC30  65
        ID = <QUALIFY-RATE>                                                     HVAC30  66
        WRITE (IREPFL) I34, Iuniq, IONE, ISEVEN, I30,                           HVAC30  67
     $    (NAMQAL(I,5),I=1,4), (QUALRT(I,ID),I=1,2),                            HVAC30  68
     $    ((UNAMES(I,J,5),I=1,8),J=1,3)                                         HVAC30  69
        ID = <USE-MIN-QUAL> + 1                                                 HVAC30  70
        WRITE (IREPFL) I33, Iuniq, IONE, IEIGHT, I29,                           HVAC30  71
     $    (NAMQAL(I,6),I=1,4), NOYES(ID),                                       HVAC30  72
     $    ((UNAMES(I,J,6),I=1,8),J=1,3)                                         HVAC30  73
        IF (NumBlocksOrRatchets .GT. 6)  THEN                                   HVAC30  74
          DO Line=7,NumBlocksOrRatchets                                         HVAC30  75
            WRITE (IREPFL) I28, Iuniq, IONE, I13,I24,                           HVAC30  76
     $      ((UNAMES(I,J,Line),I=1,8),J=1,3)                                    HVAC30  77
          ENDDO                                                                 HVAC30  78
        ENDIF                                                                   HVAC30  79
c                                                                               ECOREP 516
c               now monthly stuff                                               ECOREP 517
        WRITE (IREPFL) IFOUR, Iuniq, IONE, ININE, IZERO                         ECOREP 518
        WRITE (IREPFL) I12, Iuniq, IONE, ITEN, IEIGHT,                          ECOREP 519
     $    (JUNITT(I,<METER-UNIT-INDEX>,IUNIT),I=1,2),                           ECOREP 520
     $    (JUNITT(I,<METER-UNIT-INDEX>,IUNIT),I=1,2),                           ECOREP 521
     $    (JUNITT(I,<METER-DEM-INDEX>,IUNIT),I=1,2),                            ECOREP 522
     $    (JUNITT(I,<METER-DEM-INDEX>,IUNIT),I=1,2)                             ECOREP 523
c                                                                               ECOREP 524
        DO IB=1,12                                                              ECOREP 525
          VIRRAT = 0.                                                           ECOREP 526
          IF (<UR-MTR-ENGY> .NE. 0.)                                            ECOREP 527
     $                             VIRRAT = <UR-BILL-CHG>/<UR-MTR-ENGY>         ECOREP 528
          WRITE (IREPFL) I18, Iuniq, IONE, I11, I14,                            HVAC12   7
     $      MONDSC(IB), INT(<UR-MTR-ENGY>+.5),                                  HVAC12   8
     $      INT(<UR-BILL-ENGY>+.5),        <UR-MTR-DEM>,                        HVAC12   9
     $      <UR-BILL-DEM>,             INT(<UR-BILL-ENGY-CHG>+.5),              HVAC12  10
     $      INT(<UR-BILL-DEM-CHG>+.5), INT(<UR-BILL-ECA-CHG>+.5),               HVAC12  11
     $      INT(<UR-BILL-TAXES>+.5),   INT(<UR-BILL-SRGS>+.5),                  HVAC12  12
     $      INT(<MONTH-CHGS>+.5),      INT(<MIN-MON-CHGS>+.5),                  HVAC12  13
     $      VIRRAT,                    INT(<UR-BILL-CHG>+.5)                    HVAC12  14
        ENDDO                                                                   ECOREP 548
c                                                                               ECOREP 549
c               totals                                                          ECOREP 550
        VIRRAT = 0.                                                             ECOREP 551
        IF (TOTALS(1) .NE. 0.)  VIRRAT = <UR-YR-CHG> / TOTALS(1)                ECOREP 552
        WRITE (IREPFL) I15, Iuniq, IONE, I12, I11,                              HVAC12  15
     $    (INT(TOTALS(I)+.5),I=1,2), TOTALS(3),                                 ECOREP 554
     $    (INT(TOTALS(I)+.5),I=4,9), VIRRAT,                                    ECOREP 555
     $    INT(<UR-YR-CHG>+.5)                                                   ECOREP 556
        WRITE (IREPFL) ITWO, Iuniq, ISEVEN                                      ECOREP 557
c              end of UTILITY-RATE output                                       ECOREP 558
 2201 CONTINUE                                                                  ECOREP 559
c              end of report ES-E                                               ECOREP 560
c                                                                               ECOREP 561
c               Report ES-F (21)                                                ECOREP 562
 2210 IF (IREPRT(4,21) .EQ. 0)  GOTO 2220                                       ECOREP 563
c              loop thru for each UTILITY-RATE                                  ECOREP 564
      DO 2215  IURN=1,NUR                                                       ECOREP 565
        JUR     = IUR + (IURN-1)*LUR                                            ECOREP 566
        Iuniq = <UR_ES-F_IUNIQ>                                                 ECOREP 567
        IF (Iuniq .EQ. 0)  GOTO 2215                                            ECOREP 568
c              put the name of the UTILITY-RATE in the title                    ECOREP 569
        WRITE(IREPFL) I22,Iuniq, ISIX,                                          ECOREP 570
     $    ESF, (<UR-NAME>,II=1,8), NoDesign                                     HVAC11  12
        IRES = <UR-TYPE>                                                        ECOREP 572
        IWIN = INT(<DEMAND-INTERVAL>)                                           HVAC22  12
        IF (IWIN .GT. 60)  IWIN = 24                                            HVAC22  13
c              get pointer to first meter in this UTILITY-RATE so               ECOREP 574
c              that the UNIT-INDEX can be picked up                             ECOREP 575
        IM  = 1                                                                 ECOREP 576
        JMT = <UR-METERS>                                                       ECOREP 577
c                                                                               ECOREP 578
        WRITE (IREPFL) I13, Iuniq, IONE, IONE, ININE,                           HVAC30  80
     $    (NAMRES(II,IRES),II=1,4),                                             HVAC30  81
     1    (JUNITT(I,<METER-UNIT-INDEX>,IUNIT),I=1,2),                           ECOREP 581
     2    (JUNITT(I,<METER-DEM-INDEX>,IUNIT),I=1,2),                            ECOREP 582
     3    IWIN                                                                  HVAC22  14
c                                                                               ECOREP 584
c               Skip the BLOCK-CHARGES section if no BLOCK-CHARGES              ECOREP 585
        NURBC = <NUM-BLOCK-CHGS>                                                ECOREP 586
        IF (NURBC .EQ. 0)  GOTO 2213                                            ECOREP 587
c                                                                               ECOREP 588
        WRITE (IREPFL) I16, Iuniq, IONE, ITWO, I12,                             ECOREP 589
     &    (MONDSC(I),I=1,12)                                                    ECOREP 590
c               monthly totals                                                  ECOREP 591
        DO  IB=1,26                                                             ECOREP 592
          TOTALS(IB) = 0.                                                       ECOREP 593
        ENDDO                                                                   ECOREP 594
c               find all BLOCK-CHARGES referenced by this UTILITY-RATE          ECOREP 595
        DO 2212  JB=1,NURBC                                                     ECOREP 596
          JBC = <BLOCK-CHARGES>                                                 ECOREP 597
          ITYPE = <BLOCK-USE-TYPE>                                              ECOREP 598
          WRITE (IREPFL) I15, Iuniq, IONE, ITHREE, I11,                         HVAC30  82
     $      (<BC-NAME>,II=1,8), (NAMUSE(II,ITYPE),II=1,3)                       HVAC30  83
c               print energy data                                               ECOREP 601
          WRITE (IREPFL) I29, Iuniq, IONE, IFOUR, I25,                          ECOREP 602
     $      (INT(<BC-ACTV-ENGY>+.5),IB=1,12),                                   ECOREP 603
     $      (INT(<BC-BILL-ENGY>+.5),IB=1,13)                                    ECOREP 604
c               print demand data                                               ECOREP 605
          WRITE (IREPFL) I28, Iuniq, IONE, IFIVE, I24,                          ECOREP 606
     $      (<BC-ACTV-DEM>,IB=1,12),                                            ECOREP 607
     $      (<BC-BILL-DEM>,IB=1,12)                                             ECOREP 608
c               prorated portion                                                ECOREP 609
          IF (<CHARGES-PRORATED> .GT. 0)                                        ECOREP 610
     $      WRITE (IREPFL) I16, Iuniq, IONE, ISIX, I12,                         ECOREP 611
     $        (<BC-BILL-FRAC>,IB=1,12)                                          ECOREP 612
c                                                                               ECOREP 613
          IF (<BC-YR-ECHG> .GT. 0.)                                             ECOREP 614
     $      WRITE (IREPFL) I17, Iuniq, IONE, ISEVEN, I13,                       ECOREP 615
     $        (INT(<BC-BILL-ECHG>+.5),IB=1,13)                                  ECOREP 616
          IF (<BC-YR-DCHG> .GT. 0.)                                             ECOREP 617
     $      WRITE (IREPFL) I17, Iuniq, IONE, IEIGHT, I13,                       ECOREP 618
     $        (INT(<BC-BILL-DCHG>+.5),IB=1,13)                                  ECOREP 619
          IF ((<BC-YR-ECHG> .GT. 0.) .AND. (<BC-YR-DCHG> .GT. 0.))              ECOREP 620
     $      WRITE (IREPFL) I17, Iuniq, IONE, ININE, I13,                        ECOREP 621
     $               (INT(<BC-BILL-ECHG>+<BC-BILL-DCHG>+.5),IB=1,13)            ECOREP 622
c                                                                               ECOREP 623
c               total monthly charges                                           ECOREP 624
          DO  IB=1,12                                                           ECOREP 625
            TOTALS(IB) = TOTALS(IB) + <BC-BILL-ECHG> + <BC-BILL-DCHG>           ECOREP 626
            TOTALS(13) = TOTALS(13) + <BC-BILL-ECHG> + <BC-BILL-DCHG>           ECOREP 627
          ENDDO                                                                 ECOREP 628
c               total monthly energy usage                                      ECOREP 629
          IF (<BC-YR-ECHG> .GT. 0.)  THEN                                       ECOREP 630
            DO  IB=1,12                                                         ECOREP 631
              TOTALS(13+IB) = TOTALS(13+IB)                                     ECOREP 632
     1                                 + <BC-BILL-ENGY>*<BC-BILL-FRAC>          ECOREP 633
            ENDDO                                                               ECOREP 634
            TOTALS(26)      = TOTALS(26)    + <BC-YR-ENGY>                      ECOREP 635
          ENDIF                                                                 ECOREP 636
c               end of this BLOCK-CHARGE                                        ECOREP 637
 2212   CONTINUE                                                                ECOREP 638
c                                                                               ECOREP 639
c               Totals for all BLOCK CHARGES                                    ECOREP 640
        WRITE (IREPFL) IFOUR, Iuniq, IONE, ITEN, IZERO                          ECOREP 641
        IF (TOTALS(26) .GT. 0.)                                                 ECOREP 642
     $    WRITE (IREPFL) I17, Iuniq, IONE, I11, I13,                            ECOREP 643
     $      (INT(TOTALS(13+IB)+.5),IB=1,13)                                     ECOREP 644
        WRITE (IREPFL) I17, Iuniq, IONE, I12, I13,                              ECOREP 645
     $    (INT(TOTALS(IB)+.5),IB=1,13)                                          ECOREP 646
c                                                                               ECOREP 647
c              Check to see if BLOCK-CHARGES are double counting energy         ECOREP 648
        IF (TOTALS(26) .GT. 0.)  THEN                                           ECOREP 649
          FRAC = (TOTALS(26) - <UR-YR-ENGY>) / TOTALS(26)                       ECOREP 650
          IF (FRAC .GT.  .001)                                                  ECOREP 651
     $      WRITE (IREPFL)  IFOUR, Iuniq, IONE, I13, IZERO                      ECOREP 652
          IF (FRAC .LT. -.001)                                                  ECOREP 653
     $      WRITE (IREPFL)  IFOUR, Iuniq, IONE, I14, IZERO                      ECOREP 654
        ENDIF                                                                   ECOREP 655
c               end of BLOCK-CHARGES reporting                                  ECOREP 656
c                                                                               ECOREP 657
c               Now print RATCHETS                                              ECOREP 658
c               Dont print this section for this UTILITY-RATE if no             ECOREP 659
c               RATCHETS are referenced                                         ECOREP 660
 2213   NURR = <NUM_ALL_RATCHETS>                                               ECOREP 661
        IF (NURR .EQ. 0)  GOTO 2214                                             ECOREP 662
c                                                                               ECOREP 663
        WRITE (IREPFL) I16, Iuniq, IONE, I15, I12,                              ECOREP 664
     $               (MONDSC(I),I=1,12)                                         ECOREP 665
c                                                                               ECOREP 666
c               now find all RATCHETS which reference this UTILITY-RATE         ECOREP 667
        DO  JR=1,NURR                                                           ECOREP 668
          JRA = <UR_ALL_RATCHETS>                                               ECOREP 669
c                                                                               ECOREP 670
          ITYPE = <R-TYPE> + 1                                                  ECOREP 671
          WRITE (IREPFL) I26, Iuniq, IONE, I16, I22,                            HVAC30  84
     $      (<R-NAME>,II=1,8), (RTYPE(II,ITYPE),II=1,2),                        HVAC30  85
     $      (<R-BILL-DEM>,IB=1,12)                                              ECOREP 674
c               end of this RATCHET                                             ECOREP 675
        ENDDO                                                                   ECOREP 676
c                                                                               ECOREP 677
c               end of this UTILITY-RATE                                        ECOREP 678
 2214   WRITE (IREPFL) ITWO,  Iuniq, ISEVEN                                     ECOREP 679
 2215 CONTINUE                                                                  ECOREP 680
c               end of report ES-F                                              ECOREP 681
c                                                                               ECOREP 682
 2220 CONTINUE                                                                  ECOREP 683
c                                                                               ECOREP 684
      RETURN                                                                    ECOREP 685
      END                                                                       ECOREP 686
      SUBROUTINE EQCOST                                                         EQCOST   2
c                                                                               EQCOST   3
c                                                                               EQCOST   4
c                                                                               EQCOST   5
c              Calculates the life cycle equipment costs for                    EQCOST   6
c              components specified using the MATERIALS-COST command            EQCOST   7
c              in the SYSTEMS/PLANT module                                      EQCOST   8
c                                                                               EQCOST   9
C              DEVELOPED BY                                                     -130     1
C                            S. D. Gates                                        -130     2
C                            J. J. Hirsch                                       -130     3
C                            James J. Hirsch & Associates                       -130     4
C                            Camarillo, California                              -130     5
C              PARTLY BASED UPON EARLIER SOFTWARE DEVELOPED BY                  -130     6
C                            F. C. Winkelmann                                   -130     7
C                            J. H. Eto                                          -130     8
C                            Lawrence Berkeley National Laboratory              -130     9
C                            University of California                           -130    10
C                                                                               -130    11
Copyright (c) 1997 by James J. Hirsch. All Rights Reserved. Unpublished         -130    12
c rights reserved under the Copyright Laws of the United States.                -130    13
c RESTRICTED RIGHTS NOTICE: Government use, reproduction or disclosure          -130    14
c is subject to restrictions as set forth in Rights in Data (g)(3) in           -130    15
c UC/LBNL purchase order 4607010 with J.J. Hirsch & Associates.                 -130    16
      COMMON //       IA(75 000 000)                                            -048a    1
      DIMENSION       AA(75 000 000)                                            -048a    2
      EQUIVALENCE    (AA(1), IA(1))                                             /BLANK/  4
      COMMON /COSTS / FCPLAN,RCPLAN,EU,EUS,EC(25),OMPLAN(25),                   HVAC7    1
     $                OMBLDG(25),OMTOT(25),ECSAV(25),OMSAV(25),                 HVAC7    2
     $                TOTSAV(25),CREPTO,CINTOT,ECBTOT,ECTOT,ECSTOT,             HVAC7    3
     $                OMBSTO,OMPTOT,OMBLTO,OMTO,OMSTOT,TOTS,NY,TINV,PVI,        HVAC7    4
     $                PAYBAC,EUSAV,EUSSAV,EUSPVI,EURPVI,SIR,                    HVAC7    5
     $                BGAREA,BNAREA                                             HVAC7    6
      COMMON /PTRECO/ IUR, IBC, IRA, IBA, ICC, IMT, IMC, Iextra,                HVAC27   1
     $                NUR, NBC, NRA, NBA, NCC, NMT, NMC, Nem,                   HVAC22   1
     $                LUR, LBC, LRA, LBA, LCC, LMT, LMC,                        HVAC7   11
     $                JUR, JBC, JRA,      JCC, JMT, JMC, Jextra,                HVAC27   2
     $                LenBlockOffset                                            Rfg1     2
c                                                                               EQCOST  13
      REAL Maint, Life, Minor, Major, LastReplaced                              EQCOST  14
c                                                                               EQCOST  15
c                                                                               EQCOST  16
c              Skip if no MATERIALS-COST components                             EQCOST  17
      IF (NMC .EQ. 0)  RETURN                                                   EQCOST  18
c                                                                               EQCOST  19
c              Present value factors                                            EQCOST  20
      XLABOR = (1. + <LABOR-INFLTN>/100.) / (1. + <DISCOUNT-RATE >/100.)        EQCOST  21
      XMAT   = (1. + <MATERIALS-INFLTN>/100. )                                  EQCOST  22
     $                                    / (1. + <DISCOUNT-RATE >/100.)        EQCOST  23
c              Project life                                                     EQCOST  24
      ProjLife = <PROJECT-LIFE>                                                 EQCOST  25
c              Project life rounded up                                          EQCOST  26
      Nyears   = MIN0(INT(ProjLife + .99999999), 25)                            EQCOST  27
c                                                                               EQCOST  28
c              Loop thru the MATERIALS-COST blocks                              EQCOST  29
      DO 400  IM=1,NMC                                                          EQCOST  30
c              pointer to this block                                            EQCOST  31
        JMC = IMC + (IM-1)*LMC                                                  EQCOST  32
c              project first cost                                               EQCOST  33
        IF (<HOURS-USED> .EQ. 0.)  THEN                                         EQCOST  34
          FCPLAN = FCPLAN + (<FIRST-COST>+<INSTALLATION>)*<SITE-FACTOR>         EQCOST  35
          <FIRST_TOTAL>   = <FIRST-COST>*<SITE-FACTOR>                          EQCOST  36
          <INSTALL_TOTAL> = <INSTALLATION>*<SITE-FACTOR>                        EQCOST  37
        ENDIF                                                                   EQCOST  38
c                                                                               EQCOST  39
c              annual costs - first year                                        EQCOST  40
        Consum = <CONSUMABLES> * <OPER_HOURS/YEAR>                              EQCOST  41
        Maint  = <MAINTENANCE> * <LABOR>                                        EQCOST  42
        <ANNUAL_TOTAL> = Consum + Maint                                         EQCOST  43
c              annual costs - life cycle                                        EQCOST  44
        DO  Iyear=1,Nyears                                                      EQCOST  45
          Consum        = Consum * XMAT                                         EQCOST  46
          Maint         = Maint  * XLABOR                                       EQCOST  47
          OMPLAN(Iyear) = OMPLAN(Iyear) + Consum + Maint                        EQCOST  48
          <ANNUAL_PV>   = <ANNUAL_PV>   + Consum + Maint                        EQCOST  49
        ENDDO                                                                   EQCOST  50
c                                                                               EQCOST  51
c              Cyclical costs                                                   EQCOST  52
        IF (<OPER_HOURS/YEAR> .GT. 0.)  THEN                                    EQCOST  53
c              equipment replacement and overhaul intervals                     EQCOST  54
          IF (<EQUIPMENT-LIFE> .GT. 0.)  THEN                                   HVAC18   1
            Life  = <EQUIPMENT-LIFE> / <OPER_HOURS/YEAR>                        HVAC18   2
          ELSE                                                                  HVAC18   3
            Life  = 1.E6                                                        HVAC18   4
          ENDIF                                                                 HVAC18   5
          IF (<MINOR-OVHL-INT> .GT. 0.)  THEN                                   HVAC18   6
            Minor = <MINOR-OVHL-INT> / <OPER_HOURS/YEAR>                        HVAC18   7
          ELSE                                                                  HVAC18   8
            Minor = 1.E6                                                        HVAC18   9
          ENDIF                                                                 HVAC18  10
          IF (<MAJOR-OVHL-INT> .GT. 0.)  THEN                                   HVAC18  11
            Major = <MAJOR-OVHL-INT> / <OPER_HOURS/YEAR>                        HVAC18  12
          ELSE                                                                  HVAC18  13
            Major = 1.E6                                                        HVAC18  14
          ENDIF                                                                 HVAC18  15
c              year the equipment was last replaced                             EQCOST  58
          LastReplaced = -<HOURS-USED> / <OPER_HOURS/YEAR>                      EQCOST  59
c              year the equipment is first replaced in this analysis            EQCOST  60
   10     YearReplace = LastReplaced + Life                                     EQCOST  61
c              replace again if the year is negative (before this analysis)     EQCOST  62
          IF (YearReplace .LT. 0.)  THEN                                        EQCOST  63
            LastReplaced = YearReplace                                          EQCOST  64
            GOTO 10                                                             EQCOST  65
          ENDIF                                                                 EQCOST  66
c              year the equipment has a minor overhaul                          EQCOST  67
          YearMinor = LastReplaced - Minor                                      HVAC8    4
   20     YearMinor = YearMinor    + Minor                                      HVAC8    5
c              overhaul again if the year is still negative                     EQCOST  69
          IF (YearMinor .LT. 0.)  GOTO 20                                       EQCOST  70
c              calculate overhaul cost if the overhaul falls before the         EQCOST  71
c              time the equipment will be replaced again                        EQCOST  72
          IF (YearMinor .LT. YearReplace                                        EQCOST  73
     $                  .AND.  YearMinor .LT. ProjLife)  THEN                   EQCOST  74
            Iyear         = INT(YearMinor + .999999)                            EQCOST  75
            CostPV        = <MINOR-OVHL-COST>*XMAT**YearMinor                   EQCOST  76
            OMPLAN(Iyear) = OMPLAN(Iyear) + CostPV                              EQCOST  77
            <OVERHAUL_PV> = <OVERHAUL_PV> + CostPV                              EQCOST  78
            GOTO 20                                                             EQCOST  79
          ENDIF                                                                 EQCOST  80
c              year the equipment has a major overhaul                          EQCOST  81
          YearMajor = LastReplaced - Major                                      HVAC8    6
   30     YearMajor = YearMajor    + Major                                      HVAC8    7
c              overhaul again if the year is still negative                     EQCOST  83
          IF (YearMajor .LT. 0.)  GOTO 30                                       EQCOST  84
c              calculate overhaul cost if the overhaul falls before the         EQCOST  85
c              time the equipment will be replaced again                        EQCOST  86
          IF (YearMajor .LT. YearReplace                                        EQCOST  87
     $                  .AND.  YearMajor .LE. ProjLife)  THEN                   EQCOST  88
            Iyear         = INT(YearMajor + .999999)                            EQCOST  89
            CostPV        = <MAJOR-OVHL-COST>*XMAT**YearMajor                   EQCOST  90
            OMPLAN(Iyear) = OMPLAN(Iyear) + CostPV                              EQCOST  91
            <OVERHAUL_PV> = <OVERHAUL_PV> + CostPV                              EQCOST  92
            GOTO 30                                                             EQCOST  93
          ENDIF                                                                 EQCOST  94
c              check if equipment needs to be replaced                          EQCOST  95
          IF (YearReplace .LT. ProjLife)  THEN                                  EQCOST  96
            CostPV = (<FIRST-COST>+<INSTALLATION>)*<SITE-FACTOR>                EQCOST  97
     $                                                *XMAT**YearReplace        EQCOST  98
            RCPLAN       = RCPLAN + CostPV                                      EQCOST  99
            <REPLACE_PV> = <REPLACE_PV> + CostPV                                EQCOST 100
c              reset the minor and major overhaul intervals so that             EQCOST 101
c              they start counting from the replacement year                    EQCOST 102
            YearMinor    = YearReplace                                          EQCOST 103
            YearMajor    = YearReplace                                          EQCOST 104
            LastReplaced = YearReplace                                          EQCOST 105
c              do it all over again                                             EQCOST 106
            GOTO 10                                                             EQCOST 107
          ENDIF                                                                 EQCOST 108
c              end of cyclical cost calcs                                       EQCOST 109
        ENDIF                                                                   EQCOST 110
c              total life-cycle cost of this component                          EQCOST 111
        <TOTAL_PV> = <FIRST_TOTAL>+ <INSTALL_TOTAL> + <ANNUAL_PV>               EQCOST 112
     $                            + <OVERHAUL_PV>   + <REPLACE_PV>              EQCOST 113
c              end of MATERIALS-COST processing                                 EQCOST 114
  400 CONTINUE                                                                  EQCOST 115
c                                                                               EQCOST 116
      RETURN                                                                    EQCOST 117
      END                                                                       EQCOST 118
      SUBROUTINE INITE                                                          INITE    2
C                                                                               INITE    3
C              INITIALIZES ECONOMICS DATA                                       INITE    4
C                                                                               INITE    5
C              DEVELOPED BY                                                     -130     1
C                            S. D. Gates                                        -130     2
C                            J. J. Hirsch                                       -130     3
C                            James J. Hirsch & Associates                       -130     4
C                            Camarillo, California                              -130     5
C              PARTLY BASED UPON EARLIER SOFTWARE DEVELOPED BY                  -130     6
C                            F. C. Winkelmann                                   -130     7
C                            J. H. Eto                                          -130     8
C                            Lawrence Berkeley National Laboratory              -130     9
C                            University of California                           -130    10
C                                                                               -130    11
Copyright (c) 1997 by James J. Hirsch. All Rights Reserved. Unpublished         -130    12
c rights reserved under the Copyright Laws of the United States.                -130    13
c RESTRICTED RIGHTS NOTICE: Government use, reproduction or disclosure          -130    14
c is subject to restrictions as set forth in Rights in Data (g)(3) in           -130    15
c UC/LBNL purchase order 4607010 with J.J. Hirsch & Associates.                 -130    16
C                                                                               INITE    7
      COMMON /COSTS / FCPLAN,RCPLAN,EU,EUS,EC(25),OMPLAN(25),                   HVAC7    1
     $                OMBLDG(25),OMTOT(25),ECSAV(25),OMSAV(25),                 HVAC7    2
     $                TOTSAV(25),CREPTO,CINTOT,ECBTOT,ECTOT,ECSTOT,             HVAC7    3
     $                OMBSTO,OMPTOT,OMBLTO,OMTO,OMSTOT,TOTS,NY,TINV,PVI,        HVAC7    4
     $                PAYBAC,EUSAV,EUSSAV,EUSPVI,EURPVI,SIR,                    HVAC7    5
     $                BGAREA,BNAREA                                             HVAC7    6
      DIMENSION DUM(201)                                                        HVAC7  476
      EQUIVALENCE (DUM(1),FCPLAN)                                               HVAC7  477
      COMMON /UTLTYS/ TOTCST, KWBTU                                             HVAC17   1
      REAL            KWBTU                                                     /UTLTYS/ 4
C                                                                               INITE   12
C                                                                               INITE   13
      CALL INIT0(IA,1024)                                                       INITE   14
C                                                                               INITE   15
C              INITAILIZE THE LAST WORD USED IN AA TO ZERO                      INITE   16
      IEND   = 0                                                                INITE   17
C                                                                               INITE   18
C              ZERO DATA                                                        INITE   19
      DO  I=1,201                                                               HVAC7  478
        DUM(I) = 0.                                                             HVAC7  479
      ENDDO                                                                     HVAC7  480
C                                                                               INITE   22
C               TOTAL COST FOR ALL UTILITY-RATES                                INITE   23
      TOTCST = 0.                                                               INITE   24
C                                                                               INITE   29
C               KW/BTU CONVERSION FACTOR                                        INITE   30
C               GET DIRECTLY FROM UNITS TABLE                                   INITE   31
      KWBTU = 1.0                                                               INITE   32
      CALL KDIV(KWBTU, 80, 1, 0)                                                INITE   33
      RETURN                                                                    INITE   34
      END                                                                       INITE   35
      SUBROUTINE NPCOST                                                         NPCOST   2
C                                                                               NPCOST   3
C              CALCULATES PRESENT-VALUE OF COSTS ASSOCIATED                     NPCOST   4
C              WITH BUILDING (NON-PLANT) COMPONENTS                             NPCOST   5
C                                                                               NPCOST   6
C              DEVELOPED BY                                                     -130     1
C                            S. D. Gates                                        -130     2
C                            J. J. Hirsch                                       -130     3
C                            James J. Hirsch & Associates                       -130     4
C                            Camarillo, California                              -130     5
C              PARTLY BASED UPON EARLIER SOFTWARE DEVELOPED BY                  -130     6
C                            F. C. Winkelmann                                   -130     7
C                            J. H. Eto                                          -130     8
C                            Lawrence Berkeley National Laboratory              -130     9
C                            University of California                           -130    10
C                                                                               -130    11
Copyright (c) 1997 by James J. Hirsch. All Rights Reserved. Unpublished         -130    12
c rights reserved under the Copyright Laws of the United States.                -130    13
c RESTRICTED RIGHTS NOTICE: Government use, reproduction or disclosure          -130    14
c is subject to restrictions as set forth in Rights in Data (g)(3) in           -130    15
c UC/LBNL purchase order 4607010 with J.J. Hirsch & Associates.                 -130    16
      COMMON //       IA(75 000 000)                                            -048a    1
      DIMENSION       AA(75 000 000)                                            -048a    2
      EQUIVALENCE    (AA(1), IA(1))                                             /BLANK/  4
      COMMON /COSTS / FCPLAN,RCPLAN,EU,EUS,EC(25),OMPLAN(25),                   HVAC7    1
     $                OMBLDG(25),OMTOT(25),ECSAV(25),OMSAV(25),                 HVAC7    2
     $                TOTSAV(25),CREPTO,CINTOT,ECBTOT,ECTOT,ECSTOT,             HVAC7    3
     $                OMBSTO,OMPTOT,OMBLTO,OMTO,OMSTOT,TOTS,NY,TINV,PVI,        HVAC7    4
     $                PAYBAC,EUSAV,EUSSAV,EUSPVI,EURPVI,SIR,                    HVAC7    5
     $                BGAREA,BNAREA                                             HVAC7    6
      COMMON /PTRECO/ IUR, IBC, IRA, IBA, ICC, IMT, IMC, Iextra,                HVAC27   1
     $                NUR, NBC, NRA, NBA, NCC, NMT, NMC, Nem,                   HVAC22   1
     $                LUR, LBC, LRA, LBA, LCC, LMT, LMC,                        HVAC7   11
     $                JUR, JBC, JRA,      JCC, JMT, JMC, Jextra,                HVAC27   2
     $                LenBlockOffset                                            Rfg1     2
C                                                                               HVAC7  484
C              DISCOUNT RATE, LABOR INFLATION RATE, MATERIALS INFLATION         HVAC7  485
C              RATE, AND LIFETIME OF PROJECT                                    HVAC7  486
      DR     = <DISCOUNT-RATE>/100.                                             HVAC7  487
      RL     = <LABOR-INFLTN>/100.                                              HVAC7  488
      RM     = <MATERIALS-INFLTN>/100.                                          HVAC7  489
      Y      = <PROJECT-LIFE>                                                   HVAC7  490
      NY     = INT(Y)                                                           HVAC7  491
C              TWO FREQUENTLY USED RATIOS                                       HVAC7  492
      RLDR   = (1.+RL)/(1.+DR)                                                  HVAC7  493
      RMDR   = (1.+RM)/(1.+DR)                                                  HVAC7  494
C                                                                               HVAC7  495
C              LOOP OVER COST ITEMS                                             HVAC7  496
C                                                                               HVAC7  497
      DO 100  NC=1,NCC                                                          HVAC7  498
        JCC = ICC + (NC-1)*LCC                                                  HVAC7  499
C              RESET LIFE IF ZERO                                               HVAC7  500
        IF(<CC-LIFE> .EQ. 0.0)  <CC-LIFE>=999.                                  HVAC7  501
C              NO. OF UNITS                                                     HVAC7  502
        U      = <CC-NUMBER>                                                    HVAC7  503
C              FIRST-COST                                                       HVAC7  504
        FC     = <CC-FIRST-COST>*U                                              HVAC7  505
C              INSTALLATION COST                                                HVAC7  506
        CI     = <CC-INSTALL-COST>*U                                            HVAC7  507
C              SUM OF INITIAL COSTS                                             HVAC7  508
        CINTOT = CINTOT + FC + CI                                               HVAC7  509
C              ANNUAL COST                                                      HVAC7  510
        AC     = <CC-ANNUAL-COST>*U                                             HVAC7  511
C              ADD ANNUAL COSTS TO OPERATIONS PRESENT VALUE ARRAY               HVAC7  512
        DO  J=1,NY                                                              HVAC7  513
          ACPV      = AC * RLDR**J                                              HVAC7  514
          OMBLDG(J) = OMBLDG(J) + ACPV                                          HVAC7  515
          <CC_ANNUAL_PV> = <CC_ANNUAL_PV> + ACPV                                HVAC7  516
        ENDDO                                                                   HVAC7  517
C              CYCLICAL COST (MAJOR AND MINOR OVERHAULS)                        HVAC7  518
        CYCPV  = 0.                                                             HVAC7  519
        CMINPV = 0.                                                             HVAC7  520
        CMAJPV = 0.                                                             HVAC7  521
        CMIN   = <CC-MIN-OVHL-COST>*U                                           HVAC7  522
        CMAJ   = <CC-MAJ-OVHL-COST>*U                                           HVAC7  523
        IF(CMIN .GT. 0.)  THEN                                                  HVAC7  524
C              MINOR OVERHAUL INTERVAL                                          HVAC7  525
          AM     = <CC-MIN-OVHL-INT>                                            HVAC7  526
C              NO MINOR OVERHAUL COST IF OVERHAUL                               HVAC7  527
C              INTERVAL GREATER THAN PROJECT LIFETIME                           HVAC7  528
          IF(AM .LE. 0.0.  OR.  AM .GE. Y) GO TO 25                             HVAC7  529
C              ADD MINOR OVHL COSTS TO OPERATIONS                               HVAC7  530
C              PRESENT VALUE ARRAY                                              HVAC7  531
C              NUMBER OF OVERHAULS IN PROJECT LIFETIME                          HVAC7  532
          NMAX   = INT(Y/AM)                                                    HVAC7  533
          DO 16  K=1,NMAX                                                       HVAC7  534
C              YEAR IN WHICH OVERHAUL OCCURS                                    HVAC7  535
            J      = INT(K*AM) + 1                                              HVAC7  536
C              GOES IN PREVIOUS YEAR IF EXACTLY AT BEGINNING OF YEAR            HVAC7  537
            IF((K*AM).EQ.AINT(K*AM)) J=J-1                                      HVAC7  538
C              SKIP IF RIGHT AT END OF PROJECT LIFE                             HVAC7  539
            IF(J .GE. NY) GO TO 16                                              HVAC7  540
            CMINPV = CMIN * RLDR**(K*AM)                                        HVAC7  541
            OMBLDG(J)        = OMBLDG(J)        + CMINPV                        HVAC7  542
            <CC_OVERHAUL_PV> = <CC_OVERHAUL_PV> + CMINPV                        HVAC7  543
   16     CONTINUE                                                              HVAC7  544
        ENDIF                                                                   HVAC7  545
   25   CONTINUE                                                                HVAC7  546
C              SAME AS ABOVE FOR MAJOR OVERHAULS                                HVAC7  547
        IF(CMAJ .GT. 0.0)  THEN                                                 HVAC7  548
          AM     = <CC-MAJ-OVHL-INT>                                            HVAC7  549
          IF(AM .LE. 0.0  .OR.  AM .GE. Y) GO TO 26                             HVAC7  550
          NMAX   = INT(Y/AM)                                                    HVAC7  551
          DO 17 K=1,NMAX                                                        HVAC7  552
            J      = INT(K*AM) + 1                                              HVAC7  553
            IF((K*AM).EQ.AINT(K*AM)) J=J-1                                      HVAC7  554
            IF(J.GE.NY) GO TO 17                                                HVAC7  555
            CMAJPV = CMAJ * RLDR**(K*AM)                                        HVAC7  556
            OMBLDG(J)        = OMBLDG(J)        + CMAJPV                        HVAC7  557
            <CC_OVERHAUL_PV> = <CC_OVERHAUL_PV> + CMAJPV                        HVAC7  558
   17     CONTINUE                                                              HVAC7  559
        ENDIF                                                                   HVAC7  560
   26   CONTINUE                                                                HVAC7  561
        CYCPV  = CMINPV + CMAJPV                                                HVAC7  562
C              REPLACEMENT COSTS                                                HVAC7  563
        CREP   = 0.                                                             HVAC7  564
        CREPPV = 0.                                                             HVAC7  565
        EQLIFE = <CC-LIFE>                                                      HVAC7  566
C              IS REPLACEMENT NEEDED                                            HVAC7  567
        IF(EQLIFE .EQ. 0.0.  OR.  EQLIFE  .GE.  Y) GO TO 23                     HVAC7  568
        CREP   = FC+CI                                                          HVAC7  569
        CREPPV = PVF(RM,DR,Y,EQLIFE)*FC + PVF(RL,DR,Y,EQLIFE)*CI                HVAC7  570
   23   CONTINUE                                                                HVAC7  571
C              SUM OF REPLACEMENT COSTS FOR                                     HVAC7  572
C              DIFFERENT COMPONENTS                                             HVAC7  573
        CREPTO = CREPTO + CREPPV                                                HVAC7  574
        <CC_REPLACE_PV> = CREPPV                                                HVAC7  575
C                                                                               HVAC7  576
C              OVERALL COST FOR THIS ITEM                                       HVAC7  577
        <CC_TOTAL_PV> = FC + CI + ACPV + CYCPV + CREPPV                         HVAC7  578
C              TOTALS FOR INITIAL OUTLAYS                                       HVAC7  579
        <CC_FIRST_TOTAL>   = FC                                                 HVAC7  580
        <CC_INSTALL_TOTAL> = CI                                                 HVAC7  581
        <CC_ANNUAL_TOTAL>  = AC                                                 HVAC7  582
  100 CONTINUE                                                                  HVAC7  583
C                                                                               HVAC7  584
 9000 CONTINUE                                                                  HVAC7  585
      RETURN                                                                    NPCOST 115
      END                                                                       NPCOST 116
      SUBROUTINE PLTPRO                                                         PLTPRO   2
C                                                                               PLTPRO   3
C               PROCESS THE PLANT OUTPUT FILE                                   PLTPRO   4
C               SUM HOURLY ENERGY CONSUMPTION INTO UTILITY-RATES AND            PLTPRO   5
C               BLOCK-CHARGES, AND DETERMINE PEAK DEMANDS.                      PLTPRO   6
C                                                                               PLTPRO   7
C              DEVELOPED BY                                                     -130     1
C                            S. D. Gates                                        -130     2
C                            J. J. Hirsch                                       -130     3
C                            James J. Hirsch & Associates                       -130     4
C                            Camarillo, California                              -130     5
C              PARTLY BASED UPON EARLIER SOFTWARE DEVELOPED BY                  -130     6
C                            F. C. Winkelmann                                   -130     7
C                            J. H. Eto                                          -130     8
C                            Lawrence Berkeley National Laboratory              -130     9
C                            University of California                           -130    10
C                                                                               -130    11
Copyright (c) 1997 by James J. Hirsch. All Rights Reserved. Unpublished         -130    12
c rights reserved under the Copyright Laws of the United States.                -130    13
c RESTRICTED RIGHTS NOTICE: Government use, reproduction or disclosure          -130    14
c is subject to restrictions as set forth in Rights in Data (g)(3) in           -130    15
c UC/LBNL purchase order 4607010 with J.J. Hirsch & Associates.                 -130    16
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044a    1
     1                IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL,                        /FILES/  3
     2                IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                    /FILES/  4
     3                IHRREP(3), IHRPAS(2)                                      /FILES/  5
      COMMON /IRUNPD/ NRUNPD, JRUNPD, IRUNPD(6,15)                              /IRUNPD/ 2
      COMMON /NAMES / NAMRES(4,14), WINDOW(2), QUALRT(2,4),                     HVAC30   1
     $                RTYPE(2,2),   NOYES(2),  IBLANK(4)                        HVAC7    8
      COMMON /PTRECO/ IUR, IBC, IRA, IBA, ICC, IMT, IMC, Iextra,                HVAC27   1
     $                NUR, NBC, NRA, NBA, NCC, NMT, NMC, Nem,                   HVAC22   1
     $                LUR, LBC, LRA, LBA, LCC, LMT, LMC,                        HVAC7   11
     $                JUR, JBC, JRA,      JCC, JMT, JMC, Jextra,                HVAC27   2
     $                LenBlockOffset                                            Rfg1     2
      COMMON /RUNSE / NDESDY, ISCB, NVECT, NSCHED, LENSCH                       /RUNSE/  2
      COMMON /TIME  / IDOY, IDOW, IDSTF, ISCHR, ISCDAY, iDSdates(6),            -044e5   1
     1                IMO, IDAY, IYR, IHR, CLOCK(10), IDSFLG,                   HOLID1   2
     2                MONDSC(12), MONLEN(12), MONSDA(12), IEOMDR                /TIME/   4
      COMMON /UTLTYS/ TOTCST, KWBTU                                             HVAC17   1
      REAL            KWBTU                                                     /UTLTYS/ 4
      COMMON //       IA(75 000 000)                                            -048a    1
      DIMENSION       AA(75 000 000)                                            -048a    2
      EQUIVALENCE    (AA(1), IA(1))                                             /BLANK/  4
      COMMON /IAX   / IAX, IADIM, IADIMV, IAXMAX, KORE                          /IAX/    2
C                                                                               PLTPRO  17
      COMMON /WCTRL/  IwinReturn, Imsgflg                                       /WCTRL/  2
c              For DLLs, delete Win_MB and enable msgbox.fi                     /WCTRL/  3
#ifndef _DLL                                                                 /* -051     1 */ 
      COMMON /WIN_MB/ MB_OK,MB_ICONSTOP,MB_ICONEXCLAMATION,MB_TASKMODAL,        -051     2
     &                MB_ICONINFORMATION                                        -051     3
#else                                                                        /* -051     4 */ 
      include 'msgbox.fi'                                                       -051     5
#endif                                                                       /* -051     6 */ 
       DIMENSION DAYMTR(60,24), ElecPeaks5(13,25,24), ElecBins(25,25)           HVAC22  15
       INTEGER FixedInterval, Sliding                                           HVAC22  16
       DATA    FixedInterval, Sliding /0,1/                                     HVAC22  17
c                                                                               HVAC22  18
       CALL FILLN(0., ElecBins(1,1), 625)                                       HVAC22  19
C                                                                               PLTPRO  19
C                                                                               PLTPRO  20
C               SKIP IF DESIGN DAY ONLY                                         PLTPRO  21
      IF (NRUNPD .LE. NDESDY)  GO TO 1000                                       PLTPRO  22
C               INITIALIZE RUN-PERIOD POINTER                                   PLTPRO  23
      JRUNPD = NDESDY                                                           PLTPRO  24
C               INCREMENT RUN-PERIOD                                            PLTPRO  25
  20  JRUNPD = JRUNPD + 1                                                       PLTPRO  26
C               IF END OF RUN                                                   PLTPRO  27
      IF (JRUNPD .GT. NRUNPD)  GO TO 900                                        PLTPRO  28
C               INITIALIZE TIME FOR THIS RUN PERIOD                             PLTPRO  29
C !!!!!! temporary code: 4th argument in TIMZRO should be IHOLX obtained        DDAY1    1
C from the eco std. file.                                                       HOLID1   4
      CALL TIMZRO(IA,NSCHED,ISCB-1,0,1,0)                                       DDAY1    2
      IF( IwinReturn .ne. 0 ) RETURN                                            Rfg1   163
C               INCREMENT FOR THIS TIME PERIOD                                  PLTPRO  31
C !!!!!! temporary code: 4th argument in TIMINC should be IHOLX obtained        DDAY1    3
C from the eco std. file.                                                       HOLID1   7
  30  CALL TIMINC(IA,NSCHED,ISCB-1,0,1,0)                                       DDAY1    4
      IF( IwinReturn .ne. 0 ) RETURN                                            Rfg1   164
C               IF NOT A NEW DAY                                                PLTPRO  33
      IF (IHR .NE. 1)  GO TO 50                                                 PLTPRO  34
C                                                                               PLTPRO  35
C               Read hourly meter info daily                                    HVAC7  587
      READ (IPLTO,END=49) ((DAYMTR(IM,IIHR),IM=1,NMT),IIHR=1,24),               HVAC22  20
     &         (((ElecPeaks5(IP,IM,IIHR),IP=1,13),IM=1,Nem),IIHR=1,24)          HVAC22  21
      GOTO 50                                                                   HVAC7  596
   49 CALL MSGSIM(-1,II,II,II,II)                                               HVAC7  597
      WRITE (IOUTPT,9001)                                                       HVAC7  598
 9001 FORMAT(14x,'Errors generated when reading daily ECONOMICS file')          HVAC7  599
      Call MessageBox( NULL, 'Error reading HVAC hourly meters file -'          -050x    7
     &  //' ABORTING'//char(0),'PLTPRO Errors'//char(0), MB_OK                  -050x    8
     &  + MB_ICONSTOP + MB_TASKMODAL )                                          -050x    9
      Return                                                                    -050x   10
   50 CONTINUE                                                                  HVAC7  601
C                                                                               HVAC7  602
C              Transfer hourly meter consumption into meters                    HVAC7  603
      DO  IM=1,NMT                                                              HVAC7  604
c              pointer to meter                                                 HVAC7  605
        JMT = IMT + (IM-1)*LMT                                                  HVAC7  606
        <METER_ENERGY> = DAYMTR(IM,IHR)                                         HVAC7  607
c              Electric energy distribution over the hour in 5-min bins         HVAC22  22
        IF (IM .LE. Nem)  THEN                                                  HVAC22  23
          DO  IP=1,13                                                           HVAC22  24
            <METER_5-MIN_BINS> = ElecPeaks5(IP,IM,IHR)                          HVAC22  25
          ENDDO                                                                 HVAC22  26
        ENDIF                                                                   HVAC22  27
      ENDDO                                                                     HVAC7  608
C                                                                               PLTPRO  43
C                                                                               PLTPRO  44
C               PROCESS HOURLY DATA INTO UTILITY-RATES, BLOCK-CHARGES           PLTPRO  45
C               AND RATCHETS.  SKIP ALL OF THIS IF NO UTILITY-RATES DEFINED.    PLTPRO  46
C     IF (NUR .EQ. 0)  RETURN                                                   PLTPRO  47
c                                                                               HVAC7  626
c               First, UTILITY-RATES                                            HVAC7  627
      DO 400  IURN=1,NUR                                                        HVAC7  628
        JUR     = IUR + (IURN-1)*LUR                                            HVAC7  629
c                                                                               HVAC7  630
c               Determine billing period on basis of BILLING-DAY.               HVAC7  631
c               Part of Decembers use may be billed in January                  HVAC7  632
        IB = IMO                                                                HVAC7  633
        IF (IDAY .GT. <BILLING-DAY>) IB = IB + 1                                HVAC7  634
        IF (IB .GT. 12) IB = 1                                                  HVAC7  635
c                                                                               HVAC7  636
c               Time-of-use energy charge defined by ENERGY-CHG-SCH             HVAC7  637
        HRCHG = 0                                                               HVAC7  638
        ISCH  = <ENERGY-CHG-SCH>                                                HVAC7  639
        IF (ISCH .GT. 0)  HRCHG = AA(IA(ISCH) + ISCHR)                          HVAC7  640
c                                                                               HVAC7  641
c               Energy consumed this hour                                       HVAC7  642
        ENGY = 0.                                                               HVAC7  643
        PEAK = 0.                                                               HVAC22  28
c              meter number for first meter in this rate                        HVAC22  29
        IM = 1                                                                  HVAC22  30
        NumFirst = (<UR-METERS>-IMT)/LMT + 1                                    HVAC22  31
c               number of meters                                                HVAC7  644
        NMETER = <NUM-METERS>                                                   HVAC7  645
c               sum the energy for all meters in this UTILITY-RATE              HVAC7  646
        DO  IM=1,NMETER                                                         HVAC7  647
          JMT = <UR-METERS>                                                     HVAC7  648
          ENGY = ENGY + <METER_ENERGY>                                          HVAC7  649
c              For elec rates with demand windows smaller than one hour,        HVAC22  32
c              combine the 5-minute peak energy distribution for the            HVAC22  33
c              meters                                                           HVAC22  34
          IF (<UR-TYPE> .EQ. 3  .AND.  <NUM_WINDOW_BINS> .LT. 12)  THEN         HVAC22  35
            DO  IP=1,13                                                         HVAC22  36
              IPnow = IP + 12                                                   HVAC22  37
              ElecBins(IPnow,NumFirst) = ElecBins(IPnow,NumFirst)               HVAC22  38
     &                                 + <METER_5-MIN_BINS>                     HVAC22  39
            ENDDO                                                               HVAC22  40
          ENDIF                                                                 HVAC22  41
        ENDDO                                                                   HVAC7  650
c              Determine the peak load for electric meters based                HVAC22  42
c              on a 5-minute data interval, and a variable window               HVAC22  43
c              type and length                                                  HVAC22  44
        IF (<UR-TYPE> .EQ. 3  .AND.  <NUM_WINDOW_BINS> .LT. 12)  THEN           HVAC22  45
c              number of 5 minute bins in window                                HVAC22  46
          NumBinsInWindow = <NUM_WINDOW_BINS>                                   HVAC22  47
          IF (<DEMAND-WINDOW> .EQ. Sliding)  THEN                               HVAC22  48
            WindowSum  = 0.                                                     HVAC22  49
c              fill sliding buffer with last hours values                       HVAC22  50
            Istart  = 13 - NumBinsInWindow                                      HVAC22  51
            DO  IP=Istart,12                                                    HVAC22  52
              WindowSum = WindowSum + ElecBins(IP,NumFirst)                     HVAC22  53
            ENDDO                                                               HVAC22  54
c              slide thru to end of hour                                        HVAC22  55
            DO  IP=13,24                                                        HVAC22  56
              WindowSum = WindowSum + ElecBins(IP,NumFirst)                     HVAC22  57
     &                              - ElecBins(Istart,NumFirst)                 HVAC22  58
              Istart = Istart + 1                                               HVAC22  59
              PEAK   = AMAX1(PEAK, WindowSum)                                   HVAC22  60
            ENDDO                                                               HVAC22  61
          ELSE                                                                  HVAC22  62
c              fixed interval window                                            HVAC22  63
            Istart = 13                                                         HVAC22  64
            Iend   = Istart + NumBinsInWindow-1                                 HVAC22  65
            DO                                                                  HVAC22  66
              WindowSum = 0.                                                    HVAC22  67
              DO  IP=Istart,Iend                                                HVAC22  68
                WindowSum = WindowSum + ElecBins(IP,NumFirst)                   HVAC22  69
              ENDDO                                                             HVAC22  70
              PEAK = AMAX1(PEAK, WindowSum)                                     HVAC22  71
              Iend = Iend + NumBinsInWindow                                     HVAC22  72
              IF (Iend .GT. 24)  Exit                                           HVAC22  73
              Istart = Istart + NumBinsInWindow                                 HVAC22  74
            ENDDO                                                               HVAC22  75
          ENDIF                                                                 HVAC22  76
c              convert peak kWh to kW                                           HVAC22  77
          PEAK = PEAK * <PEAK_MULTIPLIER>                                       HVAC22  78
c              add the non-distributed peak to the distributed                  HVAC22  79
          PEAK = PEAK + ENGY - ElecBins(25,NumFirst)                            HVAC22  80
c quck                                                                          HVAC22  81
          bintotal = 0.                                                         HVAC22  82
          DO  IP=13,24                                                          HVAC22  83
            bINTOTAL = BINTOTAL + ElecBins(IP,NumFirst)                         HVAC22  84
          ENDDO                                                                 HVAC22  85
          IF (BINTOTAL .GT. 0.                                                  HVAC22  86
     &              AND. ELEcBins(25,NumFirst) .EQ. 0.)  THEN                   HVAC22  87
            QUCK0 = 1.                                                          HVAC22  88
          IF (ABS(1.-bINTOTAL/ELEcBins(25,NumFirst)) .GT. 0.01) THEN            HVAC22  89
            QUCK0 = 1.                                                          HVAC22  90
          ENDIF                                                                 HVAC22  91
          endif                                                                 HVAC22  92
C====     write(IOUTPT,1234)                                                    HVAC22  93
C====&    IMO,IDAY,IHR, ENGY, PEAK,(ElecBins(IP,NumFirst),IP=13,25)             HVAC22  94
C1234     format(' ECONOMICS BIN',3i3,2F10.1/ ' ',12f7.1,F10.1)                 HVAC22  95
c              shift the current hour's distribution to last hour's             HVAC22  96
          DO  IPold=1,12                                                        HVAC22  97
            IPnew = IPold + 12                                                  HVAC22  98
            ElecBins(IPold,NumFirst) = ElecBins(IPnew,NumFirst)                 HVAC22  99
            ElecBins(IPnew,NumFirst) = 0.                                       HVAC22 100
          ENDDO                                                                 HVAC22 101
          ElecBins(25,NumFirst) = 0.                                            HVAC22 102
        ELSE                                                                    HVAC22 103
          PEAK = ENGY                                                           HVAC22 104
        ENDIF                                                                   HVAC22 105
C                                                                               PLTPRO 116
C               TOTAL METERED ENERGY AND TIME OF USE ENERGY COST                PLTPRO 117
C               IN THIS BILLING PERIOD                                          PLTPRO 118
        <UR-MTR-ENGY>      = <UR-MTR-ENGY>      + ENGY                          PLTPRO 119
        <UR-BILL-ENGY-CHG> = <UR-BILL-ENGY-CHG> + ENGY * HRCHG                  PLTPRO 120
C               TIME-OF-USE ENERGY COST ADJUSTMENTS                             HVAC7  651
        IF (<ENERGY-ADJ-SCH> .GT. 0)  THEN                                      HVAC7  652
          ISCH  = <ENERGY-ADJ-SCH>                                              HVAC7  653
          HRADJ = AA(IA(ISCH) + ISCHR)                                          HVAC7  654
          <UR-BILL-ECA-CHG> = <UR-BILL-ECA-CHG> + ENGY * HRADJ                  HVAC7  655
        ENDIF                                                                   HVAC7  656
C                                                                               PLTPRO 121
C               PEAK METERED DEMAND FOR THIS BILLING PERIOD                     PLTPRO 122
        <UR-MTR-DEM>  = AMAX1(<UR-MTR-DEM>, PEAK)                               HVAC22 106
C               DAILY DEMAND FOR THIS DAY - USED IF DEMAND-WINDOW = DAILY       PLTPRO 124
        <UR-DAY-ENGY> = <UR-DAY-ENGY> + ENGY                                    PLTPRO 125
C               IF DEMAND-WINDOW = DAY, THEN SAVE DAILY DEMAND DURING           PLTPRO 126
C               LAST HOUR OF DAY                                                PLTPRO 127
        IF (<DEMAND-INTERVAL> .GT. 60.  .AND.  IHR .EQ. 24)                     HVAC22 107
     -    THEN                                                                  PLTPRO 129
                <UR-MTR-DEM>  = AMAX1(<UR-MTR-DEM>, <UR-DAY-ENGY>)              PLTPRO 130
                <UR-DAY-ENGY> = 0.                                              PLTPRO 131
          ENDIF                                                                 PLTPRO 132
C                                                                               PLTPRO 133
C               DETERMINE WHETHER THE QUAL-SCH ALLOWS THIS UTILITY-RATE         PLTPRO 134
C               TO BE ACTIVE DURING THIS BILLING PERIOD.  LOOK ONLY AT THE      PLTPRO 135
C               FIRST HOUR OF THE BILLING-DAY.  (UTILITY-RATES CANNOT OVERLAP   PLTPRO 136
C               IN THE SAME BILLING PERIOD).                                    PLTPRO 137
        IF (<QUAL-SCH> .GT. 0)                                                  PLTPRO 138
     -    THEN                                                                  PLTPRO 139
                IBDAY = MIN0(<BILLING-DAY>, MONLEN(IB))                         PLTPRO 140
                IF  ((IMO .NE. IB) .OR. (IDAY .NE. IBDAY)                       PLTPRO 141
     1                             .OR. (IHR .NE. 1))  GOTO 150                 PLTPRO 142
                  ISCH = <QUAL-SCH>                                             PLTPRO 143
                  FLAG = AA(IA(ISCH) + ISCHR)                                   PLTPRO 144
                  IF (FLAG .EQ. <UR-SCH-FLAG>)                                  PLTPRO 145
     -              THEN                                                        PLTPRO 146
                          <UR-QUAL-SCH-ON> = 1                                  PLTPRO 147
                    ELSE                                                        PLTPRO 148
                          <UR-QUAL-SCH-ON> = 0                                  PLTPRO 149
                    ENDIF                                                       PLTPRO 150
          ELSE                                                                  PLTPRO 151
                <UR-QUAL-SCH-ON> = 1                                            PLTPRO 152
          ENDIF                                                                 PLTPRO 153
  150   CONTINUE                                                                PLTPRO 154
C                                                                               PLTPRO 155
C               NOW PROCESS HOURLY DATA INTO BLOCK-CHARGES REFERENCED BY        PLTPRO 156
C               THIS UTILITY-RATE.  SKIP IF NO BLOCK CHARGES REFERENCED.        PLTPRO 157
        NURBC = <NUM-BLOCK-CHGS>                                                PLTPRO 158
        IF (NURBC .EQ. 0)  GOTO 300                                             PLTPRO 159
        DO 299  JB=1,NURBC                                                      PLTPRO 160
C               POINTER TO BLOCK CHARGE DATA                                    HVAC7  657
          JBC = <BLOCK-CHARGES>                                                 HVAC7  658
C                                                                               PLTPRO 164
C               CHECK TO SEE IF BLOCK-SCH IS ACTIVE.                            PLTPRO 165
          IF (<BLOCK-SCH> .GT. 0)                                               PLTPRO 166
     -      THEN                                                                PLTPRO 167
                  IBCON = 0                                                     PLTPRO 168
                  ISCH  = <BLOCK-SCH>                                           PLTPRO 169
                  FLAG = AA(IA(ISCH) + ISCHR)                                   PLTPRO 170
                  IF (FLAG .EQ. <BC-SCH-FLAG>)  IBCON = 1                       PLTPRO 171
            ELSE                                                                PLTPRO 172
                  IBCON = 1                                                     PLTPRO 173
            ENDIF                                                               PLTPRO 174
C                                                                               PLTPRO 175
C               COUNT THE NUMBER OF TIMES THE SCHEDULE CHANGES VALUE.  IF MORE  PLTPRO 176
C               THAN TWICE IN A BILLING PERIOD, THEN THE BLOCK IS BEING USED    PLTPRO 177
C               IN A TIME-OF-USE FORMAT.                                        PLTPRO 178
      IF (<BC-SCH-VALUE> .NE. FLAG)  THEN                                       PLTPRO 179
          <BC-NUM-SCH-CHNG> = <BC-NUM-SCH-CHNG> + 1                             PLTPRO 180
          <BC-SCH-VALUE>    = FLAG                                              PLTPRO 181
      ENDIF                                                                     PLTPRO 182
C                                                                               PLTPRO 183
C               IF SHEDULE IS ACTIVE, COMPUTE DEMAND FOR THIS                   PLTPRO 184
C               BILLING PERIOD AND SUM NUMBER OF HOURS ACTIVE                   PLTPRO 185
          IF (IBCON .EQ. 1)                                                     PLTPRO 186
     -      THEN                                                                PLTPRO 187
                  <BC-ACTV-ENGY>     = <BC-ACTV-ENGY> + ENGY                    PLTPRO 188
                  <BC-ACTV-DEM>      = AMAX1(<BC-ACTV-DEM>, PEAK)               HVAC22 108
                  <BC-BILL-ACTV-HRS> = <BC-BILL-ACTV-HRS> + 1.0                 PLTPRO 190
            ENDIF                                                               PLTPRO 191
C                                                                               PLTPRO 192
C               TOTAL NUMBER OF HOURS, BOTH ACTIVE AND INACTIVE, IN THIS        PLTPRO 193
C               BILLING PERIOD.                                                 PLTPRO 194
          <BC-BILL-TOTL-HRS> = <BC-BILL-TOTL-HRS> + 1.0                         PLTPRO 195
C                                                                               PLTPRO 196
C               END OF PROCESSING FOR ASSOCIATED BLOCK-CHARGES                  PLTPRO 197
  299   CONTINUE                                                                PLTPRO 198
C                                                                               PLTPRO 199
C               NOW PROCESS HOURLY DATA INTO RATCHETS REFERENCED BY EITHER      PLTPRO 200
C               THIS UTILITY RATE, OR BY ASSOCIATED BLOCK-CHARGES.              PLTPRO 201
C               SKIP IF NO RATCHETS DEFINED.                                    PLTPRO 202
  300   NURR = <NUM_ALL_RATCHETS>                                               HVAC7  659
        IF (NURR .EQ. 0) GOTO 400                                               HVAC7  660
        DO 399  JR=1,NURR                                                       HVAC7  661
C               POINTER TO REFERENCED RATCHETS                                  HVAC7  662
          JRA = <UR_ALL_RATCHETS>                                               HVAC7  663
C               SKIP TO NEXT RATCHET IF RATCHET-SCH IS USED                     PLTPRO 209
C               AND IS TURNED OFF                                               PLTPRO 210
          IF (<RATCHET-SCH> .GT. 0)                                             PLTPRO 211
     -      THEN                                                                PLTPRO 212
                  IRON = 0                                                      PLTPRO 213
                  ISCH = <RATCHET-SCH>                                          PLTPRO 214
                  FLAG = AA(IA(ISCH) + ISCHR)                                   PLTPRO 215
                  IF (FLAG .EQ. <R-SCH-FLAG>)  IRON = 1                         PLTPRO 216
            ELSE                                                                PLTPRO 217
                  IRON = 1                                                      PLTPRO 218
            ENDIF                                                               PLTPRO 219
          IF (IRON .EQ. 0) GOTO 399                                             PLTPRO 220
C                                                                               PLTPRO 221
C               FOR THIS BILLING PERIOD, COMPUTE DEMAND                         PLTPRO 222
          <R-BILL-DEM> = AMAX1(<R-BILL-DEM>, PEAK)                              HVAC22 109
C               DAILY DEMAND FOR THIS DAY - USED IF DEMAND-WINDOW = DAILY       PLTPRO 224
          <R-DAY-ENGY> = <R-DAY-ENGY> + ENGY                                    PLTPRO 225
C               IF DEMAND-WINDOW = DAILY, THEN SAVE DAILY DEMAND DURING         PLTPRO 226
C               LAST HOUR OF DAY                                                PLTPRO 227
          IF (<DEMAND-INTERVAL> .GT. 60.  .AND.  IHR .EQ. 24)                   HVAC22 110
     -      THEN                                                                PLTPRO 229
                  <R-BILL-DEM> = AMAX1(<R-BILL-DEM>, <R-DAY-ENGY>)              PLTPRO 230
                  <R-DAY-ENGY> = 0.                                             PLTPRO 231
            ENDIF                                                               PLTPRO 232
C                                                                               PLTPRO 233
C               KEEP TRACK OF BILLING CYCLES IN WHICH THE RATCHET IS ACTIVE     PLTPRO 234
          <RATCHET-ACTIVE> = 1                                                  PLTPRO 235
C                                                                               PLTPRO 236
C             END OF HOURLY RATCHET DATA                                        PLTPRO 237
  399   CONTINUE                                                                PLTPRO 238
C               END OF HOURLY UTILITY-RATE DATA                                 PLTPRO 239
  400  CONTINUE                                                                 PLTPRO 240
C                                                                               PLTPRO 241
C             REPEAT UNTIL ALL HOURLY DATA PROCESSED                            PLTPRO 242
C             END OF HOUR                                                       PLTPRO 243
      IF (IEOMDR .EQ. 0)  GO TO 30                                              PLTPRO 244
C             END OF DAY                                                        PLTPRO 245
      IF (IEOMDR .EQ. 1)  GO TO 30                                              PLTPRO 246
C             END OF MONTH                                                      PLTPRO 247
      IF (IEOMDR .EQ. 2)  GO TO 30                                              PLTPRO 248
C             END OF RUN PERIOD                                                 PLTPRO 249
      GO TO 20                                                                  PLTPRO 250
C                                                                               PLTPRO 251
  900 CONTINUE                                                                  PLTPRO 252
 1000 CONTINUE                                                                  PLTPRO 253
      RETURN                                                                    PLTPRO 254
      END                                                                       PLTPRO 255
      FUNCTION PVF( R, D, Y, T )                                                PVF      2
C              CALCULATES THE PRESENT-VALUE FACTOR GIVEN AN ESCALATION          PVF      3
C              RATE (R), A REAL DISCOUNT RATE (D), AND NUMBER OF                PVF      4
C              YEARS (Y), AND COMPOUNDING INTERVAL (T)                          PVF      5
C                                                                               PVF      6
      PVF    = 0.0                                                              PVF      7
      IF(Y.LE.0.0.OR.T.LE.0.0.OR.T.GT.Y) RETURN                                 PVF      8
      NMAX   = INT(Y/T)                                                         PVF      9
      X      = ((1+R)/(1+D))**T                                                 PVF     10
      PVF    = FLOAT(NMAX)                                                      PVF     11
      IF(X.EQ.1.) RETURN                                                        PVF     12
      PVF    = X*(1.-X**NMAX)/(1.-X)                                            PVF     13
      RETURN                                                                    PVF     14
      END                                                                       PVF     15
      SUBROUTINE RATCHT                                                         RATCHT   2
C                                                                               RATCHT   3
C               ON THE BASIS OF THE ACTUAL PEAK DEMANDS FOUND IN EACH BILLING   RATCHT   4
C               CYCLE, DETERMINES THE RATCHETED DEMANDS FOR EACH BILLING CYCLE. RATCHT   5
C               DEMANDS MAY BE EITHER PEAK OR AVERAGE.  A SLIDING WINDOW MAY    RATCHT   6
C               ALSO BE SPECIFIED.                                              RATCHT   7
C                                                                               RATCHT   8
C              DEVELOPED BY                                                     -130     1
C                            S. D. Gates                                        -130     2
C                            J. J. Hirsch                                       -130     3
C                            James J. Hirsch & Associates                       -130     4
C                            Camarillo, California                              -130     5
C              PARTLY BASED UPON EARLIER SOFTWARE DEVELOPED BY                  -130     6
C                            F. C. Winkelmann                                   -130     7
C                            J. H. Eto                                          -130     8
C                            Lawrence Berkeley National Laboratory              -130     9
C                            University of California                           -130    10
C                                                                               -130    11
Copyright (c) 1997 by James J. Hirsch. All Rights Reserved. Unpublished         -130    12
c rights reserved under the Copyright Laws of the United States.                -130    13
c RESTRICTED RIGHTS NOTICE: Government use, reproduction or disclosure          -130    14
c is subject to restrictions as set forth in Rights in Data (g)(3) in           -130    15
c UC/LBNL purchase order 4607010 with J.J. Hirsch & Associates.                 -130    16
C                                                                               RATCHT   9
      COMMON /UTLTYS/ TOTCST, KWBTU                                             HVAC17   1
      REAL            KWBTU                                                     /UTLTYS/ 4
      COMMON //       IA(75 000 000)                                            -048a    1
      DIMENSION       AA(75 000 000)                                            -048a    2
      EQUIVALENCE    (AA(1), IA(1))                                             /BLANK/  4
      COMMON /PTRECO/ IUR, IBC, IRA, IBA, ICC, IMT, IMC, Iextra,                HVAC27   1
     $                NUR, NBC, NRA, NBA, NCC, NMT, NMC, Nem,                   HVAC22   1
     $                LUR, LBC, LRA, LBA, LCC, LMT, LMC,                        HVAC7   11
     $                JUR, JBC, JRA,      JCC, JMT, JMC, Jextra,                HVAC27   2
     $                LenBlockOffset                                            Rfg1     2
C                                                                               RATCHT  13
      DIMENSION DEMMON(12), TEMP(12)                                            RATCHT  14
C                                                                               RATCHT  15
C               SKIP IF NO RATCHETS DEFINED                                     RATCHT  16
      IF (NRA .EQ. 0)  RETURN                                                   HVAC7  664
C                                                                               RATCHT  18
C               LOOP THROUGH ALL UTILITY-RATES                                  RATCHT  19
      DO 400 IURN=1,NUR                                                         RATCHT  20
        JUR = IUR + (IURN-1)*LUR                                                HVAC7  665
C               NUMBER OF UNIQUE RATCHETS IN THIS UTILITY-RATE                  RATCHT  22
        NURR = <NUM_ALL_RATCHETS>                                               HVAC7  666
                                                                                RATCHT  24
C               SKIP IF NO RATCHETS                                             RATCHT  25
        IF (NURR .EQ. 0)  GOTO 400                                              RATCHT  26
C                                                                               RATCHT  27
C               LOOP THROUGH ALL RATCHETS                                       RATCHT  28
        DO 100  JR=1,NURR                                                       RATCHT  29
C               POINTERS TO RATCHET BLOCK                                       HVAC7  667
          JRA = <UR_ALL_RATCHETS>                                               HVAC7  668
C                                                                               RATCHT  33
C               ADJUST RATCHET DEMAND BY OFFSET AND FRACTION, AND STORE IN      RATCHT  34
C               TEMPORARY ARRAY                                                 RATCHT  35
          DO 10  IB=1,12                                                        RATCHT  36
  10        DEMMON(IB) = AMAX1((<R-BILL-DEM> + <OFFSET>), 0.)                   RATCHT  37
     -                            * <FRACTION>                                  RATCHT  38
C                                                                               RATCHT  39
C               NUMBER OF MONTHS IN WINDOW OVER WHICH RATCHETED DEMAND LASTS    RATCHT  40
          NWINDO = <NUM-RATCHET-MON>                                            RATCHT  41
C                                                                               RATCHT  42
C               SKIP MOST OF THIS IF WINDOW IS ONLY ONE MONTH LONG              RATCHT  43
          IF (NWINDO .EQ. 1)                                                    RATCHT  44
     -      THEN                                                                RATCHT  45
                   DO 20  IB = 1,12                                             RATCHT  46
   20              <R-BILL-DEM> = DEMMON(IB)                                    RATCHT  47
                 GO TO 100                                                      RATCHT  48
            ENDIF                                                               RATCHT  49
C                                                                               RATCHT  50
C               RATCHET MAY BE EITHER THE HIGHEST (TYPE=0) OR AVERAGE (TYPE=1)  RATCHT  51
C               ALSO, IF THE WINDOW IS SMALLER THAN THE PERIOD DEFINED BY       RATCHT  52
C               THE RATCHET WINDOW, THE WINDOW SLIDES.                          RATCHT  53
          ITYPE = <R-TYPE>                                                      RATCHT  54
          DO 50  J=1,12                                                         RATCHT  55
            PEAK    = 0.                                                        RATCHT  56
            TEMP(J) = 0.                                                        RATCHT  57
            MOACTV  = 0                                                         RATCHT  58
            IB  = J                                                             RATCHT  59
C               IF A SLIDING WINDOW IS USED WITH A SCHEDULE, SET RATCHET        RATCHT  60
C               TO ZERO DURING INACTIVE MONTHS                                  RATCHT  61
            IF ((<RATCHET-ACTIVE> .EQ. 0) .AND. (NWINDO .LT. 12))               RATCHT  62
     -                                                         GOTO 50          RATCHT  63
C               NOW LOOK AT MONTHS IN WINDOW                                    RATCHT  64
            DO 35  I=1,NWINDO                                                   RATCHT  65
C               SKIP THIS MONTH IF INACTIVE                                     RATCHT  66
   25         IF (<RATCHET-ACTIVE> .EQ. 0) GOTO 30                              RATCHT  67
C               OTHERWISE STORE PEAKS - EITHER MAX FOR PEAK OR SUM FOR          RATCHT  68
C               AVERAGE.                                                        RATCHT  69
              IF (ITYPE .EQ. 0) THEN                                            RATCHT  70
                                     PEAK   = AMAX1(PEAK, DEMMON(IB))           RATCHT  71
                                ELSE                                            RATCHT  72
                                     PEAK   = PEAK + DEMMON(IB)                 RATCHT  73
                                     MOACTV = MOACTV + 1                        RATCHT  74
                                ENDIF                                           RATCHT  75
C               AND GO BACK ONE MONTH FURTHER                                   RATCHT  76
              IB = IB - 1                                                       RATCHT  77
              IF (IB .EQ. 0) IB = 12                                            RATCHT  78
C               BUT NOT FURTHER THAN WHERE IT STARTED                           RATCHT  79
              IF (IB .EQ. J) GOTO 40                                            RATCHT  80
              GO TO 35                                                          RATCHT  81
C               WHEN RATCHET INACTIVE IN A MONTH, GO BACK ONE MONTH FURTHER     RATCHT  82
   30         IB = IB - 1                                                       RATCHT  83
              IF (IB .EQ. 0) IB = 12                                            RATCHT  84
              IF (IB .EQ. J) GOTO 40                                            RATCHT  85
              GO TO 25                                                          RATCHT  86
   35       CONTINUE                                                            RATCHT  87
C               TEMPORARILY STORE PEAK FOUND FOR SLIDING WINDOW.  FOR AVERAGE,  RATCHT  88
C               DIVIDE TOTAL FOUND IN WINDOW BY NUMBER OF ACTIVE MONTHS         RATCHT  89
C               FOUND IN WINDOW                                                 RATCHT  90
   40       IF (ITYPE .EQ. 0) THEN                                              RATCHT  91
                                   TEMP(J) = PEAK                               RATCHT  92
                              ELSE                                              RATCHT  93
                                   TEMP(J) = PEAK / AMAX0(MOACTV,1)             RATCHT  94
                              ENDIF                                             RATCHT  95
C                                                                               RATCHT  96
C               END OF CALCULATIONS FOR THIS MONTH                              RATCHT  97
   50     CONTINUE                                                              RATCHT  98
C                                                                               RATCHT  99
C               NOW PUT RATCHETED DEMANDS BACK INTO RATCHET FOR USE BY          RATCHT 100
C               BLOCK-CHARGES OR UTILITY-RATES                                  RATCHT 101
          DO 60  IB=1,12                                                        RATCHT 102
   60       <R-BILL-DEM> = TEMP(IB)                                             RATCHT 103
C                                                                               RATCHT 104
C               REPEAT CALCULATIONS FOR NEXT RATCHET                            RATCHT 105
  100   CONTINUE                                                                RATCHT 106
C               AND FOR NEXT UTILITY-RATE                                       RATCHT 107
  400 CONTINUE                                                                  RATCHT 108
C                                                                               RATCHT 109
C                                                                               RATCHT 110
  999 CONTINUE                                                                  RATCHT 111
      RETURN                                                                    RATCHT 112
      END                                                                       RATCHT 113
      SUBROUTINE READSE(ISIM)                                                   HVAC7  669
C                                                                               READSE   3
C              READ ECONOMICS STANDARD FILE AND PLANT DESIGN FILE               READSE   4
C                                                                               READSE   5
C              DEVELOPED BY                                                     -130     1
C                            S. D. Gates                                        -130     2
C                            J. J. Hirsch                                       -130     3
C                            James J. Hirsch & Associates                       -130     4
C                            Camarillo, California                              -130     5
C              PARTLY BASED UPON EARLIER SOFTWARE DEVELOPED BY                  -130     6
C                            F. C. Winkelmann                                   -130     7
C                            J. H. Eto                                          -130     8
C                            Lawrence Berkeley National Laboratory              -130     9
C                            University of California                           -130    10
C                                                                               -130    11
Copyright (c) 1997 by James J. Hirsch. All Rights Reserved. Unpublished         -130    12
c rights reserved under the Copyright Laws of the United States.                -130    13
c RESTRICTED RIGHTS NOTICE: Government use, reproduction or disclosure          -130    14
c is subject to restrictions as set forth in Rights in Data (g)(3) in           -130    15
c UC/LBNL purchase order 4607010 with J.J. Hirsch & Associates.                 -130    16
      COMMON /CTRL  / VERS(2),IRPFLG(4),IOVRLL(7),IWRTFL,                       /CTRL/   2
     1                IPROG, IFATAL, NAMPRG(3,7), MTRICR                        /CTRL/   3
      INTEGER        VERS                                                       Rfg1     1
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044a    1
     1                IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL,                        /FILES/  3
     2                IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                    /FILES/  4
     3                IHRREP(3), IHRPAS(2)                                      /FILES/  5
      COMMON /HOLALT/ NHOLA(2),IHOLTY(2),IHOLDY(60,2),IHOLMN(60,2)              HOLID1   1
      COMMON /IRUNPD/ NRUNPD, JRUNPD, IRUNPD(6,15)                              /IRUNPD/ 2
      COMMON /COSTS / FCPLAN,RCPLAN,EU,EUS,EC(25),OMPLAN(25),                   HVAC7    1
     $                OMBLDG(25),OMTOT(25),ECSAV(25),OMSAV(25),                 HVAC7    2
     $                TOTSAV(25),CREPTO,CINTOT,ECBTOT,ECTOT,ECSTOT,             HVAC7    3
     $                OMBSTO,OMPTOT,OMBLTO,OMTO,OMSTOT,TOTS,NY,TINV,PVI,        HVAC7    4
     $                PAYBAC,EUSAV,EUSSAV,EUSPVI,EURPVI,SIR,                    HVAC7    5
     $                BGAREA,BNAREA                                             HVAC7    6
      COMMON /TIME  / IDOY, IDOW, IDSTF, ISCHR, ISCDAY, iDSdates(6),            -044e5   1
     1                IMO, IDAY, IYR, IHR, CLOCK(10), IDSFLG,                   HOLID1   2
     2                MONDSC(12), MONLEN(12), MONSDA(12), IEOMDR                /TIME/   4
      COMMON /NAMES / NAMRES(4,14), WINDOW(2), QUALRT(2,4),                     HVAC30   1
     $                RTYPE(2,2),   NOYES(2),  IBLANK(4)                        HVAC7    8
      COMMON /PTRECO/ IUR, IBC, IRA, IBA, ICC, IMT, IMC, Iextra,                HVAC27   1
     $                NUR, NBC, NRA, NBA, NCC, NMT, NMC, Nem,                   HVAC22   1
     $                LUR, LBC, LRA, LBA, LCC, LMT, LMC,                        HVAC7   11
     $                JUR, JBC, JRA,      JCC, JMT, JMC, Jextra,                HVAC27   2
     $                LenBlockOffset                                            Rfg1     2
      COMMON /RUNSE / NDESDY, ISCB, NVECT, NSCHED, LENSCH                       /RUNSE/  2
      COMMON /UTLTYS/ TOTCST, KWBTU                                             HVAC17   1
      REAL            KWBTU                                                     /UTLTYS/ 4
      COMMON  /REPORT/ IREPRT(4,37),IPRG,IUNIQV(100),IUNIQS(100),IUNIQL         BIGNAM   1
      COMMON /TITLE / ITITLE(10,5)                                              /TITLE/  2
      COMMON //       IA(75 000 000)                                            -048a    1
      DIMENSION       AA(75 000 000)                                            -048a    2
      EQUIVALENCE    (AA(1), IA(1))                                             /BLANK/  4
      COMMON /IAX   / IAX, IADIM, IADIMV, IAXMAX, KORE                          /IAX/    2
      COMMON /WCTRL/  IwinReturn, Imsgflg                                       /WCTRL/  2
c              For DLLs, delete Win_MB and enable msgbox.fi                     /WCTRL/  3
#ifndef _DLL                                                                 /* -051     1 */ 
      COMMON /WIN_MB/ MB_OK,MB_ICONSTOP,MB_ICONEXCLAMATION,MB_TASKMODAL,        -051     2
     &                MB_ICONINFORMATION                                        -051     3
#else                                                                        /* -051     4 */ 
      include 'msgbox.fi'                                                       -051     5
#endif                                                                       /* -051     6 */ 
C                                                                               READSE  18
C              THIS PROGRAM USES DYMANIC STORAGE TECHNIQUES FOR THE             READSE  19
C              SCHEDULES, UTILITY-RATES, BLOCK-CHARGES, AND RATCHETS.           READSE  20
C              MAJOR STORAGE IS CONTAINED IN THE ARRAY AA WHICH                 READSE  21
C              IS EQUIV TO IA. THIS ARRAY IS IN BLANK COMMON.                   READSE  22
C              BLANK COMMON AND DYNAMIC STORAGE IS DISCUSSED IN                 READSE  23
C              MORE DETAIL IN THE SYSTEMS SIMULATION.                           READSE  24
C              THE BLOCKS, IN ORDER OF THEIR APPEARENCE IN AA ARE -             READSE  25
C                                                                               READSE  26
C              DAY-SCHEDULES START=1 NUM=NVECT                                  READSE  27
C              .      EACH DAY-SCHEDULE IS 24 WORDS LONG                        READSE  28
C              SCHEDULES     START=ITS NUM=NSCHED                               READSE  29
C              .      FIRST IN BLOCKK IS AN 8 WORD TABLE                        READSE  30
C              .      FOR EACH SCHEDULE. BASE PTR=NSC                           READSE  31
C              .                                                                READSE  32
C              .      THEN THE WEEK-SCHEDULES FOR ALL THE                       READSE  33
C              .      SCHEDULES (10 WORDS) BASE PTR=NWB                         READSE  34
C              RATCHETS        START    = IRA  LEN = LRA                        HVAC7  671
C              .               BASE PTR = JRA  NUM = NRA                        HVAC7  672
C              BLOCK-CHARGES   START    = IBC  LEN = LBC                        HVAC7  673
C              .               BASE PTR = JBC  NUM = NBC                        HVAC7  674
C              UTILITY-RATES   START    = IUR  LEN = LUR                        HVAC7  675
C              .               BASE PTR = JUR  NUM = NUR                        HVAC7  676
C              BASELINE        START    = IBA  LEN = LBA                        HVAC7  677
C                              BASE PTR = IBA  NUM = NBA                        HVAC7  678
C              COMPONENT-COST  START    = ICC  LEN = LCC                        HVAC7  679
C                              BASE PTR = JCC  NUM = NCC                        HVAC7  680
C              .                                                                HVAC7  681
C              ENERGY METERS AND MATERIALS-COST DATA ARE ALSO STORED IN         HVAC7  682
C              AA.  THESE COMPONENTS ARE PASSED TO ECONOMICS FROM THE           HVAC7  683
C              SYSTEMS MODULE VIA THE DESIGN FILE.  WHILE METERS IN             HVAC7  684
C              SYSTEMS ARE TREATED BY TYPE (ELEC, FUEL, STM, AND CHW),          HVAC7  685
C              ALL METERS IN ECONOMICS ARE TREATED THE SAME.                    HVAC7  686
C              NOTE THAT, FOR MATERIALS-COST BLOCKS, THE U-NAME OF THE          HVAC7  687
C              COMPONENT PARENT WAS SUBSTITUTED FOR THE ORIGINAL U-NAME         HVAC7  688
C              OF THE BLOCK (in PlantStatistics).                               HVAC7  689
C              METERS          START    = IMT  LEN = LMT                        HVAC7  690
C              .               BASE PTR = JMT  NUM = NMT                        HVAC7  691
C              MATERIALS-COST  START    = IMC  LEN = LMC                        HVAC7  692
C              .               BASE PTR = JMC  NUM = NMC                        HVAC7  693
c                                                                               HVAC7  694
c                                                                               HVAC7  695
c              Skip simulation if no UTILITY-RATES defined in BDL               HVAC7  696
      READ(ISTNDF,END=1) I                                                      HVAC7  697
      IF (I .NE. 123456)  GOTO 1                                                HVAC11  13
      GOTO 2                                                                    HVAC7  698
c              if file was empty, end simulation                                HVAC7  699
    1 ISIM = 0                                                                  HVAC7  700
      RETURN                                                                    HVAC11  14
    2 ISIM = 1                                                                  HVAC11  15
c                                                                               HVAC7  711
c              Initialize the last word used to AA to zero                      HVAC7  712
      IEND   = 0                                                                HVAC7  713
      IST    = 1                                                                HVAC7  714
c              Read the STANDARD file                                           HVAC7  715
c              Loop thru and read 7 blocks                                      HVAC7  716
      DO  I=1,7                                                                 HVAC7  717
c              each block has a record pair                                     HVAC7  718
c              first record contains the length of the next record              HVAC7  719
        READ (ISTNDF) N,L                                                       HVAC7  720
c              call routine to save a buffer for the record                     HVAC7  721
        CALL GETBUF(IA,L,IEND)                                                  HVAC7  722
c              call routine to read in the record                               HVAC7  723
        CALL READN(ISTNDF,IA(IST),L)                                            HVAC7  724
        IST = IST + L                                                           HVAC7  725
      ENDDO                                                                     HVAC7  726
c              Last record of file contains all pointers                        HVAC7  727
      READ (ISTNDF)  (CLOCK(I),I=1,10), ((ITITLE(I,J),I=1,10),J=1,5),           HVAC7  728
     $ ISCB, NVECT, NSCHED, LENSCH,                                             HVAC7  729
     $ IUR,NUR,LUR, IBC,NBC,LBC, IRA,NRA,LRA, IBA,NBA,LBA, ICC,NCC,LCC,         HVAC7  730
     $ LenBlockOffset, (IREPRT(4,I),I=1,37), LEN                                HVAC7  731
c              check to see if BDL and simulation agree on the length           HVAC7  732
c              of the AA array used to date                                     HVAC7  733
      IF (LEN .NE. IEND)  THEN                                                  HVAC7  734
        CALL MSGSIM(-2,II,II,II,II)                                             HVAC7  735
        WRITE (IOUTPT, 3948) LEN, IEND                                          HVAC7  736
 3948   FORMAT(14X,'BDL and READSS do not agree on the length of the'           HVAC7  737
     $        /14X,'AA array after the ECONOMICS read.  Please report'          HVAC7  738
     $        /14X,'this message to your program supplier.'                     HVAC7  739
     $        /14X,'BDL LEN=',I7,' READSE IEND=',I7)                            HVAC7  740
      ENDIF                                                                     HVAC7  741
c                                                                               HVAC7  742
c              data dump before utility setup                                   HVAC7  743
      IF (IREPRT(4,34) .NE. 0)  THEN                                            HVAC7  744
        WRITE(IOUTPT,9901) IUR,NUR,LUR, IBC,NBC,LBC, IRA,NRA,LRA,               HVAC7  745
     $                     IBA,NBA,LBA, ICC,NCC,LCC,                            HVAC7  746
     $                     IMT,NMT,LMT, IMC,NMC,LMC                             Rfg1   166
        CALL DUMPIT(20HAA BEFORE DSNFIL    , AA(1) , IEND)                      HVAC7  748
      ENDIF                                                                     HVAC7  749
c                                                                               HVAC7  750
c              Read the DESIGN file                                             HVAC7  751
c              First, number of different METER types and MATERIALS-COSTs,      HVAC7  752
c              and miscellaneous data                                           HVAC7  753
      READ (IDSNFL) Nmt, NMC,                                                   Rfg1   167
     $              EU, EUS,                                                    Rfg1   168
     $              NDESDY, NRUNPD, IRUNPD, BGAREA, BNAREA,                     Rfg1   169
     $              NHOLA,IHOLTY,IHOLDY,IHOLMN,iDSFlg,iDSdates                  -044e5   2
c                                                                               Rfg1   171
c              Read in the METERS from SYSTEMS - The length                     Rfg1   172
c              of the METERS block is 30, but only the first 13 values          Rfg1   173
c              are read from systems                                            Rfg1   174
      Lmt   = 30                                                                Rfg1   175
      Nread = 13                                                                Rfg1   176
      Imt   = IST                                                               Rfg1   177
      DO  IM=1,Nmt                                                              Rfg1   178
        CALL GETBUF(IA, Lmt, IEND)                                              Rfg1   179
        CALL READN (IDSNFL, IA(IST), Nread)                                     Rfg1   180
        IST = IST + Lmt                                                         Rfg1   181
      ENDDO                                                                     Rfg1   182
c ?? cogen ??                                                                   HVAC7  799
c                                                                               HVAC7  800
c              Read in the MATERIALS-COST data from SYSTEMS                     HVAC7  801
c              The length of the block is 60, but only the                      HVAC7  802
c              first 34 are read from SYSTEMS                                   HVAC7  803
      IMC   = IST                                                               HVAC7  804
      LMC   = 60                                                                HVAC7  805
      Nread = 34                                                                HVAC7  806
      DO  IM=1,NMC                                                              HVAC7  807
        CALL GETBUF(IA, LMC, IEND)                                              HVAC7  808
        CALL READN (IDSNFL, IA(IST), Nread)                                     HVAC7  809
        IST = IST + LMC                                                         HVAC7  810
      ENDDO                                                                     HVAC7  811
c                                                                               HVAC7  812
c              Convert baseline energy from MBtu to Btu                         HVAC7  813
      IF (NBA .EQ. 1)  THEN                                                     HVAC7  814
        <BA-SITE-ENERGY>   = <BA-SITE-ENERGY>   * 1.E6                          HVAC7  815
        <BA-SOURCE-ENERGY> = <BA-SOURCE-ENERGY> * 1.E6                          HVAC7  816
      ENDIF                                                                     HVAC7  817
c                                                                               HVAC7  818
c              data dump before utility setup                                   HVAC7  819
      IF (IREPRT(4,34) .NE. 0)  THEN                                            HVAC7  820
        WRITE(IOUTPT,9901) IUR,NUR,LUR, IBC,NBC,LBC, IRA,NRA,LRA,               HVAC7  821
     $                     IBA,NBA,LBA, ICC,NCC,LCC,                            HVAC7  822
     $                     IMT,NMT,LMT, IMC,NMC,LMC                             Rfg1   183
        CALL DUMPIT(20HAA ARRAY            , AA(1) , IEND)                      HVAC7  824
      ENDIF                                                                     HVAC7  825
c                                                                               HVAC7  826
c              Check defaults and consistency of energy utilities               HVAC7  827
      CALL DEFCHK                                                               HVAC7  828
      IF (IwinReturn .ne. 0) THEN                                               -050x   11
        Call MessageBox( NULL, 'DEFCHK errors -'                                -050x   12
     &    //' ABORTING'//char(0),'DEFCHK Errors'//char(0), MB_OK                -050x   13
     &    + MB_ICONSTOP + MB_TASKMODAL )                                        -050x   14
        Return                                                                  -050x   15
      ENDIF                                                                     -050x   16
c                                                                               HVAC7  829
c              Set the report flag for the report generator                     HVAC7  830
      IE     = 14                                                               HVAC7  831
      IF(IREPRT(4,15) .EQ. 0)  IE = 30                                          HVAC7  832
      DO  I=1,IE                                                                HVAC7  833
        IF( (I.NE.15) .AND. (IREPRT(2,I).GT.0) )  IRPFLG(1) = 1                 HVAC7  834
      ENDDO                                                                     HVAC7  835
c              Initialize the reports                                           HVAC7  836
      CALL EconReports(-1)                                                      HVAC7  837
c                                                                               HVAC7  838
c              data dump after utility setup                                    HVAC7  839
      IF (IREPRT(4,34) .NE. 0)                                                  HVAC7  840
     $  CALL DUMPIT(20HAA after DEFCHK     , AA(1) , IEND)                      HVAC7  841
c                                                                               HVAC7  842
 9999 RETURN                                                                    HVAC7  843
c                                                                               HVAC7  844
c              debug formats                                                    HVAC7  845
 9901 FORMAT(' Dump of ECONOMICS pointers'                                      HVAC7  846
     $   /1X,'    IUR   NUR   LUR   IBC   NBC   LBC   IRA   NRA   LRA'          HVAC7  847
     $   /1X,  9I6,                                                             HVAC7  848
     $   /1X,'    IBA   NBA   LBA   ICC   NCC   LCC   IMT   NMT   LMT'          HVAC7  849
     $   /1X,  9I6,                                                             HVAC7  850
     $   /1X,'    IMC   NMC   LMC'                                              Rfg1   185
     $   /1X,  9I6)                                                             HVAC7  852
c                                                                               HVAC7  853
      END                                                                       READSE 102
      SUBROUTINE SCOST                                                          SCOST    2
C                                                                               SCOST    3
C              CALCULATES ENERGY AND OPERATIONS COST SAVINGS,                   SCOST    4
C              TOTAL SAVINGS, INVESTMENT(THIS RUN),                             SCOST    5
C              INCREMENTAL INVESTMENT, SAVINGS TO INVESTMENT                    SCOST    6
C              RATIO, AND DISCOUNTED PAYBACK PERIOD                             SCOST    7
C                                                                               SCOST    8
      COMMON //       IA(75 000 000)                                            -048a    1
      DIMENSION       AA(75 000 000)                                            -048a    2
      EQUIVALENCE    (AA(1), IA(1))                                             /BLANK/  4
      COMMON /COSTS / FCPLAN,RCPLAN,EU,EUS,EC(25),OMPLAN(25),                   HVAC7    1
     $                OMBLDG(25),OMTOT(25),ECSAV(25),OMSAV(25),                 HVAC7    2
     $                TOTSAV(25),CREPTO,CINTOT,ECBTOT,ECTOT,ECSTOT,             HVAC7    3
     $                OMBSTO,OMPTOT,OMBLTO,OMTO,OMSTOT,TOTS,NY,TINV,PVI,        HVAC7    4
     $                PAYBAC,EUSAV,EUSSAV,EUSPVI,EURPVI,SIR,                    HVAC7    5
     $                BGAREA,BNAREA                                             HVAC7    6
      COMMON /PTRECO/ IUR, IBC, IRA, IBA, ICC, IMT, IMC, Iextra,                HVAC27   1
     $                NUR, NBC, NRA, NBA, NCC, NMT, NMC, Nem,                   HVAC22   1
     $                LUR, LBC, LRA, LBA, LCC, LMT, LMC,                        HVAC7   11
     $                JUR, JBC, JRA,      JCC, JMT, JMC, Jextra,                HVAC27   2
     $                LenBlockOffset                                            Rfg1     2
C                                                                               SCOST   10
      DO  IY=1,NY                                                               HVAC7  856
C              ENERGY COST SAVINGS                                              HVAC7  857
        ECSAV(IY)  = <BA-ENERGY-COST>-EC(IY)                                    HVAC7  858
        ECBTOT     = ECBTOT+<BA-ENERGY-COST>                                    HVAC7  859
        ECTOT      = ECTOT+EC(IY)                                               HVAC7  860
        ECSTOT     = ECSTOT+ECSAV(IY)                                           HVAC7  861
C              OPERATIONS COST SAVINGS                                          HVAC7  862
        OMTOT(IY)  = OMPLAN(IY)+OMBLDG(IY)                                      HVAC7  863
        OMSAV(IY)  = <BA-OPER-COST>-OMTOT(IY)                                   HVAC7  864
        OMBSTO     = OMBSTO+<BA-OPER-COST>                                      HVAC7  865
        OMPTOT     = OMPTOT+OMPLAN(IY)                                          HVAC7  866
        OMBLTO     = OMBLTO+OMBLDG(IY)                                          HVAC7  867
        OMTO       = OMTO+OMTOT(IY)                                             HVAC7  868
        OMSTOT     = OMSTOT+OMSAV(IY)                                           HVAC7  869
C              TOTAL SAVINGS                                                    HVAC7  870
        TOTSAV(IY) =ECSAV(IY)+OMSAV(IY)                                         HVAC7  871
        TOTS       = TOTS+TOTSAV(IY)                                            HVAC7  872
      ENDDO                                                                     HVAC7  873
C              INVESTMENT (THIS RUN)                                            SCOST   29
C              NON-PLANT (BLDG) ITEMS- FIRST COST                               SCOST   30
C              (INCLUDING INSTALLATION)                                         SCOST   31
C              PLUS REPLACEMENTS (LESS RESIDUAL VALUE)                          SCOST   32
      DO  NC=1,NCC                                                              HVAC7  874
        JCC = ICC + (NC-1)*LCC                                                  HVAC7  875
        TINV   = TINV + <CC_FIRST_TOTAL> + <CC_INSTALL_TOTAL>                   HVAC7  876
     $                                   + <CC_REPLACE_PV>                      HVAC7  877
      ENDDO                                                                     HVAC7  878
C              ADD PLANT FIRST COST AND REPLACEMENT COST                        SCOST   38
      TINV   = TINV + FCPLAN + RCPLAN                                           SCOST   39
C              INCREMENTAL INVESTMENT (THIS RUN INVESTMENT                      SCOST   40
C              MINUS BASELINE FIRST AND REPLACEMENT COSTS)                      SCOST   41
      PVI    = TINV - <BA-FIRST-COST> - <BA-REPLACE-COST>                       HVAC7  879
C              SAVINGS-TO-(INCREMENTAL) INVESTMENT RATIO                        SCOST   43
      IF ( ABS( PVI ). GE . 1E-04 ) SIR = TOTS/PVI                              SCOST   44
C              DISCOUNTED PAYBACK PERIOD                                        SCOST   45
C              IF SAVINGS % 0, SET PAYBACK PERIOD = 999.                        SCOST   46
C              IF INVESTMENT % 0 SET PAYBACK PERIOD = 0                         SCOST   47
C              IF INVESTMENT > 0 AND 0<SAVINGS<INVESTMENT                       SCOST   48
C              APPROXIMATE PAYBACK AS PROJECT LIFETIME *                        SCOST   49
C              INVESTMENT/SAVINGS ;                                             SCOST   50
C              OTHERWISE PAYBACK=YEARS FOR ACCUMULATED                          SCOST   51
C              SAVINGS TO EQUAL INVESTMENT                                      SCOST   52
      PAYBAC = 999.                                                             SCOST   53
      IF(TOTS.LE.0.) GO TO 45                                                   SCOST   54
      PAYBAC = 0.                                                               SCOST   55
      IF(PVI.LE.0.) GO TO 45                                                    SCOST   56
      IF(TOTS.LE.PVI) GO TO 44                                                  SCOST   57
      K      = 0                                                                SCOST   58
      BAL    = PVI                                                              SCOST   59
   40 K      = K+1                                                              SCOST   60
      IF(K.GT.NY) GO TO 45                                                      SCOST   61
      BAL    = BAL-TOTSAV(K)                                                    SCOST   62
      IF(BAL.GT.0.) GO TO 40                                                    SCOST   63
      BAL    = BAL + TOTSAV(K)                                                  SCOST   64
      F      = BAL/TOTSAV(K)                                                    SCOST   65
      PAYBAC = K-1+F                                                            SCOST   66
      GO TO 45                                                                  SCOST   67
   44 PAYBAC = (PVI /TOTS)*<PROJECT-LIFE>                                       HVAC7  880
   45 CONTINUE                                                                  SCOST   69
C              ANNUAL ENERGY USE SAVINGS (BTU)                                  SCOST   70
C              --AT SITE                                                        SCOST   71
      EUSAV  = <BA-SITE-ENERGY> - EU                                            HVAC7  881
C              --AT SOURCE                                                      HVAC7  882
      EUSSAV = <BA-SOURCE-ENERGY> - EUS                                         HVAC7  883
C              ENERGY USE SAVINGS TO INVESTMENT RATIO (BTU/$)                   SCOST   75
      IF ( ABS( PVI ). LT . 1E-04 ) GO TO 50                                    SCOST   76
      EUSPVI = (EUSAV/PVI)*NY                                                   SCOST   77
      EURPVI = (EUSSAV/PVI)*NY                                                  SCOST   78
   50 CONTINUE                                                                  SCOST   79
      RETURN                                                                    SCOST   80
      END                                                                       SCOST   81
      SUBROUTINE UTRATE                                                         UTRATE   2
C                                                                               UTRATE   3
C               ASSESSES OVERALL COSTS FOR EACH UTILITY-RATE, INCLUDING         UTRATE   4
C               COSTS ALREADY CALCULATED FOR BLOCK-CHARGES, AND USING ANY       UTRATE   5
C               APPLICABLE RATCHETED DEMANDS.                                   UTRATE   6
C                                                                               UTRATE   7
C              DEVELOPED BY                                                     -130     1
C                            S. D. Gates                                        -130     2
C                            J. J. Hirsch                                       -130     3
C                            James J. Hirsch & Associates                       -130     4
C                            Camarillo, California                              -130     5
C              PARTLY BASED UPON EARLIER SOFTWARE DEVELOPED BY                  -130     6
C                            F. C. Winkelmann                                   -130     7
C                            J. H. Eto                                          -130     8
C                            Lawrence Berkeley National Laboratory              -130     9
C                            University of California                           -130    10
C                                                                               -130    11
Copyright (c) 1997 by James J. Hirsch. All Rights Reserved. Unpublished         -130    12
c rights reserved under the Copyright Laws of the United States.                -130    13
c RESTRICTED RIGHTS NOTICE: Government use, reproduction or disclosure          -130    14
c is subject to restrictions as set forth in Rights in Data (g)(3) in           -130    15
c UC/LBNL purchase order 4607010 with J.J. Hirsch & Associates.                 -130    16
C                                                                               UTRATE   8
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044a    1
     1                IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL,                        /FILES/  3
     2                IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                    /FILES/  4
     3                IHRREP(3), IHRPAS(2)                                      /FILES/  5
      COMMON /UTLTYS/ TOTCST, KWBTU                                             HVAC17   1
      REAL            KWBTU                                                     /UTLTYS/ 4
      COMMON //       IA(75 000 000)                                            -048a    1
      DIMENSION       AA(75 000 000)                                            -048a    2
      EQUIVALENCE    (AA(1), IA(1))                                             /BLANK/  4
      COMMON /PTRECO/ IUR, IBC, IRA, IBA, ICC, IMT, IMC, Iextra,                HVAC27   1
     $                NUR, NBC, NRA, NBA, NCC, NMT, NMC, Nem,                   HVAC22   1
     $                LUR, LBC, LRA, LBA, LCC, LMT, LMC,                        HVAC7   11
     $                JUR, JBC, JRA,      JCC, JMT, JMC, Jextra,                HVAC27   2
     $                LenBlockOffset                                            Rfg1     2
      COMMON  /REPORT/ IREPRT(4,37),IPRG,IUNIQV(100),IUNIQS(100),IUNIQL         BIGNAM   1
C                                                                               UTRATE  14
C                                                                               UTRATE  15
C               FIRST, CALCULATE VALUES OF ALL RATCHETS IN ALL UTILITY-RATES    UTRATE  16
      CALL RATCHT                                                               UTRATE  17
C                                                                               UTRATE  18
C               LOOP THRU EACH UTILITY-RATE.  SKIP IF NONE                      UTRATE  19
      IF (NUR .EQ. 0)  RETURN                                                   UTRATE  20
      DO 300  IURN=1,NUR                                                        UTRATE  21
        JUR = IUR + (IURN-1)*LUR                                                HVAC7  884
C                                                                               UTRATE  23
C               TOTAL YEARLY ENERGY, COST AND PEAK                              UTRATE  24
        URENGY = 0.                                                             UTRATE  25
        URCOST = 0.                                                             UTRATE  26
        URPEAK = 0.                                                             UTRATE  27
C                                                                               UTRATE  28
C               DETERMINE MONTHS IN WHICH THE UTILITY-RATE QUALIFIES.           UTRATE  29
C               EVALUATE ONLY FOR MONTHS SCHEDULED TO BE ACTIVE (PREVIOUSLY     UTRATE  30
C               DETERMINED IN PLTPRO).  THE QUALIFY-RATE PARAMETERS ARE:        UTRATE  31
C                1  ALL-MONTHS     - NO QUALIFICATION, ALWAYS USED              UTRATE  32
C                2  ONE-MONTH-MIN  - (ONE MON .GE. MIN) + (ALL MON .LT. MAX)    UTRATE  33
C                3  ALL-MONTHS-MIN - (ALL MON .GE. MIN) + (ONE MON .LT. MAX)    UTRATE  34
C                4  MONTH-BY-MONTH - FOR EACH MONTH, ENERGY AND DEMAND          UTRATE  35
C                   .GE. MIN AND .LT. MAX.  THIS IMPLIES UTILITY-RATES CAN BE   UTRATE  36
C                   SWITCHED EVERGY BILLING PERIOD                              UTRATE  37
C                                                                               UTRATE  38
C               MINIMUM ENERGY AND DEMAND QUALIFIERS                            UTRATE  39
        ID = 1                                                                  UTRATE  40
        ENMIN  = <ENERGY-QUALS>                                                 UTRATE  41
        DEMMIN = <DEMAND-QUALS>                                                 UTRATE  42
C               MAXIMUM ENERGY AND DEMAND QUALIFIERS                            UTRATE  43
        ID = 2                                                                  UTRATE  44
        ENMAX  = <ENERGY-QUALS>                                                 UTRATE  45
        DEMMAX = <DEMAND-QUALS>                                                 UTRATE  46
C                                                                               UTRATE  47
        IQRATE =  <QUALIFY-RATE>                                                UTRATE  48
C                                                                               UTRATE  49
C               QUALIFY-RATE = ALL-MONTHS                                       UTRATE  50
        IF (IQRATE .EQ. 1)                                                      UTRATE  51
     -    THEN                                                                  UTRATE  52
                DO 10  IB=1,12                                                  UTRATE  53
   10           IF (<UR-QUAL-SCH-ON> .EQ. 1) <UR-QUALIFY> = 1                   UTRATE  54
                GOTO 100                                                        UTRATE  55
          ENDIF                                                                 UTRATE  56
C                                                                               UTRATE  57
C               QUALIFY-RATE = ONE-MONTH-MIN OR ALL-MONTHS-MIN                  UTRATE  58
        IF ((IQRATE .NE. 2) .AND. (IQRATE .NE. 3))  GOTO 45                     UTRATE  59
C               NUMBER OF TIMES MIN QUALIFIER EXCEEDED AND                      UTRATE  60
C               MAX QUALIFIER NOT EXCEEDED.                                     UTRATE  61
          NMIN   = 0                                                            UTRATE  62
          NMAX   = 0                                                            UTRATE  63
C               NACTIV IS THE NUMBER OF MONTHS THE QUAL-SCH IS ACTIVE           UTRATE  64
          NACTIV = 0                                                            UTRATE  65
C               LOOP THROUGH BILLING PERIODS AND EVALUATE QUALIFIERS ONLY       UTRATE  66
C               DURING THE MONTHS THE QUAL-SCH IS ACTIVE.  DO NOT               UTRATE  67
C               COUNT QUALIFIERS SET TO 0.                                      UTRATE  68
          DO 20  IB=1,12                                                        UTRATE  69
            IF (<UR-QUAL-SCH-ON> .EQ. 0) GOTO 20                                UTRATE  70
            ENERGY = <UR-MTR-ENGY>                                              UTRATE  71
            DEMAND = <UR-MTR-DEM>                                               UTRATE  72
            NACTIV = NACTIV + 1                                                 UTRATE  73
            IF ((ENMIN .NE. 0.)  .AND. (ENERGY .GE. ENMIN))                     UTRATE  74
     -                                                     NMIN = NMIN+1        UTRATE  75
            IF ((DEMMIN .NE. 0.) .AND. (DEMAND .GE. DEMMIN))                    UTRATE  76
     -                                                     NMIN = NMIN+1        UTRATE  77
            IF ((ENMAX .NE. 0.)  .AND. (ENERGY .LE. ENMAX))                     UTRATE  78
     -                                                     NMAX = NMAX+1        UTRATE  79
            IF ((DEMMAX .NE. 0.) .AND. (DEMAND .LE. DEMMAX))                    UTRATE  80
     -                                                     NMAX = NMAX+1        UTRATE  81
   20     CONTINUE                                                              UTRATE  82
          IMIN = 0                                                              UTRATE  83
          IMAX = 0                                                              UTRATE  84
C                                                                               UTRATE  85
C               IF ONE-MONTH-MIN, AT LEAST ONE MONTH MUST BE ABOVE MINIMUM, AND UTRATE  86
C               NONE ABOVE MAXIMUM.  IF SO, QUALIFY ONLY THE MONTHS ALLOWED     UTRATE  87
C               BY THE SCHEDULE                                                 UTRATE  88
          IF (IQRATE .EQ. 3)  GOTO 35                                           UTRATE  89
            IF (ENMIN  .NE. 0)  IMIN = 1                                        UTRATE  90
            IF (DEMMIN .NE. 0)  IMIN = 1                                        UTRATE  91
            IF (ENMAX  .NE. 0)  IMAX = IMAX + 1                                 UTRATE  92
            IF (DEMMAX .NE. 0)  IMAX = IMAX + 1                                 UTRATE  93
C                                                                               UTRATE  94
            IF ((NMIN .GE. IMIN) .AND. (NMAX .EQ. NACTIV*IMAX))                 UTRATE  95
     -        THEN                                                              UTRATE  96
                  DO 30  IB=1,12                                                UTRATE  97
   30               IF (<UR-QUAL-SCH-ON> .EQ. 1)  <UR-QUALIFY> = 1              UTRATE  98
              ENDIF                                                             UTRATE  99
            GOTO 100                                                            UTRATE 100
C                                                                               UTRATE 101
C               IF ALL-MONTHS-MIN, ALL MONTHS MUST BE ABOVE MINIMUM QUALIFIERS, UTRATE 102
C               (DURING THE MONTHS ENABLED BY THE SCHEDULE) AND AT LEAST ONE    UTRATE 103
C               MONTH MUST BE BELOW MAXIMUM QUALIFIER, EITHER ENERGY OR DEMAND. UTRATE 104
C               IF SO, QUALIFY ONLY THE MONTHS ALLOWED BY THE SCHEDULE          UTRATE 105
   35     IMIN = 0                                                              UTRATE 106
          IMAX = 0                                                              UTRATE 107
          IF (ENMIN  .NE. 0)  IMIN = IMIN + 1                                   UTRATE 108
          IF (DEMMIN .NE. 0)  IMIN = IMIN + 1                                   UTRATE 109
          IF (ENMAX  .NE. 0)  IMAX = 1                                          UTRATE 110
          IF (DEMMAX .NE. 0)  IMAX = 1                                          UTRATE 111
C                                                                               UTRATE 112
          IF ((NMIN .EQ. (NACTIV*IMIN)) .AND. (NMAX .GE. IMAX))                 UTRATE 113
     -      THEN                                                                UTRATE 114
                  DO 40  IB=1,12                                                UTRATE 115
   40               IF (<UR-QUAL-SCH-ON> .EQ. 1)  <UR-QUALIFY> = 1              UTRATE 116
            ENDIF                                                               UTRATE 117
          GOTO 100                                                              UTRATE 118
C                                                                               UTRATE 119
C               IF MONTH-BY-MONTH, THE UTILITY-RATE MAY QUALIFY FOR EACH        UTRATE 120
C               MONTH INDIVIDUALLY, AND NOT QUALIFY FOR OTHERS.                 UTRATE 121
   45   IF (IQRATE .EQ. 4)  THEN                                                UTRATE 122
          DO 50  IB=1,12                                                        UTRATE 123
          ENERGY = <UR-MTR-ENGY>                                                UTRATE 124
          DEMAND = <UR-MTR-DEM>                                                 UTRATE 125
   50     IF ((<UR-QUAL-SCH-ON> .EQ. 1)                                         UTRATE 126
     -        .AND. (ENERGY .GE. ENMIN ) .AND. (DEMAND .GE. DEMMIN)             UTRATE 127
     -        .AND. ((ENERGY .LT. ENMAX ) .OR. (ENMAX  .EQ. 0.))                UTRATE 128
     -        .AND. ((DEMAND .LT. DEMMAX) .OR. (DEMMAX .EQ. 0)) )               UTRATE 129
     -                                          <UR-QUALIFY> = 1                UTRATE 130
          ENDIF                                                                 UTRATE 131
C                                                                               UTRATE 132
C               END OF UTILITY-RATE QUALIFICATION TESTS                         UTRATE 133
C               FOR REPORTS, NOTE WHETHER THE UTILITY-RATE QUALIFIES ALL MONTHS UTRATE 134
  100   NQUAL = 0                                                               UTRATE 135
        DO 101  IB=1,12                                                         UTRATE 136
  101     NQUAL = NQUAL + <UR-QUALIFY>                                          UTRATE 137
        IF (NQUAL .EQ. 12)  <UR-YR-QUALIFY> = 1                                 UTRATE 138
C                                                                               UTRATE 139
C               NOW CALCULATE BLOCK-CHARGES FOR THIS UTILITY-RATE               UTRATE 140
        CALL BLKCHG                                                             HVAC7  885
C                                                                               UTRATE 142
C               NOW CALCULATE UTILITY CHARGES FOR ALL MONTHS THAT               UTRATE 143
C               QUALIFY AS DETERMINED ABOVE.                                    UTRATE 144
        DO 200  IB=1,12                                                         UTRATE 145
          IF (<UR-QUALIFY> .EQ. 0)  GOTO 200                                    UTRATE 146
          ENERGY = <UR-MTR-ENGY>                                                UTRATE 147
          DEMAND = <UR-MTR-DEM>                                                 UTRATE 148
          DEMMIN = DEMAND                                                       UTRATE 149
C                                                                               UTRATE 153
C               NOW LOOP THROUGH ASSOCIATED RATCHETS AND DETERMINE              UTRATE 154
C               BILLING DEMAND                                                  UTRATE 155
          NURR = <NUM-DEM-RATCHETS>                                             HVAC7  886
          IF (NURR .EQ. 0)  GOTO 111                                            UTRATE 157
C               IGNORE ACTUAL MONTHLY DEMAND IF A RATCHET WAS DEFINED           UTRATE 158
C               HAVING A PERIOD OF ONLY ONE MONTH                               UTRATE 159
          IF (<IGNORE-MON-DEM> .EQ. 1)  DEMAND = 0                              UTRATE 160
          DO 110  JR=1,NURR                                                     UTRATE 161
C               POINTER TO RATCHET                                              UTRATE 162
            JRA = <UR-DEM-RATCHETS>                                             HVAC7  887
  110       DEMAND = AMAX1(DEMAND, <R-BILL-DEM>)                                UTRATE 164
  111     CONTINUE                                                              UTRATE 165
C                                                                               UTRATE 166
C               ADJUST ENERGY AND DEMAND QUANTITIES BY MINIMUM QUALIFIERS       UTRATE 167
          IF (<USE-MIN-QUAL> .EQ. 1)                                            UTRATE 168
     -      THEN                                                                UTRATE 169
                  ID = 1                                                        UTRATE 170
                  ENERGY = AMAX1(ENERGY, <ENERGY-QUALS>)                        UTRATE 171
                  DEMAND = AMAX1(DEMAND, <DEMAND-QUALS>)                        UTRATE 172
            ENDIF                                                               UTRATE 173
C               STORE BILLING AMOUNTS FOR REPORTS                               UTRATE 174
          <UR-BILL-ENGY> = ENERGY                                               UTRATE 175
          <UR-BILL-DEM>  = DEMAND                                               UTRATE 176
C                                                                               UTRATE 177
C               ENERGY CHARGES.  TIME-OF-USE CHARGES WERE ALREADY SUMMED        UTRATE 178
C               IN IN PLTPRO.  ADJUST TIME-OF-USE CHARGES BY ANY                UTRATE 179
C               MINIMUM ENERGY-QUALIFIER,                                       UTRATE 180
C               THEN ADD IN UNIFORM CHARGES AND BLOCK CHARGES                   UTRATE 181
          <UR-BILL-ENGY-CHG> = <UR-BILL-ENGY-CHG>                               UTRATE 182
     -                      * ENERGY / AMAX1(<UR-MTR-ENGY>,.0001)               UTRATE 183
          <UR-BILL-ENGY-CHG> = <UR-BILL-ENGY-CHG>                               UTRATE 184
     -                                        + ENERGY * <ENERGY-CHG>           UTRATE 185
     -                                            + <UR-BLK-ENGY-CHG>           UTRATE 186
C               ENERGY COST ADJUSTMENT - TIME-OF-USE ECA WAS ALREADY            HVAC7  888
C               CALCD IN PLTPRO                                                 HVAC7  889
          <UR-BILL-ECA-CHG> = <UR-BILL-ECA-CHG>                                 HVAC7  890
     -                      + <ENERGY-COST-ADJS> * ENERGY                       HVAC7  891
C                                                                               UTRATE 189
C               DEMAND-CHARGES                                                  UTRATE 190
          <UR-BILL-DEM-CHG>  = DEMAND * <DEMAND-CHGS> + <UR-BLK-DEM-CHG>        UTRATE 191
C                                                                               UTRATE 192
C               EXCESS KVAR AND CHARGE                                          UTRATE 193
          IF (<POWER-FACTOR> .GT. 0.)  THEN                                     HVAC7  892
            FRAC   = AMAX1(0., SIN(ACOS(<POWER-FACTOR>))/<POWER-FACTOR>         HVAC7  893
     $                                     - <EXCESS-KVAR-FRAC>)                HVAC31   1
            CHARGE = <EXCESS-KVAR-CHG> * DEMAND * FRAC                          HVAC7  895
            <UR-BILL-KVAR-CHG> = CHARGE                                         HVAC7  896
            <UR-YR-KVAR-CHG>   = <UR-YR-KVAR-CHG> + CHARGE                      HVAC7  897
          ENDIF                                                                 HVAC7  898
C                                                                               UTRATE 199
C               MINIMUM MONTHLY CHARGE BASED ON DEMAND.  FIRST FIND ANY         UTRATE 200
C               RATCHET VALUES.                                                 UTRATE 201
          NURR = <NUM-MIN-MON-RAT>                                              UTRATE 202
          IF (NURR .EQ. 0)                                                      UTRATE 203
     -      THEN                                                                UTRATE 204
                  DEMMIN = DEMAND                                               UTRATE 205
            ELSE                                                                UTRATE 206
                  IF (<IGNORE-MIN-MON-D> .EQ. 1)  DEMMIN = 0                    UTRATE 207
                  DO 120  JR=1,NURR                                             UTRATE 208
C                               POINTER TO RATCHET                              UTRATE 209
                  JRA = <MIN-MON-RATCHETS>                                      HVAC7  899
  120             DEMMIN = AMAX1(DEMMIN, <R-BILL-DEM>)                          UTRATE 211
                  ID = 1                                                        UTRATE 212
                  IF (<USE-MIN-QUAL> .EQ. 1)                                    UTRATE 213
     -                   DEMMIN = AMAX1(DEMMIN, <DEMAND-QUALS>)                 UTRATE 214
            ENDIF                                                               UTRATE 215
C                                                                               UTRATE 216
C               NOW CALCULATE THE MIN-MON-DEM-CHG. OVERWRITE $/UNIT WITH $$     UTRATE 217
          <MIN-MON-DEM-CHGS> = DEMMIN * <MIN-MON-DEM-CHGS>                      UTRATE 218
C                                                                               UTRATE 219
C               MONTHLY RATE LIMITATION, BASED ON ENERGY                        UTRATE 220
          RATLIM = ENERGY * <RATE-LIMITATION>                                   UTRATE 221
C                                                                               UTRATE 222
C               MONTHLY ENERGY COST.  THE RATE LIMITATION APPLIES TO ENERGY,    UTRATE 223
C               DEMAND, AND KVAR CHARGES.  FIXED MONTH-CHGS ARE INCLUDED        UTRATE 224
C               BEFORE APPLYING ANY MINIMUM CHARGES.  ENERGY COST ADJUSTMENTS   UTRATE 225
C               ARE ADDITIONAL TO THE RATE LIMITATION AND ANY MINIMUM CHARGES,  UTRATE 226
C               AND WILL BE KEPT SEPARATE FOR NOW FOR TAX AND SURCHARGE         UTRATE 227
C               CALCULATIONS.                                                   UTRATE 228
          COST = <UR-BILL-ENGY-CHG> + <UR-BILL-DEM-CHG>                         UTRATE 229
     -                              + <UR-BILL-KVAR-CHG>                        UTRATE 230
          IF (RATLIM .GT. 0.)  COST = AMIN1(COST, RATLIM)                       UTRATE 231
          COST   = COST + <MONTH-CHGS>                                          UTRATE 232
          CHGMIN = <MIN-MON-DEM-CHGS> + <MIN-MON-CHGS>                          UTRATE 233
          COST   = AMAX1(COST, CHGMIN)                                          UTRATE 234
C                                                                               UTRATE 235
C               STORE THE MINIMUM MONTHLY CHARGES FOR REPORTS                   UTRATE 236
          <MIN-MON-CHGS> = CHGMIN                                               UTRATE 237
C                                                                               UTRATE 238
C               TAXES AND SURCHARGES - MAY BE BASED ON EITHER A PERCENTAGE OF   UTRATE 239
C               THE DOLLAR CHARGES, OR ON A PER-UNIT BASIS OF ENERGY, OR BOTH.  UTRATE 240
C               TAXES MAY ALSO BE LEVIED ON SURCHARGES, AND VICE VERSA.  IT IS  UTRATE 241
C               ASSUMMED THAT THE SAME RATE WILL NOT HAVE BOTH TAXES ON         UTRATE 242
C               SURCHARGES AND SURCHARGES ON TAXES.                             UTRATE 243
C                                                                               UTRATE 244
C               TOTAL TAXES AND SURCHARGES                                      UTRATE 245
          TAXES  = 0.                                                           UTRATE 246
          SRCHGS = 0.                                                           UTRATE 247
C               FLAG TO INDICATE THAT SURCHARGES ARE INCLUDED IN TAXES          UTRATE 248
          ISRCHG = 0                                                            UTRATE 249
C                                                                               UTRATE 250
C               PER UNIT-ENERGY BASED TAXES, $/UNIT                             HVAC7  900
          NSETS = <NUM-UNT-TAX-BLKS>                                            HVAC7  901
          IF (NSETS .GT. 0)  THEN                                               HVAC7  902
C               CALCULATE TAXES                                                 HVAC7  903
            BASE = ENERGY                                                       HVAC7  904
            DO  ID=1,NSETS                                                      HVAC7  905
C              BLOCK SIZE                                                       HVAC7  906
              BLKSIZ = AMIN1(<UNIT-TAX-BLOCKS>, BASE)                           HVAC7  907
C              LAST BLOCK TAKES EVERYTHING LEFT                                 HVAC7  908
              IF (ID .EQ. NSETS)  BLKSIZ = BASE                                 HVAC7  909
              TAXES = TAXES + BLKSIZ*<UNIT-TAXES>                               HVAC7  910
              BASE  = BASE - BLKSIZ                                             HVAC7  911
            ENDDO                                                               HVAC7  912
          ENDIF                                                                 HVAC7  913
C                                                                               HVAC7  914
C               PER UNIT-ENERGY BASED SURCHARGES                                HVAC7  915
          NSETS = <NUM-UNT-SRG-BLKS>                                            HVAC7  916
          IF (NSETS .GT. 0)  THEN                                               HVAC7  917
C               CALCULATE SURCHARGES                                            HVAC7  918
            BASE = ENERGY                                                       HVAC7  919
            DO  ID=1,NSETS                                                      HVAC7  920
C              BLOCK SIZE                                                       HVAC7  921
              BLKSIZ = AMIN1(<UNIT-SRG-BLOCKS>, BASE)                           HVAC7  922
C              LAST BLOCK TAKES EVERYTHING LEFT                                 HVAC7  923
              IF (ID .EQ. NSETS)  BLKSIZ = BASE                                 HVAC7  924
              SRCHGS = SRCHGS + BLKSIZ*<UNIT-SRCHGS>                            HVAC7  925
              BASE   = BASE - BLKSIZ                                            HVAC7  926
            ENDDO                                                               HVAC7  927
          ENDIF                                                                 HVAC7  928
C                                                                               HVAC7  929
C               PERCENTAGE-BASED TAXES                                          HVAC7  930
          IF (<NUM-PCT-TAX-BLKS> .EQ. 0)  GOTO 160                              HVAC7  931
C               TAXES MAY BE ON (1) COST, (2) ENERGY-COST-ADJ                   HVAC7  932
C               AND/OR (3) SURCHARGES                                           HVAC7  933
          TBASE = 0.                                                            HVAC7  934
          DO  ID=1,3                                                            HVAC7  935
            ITYPE = <PCT-TAXES-APPLY>                                           HVAC7  936
            IF (ITYPE .EQ. 1) TBASE  = TBASE + COST                             HVAC7  937
            IF (ITYPE .EQ. 2) TBASE  = TBASE + <UR-BILL-ECA-CHG>                HVAC7  938
            IF (ITYPE .EQ. 4) ISRCHG = 1                                        HVAC7  939
          ENDDO                                                                 HVAC7  940
C               IF SURCHARGES ARE TAXED, CALCULATE SURCHARGES FIRST             HVAC7  941
          IF (ISRCHG .EQ. 1) GOTO 161                                           HVAC7  942
C               CALCULATE TAXES - INCREMENT TAX BASE BY ANY SURCHARGES          HVAC7  943
  156     IF (ISRCHG .EQ. 1) TBASE = TBASE + SRCHGS                             HVAC7  944
          NSETS = <NUM-PCT-TAX-BLKS>                                            HVAC7  945
          DO  ID=1,NSETS                                                        HVAC7  946
C               BLOCK SIZE                                                      HVAC7  947
            BLKSIZ = AMIN1(<PCT-TAX-BLOCKS>, TBASE)                             HVAC7  948
C              LAST BLOCK TAKES EVERYTHING LEFT                                 HVAC7  949
            IF (ID .EQ. NSETS)  BLKSIZ = TBASE                                  HVAC7  950
            TAXES  = TAXES + BLKSIZ*<PCT-TAXES>*0.01                            HVAC7  951
            TBASE  = TBASE - BLKSIZ                                             HVAC7  952
          ENDDO                                                                 HVAC7  953
C                                                                               HVAC7  954
C               PERCENTAGE TYPE SURCHARGES                                      HVAC7  955
C               DON'T COMPUTE TWICE                                             HVAC7  956
  160     IF (ISRCHG .EQ. 1) GOTO 170                                           HVAC7  957
  161     NSETS = <NUM-PCT-SRG-BLKS>                                            HVAC7  958
          IF ((NSETS .EQ. 0) .AND. (ISRCHG .EQ. 1))  GOTO 156                   HVAC7  959
          IF  (NSETS .EQ. 0)  GOTO 170                                          HVAC7  960
C               TYPES OF CHARGES TO WHICH SURCHARGES APPLY                      HVAC7  961
          BASE = 0.                                                             HVAC7  962
          DO  ID=1,3                                                            HVAC7  963
            ITYPE = <PCT-SRGS-APPLY>                                            HVAC7  964
            IF (ITYPE .EQ. 1) BASE = BASE + COST                                HVAC7  965
            IF (ITYPE .EQ. 2) BASE = BASE + <UR-BILL-ECA-CHG>                   HVAC7  966
            IF (ITYPE .EQ. 3) BASE = BASE + TAXES                               HVAC7  967
          ENDDO                                                                 HVAC7  968
C               CALCULATE SURCHARGES                                            HVAC7  969
          DO  ID=1,NSETS                                                        HVAC7  970
C               BLOCK SIZE                                                      HVAC7  971
            BLKSIZ = AMIN1(<PCT-SRG-BLOCKS>, BASE)                              HVAC7  972
C              LAST BLOCK TAKES EVERYTHING LEFT                                 HVAC7  973
            IF (ID .EQ. NSETS)  BLKSIZ = BASE                                   HVAC7  974
            SRCHGS = SRCHGS + BLKSIZ*<PCT-SRCHGS>*0.01                          HVAC7  975
            BASE   = BASE - BLKSIZ                                              HVAC7  976
          ENDDO                                                                 HVAC7  977
C                                                                               UTRATE 344
C               NOW COMPUTE TAXES IF SURCHARGES ARE INCLUDED IN TAX BASE        UTRATE 345
          IF (ISRCHG .EQ. 1) GOTO 156                                           UTRATE 346
C                                                                               UTRATE 347
C               TOTAL COST INCLUDING ENERGY-COST-ADJ, TAXES, AND SURCHARGES     UTRATE 348
  170     COST = COST + <UR-BILL-ECA-CHG> + TAXES + SRCHGS                      HVAC7  978
          <UR-BILL-CHG>    = COST                                               UTRATE 350
          <UR-BILL-TAXES>  = TAXES                                              UTRATE 351
          <UR-BILL-SRGS>   = SRCHGS                                             UTRATE 352
C               YEARLY TOTALS FOR THIS UTILITY-RATE                             UTRATE 353
          URENGY = URENGY + ENERGY                                              UTRATE 354
          URCOST = URCOST + COST                                                UTRATE 355
          URPEAK = AMAX1(URPEAK, DEMAND)                                        UTRATE 356
C                                                                               UTRATE 357
C               END OF BILLING PERIOD CALCULATIONS                              UTRATE 358
  200   CONTINUE                                                                UTRATE 359
C                                                                               UTRATE 360
C               MAKE REVENUES FROM ENERGY SALES NEGATIVE                        UTRATE 361
        IF (<UR-TYPE> .GE. 11) URCOST = (-URCOST)                               HVAC7  979
C                                                                               UTRATE 363
C               YEARLY DATA                                                     UTRATE 364
        <UR-YR-ENGY> = URENGY                                                   UTRATE 365
        <UR-YR-CHG>  = URCOST                                                   UTRATE 366
        <UR-YR-PEAK> = URPEAK                                                   UTRATE 367
C                                                                               UTRATE 368
C               COST FOR ALL UTILITIES                                          UTRATE 369
        TOTCST = TOTCST + URCOST                                                UTRATE 370
C                                                                               UTRATE 371
C               END OF CALCULATIONS FOR UTILITY-RATES                           UTRATE 372
C                                                                               UTRATE 373
C               DUMPIT STUFF                                                    UTRATE 374
      IF (IREPRT(4,34) .EQ. 0)  GOTO 300                                        IREPRT  16
      CALL DUMPIT(20HUTRATE CALCULATIONS , AA(IUR), LUR)                        HVAC7  980
  300 CONTINUE                                                                  UTRATE 380
C                                                                               UTRATE 381
  999 CONTINUE                                                                  UTRATE 382
      RETURN                                                                    UTRATE 383
      END                                                                       UTRATE 384
