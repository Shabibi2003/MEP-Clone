      SUBROUTINE LOADS                                                          LOADS    2
C                                                                               LOADS    3
C                                                                               LOADS    4
C              ***************************************************              LOADS    5
C              *                                                 *              LOADS    6
C              *                 LOADS PROGRAM                   *              LOADS    7
C              *                                                 *              LOADS    8
C              ***************************************************              LOADS    9
C                                                                               LOADS   10
C              DOE PROGRAM FOR BUILDING ENERGY ANALYSIS                         LOADS   11
C                                                                               LOADS   12
C                                                                               LOADS   13
C                                                                               LOADS   14
C                                                                               LOADS   15
C              DEVELOPED BY LAWRENCE BERKELEY LABORATORY, CONSULTANTS           LOADS   16
C              COMPUTATION BUREAU, ARGONNE NATIONAL LABORATORY, AND             LOADS   17
C              LOS ALAMOS SCIENTIFIC LABORATORY, WITH SUPPORT FROM              LOADS   18
C              THE U.S. DEPARTMENT OF ENERGY                                    LOADS   19
C                                                                               LOADS   20
C                                                                               LOADS   21
C              =======================================================          LOADS   22
C                                                                               LOADS   23
C              LOADS PROGRAM AUTHORS    A.E. ERDEM, Z. CUMALI,                  LOADS   24
C              W.F. BUHL, M. LOKMANHEKIM, AND F.C. WINKELMANN                   LOADS   25
C                                                                               LOADS   26
C              =======================================================          LOADS   27
C                                                                               LOADS   28
C                                                                               LOADS   29
      COMMON /WCTRL/  IwinReturn, Imsgflg                                       /WCTRL/  2
c              For DLLs, delete Win_MB and enable msgbox.fi                     /WCTRL/  3
#ifndef _DLL                                                                 /* -051     1 */ 
      COMMON /WIN_MB/ MB_OK,MB_ICONSTOP,MB_ICONEXCLAMATION,MB_TASKMODAL,        -051     2
     &                MB_ICONINFORMATION                                        -051     3
#else                                                                        /* -051     4 */ 
      include 'msgbox.fi'                                                       -051     5
#endif                                                                       /* -051     6 */ 
      COMMON /SUMBUF/ IBUFSL,IBUFSB,IBUFSE                                      /SUMBUF/ 2
      COMMON /HRPSTA/ ISTUF(20)                                                 /HRPSTA/ 2
      COMMON  /HRREP / Irb, Ihrp, Lrb, Lhrp, Nrb, Nhrp, IVTLIM(3,50),           HRr      1
     &                 IGRPtr, IBRPtr, IRSch, IRSchT(5),                        HRr      2
     &                 NHRTyp(3), ITBUF(3), ITBUFB(3), ITBUFE(3),               HRr      3
     &                 IHREOF, ICDFLG                                           HRr      4
      COMMON  /BEPS  /  BGAREA, BNAREA, PctSysOvrld, PctPltOvrld,               HVAC6    1
     $                  SiteEnergy, SourceEnergy                                HVAC6    2
      DIMENSION         BEPS(6)                                                 HVAC6    3
      EQUIVALENCE       (BEPS(1),BGAREA)                                        HVAC6    4
      COMMON /CLCFLG/ IFSTHR,IPRDFL,IGOLGE,NDD,LDSTYP,IFHRP                     DDAY1    1
      COMMON  /CONST/  DTOR, PIOVR2, PIOVR4, IBLNK, UNDEF, IUNDEF,              /CONST/  2
     1                 UNFILD, URAD, DEFIFR, DEFCFR, DEFINC, KWBTU              /CONST/  3
      REAL             KWBTU                                                    /CONST/  4
      COMMON /CTRL  / VERS(2),IRPFLG(4),IOVRLL(7),IWRTFL,IPROG,                 /CTRL/   2
     1       IFATAL,NAMPRG(3,7),MTRICR                                          /CTRL/   3
      COMMON  /DATEDS/  IDSMON(3)                                               /DATEDS/ 2
      COMMON  /DAYLT/ NDAYCF,IPHS,IZ,IHIT,MHHIT,IL,RHOAV,ATOT,ARHTOT,           /DAYLT/  2
     1                AR(3),AP(3),ARH(3),ARHP(3),NPH,NTH,WC(3),TMULT,           /DAYLT/  3
     2                TSOLNM,TVISDF,FRUP,ISHLOC,NWTOT,RHOCW,RHOFW,WAREA,        /DAYLT/  4
     3                IMREF,PHSUN,THSUN,PHSUND,THSUND,THSMIN,PHSMIN,            /DAYLT/  5
     4                THSMAX,PHSMAX,THSDEL,PHSDEL,H,NTHS,NPHS,NDFC,LWDC,        /DAYLT/  6
     5                BETA,W,IBZ,IWZ,ZENL,JZD,WBACLU(2,2),PF(7,5),              /DAYLT/  7
     6                VIEWVC(3),GLRNDX(2),WDAYIL(2,2),BACLUM(2),ITF(3),         /DAYLT/  8
     7                RDAYIL(2),RBACLU(2),GLRNEW(2),ETACLD,CDIRLW(24),          /DAYLT/  9
     8                CDIFLW(24),ODIFLW(24),SOLIC(12),TFAC,SPHSUN,              /DAYLT/ 10
     9                CPHSUN,PHWN,THWN,SPHWN,CPHWN,TOTIL(2),ATMMOI(12),         /DAYLT/ 11
     1                ATMTUR(12),XRAN,ALFAD,THRAT,PHRAT,SETPNT(2),              /DAYLT/ 12
     2                IZLSG,IZLSH,IZLSJM,IZLSJY,IZDREP,FPHRP(2),ZFTOT,          /DAYLT/ 13
     3                EINTSK(2,12,24),EINTSU(2,12,24),EDIRSK(2,12,24),          VISBL    2
     4                EDIRSU(2,12,24),FLCWSK(2,12),FLCWSU(2,12),                VISBL    3
     5                FLFWSK(2,12),FLFWSU(2,12),GILSK(2,10),GILSU(2,10),        VISBL    4
     6                WLUMSK(2,11,24),WLUMSU(2,11,24),AVWLSK(2,12,24),          VISBL    5
     7                AVWLSU(2,12,24),CHILSK(24),CHILSU(24),OHILSK(24),         VISBL    6
     8                DFSKHR(2,2),DFSUHR(2,2),SFSKHR(2,2),SFSUHR(2,2),          /DAYLT/ 19
     9                BFSKHR(2,2),BFSUHR(2,2),HISUNF,CHISKF,OHISKF,IZLSM        44d5br   1
      COMMON  /DAYL1/  ATMTU, ATMMO, TAU1                                       /DAYLT/ 21
     1               , TVISB, TH, PH, RAY(3), WNORM(3), TVISBR                  /DAYLT/ 22
      COMMON /DESHQ/  IDDFLG,DESHRQ(360),IDDTYP(2)                              DDAY1    2
      COMMON  /DESW/   DESDYQ(34)                                               DDAY1    3
      INTEGER IDESDYQ(34)                                                       DDAY1    4
      EQUIVALENCE (DESDYQ(1),IDESDYQ(1))                                        DDAY1    5
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                         /FILES/  3
     2              , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                    /FILES/  4
     3                IHRREP(3), IHRPAS(2)                                      /FILES/  5
      COMMON /HOLALT/ NHOLA(2),IHOLTY(2),IHOLDY(60,2),IHOLMN(60,2)              HOLID1   1
      COMMON /HRCNTL/  MOHRS,IYRHRS                                             /HRCNT/  2
      COMMON /IAX   / IAX, IADIM, IADIMV, IAXMAX, KORE                          /IAX/    2
      COMMON /INTS  / IZERO,IONE,ITWO,ITHREE,IFOUR,IFIVE,ISIX,                  /INTS/   2
     1                ISEVEN,IEIGHT,ININE,ITEN,                                 /INTS/   3
     2                I11,I12,I13,I14,I15,I16,I17,I18,I19,I20,                  /INTS/   4
     3                I21,I22,I23,I24,I25,I26,I27,I28,I29,I30,                  HVAC     4
     4                I31,I32,I33,I34,I35,I36,I37,I38,I39,I40,                  HVAC     5
     5                I41,I42,I43,I44,I45,I46,I47,I48,I49,I50,                  HVAC     6
     $                I51,I52,I53,I54,I55,I56,I57,I58,I59,I60,                  HVAC6    6
     $                I61,I62,I63,I64,I65,I66,I67,I68,I69,I70,                  HVAC6    7
     $                I71,I72,I73,I74,I75,I76,I77,I78,I79,I80,                  HVAC6    8
     $                I81,I82,I83,I84,I85,I86,I87,I88,I89,I90,                  HVAC6    9
     $                I91,I92,I93,I94,I95,I96,I97,I98,I99,I100                  HVAC6   10
      INTEGER         INTS(101)                                                 HVAC6   11
      EQUIVALENCE(IZERO,INTS(1))                                                /INTS/   7
      COMMON  /IRUNPD/  NRUNPD, JRUNPD, IRUNPD(6,15)                            /IRUNPD/ 2
      COMMON  /LENS/   MWFLEN, MRLEN, MSHLEN, MWNLEN, MDRLEN, MXLEN,            /LENS/   2
     1                 MULEN, MZLEN, MIWLEN, MFLLEN,                            HRr      5
     2                 LMTB, LLDSOU, MSTLEN, LSTFT, MWLLEN                      BLIND    1
      COMMON  /LOCALD/ STALAT, STALON, ITIMZ, BAZIM, BALTIT,                    /LOCALD/ 2
     1                 SSTALA, CSTALA, TSTALA, SBAZIM, CBAZIM                   /LOCALD/ 3
     2                 ,BXORG, BYORG, SHCOEF, TP1, TP2, WSTP1, WSTP2,           /LOCALD/ 4
     3                 WSHGT,WSHGTL(12),ISREFL,IHOLX                            HOLID1   2
      DIMENSION LOCALD(32)                                                      HOLID1   3
      EQUIVALENCE      (LOCALD(1),STALAT)                                       /LOCALD/ 7
      COMMON  /NHRSHR/ NHRSHR(128), IHRCTR(5,128), NHRITM, FILEHR,ICECHS        -048j    1
      INTEGER          FILEHR                                                   /NHRSHR/ 3
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     BLIND    2
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        FLOOR1   3
      COMMON  /PTRBGN/ ISCB, IWFB, IWPB, ICONSB, IGTB, IWLB, IGEOB,             HRr      6
     1                 ISHADB, IWINB, IDRB, IEWB, IUGB, ISPB, IIWPB,            HRr      7
     2                 IIWB, IFLB, ISPCDB, IOTHB, ILHB, IZQCMB, ISSHDB,         HRr      8
     3                 IOHFIB, IZLSK, IZLSL, ISTFB                              HRr      9
      COMMON  /REPORT/ IREPRT(4,37),IPRG,IUNIQV(100),IUNIQS(100),IUNIQL         BIGNAM   1
      COMMON  /RUNTIM/ IDAYBG, IMONBG, IYRBG,  IDAYND, IMONND, IYRND            /RUNTIM/ 2
      COMMON  /SHADWF/ ISDINF, LSHSTR, ISHSTB, KMAX                             /SHADWF/ 2
      COMMON  /SIZE/   LENGTH,NVECT,NSCHED,NWF,NWPAR,NCONS,NGT,NWL,NGEO,        BLIND    5
     1                 NGSHAD, NWIN, NDOOR, NEW, NUG, NSP, NIWP, NIW,           /SIZE/   3
     2                 NFL, NDESDY, NBR, NOTH, NITH, NOPSRF,                    HRr     10
     3                 NSURF, NSSHD, NSHTOT                                     GEO1     1
      COMMON /TIME  / IDOY, IDOW, IDSTF, ISCHR, ISCDAY, iDSdates(6),            -044e5r  1
     1                IMO, IDAY, IYR, IHR, CLOCK(10), IDSFLG,                   HOLID1   4
     2                MONDSC(12), MONLEN(12), MONSDA(12), IEODMR                /TIME/   4
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
      COMMON        // AA(75 000 000)                                           -048ar   1
      INTEGER          IA(75 000 000)                                           -048ar   2
      EQUIVALENCE  (IA(1), AA(1))                                               //       4
      DIMENSION  SPCD(1),ISPCD(1),ZQCM(1)                                       LOADS   59
      DIMENSION ZLSG(1),ZLSH(1),ZLSJM(1),ZLSJY(1),ZDREP(1)                      LOADS   60
      DIMENSION ZLSK(1),ZLSL(1),ZLSM(1)                                         44d5br   2
      DIMENSION DSBUF(1), IDSBUF(1)                                             LOADS   62
C                                                                               LOADS   63
      EQUIVALENCE (SPCD(1),AA(1)), (ISPCD(1),AA(1)),                            LOADS   64
     1            (ZQCM(1),AA(1))                                               LOADS   65
      EQUIVALENCE (ZLSG(1),AA(1)), (ZLSH(1),AA(1)), (ZLSJM(1),AA(1)),           LOADS   66
     1            (ZLSJY(1),AA(1)), (ZDREP(1),AA(1))                            LOADS   67
     2           ,(ZLSK(1),AA(1)),(ZLSL(1),AA(1)),(ZLSM(1),AA(1))               44d5br   3
      EQUIVALENCE (DSBUF(1),AA(1)), (IDSBUF(1),IA(1))                           LOADS   69
C                                                                               LOADS   70
c      write(IOUTPT,'(A20)') 'LOADS-begin*******'                               BLIND    6
C              COUNTERS FOR HOURS IN MONTH AND YEAR                             LOADS   71
      MOHRS  = 0                                                                LOADS   72
      IYRHRS = 0                                                                LOADS   73
C              INITIALIZE ZERO LEVEL STUFF                                      LOADS   74
      CALL INIT0(IA,1024)                                                       LOADS   75
      IF (IwinReturn .ne. 0)  RETURN                                            HRr     11
C              SET THE FIRST HOUR FLAG                                          LOADS   76
      IFSTHR = 1                                                                LOADS   77
C                                                                               LOADS   78
C              CALL THE ROUTINE TO READ THE STANDARD FILE,                      LOADS   79
C              SET POINTERS, AND PRE CALCULATE DATA                             LOADS   80
      CALL  READSF ( IERRF )                                                    LOADS   81
c              Check the value of the error flag                                -051     7
      IF((IERRF .NE. 0) .or. (IwinReturn .ne. 0))  THEN                         -051     8
        IF(IERRF .eq. 2) THEN                                                   -051     9
          CALL MSGSIM(12,IERRF,IERRF,IERRF,IERRF)                               -051    10
          Call MessageBox( NULL, 'VERIFICATION is REPORT-ONLY -'                -051    11
     $    //' No Simulation'//char(0),'LOADS Calculation'//char(0),MB_OK        -051    12
     $    + MB_ICONINFORMATION+MB_TASKMODAL )                                   -051    13
          RETURN                                                                -051    14
        ELSE                                                                    -051    15
          Call MessageBox( NULL, 'Errors during LOADS setup -'                  -051    16
     $    //' ABORTING'//char(0),'LOADS Calculation'//char(0), MB_OK            -051    17
     $    + MB_ICONINFORMATION+MB_TASKMODAL )                                   -051    18
          IwinReturn = 1                                                        -051    19
          RETURN                                                                -051    20
        ENDIF                                                                   -051    21
      ENDIF                                                                     -051    22
C              SIZE THE LARGE CORE BUFFER FOR THE LOADS                         LOADS  104
C              OUTPUT FILE                                                      LOADS  105
C              CALCULATE DAYLIGHTING FACTORS AND GLARE FACTORS                  LOADS  106
C              FOR USE LATER IN THE HOURLY LOOP                                 LOADS  107
      IF (NDAYCF.GT.0) CALL DCOF                                                LOADS  108
      IF ( IwinReturn .ne. 0 )  RETURN                                          HRr     12
C              GET SPACE FOR SHADOW CALC ARRAYS (IF THERE ARE ZONES             LOADS  109
C              WITH DAYLIGHTING, THIS SPACE WILL HAVE ALREADY BEEN              LOADS  110
C              OBTAINED IN SUBR. DCOF)                                          LOADS  111
      IF (NDAYCF.GT.0) GO TO 120                                                LOADS  112
      ISHSTB = MLAST + 1                                                        LOADS  113
      LSHSTR = 400                                                              LOADS  114
      CALL CKAA (IA,LSHSTR)                                                     LOADS  115
  120 CONTINUE                                                                  LOADS  116
C            CALCULATE SKY AND GROUND FORM FACTORS FOR SHADING OF               LOADS  117
C            IR RADIATION AND DIFFUSE SOLAR RADIATION                           LOADS  118
      CALL FFDIF                                                                LOADS  119
      IF ( IwinReturn .ne. 0 )  RETURN                                          HRr     13
C              INITIALIZE THE DESIGN DAY FLAG                                   LOADS  120
      NDD    = NDESDY + 1                                                       LOADS  121
C              FLAG FOR LAST NORMAL RUN PERIOD                                  LOADS  122
      LNRP = NDESDY - NRUNPD + 1                                                LOADS  123
C              LOOP OVER THE RUN PERIODS                                        LOADS  124
      DO 900 IRN=1,NRUNPD                                                       LOADS  125
C              SET RUN PERIOD FIRST HOUR FLAG (RESET IN DAYCLC)                 LOADS  126
      IFHRP = 1                                                                 LOADS  127
C              PICK UP STARTING AND ENDING DATES FROM                           LOADS  128
C              THE RUN PERIOD ARRAY                                             LOADS  129
      JRUNPD = IRN                                                              LOADS  130
      IDAYBG = IRUNPD(2,IRN)                                                    LOADS  131
      IMONBG = IRUNPD(1,IRN)                                                    LOADS  132
      IYRBG  = IRUNPD(3,IRN)                                                    LOADS  133
      IDAYND = IRUNPD(5,IRN)                                                    LOADS  134
      IMONND = IRUNPD(4,IRN)                                                    LOADS  135
      IYRND  = IRUNPD(6,IRN)                                                    LOADS  136
C              SET THE WARM UP PERIOD TO 3 DAYS                                 LOADS  137
      IPRDFL = 7                                                                LOADS  138
C              SET THE FLAG FOR SCHED INITIALIZATION                            LOADS  139
      NSCHED = -NSCHED                                                          LOADS  140
C              NDD > 0 MEANS THIS RUN-PERIOD IS A DESIGN DAY                    LOADS  141
C              NDD LESS THAN OR EQUAL TO ZERO MEANS THIS                        LOADS  142
C              IS A NORMAL RUN PERIOD.                                          LOADS  143
C              NDD = 1 FOR THE LAST DESIGN DAY RUN PERIOD.                      LOADS  144
C              NDD = LNRP ( = NDESDY-NRUNPD+1 ) FOR THE LAST                    LOADS  145
C              NORMAL RUN PERIOD.                                               LOADS  146
C              LOADS SUMMARY REPORTS ARE WRITTEN ONCE FOR COMBINED              LOADS  147
C              DESIGN DAY RUN PERIODS AND ONCE FOR COMBINED NORMAL              LOADS  148
C              RUN PERIODS.                                                     LOADS  149
C              IDDFLG IS USED AS A POINTER                                      DDAY1    6
C              TO THE PRESENT DESIGN DAY DATA IN ROUTINES                       LOADS  151
C              DESDAY AND DESWTH.                                               LOADS  152
      NDD    = NDD - 1                                                          LOADS  153
      IDDFLG  = IRN                                                             DDAY1    7
      IF (IDDFLG.GT.NDESDY) IDDFLG=0                                            DDAY1    8
c              Initialize hourly reports                                        HRr     14
      IF (Nhrp .GT. 0)  Call HourlyReports(0,xx)                                HRr     15
C                                                                               LOADS  169
C              CALL THE INITIALIZATION ROUTINE                                  LOADS  170
      CALL INITLZ(NDD,SPCD(ISPCDB))                                             LOADS  171
      IF ( IwinReturn .ne. 0 )  RETURN                                          HRr     16
C              IF DESIGN DAY, CALCULATE DESIGN DAY TEMPERATURES                 LOADS  172
      IF (NDD .GT. 0)  CALL DESDAY                                              LOADS  173
C              START YEAR LOOP.                                                 LOADS  174
      DO 800 IYR=IYRBG,IYRND                                                    LOADS  175
c              Set up daylight savings parameters                               -044e5r  2
      Call DSTIM0                                                               -044e5r  3
C              CALCULATE BEGINNING AND ENDING MONTH                             LOADS  176
C              FOR MONTH DO LOOP                                                LOADS  177
      IMON2  = 12                                                               LOADS  178
      IF (IYR .EQ. IYRND)  IMON2 = IMONND                                       LOADS  179
      IMON1  = 1                                                                LOADS  180
      IF (IYR .EQ. IYRBG)  IMON1 = IMONBG                                       LOADS  181
C              IF FIRST DESIGN DAY OR FIRST NORMAL RUN PERIOD, WRITE            LOADS  182
C              TITLE RECORDS FOR REPORTS LS-E THRU LS-J                         LOADS  183
      IF (NDD.NE.NDESDY.AND.NDD.NE.0)  GO TO 155                                LOADS  184
      IF(IREPRT(1,20).EQ.1) CALL RLSE(1,ZQCM(IZQCMB))                           IREPRT   2
      IF(IREPRT(1,21).EQ.1) CALL RLSF(1)                                        IREPRT   3
      IF (NDAYCF.EQ.0) GO TO 150                                                LOADS  187
      IF (IREPRT(1,22).EQ.1) CALL RLSG (1,ZLSG(IZLSG),ZDREP(IZDREP))            IREPRT   4
      IF (IREPRT(1,23).EQ.1) CALL RLSH (1,ZLSH(IZLSH))                          IREPRT   5
      IF (IREPRT(1,24).EQ.1) CALL RLSI (1)                                      IREPRT   6
      IF (IREPRT(1,25).EQ.1) CALL RLSJ (1,ZLSJM(IZLSJM),ZLSJY(IZLSJY))          IREPRT   7
      IF (IREPRT(1,28) .EQ. 1)  CALL RLSM(1,ZLSM(IZLSM))                        44d5br   4
  150 CONTINUE                                                                  IREPRT   8
      IF (IREPRT(1,26).EQ.1) CALL RLSK(1,ZLSK(IZLSK))                           IREPRT   9
      IF (IREPRT(1,27).EQ.1) CALL RLSL(1,ZLSL(IZLSL))                           IREPRT  10
  155 CONTINUE                                                                  LOADS  195
C              START MONTH LOOP                                                 LOADS  196
      DO 600 IMO=IMON1,IMON2                                                    LOADS  197
C              CALCULATE BEGINNING AND ENDING DAYS                              LOADS  198
C              FOR THE DAY DO LOOP                                              LOADS  199
      IDAY1  = 1                                                                LOADS  200
      IF ((IMO .EQ. IMONBG) .AND. (IYR .EQ. IYRBG))                             LOADS  201
     1       IDAY1 = IDAYBG                                                     LOADS  202
      IDAY2  = MONLEN(IMO)                                                      LOADS  203
      IF ((IMO .EQ. IMONND) .AND. (IYR .EQ. IYRND))                             LOADS  204
     1       IDAY2 = IDAYND                                                     LOADS  205
C              SET THE SHADOW CALCULATION FLAG.  THE                            LOADS  206
C              SHADOW ROUTINES ARE CALLED ONCE PER MONTH                        LOADS  207
      IGOLGE = 1                                                                LOADS  208
      ATMTU = ATMTUR(IMO)                                                       LOADS  209
      ATMMO = ATMMOI(IMO)                                                       LOADS  210
C              START DAY LOOP                                                   LOADS  211
      DO 400 IDAY=IDAY1,IDAY2                                                   LOADS  212
C              SET DAY OF YEAR AND DAY OF WEEK                                  LOADS  213
      IDOY   = IDOY + 1                                                         LOADS  214
      IDOW   = IDOW + 1                                                         LOADS  215
      IF (IDOW .GT. 7)  IDOW = 1                                                LOADS  216
c---              initialize interpolated weather                               LOADS  217
                  if ( (NDD .le. 0) .and. (IPRDFL .eq. 7) ) call  WTHIN0        LOADS  218
C              CALL MAIN SIMULATION ROUTINE                                     LOADS  219
  300 CALL DAYCLC(SPCD(ISPCDB),ZQCM(IZQCMB),ZLSG(IZLSG),ZLSH(IZLSH),            LOADS  220
     1          ZLSJM(IZLSJM),ZLSJY(IZLSJY),ZDREP(IZDREP),ZLSK(IZLSK)           LOADS  221
     2          ,ZLSL(IZLSL),ZLSM(IZLSM))                                       44d5br   5
C              RESET SHADOW FLAG.  CALL DAYCLC UNTIL WARMUP                     LOADS  223
C              PERIOD IS OVER                                                   LOADS  224
      IGOLGE = 0                                                                LOADS  225
      IF ( IwinReturn .ne. 0 )  GOTO 410                                        -042L4   7
      IF (IPRDFL .EQ. 0)  GO TO 400                                             LOADS  226
      IPRDFL = IPRDFL - 1                                                       LOADS  227
c---               stop using interpolated weather                              LOADS  228
                  if ( IPRDFL .eq. 0 )    call  WTHINS                          LOADS  229
                                                                                LOADS  230
      GO TO 300                                                                 LOADS  231
  400 CONTINUE                                                                  LOADS  232
  410 CONTINUE                                                                  -042L4   8
C              WRITE MONTHLY REPORT RECORDS FOR LS-E THRU LS-J                  LOADS  233
      IF(IREPRT(1,20).EQ.1) CALL RLSE(2,ZQCM(IZQCMB))                           IREPRT  11
      IF(IREPRT(1,21).EQ.1) CALL RLSF(2)                                        IREPRT  12
      IF (NDAYCF.EQ.0) GO TO 590                                                IREPRT  13
      IF (IREPRT(1,22).EQ.1)  CALL RLSG (2,ZLSG(IZLSG),ZDREP(IZDREP))           IREPRT  14
      IF (IREPRT(1,23).EQ.1)  CALL RLSH (2,ZLSH(IZLSH))                         IREPRT  15
      IF (IREPRT(1,24).EQ.1)  CALL RLSI (2)                                     IREPRT  16
      IF (IREPRT(1,25).EQ.1)  CALL RLSJ (2,ZLSJM(IZLSJM),ZLSJY(IZLSJY))         IREPRT  17
      IF (IREPRT(1,28) .EQ. 1)  CALL RLSM(2,ZLSM(IZLSM))                        44d5br   6
  590 CONTINUE                                                                  IREPRT  18
      IF (IREPRT(1,26).EQ.1) CALL RLSK(2,ZLSK(IZLSK))                           IREPRT  19
      IF (IREPRT(1,27).EQ.1) CALL RLSL(2,ZLSL(IZLSL))                           IREPRT  20
      IF ( IwinReturn .ne. 0 )  GOTO 810                                        -042L4   9
  600 CONTINUE                                                                  IREPRT  21
  800 CONTINUE                                                                  IREPRT  22
C              IF LAST DESIGN DAY OR LAST NORMAL RUN PERIOD, CALL THE           IREPRT  23
C              REPORT ROUTINES FOR LS-A THRU LS-J                               IREPRT  24
      IF(NDD.NE.1.AND.NDD.NE.LNRP) GO TO 900                                    IREPRT  25
  810 CONTINUE                                                                  -042L4  10
      LSPCDB = ISPCDB                                                           IREPRT  26
      IF (IREPRT(1,16) .NE. 0)  CALL RLSA(SPCD(ISPCDB))                         IREPRT  27
      IF (IREPRT(1,17) .NE. 0)  CALL RLSB(SPCD(ISPCDB))                         IREPRT  28
      IF (IREPRT(1,18) .NE. 0)  CALL RLSC                                       IREPRT  29
      IF(IREPRT(1,20).EQ.1) CALL RLSE(3,ZQCM(IZQCMB))                           IREPRT  30
      IF(IREPRT(1,21).EQ.1) CALL RLSF(3)                                        IREPRT  31
      IF (IREPRT(1,19) .NE. 0)  CALL RLSD                                       IREPRT  32
      IF (NDAYCF.EQ.0) GO TO 890                                                IREPRT  33
      IF (IREPRT(1,22).EQ.1) CALL RLSG (3,ZLSG(IZLSG),ZDREP(IZDREP))            IREPRT  34
      IF (IREPRT(1,23).EQ.1) CALL RLSH (3,ZLSH(IZLSH))                          IREPRT  35
      IF (IREPRT(1,24).EQ.1) CALL RLSI (3)                                      IREPRT  36
      IF (IREPRT(1,25).EQ.1) CALL RLSJ (3,ZLSJM(IZLSJM),ZLSJY(IZLSJY))          IREPRT  37
      IF (IREPRT(1,28) .EQ. 1)  CALL RLSM(3,ZLSM(IZLSM))                        44d5br   7
  890 CONTINUE                                                                  IREPRT  38
      IF (IREPRT(1,26).EQ.1) CALL RLSK(3,ZLSK(IZLSK))                           IREPRT  39
      IF (IREPRT(1,27).EQ.1) CALL RLSL(3,ZLSL(IZLSL))                           IREPRT  40
C              IF IT IS THE LAST DESIGN DAY, WRITE THE                          LOADS  264
C              DESIGN FILE                                                      LOADS  265
      IF (NDD .EQ. 1)  CALL                                                     LOADS  266
     1 DESFOU(SPCD(ISPCDB),ISPCD(ISPCDB),DSBUF(ILHB),IDSBUF(ILHB))              LOADS  267
      IF ( IwinReturn .ne. 0 )  GOTO 910                                        -042L4  11
  900 CONTINUE                                                                  LOADS  268
  910 CONTINUE                                                                  -042L4  12
C              IF THERE WERE NO DESIGN DAYS, WRITE THE                          LOADS  269
C              DESIGN FILE AT THE END OF THE SIMULATION                         LOADS  270
      IF (NDESDY .EQ. 0)  CALL                                                  LOADS  271
     1 DESFOU(SPCD(ISPCDB),ISPCD(ISPCDB),DSBUF(ILHB),IDSBUF(ILHB))              LOADS  272
C              WRITE THE THIRD (BEPS) RECORD FOR THE DESIGN FILE                LOADS  273
      WRITE (IDSNFL) BEPS,GTEMP,CLR,LOCALD,NHOLA,IHOLTY,IHOLDY,IHOLMN           HOLID1   5
C              IF THE WRITE FLAG IS ON, REWIND AND UNLOAD                       LOADS  275
C              THE LOADS HOURLY OUTPUT FILE                                     LOADS  276
      IF (IWRTFL .NE. 0)  CALL REWUNL(ILDSO)                                    LOADS  277
c              Close out hourly reports                                         HRr     17
      IF (Nhrp .GT. 0)  Call HourlyReports(6,xx)                                HRr     18
 9000 CONTINUE                                                                  LOADS  311
      RETURN                                                                    LOADS  312
      END                                                                       LOADS  313
      SUBROUTINE  CALEXT (ZLSG,ZLSJM,ZLSJY,ZLSM)                                44d5br   8
C                                                                               CALEXT   3
C              EXTERNAL SURFACE CALCULATIONS .                                  CALEXT   4
C                                                                               CALEXT   5
      COMMON  /LOCALD/ STALAT, STALON, ITIMZ, BAZIM, BALTIT,                    /LOCALD/ 2
     1                 SSTALA, CSTALA, TSTALA, SBAZIM, CBAZIM                   /LOCALD/ 3
     2                 ,BXORG, BYORG, SHCOEF, TP1, TP2, WSTP1, WSTP2,           /LOCALD/ 4
     3                 WSHGT,WSHGTL(12),ISREFL,IHOLX                            HOLID1   2
      DIMENSION LOCALD(32)                                                      HOLID1   3
      EQUIVALENCE      (LOCALD(1),STALAT)                                       /LOCALD/ 7
      COMMON/SCRTC1/YTWOUT,YTAV,YTGIN,YQSWAL,YQSGIN,YQSGOU,YUCHNR,YUCHNC        CALEXT   7
     1             ,YUCHAN,YFILMW,YFILMU,YU1,YU2,YU3                            CALEXT   8
      COMMON /CLCFLG/ IFSTHR,IPRDFL,IGOLGE,NDD,LDSTYP,IFHRP                     DDAY1    1
      COMMON  /CONST/  DTOR, PIOVR2, PIOVR4, IBLNK, UNDEF, IUNDEF,              /CONST/  2
     1                 UNFILD, URAD, DEFIFR, DEFCFR, DEFINC, KWBTU              /CONST/  3
      REAL             KWBTU                                                    /CONST/  4
      COMMON /CTRL  / VERS(2),IRPFLG(4),IOVRLL(7),IWRTFL,IPROG,                 /CTRL/   2
     1       IFATAL,NAMPRG(3,7),MTRICR                                          /CTRL/   3
      COMMON  /DAYLT/ NDAYCF,IPHS,IZ,IHIT,MHHIT,IL,RHOAV,ATOT,ARHTOT,           /DAYLT/  2
     1                AR(3),AP(3),ARH(3),ARHP(3),NPH,NTH,WC(3),TMULT,           /DAYLT/  3
     2                TSOLNM,TVISDF,FRUP,ISHLOC,NWTOT,RHOCW,RHOFW,WAREA,        /DAYLT/  4
     3                IMREF,PHSUN,THSUN,PHSUND,THSUND,THSMIN,PHSMIN,            /DAYLT/  5
     4                THSMAX,PHSMAX,THSDEL,PHSDEL,H,NTHS,NPHS,NDFC,LWDC,        /DAYLT/  6
     5                BETA,W,IBZ,IWZ,ZENL,JZD,WBACLU(2,2),PF(7,5),              /DAYLT/  7
     6                VIEWVC(3),GLRNDX(2),WDAYIL(2,2),BACLUM(2),ITF(3),         /DAYLT/  8
     7                RDAYIL(2),RBACLU(2),GLRNEW(2),ETACLD,CDIRLW(24),          /DAYLT/  9
     8                CDIFLW(24),ODIFLW(24),SOLIC(12),TFAC,SPHSUN,              /DAYLT/ 10
     9                CPHSUN,PHWN,THWN,SPHWN,CPHWN,TOTIL(2),ATMMOI(12),         /DAYLT/ 11
     1                ATMTUR(12),XRAN,ALFAD,THRAT,PHRAT,SETPNT(2),              /DAYLT/ 12
     2                IZLSG,IZLSH,IZLSJM,IZLSJY,IZDREP,FPHRP(2),ZFTOT,          /DAYLT/ 13
     3                EINTSK(2,12,24),EINTSU(2,12,24),EDIRSK(2,12,24),          VISBL    2
     4                EDIRSU(2,12,24),FLCWSK(2,12),FLCWSU(2,12),                VISBL    3
     5                FLFWSK(2,12),FLFWSU(2,12),GILSK(2,10),GILSU(2,10),        VISBL    4
     6                WLUMSK(2,11,24),WLUMSU(2,11,24),AVWLSK(2,12,24),          VISBL    5
     7                AVWLSU(2,12,24),CHILSK(24),CHILSU(24),OHILSK(24),         VISBL    6
     8                DFSKHR(2,2),DFSUHR(2,2),SFSKHR(2,2),SFSUHR(2,2),          /DAYLT/ 19
     9                BFSKHR(2,2),BFSUHR(2,2),HISUNF,CHISKF,OHISKF,IZLSM        44d5br   1
      COMMON  /DAYL1/  ATMTU, ATMMO, TAU1                                       /DAYLT/ 21
     1               , TVISB, TH, PH, RAY(3), WNORM(3), TVISBR                  /DAYLT/ 22
          COMMON /DOORV/  FILMUD, DRGOLG,SOLID, TSOLD, QD,CFMD,DDIF             /DOORV/  2
      DIMENSION DRV(6)                                                          /DOORV/  3
      EQUIVALENCE (DRV(1),FILMUD)                                               /DOORV/  4
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                         /FILES/  3
     2              , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                    /FILES/  4
     3                IHRREP(3), IHRPAS(2)                                      /FILES/  5
      COMMON  /HRREP / Irb, Ihrp, Lrb, Lhrp, Nrb, Nhrp, IVTLIM(3,50),           HRr      1
     &                 IGRPtr, IBRPtr, IRSch, IRSchT(5),                        HRr      2
     &                 NHRTyp(3), ITBUF(3), ITBUFB(3), ITBUFE(3),               HRr      3
     &                 IHREOF, ICDFLG                                           HRr      4
      COMMON  /INFPAR/ PTWV,DUMG(8),PSE                                         /INFPAR/ 2
      COMMON  /LENS/   MWFLEN, MRLEN, MSHLEN, MWNLEN, MDRLEN, MXLEN,            /LENS/   2
     1                 MULEN, MZLEN, MIWLEN, MFLLEN,                            HRr      5
     2                 LMTB, LLDSOU, MSTLEN, LSTFT, MWLLEN                      BLIND    1
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     BLIND    2
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        FLOOR1   3
      COMMON  /REPORT/ IREPRT(4,37),IPRG,IUNIQV(100),IUNIQS(100),IUNIQL         BIGNAM   1
      COMMON  /SUND/   ISUNUP, GUNDOG, HORANG, TDECLN, EQTIME, SOLCON,          /SUND/   2
     1                 ATMEXT, SKYDFF, RAYCOS(3), RDN,                          /SUND/   3
     2                 BSUN, DECLN, CD, SD, FSUNUP                              /SUND/   4
      COMMON /TIME  / IDOY, IDOW, IDSTF, ISCHR, ISCDAY, iDSdates(6),            -044e5r  1
     1                IMO, IDAY, IYR, IHR, CLOCK(10), IDSFLG,                   HOLID1   4
     2                MONDSC(12), MONLEN(12), MONSDA(12), IEODMR                /TIME/   4
      COMMON  /TWVHR/  QSWALL,QSGIN,QSGOUT,WCS                                  /TWHR/   2
      COMMON  /WALLV/  SOLI,XGOLGE,FILMU,PCO,Q,T,CFM,C2,C3,                     /WALLV/  2
     1                 SUMXDT,SUMYDT,DT,XSXCMP,XSQCMP,ETA,                      /WALLV/  3
     2                 BG,RDIR,RDIF,RTOT,FFS,FFG,SOLDF1,SOLDF2,                 /WALLV/  4
     3                 SOLDF3,SOLDF4,SOLDF5,FFS0,FFG0,QIREW,MWDIR,              -044d5   1
     4                 ANGINCD                                                  -044d5   2
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
      COMMON  /WINV/   UW,TDIR,ADIRO,TDIF,ADIFO,ADIRI,ADIFI,FI,FO,              /WINV/   2
     1                 AGOLGE,QDIR,QDIF,QTRANS,QABS,QSOLG,GSHACO,               /WINV/   3
     2                 QCON,CFMW,SHMULT,SOLGMX,UWW,CWIN(4),CSUM(4),             /WINV/   4
     3                 ANWIN(4),ANSUM(4),QIRWI                                  VISBL    7
      COMMON  /ZNEWHR/ TZONER, INFCOD,                                          /ZNEWHR/ 2
     1                 QWALQ, QCELQ, QWINC, QWALD, QCELD,QINTW,                 /ZNEWHR/ 3
     2                 QUGF, QUGW, QDOOR, QEQPS, QEQPS2, QPPS,                  /ZNEWHR/ 4
     3                 QPPL, QEQPL, QEQPL2, QINFL,                              /ZNEWHR/ 5
     4                 QTSKL, QSOL, QPLENM, QLITE, QLITEW, QINFS,               /ZNEWHR/ 6
     5                 QELECT, CFMINF, QSUMW, ZCOND, QZS, QZL, QZTOT,           /ZNEWHR/ 7
     6                 QZLTEL,QZEQEL,QZGAS,QZHW,WNDSPZ,MANAGE                   /ZNEWHR/ 8
     7               , QZPEL, QZTLEL                                            /ZNEWHR/ 9
      DIMENSION QYENI(33)                                                       /ZNEWHR/10
      EQUIVALENCE  (QYENI(1), QWALQ)                                            /ZNEWHR/11
      COMMON        // AA(75 000 000)                                           -048ar   1
      INTEGER          IA(75 000 000)                                           -048ar   2
      EQUIVALENCE  (IA(1), AA(1))                                               //       4
C                                                                               CALEXT  28
      DIMENSION WALLV(19)                                                       CALEXT  29
      EQUIVALENCE (WALLV(1),SOLI)                                               CALEXT  30
      DIMENSION WINV(21)                                                        CALEXT  31
      EQUIVALENCE (WINV(1),UW)                                                  CALEXT  32
      DIMENSION ZLSG(1),ZLSJM(1),ZLSJY(1),ZLSM(1)                               44d5br   9
      LOGICAL SWTCH1                                                            CALEXT  34
      COMMON /WCTRL/  IwinReturn, Imsgflg                                       /WCTRL/  2
c              For DLLs, delete Win_MB and enable msgbox.fi                     /WCTRL/  3
#ifndef _DLL                                                                 /* -051     1 */ 
      COMMON /WIN_MB/ MB_OK,MB_ICONSTOP,MB_ICONEXCLAMATION,MB_TASKMODAL,        -051     2
     &                MB_ICONINFORMATION                                        -051     3
#else                                                                        /* -051     4 */ 
      include 'msgbox.fi'                                                       -051     5
#endif                                                                       /* -051     6 */ 
      DATA YABS/460./                                                           CALEXT  35
C                                                                               CALEXT  36
C                                                                               CALEXT  38
C              WINV, DRV, AND WALLV ARE EQUIVALENCED TO THE                     CALEXT  39
C              VARIABLES THAT WILL BE OUTPUT FOR HOURLY REPORTS                 CALEXT  40
C                                                                               CALEXT  41
C              INIT DAYLIGHTING HOURLY REP VARS FOR THIS SPACE                  CALEXT  42
C                                                                               CALEXT  43
      IF (IRSCH.EQ.0.OR.<MZBUF>.EQ.0) GO TO 70                                  CALEXT  44
      IPTR   = <MZBUF> - 1                                                      CALEXT  45
      CALL FILLN(0.,AA(IPTR+49),6)                                              CALEXT  46
      CALL FILLN(1.,AA(IPTR+55),3)                                              CALEXT  47
   70 CONTINUE                                                                  CALEXT  48
      NEXT   = <NEXTS>                                                          CALEXT  49
      MX     = <MZEXT>                                                          CALEXT  50
C                                                                               CALEXT  51
C              GET DIRECT AND DIFFUSE IRRADIANCE ON WALL AND WINDOWS.           VISBL    8
C              CALCULATE PROPERTIES OF WINDOW WITH BLINDS.                      VISBL    9
C              ZERO DAYLIGHTING HOURLY REP VARS FOR WINDOWS.                    CALEXT  52
C              APPLY DIRECT SOLAR GAIN TEST TO DETERMINE IF SHADES              CALEXT  53
C              SHOULD BE CLOSED.                                                CALEXT  54
C                                                                               CALEXT  55
      DO 90 IEXT = 1,NEXT                                                       CALEXT  56
C              DIR AND DIF IRRADIANCE ON WALL BEFORE AND AFTER SHADING          VISBL   10
C              AND GROUND DIFFUSE IRRADIANCE ON WALL BEFORE SHADING             VISBL   11
      <DIREW>   = 0.                                                            VISBL   12
      <DIREWSH> = 0.                                                            VISBL   13
      <DIFEW>   = 0.                                                            VISBL   14
      <DIFEWSH> = 0.                                                            VISBL   15
      <BGEW>    = 0.                                                            VISBL   16
C              COS OF DIRECT SOLAR ANGLE OF INCIDENCE (CALC IN SUN3)            VISBL   17
      ETA = 0.                                                                  VISBL   18
      IF(ISUNUP.EQ.1) THEN                                                      VISBL   19
C              GET INCIDENT SOLAR ON WALL AND ANGLE OF INCIDENCE                VISBL   20
         CALL SUN3                                                              VISBL   21
         <ETAEW>   = ETA                                                        VISBL   22
         <BGEW>    = BG                                                         VISBL   23
         <DIREW>   = RDIR                                                       VISBL   24
         J = IHR                                                                VISBL   25
         <DIREWSH> = RDIR*(1.-<XGOLGE>)                                         VISBL   26
         <DIFEW>   = FFS0*BSCC + FFG0*BG                                        VISBL   27
         <DIFEWSH> = RDIF                                                       VISBL   28
         ANGINCD = ACOS(ETA)/DTOR                                               -044d5   3
      ENDIF                                                                     VISBL   29
      NW     = <NWIN>                                                           CALEXT  57
      IF(NW.EQ.0) GO TO 90                                                      CALEXT  58
C              LOOP THROUGH WINDOWS                                             CALEXT  61
      MWI    = <MXWIN>                                                          CALEXT  62
      DO 80 IW=1,NW                                                             CALEXT  63
      MR = <MWIPRP>                                                             VISBL   30
C             DIR AND DIF IRRADIANCE ON WIN BEFORE AND AFTER SHADING            VISBL   31
      <DIRWI>   = 0.                                                            VISBL   32
      <DIRWISH> = 0.                                                            VISBL   33
      <DIFWI>   = 0.                                                            VISBL   34
      <DIFWISH> = 0.                                                            VISBL   35
      IF(ISUNUP.EQ.1) THEN                                                      VISBL   36
         <DIRWI>   = RDIR                                                       VISBL   37
         JJ = IHR                                                               VISBL   38
         <DIRWISH> = RDIR*(1.-<WGOLGE>)                                         VISBL   39
         <DIFWI>   = <DIFEW>                                                    VISBL   40
         WIFFS = FFS0*<WISKYFF>                                                 VISBL   41
         WIFFG = FFG0*<WIGNDFF>                                                 VISBL   42
         <DIFWISH> = BSCC*WIFFS + BG*WIFFG                                      VISBL   43
C              Save                                                             -044d5   4
         <SOLARANGLEINDEX>= INT(ANGINCD/10.0) + 1                               -044d5   5
         <SOLARANGLEINC>  =     ANGINCD/10.0  - FLOAT(INT(ANGINCD/10.0))        -044d5   6
C              If domed skylight then calculate the TR multiplier               -044d5   7
         IF(<WINDOW-TYPE> .GT. 1) THEN                                          -044d5   8
           DO II=1,10                                                           -044d5   9
             IF(<SKY-TRANS-ANG> .GE. ANGINCD)  EXIT                             -044d5  10
           ENDDO                                                                -044d5  11
           t1 = <SKY-TRANS-MULT>                                                -044d5  12
           t2 = <SKY-TRANS-ANG>                                                 -044d5  13
           II = II - 1                                                          -044d5  14
           <SKYTRMULT> = <SKY-TRANS-MULT> +(t1-<SKY-TRANS-MULT>)                -044d5  15
     $                        *(t2-ANGINCD)/(t2-<SKY-TRANS-ANG>)                -044d5  16
         ELSE                                                                   -044d5  17
           <SKYTRMULT> = 1.0                                                    -044d5  18
         ENDIF                                                                  -044d5  19
         DDep    = AA(<@DIRT-DEPREC-SCH> + ISCHR)  !dirt depreciation           -044d5  20
      ENDIF                                                                     VISBL   44
      IS = 1                                                                    VISBL   45
      IF(<MWISTC>.NE.0) THEN                                                    VISBL   46
C                                                                               VISBL   47
C              WINDOW INPUT LAYER BY LAYER                                      BLIND3   1
C                                                                               VISBL   49
         to = dbtr/1.8                                                          VISBL   50
         ti = 294.27                                                            VISBL   51
         if(abs(to-ti).lt.0.05) to = to + 0.1                                   VISBL   52
C              SOLAR-THERMAL CALCULATION, INCLUDING EFFECT OF                   VISBL   53
C              BLINDS, IF PRESENT (FOR LATER USE IN CALWIN                      VISBL   54
C              TO DETERMINE BLIND FLAG, IBLDF)                                  VISBL   55
         CALL CALBLD(0,0.,0.,to,ti)                                             VISBL   56
      ENDIF                                                                     VISBL   57
C              ZERO DAYLIGHTING HOURLY REP VARS FOR THIS WINDOW                 CALEXT  64
      IF (IRSCH.EQ.0.OR.<MWIBUF>.EQ.0) GO TO 83                                 CALEXT  65
      IPTR   = <MWIBUF> - 1                                                     CALEXT  66
      CALL FILLN (0.,AA(IPTR+19),9)                                             CALEXT  67
      IA(IPTR+23) = 0                                                           CALEXT  68
   83 CONTINUE                                                                  CALEXT  69
C              INITIALIZE SWITCHING FACTOR, SHADING                             CALEXT  70
C              COEF AND VIS TRANS TO UNSWITCHED STATE                           CALEXT  71
      <SWFAC> = 1.0                                                             CALEXT  72
      IGLTY1 = MR                                                               WLIB1    1
      <GSHACO-SEL> = <GSHACO>                                                   CALEXT  74
      <VIS-TRANS-SEL> = <VIS-TRANS>                                             CALEXT  75
C              TEST FOR SOLAR-OPTICAL SWITCHING                                 CALEXT  76
      SWTCH1 = .FALSE.                                                          CALEXT  77
C              SWITCHING CAN BE IN EFFECT ONLY IF SUN IS UP                     CALEXT  78
      IF(ISUNUP.NE.1) GO TO 89                                                  CALEXT  79
C              NO SWITCHING IF SWITCH SCH DEFINED AND OFF                       CALEXT  80
C              (IF NOT DEFINED, SWITCHING ALLOWED ALL HOURS)                    CALEXT  81
      IF(<SWITCH-SCH>.NE.0) THEN                                                CALEXT  82
        IF(AA(<@SWITCH-SCH>+ISCHR).EQ.0.) GO TO 89                              CALEXT  83
      ENDIF                                                                     CALEXT  84
C              NO SWITCHING IF SWITCHED AND UNSWITCHED GLASS-TYPES              -058     2
C              ARE THE SAME                                                     -058     3
      MR = <MWIPRPSW>                                                           -058     4
      IGLTY2 = MR                                                               WLIB1    2
      MR = <MWIPRP>                                                             -058     6
      IF(IGLTY1.EQ.IGLTY2) GO TO 89                                             -058     7
C              SWITCHING TRIGGER: 0=NONE, 1=DIR SOL INCIDENT,                   CALEXT  85
C              2=TOT SOL INC, 3=DIR SOL TRANSMITTED,                            CALEXT  86
C              4=TOT SOL TR, 5=TOT SOL HOR, 6=OUTSIDE TEMP,                     CALEXT  87
C              7=SPACE-LOAD/AREA (PREVIOUS HR)                                  CALEXT  88
C              (8=DAYLIGHT LEVEL IS HANDLED IN SUBR. DINTIL)                    CALEXT  89
      ISWC1 = <SWITCH-CONTROL>                                                  CALEXT  90
      IF(ISWC1.GE.1.AND.ISWC1.LE.7) SWTCH1 = .TRUE.                             CALEXT  91
C                                                                               CALEXT  92
      IF(.NOT.SWTCH1) GO TO 89                                                  CALEXT  93
C                                                                               CALEXT  94
      QDIF = <DIFWISH>                                                          VISBL   58
C              GET CURRENT HOUR VALUE OF TRIGGER VARIABLE                       CALEXT 104
      IF(ISWC1.EQ.1) THEN                                                       CALEXT 105
          SVAR1 = RDIR*(1.-<WGOLGE>)                                            CALEXT 106
       ELSE IF(ISWC1.EQ.2) THEN                                                 CALEXT 107
          SVAR1 = RDIR*(1.-<WGOLGE>) + QDIF                                     CALEXT 108
       ELSE IF((ISWC1.EQ.3).OR.(ISWC1.EQ.4)) THEN                               -044d5  21
        TDIR = Get_WinSC_TSOL(ETA,0)                                            -044d5d  1
          IS = 1                                                                -044d5  35
          IF(<MWISTC>.NE.0) TDIR = <TRANG1>                                     -044d5  36
          TDIR = TDIR * DDep !dirt depreciation                                 -044d5  37
          SVAR1 = RDIR*TDIR*(1.-<WGOLGE>)                                       -044d5  38
          IF(ISWC1.EQ.4) SVAR1 = SVAR1 + <TRHEMIS>*QDIF                         -044d5  39
       ELSE IF(ISWC1.EQ.5) THEN                                                 CALEXT 115
          SVAR1 = SOLRAD                                                        CALEXT 116
       ELSE IF(ISWC1.EQ.6) THEN                                                 CALEXT 117
          SVAR1 = DBT                                                           CALEXT 118
       ELSE IF(ISWC1.EQ.7) THEN                                                 CALEXT 119
          SVAR1 = <QZTSAV>/<ZFLRAR>                                             CALEXT 120
      ENDIF                                                                     CALEXT 121
C              GET SWITCHING FACTOR. 1.0=UNSWITCHED,                            CALEXT 122
C              0.0=FULLY SWITCHED                                               CALEXT 123
      IF(SVAR1.GE.<SWITCH-SET-HI>) <SWFAC> = 0.                                 CALEXT 124
      IF(SVAR1.GT.<SWITCH-SET-LO>.AND.SVAR1.LE.<SWITCH-SET-HI>)                 CALEXT 125
     .  <SWFAC> = ( <SWITCH-SET-HI>-SVAR1 ) /                                   CALEXT 126
     .            ( <SWITCH-SET-HI>-<SWITCH-SET-LO>+0.00001 )                   CALEXT 127
C              GET SELECTED VIS-TRANS FOR USE IN SUBR. DINTIL.                  CALEXT 128
C              VIS-TRANS IN FULLY SWITCHED STATE                                CALEXT 129
      MR = <MWIPRPSW>                                                           CALEXT 130
      TVISSW = <TVANG1>                                                         CALEXT 131
      MR = <MWIPRP>                                                             CALEXT 132
C              SELECTED VALUE (LINEARLY INTERPOLATED FROM                       CALEXT 133
C              UNSWITCHED AND FULLY SWITCHED VALUES)                            CALEXT 134
C              NOTE: <VIS-TRANS>, BELOW, IS THE WINDOW-4                        CALEXT 135
C              GLAZING LIBRARY VALUE, NOT THE KEYWORD VALUE                     CALEXT 136
      <VIS-TRANS-SEL> = <SWFAC>*<VIS-TRANS> + (1.-<SWFAC>)*TVISSW               CALEXT 137
      IF(IREPRT(1,35).NE.0.AND.IREPRT(1,8).NE.0)                                IREPRT  41
     .  WRITE (IOUTPT,99001) IMO,IDAY,IHR,<SWFAC>,ISWC1,                        CALEXT 139
     .  <SWITCH-SET-LO>,<SWITCH-SET-HI>,                                        CALEXT 140
     .  SVAR1,SOLRAD,DBT,<GSHACO>,<GSHACO-SEL>,                                 CALEXT 141
     .  RDIR,QDIF,<QZTSAV>,<VIS-TRANS>,TVISSW,<VIS-TRANS-SEL>                   CALEXT 142
99001 FORMAT(/,1X,'IMO,IDAY,IHR,SWFAC,ISWC1,SETLO,SETHI,SVAR1,SOLRAD,DBT        CALEXT 143
     .= ',3I3,F10.3,I10,5F10.3/                                                 CALEXT 144
     .1X,'GSCHACO,GSHACO-SEL,RDIR,QDIF,QZTSAV=',                                CALEXT 145
     .5F10.3/1X,'VIS-TRANS,TVISSW,VIS-TRANS-SEL=',3F10.3)                       CALEXT 146
   89 CONTINUE                                                                  CALEXT 147
C              INITIALIZE FLAG INDICATING IF WINDOW HAS A SHADE.                VISBL   59
C              THE WINDOW MAY BE COVERED BY "SHADES" OR "BLINDS".               VISBL   60
C              A "SHADE" IS A PERFECTLY DIFFUSING WINDOW COVER                  VISBL   61
C              (TRANSMITTANCE INDEPENDENT OF ANGLE OF INCIDENCE,                VISBL   62
C              ALL RADIATION TRANSMITTED INTO ROOM IS DIFFUSE AND               VISBL   63
C              ISOTROPIC). SHADES CAN BE DEFINED FOR WINDOWS FROM THE           VISBL   64
C              WINDOW LIBRARY, WINDOWS WITH SHADING COEFFICIENT OR              VISBL   65
C              LAYER WINDOWS WITHOUT BLINDS. A "BLIND" IS A BLIND               BLIND3   2
C              LAYER IN A WINDOW DEFINED WITH THE WINDOW-LAYER COMMAND          BLIND3   3
C              (BLINDS HAVE TRANSMITTANCE THAT DEPENDS ON ANGLE OF              VISBL   68
C              INCIDENCE; TRANSMITTED RADIATION CAN BE A COMBINATION            VISBL   69
C              OF DIRECT AND DIFFUSE, BUT THE TRANSMITTED DIFFUSE               VISBL   70
C              RADIATION IS ASSUMED TO BE ISOTROPIC.)                           VISBL   71
C                                                                               VISBL   72
C              SHADING FLAG = 0: NO SHADE,                                      VISBL   73
C                           = 1: SHADE ASSIGNED AND OPEN,                       VISBL   74
C                           = 2: SHADE ASSIGNED AND CLOSED DUE TO SOLAR         VISBL   75
C                                GAIN OR OUTSIDE DRYBULB TEST,                  VISBL   76
C                                OR BECAUSE WIN-SHADE-TYPE = FIXED,             VISBL   77
C                           = 3: SHADE ASSIGNED AND CLOSED, NO SOLAR            VISBL   78
C                                GAIN OR OUTSIDE DRYBULB TEST                   VISBL   79
      <SHADING-FLAG> = 1                                                        CALEXT 154
      IF (<WIN-SHADE-TYPE> .LT. 3) GO TO 6001                                   CALEXT 155
C                                                                               CALEXT 156
C     FIXED SHADES - SET SHADING FLAG AND GO NEXT WINDOW                        CALEXT 157
C                                                                               CALEXT 158
      <SHADING-FLAG> = 2                                                        CALEXT 159
      GO TO 80                                                                  CALEXT 160
 6001 IF (<WIN-SHADE-TYPE> .NE. 0 .AND. <KGCURT> .NE. 0) GO TO 6002             CALEXT 161
C                                                                               CALEXT 162
C     NO SHADE ON WINDOW - GO TO NEXT WINDOW                                    CALEXT 163
C                                                                               CALEXT 164
      <SHADING-FLAG> = 0                                                        CALEXT 165
      GO TO 80                                                                  CALEXT 166
 6002 MS=<@KGCURT>+ISCHR                                                        CALEXT 167
C             IF SHADING-SCHEDULE VAL = 0, SHADING-FLAG=1                       CALEXT 168
      IF(AA(MS).EQ.1.0) GO TO 80                                                CALEXT 169
      IF(<CONDUCT-TMIN-SCH> .ne. 0 .or. <CONDUCT-TMAX-SCH> .ne. 0 .or.          -048xr   1
     &      <MIN-SOLAR-SCH> .ne. 0 .or.    <MAX-SOLAR-SCH> .ne. 0)              -048xr   2
     &                                                         GoTo 6003        -048xr   3
      IF (<MAX-GLARE>.NE.100.0.AND.<DAYLIGHTING>.GT.0) GO TO 6003               CALEXT 172
C                                                                               CALEXT 173
C     NO OUTDOOR TEMP, SOLAR GAIN OR GLARE TEST - GO TO NEXT WINDOW             CALEXT 174
C                                                                               CALEXT 175
      <SHADING-FLAG> = 3                                                        CALEXT 176
      GO TO 80                                                                  CALEXT 177
 6003 iTminSch = 0   ! No DBT shade control                                     -045n    1
      iTmaxSch = 0                                                              -045n    2
      IF (<KGCON> .EQ. 0) GOTO 6004                                             -045n    3
C                                                                               CALEXT 179
C     OUTDOOR TEMPERATURE CONTROL - TEST WHETHER MOVEABLE INSULATION            CALEXT 180
C     SHOULD BE MOVED INTO PLACE                                                CALEXT 181
C                                                                               CALEXT 182
      IF (<CONDUCT-TMIN-SCH> .ne. 0) THEN                                       -050x    1
        Tmin = AA(<@CONDUCT-TMIN-SCH> + ISCHR)                                  -045n    5
        IF (DBT .le. Tmin) THEN                                                 -045n    6
          IF (<MIN-SOLAR-SCH> .eq. 0) THEN                                      -045n    7
            <SHADING-FLAG> = 2  ! close shade                                   -045n    8
          ELSE  ! both conditions must be true; determined below                -045n    9
            iTminSch = 2        ! close if also MIN-SOLAR-SCH                   -045n   10
          ENDIF                                                                 -045n   11
        ELSE                                                                    -045n   12
          iTminSch = 1          ! do not deploy insulation/shade                -045n   13
        ENDIF                                                                   -045n   14
      ENDIF                                                                     -045n   15
      IF (<CONDUCT-TMAX-SCH> .ne. 0) THEN                                       -050x    2
        Tmax = AA(<@CONDUCT-TMAX-SCH> + ISCHR)                                  -045n   17
        IF (DBT .ge. Tmax) THEN                                                 -045n   18
          IF (<MAX-SOLAR-SCH> .eq. 0) THEN                                      -045n   19
            <SHADING-FLAG> = 2  ! close shade                                   -045n   20
          ELSE  ! both conditions must be true; determined below                -045n   21
            iTmaxSch = 2        ! close if also MAX-SOLAR-SCH                   -045n   22
          ENDIF                                                                 -045n   23
        ELSE                                                                    -045n   24
          iTmaxSch = 1          ! do not deploy insulation/shade                -045n   25
        ENDIF                                                                   -045n   26
      ENDIF                                                                     -045n   27
 6004 IF (ISUNUP .ne. 0  .or.  <MIN-SOLAR-SCH> .gt. 0) GO TO 6005               -048xr   4
C                                                                               CALEXT 185
C     SUN IS DOWN - GO TO NEXT WINDOW                                           CALEXT 186
C                                                                               CALEXT 187
      <SHDG-FLG-LST-HR> = 1                                                     CALEXT 188
                                                                                -045n   28
c              If DBT .lt. minimum                                              -045n   29
      IF (iTminSch .eq. 2)  <SHADING-FLAG> = 2                                  -045n   30
                                                                                -045n   31
      GO TO 80                                                                  CALEXT 189
 6005 IF (<MAX-SOLAR-SCH> .eq. 0  .and.  <MIN-SOLAR-SCH> .eq. 0)                -045n   32
     &                                                        GOTO 6010         -045n   33
C                                                                               CALEXT 196
C     GET MAXIMUM SOLAR GAIN THRESHOLD FOR SHADE CONTROL                        CALEXT 197
C                                                                               CALEXT 198
      IF (<MAX-SOLAR-SCH> .ne. 0) THEN                                          -050x    3
        SOLGMX = AA(<@MAX-SOLAR-SCH> + ISCHR)                                   -045n   35
      ELSE                                                                      -045n   36
        SOLGMX = 88888.                                                         -045n   37
      ENDIF                                                                     -045n   38
      IF (<MIN-SOLAR-SCH> .ne. 0) THEN                                          -050x    4
        SOLGMN = AA(<@MIN-SOLAR-SCH> + ISCHR)                                   -045n   40
      ELSE                                                                      -045n   41
        SOLGMN = -88888.                                                        -045n   42
      ENDIF                                                                     -045n   43
      MR     = <MWIPRP>                                                         CALEXT 201
      JJ = IHR                                                                  CALEXT 202
C              DIRECT COMPONENT OF SOLAR GAIN (QDIR) IN BTU/HR-FT**2            -044d5  40
      if(<IGTYP>.EQ.-1) then                                                    -044d5  41
       TDIR = Get_WinSC_TSOL(ETA,0)                                             -044d5d  2
      else                                                                      -044d5  48
       TDIR = Get_WinLib_TSOL(ETA,0)                                            -044d5d  3
          IS = 1                                                                -044d5  62
          IF(<MWISTC>.NE.0) TDIR = <TRANG1>                                     -044d5  63
C             interpolate if switching in effect                                -044d5  64
        if(<SWFAC>.lt.1.0) then                                                 -044d5  65
          mr = <MWIPRPSW>                                                       -044d5  66
          tdirsw = Get_WinLib_TSOL(ETA,0)                                       -044d5d  4
          IS = 1                                                                -044d5  80
          IF(<MWISTC>.NE.0) tdirsw = <TRANG1>                                   -044d5  81
          tdir = <SWFAC>*tdir + (1.-<SWFAC>)*tdirsw                             -044d5  82
          mr = <MWIPRP>                                                         -044d5  83
        endif                                                                   -044d5  84
      endif                                                                     -044d5  85
      TDIR = TDIR * DDep                                    !dirt depreciation  -044d5  86
      QDIR   = <DIRWISH> * TDIR * <GSHACO-SEL>                                  VISBL   81
C              CLOSE SHADE IF INCIDENT SOLAR ABOVE THRESHOLD                    VISBL   82
C              Use incident or transmitter, direct or total                     -044d2r  1
C              based on user choice for MAX-SOLAR-CTRL                          -044d2r  2
      QTrigger = <DIRWISH>                                                      -044d2r  3
      IF(<MAX-SOLAR-CTRL>.EQ.2 .OR. <MAX-SOLAR-CTRL>.EQ.4)                      -044d2r  4
     $                          QTrigger = QTrigger + <DIFWISH>                 -044d2r  5
      IF(<MAX-SOLAR-CTRL>.GT.2) QTrigger = QTrigger * TDIR* <GSHACO-SEL>        -044d2r  6
      IF (QTrigger .gt. SOLGMX .and. iTmaxSch .ne. 1) <SHADING-FLAG> = 2        -045n   44
      IF (QTrigger .lt. SOLGMN .and. iTminSch .ne. 1) <SHADING-FLAG> = 2        -045n   45
      IF(<SUN-CTRL-PROB>.EQ.1) GO TO 6010                                       CALEXT 220
C              GENERATE RANDOM NUMBER BETWEEN 0 AND 1.0                         CALEXT 221
      CALL DRAND ( XRAN )                                                       CALEXT 222
C              OPEN SHADE IF SUN-CONTROL PROBABILITY TEST FAILS                 CALEXT 223
      IF (XRAN.GT.<SUN-CTRL-PROB>) <SHADING-FLAG> = 1                           CALEXT 224
 6010 IF (<SHDG-FLG-LST-HR> .NE. 2 .OR. <SHADING-FLAG> .NE. 1                   CALEXT 225
     +     .OR. <OPEN-SHADE-SCH> .EQ. 0) GO TO 80                               CALEXT 226
C                                                                               CALEXT 227
C     SHADES WERE CLOSED LAST HOUR AND PRESENT CONDITIONS PERMIT OPENING        CALEXT 228
C     THEM.  FIND OUT WHETHER SHADES ARE OPENED.                                CALEXT 229
C                                                                               CALEXT 230
      MPTR = IA(<OPEN-SHADE-SCH>) + ISCHR                                       CALEXT 231
      CALL DRAND(XRAN)                                                          CALEXT 232
      IF(XRAN.GT.AA(MPTR)) <SHADING-FLAG> = 2                                   CALEXT 233
80    MWI = MWI + MWNLEN                                                        CALEXT 234
   90 MX     = MX + MXLEN                                                       CALEXT 235
C                                                                               CALEXT 236
C              IF SPACE IS DAYLIT, FIND DAYLIGHT ILLUMINANCE LEVEL AT           CALEXT 237
C              EACH REF PT, AND FINAL WINDOW SHADE STATUS                       CALEXT 238
C                                                                               CALEXT 239
      IF(<DAYLIGHTING>.GT.0.AND.ISUNUP.NE.0)                                    CALEXT 240
     1  CALL DINTIL (ZLSG,ZLSJM,ZLSJY,ZLSM)                                     44d5br  10
C                                                                               CALEXT 242
C              MAIN LOOP OVER EXTERIOR WALLS                                    CALEXT 243
C                                                                               CALEXT 244
      MX     = <MZEXT>                                                          CALEXT 245
      DO  49900  IEXT = 1 , NEXT                                                CALEXT 246
      MP     = <MXPROPRL>                                                       LDS1     1
      MWP    = <MPEXPAR>                                                        CALEXT 248
      IEWTYP = <IEWTYPE>                                                        CALEXT 249
      XSMULT = <XSMULT>                                                         CALEXT 250
      XSAREA = <XSAREA>                                                         CALEXT 251
C              INITIALIZE WALL VARIABLES                                        CALEXT 252
      SOLI   = 0.0                                                              CALEXT 253
      SOLABW = 0.                                                               CALEXT 254
      RDIR   = 0.0                                                              CALEXT 255
      DO 200 I=1,19                                                             CALEXT 256
      WALLV(I) = 0.0                                                            CALEXT 257
  200 CONTINUE                                                                  CALEXT 258
      IF ((IEWTYP .NE. 3) .AND. (IEWTYP .NE. 4))  GO TO 210                     CALEXT 259
      QSWALL = 0.                                                               CALEXT 260
      QSGIN  = 0.                                                               CALEXT 261
      QSGOUT = 0.                                                               CALEXT 262
  210 CONTINUE                                                                  CALEXT 263
      GAMMA  = <CXSTLT>                                                         CALEXT 264
C              COS OF DIR SOL ANGLE OF INCIDENCE ON WALL                        VISBL   84
C              (AND ON WINDOWS AND DOORS IN THE WALL)                           VISBL   85
      ETA = <ETAEW>                                                             VISBL   86
      ANGINCD = ACOS(ETA)/DTOR                                                  -044d5  87
C              GET RDIR, RDIF AND SOLI - THE DIRECT, DIFFUSE                    VISBL   87
C              AND TOTAL INSOLATION ON THE WALL, AND BG -                       VISBL   88
C              THE DIFFUSE INSOLATION FROM GROUND                               VISBL   89
      BG = <BGEW>                                                               VISBL   90
      RDIR = 0.                                                                 VISBL   91
      RDIF = 0.                                                                 VISBL   92
      SOLI = 0.                                                                 VISBL   93
      RTOT = 0.                                                                 VISBL   94
      IF (ISUNUP .EQ. 0)  GO TO 300                                             VISBL   95
      RDIR = <DIREWSH>                                                          VISBL   96
      RDIF = <DIFEWSH>                                                          VISBL   97
      SOLI = RDIR + RDIF                                                        VISBL   98
      RTOT = <DIREW> + <DIFEW>                                                  VISBL   99
      J    = IHR                                                                VISBL  100
C              FRACTION OF THE WALL THAT IS SHADED FROM DIRECT                  VISBL  101
C              SOLAR RADIATION THIS HOUR                                        VISBL  102
      XGOLGE = <XGOLGE>                                                         VISBL  103
C                                                                               CALEXT 277
C              THE RADIANCE-CALCULATED "REFLECTION FACTORS" <RF-AWSUN>,         CALEXT 278
C              <RF-AWSKY>, ETC. (WHICH ARE CURRENTLY READ IN USING              CALEXT 279
C              INPUT FUNCTIONS) GIVE SOLAR GAIN FOR EXTERIOR WALLS,             CALEXT 280
C              DOORS, OR GLASS (FOR RADIATION ORIGINATING FROM SUN OR           CALEXT 281
C              SKY) DIVIDED BY HORIZONTAL SOLAR IRRADIANCE FROM SUN OR          CALEXT 282
C              SKY. ISREFL, GIVEN BY THE SOLAR-REFL-CALC KEYWORD IN             CALEXT 283
C              BUILDING-LOCATION, DETERMINES HOW THE REFLECTION FACTORS         CALEXT 284
C              ARE USED--                                                       CALEXT 285
C                                                                               CALEXT 286
C              SOLAR-REFL-CALC=NO-CALC (ISREFL=0):                              CALEXT 287
C                THE REFLECTION FACTORS ARE NOT USED; SOLAR GAINS               CALEXT 288
C                ARE CALCULATED BY THE REGULAR DOE-2 PROCEDURE.                 CALEXT 289
C              SOLAR-REFL-CALC=UNADJUSTED (ISREFL=1):                           CALEXT 290
C                THE REFLECTION FACTORS ARE NOT ADJUSTED AND                    CALEXT 291
C                ARE USED INSTEAD OF THE REGULAR DOE-2 PROCEDURE.               CALEXT 292
C              SOLAR-REFL-CALC=ADJUSTED (ISREFL=2):                             CALEXT 293
C                THE REFLECTION FACTORS ARE ADJUSTED BY                         CALEXT 294
C                SUBTRACTING THE DOE-2 CALCULATED SOLAR GAINS (NORMALIZED       CALEXT 295
C                TO HORIZONTAL IRRADIANCE). THIS IS DONE ONLY ON THE            CALEXT 296
C                FIRST DAY OF THE MONTH. THESE ADJUSTED REFLECTION FACTORS,     CALEXT 297
C                WHICH GIVE REFLECTED SOLAR NORMALIZED TO HORIZONTAL            CALEXT 298
C                IRRADIANCE, ARE THEN USED TOGETHER WITH THE REGULAR DOE-2      CALEXT 299
C                SOLAR GAIN CALC TO OBTAIN THE NET SOLAR GAIN INCLUDING         CALEXT 300
C                REFLECTION.                                                    CALEXT 301
C                                                                               CALEXT 302
      JJ=IHR                                                                    CALEXT 303
C              ADJUST REFLECTION FACTORS ON FIRST DAY OF MONTH IF REQUESTED     CALEXT 304
      IF(IGOLGE.NE.0.AND.ISREFL.EQ.2) THEN                                      CALEXT 305
        AWSUND = <SURABSO>*((1.-XGOLGE)*AMAX1(0.,ETA)/RAYCOS(3)                 CALEXT 306
     1             + FFG*<GNDREF>)                                              CALEXT 307
        <RF-AWSUN> = <RF-AWSUN> - AWSUND                                        CALEXT 308
      ENDIF                                                                     CALEXT 309
C                                                                               CALEXT 310
C              DEBUG PRINT IF DUMP-OPTIONS=DEBUG AND LV-J REQUESTED             CALEXT 311
C                                                                               CALEXT 312
        IF(IREPRT(1,35).NE.0.AND.IREPRT(1,10).NE.0)                             IREPRT  42
     1    WRITE(IOUTPT,9300) (<IXSNM>,II=1,4),IMO,IDAY,                         CALEXT 314
     1    IHR,IGOLGE,XGOLGE,ETA,RAYCOS(3),                                      CALEXT 315
     2    FFG,<GNDREF>,<SURABSO>,<RF-AWSUN>,AWSUND,ISREFL                       CALEXT 316
 9300   FORMAT(' SLR-CALEXT1: IMO,IDAY,IHR,IGOLGE,XGOLGE,ETA,RAYCOS(3)'/        CALEXT 317
     1  1X,'FFG,GNDREF,SURABSO,RF-AWSUN,AWSUND,ISREFL='/                        CALEXT 318
     2  1X,4A4,4I3,3F10.3/1X,5F10.3,I3/)                                        CALEXT 319
C                                                                               CALEXT 320
C              FFSW IS THE SKY FORM FACTOR FOR THE WALL FOR A UNIFORM           CALEXT 321
C              SKY; EWSKYFF IS THE RATIO OF UNIFORM SKY RADIATION ON            CALEXT 322
C              THE WALL WITH AND WITHOUT SHADING. WE DON'T USE FFS              CALEXT 323
C              HERE BECAUSE FFS IS FOR NON-UNIFORM SKY (SEE SUBR SUN3)          CALEXT 324
C              WHEREAS RF-AWSKY ASSUMES A UNIFORM SKY                           CALEXT 325
        FFSW   = 0.5*(1.+<CXSTLT>)*<EWSKYFF>                                    VISBL  104
        AWSKYD = <SURABSO>*(FFSW + FFG*<GNDREF>)                                CALEXT 327
C                                                                               CALEXT 328
        IF(IREPRT(1,35).NE.0.AND.IREPRT(1,10).NE.0)                             IREPRT  43
     1    WRITE(IOUTPT,9303) IGOLGE,XGOLGE,ETA,RAYCOS(3),                       CALEXT 330
     1      FFSW,FFG,<GNDREF>,<SURABSO>,<RF-AWSUN>,<RF-AWSKY>,AWSKYD            CALEXT 331
 9303   FORMAT(' SLR-CALEXT2: IGOLGE,XGOLGE,ETA,RAYCOS(3)'/                     CALEXT 332
     1  1X,'FFSW,FFG,GNDREF,SURABSO,RF-AWSUN,RF-AWSKY,AWSKYD='/                 CALEXT 333
     2  1X,I3,3F10.3/1X,7F10.3/)                                                CALEXT 334
                                                                                CALEXT 335
C                                                                               CALEXT 336
C              SOLAR RADIATION ABSORBED BY WALL, INCLUDING REFLECTION           CALEXT 337
C              IF ISREFL = 1 OR 2                                               CALEXT 338
C                                                                               CALEXT 339
      IF(ISREFL.EQ.0) THEN                                                      CALEXT 340
          SOLABW = SOLI*<SURABSO>                                               CALEXT 341
        ELSE IF(ISREFL.EQ.1) THEN                                               CALEXT 342
          SOLABW = <RF-AWSUN>*RDNCC*RAYCOS(3) + <RF-AWSKY>*BSCC                 CALEXT 343
        ELSE IF(ISREFL.EQ.2) THEN                                               CALEXT 344
          SOLABW = SOLI*<SURABSO> +                                             CALEXT 345
     1            <RF-AWSUN>*RDNCC*RAYCOS(3) + (<RF-AWSKY>-AWSKYD)*BSCC         CALEXT 346
      ENDIF                                                                     CALEXT 347
      RFSKYP = <RF-AWSKY>-AWSKYD                                                CALEXT 348
        IF(IREPRT(1,35).NE.0.AND.IREPRT(1,10).NE.0)                             IREPRT  44
     1    WRITE(IOUTPT,9301) SOLI,<SURABSO>,<RF-AWSUN>,RDNCC,RAYCOS(3),         CALEXT 350
     2    RFSKYP,BSCC,SOLABW                                                    CALEXT 351
 9301 FORMAT(' SLR-CALEXT3: SOLI,SURABSO,RF-AWSUN,RNDCC,RAYCOS(3),RFSKYP        CALEXT 352
     1,BSCC,SOLABW='/1X,8F10.3)                                                 CALEXT 353
  300 CONTINUE                                                                  CALEXT 354
C              PREVIOUS HOUR OUTSIDE SURFACE TEMPERATURE (R)                    CALEXT 355
      TPR = <TQPREV>                                                            CALEXT 356
      IF(<NRESF>.NE.0) TPR = AA(<MEWOTH>)                                       CALEXT 357
C              IF FIRST HOUR OF RUN PERIOD                                      CALEXT 358
      IF(IFHRP.EQ.1) TPR = DBTR                                                 CALEXT 359
C                                                                               VISBL  105
C              CONVECTIVE + RADIATIVE OUTSIDE AIR FILM CONDUCTANCE              CALEXT 360
C                                                                               CALEXT 361
C              IS SURFACE WINDWARD (MWDIR=0) OR LEEWARD (MWDIR=1)?              CALEXT 362
      MWDIR = 0                                                                 CALEXT 363
C              If TILT is <0 then shift AZ by 180                               -030     1
      IF(<XSTLT> .gt. 0.)  THEN                                                 -030     2
        IF(COS(<XSAZM>-(WNDDRR-BAZIM)).LT.0.) MWDIR = 1                         -030     3
      ELSE                                                                      -030     4
        IF(COS(<XSAZM>-(WNDDRR-BAZIM)+3.1415926).LT.0.) MWDIR = 1               -030     5
      ENDIF                                                                     -030     6
C              WINDWARD IF SURFACE IS WITHIN 22.5 DEG OF HORIZONTAL             CALEXT 365
      IF(ABS(<XSTLT>).LT.0.393.OR.ABS(<XSTLT>).GT.2.749) MWDIR = 0              -030     7
      CALL FILM2(TPR,DBTR,<XSTLT>,<OPAQUE-EMISS>,<ISURRO>,                      CALEXT 367
     1              WNDSPZ,MWDIR,HCOUT,HROUT)                                   CALEXT 368
      FILMU = HCOUT + HROUT                                                     CALEXT 369
C              SUM ZONE CONDUCTIVITY.  SKIP FOR TROMBE WALLS                    CALEXT 370
      U      = <UFACTR>                                                         CALEXT 371
C            SKY AND GROUND FORM FACTORS FOR IR LOSS CALCULATION                CALEXT 372
C            (GROUND HERE MEANS GROUND PLUS OBSTRUCTIONS (OVERHANGS,            CALEXT 373
C            ETC.))                                                             CALEXT 374
      FFSIR = <EWSKYFF>*0.5*(1.+GAMMA)                                          VISBL  106
      FFGIR=1.-FFSIR                                                            CALEXT 377
C            EXTERIOR IR LOSS CORRECTION TERM (BTUH/FT**2)                      CALEXT 378
C            REPLACES SKYA*AMAX1(GAMMA,0.0)                                     CALEXT 379
      DBTR2 = DBTR*DBTR                                                         CALEXT 380
C              The following IR correction factor is based on the               CALEXT 381
C              formulation in TARP (TARP Ref. Man. p. 73, Mar 1983)             CALEXT 382
      QIREW = <OPAQUE-EMISS>*0.1714E-8*(DBTR2*DBTR2)*                           CALEXT 383
     1        (1.-FFSIR*(1.-COS(0.5*ABS(<XSTLT>))*(1.-ESKY))-FFGIR)             -030     8
C**************** EXTERIOR-WALL: before function ***********************        CALEXT 385
      IF( <MEWFN1> .GT. 0 )   CALL  FINTL( <MEWFN1>, 0. )                       CALEXT 386
C***********************************************************************        CALEXT 387
      IF (IEWTYP .GE. 3)  GO TO 310                                             CALEXT 388
      ZCOND  = ZCOND + (U*FILMU*XSAREA*XSMULT)                                  CALEXT 389
     1        /(U+FILMU)                                                        CALEXT 390
  310 CONTINUE                                                                  CALEXT 391
C              IF THE CRACK METHOD FOR INFILTRATION IS BEING USED,              CALEXT 392
C              FIND THE PRESSURE DIFFERENCE ACROSS THE WALL DUE                 CALEXT 393
C              TO WIND VELOCITY AND STACK EFFECT                                CALEXT 394
      CFM    = 0.                                                               CALEXT 395
      IF( INFCOD .NE. 2 )  GO TO 600                                            CALEXT 396
      SDELTA = AMIN1(ABS(<XSANGL> - WNDDRR),PIOVR2)                             CALEXT 397
      PCO = PTWV*<WSTMUL>*<WSTMUL>*COS(SDELTA) + PSE                            CALEXT 398
      PCO    = AMAX1(0.0,PCO)                                                   CALEXT 399
C              CHECK FOR QUICK OR DELAYED WALL                                  CALEXT 400
  600 IF ( <NRESF> .NE. 0 )  GO TO 2500                                         CALEXT 401
C              ----------------                                                 VISBL  107
C              QUICK CONDUCTION                                                 VISBL  108
C              ----------------                                                 VISBL  109
C              USING THE HEAT BALANCE EQUATION AT THE OUTER                     CALEXT 405
C              SURFACE, CALCULATE THE OUTSIDE SURFACE TEMPERATURE               CALEXT 406
      T = (SOLABW + FILMU*DBTR - QIREW + U*TZONER)/(U+FILMU)                    CALEXT 407
C              AS AN APPROXIMATE WAY OF ACCOUNTING FOR EXTERIOR                 EWCOND   1
C              SURFACE CONDENSATION, DO NOT ALLOW SURFACE TEMP                  EWCOND   2
C              TO FALL MORE THEN 1F BELOW DEWPOINT TEMP                         EWCOND   3
      DPTR = DPT + 460.                                                         EWCOND   4
      T = AMAX1(T,DPTR-1.0)                                                     EWCOND   5
C              IF RAINING SET ROOF SURFACE TEMP TO OUTDOOR WETBULB              EWCOND   6
C              (See S. Jayamaha et al. Effect of Rain on the Heat Gain          EWCOND   7
C              through Building Walls in Tropical Climates.                     EWCOND   8
C              Building and Environment 32(465-477)1997)                        EWCOND   9
      IF(IRAIN.EQ.1.AND.ABS(<XSTLT>).LT.1.396) T = WBT + 460.                   -030     9
C              CALCULATE THE HEAT THROUGH THE WALL FOR THIS HOUR                CALEXT 408
C              SAVE FOR USE NEXT HOUR                                           CALEXT 409
      <TQPREV> = T                                                              CALEXT 410
      Q      = U * (T-TZONER) * XSAREA                                          CALEXT 411
      IF(  ABS(<XSTLT>)  .LT. PIOVR4 )  GO TO 1400                              -030    10
C              SUM THE QUICK WALL LOAD FOR THIS SPACE                           CALEXT 413
      QWALQ  = QWALQ + Q * XSMULT                                               CALEXT 414
      GO TO 1500                                                                CALEXT 415
C              SUM THE QUICK CEILING LOAD FOR THIS SPACE                        CALEXT 416
 1400 QCELQ  = QCELQ + Q * XSMULT                                               CALEXT 417
C              IF CRACK METHOD BEING USED, CALCULATE THE CFM                    CALEXT 418
C              FOR THIS WALL                                                    CALEXT 419
 1500 IF( INFCOD .EQ. 2 )  CFM =  <EWINFC>  *  <XSPERM>  * (PCO**.5)            CALEXT 420
      GO TO 4000                                                                CALEXT 421
C              ------------------                                               VISBL  110
C              DELAYED CONDUCTION                                               VISBL  111
C              ------------------                                               VISBL  112
C              IF TROMBE WALL, DO WINDOW CALCULATION NOW                        CALEXT 425
 2500 IF (IEWTYP .LE. 2)  GO TO 3000                                            CALEXT 426
      CALL CALWIN                                                               CALEXT 427
      IF( IwinReturn .ne. 0 ) RETURN                                            -042L4  14
C              GET U VALUE FOR THE TROMBE WALL WINDOW COMBINATION.              CALEXT 428
C              INCREMENT ZONE CONDUCTANCE FOR TROMBE WALLS                      CALEXT 429
      MWI = <MXWIN>                                                             CALEXT 430
      CALL FILM2(DBTR,DBTR,<XSTLT>,0.84,6,                                      CALEXT 431
     1              WNDSPZ,MWDIR,HCOUT,HROUT)                                   CALEXT 432
      FILMW = HCOUT + HROUT                                                     CALEXT 433
      MEWOTH = <MEWOTH>                                                         CALEXT 434
      TWOUT  = AA(MEWOTH)                                                       CALEXT 435
      TAV    = 0.5*(TZONER+DBTR)                                                CALEXT 436
      IF (IEWTYP .EQ. 3)  TAV = 0.5*(TWOUT+<TGIN>)                              CALEXT 437
      UCHANR = .685E-8*TAV**3/(.1111+1./<EMISSIVITY>)                           CALEXT 438
      ATPRES = PATM/29.92                                                       CALEXT 439
      UCHANC = 0.25                                                             CALEXT 440
      HTW = <HEW>                                                               CALEXT 441
      IF(<MXSSURF>.NE.0) HTW = SQRT(<XGSARE>)                                   CALEXT 442
      IF (IEWTYP .EQ. 3)  UCHANC =                                              CALEXT 443
     1   CONVEC(TWOUT,<TGIN>,TAV,ATPRES,HTW,<CHANNEL-WIDTH>)                    CALEXT 444
      UCHAN  = UCHANR + UCHANC                                                  CALEXT 445
C              FOR UNVENTED TROMBE WALLS, FILMU WILL BE THE U VALUE             CALEXT 446
C              FROM OUTSIDE TO THE OUTER WALL SURFACE                           CALEXT 447
      FILMU  = 1./(1./UWW + 1./UCHAN + 1./FILMW)                                CALEXT 448
      ZCOND  = ZCOND + U*FILMU*XSAREA*XSMULT / (U + FILMU)                      CALEXT 449
C              FOR VENTED TROMBE WALLS, SKIP TO THE DOOR CALCULATION.           CALEXT 450
C              THE WALL CALCULATION WILL BE DONE IN SYSTEMS.                    CALEXT 451
      IF (IEWTYP .EQ. 4)  GO TO 33000                                           CALEXT 452
C              SET UP REST OF VARIABLES NEEDED FOR UNVENTED                     CALEXT 453
C              TROMBE WALL CALCULATION                                          CALEXT 454
C              SOLI IS THE SOLAR ABSORBED BY THE WALL                           CALEXT 455
      SOLI   = QSWALL                                                           CALEXT 456
C            ZERO IR LOSS CORRECTION SINCE WINDOW BLOCKS IR                     CALEXT 457
      QIREW=0.                                                                  CALEXT 458
C              SET UP CONSTANTS USED IN THE TEMPERATURE CALCULATIONS            CALEXT 459
      U1     = 1./(1./UCHAN + 1./UWW + 1./<RFX1>)                               CALEXT 460
      U2     = 1./(1./UCHAN + 1./<RFX1>)                                        CALEXT 461
      U3     = 1./(1./FILMW + 1./UWW)                                           CALEXT 462
C              ENTER DELAYED WALL CALCULATIONS                                  CALEXT 463
C              C2 AND C3 ARE INTERMEDIATE VARIABLES                             CALEXT 464
 3000 C2     = FILMU +  <RFX1>                                                  CALEXT 465
      C3 = QIREW - <RFX1>*TZONER - FILMU*DBTR                                   CALEXT 466
     1         - SOLABW                                                         CALEXT 467
      SUMXDT = 0.                                                               CALEXT 468
      SUMYDT = 0.                                                               CALEXT 469
C              GET POINTER TO OUTSIDE SURFACE TEMP. HIST.                       CALEXT 470
      MEWOTH = <MEWOTH>                                                         CALEXT 471
      TNEW   =  AA(MEWOTH)                                                      CALEXT 472
      IR     = 0                                                                CALEXT 473
      I2     =  <NRESF>  - 2                                                    CALEXT 474
C              RESET THE OUTSIDE SURFACE TEMPERATURE HISTORY.                   CALEXT 475
C              SUM THE QUANTITIES X(J)*(AA(MEWOTH+J)-TZONER) AND                CALEXT 476
C              Y(J)*(AA(MEWOTH+J)-TZONER) FROM J=1 TO NRESF-1.  X AND           CALEXT 477
C              Y ARE THE X AND Y RESPONSE FACTORS FOR THE WALL.                 CALEXT 478
C              AA(MEWOTH+J) IS THE OUTSIDE SURFACE TEMPERATURE FOR              CALEXT 479
C              THE JTH PREVIOUS HOUR.  TZONER IS THE SPACE TEMPERATURE.         CALEXT 480
      DO  3400  J = 1 , I2                                                      CALEXT 481
      TOLD   =  AA(MEWOTH+J)                                                    CALEXT 482
      AA(MEWOTH+J) = TNEW                                                       CALEXT 483
      DNEW   = TNEW - TZONER                                                    CALEXT 484
      TNEW   = TOLD                                                             CALEXT 485
      IR     = IR + 3                                                           CALEXT 486
      SUMXDT = SUMXDT +  <RFXIR> * DNEW                                         CALEXT 487
      SUMYDT = SUMYDT +  <RFYIR> * DNEW                                         CALEXT 488
 3400 CONTINUE                                                                  CALEXT 489
      IR     = IR + 3                                                           CALEXT 490
C              SET DT TO XSTOLD(NRESF) - TZONER                                 CALEXT 491
      DT     = TOLD - TZONER                                                    CALEXT 492
C              USING THE RESPONSE FACTOR COMMON RATIO AND THE                   CALEXT 493
C              SUMS SAVED FROM THE PREVIOUS HOUR, SUM THE                       CALEXT 494
C              SAME QUANTITIES AS ABOVE, BUT WITH THE SUM                       CALEXT 495
C              RUNNING FROM ZERO TO INFINITY.  SAVE THE SUMS FOR                CALEXT 496
C              USE NEXT HOUR                                                    CALEXT 497
      XSXCMP =  <RFCOMR>  * (  <XSXCOMP> - <SUMXDT>)+                           CALEXT 498
     1                     SUMXDT +  <RFXIR> * DT                               CALEXT 499
      <XSXCOMP> = XSXCMP                                                        CALEXT 500
      XSQCMP  =  <RFCOMR>  * (  <XSQCOMP> - <SUMYDT> )+                         CALEXT 501
     1                     SUMYDT +  <RFYIR> * DT                               CALEXT 502
      <XSQCOMP> = XSQCMP                                                        CALEXT 503
C              SAVE SUMXDT AND SUMYDT FOR USE NEXT HOUR                         CALEXT 504
      <SUMXDT>  = SUMXDT                                                        CALEXT 505
      <SUMYDT>    = SUMYDT                                                      CALEXT 506
C              USING THE HEAT BALANCE EQUATION AT THE OUTSIDE SURFACE,          CALEXT 507
C              SOLVE FOR T, THE OUTSIDE SURFACE TEMPERATURE                     CALEXT 508
      T         = -(C3+XSXCMP)/C2                                               CALEXT 509
C              AS AN APPROXIMATE WAY OF ACCOUNTING FOR EXTERIOR                 EWCOND  11
C              SURFACE CONDENSATION, DO NOT ALLOW SURFACE TEMP                  EWCOND  12
C              TO FALL MORE THEN 1F BELOW DEWPOINT TEMP                         EWCOND  13
      DPTR = DPT + 460.                                                         EWCOND  14
      T = AMAX1(T,DPTR-1.0)                                                     EWCOND  15
C              IF RAINING, SET ROOF SURFACE TEMP TO OUTDOOR WETBULB             EWCOND  16
      IF(IRAIN.EQ.1.AND.ABS(<XSTLT>).LT.1.396) T = WBT + 460.                   -030    11
C              FOR UNVENTED TROMBE WALLS, CALCULATE THE TEMPERATURE             CALEXT 510
C              AT THE INSIDE GLASS SURFACE AND AT THE OUTER                     CALEXT 511
C              TROMBE WALL SURFACE.  THIS LATTER TEMPERATURE IS                 CALEXT 512
C              THEN USED AS T IN THE DELAYED WALL CALCULATION.                  CALEXT 513
      IF (IEWTYP . LE. 2)  GO TO 3500                                           CALEXT 514
      TW = (QSGOUT-QIRWI)*U1/((FILMW+U1)*<RFX1>)                                CALEXT 515
     1     + QSGIN*U2/((U3+U2)*<RFX1>) + T                                      CALEXT 516
      <TGIN> = (QSGOUT-QIRWI)*U1/((FILMW+U1)*U2) + QSGIN/(U2+U3)                CALEXT 517
     1         + (T-DBTR)*FILMU/U3 + DBTR                                       CALEXT 518
      T      = TW                                                               CALEXT 519
      MWI    = <MXWIN>                                                          CALEXT 520
      QCON   = U3*(DBTR-<TGIN>)*<WIAREA> + QABS                                 CALEXT 521
 3500 CONTINUE                                                                  CALEXT 522
      AA(MEWOTH) = T                                                            CALEXT 523
C              USE T TO CALCULATE Q, THE HEAT FLOW THROUGH THE                  CALEXT 524
C              INSIDE SURFACE                                                   CALEXT 525
      Q      = (XSQCMP+  <RFY1> *(T-TZONER)) * XSAREA                           CALEXT 526
      IF(  ABS(<XSTLT>)  .LT. PIOVR4 )  GO TO 3600                              -030    12
C              SUM DELAYED WALL LOAD FOR THIS SPACE                             CALEXT 528
      QWALD  = QWALD + Q * XSMULT                                               CALEXT 529
      GO TO 3700                                                                CALEXT 530
C              SUM DELAYED CEILING LOAD FIR THIS SPACE                          CALEXT 531
 3600 QCELD  = QCELD + Q * XSMULT                                               CALEXT 532
C              IF CRACK METHOD IS BEING USED, CALCULATE CFM                     CALEXT 533
C              FOR THIS WALL                                                    CALEXT 534
 3700 IF( INFCOD .EQ. 2 )  CFM = <EWINFC> * XSAREA * (PCO**.8)                  CALEXT 535
 4000 CFMINF = CFMINF + CFM * XSMULT                                            CALEXT 536
C              --------------------------------                                 VISBL  113
C              WINDOW SOLAR GAIN AND CONDUCTION                                 VISBL  114
C              --------------------------------                                 VISBL  115
      IF (IEWTYP .LE. 2)  CALL CALWIN                                           CALEXT 540
33000 ND     = <NDOOR>                                                          CALEXT 541
      IF (ND .EQ. 0)  GO TO 40000                                               CALEXT 542
C              ---------------                                                  VISBL  116
C              DOOR CONDUCTION                                                  VISBL  117
C              ---------------                                                  VISBL  118
      MD     = <MXDOOR>                                                         CALEXT 546
C              ZERO THE DOOR VARIABLES                                          CALEXT 547
      DO 34000  I=1,6                                                           CALEXT 548
34000 DRV(I) = 0.0                                                              CALEXT 549
      DO 35000 ID=1,ND                                                          CALEXT 550
      MP     = <MDRPROP>                                                        CALEXT 551
      UD     = <UFACTR>                                                         CALEXT 552
C              PREVIOUS HOUR OUTSIDE SURFACE TEMPERATURE (R)                    CALEXT 553
      TPRD = <TDRPREV>                                                          CALEXT 554
C              IF FIRST HOUR OF RUN PERIOD                                      CALEXT 555
      IF(IFHRP.EQ.1) TPRD = DBTR                                                CALEXT 556
C              CONVECTIVE AND RADIATIVE OUTSIDE FILM CONDUCTANCE                CALEXT 557
      CALL FILM2(TPRD,DBTR,<XSTLT>,<OPAQUE-EMISS>,<ISURRO>,                     CALEXT 558
     1              WNDSPZ,MWDIR,HCOUT,HROUT)                                   CALEXT 559
      FILMUD = HCOUT + HROUT                                                    CALEXT 560
      JJ = IHR                                                                  CALEXT 561
      DRGOLG = <DRGOLGE>                                                        CALEXT 562
      ATXSM = <DRMULT>*XSMULT                                                   CALEXT 563
C            SKY AND GROUND FORM FACTOR FOR IR LOSS CALCULATION                 CALEXT 564
      DFFSIR = <DRSKYFF>*0.5*(1.+GAMMA)                                         VISBL  119
      DFFGIR=1.-DFFSIR                                                          CALEXT 567
C            EXTERIOR IR LOSS CORRECTION TERM (BTUH/FT**2)                      CALEXT 568
      DBTR2 = DBTR*DBTR                                                         CALEXT 569
      QIRDR = <OPAQUE-EMISS>*0.1714E-8*(DBTR2*DBTR2)*                           CALEXT 570
     1        (1.-DFFSIR*(1.-COS(0.5*ABS(<XSTLT>))*(1.-ESKY))-DFFGIR)           -030    13
C**************** DOOR:  before function *******************************        CALEXT 572
      IF( <MDRFN1> .GT. 0 )   CALL  FINTL( <MDRFN1>, 0. )                       CALEXT 573
C***********************************************************************        CALEXT 574
C              INCREMENT ZONE CONDUCTANCE                                       CALEXT 575
      ZCOND  = ZCOND + (UD*FILMUD*<DRAREA>*ATXSM)                               CALEXT 576
     1        /(UD+FILMUD)                                                      CALEXT 577
      SOLID  = 0.                                                               CALEXT 578
      SOLABD = 0.                                                               CALEXT 579
C              IF NO SUN, SKIP SOLAR CALCULATION                                CALEXT 580
      IF (ISUNUP .EQ. 0)  GO TO 34100                                           CALEXT 581
      DRFFS = FFS0*<DRSKYFF>                                                    VISBL  120
      DRFFG = FFG0*<DRGNDFF>                                                    VISBL  121
34020 DDIF = BSCC*DRFFS + BG*DRFFG                                              CALEXT 591
      SOLID = DDIF + RDIR*(1.-DRGOLG)                                           CALEXT 592
C              ADJUST REFLECTION FACTORS ON FIRST DAY OF MONTH IF REQUESTED     CALEXT 593
      IF(IGOLGE.NE.0.AND.ISREFL.EQ.2) THEN                                      CALEXT 594
        ADSUND = <SURABSO>*((1.-DRGOLG)*AMAX1(0.,ETA)/RAYCOS(3) +               CALEXT 595
     1           DRFFG*<GNDREF>)                                                CALEXT 596
        <RF-ADSUN> = <RF-ADSUN> - ADSUND                                        CALEXT 597
      ENDIF                                                                     CALEXT 598
C                                                                               CALEXT 599
      DRFFSW = 0.5*(1.+<CXSTLT>)*<DRSKYFF>                                      VISBL  122
      ADSKYD = <SURABSO>*(DRFFSW + DRFFG*<GNDREF>)                              CALEXT 601
C              SOLAR ABSORBED BY DOOR, INCLUDING REFLECTION                     CALEXT 602
C              IF ISREFL = 1 or 2                                               CALEXT 603
      IF(ISREFL.EQ.0) THEN                                                      CALEXT 604
          SOLABD = SOLID*<SURABSO>                                              CALEXT 605
        ELSE IF(ISREFL.EQ.1) THEN                                               CALEXT 606
          SOLABD = <RF-ADSUN>*RDNCC*RAYCOS(3) + (<RF-ADSKY>)*BSCC               CALEXT 607
        ELSE IF(ISREFL.EQ.2) THEN                                               CALEXT 608
          SOLABD = SOLID*<SURABSO> + <RF-ADSUN>*RDNCC*RAYCOS(3)                 CALEXT 609
     1         + (<RF-ADSKY>-ADSKYD)*BSCC                                       CALEXT 610
      ENDIF                                                                     CALEXT 611
C              USING THE HEAT BALANCE EQUATION AT THE OUTSIDE                   CALEXT 612
C              DOOR SURFACE, CALCULATE THE OUTSIDE DOOR                         CALEXT 613
C              SURFACE TEMPERATURE                                              CALEXT 614
34100 TSOLD = (SOLABD + FILMUD*DBTR                                             CALEXT 615
     1        -QIRDR + UD*TZONER)/(UD+FILMUD)                                   CALEXT 616
C              SAVE FOR USE NEXT HOUR                                           CALEXT 617
C              AS AN APPROXIMATE WAY OF ACCOUNTING FOR EXTERIOR                 EWCOND  18
C              SURFACE CONDENSATION, DO NOT ALLOW SURFACE TEMP                  EWCOND  19
C              TO FALL MORE THEN 1F BELOW DEWPOINT TEMP                         EWCOND  20
      DPTR = DPT + 460.                                                         EWCOND  21
      TSOLD = AMAX1(TSOLD,DPTR-1.0)                                             EWCOND  22
      <TDRPREV> = TSOLD                                                         CALEXT 618
      QD     = UD * (TSOLD-TZONER) * <DRAREA>                                   CALEXT 619
      IF (INFCOD .EQ. 2)  CFMD = <DRINFC>*<DRPERM>*(PCO**.5)                    CALEXT 620
C**************** DOOR:  after function ********************************        CALEXT 621
      IF( <MDRFN2> .GT. 0 )   CALL  FINTL( <MDRFN2>, 1. )                       CALEXT 622
C***********************************************************************        CALEXT 623
      CFMINF = CFMINF + CFMD*ATXSM                                              CALEXT 624
      QDOOR = QDOOR  +  QD * ATXSM                                              CALEXT 625
C              TRANSFER DOOR VARIABLES TO USER REPORT BUFFER                    CALEXT 626
      IF ((IRSCH .EQ. 0) .OR. (<MDRBUF> .EQ. 0))  GO TO 35000                   CALEXT 627
      IPTR   = <MDRBUF> - 1                                                     CALEXT 628
      DO 34500 I=1,6                                                            CALEXT 629
34500 AA(IPTR+I) = DRV(I)                                                       CALEXT 630
35000 MD     = MD + MDRLEN                                                      CALEXT 631
40000 CONTINUE                                                                  CALEXT 632
C**************** EXTERIOR-WALL:  after function ***********************        CALEXT 633
      IF( <MEWFN2> .GT. 0 )   CALL  FINTL( <MEWFN2>, 1. )                       CALEXT 634
C***********************************************************************        CALEXT 635
C              TRANSFER WALL VARIABLES TO USER REPORT BLOCK BUFFER              CALEXT 636
      IF (IRSCH .EQ. 0 .OR. <MEWBUF> .EQ. 0) GO TO 40500                        CALEXT 637
      IPTR   = <MEWBUF> - 1                                                     CALEXT 638
      DO 40100 I=1,16                                                           VISBL  123
      AA(IPTR+I) = WALLV(I)                                                     VISBL  124
40100 CONTINUE                                                                  VISBL  125
      AA(IPTR+17) = <DIREWSH>                                                   VISBL  126
      AA(IPTR+18) = <DIFEWSH>                                                   VISBL2   1
40500 CONTINUE                                                                  CALEXT 642
C              DEBUG PRINT FOR TROMBE WALLS                                     CALEXT 643
      IF ((IRSCH .EQ. 0) .OR. (IREPRT(1,35) .EQ. 0) .OR.                        IREPRT  45
     1    (IEWTYP .LT. 3))  GO TO 40700                                         CALEXT 645
      YTWOUT = TWOUT-YABS                                                       CALEXT 646
      YTAV   = TAV                                                              CALEXT 647
      YTGIN  = <TGIN>-YABS                                                      CALEXT 648
      YQSWAL = QSWALL                                                           CALEXT 649
      YQSGIN = QSGIN                                                            CALEXT 650
      YQSGOU = QSGOUT                                                           CALEXT 651
      YUCHNR = UCHANR                                                           CALEXT 652
      YUCHNC = UCHANC                                                           CALEXT 653
      YUCHAN = UCHAN                                                            CALEXT 654
      YFILMW = FILMW                                                            CALEXT 655
      YFILMU = FILMU                                                            CALEXT 656
      YU1    = U1                                                               CALEXT 657
      YU2    = U2                                                               CALEXT 658
      YU3    = U3                                                               CALEXT 659
      IF (MTRICR.EQ.0)  GOTO 40510                                              CALEXT 660
      CALL KDIV(YTWOUT,8,3,0)                                                   CALEXT 661
      CALL KDIV(YQSWAL,17,3,0)                                                  CALEXT 662
      CALL KDIV(YUCHNR,6,8,0)                                                   CALEXT 663
40510 CONTINUE                                                                  CALEXT 664
      WRITE(IOUTPT,90001) IHR,IDAY,IMO,(<IXSNM>,II=1,4),YTWOUT,YTAV,YTGI        CALEXT 665
     1N,                                                                        CALEXT 666
     2         YQSWAL,YQSGIN,YQSGOU,WCS,YUCHNR,YUCHNC,YUCHAN,YFILMW,            CALEXT 667
     3           YFILMU,YU1,YU2,YU3                                             CALEXT 668
90001 FORMAT(1X,3I2,4X,4A4,4X,7HTWOUT =,F11.1,2X,7HTAV   =,F11.1,2X,            CALEXT 669
     1       7HTGIN  =,F11.1,2X,7HQSWALL=,F11.2,2X,7HQSGIN =,F11.2/31X,         CALEXT 670
     2       7HQSGOUT=,F11.2,2X,7HWCS   =,F11.3,2X,7HUCHANR=,F11.5,2X,          CALEXT 671
     3       7HUCHANC=,F11.5,2X,7HUCHAN =,F11.5/31X,7HFILMW =,F11.5,2X,         CALEXT 672
     4       7HFILMU =,F11.5,2X,7HU1    =,F11.5,2X,7HU2    =,F11.5,2X,          CALEXT 673
     5       7HU3    =,F11.5)                                                   CALEXT 674
40700 CONTINUE                                                                  CALEXT 675
C              INCREMENT EXTERIOR WALL POINTER                                  CALEXT 676
      MX     = MX + MXLEN                                                       CALEXT 677
49900 CONTINUE                                                                  CALEXT 678
      RETURN                                                                    CALEXT 679
      END                                                                       CALEXT 680
      SUBROUTINE  CALOTH                                                        CALOTH   2
C                                                                               CALOTH   3
C              CALCULATE:                                                       LDS1     2
C              1. HEAT GAIN FROM INTERIOR AND UNDERGROUND WALLS                 LDS1     3
C              2. HEAT GAIN FROM OCCUPANTS, EQUIPMENT, AND LIGHTS               LDS1     4
C              3. SOURCE LOAD                                                   LDS1     5
C              4. WEIGHTED LOAD FROM WALLS, SOLAR, LIGHTS, EQUIP, PEOPLE        LDS1     6
C              5. INFILTRATION LOAD                                             LDS1     7
      COMMON  /SUND/   ISUNUP, GUNDOG, HORANG, TDECLN, EQTIME, SOLCON,          /SUND/   2
     1                 ATMEXT, SKYDFF, RAYCOS(3), RDN,                          /SUND/   3
     2                 BSUN, DECLN, CD, SD, FSUNUP                              /SUND/   4
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                         /FILES/  3
     2              , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                    /FILES/  4
     3                IHRREP(3), IHRPAS(2)                                      /FILES/  5
      COMMON  /REPORT/ IREPRT(4,37),IPRG,IUNIQV(100),IUNIQS(100),IUNIQL         BIGNAM   1
C                                                                               CALOTH   8
      COMMON  /BEPS  /  BGAREA, BNAREA, PctSysOvrld, PctPltOvrld,               HVAC6    1
     $                  SiteEnergy, SourceEnergy                                HVAC6    2
      DIMENSION         BEPS(6)                                                 HVAC6    3
      EQUIVALENCE       (BEPS(1),BGAREA)                                        HVAC6    4
      COMMON /CLCFLG/ IFSTHR,IPRDFL,IGOLGE,NDD,LDSTYP,IFHRP                     DDAY1    1
      COMMON  /HRREP / Irb, Ihrp, Lrb, Lhrp, Nrb, Nhrp, IVTLIM(3,50),           HRr      1
     &                 IGRPtr, IBRPtr, IRSch, IRSchT(5),                        HRr      2
     &                 NHRTyp(3), ITBUF(3), ITBUFB(3), ITBUFE(3),               HRr      3
     &                 IHREOF, ICDFLG                                           HRr      4
      COMMON  /LENS/   MWFLEN, MRLEN, MSHLEN, MWNLEN, MDRLEN, MXLEN,            /LENS/   2
     1                 MULEN, MZLEN, MIWLEN, MFLLEN,                            HRr      5
     2                 LMTB, LLDSOU, MSTLEN, LSTFT, MWLLEN                      BLIND    1
      COMMON  /LOCALD/ STALAT, STALON, ITIMZ, BAZIM, BALTIT,                    /LOCALD/ 2
     1                 SSTALA, CSTALA, TSTALA, SBAZIM, CBAZIM                   /LOCALD/ 3
     2                 ,BXORG, BYORG, SHCOEF, TP1, TP2, WSTP1, WSTP2,           /LOCALD/ 4
     3                 WSHGT,WSHGTL(12),ISREFL,IHOLX                            HOLID1   2
      DIMENSION LOCALD(32)                                                      HOLID1   3
      EQUIVALENCE      (LOCALD(1),STALAT)                                       /LOCALD/ 7
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     BLIND    2
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        FLOOR1   3
      COMMON  /PTRBGN/ ISCB, IWFB, IWPB, ICONSB, IGTB, IWLB, IGEOB,             HRr      6
     1                 ISHADB, IWINB, IDRB, IEWB, IUGB, ISPB, IIWPB,            HRr      7
     2                 IIWB, IFLB, ISPCDB, IOTHB, ILHB, IZQCMB, ISSHDB,         HRr      8
     3                 IOHFIB, IZLSK, IZLSL, ISTFB                              HRr      9
      COMMON /TIME  / IDOY, IDOW, IDSTF, ISCHR, ISCDAY, iDSdates(6),            -044e5r  1
     1                IMO, IDAY, IYR, IHR, CLOCK(10), IDSFLG,                   HOLID1   4
     2                MONDSC(12), MONLEN(12), MONSDA(12), IEODMR                /TIME/   4
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
      COMMON  /ZNEWHR/ TZONER, INFCOD,                                          /ZNEWHR/ 2
     1                 QWALQ, QCELQ, QWINC, QWALD, QCELD,QINTW,                 /ZNEWHR/ 3
     2                 QUGF, QUGW, QDOOR, QEQPS, QEQPS2, QPPS,                  /ZNEWHR/ 4
     3                 QPPL, QEQPL, QEQPL2, QINFL,                              /ZNEWHR/ 5
     4                 QTSKL, QSOL, QPLENM, QLITE, QLITEW, QINFS,               /ZNEWHR/ 6
     5                 QELECT, CFMINF, QSUMW, ZCOND, QZS, QZL, QZTOT,           /ZNEWHR/ 7
     6                 QZLTEL,QZEQEL,QZGAS,QZHW,WNDSPZ,MANAGE                   /ZNEWHR/ 8
     7               , QZPEL, QZTLEL                                            /ZNEWHR/ 9
      DIMENSION QYENI(33)                                                       /ZNEWHR/10
      EQUIVALENCE  (QYENI(1), QWALQ)                                            /ZNEWHR/11
      COMMON        // AA(75 000 000)                                           -048ar   1
      INTEGER          IA(75 000 000)                                           -048ar   2
      EQUIVALENCE  (IA(1), AA(1))                                               //       4
C                                                                               CALOTH  20
C              GET INTERIOR AND UNDERGROUND SURFACE HEAT GAINS                  CALOTH  21
C            INT WALLS BET SUNSPACE AND REGULAR SPACE ARE NOT INCLUDED          CALOTH  22
C            IN INT SURF HEAT GAIN.  THIS TRANS IS CALC IN SYSTEMS.             CALOTH  23
      QINTW  = <QZINTS>                                                         CALOTH  24
      MU = <MZUG>                                                               CALOTH  25
      IF( MU .EQ. 0 )  GOTO  200                                                CALOTH  26
C**************** UNDERGROUND:  before function ************************        CALOTH  27
          IF( <MUGFN1> .GT. 0 )   CALL  FINTL( <MUGFN1>, 0. )                   CALOTH  28
C***********************************************************************        CALOTH  29
200   CONTINUE                                                                  CALOTH  30
      QUGW   = <ZUGWUA> * ( TGNDR - TZONER )                                    CALOTH  31
      QUGF   = <ZUGFUA> * ( TGNDR - TZONER )                                    CALOTH  32
      MU = <MZUG>                                                               CALOTH  33
      IF( MU .EQ. 0 )  GOTO  400                                                CALOTH  34
C**************** UNDERGROUND:  after function *************************        CALOTH  35
          IF( <MUGFN2> .GT. 0 )   CALL  FINTL( <MUGFN2>, 1. )                   CALOTH  36
C***********************************************************************        CALOTH  37
400   CONTINUE                                                                  CALOTH  38
                                                                                -045br   1
c              Internal loads. For custom weighting factors, split the          -045br   2
c              radiative and convective gains, and weight only the              -045br   3
c              radiative portion. If ASHRAE weighting factors are used,         -045br   4
c              they apply to both convective and radiative; in this case        -045br   5
c              the "radiative" fraction is forced to 1.0 in READSF so           -045br   6
c              that the entire load is weighted.                                -045br   7
                                                                                -045br   8
c              Occupancy Load                                                   -045br   9
      IF (<PEOPLE-SCHEDULE> .ne. 0) THEN                                        -050x    5
        SchV = AA(<@PEOPLE-SCHEDULE> + ISCHR)                                   -045br  11
      ELSE                                                                      -045br  12
        SchV = 0.                                                               -045br  13
      ENDIF                                                                     -045br  14
      QPPL    = <ZQPPLL> * SchV           ! latent                              -045br  15
      QPPS    = <ZQPPLS> * SchV           ! unweighted sensible                 -045br  16
      QoccRad = QPPS * <PEOPLE-RAD-FRAC>  !   weighted portion                  -045br  17
      QoccCnv = QPPS - QoccRad            !   convective portion                -045br  18
                                                                                -045br  19
c              Source load                                                      -045br  20
      IF (<SOURCE-SCHEDULE> .ne. 0) THEN                                        -050x    6
        SchV    = AA(<@SOURCE-SCHEDULE> + ISCHR)                                -045br  22
        QEQPL2  = <ZQEQ2L> * SchV             ! latent                          -045br  23
        QEQPS2  = <ZQEQ2S> * SchV             ! unweighted sensible             -045br  24
        QsrcRad = QEQPS2 * <SOURCE-RAD-FRAC>  !   weighted portion              -045br  25
        QsrcCnv = QEQPS2 - QsrcRad            !   convective portion            -045br  26
c              add source demand to elec, gas, or hot-water                     -045br  27
        IF (<SOURCE-TYPE> .lt. 4) THEN                                          -045br  28
          ISRCP        = <SOURCE-TYPE> + 30                                     -045br  29
          QYENI(ISRCP) = SchV*<ZQEQ2>                                           -045br  30
        ENDIF                                                                   -045br  31
        QZPEL  = QYENI(31)                                                      -045br  32
        QELECT = QELECT + QYENI(31)                                             -045br  33
      ELSE                                                                      -045br  34
        QZPEL   = 0.0                                                           -045br  35
        QsrcRad = 0.                                                            -045br  36
        QsrcCnv = 0.                                                            -045br  37
      ENDIF                                                                     -045br  38
                                                                                -045br  39
c              Electrical equipment                                             -045br  40
      QeqRad = 0.                                                               -045br  41
      QeqCnv = 0.                                                               -045br  42
      DO IL = 1,5                                                               -045br  43
        IF (<EQUIP-SCHEDULE> .EQ. 0)  Exit                                      -045br  44
        SchV   = AA(<@EQUIP-SCHEDULE> + ISCHR)                                  -045br  45
        Qsch   = <ZQEQ1SUBZ> * SchV           ! equip load                      -045br  46
        QEQPL  = QEQPL + Qsch*<EQUIP-LATENT>  ! latent load                     -045br  47
        Qsens  = Qsch  * <EQUIP-SENSIBLE>     ! sensible load                   -045br  48
        Qrad   = Qsens * <EQUIP-RAD-FRAC>     !   weighted portion              -045br  49
        Qcnv   = Qsens - Qrad                 !   convective portion            -045br  50
        QeqRad = QeqRad + Qrad                                                  -045br  51
        QeqCnv = QeqCnv + Qcnv                                                  -045br  52
        QELECT = QELECT + Qsch                ! electric demand                 -045br  53
        QZEQEL = QZEQEL + Qsch                ! electric demand                 -045br  54
      ENDDO                                                                     -045br  55
      QEQPS = QeqRad + QeqCnv                 ! unweighted sensible             -045br  56
                                                                                -045br  57
c              General lighting loads                                           -045br  58
      QlitRad = 0.                                                              -045br  59
      QlitCnv = 0.                                                              -045br  60
      QPLENM  = 0.                                                              -045br  61
      DO IL = 1,5                                                               -045br  62
        IF (<LIGHTING-SCHEDUL> .EQ. 0) Exit                                     -045br  63
        Qsch    = <ZQLTSUBZ> * AA(<@LIGHTING-SCHEDUL> + ISCHR)                  -045br  64
     &          * <POWER-RED-FAC>             ! daylighting                     -045br  65
        Qsens   = Qsch  * <LIGHT-TO-SPACE>    ! load to this space              -045br  66
        Qrad    = Qsens * <LIGHT-RAD-FRAC>    !   weighted portion              -045br  67
        Qcnv    = Qsens - Qrad                !   convective portion            -045br  68
        QlitRad = QlitRad + Qrad                                                -045br  69
        QlitCnv = QlitCnv + Qcnv                                                -045br  70
        QZLTEL  = QZLTEL + Qsch               ! electric demand                 -045br  71
        QPLENM  = QPLENM                      ! light to return air             -045br  72
     &          + Qsch * <LIGHT-TO-RETURN>                                      -045br  73
c              Light heat to other space (other space must be                   -045br  74
c              unconditioned or plenum)                                         -045br  75
        IF (<LIGHT-HEAT-TO> .ne. 0) THEN                                        -050x    7
          Qother = Qsch * <LIGHT-TO-OTHER>    ! load to other space             -045br  77
          Qrad   = Qother * <OTHER-RAD-FRAC>  !   weighted portion              -045br  78
          Qcnv   = Qother - Qrad              !   convective portion            -045br  79
          MZ1    = MZ                                                           -045br  80
          MZ     = <LIGHT-HEAT-TO>                                              -045br  81
          <QltOtherRad> = <QltOtherRad> + Qrad                                  -045br  82
          <QltOtherCnv> = <QltOtherCnv> + Qcnv                                  -045br  83
          MZ     = MZ1                                                          -045br  84
        ENDIF                                                                   -045br  85
      ENDDO                                                                     -045br  86
      QELECT = QELECT + QZLTEL                ! electrical                      -045br  87
                                                                                -045br  88
c              Light entering this space (unconditioned or plenum)              -045br  89
c              from other spaces                                                -045br  90
      QlitRad = QlitRad + <QltOtherRad>                                         -045br  91
      QlitCnv = QlitCnv + <QltOtherCnv>                                         -045br  92
      QLITE   = QlitRad + QlitCnv             ! unweighted light to space       -045br  93
                                                                                -045br  94
c              Task lighting load                                               -045br  95
      IF (<TASK-LIGHT-SCH> .ne. 0) THEN                                         -050x    8
        SchV    = AA(<@TASK-LIGHT-SCH> + ISCHR)                                 -045br  97
        Qsch    = <ZQTLT> * SchV              ! task lighting load              -045br  98
        QtskRad = Qsch * <TASK-RAD-FRAC>      !   weighted portion              -045br  99
        QtskCnv = Qsch - QtskRad              !   convective portion            -045br 100
        QELECT  = QELECT + Qsch                                                 -045br 101
        QZLTEL  = QZLTEL + Qsch                                                 -045br 102
        QZTLEL  = Qsch                                                          -045br 103
        QTSKL   = Qsch                        ! unweighted task                 -045br 104
      ELSE                                                                      -045br 105
        QtskRad = 0.                                                            -045br 106
        QtskCnv = 0.                                                            -045br 107
      ENDIF                                                                     -045br 108
                                                                                -045br 109
      IF(ISUNUP.EQ.0) GO TO 1590                                                CALOTH 100
C              IF SPACE IS ADJACENT TO A SUNSPACE, ADD SOLAR GAIN FROM          CALOTH 101
C              SOLAR RADIATION PASSING THROUGH INTERIOR WINDOWS                 CALOTH 102
      IF(<SUNSPACE>.NE.2) GO TO 1590                                            CALOTH 103
      IF(IREPRT(1,35).NE.0) WRITE(IOUTPT,1991) IHR,MZ,<SUNSPACE>,QSOL           IREPRT  46
 1991 FORMAT(' CALOTH--IHR,MZ,SUNSPACE,QSOL=',3I10,F10.3)                       CALOTH 105
      NIW1 = <NINTS>                                                            CALOTH 106
      IF(NIW1.EQ.0) GO TO 1590                                                  CALOTH 107
      DO 1580 IW1=1,NIW1                                                        CALOTH 108
      MI = IA(<MZINT>+IW1-1)                                                    CALOTH 109
      IF(<IWSSPID>.NE.1) GO TO 1580                                             CALOTH 110
C              GET SUNSPACE MULTIPLIER                                          CALOTH 111
      MZRM = MZ                                                                 CALOTH 112
      MZ = <MZIN>                                                               CALOTH 113
      IF(MZRM.EQ.<MZIN>) MZ = <MZNEXTTO>                                        CALOTH 114
      ZMSS = <ZMULT>                                                            CALOTH 115
      MZ = MZRM                                                                 CALOTH 116
      QSOL = QSOL + <SOLTRNIW>*ZMSS                                             CALOTH 117
      IF(IREPRT(1,35).NE.0)                                                     IREPRT  47
     1    WRITE (IOUTPT,1993)  IW1,MZ,MI,ZMSS,<SOLTRNIW>,QSOL                   CALOTH 119
 1993 FORMAT(' IW1,MZ,MI,ZMSS,SOLTRNIW,QSOL=',3I5,3F10.3/)                      CALOTH 120
 1580 CONTINUE                                                                  CALOTH 121
 1590 CONTINUE                                                                  CALOTH 122
C              TRANSFER UNWEIGHTED VARIABLES TO THE REPORT BLOCK BUFFER         CALOTH 123
      ISPBFP = <MZBUF>                                                          CALOTH 124
      IBFLAG = 0                                                                CALOTH 125
      IF (IRSCH .EQ. 0 .OR. ISPBFP .EQ. 0) GO TO 2100                           CALOTH 126
      IPTR   = ISPBFP - 1                                                       CALOTH 127
      DO 2000 I=1,12                                                            CALOTH 128
      AA(IPTR+I) = QYENI(I)                                                     CALOTH 129
 2000 CONTINUE                                                                  CALOTH 130
      DO 2050 I=13,15                                                           CALOTH 131
 2050 AA(IPTR+I) = QYENI(I+4)                                                   CALOTH 132
      AA(IPTR+58) = WNDSPZ                                                      CALOTH 133
      IBFLAG = 1                                                                CALOTH 134
 2100 CONTINUE                                                                  CALOTH 135
C**************** SPACE: after function with FNTYPE=1 ******************        CALOTH 136
      IF( <MZFN2> .GT. 0 )   CALL  FINTL( <MZFN2>, 1. )                         CALOTH 137
C***********************************************************************        CALOTH 138
C              IF FIRST HOUR, INITIALIZE LOAD HISTORY                           CALOTH 139
      IF (IFSTHR .EQ. 0)  GO TO 2250                                            CALOTH 140
      DO 2200 M=1,4                                                             CALOTH 141
      MM     = (M-1)*15 + MLH                                                   CALOTH 142
      AA(MM+9) = QSOL                                                           CALOTH 143
      AA(MM+10) = QLITE                                                         CALOTH 144
      AA(MM+11) = QTSKL                                                         CALOTH 145
      AA(MM+12) = QEQPS                                                         CALOTH 146
      AA(MM+13) = QEQPS2                                                        CALOTH 147
      AA(MM+14) = QPPS                                                          CALOTH 148
      DO 2200 II=1,9                                                            CALOTH 149
      IIM1   = II - 1 + MM                                                      CALOTH 150
      AA(IIM1) = QYENI(II)                                                      CALOTH 151
 2200 CONTINUE                                                                  CALOTH 152
 2250 CONTINUE                                                                  CALOTH 153
C              WEIGHT ALL THE WALLS                                             CALOTH 154
      DO 2300 II=1,9                                                            CALOTH 155
      ZLOAD  = <COND-V0>*QYENI(II) + <COND-V1>*<WALL-HEAT-GAIN-1>               CALOTH 156
     1 + <COND-V2>*<WALL-HEAT-GAIN-2> + <COND-W1>*<WALL-LOAD-1>                 CALOTH 157
     2 + <COND-W2>*<WALL-LOAD-2>                                                CALOTH 158
      <WALL-HEAT-GAIN-2> = <WALL-HEAT-GAIN-1>                                   CALOTH 159
      <WALL-HEAT-GAIN-1> = QYENI(II)                                            CALOTH 160
      <WALL-LOAD-2> = <WALL-LOAD-1>                                             CALOTH 161
      <WALL-LOAD-1> = ZLOAD                                                     CALOTH 162
 2300 QYENI(II) = ZLOAD                                                         CALOTH 163
C              WEIGHT SOLAR                                                     CALOTH 164
      ZLOAD  = <SOLAR-V0>*QSOL + <SOLAR-V1>*<QSOL1>                             CALOTH 165
     1      + <SOLAR-V2>*<QSOL2> + <SOLAR-W1>*<QWGTSOL1>                        CALOTH 166
     2      + <SOLAR-W2>*<QWGTSOL2>                                             CALOTH 167
      <QSOL2> = <QSOL1>                                                         CALOTH 168
      <QSOL1> = QSOL                                                            CALOTH 169
      <QWGTSOL2> = <QWGTSOL1>                                                   CALOTH 170
      <QWGTSOL1> = ZLOAD                                                        CALOTH 171
      QSOL   = ZLOAD                                                            CALOTH 172
                                                                                -045br 110
c              Weight radiant portion of internal loads (convective             -045br 111
c              portion always appears first hour).  First, people.              -045br 112
      Qweight = <EQUIP-PEOP-V0>*QoccRad + <EQUIP-PEOP-V1>*<QPPS1>               -045br 113
     &                                  + <EQUIP-PEOP-V2>*<QPPS2>               -045br 114
     &        + <EQUIP-PEOP-W1>*<QWGTPPS1> + <EQUIP-PEOP-W2>*<QWGTPPS2>         -045br 115
      QPPS       = Qweight + QoccCnv   ! weighted radiant & convective          -045br 116
      <QPPS2>    = <QPPS1>             ! history                                -045br 117
      <QPPS1>    = QoccRad                                                      -045br 118
      <QWGTPPS2> = <QWGTPPS1>                                                   -045br 119
      <QWGTPPS1> = Qweight                                                      -045br 120
                                                                                -045br 121
c              Weight source load                                               -045br 122
      Qweight = <EQUIP-PEOP-V0>*QsrcRad + <EQUIP-PEOP-V1>*<QEQPS21>             -045br 123
     &                                  + <EQUIP-PEOP-V2>*<QEQPS22>             -045br 124
     &        + <EQUIP-PEOP-W1>*<QWGTEQPS21>                                    -045br 125
     &        + <EQUIP-PEOP-W2>*<QWGTEQPS22>                                    -045br 126
      QEQPS2       = Qweight + QsrcCnv  ! weighted radiant & convective         -045br 127
      <QEQPS22>    = <QEQPS21>          ! history                               -045br 128
      <QEQPS21>    = QsrcRad                                                    -045br 129
      <QWGTEQPS22> = <QWGTEQPS21>                                               -045br 130
      <QWGTEQPS21> = Qweight                                                    -045br 131
                                                                                -045br 132
c              Weight electric equipment                                        -045br 133
      Qweight = <EQUIP-PEOP-V0>*QeqRad + <EQUIP-PEOP-V1>*<QEQPS11>              -045br 134
     &                                 + <EQUIP-PEOP-V2>*<QEQPS12>              -045br 135
     &        + <EQUIP-PEOP-W1>*<QWGTEQPS11>                                    -045br 136
     &        + <EQUIP-PEOP-W2>*<QWGTEQPS12>                                    -045br 137
      QEQPS        = Qweight + QeqCnv   ! weighted radiant & convective         -045br 138
      <QEQPS12>    = <QEQPS11>          ! history                               -045br 139
      <QEQPS11>    = QeqRad                                                     -045br 140
      <QWGTEQPS12> = <QWGTEQPS11>                                               -045br 141
      <QWGTEQPS11> = Qweight                                                    -045br 142
                                                                                -045br 143
c              Weight lighting                                                  -045br 144
      Qweight = <LITES-V0>*QlitRad + <LITES-V1>*<QLITE1>                        -045br 145
     &                             + <LITES-V2>*<QLITE2>                        -045br 146
     &        + <LITES-W1>*<QWGTLITE1> + <LITES-W2>*<QWGTLITE2>                 -045br 147
      QLITEW      = Qweight + QlitCnv   ! weighted radiant & convective         -045br 148
      <QLITE2>    = <QLITE1>            ! history                               -045br 149
      <QLITE1>    = QlitRad                                                     -045br 150
      <QWGTLITE2> = <QWGTLITE1>                                                 -045br 151
      <QWGTLITE1> = Qweight                                                     -045br 152
                                                                                -045br 153
c              Weight task lighting                                             -045br 154
      Qweight = <TASKLITES-V0>*QtskRad + <TASKLITES-V1>*<QTSKL1>                -045br 155
     &                                 + <TASKLITES-V2>*<QTSKL2>                -045br 156
     &        + <TASKLITES-W1>*<QWGTTSKL1>                                      -045br 157
     &        + <TASKLITES-W2>*<QWGTTSKL2>                                      -045br 158
      QTSKL       = Qweight + QtskCnv   ! weighted radiant & convective         -045br 159
      <QTSKL2>    = <QTSKL1>            ! history                               -045br 160
      <QTSKL1>    = QtskRad                                                     -045br 161
      <QWGTTSKL2> = <QWGTTSKL1>                                                 -045br 162
      <QWGTTSKL1> = Qweight                                                     -045br 163
                                                                                -045br 164
c              QSUMW is the sum of all weighted loads                           -045br 165
      QSUMW  = TOTL(QYENI(1),12) + QLITEW + QSOL + QTSKL                        -045br 166
C                                                                               CALOTH 202
C              INFILTRATION CALCULATION - TEMPERATURE DEPENDENT TERMS           -046r    1
C              WILL BE CORRECTED IN SYSTEMS FOR THE ACTUAL SPACE T              -046r    2
      SELECT CASE (INFCOD)                                                      -046r    3
      CASE (0)  ! None                                                          -046r    4
        CFMINF = 0.                                                             -046r    5
      CASE (1)  ! Air change                                                    -046r    6
        CFMINF = <ZCFMWSC> * WNDSPZ                                             -046r    7
c              Include INF-CFM/SQFT with no wind correction                     -046r    8
        CFMINF = CFMINF + <ZCFMSA>                                              -046r    9
      CASE (2)  ! Crack                                                         -046r   10
c              Do not allow exfiltration                                        -046r   11
        CFMINF = Max(0., CFMINF)                                                -046r   12
      CASE (3)  ! Residential                                                   -046r   13
        ACPH   = <INF-COEF-CONS>                                                -046r   14
     &         + <INF-COEF-WNDSPD>*WNDSPZ                                       -046r   15
     &         +  <INF-COEF-DTEMP>*ABS(TZONER-DBTR)                             -046r   16
        CFMINF = ACPH*<ZVOL>*.0166667                                           -046r   17
      CASE (4)  ! Sherman-Grimsrud                                              -046r   18
        WindMPH = WNDSPZ * 1.151   ! mph/knots                                  -046r   19
        CFMINF  = <LEAK-AREA>                                                   -046r   20
     &          * SqRt( <WSCOEF>*<WSCOEF>*WindMPH*WindMPH +                     -046r   21
     &                 <STACKCOEF>*<STACKCOEF>*ABS(TZONER-DBTR) )               -046r   22
      CASE (5)  ! ASHRAE Enhanced                                               -046r   23
c              convert wind from knots to mph, modify by shielding coef         -046r   24
        WindMPH = WNDSPZ * 1.151   ! mph/knots                                  -046r   25
        CFMwind = <FLOW-COEF> * <WIND-COEF>                                     -046r   26
     &                        * WindMPH**(2.0*<PRESSURE-EXP>)                   -046r   27
        CFMdT   = <FLOW-COEF> * <STACK-COEF>                                    -046r   28
     &                        * (ABS(TZONER-DBTR)**<PRESSURE-EXP>)              -046r   29
        CFMINF  = SqRt(CFMwind*CFMwind + CFMdT*CFMdT)                           -046r   30
      END SELECT                                                                -046r   31
C              MULTIPLY CFM BY SCHEDULE                                         CALOTH 233
 3450 IF (<KZINF> .EQ. 0)  GO TO 3470                                           CALOTH 234
      MS     = <@KZINF> + ISCHR                                                 CALOTH 235
      CFMINF = CFMINF*AA(MS)                                                    CALOTH 236
C              CALCULATE SENSIBLE AND LATENT INFILTRATION LOADS                 CALOTH 237
 3470 HRODA  = HUMRAT                                                           CALOTH 238
C**************** SPACE: after function with FNTYPE=2 ******************        CALOTH 239
      IF( <MZFN2> .GT. 0 )   CALL  FINTL( <MZFN2>, 2. )                         CALOTH 240
C***********************************************************************        CALOTH 241
      IF( DBT .GE. 50. )  HRODA = (53.2 + .245*(DBT-50.))*.0001429              CALOTH 242
C              DENSITY OF AIR; ASSUME 74 DEG F, 50% REL HUM                     CALOTH 243
      DENSIN = .00245*PATM                                                      CALOTH 244
      QINFS  = 14.4  * DENSIN * CFMINF * (DBTR-TZONER)                          CALOTH 245
      QINFL  = 63000.* DENSIN * CFMINF * (HUMRAT-HRODA)                         CALOTH 246
 3500 CONTINUE                                                                  CALOTH 247
      QINFL  = AMAX1 ( QINFL, 0. )                                              CALOTH 248
C              SUM ZONE LATENT LOADS                                            CALOTH 249
      QZL    = QPPL + QEQPL + QEQPL2                                            CALOTH 250
C              SUM ZONE SENSIBLE LOADS                                          CALOTH 251
      QZS    = QSUMW + QINFS                                                    CALOTH 252
C              GET TOTAL ZONE LOAD                                              CALOTH 253
      QZTOT  = QZL + QZS                                                        CALOTH 254
C              SAVE TOTAL ZONE LOAD FOR USE NEXT HOUR                           CALOTH 255
      <QZTSAV> = QZTOT                                                          CALOTH 256
      ZCOND = <FC>*ZCOND                                                        CALOTH 257
C              SAVE WEIGHTED AND OTHER VARIABLES IN THE                         CALOTH 258
C              USER REPORT BLOCK BUFFER                                         CALOTH 259
      IF (IBFLAG .EQ. 0) GO TO 3700                                             CALOTH 260
      IPTR   = ISPBFP + 14                                                      CALOTH 261
      DO 3600 I=1,33                                                            CALOTH 262
      AA(IPTR+I) = QYENI(I)                                                     CALOTH 263
 3600 CONTINUE                                                                  CALOTH 264
      AA(IPTR+19) = <QltOtherRad> + <QltOtherCnv>                               -045br 167
 3700 RETURN                                                                    CALOTH 266
      END                                                                       CALOTH 267
      SUBROUTINE  CALWIN                                                        CALWIN   2
C                                                                               CALWIN   3
C              CALCULATE ENERGY FLOW THROUGH WINDOWS                            CALWIN   4
C                                                                               CALWIN   5
C                                                                               CALWIN   6
      COMMON /BLGEO/ sun_el,sun_az,win_el,win_az,                               /BLGEO/  2
     1               bld_el,bld_ar,ibld_ax,bldcov                               VISBL    1
      DIMENSION BLD_EL(5),BLD_AR(5),IBLD_AX(5)                                  /BLGEO/  4
      COMMON  /LOCALD/ STALAT, STALON, ITIMZ, BAZIM, BALTIT,                    /LOCALD/ 2
     1                 SSTALA, CSTALA, TSTALA, SBAZIM, CBAZIM                   /LOCALD/ 3
     2                 ,BXORG, BYORG, SHCOEF, TP1, TP2, WSTP1, WSTP2,           /LOCALD/ 4
     3                 WSHGT,WSHGTL(12),ISREFL,IHOLX                            HOLID1   2
      DIMENSION LOCALD(32)                                                      HOLID1   3
      EQUIVALENCE      (LOCALD(1),STALAT)                                       /LOCALD/ 7
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                         /FILES/  3
     2              , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                    /FILES/  4
     3                IHRREP(3), IHRPAS(2)                                      /FILES/  5
      COMMON /CLCFLG/ IFSTHR,IPRDFL,IGOLGE,NDD,LDSTYP,IFHRP                     DDAY1    1
      COMMON  /CONST/  DTOR, PIOVR2, PIOVR4, IBLNK, UNDEF, IUNDEF,              /CONST/  2
     1                 UNFILD, URAD, DEFIFR, DEFCFR, DEFINC, KWBTU              /CONST/  3
      REAL             KWBTU                                                    /CONST/  4
          COMMON /DOORV/  FILMUD, DRGOLG,SOLID, TSOLD, QD,CFMD,DDIF             /DOORV/  2
      DIMENSION DRV(6)                                                          /DOORV/  3
      EQUIVALENCE (DRV(1),FILMUD)                                               /DOORV/  4
      COMMON  /HRREP / Irb, Ihrp, Lrb, Lhrp, Nrb, Nhrp, IVTLIM(3,50),           HRr      1
     &                 IGRPtr, IBRPtr, IRSch, IRSchT(5),                        HRr      2
     &                 NHRTyp(3), ITBUF(3), ITBUFB(3), ITBUFE(3),               HRr      3
     &                 IHREOF, ICDFLG                                           HRr      4
      COMMON  /INFPAR/ PTWV,DUMG(8),PSE                                         /INFPAR/ 2
      COMMON  /LENS/   MWFLEN, MRLEN, MSHLEN, MWNLEN, MDRLEN, MXLEN,            /LENS/   2
     1                 MULEN, MZLEN, MIWLEN, MFLLEN,                            HRr      5
     2                 LMTB, LLDSOU, MSTLEN, LSTFT, MWLLEN                      BLIND    1
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     BLIND    2
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        FLOOR1   3
      COMMON  /REPORT/ IREPRT(4,37),IPRG,IUNIQV(100),IUNIQS(100),IUNIQL         BIGNAM   1
      COMMON  /SUND/   ISUNUP, GUNDOG, HORANG, TDECLN, EQTIME, SOLCON,          /SUND/   2
     1                 ATMEXT, SKYDFF, RAYCOS(3), RDN,                          /SUND/   3
     2                 BSUN, DECLN, CD, SD, FSUNUP                              /SUND/   4
      COMMON /TIME  / IDOY, IDOW, IDSTF, ISCHR, ISCDAY, iDSdates(6),            -044e5r  1
     1                IMO, IDAY, IYR, IHR, CLOCK(10), IDSFLG,                   HOLID1   4
     2                MONDSC(12), MONLEN(12), MONSDA(12), IEODMR                /TIME/   4
      COMMON  /TWVHR/  QSWALL,QSGIN,QSGOUT,WCS                                  /TWHR/   2
      COMMON  /WALLV/  SOLI,XGOLGE,FILMU,PCO,Q,T,CFM,C2,C3,                     /WALLV/  2
     1                 SUMXDT,SUMYDT,DT,XSXCMP,XSQCMP,ETA,                      /WALLV/  3
     2                 BG,RDIR,RDIF,RTOT,FFS,FFG,SOLDF1,SOLDF2,                 /WALLV/  4
     3                 SOLDF3,SOLDF4,SOLDF5,FFS0,FFG0,QIREW,MWDIR,              -044d5   1
     4                 ANGINCD                                                  -044d5   2
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
      COMMON  /WINV/   UW,TDIR,ADIRO,TDIF,ADIFO,ADIRI,ADIFI,FI,FO,              /WINV/   2
     1                 AGOLGE,QDIR,QDIF,QTRANS,QABS,QSOLG,GSHACO,               /WINV/   3
     2                 QCON,CFMW,SHMULT,SOLGMX,UWW,CWIN(4),CSUM(4),             /WINV/   4
     3                 ANWIN(4),ANSUM(4),QIRWI                                  VISBL    7
      COMMON  /ZNEWHR/ TZONER, INFCOD,                                          /ZNEWHR/ 2
     1                 QWALQ, QCELQ, QWINC, QWALD, QCELD,QINTW,                 /ZNEWHR/ 3
     2                 QUGF, QUGW, QDOOR, QEQPS, QEQPS2, QPPS,                  /ZNEWHR/ 4
     3                 QPPL, QEQPL, QEQPL2, QINFL,                              /ZNEWHR/ 5
     4                 QTSKL, QSOL, QPLENM, QLITE, QLITEW, QINFS,               /ZNEWHR/ 6
     5                 QELECT, CFMINF, QSUMW, ZCOND, QZS, QZL, QZTOT,           /ZNEWHR/ 7
     6                 QZLTEL,QZEQEL,QZGAS,QZHW,WNDSPZ,MANAGE                   /ZNEWHR/ 8
     7               , QZPEL, QZTLEL                                            /ZNEWHR/ 9
      DIMENSION QYENI(33)                                                       /ZNEWHR/10
      EQUIVALENCE  (QYENI(1), QWALQ)                                            /ZNEWHR/11
      COMMON        // AA(75 000 000)                                           -048ar   1
      INTEGER          IA(75 000 000)                                           -048ar   2
      EQUIVALENCE  (IA(1), AA(1))                                               //       4
C                                                                               CALWIN  25
      DIMENSION WALLV(19)                                                       CALWIN  26
      EQUIVALENCE (WALLV(1),SOLI)                                               CALWIN  27
      DIMENSION WINV(21)                                                        CALWIN  28
      EQUIVALENCE (WINV(1),UW)                                                  CALWIN  29
      dimension tir(10), rir(10), eir(10)                                       CALWIN  30
      dimension gap(5), gcon(5,2), gvis(5,2), gden(5,2), gpr(5,2)               CALWIN  31
      dimension scon(5), sol(5)                                                 CALWIN  32
      dimension theta(5), rgap(5), rs(5), thetas(10)                            CALWIN  33
      COMMON /WCTRL/  IwinReturn, Imsgflg                                       /WCTRL/  2
c              For DLLs, delete Win_MB and enable msgbox.fi                     /WCTRL/  3
#ifndef _DLL                                                                 /* -051     1 */ 
      COMMON /WIN_MB/ MB_OK,MB_ICONSTOP,MB_ICONEXCLAMATION,MB_TASKMODAL,        -051     2
     &                MB_ICONINFORMATION                                        -051     3
#else                                                                        /* -051     4 */ 
      include 'msgbox.fi'                                                       -051     5
#endif                                                                       /* -051     6 */ 
C             function giving sol trans or sol abs or vis trans vs              CALWIN  34
C             cos of incidence angle                                            CALWIN  35
C             for window-4 glazing (glass-type-code.gt.11)                      CALWIN  36
C                                                                               CALWIN  38
C              CHECK FOR WINDOWS                                                CALWIN  39
      NW     = <NWIN>                                                           CALWIN  40
      IF (NW .EQ. 0)  RETURN                                                    CALWIN  41
C             set up some window-4 therm subr. values that are not              CALWIN  42
C             dependent on specific windows                                     CALWIN  43
        to = dbtr/1.8                                                           CALWIN  44
C             inside air temp (K) corresponding to 70F                          CALWIN  45
        ti = 294.27                                                             CALWIN  46
C             prevent indefinite result in therm if to too close to ti          CALWIN  47
        if(abs(to-ti).lt.0.05) to = to + 0.1                                    CALWIN  48
        ws = wndspd*0.514444                                                    CALWIN  49
      if(IREPRT(1,35).ne.0.and.IREPRT(1,8).ne.0)                                IREPRT  48
     .  write(ioutpt,99100) imo,iday,ihr,to,ti,ws                               CALWIN  51
99100 format(' CALWIN:mdh,to,ti,ws=',3i3,3f10.3)                                CALWIN  52
      IEWTYP = <IEWTYPE>                                                        CALWIN  53
      MWI    = <MXWIN>                                                          CALWIN  54
C                                                                               BLIND2   9
C              WINDOW LOOP                                                      BLIND2  10
C                                                                               BLIND2  11
      DO 1000 IW=1,NW                                                           CALWIN  55
      MR     = <MWIPRP>                                                         CALWIN  56
C              IW3LIB = 1 IF WINDOW IS FROM LIBRARY OR LAYER TYPE               BLIND3   4
C              IW3LIB = 2 IF WINDOW HAS SHADING COEF IS UNGLAZED                BLIND2  13
      iw3lib = 0                                                                CALWIN  58
C              GLASS TYPE: -1 = SHADING COEF SPECIFIED                          WLIB1    4
C                           0 = UNGLAZED OPENING                                WLIB1    5
C                           1-5 = NO. OF SOLID LAYERS IF FROM                   BLIND2  14
C                                 WINDOW LIBRARY OR LAYER TYPE                  BLIND3   5
      if(<IGTYP>.GE.1) iw3lib = 1                                               WLIB1    7
      ATXSM = <GMULT> * <XSMULT>                                                CALWIN  60
      <SHDG-FLG-LST-HR> = <SHADING-FLAG>                                        CALWIN  61
C              ZERO WINDOW VARIABLES                                            CALWIN  65
      DO 10 I=1,20                                                              CALWIN  66
      WINV(I) = 0.0                                                             CALWIN  67
   10 CONTINUE                                                                  CALWIN  68
C            SKY AND GROUND FORM FACTORS FOR IR LOSS CALC                       CALWIN  69
      WFFSIR = <WISKYFF>*0.5*(1.+<CXSTLT>)                                      VISBL  129
      WFFGIR=1.-WFFSIR                                                          CALWIN  72
C             EXTERIOR IR LOSS CORRECTION TERM                                  BLIND2  16
      if (iw3lib .gt. 0) then                                                   CALWIN  78
        IL = 1                                                                  CALWIN  79
        DBTR2 = DBTR*DBTR                                                       CALWIN  80
C              The following IR correction factor is based on the               CALWIN  81
C              formulation in TARP (TARP Ref. Man. p. 73, Mar 1983)             CALWIN  82
        QIRWI = <EMISFIR>*0.1714E-8*(DBTR2*DBTR2)*                              CALWIN  83
     1          (1.-WFFSIR*(1.-COS(0.5*ABS(<XSTLT>))*(1.-ESKY))-WFFGIR)         -030    14
      else                                                                      CALWIN  85
        DBTR2 = DBTR*DBTR                                                       CALWIN  86
        QIRWI = <OUTSIDE-EMISS>*0.1714E-8*(DBTR2*DBTR2)*                        CALWIN  87
     1          (1.-WFFSIR*(1.-COS(0.5*ABS(<XSTLT>))*(1.-ESKY))-WFFGIR)         -030    15
      endif                                                                     CALWIN  89
      if(IREPRT(1,35).ne.0.and.IREPRT(1,8).ne.0)                                IREPRT  49
     . write(ioutpt,99710) qirwi,esky,<XSTLT>,wffsir,wffgir                     CALWIN  91
99710 format(' CALWIN:qirwi,esky,xstlt,wffsir,wffgir=',5f10.3)                  CALWIN  92
C            INITIALIZE TWO QUANTITIES USED SUBR IWSOL TO ACCUMULATE            CALWIN  93
C            DIRECT RAD FROM THIS WIN WHICH IS INCIDENT ON AND REFLECTED        CALWIN  94
C            FROM COMMON WALLS IN A SUNSPACE                                    CALWIN  95
      <EICWDRWN> = 0.                                                           CALWIN  96
      <ERCWDRWN> = 0.                                                           CALWIN  97
C**************** window: WINDOW-SPEC-FN with FNTYPE=3 *****************        CALWIN  98
      IF( <MWISPFN> .GT. 0 )   CALL  FINTL( <MWISPFN>, 3. )                     CALWIN  99
C***********************************************************************        CALWIN 100
C --  incident solar for all window types                                       CALWIN 101
      IF (ISUNUP .EQ. 0)  then                                                  CALWIN 102
        qdir = 0.                                                               CALWIN 103
        qdif = 0.                                                               CALWIN 104
      else                                                                      CALWIN 105
C              FRACTION OF WINDOW THAT IS SHADED                                VISBL  130
        JJ = IHR                                                                VISBL  131
        AGOLGE = <WGOLGE>                                                       VISBL  132
C              DIRECT AND DIFFUSE RADIATION ON WINDOW (AFTER SHADING)           VISBL  133
        QDIR = <DIRWISH>                                                        VISBL  134
        QDIF = <DIFWISH>                                                        VISBL  135
      endif                                                                     CALWIN 129
C     Set ROratio to the Surface-2-RoughOpening Ratio if specified              -044d5  88
       ROratio = 1.0                                                            -044d5  89
       IF (<SURFACE-RO-RATIO>.GT.0.) ROratio=<SURFACE-RO-RATIO>                 -044d5  90
C   Determine increase in outer pane absorptivity based on the dirt             -044d5  91
C    depreciation schedule value                                                -044d5  92
      if(iw3lib.gt.0) then                                                      -044d5  93
        TDIRN= Get_WinLib_TSOL(ETA,0)                                           -044d5d  5
        TDifN = <TRHEMIS>                                                       -044d5 103
      else                                                                      -044d5 104
       TDirN = Get_WinSC_TSOL(ETA,0)                                            -044d5d  6
        TDifN   = <CAM9>                                                        -044d5 107
      endif                                                                     -044d5 108
      DDep    = AA(<@DIRT-DEPREC-SCH> + ISCHR)  !dirt depreciation              -044d5 109
      aDirAdd = TdirN * (1 - DDep)      !increased direct  absorp due to dirt   -044d5 110
      aDifAdd = TdifN * (1 - DDep)      !increased diffuse absorp due to dirt   -044d5 111
C                                                                               -044d5 112
      if(iw3lib.gt.0) go to 60                                                  CALWIN 131
C                                                                               BLIND2  19
C             ===WINDOW WITH SHADING COEFFICIENT===                             BLIND2  20
C                                                                               BLIND2  21
C              AIR GAP RESISTANCE                                               CALWIN 132
      RA     = 0.0                                                              CALWIN 133
C              PREVIOUS HOUR OUTSIDE GLASS TEMPERATURE (R)                      CALWIN 134
      TPRGR = <TSWINR>                                                          CALWIN 135
C              IF FIRST HOUR OF RUN PERIOD                                      CALWIN 136
      IF(IFHRP.EQ.1) TPRGR = DBTR                                               CALWIN 137
C              OUTSIDE FILM RESISTANCE (LBL MOWITT CORRELATION)                 CALWIN 138
      CALL FILM2(TPRGR,DBTR,<XSTLT>,<OUTSIDE-EMISS>,6,WNDSPZ,                   CALWIN 139
     1              MWDIR,HCOUT,HROUT)                                          CALWIN 140
      RO = 1./(HCOUT + HROUT)                                                   CALWIN 141
C              CONDUCTANCE, EXCLUDING OUTSIDE AIR FILM BUT INCLUDING            CALWIN 142
C              INSIDE AIR FILM                                                  CALWIN 143
      UW     = <GCON>                                                           CALWIN 144
      IF ((IEWTYP .EQ. 3) .OR. (IEWTYP .EQ. 4))  WCS = 1.0                      CALWIN 171
      IF (<KGCON> .EQ. 0)  GO TO 30                                             CALWIN 172
C              MULTIPLY BY CONDUCTANCE SCHEDULE VALUE UNLESS                    CALWIN 173
C              WINDOW SHADE IS OPEN                                             CALWIN 174
      MS     = <@KGCON> + ISCHR                                                 CALWIN 175
      IF ((IEWTYP .EQ. 3) .OR. (IEWTYP .EQ. 4))  WCS = AA(MS)                   CALWIN 176
      IF(<SHADING-FLAG>.LE.1) GO TO 30                                          CALWIN 177
      UW     = UW*AA(MS)                                                        CALWIN 178
   30 UWI    = 1./AMAX1(UW,.000001)                                             CALWIN 179
C              WINDOW U-VALUE INCLUDING OUTSIDE AIR FILM                        -044d5 113
C               and Adjusted for Surface-Area-Ratio                             -044d5 114
      UW     = ROratio/(RO + UWI)                                               -044d5 115
C              WINDOW R-VALUE EXCLUDING BOTH FILM RESISTANCES                   -044d5 116
C               and Adjusted for Surface-Area-Ratio                             -044d5 117
      RBARE  = (UWI - .66) / ROratio                                            -044d5 118
      go to 95                                                                  CALWIN 200
   60 continue                                                                  CALWIN 201
C                                                                               BLIND2  22
C             ===WINDOW FROM LIBRARY OR LAYER TYPE===                           BLIND3   6
C                                                                               BLIND2  24
C --- set up inputs for calls to therm, w3uval                                  CALWIN 202
C              Use absolute value of TILT for THERM calculations                -030    16
      tilt = ABS(<XSTLT>*57.29578)                                              -030    17
C --  layer properties                                                          CALWIN 204
      nlayer = <NLAYER>                                                         CALWIN 205
      do ii = 1,nlayer                                                          CALWIN 206
        IL = ii                                                                 CALWIN 207
        gap(ii) = <GPTHCK>/1000.                                                CALWIN 208
        tir(2*ii) = 1.                                                          CALWIN 209
        tir(2*ii-1) = <W3TIR>                                                   CALWIN 210
        eir(2*ii) = <EMISBIR>                                                   CALWIN 211
        eir(2*ii-1) = <EMISFIR>                                                 CALWIN 212
C --  if switchable glazing interpolate switched and unswitched                 CALWIN 213
      if(<SWFAC>.lt.1.0) then                                                   CALWIN 214
        mr = <MWIPRPSW>                                                         CALWIN 215
        tir(2*ii-1) = <SWFAC>*tir(2*ii-1) + (1.-<SWFAC>)*<W3TIR>                CALWIN 216
        eir(2*ii)   = <SWFAC>*eir(2*ii) + (1.-<SWFAC>)*<EMISBIR>                CALWIN 217
        eir(2*ii-1) = <SWFAC>*eir(2*ii-1) + (1.-<SWFAC>)*<EMISFIR>              CALWIN 218
        mr = <MWIPRP>                                                           CALWIN 219
      endif                                                                     CALWIN 220
        rir(2*ii) = 1. - tir(2*ii-1) - eir(2*ii)                                CALWIN 221
        rir(2*ii-1) = 1. - tir(2*ii-1) - eir(2*ii-1)                            CALWIN 222
        gcon(ii,1) = <GPCOND>                                                   CALWIN 223
        gcon(ii,2) = <GPDCOND>*1.e-5                                            CALWIN 224
        gvis(ii,1) = <GPVIS>*1.e-5                                              CALWIN 225
        gvis(ii,2) = <GPDVIS>*1.e-8                                             CALWIN 226
        gden(ii,1) = <GPDDENS>                                                  CALWIN 227
        gden(ii,2) = <GPDDENS>                                                  CALWIN 228
        gpr(ii,1) = <GPPR>                                                      CALWIN 229
        gpr(ii,2) = <GPDPR>                                                     CALWIN 230
        scon(ii) = <COND>                                                       CALWIN 231
C                                                                               CALWIN 232
      if(IREPRT(1,35).ne.0.and.IREPRT(1,8).ne.0)                                IREPRT  51
     .  write(ioutpt,7000) imo,iday,ihr,<IGTYP>,nlayer,IL,                      CALWIN 234
     .    <GPTHCK>,tir(2*ii-1),eir(2*ii),                                       CALWIN 235
     .    <GPCOND>,<COND>                                                       CALWIN 236
 7000   format(' CALWIN:mdh,igtyp,nlayer,il,gpthck,w3tir,emisbir,gpcond,        CALWIN 237
     .cond=',/,3i3,i5,2i2,5f10.3)                                               CALWIN 238
C                                                                               CALWIN 239
        if (isunup.eq.0) then                                                   CALWIN 240
          sol(ii) = 0.                                                          CALWIN 241
        else                                                                    CALWIN 242
          asol = <ABSHEMIS>                                                     CALWIN 243
          IS = 1                                                                -044d5 119
          IF(<MWISTC>.NE.0) THEN                                                -044d5 120
            abeta = <ABSANG1>                                                   -044d5 121
          ELSE                                                                  -044d5 122
            abeta = Get_WinLib_ABS(eta,II)                                      -044e3   1
          ENDIF                                                                 -044d5 132
C --  if switchable glazing interpolate switched and unswitched                 CALWIN 245
           if(<SWFAC>.lt.1.0) then                                              CALWIN 246
             mr = <MWIPRPSW>                                                    CALWIN 247
             asol = <SWFAC>*asol + (1.-<SWFAC>)*<ABSHEMIS>                      CALWIN 248
             I= 1                                                               -044d5 133
             IF(<MWISTC>.NE.0) THEN                                             -044d5 134
               abetsw = <ABSANG1>                                               -044d5 135
             ELSE                                                               -044d5 136
               abetsw = Get_WinLib_ABS(eta,II)                                  -044e3   2
             ENDIF                                                              -044d5 146
             abeta = <SWFAC>*abeta + (1.-<SWFAC>)*abetsw                        CALWIN 250
             mr = <MWIPRP>                                                      CALWIN 251
           endif                                                                CALWIN 252
          asol = asol + aDifAdd                                                 -044d5 147
          abeta = abeta + aDirAdd                                               -044d5 148
          sol(ii) = 3.152481*(asol*qdif + abeta*qdir)                           CALWIN 253
      endif                                                                     CALWIN 254
      enddo                                                                     CALWIN 255
C                                                                               CALWIN 256
      call therm(nlayer,tilt,mwdir,to,ti,ws,gap,tir,rir,                        CALWIN 257
     .           eir,gcon,gvis,gden,gpr,scon,sol,                               CALWIN 258
     .           theta,flux,rgap,rs,thetas)                                     CALWIN 259
      IF( IwinReturn .ne. 0 ) RETURN                                            -042L4  16
      call uvalw3(rs,nlayer,unofrm,rto)                                         VISBL  136
C                                                                               BLIND   37
      DO IG=1,5                                                                 BLIND   38
         <GLAZTEMP>=theta(IG)                                                   BLIND   39
      END DO                                                                    BLIND   40
      wwid = <WWI>*304.8                                                        CALWIN 261
      white = <HWI>*304.8                                                       CALWIN 262
C              u-value corrected for edge of glass effects                      CALWIN 263
      uig = unofrm                                                              CALWIN 264
      if((nlayer-<NLAYBLD>).ge.2)                                               VISBL  137
     .call edge(unofrm,wwid,white,<SPACER-TYPE-CODE>,uig)                       BLFR     5
C              outside air film resistance (IP units)                           CALWIN 268
      ro = 5.67826*rgap(1)                                                      CALWIN 269
C              u-value without outside film (IP units)                          CALWIN 270
      uw = 1./(5.67826*(1./uig-rgap(1)))                                        CALWIN 271
      if(iewtyp.eq.3.or.iewtyp.eq.4) wcs=1.0                                    CALWIN 272
      if(<KGCON>.eq.0) go to 39                                                 CALWIN 273
C              multiply by conductance sch val unless shade                     CALWIN 274
C              is open                                                          CALWIN 275
      ms = <@KGCON> + ischr                                                     CALWIN 276
      if(iewtyp.eq.3.or.iewtyp.eq.4) wcs=aa(ms)                                 CALWIN 277
      if(<SHADING-FLAG>.le.1) go to 39                                          CALWIN 278
      uw = uw*aa(ms)                                                            CALWIN 279
   39 uwi = 1./amax1(uw,0.000001)                                               CALWIN 280
C              u-value including outside film                                   -044d5 149
C               and Adjusted for Surface-Area-Ratio                             -044d5 150
      uw = ROratio/(5.67826*rgap(1) + uwi)                                      -044d5 151
C              resistance excluding inside and outside film                     -044d5 152
C               and Adjusted for Surface-Area-Ratio                             -044d5 153
      rbare = (uwi - 5.67826*rgap(nlayer+1)) / ROratio                          -044d5 154
   95 continue                                                                  CALWIN 285
      UWW    = 1./AMAX1(.01,RBARE)                                              CALWIN 286
      if (iw3lib .gt. 0) then                                                   CALWIN 287
        gshaco = 1.                                                             CALWIN 288
      else                                                                      CALWIN 289
        GSHACO = <GSHACO-SEL>                                                   CALWIN 290
      endif                                                                     CALWIN 291
C**************** WINDOW:  before function *****************************        CALWIN 292
      IF( <MWIFN1> .GT. 0 )   CALL  FINTL( <MWIFN1>, 0. )                       CALWIN 293
C***********************************************************************        CALWIN 294
C              SKIP ZONE CONDUCTANCE CALCULATION FOR TROMBE WALLS               CALWIN 295
      IF (IEWTYP .GE. 3)  GO TO 100                                             CALWIN 296
      ZCOND  = ZCOND + UW*<WIAREA>*<GMULT>*<XSMULT>                             CALWIN 297
  100 CONTINUE                                                                  CALWIN 298
C              IF NO SUN, SKIP CALCULATION OF SOLAR LOAD                        CALWIN 299
      IF (ISUNUP .EQ. 0)  GO TO 600                                             CALWIN 300
      if (iw3lib .gt. 0) go to 310                                              CALWIN 301
C                                                                               BLIND2  29
C             ===WINDOW WITH SHADING COEFFICIENT===                             BLIND2  30
C                                                                               BLIND2  31
C              CALCULATE DIRECT SOLAR TRANSMISSION COEFF                        CALWIN 302
C              ETA IS THE COSINE OF THE INCIDENCE ANGLE (ETA = 1 FOR            CALWIN 303
C              NORMAL INCIDENCE)                                                CALWIN 304
        TDIR = Get_WinSC_TSOL(ETA,0)                                            -044d5d  9
      TDIR   = TDIR * DDep                      !account for dirt depreciation  -044d5 161
C            STORE TDIR FOR USE IN SUBR. IWSOL                                  CALWIN 307
      <TDIR> = TDIR                                                             CALWIN 308
C              CALCULATE ABSORPTION COEFF FOR DIRECT SOLAR                      WLIB1    9
C              ABSORPTION IS PARAMETRIZED AS   A + B*ETA + C/(D + ETA)          WLIB1   10
      ADIRO =                                                                   WLIB1   11
     1   AMAX1(0., <CAM5> + ETA*<CAM6> + <CAM7>/(ETA + <CAM8> +1.E-9) )         CALWIN 318
      ADIRO = ADIRO + AdirAdd                   !account for dirt depreciation  -044d5 162
C              GET DIFFUSE SOLAR TRANSMISSION COEFF                             CALWIN 321
      TDIF   = <CAM9>                                                           CALWIN 322
      ADIFO = ADIFO + AdifAdd                   !account for dirt depreciation  -044d5 163
C              DIFFUSE SOLAR ABSORPTION COEFF                                   WLIB1   12
      ADIFO  = <CAM10>                                                          CALWIN 325
      TDIF   = TDIF * DDep                      !account for dirt depreciation  -044d5 164
C              INWARD FLOWING FRACTION OF ABSORBED RADIATION                    WLIB1   13
      FO     = RO*UW                                                            CALWIN 350
      go to 350                                                                 CALWIN 351
  310 continue                                                                  CALWIN 352
C                                                                               BLIND2  32
C             ===WINDOW FROM LIBRARY OR LAYER TYPE===                           BLIND3   7
C                                                                               BLIND2  34
C --  transmission coeffs                                                       CALWIN 354
      tdif = <TRHEMIS>                                                          CALWIN 355
      TDIF   = TDIF * DDep                      !account for dirt depreciation  -044d5 165
       TDIR = Get_WinLib_TSOL(ETA,0)                                            -044d5d 10
      TDIR   = TDIR * DDep                      !account for dirt depreciation  -044d5 179
          IS = 1                                                                BLIND2  35
          IF(<MWISTC>.NE.0) TDIR = <TRANG1>                                     BLIND2  36
C --  to avoid confusion in the window hourly report,                           CALWIN 357
C --  set tdir to zero when sun is in back of window,                           CALWIN 358
C --  since fit4 can give positive result in this case.                         CALWIN 359
      if(eta.lt.0.) tdir = 0.                                                   CALWIN 360
C --  if switchable glazing, interpolate switched and unswitched                CALWIN 361
      if(<SWFAC>.lt.1.0) then                                                   CALWIN 362
        mr = <MWIPRPSW>                                                         CALWIN 363
        tdif = <SWFAC>*tdif + (1.-<SWFAC>)*<TRHEMIS>                            CALWIN 364
         tdirsw = Get_WinLib_TSOL(ETA,0)                                        -044d5d 11
        tdirsw = tdirsw * DDep                  !account for dirt depreciation  -044d5 193
          IS = 1                                                                BLIND2  37
          IF(<MWISTC>.NE.0) tdirsw = <TRANG1>                                   BLIND2  38
        tdir = <SWFAC>*tdir + (1.-<SWFAC>)*tdirsw                               CALWIN 366
        mr = <MWIPRP>                                                           CALWIN 367
      endif                                                                     CALWIN 368
C              store tdir for use in subr. iwsol                                CALWIN 369
      <TDIR> = tdir                                                             CALWIN 370
C                                                                               CALWIN 371
      if(IREPRT(1,35).ne.0.and.IREPRT(1,8).ne.0)                                IREPRT  52
     . write(ioutpt,7001) <TRANG1>,<TRFIT1>,<TRFIT2>,eta,tdif,tdir              CALWIN 373
 7001 format(' calwin: trang1,trfit1,trfit2,eta,tdif,tdir=',6f10.3)             CALWIN 374
C                                                                               CALWIN 375
C --  absorption coeffs - total: adif/adir; inward-flow fraction: fadif/fadir   CALWIN 376
      fn = 0.                                                                   CALWIN 377
      adif = 0.                                                                 CALWIN 378
      adir = 0.                                                                 CALWIN 379
      fadif = 0.                                                                CALWIN 380
      fadir = 0.                                                                CALWIN 381
      do ii = 1,nlayer                                                          CALWIN 382
        IL = ii                                                                 CALWIN 383
        asol = <ABSHEMIS>                                                       CALWIN 384
        IS = 1                                                                  -044d5 194
        IF(<MWISTC>.NE.0) THEN                                                  -044d5 195
          abeta = <ABSANG1>                                                     -044d5 196
        ELSE                                                                    -044d5 197
          abeta = Get_WinLib_ABS(eta,II)                                        -044e3   3
        ENDIF                                                                   -044d5 207
C              interpolate if switching in effect                               CALWIN 386
           if(<SWFAC>.lt.1.0) then                                              CALWIN 387
             mr = <MWIPRPSW>                                                    CALWIN 388
             asol = <SWFAC>*asol + (1.-<SWFAC>)*<ABSHEMIS>                      CALWIN 389
             I= 1                                                               -044d5 208
             IF(<MWISTC>.NE.0) THEN                                             -044d5 209
               abetsw = <ABSANG1>                                               -044d5 210
             ELSE                                                               -044d5 211
               abetsw = Get_WinLib_ABS(eta,II)                                  -044e3   4
             ENDIF                                                              -044d5 221
             abeta = <SWFAC>*abeta + (1.-<SWFAC>)*abetsw                        CALWIN 391
             mr = <MWIPRP>                                                      CALWIN 392
           endif                                                                CALWIN 393
        If (ii.EQ.1) Then                       !account for dirt depreciation  -044d5 222
         asol  = asol  + AdifAdd                                                -044d5 223
         abeta = abeta + AdirAdd                                                -044d5 224
        Endif                                                                   -044d5 225
        adif = adif + asol                                                      CALWIN 394
        adir = adir + abeta                                                     CALWIN 395
        fn = fn + (rgap(ii)/rto)*(uw*5.67826)/uig                               VISBL  138
        fadif = fadif + fn*asol                                                 CALWIN 397
        fadir = fadir + fn*abeta                                                CALWIN 398
C              adiro, etc., for window hourly report                            CALWIN 399
        if(ii.eq.1) then                                                        CALWIN 400
          ADIRO = abeta                                                         CALWIN 401
          ADIFO = asol                                                          CALWIN 402
          FO = fn                                                               CALWIN 403
        endif                                                                   CALWIN 404
        if(ii.eq.2) then                                                        CALWIN 405
          ADIRI = abeta                                                         CALWIN 406
          ADIFI = asol                                                          CALWIN 407
          FI = fn                                                               CALWIN 408
        endif                                                                   CALWIN 409
C                                                                               CALWIN 410
      if(IREPRT(1,35).ne.0.and.IREPRT(1,8).ne.0)                                IREPRT  53
     . write (ioutpt,99350) ii,<SWFAC>,asol,abeta,adif,adir,                    CALWIN 412
     . rgap(ii),rto,fn,fadif,fadir,uw,uig                                       VISBL  139
99350 format(' swf,asol,abeta,adif,adir,rgap,rto,fn,fadf,fadr,uw,uig='          VISBL  140
     . /,1x,i3,12f10.3)                                                         CALWIN 415
C                                                                               CALWIN 416
      enddo                                                                     CALWIN 417
  350 continue                                                                  CALWIN 418
C                                                                               CALWIN 419
C              ADJUST REFLECTION FACTORS ON FIRST DAY OF MONTH IF REQUESTED     CALWIN 420
      WIFFG = FFG0*<WIGNDFF>                                                    VISBL2   2
C===  WIFFG = 1.0 - <WISKYFF>*0.5*(1.+<CXSTLT>) <== use if <WIGNDFF> bad        VISBL2   3
      IF(IGOLGE.NE.0.AND.ISREFL.EQ.2) THEN                                      CALWIN 421
C              TRANSMISSION                                                     CALWIN 422
        TGSUND = (1.-AGOLGE)*AMAX1(0.,ETA)*TDIR/RAYCOS(3) +                     CALWIN 423
     1           WIFFG*<GNDREF>*TDIF                                            CALWIN 424
        <RF-TGSUN> = <RF-TGSUN> - TGSUND                                        CALWIN 425
C              ABSORPTION                                                       CALWIN 426
        IF(IW3LIB.GT.0) THEN                                                    CALWIN 427
          DO II=1,NLAYER                                                        CALWIN 428
            IL=II                                                               CALWIN 429
            ASOL = <ABSHEMIS>                                                   CALWIN 430
            IS = 1                                                              -044d5 226
            IF(<MWISTC>.NE.0) THEN                                              -044d5 227
              ABETA = <ABSANG1>                                                 -044d5 228
            ELSE                                                                -044d5 229
              ABETA = Get_WinLib_ABS(eta,II)                                    -044e3   5
            ENDIF                                                               -044d5 239
            If (II.EQ.1) Then                   !account for dirt depreciation  -044d5 240
             asol  = asol  + AdifAdd                                            -044d5 241
             abeta = abeta + AdirAdd                                            -044d5 242
            Endif                                                               -044d5 243
            AGSUND = (1.-AGOLGE)*AMAX1(0.,ETA)*ABETA/RAYCOS(3) +                CALWIN 432
     1               WIFFG*<GNDREF>*ASOL                                        CALWIN 433
            IF(II.EQ.1) THEN                                                    CALWIN 434
              <RF-AGSUN1> = <RF-AGSUN1> - AGSUND                                CALWIN 435
            ELSE IF(II.EQ.2) THEN                                               CALWIN 436
              <RF-AGSUN2> = <RF-AGSUN2> - AGSUND                                CALWIN 437
            ELSE IF(II.EQ.3) THEN                                               CALWIN 438
              <RF-AGSUN3> = <RF-AGSUN3> - AGSUND                                CALWIN 439
            ELSE IF(II.EQ.4) THEN                                               CALWIN 440
              <RF-AGSUN4> = <RF-AGSUN4> - AGSUND                                CALWIN 441
            ELSE IF(II.EQ.5) THEN                                               CALWIN 442
              <RF-AGSUN5> = <RF-AGSUN5> - AGSUND                                CALWIN 443
            ENDIF                                                               CALWIN 444
          ENDDO                                                                 CALWIN 445
        ENDIF                                                                   CALWIN 446
C                                                                               CALWIN 447
        IF(IW3LIB.EQ.0) THEN                                                    CALWIN 448
          AGSUND = (1.-AGOLGE)*AMAX1(0.,ETA)*ADIRO/RAYCOS(3) +                  CALWIN 449
     1             WIFFG*<GNDREF>*ADIFO                                         CALWIN 450
          <RF-AGSUN1> = <RF-AGSUN1> - AGSUND                                    CALWIN 451
        ENDIF                                                                   CALWIN 457
      ENDIF                                                                     CALWIN 458
C                                                                               CALWIN 459
      WIFFSW = 0.5*(1.+<CXSTLT>)*ABS(<WISKYFF>)                                 CALWIN 460
      WSGWG  = WIFFSW + <GNDREF>*WIFFG                                          CALWIN 461
C              CALCULATE HEAT THROUGH WINDOW PER SQUARE FOOT OF                 CALWIN 462
C              WINDOW DUE TO RADIATION TRANSMISSION                             CALWIN 463
      QTRANS = QDIF*TDIF + QDIR*TDIR                                            CALWIN 464
C              ADD REFLECTED SOLAR IF ISREFL = 1 OR 2                           CALWIN 465
      IF(ISREFL.EQ.1) THEN                                                      CALWIN 466
        QTRANS = RDNCC*RAYCOS(3)*<RF-TGSUN> + BSCC*<RF-TGSKY>                   CALWIN 467
      ELSE IF(ISREFL.EQ.2) THEN                                                 CALWIN 468
        TGSKYD = TDIF*WSGWG                                                     CALWIN 469
        QTRANS = QTRANS + RDNCC*RAYCOS(3)*<RF-TGSUN> +                          CALWIN 470
     1                  BSCC*(<RF-TGSKY>-TGSKYD)                                CALWIN 471
      ENDIF                                                                     CALWIN 472
        IF(IREPRT(1,35).NE.0.AND.IREPRT(1,10).NE.0)                             IREPRT  54
     1    WRITE(IOUTPT,9333) (<IWINM>,II=1,4),ISREFL,                           CALWIN 474
     1    QTRANS,RDNCC,RAYCOS(3),<RF-TGSUN>,                                    CALWIN 475
     2    BSCC,<RF-TGSKY>                                                       CALWIN 476
 9333 FORMAT(                                                                   CALWIN 477
     1' SLR-CALWIN ISREFL,QTRANS,RDNCC,RAYCOS,RF-TGSUN,BSCC,RF-TGSKY'/          CALWIN 478
     2  1X,4A4,I3,6F10.3)                                                       CALWIN 479
C              CALCULATE HEAT THROUGH WINDOW PER SQ FT DUE                      CALWIN 480
C              TO RADIATION ABSORBED ON THE WINDOW AND THEN                     CALWIN 481
C              ENTERING BY CONDUCTION                                           CALWIN 482
      if (iw3lib .gt. 0) then                                                   CALWIN 483
        qabs   = QDIF*fadif + QDIR*fadir                                        CALWIN 484
C              ADD REFLECTED SOLAR IF ISREFL = 1 OR 2                           CALWIN 485
      IF(ISREFL.EQ.1.OR.ISREFL.EQ.2) THEN                                       CALWIN 486
        FIASUN = 0.                                                             CALWIN 487
        FIASKY = 0.                                                             CALWIN 488
        FN = 0.                                                                 CALWIN 489
        DO II = 1,NLAYER                                                        CALWIN 490
          FN = FN + (RGAP(II)/RTO)*(UW*5.67826)/UIG                             VISBL  141
          IF(II.EQ.1) THEN                                                      CALWIN 492
            FIASUN = FIASUN + FN*<RF-AGSUN1>                                    CALWIN 493
            AGSK1D = 0.                                                         CALWIN 494
            IF(ISREFL.EQ.2) AGSK1D = (<ABSHEMIS> + aDifAdd) *WSGWG              -044d5 244
            FIASKY = FIASKY + FN*(<RF-AGSKY1>-AGSK1D)                           CALWIN 496
          ELSE IF(II.EQ.2) THEN                                                 CALWIN 497
            FIASUN = FIASUN + FN*<RF-AGSUN2>                                    CALWIN 498
            AGSK2D = 0.                                                         CALWIN 499
            IF(ISREFL.EQ.2) AGSK2D = <ABSHEMIS>*WSGWG                           CALWIN 500
            FIASKY = FIASKY + FN*(<RF-AGSKY2>-AGSK2D)                           CALWIN 501
          ELSE IF(II.EQ.3) THEN                                                 CALWIN 502
            FIASUN = FIASUN + FN*<RF-AGSUN3>                                    CALWIN 503
            AGSK3D = 0.                                                         CALWIN 504
            IF(ISREFL.EQ.2) AGSK3D = <ABSHEMIS>*WSGWG                           CALWIN 505
            FIASKY = FIASKY + FN*(<RF-AGSKY3>-AGSK3D)                           CALWIN 506
          ELSE IF(II.EQ.4) THEN                                                 CALWIN 507
            FIASUN = FIASUN + FN*<RF-AGSUN4>                                    CALWIN 508
            AGSK4D = 0.                                                         CALWIN 509
            IF(ISREFL.EQ.2) AGSK4D = <ABSHEMIS>*WSGWG                           CALWIN 510
            FIASKY = FIASKY + FN*(<RF-AGSKY4>-AGSK4D)                           CALWIN 511
          ELSE IF(II.EQ.5) THEN                                                 CALWIN 512
            FIASUN = FIASUN + FN*<RF-AGSUN5>                                    CALWIN 513
            AGSK5D = 0.                                                         CALWIN 514
            IF(ISREFL.EQ.2) AGSK5D = <ABSHEMIS>*WSGWG                           CALWIN 515
            FIASKY = FIASKY + FN*(<RF-AGSKY5>-AGSK5D)                           CALWIN 516
          ENDIF                                                                 CALWIN 517
        ENDDO                                                                   CALWIN 518
        QABS = QABS + RDNCC*RAYCOS(3)*FIASUN + BSCC*FIASKY                      CALWIN 519
      ENDIF                                                                     CALWIN 520
      else                                                                      CALWIN 521
        QABS   = FO*(QDIF*ADIFO + QDIR*ADIRO)                                   WLIB1   14
C              ADD REFLECTED SOLAR IF ISREFL = 1 OR 2                           CALWIN 523
C              (FI WILL = 0 FOR NPANE = 1)                                      CALWIN 524
      IF(ISREFL.EQ.1) THEN                                                      CALWIN 525
        QABS = RDNCC*RAYCOS(3)*FO*<RF-AGSUN1> + BSCC*<RF-AGSKY1>                WLIB1   15
      ELSE IF(ISREFL.EQ.2) THEN                                                 CALWIN 528
        AGSK1D = ADIFO*WSGWG                                                    CALWIN 529
        AGSK2D = ADIFI*WSGWG                                                    CALWIN 530
        QABS = QABS + RDNCC*RAYCOS(3)*FO*<RF-AGSUN1> +                          WLIB1   16
     1                BSCC*FO*(<RF-AGSKY1>-AGSK1D)                              WLIB1   17
      ENDIF                                                                     CALWIN 534
      endif                                                                     CALWIN 535
C              GET TOTAL SOLAR HEAT THROUGH WINDOW                              CALWIN 536
      QSOLG  = QTRANS * <WIAREA>                                                CALWIN 537
      QABSG  = QABS * <WIAREA>                                                  CALWIN 538
C             FOR WINDOW WITH SHADING COEFFICIENT,                              BLIND2  45
C             MULTIPLY BY SHADING COEFFICIENT                                   BLIND2  46
      IF(IW3LIB.EQ.0.) THEN                                                     BLIND2  47
         QSOLG  = QSOLG*GSHACO                                                  BLIND2  48
         QABSG  = QABSG*GSHACO                                                  BLIND2  49
      ENDIF                                                                     BLIND2  50
C              FOR TROMBE WALLS, GET THE SOLAR ENERGY ABSORBED                  CALWIN 542
C              BY THE WALL, THE OUTER GLAZING, AND THE INNER GLAZING.           CALWIN 543
      IF (IEWTYP .LT. 3)  GO TO 400                                             CALWIN 544
      if (iw3lib .gt. 0) then                                                   CALWIN 545
        IL = 1                                                                  CALWIN 546
        asol = <ABSHEMIS>                                                       CALWIN 547
        II = IL                                                                 -044d5 245
        IS = 1                                                                  -044d5 246
        IF(<MWISTC>.NE.0) THEN                                                  -044d5 247
          abeta = <ABSANG1>                                                     -044d5 248
        ELSE                                                                    -044d5 249
          abeta = Get_WinLib_ABS(eta,II)                                        -044e3   6
        ENDIF                                                                   -044d5 259
C              interpolate if switching in effect                               CALWIN 549
           if(<SWFAC>.lt.1.0) then                                              CALWIN 550
             mr = <MWIPRPSW>                                                    CALWIN 551
             asol = <SWFAC>*asol + (1.-<SWFAC>)*<ABSHEMIS>                      CALWIN 552
             IS = 1                                                             -044d5 260
             IF(<MWISTC>.NE.0) THEN                                             -044d5 261
               abetsw = <ABSANG1>                                               -044d5 262
             ELSE                                                               -044d5 263
               abetsw = Get_WinLib_ABS(eta,II)                                  -044e3   7
             ENDIF                                                              -044d5 273
             abeta = <SWFAC>*abeta + (1.-<SWFAC>)*abetsw                        CALWIN 554
             mr = <MWIPRP>                                                      CALWIN 555
           endif                                                                CALWIN 556
        asol  = asol  + AdifAdd  ! account for dirt depreciation                -044d5 274
        abeta = abeta + AdirAdd  ! account for dirt depreciation                -044d5 275
        qsgout = qdif*asol + qdir*abeta                                         CALWIN 557
        qsgin  = qdif*(adif - asol) + qdir*(adir - abeta)                       CALWIN 558
      else                                                                      CALWIN 559
        QSGOUT = (QDIF*ADIFO + QDIR*ADIRO) * GSHACO                             CALWIN 560
        QSGIN  =  (QDIF*ADIFI + QDIR*ADIRI) * GSHACO                            CALWIN 561
      endif                                                                     CALWIN 562
      QSWALL = QTRANS*GSHACO*<SURABSO>                                          CALWIN 563
  400 CONTINUE                                                                  CALWIN 564
C            DIR AND DIF SOLAR TRANSMITTED INTO SPACE (BTU) WHEN                CALWIN 565
C            THERE ARE NO SHADES ON WINDOW (USED IN SUBR IWSOL).                CALWIN 566
      <ESOLTRDRWN> = QDIR*TDIR*GSHACO*<WIAREA>*ATXSM                            CALWIN 567
      <ESOLTRDFWN> = QDIF*TDIF*GSHACO*<WIAREA>*ATXSM                            CALWIN 568
      IS = 1                                                                    VISBL  142
      IF(<MWISTC>.NE.0) THEN                                                    VISBL  143
         <ESOLTRDRWN> = QDIR*<TSDIRDIR> * <WIAREA>*ATXSM                        VISBL  144
         <ESOLTRDFWN> = (QDIR*<TSDIRDIF>+QDIF*<TSDIFDIF>) *                     VISBL  145
     1                   <WIAREA>*ATXSM                                         VISBL  146
      ENDIF                                                                     VISBL  147
C              IF THERE IS A SHADING-SCHEDULE AND SHADE IS IN PLACE,            CALWIN 569
C              MULTIPLY BY THE SCHEDULE                                         CALWIN 570
      SHMULT = 1.0                                                              CALWIN 571
      IF((<DIFFUSING-GLASS>.EQ.0) .AND. ((<KGCURT>.EQ.0).OR.                    -044d5 276
     $           (<SHADING-FLAG>.LE.1).OR.(<IBLDF>.GE.1))) GOTO 500             -044d5 277
      MS     = <@KGCURT> + ISCHR                                                CALWIN 573
      QSOLG  = QSOLG*AA(MS)                                                     CALWIN 574
      QABSG  = QABSG*AA(MS)                                                     CALWIN 575
      SHMULT = AA(MS)                                                           CALWIN 576
C            DIR SOL INTO SPACE IS ASSUMED ZERO FOR SHADED WINDOW               CALWIN 577
      <ESOLTRDRWN> = 0.                                                         CALWIN 578
C            DIF SOL INTO SPACE FOR SHADED WINDOW.  DIR-TO-DIF AND              BLIND2  55
C            DIF-TO-DIF TRANSMITTANCE OF SHADE ARE ASSUMED EQUAL.               BLIND2  56
      STRSH = SHMULT                                                            BLIND2  57
      IF (<SOL-TRANS-SCH>.EQ.0) GO TO 450                                       CALWIN 583
      MS = <@SOL-TRANS-SCH> + ISCHR                                             CALWIN 584
      STRSH = AA(MS)                                                            CALWIN 585
  450 CONTINUE                                                                  CALWIN 586
C              CONSTRAIN TO BE LESS THAN OR EQUAL TO SHMULT.  IF NOT            CALWIN 587
C              SPECIFIED, DEFAULTS TO SHMULT                                    CALWIN 588
      STRSH = AMIN1(SHMULT,STRSH)                                               CALWIN 589
      IWST = <WIN-SHADE-TYPE>                                                   CALWIN 590
C            SHADE ON INSIDE OF WINDOW                                          CALWIN 591
      IF((IWST.NE.2.AND.IWST.NE.4) .OR. (<DIFFUSING-GLASS>.EQ.1))               -044d5 278
     .<ESOLTRDFWN> = (QDIR*TDIR + QDIF*TDIF)*GSHACO*STRSH*<WIAREA>*ATXSM        CALWIN 593
C            SHADE ON OUTSIDE OF WINDOW                                         CALWIN 594
      IF (IWST.EQ.2.OR.IWST.EQ.4)                                               CALWIN 595
     .<ESOLTRDFWN> = (QDIR + QDIF)*STRSH*TDIF*GSHACO*<WIAREA>*ATXSM             CALWIN 596
      IF (IEWTYP .LT. 3)  GO TO 500                                             CALWIN 597
      QSGOUT = QSGOUT*AA(MS)                                                    CALWIN 598
      QSGIN  = QSGIN*AA(MS)                                                     CALWIN 599
      QSWALL = QSWALL*AA(MS)                                                    CALWIN 600
  500 CONTINUE                                                                  CALWIN 601
C       IF SHADE HAS BEEN DEPLOYED, SET MANAGEMENT FLAG                         CALWIN 602
      IF (<SHADING-FLAG>.EQ.2.OR.<SHADING-FLAG>                                 CALWIN 603
     $    .EQ.3) MANAGE=1                                                       CALWIN 604
C              FINAL VIS TRANS SCHEDULE MULTIPLIER FOR HOURLY REPORT            CALWIN 605
      TVMULT = 1.0                                                              CALWIN 606
      IF (<VIS-TRANS-SCH>.EQ.0.OR.<SHADING-FLAG>.LE.1) GO TO 550                CALWIN 607
      MS     = <@VIS-TRANS-SCH> + ISCHR                                         CALWIN 608
      TVMULT = AA(MS)                                                           CALWIN 609
  550 CONTINUE                                                                  CALWIN 610
C              MAX-SOLAR VALUE FOR HOURLY REPORT                                CALWIN 611
      SOLGMX=999.                                                               CALWIN 612
      IF (<MAX-SOLAR-SCH>.EQ.0) GO TO 560                                       CALWIN 613
      MS     = <@MAX-SOLAR-SCH> + ISCHR                                         CALWIN 614
      SOLGMX = AA(MS)                                                           CALWIN 615
  560 CONTINUE                                                                  CALWIN 616
      GO TO 800                                                                 CALWIN 617
C              SUN DOWN.  NO RADIATION                                          CALWIN 618
  600 QSOLG  = 0.                                                               CALWIN 619
      QABSG  = 0.                                                               CALWIN 620
      IF (IEWTYP .LT. 2)  GO TO 800                                             CALWIN 621
      QSGOUT = 0.                                                               CALWIN 622
      QSGIN  = 0.                                                               CALWIN 623
      QSWALL = 0.                                                               CALWIN 624
C              CALCULATE HEAT DUE TO CONDUCTION THROUGH WINDOW                  CALWIN 625
  800 QCON = (UW*(DBTR-TZONER)-RO*UW*QIRWI)*<WIAREA> + QABSG                    CALWIN 626
      if(IREPRT(1,35).ne.0.and.IREPRT(1,8).ne.0)                                IREPRT  55
     . write(ioutpt,99711) qcon,qabsg,uw,dbtr,tzoner,ro,qirwi,<WIAREA>          CALWIN 628
99711 format(' CALWIN:qcon,qabsg,uw,dbtr,tzoner,ro,qirwi,wiarea=',/,            CALWIN 629
     . 1x,8f10.3)                                                               CALWIN 630
C              area-weighted average glass+frame u-value for hr rep             CALWIN 631
      uave = uw                                                                 CALWIN 632
C              conduction through window frame                                  CALWIN 633
      if(iewtyp.ge.3) GOTO 820                                                  -044d5 279
      areafr = ( <HWI>+2.*<FRAME-WIDTH> ) * ( <WWI>+2.*<FRAME-WIDTH> )          CALWIN 635
     .           - <WIAREA>                                                     CALWIN 636
      areacurb = 2*(<HWI> + <WWI> + 4*<FRAME-WIDTH>) * <CURB-HEIGHT>            -044d5 280
      if((areafr+areacurb).lt.0.01) GOTO 820                                    -044d5 281
C     ESTIMATE OF OUTSIDE FRAME/CURB TEMP FOR FILM CALC                         -044d5 282
      TFOUTR = <TSFRAR>                                                         -044d5 283
      IF(IFHRP.EQ.1) TFOUTR = DBTR                                              -044d5 284
C        FRAME/CURB OUTSIDE FILM COEFF (LBL MOWITT CORRELATION)                 -044d5 285
C        FRAME/CURB EMISSIVITY IS ASSUMED TO BE 0.9                             -044d5 286
      CALL FILM2(TFOUTR,DBTR,<XSTLT>,0.9,6,WNDSPZ,                              -044d5 287
     1              MWDIR,HCOUT,HROUT)                                          -044d5 288
      RO = 1./(HCOUT + HROUT)                                                   -044d5 289
      if(areafr.lt.0.01) GOTO 810                                               -044d5 290
C              FRAME U-VALUE INCLUDING OUTSIDE FILM                             CALWIN 646
      uwfr = 1./(1./(<FRAME-UVAL>+0.0001) + RO)                                 CALWIN 647
      uave = (<WIAREA>*uw + areafr*uwfr)/(<WIAREA> + areafr)                    CALWIN 648
C              ir correction; sky and ground form factors for frame             CALWIN 649
C              assumed same as for window                                       CALWIN 650
      dbtr2 = dbtr*dbtr                                                         CALWIN 651
      qirfr = 0.9*0.1714e-8*(dbtr2*dbtr2)*                                      CALWIN 652
     1        (1.-WFFSIR*(1.-COS(0.5*ABS(<XSTLT>))*(1.-ESKY))-WFFGIR)           -030    18
C              inward flowing portion of solar absorbed in frame                CALWIN 654
      qabsgf = areafr*ro*uwfr*<FRAME-ABS>*(qdir+qdif)                           CALWIN 655
C              conduction equation is like that for quick wall                  CALWIN 656
      qconfr = areafr*(uwfr*(dbtr-tzoner) - ro*uwfr*qirfr) + qabsgf             CALWIN 657
C                                                                               CALWIN 658
      if(IREPRT(1,35).ne.0.and.IREPRT(1,8).ne.0)                                IREPRT  56
     . write(ioutpt,9800) <FRAME-UVAL>,ro,uwfr,areafr,qirfr,dbtr,tzoner,        CALWIN 660
     .              <FRAME-ABS>,qdir,qdif,qabsgf,qcon,qconfr                    CALWIN 661
 9800 format(' Calwin FRAME: FRAME-UVAl,ro,uwfr,areafr,qirfr,dbtr,tzoner        CALWIN 662
     .,FRAME-ABS,qdir,qdif,qabsgf,qcon,qconfr',/,1x,13f10.3)                    CALWIN 663
C                                                                               CALWIN 664
C              add frame conduction to glass conduction                         CALWIN 665
      qcon = qcon + qconfr                                                      CALWIN 666
C              add frame solar to reconducted glass solar                       CALWIN 667
      qabsg = qabsg + qabsgf                                                    CALWIN 668
C              save frame temp for next-hr OA film calculation                  CALWIN 669
      <TSFRAR> = tzoner + qconfr/(areafr*<FRAME-UVAL>+0.0001)                   CALWIN 670
C              add frame conductance to zone conductance                        CALWIN 671
      zcond = zcond + uwfr*areafr*<GMULT>*<XSMULT>                              CALWIN 672
  810 continue                                                                  CALWIN 673
C              Conduction through window curb (simplified for now)              -044d5 291
      if(areacurb.lt.0.01) GOTO 820                                             -044d5 292
C              Curb U-VALUE INCLUDING OUTSIDE FILM                              -044d5 293
      uwcurb = 1./(1./(<CURB-CONDUCT>+0.0001) + RO)                             -044d5 294
      uave = (<WIAREA>*uw + areafr*uwfr + areacurb*uwcurb)                      -044d5 295
     $       /(<WIAREA> + areafr)                                               -044d5 296
C              assume only 1/2 the curb "sees" the sun or sky - later!          -044d5 297
C              ir correction; sky and ground form factors for frame             -044d5 298
C              assumed same as for window                                       -044d5 299
      dbtr2 = dbtr*dbtr                                                         -044d5 300
      qircurb = 0.5 * 0.9*0.1714e-8*(dbtr2*dbtr2)*                              -044d5 301
     $        (1.-WFFSIR*(1.-COS(0.5*ABS(<XSTLT>))*(1.-ESKY))-WFFGIR)           -044d5 302
C              inward flowing portion of solar absorbed in curb                 -044d5 303
      qabsgc = areacurb*ro*uwcurb*<CURB-ABS>*(0.5*qdir+qdif)                    -044d5 304
C              conduction equation is like that for quick wall                  -044d5 305
      qconcurb = areacurb*(uwcurb*(dbtr-tzoner) - ro*uwcurb*qircurb)            -044d5 306
     $         + qabsgc                                                         -044d5 307
C                                                                               -044d5 308
      if(IREPRT(1,35).ne.0.and.IREPRT(1,8).ne.0)                                -044d5 309
     $ write(ioutpt,9800) <CURB-CONDUCT>,ro,uwfr,areafr,qirfr,dbtr,             -044d5 310
     $             tzoner,<CURB-ABS>,qdir,qdif,qabsgc,qcon,qconcurb             -044d5 311
 9820 format(' Calwin CURB: CURB-UVAL,ro,uwcurb,areacurb,qircurb,dbtr,          -044d5 312
     $tzoner,CURB-ABS,qdir,qdif,qabsgf,qcon,qconcurb',/,1x,13f10.3)             -044d5 313
C                                                                               -044d5 314
C              add curb conduction to glass conduction                          -044d5 315
      qcon = qcon + qconcurb                                                    -044d5 316
C              add curb solar to reconducted glass solar                        -044d5 317
      qabsg = qabsg + qabsgc                                                    -044d5 318
C              add curb conductance to zone conductance                         -044d5 319
      zcond = zcond + uwcurb*areacurb*<GMULT>*<XSMULT>                          -044d5 320
  820 continue                                                                  -044d5 321
C              IF THE CRACK METHOD IS BEING USED, CALCULATE THE                 CALWIN 674
C              CFM FOR THIS WINDOW                                              CALWIN 675
      IF (INFCOD .EQ. 2) CFMW = <GINFC>*<WIPERM>*(PCO**.66)                     CALWIN 676
C              SUM THE INFILTRATION CFM, THE HEAT DUE TO SOLAR                  CALWIN 677
C              RADIATION, AND THE HEAT DUE TO CONDUCTION ACROSS                 CALWIN 678
C              THE WINDOW, TO OBTAIN THE QUANTITIES FOR THE                     CALWIN 679
C              WHOLE SPACE                                                      CALWIN 680
      CFMINF = CFMINF + CFMW*ATXSM                                              CALWIN 681
      IF (IEWTYP .GT. 2)  GO TO 850                                             CALWIN 682
      QSOL   = QSOL + QSOLG * ATXSM                                             CALWIN 683
      QWINC  = QWINC + QCON * ATXSM                                             CALWIN 684
C              SAVE ESTIMATE OF OUTSIDE GLASS TEMP FOR NEXT                     CALWIN 685
C              HOUR'S OUTSIDE FILM CALCULATION                                  CALWIN 686
      IF(IW3LIB.EQ.0)                                                           CALWIN 687
     1 <TSWINR> = (DBTR/RO + TZONER/UWI + QDIF*ADIFO + QDIR*ADIRO               CALWIN 688
     2            - QIRWI) / (1./RO + 1./UWI)                                   CALWIN 689
C**************** WINDOW:  after function ******************************        CALWIN 690
      IF( <MWIFN2> .GT. 0 )   CALL  FINTL( <MWIFN2>, 1. )                       CALWIN 691
C***********************************************************************        CALWIN 692
C              TRANSFER WINDOW VARIABLES TO USER REPORT BLOCK BUFFER            CALWIN 693
  850 IF (IRSCH .EQ. 0 .OR. <MWIBUF> .EQ. 0) GO TO 1000                         CALWIN 694
      IPTR   = <MWIBUF> - 1                                                     CALWIN 695
      DO 900 I=1,18                                                             CALWIN 696
  900 AA(IPTR+I) = WINV(I)                                                      CALWIN 697
C              set u-value to area-weighted average of glass+frame              CALWIN 698
      aa(iptr+1) = uave                                                         CALWIN 699
C              FOR HR REP, SET CONDUCTION THROUGH WINDOW TO UA*DELTAT           CALWIN 700
C              (CONDUCTION INCLUDES FRAME, IF PRESENT)                          CALWIN 701
C            AND RADIATION THRU WINDOW TO (TRANSMITTED SOLAR +                  CALWIN 702
C            RECONDUCTED SOLAR)                                                 CALWIN 703
      AA(IPTR+17) = QCON  - QABSG - QABSGC                                      -044d5 322
      AA(IPTR+15) = QSOLG + QABSG + QABSGC                                      -044d5 323
C -- hourly shading coef, vis trans, switching factor for hourly report         CALWIN 706
C -- (formerly vis trans = constant = <VIS-TRANS> input value)                  CALWIN 707
      if(iw3lib.eq.0) then                                                      WLIB1   18
        aa(iptr+21) = tdir*<VIS-TRANS>/                                         CALWIN 709
     .     (<CAM1>+<CAM2>+<CAM3>+<CAM4>)                                        CALWIN 710
      else                                                                      CALWIN 711
        aa(iptr+16) = <SHDCOF>                                                  CALWIN 712
         tvis = Get_WinLib_TVIS(ETA,0)                                          -044d5d 17
         aa(iptr+21) = tvis                                                     -044d5d 18
        if(eta.lt.0.) aa(iptr+21) = 0.                                          CALWIN 714
C             interpolate if switching in effect                                CALWIN 715
        if(<SWFAC>.lt.1.0) then                                                 CALWIN 716
          mr = <MWIPRPSW>                                                       CALWIN 717
          aa16sw = <SHDCOF>                                                     CALWIN 718
         aa21sw = Get_WinLib_TVIS(ETA,0)                                        -044d5d 19
          if(eta.lt.0.) aa21sw = 0.                                             CALWIN 720
          aa(iptr+16) = <SWFAC>*aa(iptr+16) + (1.-<SWFAC>)*aa16sw               CALWIN 721
          aa(iptr+21) = <SWFAC>*aa(iptr+21) + (1.-<SWFAC>)*aa21sw               CALWIN 722
          mr = <MWIPRP>                                                         CALWIN 723
        endif                                                                   CALWIN 724
      endif                                                                     CALWIN 725
C              switching flag (formerly window infiltration cfm)                CALWIN 726
      aa(iptr+18) = 1.0 - <SWFAC>                                               CALWIN 727
      AA(IPTR+22) = TVMULT                                                      CALWIN 728
      AA(IPTR+23) = FLOAT(<SHADING-FLAG>)                                       CALWIN 729
      AA(IPTR+19) = SHMULT                                                      CALWIN 730
      AA(IPTR+20) = SOLGMX                                                      CALWIN 731
C              FRAC COVERED BY BLIND AND SLAT ANGLE                             VISBL  149
      IF(<IBLDF>.GE.1) THEN                                                     VISBL  150
         AA(IPTR+28) = BLDCOV                                                   VISBL  151
         AA(IPTR+29) = <ANGSLATADJ>                                             VISBL  152
      ELSE                                                                      VISBL  153
         AA(IPTR+28) = -999.                                                    VISBL  154
         AA(IPTR+29) = -999.                                                    VISBL  155
      ENDIF                                                                     VISBL  156
C              add frame and curb gains into report                             -044d5 350
      AA(IPTR+30) = qconfr   + qabsgf                                           -044d5 351
      AA(IPTR+31) = qconcurb + qabsgc                                           -044d5 352
 1000 MWI    = MWI + MWNLEN                                                     CALWIN 732
      RETURN                                                                    CALWIN 733
      END                                                                       CALWIN 734
      SUBROUTINE CALBLD (ISOLVIS,COSINC,ANGINP,TOUTS,TINS)                      VISBL  157
C                                                                               VISBL  158
C              CALCULATES SOLAR-OPTICAL AND THERMAL PROPERTIES                  VISBL  159
C              OF A LAYER-TYPE WINDOW ENTERED WITH                              BLIND3   8
C              THE WINDOW-LAYER COMMAND.                                        BLIND3   9
C                                                                               VISBL  162
C               ISOLVIS = 0 REGULAR SOLAR-THERMAL CALCULATION                   VISBL  163
C                           (CALLED FROM CALEXT)                                VISBL  164
C                       = 1 GET BEAM VIS TRANS WITH NO BLINDS                   VISBL  165
C                           (CALLED FROM DCOF)                                  VISBL  166
C                       = 2 GET BEAM AND DIF VIS TRANS W/BLINDS                 VISBL  167
C                           (CALLED FROM CALEXT, DCOF AND DREFLT)               VISBL  168
C                       = 3 GET BEAM AND DIF VIS TRANS W/BLINDS                 VISBL  169
C                           WHEN SLAT ANGLE OF ADJUSTABLE BLIND                 VISBL  170
C                           IS ANGINP (DEG)                                     VISBL  171
C                           (CALLED FROM DCOF AND DREFLT)                       VISBL  172
C                                                                               VISBL  173
C              COSINC = COSINE OF ANGLE OF INCIDENCE, FOR USE                   VISBL  174
C                 WITH ISOLVIS = 1.                                             VISBL  175
C              ANGINP = SLAT ANGLE OF ADJUSTABLE BLIND, FOR USE                 VISBL  176
C                 WITH ISOLVIS = 3.                                             VISBL  177
C              TOUTS, TINS = OUTSIDE AND INSIDE AIR TEMP, FOR USE               VISBL  178
C                 WITH ISOLVIS = 0.                                             VISBL  179
      COMMON        // AA(75 000 000)                                           -048ar   1
      INTEGER          IA(75 000 000)                                           -048ar   2
      EQUIVALENCE  (IA(1), AA(1))                                               //       4
      COMMON/UNITT/VKONV(300),DUMLOG(4),JUNITT(4,300,2)                         UNITS1   1
      DIMENSION IUNITT(4,300)                                                   UNITS1   2
      EQUIVALENCE (IUNITT,JUNITT)                                               /UNITT/  4
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                         /FILES/  3
     2              , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                    /FILES/  4
     3                IHRREP(3), IHRPAS(2)                                      /FILES/  5
      COMMON  /REPORT/ IREPRT(4,37),IPRG,IUNIQV(100),IUNIQS(100),IUNIQL         BIGNAM   1
      COMMON  /SUND/   ISUNUP, GUNDOG, HORANG, TDECLN, EQTIME, SOLCON,          /SUND/   2
     1                 ATMEXT, SKYDFF, RAYCOS(3), RDN,                          /SUND/   3
     2                 BSUN, DECLN, CD, SD, FSUNUP                              /SUND/   4
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     BLIND    2
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        FLOOR1   3
      integer mr,ipr,it                                                         CALBLD  13
      COMMON /DAYL2/ TDIRDIR,TDIRDIF,TDIFDIF                                    /DAYL2/  2
      COMMON  /WINV/   UW,TDIR,ADIRO,TDIF,ADIFO,ADIRI,ADIFI,FI,FO,              /WINV/   2
     1                 AGOLGE,QDIR,QDIF,QTRANS,QABS,QSOLG,GSHACO,               /WINV/   3
     2                 QCON,CFMW,SHMULT,SOLGMX,UWW,CWIN(4),CSUM(4),             /WINV/   4
     3                 ANWIN(4),ANSUM(4),QIRWI                                  VISBL    7
      real bld_pr(15,5),gla_pr(12,5),st_lay(16)                                 CALBLD  14
      real  ts(3), rs(3), stack(16,5), a_b(5), a_d(5)                           CALBLD  15
      real rts(3),rrs(3),rstack(16,5),ra_b(5),ra_d(5)                           CALBLD  16
      COMMON /BLGEO/ sun_el,sun_az,win_el,win_az,                               /BLGEO/  2
     1               bld_el,bld_ar,ibld_ax,bldcov                               VISBL    1
      DIMENSION BLD_EL(5),BLD_AR(5),IBLD_AX(5)                                  /BLGEO/  4
      COMMON /BLRUN/ IL,NL,IS                                                   /BLRUN/  2
      COMMON /BLCONS/ PI,PIH,RAD,M,NBLPR,NGLPR,NSTPR,DEGRAD                     /BLCONS/ 2
      real PI,PIH,RAD,DEGRAD                                                    BLIND1   1
      integer M,NBLPR,NGLPR,NSTPR                                               /BLCONS/ 4
      DATA PI, PIH, RAD, m, NBLPR, NGLPR, NSTPR, DEGRAD                         CALBLD  20
     1   / 3.141593, 1.570796, 0.017453, 5, 15, 12, 16, 0.017453/               CALBLD  21
c                                                                               CALBLD  22
c                 general initializations :                                     CALBLD  23
C                 GET SUN LOCATION                                              CALBLD  24
C                 (sun_el=+ : up, 0 : horiz, - : down)                          CALBLD  25
C                 (sun_az=- : am, 0 : noon,  + : pm)                            CALBLD  26
      SUN_EL =asin(RAYCOS(3))                                                   CALBLD  27
      IF (RAYCOS(3).EQ.1.0.OR.RAYCOS(3).EQ.-1.0) THEN                           VISBL  181
         SUN_AZ=PI                                                              CALBLD  29
      ELSE IF (RAYCOS(1).GE.0.) THEN                                            CALBLD  30
              XTEMP = RAYCOS(2)/cos(sun_el)                                     VISBL  182
              XTEMP = AMAX1(AMIN1(1.,XTEMP),-1.)                                VISBL  183
              SUN_AZ= acos(XTEMP)-PI                                            VISBL  184
           ELSE                                                                 CALBLD  32
              XTEMP = RAYCOS(2)/cos(sun_el)                                     VISBL  185
              XTEMP = AMAX1(AMIN1(1.,XTEMP),-1.)                                VISBL  186
              SUN_AZ= PI-acos(XTEMP)                                            VISBL  187
      END IF                                                                    CALBLD  34
c                 get window data from EXTERIOR WALL data                       CALBLD  35
C              ELEVATION OF WINDOW NORMAL                                       VISBL  188
C              (=0 FOR VERTICAL WINDOW)                                         VISBL  189
      win_el =PIH - <XSTLT>                                                     VISBL  190
      win_az =<XSAZM>-pi                                                        CALBLD  37
C                 TRANSMITTANCES AND REFLECTANCES SET 0.                        CALBLD  38
      DO it=1,3                                                                 CALBLD  39
         TS(it)=0                                                               CALBLD  40
         RS(it)=0                                                               CALBLD  41
      END DO                                                                    CALBLD  42
c                 initialize layer data array                                   CALBLD  43
      do ipr=1,nstpr                                                            CALBLD  44
          st_lay(ipr)=0.                                                        CALBLD  45
      end do                                                                    CALBLD  46
c                                                                               CALBLD  47
c                 GET LAYER-DATA OF ALL SOLID LAYERS                            CALBLD  48
      NL=<NLAYER>                                                               CALBLD  49
      DO IL=1,NL                                                                CALBLD  50
         IS=2*IL-1                                                              CALBLD  51
         MWL=<MWISTC>                                                           CALBLD  52
C               IWLTYPE = 1 BLIND                                               VISBL  191
C                       = 2 GLASS                                               VISBL  192
C                       = 3 GAP                                                 VISBL  193
C                 DATA OF BLINDS                                                CALBLD  53
      IF (<IWLTYPE>.NE.1) GO TO 100                                             VISBL  194
      IF(ISOLVIS.EQ.1) THEN                                                     VISBL  195
         DO IPR = 2,16,2                                                        VISBL  196
C              REMOVE BLIND LAYERS TO GET BARE VIS TRANS OF WINDOW              VISBL  197
            STACK(IPR-1,IL) = 1.                                                VISBL  198
            STACK(IPR,  IL) = 0.                                                VISBL  199
         ENDDO                                                                  VISBL  200
         GO TO 100                                                              VISBL  201
      ELSE                                                                      VISBL  202
C                 GET BLIND DATA                                                CALBLD  55
            BLD_AR(IL) = <WLCOV>                                                CALBLD  56
            CALL COV_SCH(<MWIB-ADJ>, <WLCOVMIN>, <WLCOVMAX>,                    VISBL  203
     1                      BLD_AR(IL), tins)                                   VISBL  204
      BLDCOV = BLD_AR(IL)                                                       VISBL  205
C              IBLDF = 1 IF BLIND DOES NOT COVER WINDOW                         VISBL  206
      IF(BLD_AR(IL).LT.0.98) <IBLDF> = 1                                        VISBL  207
C              IBLDF =2 IF BLIND COVERS WINDOW AND IS FIXED SLAT                VISBL  208
      IF(BLD_AR(IL).GE.0.98.AND.<MWIS-ADJ>.EQ.1) <IBLDF> = 2                    VISBL  209
C              IBLDF = 3 IF BLINDS COVERS WINDOW AND HAS                        VISBL  210
C              ADJUSTABLE SLATS                                                 VISBL  211
      IF(BLD_AR(IL).GE.0.98.AND.<MWIS-ADJ>.GE.2) <IBLDF> = 3                    VISBL  212
            IF (BLD_AR(IL).GT.0.) THEN                                          CALBLD  60
               BLD_EL(IL) = PIH-<WLANG>*DEGRAD                                  CALBLD  61
C              CLOCKWISE ANGLE BETWEEN WINDOW PLANE                             VISBL  213
C              AND OUTSIDE OF SLAT (OUTSIDE OF SLAT FACES                       VISBL  214
C              OUTWARD WHEN SLATS POINT DOWN (SLAT ANGLE =                      VISBL  215
C              90 DEG)                                                          VISBL  216
         IF(ISOLVIS.EQ.3)  BLD_EL(IL) = PIH-ANGINP*DEGRAD                       VISBL  217
            IF(ISOLVIS.NE.3)                                                    VISBL  218
     1             CALL ANG_SCH(<MWIS-ADJ>, <WLANGMIN>*DEGRAD,                  CALBLD  63
     2                          <WLANGMAX>*DEGRAD,<WLSLTD>, <WLSLTW>,           CALBLD  64
     3                          BLD_EL(IL), tins)                               CALBLD  65
C              ADJUSTED SLAT ANGLE IN DEGREES. FOR VERTICAL                     VISBL  219
C              WINDOWS, SLAT POINTING DOWN IS 90 DEG,                           VISBL  220
C              SLAT NORMAL TO WINDOW IS 0 DEG, AND SLAT                         VISBL  221
C              POINTING UP IS -90 DEG.                                          VISBL  222
         <ANGSLATADJ> = (PIH - BLD_EL(IL)) / DEGRAD                             VISBL  223
               IBLD_AX(IL)= <IWLSLTOR>                                          CALBLD  66
               BLD_PR( 2,IL) = <WLSLTW>*VKONV(15)                               CALBLD  67
               BLD_PR( 3,IL) = <WLSLTD>*VKONV(15)                               CALBLD  68
              IF(ISOLVIS.EQ.0) THEN                                             VISBL  224
               BLD_PR( 4,IL) = <WLTSBB>                                         CALBLD  69
C              BEAM-BEAM REFLECTANCE IS ZERO FOR NOW                            VISBL  225
               BLD_PR( 5,IL) = 0.0                                              VISBL  226
               BLD_PR( 6,IL) = 0.0                                              VISBL  227
                                                                                VISBL  228
               BLD_PR( 7,IL) = <WLTSBH>                                         CALBLD  72
               BLD_PR( 8,IL) = <WLRSBH>                                         CALBLD  73
               BLD_PR( 9,IL) = <WLRBSBH>                                        CALBLD  74
               BLD_PR(10,IL) = <WLTSHH>                                         CALBLD  75
               BLD_PR(11,IL) = <WLRSHH>                                         CALBLD  76
               BLD_PR(12,IL) = <WLRBSHH>                                        CALBLD  77
              ELSE                                                              VISBL  229
               BLD_PR( 4,IL) = <WLTVBB>                                         VISBL  230
C              BEAM-BEAM REFLECTANCE IS ZERO FOR NOW                            VISBL  231
               BLD_PR( 5,IL) = 0.0                                              VISBL  232
               BLD_PR( 6,IL) = 0.0                                              VISBL  233
               BLD_PR( 7,IL) = <WLTVBH>                                         VISBL  234
               BLD_PR( 8,IL) = <WLRVBH>                                         VISBL  235
               BLD_PR( 9,IL) = <WLRBVBH>                                        VISBL  236
               BLD_PR(10,IL) = <WLTVHH>                                         VISBL  237
               BLD_PR(11,IL) = <WLRVHH>                                         VISBL  238
               BLD_PR(12,IL) = <WLRBVHH>                                        VISBL  239
              ENDIF                                                             VISBL  240
               BLD_PR(13,IL) = <WLTTH>                                          CALBLD  78
               BLD_PR(14,IL) = <WLETH>                                          CALBLD  79
               BLD_PR(15,IL) = <WLEBTH>                                         CALBLD  80
      if(IREPRT(1,35).ne.0.and.IREPRT(1,8).ne.0)                                CALBLD  81
     1  write(*,*) 'BLIND :', (BLD_PR(ip,il),ip=1,15), BLD_EL(IL)               CALBLD  82
C              CALCULATE DIFFUSE PROPERTIES OF BLIND LAYER                      VISBL  241
               CALL BLDOPT2(ISOLVIS,ISUNUP,                                     VISBL  242
     1                      BLD_PR(1,IL),BLD_EL(IL),ST_LAY)                     VISBL  243
C              Blind up means transmission only, no reflection                  VISBL  244
c                 Interpolate between both cases                                CALBLD  86
      if(IREPRT(1,35).ne.0.and.IREPRT(1,8).ne.0)                                CALBLD  87
     1  write(*,*) 'BLDOPT2 :', (stack(ip,IL),ip=1,16), IL                      CALBLD  88
               DO IPR=2,16,2                                                    CALBLD  89
C                 (### connection diffuse prop. drape-type shades ###)          CALBLD  90
                  STACK(IPR-1,IL)=  ST_LAY(IPR-1)*BLD_AR(IL)                    CALBLD  91
     1                            + (1.-BLD_AR(IL))                             CALBLD  92
                  STACK(IPR  ,IL)=  ST_LAY(IPR  )*BLD_AR(IL)                    CALBLD  93
               END DO                                                           CALBLD  94
            ELSE                                                                CALBLD  95
C                 BLIND is up means, only transm. , no refl.                    CALBLD  96
               DO IPR=2,16,2                                                    CALBLD  97
                  STACK(IPR-1,IL)= 1.                                           CALBLD  98
                  STACK(IPR  ,IL)= 0.                                           CALBLD  99
               END DO                                                           CALBLD 100
            END IF                                                              CALBLD 101
c                 calculate convective couplings                                CALBLD 102
      IF(ISOLVIS.EQ.0) CALL BLDCONV (touts,tins,BLD_AR(IL))                     VISBL  245
         END IF                                                                 CALBLD 104
  100 CONTINUE                                                                  VISBL  246
C                 DATA OF GLASS-LAYERS                                          CALBLD 105
         IF (<IWLTYPE>.EQ.2) THEN                                               CALBLD 106
            GLA_PR( 2,IL) = <WLTHICKN>*VKONV(15)                                CALBLD 107
           IF(ISOLVIS.EQ.0) THEN                                                VISBL  247
            GLA_PR( 3,IL) = <WLTSBB>                                            CALBLD 108
            GLA_PR( 4,IL) = <WLRSBB>                                            CALBLD 109
            GLA_PR( 5,IL) = <WLRBSBB>                                           CALBLD 110
            GLA_PR( 6,IL) = <WLTSBB>                                            VISBL  248
            GLA_PR( 7,IL) = <WLRSBB>                                            VISBL  249
            GLA_PR( 8,IL) = <WLRBSBB>                                           VISBL  250
           ELSE                                                                 VISBL  251
            GLA_PR( 3,IL) = <WLTVBB>                                            VISBL  252
            GLA_PR( 4,IL) = <WLRVBB>                                            VISBL  253
            GLA_PR( 5,IL) = <WLRBVBB>                                           VISBL  254
            GLA_PR( 6,IL) = <WLTVBB>                                            VISBL  255
            GLA_PR( 7,IL) = <WLRVBB>                                            VISBL  256
            GLA_PR( 8,IL) = <WLRBVBB>                                           VISBL  257
           ENDIF                                                                VISBL  258
            GLA_PR( 9,IL) = <WLTTH>                                             CALBLD 114
            GLA_PR(10,IL) = <WLETH>                                             CALBLD 115
            GLA_PR(11,IL) = <WLEBTH>                                            CALBLD 116
            GLA_PR(12,IL) = <WLCOND>*VKONV(85)                                  CALBLD 117
            ibld_ax(IL)=0                                                       CALBLD 118
C              CALCULATE DIFFUSE PROPERTIES OF GLASS LAYER                      VISBL  259
            call GLASOPT2(ISOLVIS,ISUNUP,gla_pr(1,IL),st_lay)                   VISBL  260
            DO IPR=1,NSTPR                                                      CALBLD 121
               STACK(IPR,IL)=ST_LAY(IPR)                                        CALBLD 122
            END DO                                                              CALBLD 123
         END IF                                                                 CALBLD 124
      END DO                                                                    CALBLD 125
C                 No LAYER, No DATA                                             CALBLD 126
      IF(NL.LT.5) THEN                                                          CALBLD 127
         DO IL=NL+1,5                                                           CALBLD 128
            DO IPR=1,NSTPR                                                      CALBLD 129
               STACK(IPR,IL)=0.0                                                CALBLD 130
            END DO                                                              CALBLD 131
         END DO                                                                 CALBLD 132
      END IF                                                                    CALBLD 133
      IF(ISOLVIS.EQ.0.AND.ISUNUP.NE.1) GO TO 1000                               VISBL  261
c                                                                               CALBLD 134
c                 do initial stack calculation                                  CALBLD 135
      call STACKOPT(NL,stack,Ts,Rs,a_b,a_d)                                     CALBLD 136
c                                                                               CALBLD 137
c         calculate cos(incidence angle)                                        CALBLD 138
      IF(ISOLVIS.NE.1) THEN                                                     VISBL  262
      CALL WINSUN(dy1,dy2,c_sun_gla,win_az,win_el,sun_az,sun_el,1)              CALBLD 139
      c_sun_gla=cos(c_sun_gla)                                                  CALBLD 140
      ELSE                                                                      VISBL  263
         c_sun_gla = COSINC                                                     VISBL  264
      ENDIF                                                                     VISBL  265
      iF (c_sun_gla.gt.0.) then                                                 CALBLD 141
c             update stack of optical properties                                CALBLD 142
c             calculate new blind properites                                    CALBLD 143
         DO IL=1,NL                                                             CALBLD 144
            IS=2*IL-1                                                           CALBLD 145
            MWL=<MWISTC>                                                        CALBLD 146
            IF ((<IWLTYPE>.EQ.1).AND.(BLD_AR(IL).GT.0.)) THEN                   CALBLD 147
               IF (BLD_AR(IL).GT.0.) THEN                                       CALBLD 148
c              calculate beam properties                                        CALBLD 149
                  call BLDOPT1(bld_pr(1,IL),ibld_ax(IL),bld_el(IL),             CALBLD 150
     1                         win_az,win_el,sun_az,sun_el,st_lay)              CALBLD 151
c              update beam data                                                 CALBLD 152
                  DO IPR=2,8,2                                                  CALBLD 153
C                 (### connection beam prop. drape-type shades ###)             CALBLD 154
                     STACK(IPR-1,IL)=  ST_LAY(IPR-1)*BLD_AR(IL)                 CALBLD 155
     1                               + (1.-BLD_AR(IL))                          CALBLD 156
                     STACK(IPR  ,IL)=  ST_LAY(IPR  )*BLD_AR(IL)                 CALBLD 157
                  END DO                                                        CALBLD 158
               end IF                                                           CALBLD 159
            end if                                                              CALBLD 160
c                                                                               CALBLD 161
            IF (<IWLTYPE>.EQ.2) THEN                                            CALBLD 162
c              calculate new glass beam properties                              CALBLD 163
               call GLASOPT1(c_sun_gla,gla_pr(1,IL),st_lay)                     CALBLD 164
c              update beam data                                                 CALBLD 165
               do IPR=1,8                                                       CALBLD 166
                  stack(IPR,IL)=st_lay(IPR)                                     CALBLD 167
               end do                                                           CALBLD 168
            end if                                                              CALBLD 169
         end do                                                                 CALBLD 170
c                                                                               CALBLD 171
c             calculate new stack properties                                    CALBLD 172
         call STACKOPT(nl,stack,Ts,Rs,a_b,a_d)                                  CALBLD 173
      end if                                                                    CALBLD 174
      IF(ISOLVIS.EQ.0) THEN                                                     VISBL  266
c         reverse stack with reverse layer-properties for RBHEMIS.              CALBLD 175
c         as only the hemispherical properties are needed, the                  CALBLD 176
c         layerproperties do not have tobe recalculated.                        CALBLD 177
      DO IL=1,NL                                                                CALBLD 178
         ILS=NL+1-IL                                                            CALBLD 179
         DO IPR=0,12,4                                                          CALBLD 180
            rstack(IPR+1,IL)=stack(IPR+3,ILS)                                   CALBLD 181
            rstack(IPR+2,IL)=stack(IPR+4,ILS)                                   CALBLD 182
            rstack(IPR+3,IL)=stack(IPR+1,ILS)                                   CALBLD 183
            rstack(IPR+4,IL)=stack(IPR+2,ILS)                                   CALBLD 184
         END DO                                                                 CALBLD 185
      END DO                                                                    CALBLD 186
c         fill rest with zeros                                                  CALBLD 187
      DO IL=NL+1,m                                                              CALBLD 188
         DO IPR=1,nstpr                                                         CALBLD 189
            rstack(ipr,il)=0.0                                                  CALBLD 190
         END DO                                                                 CALBLD 191
      END DO                                                                    CALBLD 192
C         calculate reverse stack                                               CALBLD 193
      call stackopt(NL,rstack,rts,rrs,ra_b,ra_d)                                CALBLD 194
c                                                                               CALBLD 195
c         end of stack update                                                   CALBLD 196
c                                                                               CALBLD 197
      ENDIF                                                                     VISBL  267
C              WRITE DATA TO GLASS-TYPE                                         VISBL  268
      IF(ISOLVIS.EQ.0) THEN                                                     VISBL  269
C              WHOLE-WINDOW PROPERTIES                                          VISBL  270
      <INSIDE-EMISS> =stack(14,NL)                                              CALBLD 200
      <OUTSIDE-EMISS>=stack(14,1)                                               CALBLD 201
      <RBHEMIS>=rrs(3)                                                          CALBLD 202
      <TRHEMIS>=TS(3)                                                           CALBLD 203
      <TRANG1> =TS(1)+TS(2)                                                     CALBLD 204
      <TRFIT1> = 0.0                                                            CALBLD 205
      <TRFIT2> = 0.0                                                            CALBLD 206
      <TVFIT1> = 0.0                                                            CALBLD 207
      <TVFIT2> = 0.0                                                            CALBLD 208
      <TSDIRDIR> = TS(1)                                                        VISBL  271
      <TSDIRDIF> = TS(2)                                                        VISBL  272
      <TSDIFDIF> = TS(3)                                                        VISBL  273
C         LAYER PROPERTIES                                                      CALBLD 209
      DO IL=1,NL                                                                CALBLD 210
         <ABSHEMIS>=a_d(IL)                                                     CALBLD 211
         <ABSANG1> =a_b(IL)                                                     CALBLD 212
         <ABSFIT1> =0.0                                                         CALBLD 213
         <ABSFIT2> =0.0                                                         CALBLD 214
      END DO                                                                    CALBLD 215
      ELSE IF(ISOLVIS.EQ.1) THEN                                                VISBL  274
C              TS(1) IS BEAM-BEAM TRANSMITTANCE                                 VISBL  275
         <TVANG1> = TS(1)                                                       VISBL  276
      ELSE                                                                      VISBL  277
         <TVHEMIS> = TS(3)                                                      VISBL  278
C              TS(2) IS BEAM-HEMI TRANSMITTANCE                                 VISBL  279
         <TVANG1>  = TS(1) + TS(2)                                              VISBL  280
      ENDIF                                                                     VISBL  281
C              DIRECT-DIRECT, DIRECT-DIFFUSE AND DIFFUSE-DIFFUSE                VISBL  282
C              VIS OR SOL TRANSMITTANCE, FOR USE IN DCOF AND DREFLT             VISBL  283
      TDIRDIR = TS(1)                                                           VISBL  284
      TDIRDIF = TS(2)                                                           VISBL  285
      TDIFDIF = TS(3)                                                           VISBL  286
C              BLIND COVER CONTROL TYPES: IADJ =                                VISBL  287
C              1: NONE                                                          VISBL  288
C              2: SCHEDULE                                                      VISBL  289
C              3: SOLAR INTENSITY ON WINDOW                                     VISBL  290
C              4: ROOM TEMPERATURE                                              VISBL  291
c*****************                                                              CALBLD 216
C      DO ily=1,NL                                                              CALBLD 217
C         write(*,*) ily,(stack(ip,ily),ip=1,16)                                CALBLD 218
C      end do                                                                   CALBLD 219
C      write(ioutpt,'(12x,a20)')        '---no CONVECTION !  '                  CALBLD 220
C      write(ioutpt,'(12x,a20)')        '---SUMMARY----------'                  CALBLD 221
C      write(ioutpt,'(12x,a17,2F10.7)') '---Sun elev/azim:',sun_el,sun_az       CALBLD 222
C      write(ioutpt,'(12x,a17,2F10.7)') '---Win elev/azim:',win_el,win_az       CALBLD 223
C      write(ioutpt,'(12x,a17,5F10.7)') '---Bld_elev :',(bld_el(i),i=1,5)       CALBLD 224
C      write(ioutpt,'(12x,a17,5F10.7)') '---Bld_area :',(bld_ar(i),i=1,5)       CALBLD 225
C      write(ioutpt,'(12x,a17,5F10.7)')'---Bld_ori  :',(ibld_ax(i),i=1,5)       CALBLD 226
C      write(ioutpt,'(12x,a17,2F10.7)') '---Ins/Outs emis:',                    CALBLD 227
C     1                                 <INSIDE-EMISS>,<OUTSIDE-EMISS>          CALBLD 228
C      write(ioutpt,'(12x,a17,2f10.7)') '---Trans hem/bea:',                    CALBLD 229
C     1                                 <TRHEMIS>,<TRANG1>                      CALBLD 230
C      write(ioutpt,'(12x,a17, f10.7)') '---RBHEMIS      :',<RBHEMIS>           CALBLD 231
C      write(ioutpt,'(12x,a20)')        '---forward-------'                     CALBLD 232
C      write(ioutpt,'(12x,a20,3f10.7)') '---Stack trans  :',                    CALBLD 233
C     1                                 (Ts(ipr),ipr=1,3)                       CALBLD 234
C      write(ioutpt,'(12x,a20,6f10.7)') '---Stack refl.  :',                    CALBLD 235
C     1                                 (Rs(ipr),ipr=1,3)                       CALBLD 236
C      write(ioutpt,'(12x,a20,6f10.7)') '---Layer a_beam  ',                    CALBLD 237
C    1                                 (a_b(il),il=1,6)                         CALBLD 238
C     write(ioutpt,'(12x,a20,6f10.7)') '---Layer a_diff  ',                     CALBLD 239
C    1                                 (a_d(il),il=1,6)                         CALBLD 240
C     write(ioutpt,'(12x,a20)')        '---backward------'                      CALBLD 241
C     write(ioutpt,'(12x,a20,3f10.7)') '---Stack trans  :',                     CALBLD 242
C    1                                 (rTs(ipr),ipr=1,3)                       CALBLD 243
C     write(ioutpt,'(12x,a20,6f10.7)') '---Stack refl.  :',                     CALBLD 244
C    1                                 (rRs(ipr),ipr=1,3)                       CALBLD 245
C     write(ioutpt,'(12x,a20,6f10.7)') '---Layer a_beam  ',                     CALBLD 246
C    1                                 (ra_b(il),il=1,6)                        CALBLD 247
C     write(ioutpt,'(12x,a20,6f10.7)') '---Layer a_diff  ',                     CALBLD 248
C    1                                 (ra_d(il),il=1,6)                        CALBLD 249
 1000 end                                                                       CALBLD 250
      SUBROUTINE COV_SCH(IADJ, XMIN, XMAX, COV, TI)                             COVSCH   2
      COMMON        // AA(75 000 000)                                           -048ar   1
      INTEGER          IA(75 000 000)                                           -048ar   2
      EQUIVALENCE  (IA(1), AA(1))                                               //       4
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     BLIND    2
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        FLOOR1   3
      COMMON /TIME  / IDOY, IDOW, IDSTF, ISCHR, ISCDAY, iDSdates(6),            -044e5r  1
     1                IMO, IDAY, IYR, IHR, CLOCK(10), IDSFLG,                   HOLID1   4
     2                MONDSC(12), MONLEN(12), MONSDA(12), IEODMR                /TIME/   4
      COMMON  /WINV/   UW,TDIR,ADIRO,TDIF,ADIFO,ADIRI,ADIFI,FI,FO,              /WINV/   2
     1                 AGOLGE,QDIR,QDIF,QTRANS,QABS,QSOLG,GSHACO,               /WINV/   3
     2                 QCON,CFMW,SHMULT,SOLGMX,UWW,CWIN(4),CSUM(4),             /WINV/   4
     3                 ANWIN(4),ANSUM(4),QIRWI                                  VISBL    7
C                                                                               COVSCH   7
C         DIFFERENT TYPES                                                       COVSCH   8
      GO TO (9999, 100, 200, 300), IADJ                                         COVSCH   9
C         SCHEDULE                                                              COVSCH  10
  100 CONTINUE                                                                  COVSCH  11
      IVAL= <@MWIB-SCH> + ISCHR                                                 COVSCH  12
      FAC = AA(IVAL)                                                            COVSCH  13
      GOTO 900                                                                  COVSCH  14
C         SOLAR INTENSITY ON WINDOW (AFTER SHADOW CALC)                         COVSCH  15
  200 CONTINUE                                                                  COVSCH  16
      IVAL = <@MWIB-TRIG> + ISCHR                                               COVSCH  17
      TRIG = AA(IVAL)                                                           COVSCH  18
      SIMVAL = QDIF + QDIR                                                      COVSCH  19
      GOTO 500                                                                  COVSCH  20
C         ROOM-TEMP                                                             COVSCH  21
  300 CONTINUE                                                                  COVSCH  22
      IVAL = <@MWIB-TRIG> + ISCHR                                               COVSCH  23
      TRIG = AA(IVAL)                                                           COVSCH  24
      SIMVAL = TI                                                               COVSCH  25
      GOTO 500                                                                  COVSCH  26
C         COMPARE TO TRIGGER                                                    COVSCH  27
  500 IF (SIMVAL.GT.TRIG) THEN                                                  COVSCH  28
         FAC = 1.                                                               COVSCH  29
      ELSE                                                                      COVSCH  30
         GOTO 9999                                                              COVSCH  31
      END IF                                                                    COVSCH  32
C         GET REAL COVERAGE                                                     COVSCH  33
  900 COV= FAC * (XMAX-XMIN) + XMIN                                             COVSCH  34
 9999 END                                                                       COVSCH  35
      SUBROUTINE ANG_SCH(IADJ,XMIN,XMAX,h,s,ANG,TI)                             ANGSCH   2
      COMMON        // AA(75 000 000)                                           -048ar   1
      INTEGER          IA(75 000 000)                                           -048ar   2
      EQUIVALENCE  (IA(1), AA(1))                                               //       4
      COMMON /BLCONS/ PI,PIH,RAD,M,NBLPR,NGLPR,NSTPR,DEGRAD                     /BLCONS/ 2
      real PI,PIH,RAD,DEGRAD                                                    BLIND1   1
      integer M,NBLPR,NGLPR,NSTPR                                               /BLCONS/ 4
      COMMON /BLGEO/ sun_el,sun_az,win_el,win_az,                               /BLGEO/  2
     1               bld_el,bld_ar,ibld_ax,bldcov                               VISBL    1
      DIMENSION BLD_EL(5),BLD_AR(5),IBLD_AX(5)                                  /BLGEO/  4
      COMMON /BLRUN/ IL,NL,IS                                                   /BLRUN/  2
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     BLIND    2
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        FLOOR1   3
      COMMON /TIME  / IDOY, IDOW, IDSTF, ISCHR, ISCDAY, iDSdates(6),            -044e5r  1
     1                IMO, IDAY, IYR, IHR, CLOCK(10), IDSFLG,                   HOLID1   4
     2                MONDSC(12), MONLEN(12), MONSDA(12), IEODMR                /TIME/   4
      COMMON  /WINV/   UW,TDIR,ADIRO,TDIF,ADIFO,ADIRI,ADIFI,FI,FO,              /WINV/   2
     1                 AGOLGE,QDIR,QDIF,QTRANS,QABS,QSOLG,GSHACO,               /WINV/   3
     2                 QCON,CFMW,SHMULT,SOLGMX,UWW,CWIN(4),CSUM(4),             /WINV/   4
     3                 ANWIN(4),ANSUM(4),QIRWI                                  VISBL    7
C                                                                               ANGSCH   8
C              SLAT ANGLE CONTROL TYPES: IADJ =                                 VISBL  292
C              1: NONE                                                          VISBL  293
C              2: SCHEDULE                                                      VISBL  294
C              3: SOLAR INTENSITY ON WINDOW                                     VISBL  295
C              4: ROOM TEMPERATURE                                              VISBL  296
      GO TO (9999, 100, 200, 300), IADJ                                         ANGSCH  10
C         SCHEDULE                                                              ANGSCH  11
  100 CONTINUE                                                                  ANGSCH  12
      IVAL= <@MWIS-SCH> + ISCHR                                                 ANGSCH  13
      FAC = AA(IVAL)                                                            ANGSCH  14
C              ANGLE BETWEEN SLAT AND PLANE NORMAL TO WINDOW IN                 VISBL  297
C              DIRECTION OF SLATS (RANGES FROM 90 TO -90, WITH                  VISBL  298
C              ANG = 0 FOR SLAT PERPENDICULAR TO WINDOW PLANE,                  VISBL  299
C              ANG = 90 FOR OUTSIDE OF SLAT FACING OUT AND SLAT                 VISBL  300
C              PLANE PARALLEL TO WINDOW PLANE                                   VISBL  301
      IF (FAC.GT.0.) THEN                                                       ANGSCH  15
         ANG= FAC * XMAX                                                        ANGSCH  16
      ELSE                                                                      ANGSCH  17
         ANG= ABS(FAC) * XMIN                                                   ANGSCH  18
      END IF                                                                    ANGSCH  19
C              CLOCKWISE ANGLE BETWEEN WINDOW PLANE AND SLAT                    VISBL  302
      ANG = PIH - ANG                                                           VISBL  303
      GO TO 9999                                                                VISBL  304
C         SOLAR INTENSITY ON WINDOW (AFTER SHADOW CALC)                         ANGSCH  21
  200 CONTINUE                                                                  ANGSCH  22
      IVAL = <@MWIS-TRIG> + ISCHR                                               VISBL  305
      TRIG = AA(IVAL)                                                           ANGSCH  24
      SIMVAL = <DIRWISH> + <DIFWISH>                                            VISBL  306
      GOTO 500                                                                  ANGSCH  26
C         ROOM-TEMP                                                             ANGSCH  27
  300 CONTINUE                                                                  ANGSCH  28
      IVAL = <@MWIS-TRIG> + ISCHR                                               VISBL  307
      TRIG = AA(IVAL)                                                           ANGSCH  30
      SIMVAL = TI                                                               ANGSCH  31
C         COMPARE TO TRIGGER                                                    ANGSCH  33
  500 IF (SIMVAL.GT.TRIG) THEN                                                  ANGSCH  34
C              CLOCKWISE ANGLE BETWEEN WINDOW PLANE AND SLAT                    VISBL  308
         H_S=H/S                                                                ANGSCH  35
C              IF SLAT SEPARATION IS GREATER THAN SLAT WIDTH                    VISBL  309
C              SLATS CANNOT BLOCK SUN EVEN IF FULLY CLOSED;                     VISBL  310
C              SET SLAT ANGLE TO 90 DEG TO MAXIMIZE BLOCKAGE.                   VISBL  311
         IF(H_S.GT.1.0) THEN                                                    VISBL  312
            ANG = 0.                                                            VISBL  313
            GO TO 9998                                                          VISBL  314
         ENDIF                                                                  VISBL  315
         CALL WINSUN(d1,PHIS,d2,win_az,win_el,sun_az,sun_el,IBLD_AX(IL))        ANGSCH  36
C              IF SUN IS IN BACK OF WINDOW (PHIS = PI)                          VISBL  316
C              SET ANGLE TO INPUT ANGLE                                         VISBL  317
         IF(PHIS.GT.PIH) THEN                                                   VISBL  318
            ANG = PIH - DEGRAD*<ANGSLATADJ>                                     VISBL  319
            GO TO 9999                                                          VISBL  320
         ENDIF                                                                  VISBL  321
         IF (PHIS.LE.0.) THEN                                                   ANGSCH  37
            ARG = cos(PHIS)*(0.-H_S)                                            ANGSCH  38
         ELSE                                                                   ANGSCH  39
            ARG = cos(PHIS)*    H_S                                             ANGSCH  40
         END IF                                                                 ANGSCH  41
         IF (ABS(ARG).LE.1.) THEN                                               ANGSCH  42
            ANG=ACOS(ARG)+PHIS                                                  ANGSCH  43
         ELSE                                                                   ANGSCH  44
            IF (PHIS.LT.0.) THEN                                                ANGSCH  45
               ANG=-PIH-PHIS                                                    ANGSCH  46
            ELSE                                                                ANGSCH  47
               ANG= PIH-PHIS                                                    ANGSCH  48
            ENDIF                                                               ANGSCH  49
         ENDIF                                                                  ANGSCH  50
C              RESTRICT TO INPUT RANGE OF SLAT ANGLE                            VISBL  322
 9998    IF ((PIH-ANG).LT.XMIN) ANG=PIH-XMIN                                    VISBL  323
         IF ((PIH-ANG).GT.XMAX) ANG=PIH+XMAX                                    VISBL  324
         GO TO 9999                                                             VISBL  325
      ELSE                                                                      ANGSCH  53
         GOTO 9999                                                              ANGSCH  54
      END IF                                                                    ANGSCH  55
 9999 END                                                                       ANGSCH  58
      subroutine BLDOPT1 (c,b_ax,b_el,w_az,w_el,s_az,s_el,p)                    BLDOPT1  2
c                                                                               BLDOPT1  3
c     Subroutine BLDOPT1 calculates the beam radiation properties of a          BLDOPT1  4
c     2d shading layer consisting of flat slats with known material constants.  BLDOPT1  5
c     The calculation for the reverse direction is done with the rad.source     BLDOPT1  6
c     reflected at the window plane.                                            BLDOPT1  7
      COMMON        // AA(75 000 000)                                           -048ar   1
      INTEGER          IA(75 000 000)                                           -048ar   2
      EQUIVALENCE  (IA(1), AA(1))                                               //       4
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     BLIND    2
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        FLOOR1   3
      COMMON /BLCONS/ PI,PIH,RAD,M,NBLPR,NGLPR,NSTPR,DEGRAD                     /BLCONS/ 2
      real PI,PIH,RAD,DEGRAD                                                    BLIND1   1
      integer M,NBLPR,NGLPR,NSTPR                                               /BLCONS/ 4
      COMMON /BLGEO/ sun_el,sun_az,win_el,win_az,                               /BLGEO/  2
     1               bld_el,bld_ar,ibld_ax,bldcov                               VISBL    1
      DIMENSION BLD_EL(5),BLD_AR(5),IBLD_AX(5)                                  /BLGEO/  4
      COMMON /BLRUN/ IL,NL,IS                                                   /BLRUN/  2
      real c(15),phib,phip,p(16),                                               BLDOPT1 11
     &     co,w,b_el,w_az,w_el,s_az,s_el                                        BLDOPT1 12
      integer b_ax                                                              BLDOPT1 13
c                                                                               BLDOPT1 14
      real J(6),G(6),Q(6),F(6,6),X(4,4),Xinv(4,4),indx(4)                       BLDOPT1 15
     &    ,s_azim,s_elev,b_azim,b_elev                                          BLDOPT1 16
      integer i,k,l                                                             BLDOPT1 17
c                                                                               BLDOPT1 18
      do k=1,8                                                                  BLDOPT1 19
          p(k)=0.                                                               BLDOPT1 20
      end do                                                                    BLDOPT1 21
c                                                                               BLDOPT1 22
c     calculate projected rad. source elevation                                 BLDOPT1 23
      CALL WINSUN(dummy1,phip,dummy2,w_az,w_el,s_az,s_el,ibld_ax(IL))           BLDOPT1 24
      if (phip.ge.pih) goto 300                                                 BLDOPT1 25
c                                                                               BLDOPT1 26
c     calculate slat angle if necessay                                          BLDOPT1 27
      if (abs(b_el).gt.pi)                                                      BLDOPT1 28
     &    b_el=phip+acos(c(3)/c(2)*cos(phip))                                   BLDOPT1 29
c                                                                               BLDOPT1 30
c     initialize the slat angle for calculation                                 BLDOPT1 31
      phib=b_el                                                                 BLDOPT1 32
c                                                                               BLDOPT1 33
c     initialize original rad. source position                                  BLDOPT1 34
      s_azim=s_az                                                               BLDOPT1 35
      s_elev=s_el                                                               BLDOPT1 36
c                                                                               BLDOPT1 37
c     loop twice for forward & reverse side properties                          BLDOPT1 38
      do i=0,2,2                                                                BLDOPT1 39
c                                                                               BLDOPT1 40
c         for reverse side properties, reflect the source position              BLDOPT1 41
c         and calculate new projection                                          BLDOPT1 42
          if (i.eq.2) then                                                      BLDOPT1 43
              call mirror(w_az,w_el,s_az,s_el,s_azim,s_elev)                    BLDOPT1 44
              CALL WINSUN(dummy1,phip,dummy2,w_az,w_el,                         BLDOPT1 45
     1                    s_azim,s_elev,iBLD_AX(IL))                            BLDOPT1 46
              phib = PI - phib                                                  VISBL  328
          end if                                                                BLDOPT1 47
C              EDGE OF BLIND FRACTION FOR WEIGHTING TRANSMITTANCE               VISBL  329
C              AND REFLECTANCE FROM EDGE AND BETWEEN-SLAT PORTIONS              VISBL  330
C              OF BLIND. FEDGE IS RATIO OF AREA SUBTENDED BY                    VISBL  331
C              EDGE OF SLAT TO AREA BETWEEN TOPS OF ADJACENT SLATS              VISBL  332
      GAMMA    = <ANGSLATADJ>*DEGRAD                                            VISBL  333
      COSGAMMA = COS(<ANGSLATADJ>*DEGRAD)                                       VISBL  334
      COSPHIP  = COS(PHIP)                                                      VISBL  335
      IF(COSGAMMA.LT.0.02.OR.COSPHIP.LT.0.02) THEN                              VISBL  336
         FEDGE = 0.                                                             VISBL  337
      ELSE                                                                      VISBL  338
         DEL   = <WLTHICKN>                                                     VISBL  339
         FEDGE = (DEL*COS(PHIP+GAMMA)/COSPHIP) /                                VISBL  340
     1           (<WLSLTD> + DEL/COSGAMMA)                                      VISBL  341
C              CORRECT FOR BUNCHING OF SLATS AT BOTTOM                          VISBL  342
C              WHEN BLIND IS PARTIALLY WITHDRAWN                                VISBL  343
         IF(BLD_AR(IL).LT.0.98) THEN                                            VISBL  344
            BUNCHF = ((1.-BLD_AR(IL))/BLD_AR(IL)) * (DEL/(DEL+<WLSLTD>))        VISBL  345
            FEDGE = FEDGE + BUNCHF * (1.-FEDGE)                                 VISBL  346
         ENDIF                                                                  VISBL  347
      ENDIF                                                                     VISBL  348
c                                                                               BLDOPT1 48
c         calculate beam properties                                             BLDOPT1 49
          w=c(3)                                                                BLDOPT1 50
          co=cos(phip)                                                          BLDOPT1 51
          if (co.ne.0.) w=c(2)*cos(phib-phip)/co                                BLDOPT1 52
C              DIRECT-DIRECT TRANSMITTANCE                                      VISBL  349
          p(1+i)=1-abs(w)/c(3)                                                  BLDOPT1 53
          if (p(1+i).lt.0.) p(1+i)=0.                                           BLDOPT1 54
          p(1+i) = p(1+i) * (1.-fedge)                                          VISBL  350
C              DIRECT-DIRECT REFLECTANCE                                        VISBL  351
          p(2+i)=0.                                                             BLDOPT1 55
c          write(*,*) 'D/D   ',p(1+i)                                           BLDOPT1 56
c                                                                               BLDOPT1 57
c         calculate view factors for direct-hemispherical properties            BLDOPT1 58
          call VIEWFAC(c(2),c(3),phib,phip,F)                                   BLDOPT1 59
c                                                                               BLDOPT1 60
c         setup exchange matrix X for direct-hemispherical properties           BLDOPT1 61
          do k=3,5,2                                                            BLDOPT1 62
              do l=3,6                                                          BLDOPT1 63
                  X(k-2,l-2)=-c(12)*F(k,l)-c(10)*F(k+1,l)                       BLDOPT1 64
                  X(k-1,l-2)=-c(10)*F(k,l)-c(11)*F(k+1,l)                       BLDOPT1 65
              end do                                                            BLDOPT1 66
          end do                                                                BLDOPT1 67
          do k=1,4                                                              BLDOPT1 68
              X(k,k)=X(k,k)+1.                                                  BLDOPT1 69
          end do                                                                BLDOPT1 70
                                                                                BLDOPT1 71
c         invert X                                                              BLDOPT1 72
          call invert(X,Xinv,indx,4,4)                                          BLDOPT1 73
c                                                                               BLDOPT1 74
c         calculate angular dependence of the slat properties are               BLDOPT1 75
c         taken into account                                                    BLDOPT1 76
c         first determine angles for slat normal vector                         BLDOPT1 77
          call ABS_ANG(w_az,w_el,b_ax,b_el,b_azim,b_elev)                       BLDOPT1 78
          co=cos_u(b_azim,b_elev,s_azim,s_elev)                                 BLDOPT1 79
          call BLDDEP(c,co,t1,r1,r1b,t2,r2,r2b)                                 BLDOPT1 80
c                                                                               BLDOPT1 81
c         setup sources for direct-hemispherical properties                     BLDOPT1 82
          if (co.ge.0.) then                                                    BLDOPT1 83
              Q(3)=t1+t2                                                        BLDOPT1 84
              Q(4)=r1+r2                                                        BLDOPT1 85
          else                                                                  BLDOPT1 86
              Q(3)=r1b+r2b                                                      BLDOPT1 87
              Q(4)=t1+t2                                                        BLDOPT1 88
          end if                                                                BLDOPT1 89
         cdp=abs(cos(phib-phip))                                                BLIND2  62
         Q(3)=Q(3)*cdp		                                                        BLIND2  63
         Q(4)=Q(4)*cdp		                                                        BLIND2  64
c                                                                               BLDOPT1 90
c         calculate radiosities                                                 BLDOPT1 91
          J(1)=0.                                                               BLDOPT1 92
          J(2)=0.                                                               BLDOPT1 93
          do k=3,6                                                              BLDOPT1 94
              J(k)=0.                                                           BLDOPT1 95
              do l=3,4                                                          BLDOPT1 96
                  J(k)=J(k)+Xinv(k-2,l-2)*Q(l)                                  BLDOPT1 97
              end do                                                            BLDOPT1 98
          end do                                                                BLDOPT1 99
c                                                                               BLDOPT1100
c         calculate direct-hemispherical properites                             BLDOPT1101
          do k=1,6                                                              BLDOPT1102
              G(k)=0.                                                           BLDOPT1103
              do l=3,6                                                          BLDOPT1104
                  G(k)=G(k)+F(k,l)*J(l)                                         BLDOPT1105
              end do                                                            BLDOPT1106
          end do                                                                BLDOPT1107
C              DIRECT-HEMI TRANSMITTANCE                                        VISBL  352
          p(5+i)=G(2)*FEDGE                                                     VISBL  353
C              DIRECT-HEMI REFLECTANCE. EDGE REFLECTANCE IS ASSUMED             VISBL  354
C              SAME AS REFLECTANCE OF FRONT SIDE OF SLAT, C(8)                  VISBL  355
          p(6+i)=G(1)*(1.-FEDGE) + FEDGE*C(8)                                   VISBL  356
      end do                                                                    BLDOPT1110
c                                                                               BLDOPT1111
 300  end                                                                       BLDOPT1112
      subroutine BLDDEP(c,co,t1,r1,r1b,t2,r2,r2b)                               BDLDEP   2
c                                                                               BDLDEP   3
c     angular dependence of slat properties                                     BDLDEP   4
c *** no angular dependence assumed here                                        BDLDEP   5
      COMMON /BLCONS/ PI,PIH,RAD,M,NBLPR,NGLPR,NSTPR,DEGRAD                     /BLCONS/ 2
      real PI,PIH,RAD,DEGRAD                                                    BLIND1   1
      integer M,NBLPR,NGLPR,NSTPR                                               /BLCONS/ 4
      real c(15),co,t1,r1,r1b,t2,r2,r2b                                         BDLDEP   7
c                                                                               BDLDEP   8
      co=co                                                                     BDLDEP   9
      t1=c(4)                                                                   BDLDEP  10
      r1=c(5)                                                                   BDLDEP  11
      r1b=c(6)                                                                  BDLDEP  12
      t2=c(7)                                                                   BDLDEP  13
      r2=c(8)                                                                   BDLDEP  14
      r2b=c(9)                                                                  BDLDEP  15
      end                                                                       BDLDEP  16
      subroutine BLDOPT2 (ISOLVIS,ISUNUP,c,b_el,p)                              VISBL  357
c                                                                               BLDOPT2  3
c     Subroutine BLDOPT2 calculates the diffuse and IR radiative                BLDOPT2  4
c     properties of a 2d shading layer consisting of flat slats with            BLDOPT2  5
c     known material constants.                                                 BLDOPT2  6
c                                                                               BLDOPT2  7
      COMMON        // AA(75 000 000)                                           -048ar   1
      INTEGER          IA(75 000 000)                                           -048ar   2
      EQUIVALENCE  (IA(1), AA(1))                                               //       4
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     BLIND    2
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        FLOOR1   3
      COMMON /BLGEO/ sun_el,sun_az,win_el,win_az,                               /BLGEO/  2
     1               bld_el,bld_ar,ibld_ax,bldcov                               VISBL    1
      DIMENSION BLD_EL(5),BLD_AR(5),IBLD_AX(5)                                  /BLGEO/  4
      COMMON /BLRUN/ IL,NL,IS                                                   /BLRUN/  2
      COMMON /BLCONS/ PI,PIH,RAD,M,NBLPR,NGLPR,NSTPR,DEGRAD                     /BLCONS/ 2
      real PI,PIH,RAD,DEGRAD                                                    BLIND1   1
      integer M,NBLPR,NGLPR,NSTPR                                               /BLCONS/ 4
      real c(NBLPR),p(NSTPR),ri,rib,rli,rlib,B_EL                               BLDOPT2 10
      real J(6),G(6),Q(6),F(6,6),X(4,4),Xinv(4,4),indx(4)                       BLDOPT2 11
      integer k,l,isolvis,isunup                                                VISBL  362
c                                                                               BLDOPT2 13
c     calculate view factors (slat is divided into two equal parts)             BLDOPT2 14
      call VIEWFAC(c(2),c(3),b_el,pih,F)                                        BLDOPT2 15
      IF(ISOLVIS.EQ.0.AND.ISUNUP.NE.1) GO TO 1000                               VISBL  363
c                                                                               BLDOPT2 16
c     setup exchange matrix X for diffuse properties                            BLDOPT2 17
      do k=3,5,2                                                                BLDOPT2 18
          do l=3,6                                                              BLDOPT2 19
              X(k-2,l-2)=-c(12)*F(k,l)-c(10)*F(k+1,l)                           BLDOPT2 20
              X(k-1,l-2)=-c(10)*F(k,l)-c(11)*F(k+1,l)                           BLDOPT2 21
          end do                                                                BLDOPT2 22
      end do                                                                    BLDOPT2 23
      do k=1,4                                                                  BLDOPT2 24
          X(k,k)=X(k,k)+1.                                                      BLDOPT2 25
      end do                                                                    BLDOPT2 26
c                                                                               BLDOPT2 27
c     invert X                                                                  BLDOPT2 28
      call invert(X,Xinv,indx,4,4)                                              BLDOPT2 29
c                                                                               BLDOPT2 30
c     define sources S(1)=1,others=0                                            BLDOPT2 31
      Q(3)=c(12)*F(3,1)+c(10)*F(4,1)                                            BLDOPT2 32
      Q(4)=c(10)*F(3,1)+c(11)*F(4,1)                                            BLDOPT2 33
      Q(5)=c(12)*F(5,1)+c(10)*F(6,1)                                            BLDOPT2 34
      Q(6)=c(10)*F(5,1)+c(11)*F(6,1)                                            BLDOPT2 35
c                                                                               BLDOPT2 36
c     calculate radiosities                                                     BLDOPT2 37
      J(1)=1.                                                                   BLDOPT2 38
      J(2)=0.                                                                   BLDOPT2 39
      do k=3,6                                                                  BLDOPT2 40
          J(k)=0.                                                               BLDOPT2 41
          do l=3,6                                                              BLDOPT2 42
              J(k)=J(k)+Xinv(k-2,l-2)*Q(l)                                      BLDOPT2 43
          end do                                                                BLDOPT2 44
      end do                                                                    BLDOPT2 45
c                                                                               BLDOPT2 46
c     calculate diffuse properites                                              BLDOPT2 47
      do k=1,6                                                                  BLDOPT2 48
          G(k)=0.                                                               BLDOPT2 49
          do l=1,6                                                              BLDOPT2 50
              G(k)=G(k)+F(k,l)*J(l)                                             BLDOPT2 51
          end do                                                                BLDOPT2 52
      end do                                                                    BLDOPT2 53
      COSGAMMA = COS(<ANGSLATADJ>*DEGRAD)                                       VISBL  364
      IF(COSGAMMA.LT.0.02) THEN                                                 VISBL  365
         FEDGE = 0.                                                             VISBL  366
      ELSE                                                                      VISBL  367
         DEL = <WLTHICKN>                                                       VISBL  368
         FEDGE = DEL*COSGAMMA/(<WLSLTD>+DEL/COSGAMMA)                           VISBL  369
C              CORRECT FOR BUNCHING OF SLATS AT BOTTOM                          VISBL  370
C              WHEN BLIND IS PARTIALLY WITHDRAWN                                VISBL  371
         IF(BLD_AR(IL).LT.0.98) THEN                                            VISBL  372
            BUNCHF = ((1.-BLD_AR(IL))/BLD_AR(IL)) * (DEL/(DEL+<WLSLTD>))        VISBL  373
            FEDGE = FEDGE + BUNCHF * (1.-FEDGE)                                 VISBL  374
         ENDIF                                                                  VISBL  375
      ENDIF                                                                     VISBL  376
C              FRONT HEMI-HEMI TRANSMITTANCE                                    VISBL  377
      p(9)=G(2)*(1.-FEDGE)                                                      VISBL  378
C              FRONT HEMI-HEMI REFLECTANCE                                      VISBL  379
C              (EDGE OF SLAT IS ASSUMED TO HAVE SAME HEMI-HEMI                  VISBL  380
C              REFLECTANCE AS FRONT SIDE OF SLAT, C(11))                        VISBL  381
      p(10)=G(1)*(1.-FEDGE) + FEDGE*C(11)                                       VISBL  382
c                                                                               BLDOPT2 56
c                                                                               BLDOPT2 57
c     calculate diffuse properties for the reverse side                         BLDOPT2 58
c                                                                               BLDOPT2 59
c     define sources,S(2)=1,others=0                                            BLDOPT2 60
      Q(3)=c(12)*F(3,2)+c(10)*F(4,2)                                            BLDOPT2 61
      Q(4)=c(10)*F(3,2)+c(11)*F(4,2)                                            BLDOPT2 62
      Q(5)=c(12)*F(5,2)+c(10)*F(6,2)                                            BLDOPT2 63
      Q(6)=c(10)*F(5,2)+c(11)*F(6,2)                                            BLDOPT2 64
c                                                                               BLDOPT2 65
c     calculate radiosities                                                     BLDOPT2 66
      J(1)=0.                                                                   BLDOPT2 67
      J(2)=1.                                                                   BLDOPT2 68
      do k=3,6                                                                  BLDOPT2 69
          J(k)=0.                                                               BLDOPT2 70
          do l=3,6                                                              BLDOPT2 71
              J(k)=J(k)+Xinv(k-2,l-2)*Q(l)                                      BLDOPT2 72
          end do                                                                BLDOPT2 73
      end do                                                                    BLDOPT2 74
c                                                                               BLDOPT2 75
c     calculate diffuse properites for the reverse side                         BLDOPT2 76
      do k=1,6                                                                  BLDOPT2 77
          G(k)=0.                                                               BLDOPT2 78
          do l=1,6                                                              BLDOPT2 79
              G(k)=G(k)+F(k,l)*J(l)                                             BLDOPT2 80
          end do                                                                BLDOPT2 81
      end do                                                                    BLDOPT2 82
C              BACK HEMI-HEMI TRANSMITTANCE                                     VISBL  383
      p(11)=G(1)*(1.-FEDGE)                                                     VISBL  384
C              BACK HEMI-HEMI REFLECTANCE                                       VISBL  385
      p(12)=G(2)*(1.-FEDGE) + FEDGE*C(11)                                       VISBL  386
 1000 CONTINUE                                                                  VISBL  387
      IF(ISOLVIS.NE.0) GO TO 2000                                               VISBL  388
c                                                                               BLDOPT2 85
c     calculate IR properties                                                   BLDOPT2 86
c     same set of view factors is used as for diffuse properties                BLDOPT2 87
c                                                                               BLDOPT2 88
c     setup exchange matrix X for IR properties                                 BLDOPT2 89
c     first define reflectances r=1-t-e                                         BLDOPT2 90
      ri=1-c(13)-c(14)                                                          BLDOPT2 91
      rib=1-c(13)-c(15)                                                         BLDOPT2 92
      do k=3,5,2                                                                BLDOPT2 93
          do l=3,6                                                              BLDOPT2 94
              X(k-2,l-2)=-rib*F(k,l)-c(13)*F(k+1,l)                             BLDOPT2 95
              X(k-1,l-2)=-c(13)*F(k,l)-ri*F(k+1,l)                              BLDOPT2 96
          end do                                                                BLDOPT2 97
      end do                                                                    BLDOPT2 98
      do k=1,4                                                                  BLDOPT2 99
          X(k,k)=X(k,k)+1.                                                      BLDOPT2100
      end do                                                                    BLDOPT2101
c                                                                               BLDOPT2102
c     invert X                                                                  BLDOPT2103
      call invert(X,Xinv,indx,4,4)                                              BLDOPT2104
c                                                                               BLDOPT2105
c     define sources                                                            BLDOPT2106
      Q(3)=c(15)                                                                BLDOPT2107
      Q(4)=c(14)                                                                BLDOPT2108
      Q(5)=Q(3)                                                                 BLDOPT2109
      Q(6)=Q(4)                                                                 BLDOPT2110
c                                                                               BLDOPT2111
c     calculate radiosities                                                     BLDOPT2112
      J(1)=0.                                                                   BLDOPT2113
      J(2)=0.                                                                   BLDOPT2114
      do k=3,6                                                                  BLDOPT2115
          J(k)=0.                                                               BLDOPT2116
          do l=3,6                                                              BLDOPT2117
              J(k)=J(k)+Xinv(k-2,l-2)*Q(l)                                      BLDOPT2118
          end do                                                                BLDOPT2119
      end do                                                                    BLDOPT2120
c                                                                               BLDOPT2121
c     calculate effective emittances                                            BLDOPT2122
      do k=1,6                                                                  BLDOPT2123
          G(k)=0.                                                               BLDOPT2124
          do l=3,6                                                              BLDOPT2125
              G(k)=G(k)+F(k,l)*J(l)                                             BLDOPT2126
          end do                                                                BLDOPT2127
      end do                                                                    BLDOPT2128
C              FRONT IR EMITTANCE                                               VISBL  389
C              (EDGE EMITTANCE IS ASSUMED SAME AS FRONT SIDE                    VISBL  390
C              EMITTANCE)                                                       VISBL  391
      p(14)=G(1)*(1.-FEDGE) + FEDGE*C(14)                                       VISBL  392
C              BACK IR EMIITANCE                                                VISBL  393
      p(16)=G(2)*(1.-FEDGE) + FEDGE*C(14)                                       VISBL  394
c                                                                               BLDOPT2131
c     define sources for IR transmittance tli                                   BLDOPT2132
      Q(3)=rib*F(3,1)+c(13)*F(4,1)                                              BLDOPT2133
      Q(4)=c(13)*F(3,1)+ri*F(4,1)                                               BLDOPT2134
      Q(5)=rib*F(5,1)+c(13)*F(6,1)                                              BLDOPT2135
      Q(6)=c(13)*F(5,1)+ri*F(6,1)                                               BLDOPT2136
c                                                                               BLDOPT2137
c     calculate radiosities                                                     BLDOPT2138
      J(1)=1.                                                                   BLDOPT2139
      J(2)=0.                                                                   BLDOPT2140
      do k=3,6                                                                  BLDOPT2141
          J(k)=0.                                                               BLDOPT2142
          do l=3,6                                                              BLDOPT2143
              J(k)=J(k)+Xinv(k-2,l-2)*Q(l)                                      BLDOPT2144
          end do                                                                BLDOPT2145
      end do                                                                    BLDOPT2146
c                                                                               BLDOPT2147
c     calculate IR transmittance tli                                            BLDOPT2148
      do k=1,6                                                                  BLDOPT2149
          G(k)=0.                                                               BLDOPT2150
          do l=1,6                                                              BLDOPT2151
              G(k)=G(k)+F(k,l)*J(l)                                             BLDOPT2152
          end do                                                                BLDOPT2153
      end do                                                                    BLDOPT2154
C              FRONT IR TRANMITTANCE (EDGE TRANSMITTANCE IS                     VISBL  395
C              ASSUMED TO BE ZERO)                                              VISBL  396
      p(13)=G(2)*(1.-FEDGE)                                                     VISBL  397
      rli=G(1)                                                                  BLDOPT2156
c                                                                               BLDOPT2157
c     define sources for IR transmittance tlib                                  BLDOPT2158
      Q(3)=rib*F(3,2)+c(13)*F(4,2)                                              BLDOPT2159
      Q(4)=c(13)*F(3,2)+ri*F(4,2)                                               BLDOPT2160
      Q(5)=rib*F(5,2)+c(13)*F(6,2)                                              BLDOPT2161
      Q(6)=c(13)*F(5,2)+ri*F(6,2)                                               BLDOPT2162
c                                                                               BLDOPT2163
c     calculate radiosities                                                     BLDOPT2164
      J(1)=0.                                                                   BLDOPT2165
      J(2)=1.                                                                   BLDOPT2166
      do k=3,6                                                                  BLDOPT2167
          J(k)=0.                                                               BLDOPT2168
          do l=3,6                                                              BLDOPT2169
              J(k)=J(k)+Xinv(k-2,l-2)*Q(l)                                      BLDOPT2170
          end do                                                                BLDOPT2171
      end do                                                                    BLDOPT2172
c                                                                               BLDOPT2173
c     calculate IR transmittance tlib                                           BLDOPT2174
      do k=1,6                                                                  BLDOPT2175
          G(k)=0.                                                               BLDOPT2176
          do l=1,6                                                              BLDOPT2177
              G(k)=G(k)+F(k,l)*J(l)                                             BLDOPT2178
          end do                                                                BLDOPT2179
      end do                                                                    BLDOPT2180
C              FRONT IR TRANMITTANCE (EDGE TRANSMITTANCE IS                     VISBL  398
C              ASSUMED TO BE ZERO)                                              VISBL  399
      p(15)=G(1)*(1.-FEDGE)                                                     VISBL  400
      rlib=G(2)                                                                 BLDOPT2182
 2000 CONTINUE                                                                  VISBL  401
      end                                                                       BLDOPT2183
      subroutine VIEWFAC(s,h,phib,phip,F)                                       VIEWFAC  2
c                                      5 2                                      VIEWFAC  3
c     Calculation of view factors    3 6                                        VIEWFAC  4
c                                  1 4                                          VIEWFAC  5
c                                  1                                            VIEWFAC  6
                                                                                VIEWFAC  7
      real s,h,phib,phip,F(6,6)                                                 VIEWFAC  8
      real l(6),l3,l5,d1,d2,d3,d4,d5,d6,h2,ht,w,a,co                            VIEWFAC  9
      integer i,j                                                               VIEWFAC 10
c                                                                               VIEWFAC 11
      h2=h*h                                                                    VIEWFAC 12
      ht=h*2                                                                    VIEWFAC 13
      co=cos(phip)                                                              VIEWFAC 14
      if (abs(co).lt.0.001) co=0.                                               VIEWFAC 15
      w=ht                                                                      VIEWFAC 16
      if (co.ne.0.) w=s*cos(phib-phip)/co                                       VIEWFAC 17
      l3=s*h/abs(w)                                                             VIEWFAC 18
      if (l3.gt.s) l3=s                                                         VIEWFAC 19
      l5=s-l3                                                                   VIEWFAC 20
      a=ht*cos(phib)                                                            VIEWFAC 21
      d1=sqrt(s*s+h2+a*s)                                                       VIEWFAC 22
      d2=sqrt(s*s+h2-a*s)                                                       VIEWFAC 23
      d3=sqrt(l3*l3+h2+a*l3)                                                    VIEWFAC 24
      d4=sqrt(l3*l3+h2-a*l3)                                                    VIEWFAC 25
      d5=sqrt(l5*l5+h2-a*l5)                                                    VIEWFAC 26
      d6=sqrt(l5*l5+h2+a*l5)                                                    VIEWFAC 27
      F(1,1)=0.                                                                 VIEWFAC 28
      F(1,2)=(d1+d2-2*s)/ht                                                     VIEWFAC 29
      F(1,3)=(h+l3-d3)/ht                                                       VIEWFAC 30
      F(1,4)=(h+l3-d4)/ht                                                       VIEWFAC 31
      F(1,5)=(l5+d3-d1)/ht                                                      VIEWFAC 32
      F(1,6)=(l5+d4-d2)/ht                                                      VIEWFAC 33
      F(2,2)=0.                                                                 VIEWFAC 34
      F(2,3)=(l3+d5-d2)/ht                                                      VIEWFAC 35
      F(2,4)=(l3+d6-d1)/ht                                                      VIEWFAC 36
      F(2,5)=(h+l5-d5)/ht                                                       VIEWFAC 37
      F(2,6)=(h+l5-d6)/ht                                                       VIEWFAC 38
      F(3,3)=0.                                                                 VIEWFAC 39
      F(3,4)=(d3+d4-ht)/(2*l3)                                                  VIEWFAC 40
      F(3,5)=0.                                                                 VIEWFAC 41
      F(3,6)=(d2+h-d4-d5)/(2*l3)                                                VIEWFAC 42
      F(4,4)=0.                                                                 VIEWFAC 43
      F(4,5)=(d1+h-d3-d6)/(2*l3)                                                VIEWFAC 44
      F(4,6)=0.                                                                 VIEWFAC 45
      F(5,5)=0.                                                                 VIEWFAC 46
      F(5,6)=0.                                                                 VIEWFAC 47
      if (l5.gt.0.) F(5,6)=(d5+d6-ht)/(2*l5)                                    VIEWFAC 48
      F(6,6)=0.                                                                 VIEWFAC 49
      l(1)=h                                                                    VIEWFAC 50
      l(2)=h                                                                    VIEWFAC 51
      l(3)=l3                                                                   VIEWFAC 52
      l(4)=l3                                                                   VIEWFAC 53
      l(5)=l5                                                                   VIEWFAC 54
      l(6)=l5                                                                   VIEWFAC 55
      do i=2,6                                                                  VIEWFAC 56
          do j=1,i-1                                                            VIEWFAC 57
              F(i,j)=0.                                                         VIEWFAC 58
              if (l(i).gt.0.) F(i,j)=F(j,i)*l(j)/l(i)                           VIEWFAC 59
          end do                                                                VIEWFAC 60
      end do                                                                    VIEWFAC 61
      end                                                                       VIEWFAC 62
      subroutine GLASOPT1(cphi,g,p)                                             GLASOPT1 2
c                                                                               GLASOPT1 3
c     calculate and/or setup the beam optical properties of a glass             GLASOPT1 4
c     layeras a function of incidence angle                                     GLASOPT1 5
c                                                                               GLASOPT1 6
      IMPLICIT CHARACTER*1 (A-Z)                                                GLASOPT1 7
      COMMON /BLCONS/ PI,PIH,RAD,M,NBLPR,NGLPR,NSTPR,DEGRAD                     /BLCONS/ 2
      real PI,PIH,RAD,DEGRAD                                                    BLIND1   1
      integer M,NBLPR,NGLPR,NSTPR                                               /BLCONS/ 4
      real cphi,g(nglpr),p(nstpr)                                               GLASOPT1 9
      integer i                                                                 GLASOPT110
                                                                                GLASOPT111
      call TRphi(cphi,g(3),g(4),g(5),p(1),p(2))                                 GLASOPT112
      call TRphi(cphi,g(3),g(5),g(4),p(3),p(4))                                 GLASOPT113
c     forward/backward transmittance must be the same                           GLASOPT114
      p(3)=p(1)                                                                 GLASOPT115
c     no direct-hemispherical transmittance/reflectance                         GLASOPT116
      do i=5,8                                                                  GLASOPT117
          p(i)=0.                                                               GLASOPT118
      end do                                                                    GLASOPT119
      end                                                                       GLASOPT120
      subroutine GLASOPT2(ISOLVIS,ISUNUP,g,p)                                   VISBL  402
c                                                                               GLASOPT2 3
c     calculate and/or setup the diffuse/IR properties of a glass layer         GLASOPT2 4
c                                                                               GLASOPT2 5
      IMPLICIT CHARACTER*1 (A-Z)                                                GLASOPT2 6
      COMMON /BLCONS/ PI,PIH,RAD,M,NBLPR,NGLPR,NSTPR,DEGRAD                     /BLCONS/ 2
      real PI,PIH,RAD,DEGRAD                                                    BLIND1   1
      integer M,NBLPR,NGLPR,NSTPR                                               /BLCONS/ 4
      real g(nglpr),p(nstpr)                                                    GLASOPT2 8
      integer isolvis,isunup                                                    VISBL  403
c                                                                               GLASOPT2 9
c     Dirty solution for hemisph. property:= beam property at the               GLASOPT210
c     mean polar angle (1 rad). Correct: do integration, c.f. Window4.0 manual  GLASOPT211
c                                                                               GLASOPT212
      real c                                                                    GLASOPT213
      IF(ISOLVIS.EQ.0.AND.ISUNUP.NE.1) GO TO 1000                               VISBL  404
C              COS(1.0)                                                         VISBL  405
      C = 0.5403                                                                VISBL  406
      call TRphi(c,g(3),g(4),g(5),p(9),p(10))                                   GLASOPT215
      call TRphi(c,g(3),g(5),g(4),p(11),p(12))                                  GLASOPT216
c     forward/backward transmittance must be the same                           GLASOPT217
      p(11)=p(9)                                                                GLASOPT218
 1000 CONTINUE                                                                  VISBL  407
      IF(ISOLVIS.NE.0) GO TO 2000                                               VISBL  408
c                                                                               GLASOPT219
c     set the IR properties                                                     GLASOPT220
      p(13)=g(9)                                                                GLASOPT221
      p(14)=g(10)                                                               GLASOPT222
      p(15)=g(9)                                                                GLASOPT223
      p(16)=g(11)                                                               GLASOPT224
 2000 CONTINUE                                                                  VISBL  409
      end                                                                       GLASOPT225
      subroutine TRphi(cs,tf0,rf0,rb0,tfp,rfp)                                  TRPHI    2
c                                                                               TRPHI    3
c     Calculate T(cphi),R(cphi) for given T(0),R(0)                             TRPHI    4
c     cphi=cos(angle sun/pane-normal)                                           TRPHI    5
c     Algorithm for uncoated/coated glass, c.f. Window4.0 manual.               TRPHI    6
c                                                                               TRPHI    7
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                         /FILES/  3
     2              , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                    /FILES/  4
     3                IHRREP(3), IHRPAS(2)                                      /FILES/  5
      real ng                                                                   TRPHI    9
c                                                                               TRPHI   10
      err=0.001                                                                 TRPHI   11
      betaf=tf0*tf0-rf0*rf0+2*rf0+1.                                            TRPHI   12
      betab=tf0*tf0-rb0*rb0+2*rb0+1.                                            TRPHI   13
      r0f=(betaf-sqrt(betaf*betaf-4.*(2.-rf0)*rf0))/(2.*(2.-rf0))               TRPHI   14
      r0b=(betab-sqrt(betab*betab-4.*(2.-rb0)*rb0))/(2.*(2.-rb0))               TRPHI   15
      t0f=1.-r0f                                                                TRPHI   16
      ab=log(r0f*tf0/(rf0-r0f))                                                 TRPHI   17
      ng=(1.+sqrt(r0f))/(1.-sqrt(r0f))                                          TRPHI   18
      cg=sqrt(1.-(1.-cs*cs)/(ng*ng))                                            TRPHI   19
      IF (abs(r0f-r0b)/(r0f+r0b).LT.err) THEN                                   TRPHI   20
c        uncoated glass                                                         TRPHI   21
         s1=(ng*cs-cg)/(ng*cs+cg)                                               TRPHI   22
         s2=(ng*cg-cs)/(ng*cg+cs)                                               TRPHI   23
         rp=.5*(s1*s1+s2*s2)                                                    TRPHI   24
         tp=1.-rp                                                               TRPHI   25
c        coated glass                                                           TRPHI   26
      ELSE IF (t0f.GT.0.645) THEN                                               TRPHI   27
c        Clear data                                                             TRPHI   28
            tcl =-0.0015+( 3.355+(-3.840+( 1.460  +0.0288*cs)*cs)*cs)*cs        TRPHI   29
            rcl = 0.999 +(-0.563+( 2.043+(-2.532  +1.054 *cs)*cs)*cs)*cs        TRPHI   30
     1           -tcl                                                           TRPHI   31
            tp  =t0f*tcl                                                        TRPHI   32
            rp  =r0f*(1.-rcl)+rcl                                               TRPHI   33
           ELSE                                                                 TRPHI   34
C        Bronze data                                                            TRPHI   35
            tbnz=-0.002 +( 2.813+(-2.341+(-0.05725+0.599 *cs)*cs)*cs)*cs        TRPHI   36
            rbnz= 0.997 +(-1.868+( 6.513+(-7.862  +3.225 *cs)*cs)*cs)*cs        TRPHI   37
     1           -tbnz                                                          TRPHI   38
            tp  =t0f*tbnz                                                       TRPHI   39
            rp  =r0f*(1.-rbnz)+rbnz                                             TRPHI   40
      END IF                                                                    TRPHI   41
      tfp=tp*tp*exp(-ab/cg)/(1.-rp*rp*exp(-2.*ab/cg))                           TRPHI   42
      rfp=rp*(1.+tfp*exp(-ab/cg))                                               TRPHI   43
      end                                                                       TRPHI   44
      subroutine STACKOPT(n,s,Tst,Rst,a1,ad)                                    STACKOPT 2
c                                                                               STACKOPT 3
c     subroutine to calculate the stack properites of an n-layer                STACKOPT 4
c     glazing system. Layer #1 is exposed to the radiation (beam/hemisph.)      STACKOPT 5
c                                                                               STACKOPT 6
      IMPLICIT CHARACTER*1 (A-Z)                                                STACKOPT 7
      COMMON /BLCONS/ PI,PIH,RAD,M,NBLPR,NGLPR,NSTPR,DEGRAD                     /BLCONS/ 2
      real PI,PIH,RAD,DEGRAD                                                    BLIND1   1
      integer M,NBLPR,NGLPR,NSTPR                                               /BLCONS/ 4
      integer n                                                                 STACKOPT 9
      real s(16,5),Tst(3),Rst(3),a1(5),ad(5)                                    STACKOPT10
c                                                                               STACKOPT11
      real T1s,T2s,Tds,R1s(5+1),R2s(5+1),Rds(5+1),t1(5),t2(5),td(5)             STACKOPT12
     &    ,den,al1,ald,al1b,aldb                                                STACKOPT13
      integer i                                                                 STACKOPT14
c                                                                               STACKOPT15
c     calculate layer transmittance/stack reflectance                           STACKOPT16
      R1s(n+1)=0.                                                               STACKOPT17
      R2s(n+1)=0.                                                               STACKOPT18
      Rds(n+1)=0.                                                               STACKOPT19
      do i=n,1,-1                                                               STACKOPT20
          den=1-s(12,i)*Rds(i+1)                                                STACKOPT21
          t1(i)=s(1,i)/(1-s(4,i)*R1s(i+1))                                      STACKOPT22
          t2(i)=(s(5,i)+t1(i)*(R1s(i+1)*s(8,i)+R2s(i+1)*s(12,i)))/den           STACKOPT23
          td(i)=s(9,i)/den                                                      STACKOPT24
          R1s(i)=s(2,i)+t1(i)*R1s(i+1)*s(3,i)                                   STACKOPT25
          R2s(i)=s(6,i)+t2(i)*Rds(i+1)*s(11,i)                                  STACKOPT26
     &                +t1(i)*(R1s(i+1)*s(7,i)+R2s(i+1)*s(11,i))                 STACKOPT27
          Rds(i)=s(10,i)+td(i)*Rds(i+1)*s(11,i)                                 STACKOPT28
      end do                                                                    STACKOPT29
      Rst(1)=R1s(1)                                                             STACKOPT30
      Rst(2)=R2s(1)                                                             STACKOPT31
      Rst(3)=Rds(1)                                                             STACKOPT32
c                                                                               STACKOPT33
c     calculate layer absorptances/stack transmittance                          STACKOPT34
      T1s=1.                                                                    STACKOPT35
      T2s=0.                                                                    STACKOPT36
      Tds=1.                                                                    STACKOPT37
      do i=1,n                                                                  STACKOPT38
          al1  =abs( 1.-s(1,i)-s(2,i)-s(5,i)-s(6,i) )                           STACKOPT39
          ald  =abs( 1.-s(9,i)-s(10,i) )                                        STACKOPT40
          al1b =abs( 1.-s(3,i)-s(4,i)-s(7,i)-s(8,i) )                           STACKOPT41
          aldb =abs( 1.-s(11,i)-s(12,i) )                                       STACKOPT42
          a1(i)=abs( T1s*(al1+t2(i)*Rds(i+1)*aldb                               STACKOPT43
     &              +t1(i)*(R1s(i+1)*al1b+R2s(i+1)*aldb))                       STACKOPT44
     &              +T2s*(ald+td(i)*Rds(i+1)*aldb) )                            STACKOPT45
          ad(i)=abs( Tds*(ald+td(i)*Rds(i+1)*aldb) )                            STACKOPT46
          T2s  =abs( T1s*t2(i)+T2s*td(i) )                                      STACKOPT47
          T1s  =abs( T1s*t1(i) )                                                STACKOPT48
          Tds  =abs( Tds*td(i) )                                                STACKOPT49
      end do                                                                    STACKOPT50
      Tst(1)=T1s                                                                STACKOPT51
      Tst(2)=T2s                                                                STACKOPT52
      Tst(3)=Tds                                                                STACKOPT53
      end                                                                       STACKOPT54
      function cos_u(a1,e1,a2,e2)                                               COS_U    2
c     calculates the cosine between 2 unit length vectors                       COS_U    3
c     given by azimuth angles a and elevations e                                COS_U    4
c                                                                               COS_U    5
      real cos_u,a1,e1,a2,e2                                                    COS_U    6
      cos_u=cos(e1)*cos(e2)*cos(a1-a2) + sin(e1)*sin(e2)                        VISBL  410
      end                                                                       COS_U   12
                                                                                COS_U   13
      SUBROUTINE WINSUN (SW_AZ, SW_ELPROJ, SW_EL,                               WINSUN   2
     1                   WIN_AZ, WIN_EL, SUN_AZ, SUN_EL, IHO)                   WINSUN   3
C                                                                               WINSUN   4
C Subroutine to transform the location of the sun (given by SUN_AZ and          WINSUN   5
C SUN_EL) into the system of a window (given by WIN_AZ, WIN_EL). The            WINSUN   6
C output depends on the value of `ho` and gives for both cases the angles       WINSUN   7
C in the windowsystem. All angles are Radiant. The following angles are valid   WINSUN   8
C for a South facing. If the sun stands in the back of the wall (z<=0) then     WINSUN   9
C all angles are set PI. IF sun_el=0, no sun, means all=PI.                     WINSUN  10
C                                                                               WINSUN  11
C INPUT   SUN_AZ  : Azimut of the sun [noon=0, -=am]                            WINSUN  12
C         SUN_EL  : Elevation of the sun [between SUN_AZ and sun]               WINSUN  13
C         WIN_AZ  : Azimut of the window [0=South, PI/2=WEST]                   WINSUN  14
C         WIN_EL  : Elevation of the window [0=vertical window, pi/2            VISBL  411
C         0=facing up]                                                          VISBL  412
C         iHO     : Shading-Slats horizontal=1, vertical=2                      WINSUN  16
C OUTPUT  SW_AZ   : Angle of the sun in the plane of the direction of the       WINSUN  17
C                   shading-slats and the normalvector of the window            WINSUN  18
C                   [0=noon, +=pm (when HO=true), +=up (when HO=fales)]         WINSUN  19
C         SW_ELPROJ Angle of the sun in the plane of the normal to shading-     WINSUN  20
C                   slats in the window-plane and the normal to the window      WINSUN  21
C                   [0=normal to window, +=up (when HO=1), +=am (when HO=2),    WINSUN  22
C                    -PI/2 < SW_ELPROJ < PI/2  else SW_ELPROJ=PI]               WINSUN  23
C         SW_EL   : Absolute Elevation of the sun in the system of the window.  WINSUN  24
C SW_AZ is not calculated (comments below)                                      WINSUN  25
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                         /FILES/  3
     2              , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                    /FILES/  4
     3                IHRREP(3), IHRPAS(2)                                      /FILES/  5
      COMMON  /REPORT/ IREPRT(4,37),IPRG,IUNIQV(100),IUNIQS(100),IUNIQL         BIGNAM   1
      COMMON /BLRUN/ IL,NL,IS                                                   /BLRUN/  2
      COMMON /BLCONS/ PI,PIH,RAD,M,NBLPR,NGLPR,NSTPR,DEGRAD                     /BLCONS/ 2
      real PI,PIH,RAD,DEGRAD                                                    BLIND1   1
      integer M,NBLPR,NGLPR,NSTPR                                               /BLCONS/ 4
C                                                                               VISBL  413
      SUNDOTWIN = COS(SUN_EL)*COS(WIN_EL)*                                      VISBL  414
     1           ( COS(SUN_AZ)*COS(WIN_AZ)+SIN(SUN_AZ)*SIN(WIN_AZ) )            VISBL  415
     2          + SIN(SUN_EL)*SIN(WIN_EL)                                       VISBL  416
      IF(SUNDOTWIN.LE.0.) THEN                                                  VISBL  417
         SW_EL = PI                                                             VISBL  418
         SW_ELPROJ = PI                                                         VISBL  419
      ELSE                                                                      VISBL  420
         SW_EL = ACOS( SUNDOTWIN )                                              VISBL  421
         IF(IHO.EQ.1) THEN                                                      VISBL  422
c              HORIZONTAL SLATS                                                 VISBL  423
            APR = ATAN(SIN(SUN_EL)/ABS(COS(SUN_EL)*COS(WIN_AZ-SUN_AZ)))         VISBL  424
            SW_ELPROJ = APR - WIN_EL                                            VISBL  425
         ELSE                                                                   VISBL  426
C              VERTICAL SLATS (WORKS ONLY FOR VERTICAL WINDOWS)                 VISBL  427
            SW_ELPROJ = PIH - (WIN_AZ-SUN_AZ)                                   VISBL  428
         ENDIF                                                                  VISBL  429
      ENDIF                                                                     VISBL  430
      if(IREPRT(1,35).ne.0.and.IREPRT(1,8).ne.0)                                WINSUN  53
     1    write(ioutpt,999) WIN_AZ, WIN_EL, SUN_AZ, SUN_EL,                     WINSUN  54
     1                  SW_EL, SW_ELPROJ, IHO, IL                               WINSUN  55
  999 FORMAT(15x,'---WINSUN :',6F12.6,2I5)                                      WINSUN  56
      END                                                                       WINSUN  57
      subroutine mirror(na,ne,ea,ee,esa,ese)                                    MIRROR   2
c                                                                               MIRROR   3
c     calculate the mirror vector (azimuth,elevation)                           MIRROR   4
c     _  _   _ _ _                                                              MIRROR   5
c     e'=e-2(n.e)n                                                              MIRROR   6
c                                                                               MIRROR   7
      COMMON /BLCONS/ PI,PIH,RAD,M,NBLPR,NGLPR,NSTPR,DEGRAD                     /BLCONS/ 2
      real PI,PIH,RAD,DEGRAD                                                    BLIND1   1
      integer M,NBLPR,NGLPR,NSTPR                                               /BLCONS/ 4
      real na,ne,ea,ee,esa,ese,c,cn,ce,e1,e2,e3                                 MIRROR   9
c                                                                               MIRROR  10
      c=2*cos_u(na,ne,ea,ee)                                                    MIRROR  11
      cn=cos(ne)                                                                MIRROR  12
      ce=cos(ee)                                                                MIRROR  13
      e1=ce*cos(ea)-c*cn*cos(na)                                                MIRROR  14
      e2=ce*sin(ea)-c*cn*sin(na)                                                MIRROR  15
      e3=sin(ee)-c*sin(ne)                                                      MIRROR  16
      if(abs(e2).lt.0.00001) then                                               VISBL  431
         e2 = 0.00001                                                           VISBL  432
         if(e2.lt.0.) e2 = -0.00001                                             VISBL  433
      endif                                                                     VISBL  434
      esa = -atan(e1/e2) - pih                                                  VISBL  435
      ese=asin(e3)                                                              MIRROR  22
      end                                                                       MIRROR  23
      subroutine ABS_ANG(w_az,w_el,b_ax,b_el,b_azim,b_elev)                     ABS_ANG  2
c                                                                               ABS_ANG  3
c     calculate the absolute spherical angles of slat normal                    ABS_ANG  4
c     vector                                                                    ABS_ANG  5
c                                                                               ABS_ANG  6
      real w_az,w_el,b_el,b_azim,b_elev                                         ABS_ANG  7
      integer b_ax                                                              ABS_ANG  8
C FOLLOWING ASSUMES WE WANT AZIMUTH AND ELEVATION OF NORMAL                     VISBL  436
C VECTOR POINTING OUT FROM OUTSIDE OF SLAT. IT IS ASSUMED THAT                  VISBL  437
C A VERTICAL SLAT HAS B_ELEV = 0 AND A HORIZONTAL UPWARD-FACING                 VISBL  438
C SLAT HAS B_ELEV = PI/2; AND THAT IF THE NORMAL FACES                          VISBL  439
C SOUTH THAT B_AZIM = 0.                                                        VISBL  440
      COMMON /BLCONS/ PI,PIH,RAD,M,NBLPR,NGLPR,NSTPR,DEGRAD                     /BLCONS/ 2
      real PI,PIH,RAD,DEGRAD                                                    BLIND1   1
      integer M,NBLPR,NGLPR,NSTPR                                               /BLCONS/ 4
      IF(B_AX.EQ.1) THEN                                                        VISBL  442
         B_AZIM = W_AZ                                                          VISBL  443
         B_ELEV = B_EL +  W_EL                                                  VISBL  444
         IF(B_ELEV.GT.PIH) THEN                                                 VISBL  445
            B_ELEV = PI - B_ELEV                                                VISBL  446
            B_AZIM = B_AZIM + PI                                                VISBL  447
         ENDIF                                                                  VISBL  448
      ELSE                                                                      VISBL  449
         B_AZIM = W_AZ + B_EL                                                   VISBL  450
         B_ELEV = W_EL                                                          VISBL  451
      ENDIF                                                                     VISBL  452
c                                                                               VISBL  453
C      if (b_ax.eq.0) then                                                      VISBL  454
C          b_azim=w_az                                                          VISBL  455
C          b_elev=w_el+b_el                                                     VISBL  456
C      else                                                                     VISBL  457
c         not valid for vertical slats in non-vertical windows!                 VISBL  458
C         b_azim=w_az+b_el                                                      VISBL  459
C          b_elev=w_el                                                          VISBL  460
C      end if                                                                   VISBL  461
      end                                                                       ABS_ANG 18
      SUBROUTINE invert(a, y, indx, np, n)                                      INVERT   2
                                                                                INVERT   3
      INTEGER   np, n                                                           INVERT   4
      DIMENSION a(np,np), y(np,np), indx(np)                                    INVERT   5
      INTEGER   i, j, d                                                         INVERT   6
                                                                                INVERT   7
      DO 12 i=1,n                                                               INVERT   8
          DO 11 j=1,n                                                           INVERT   9
              y(i,j)=0.                                                         INVERT  10
 11       CONTINUE                                                              INVERT  11
          y(i,i) = 1.                                                           INVERT  12
 12   CONTINUE                                                                  INVERT  13
                                                                                INVERT  14
      CALL LUDCMP(a,n,np,indx,d)                                                INVERT  15
                                                                                INVERT  16
      DO 13 j=1,n                                                               INVERT  17
          CALL LUBKSB(a,n,np,indx,y(1,j))                                       INVERT  18
 13   CONTINUE                                                                  INVERT  19
      END                                                                       INVERT  20
      SUBROUTINE LUDCMP(A,N,NP,INDX,D)                                          LUDCMP   2
      PARAMETER (NMAX=100,TINY=1.0E-20)                                         LUDCMP   3
      DIMENSION A(NP,NP),INDX(N),VV(NMAX)                                       LUDCMP   4
      INTEGER   D                                                               LUDCMP   5
c                                                                               LUDCMP   6
      D=1                                                                       LUDCMP   7
      DO 12 I=1,N                                                               LUDCMP   8
          AAMAX=0.                                                              LUDCMP   9
          DO 11 J=1,N                                                           LUDCMP  10
              IF (ABS(A(I,J)).GT.AAMAX) AAMAX=ABS(A(I,J))                       LUDCMP  11
   11     CONTINUE                                                              LUDCMP  12
c                                                                               LUDCMP  13
          IF (AAMAX.EQ.0.) PAUSE 'Singular matrix.'                             LUDCMP  14
              VV(I)=1./AAMAX                                                    LUDCMP  15
c                                                                               LUDCMP  16
   12 CONTINUE                                                                  LUDCMP  17
c                                                                               LUDCMP  18
      DO 19 J=1,N                                                               LUDCMP  19
          IF (J.GT.1) THEN                                                      LUDCMP  20
              DO 14 I=1,J-1                                                     LUDCMP  21
                  SUM=A(I,J)                                                    LUDCMP  22
                  IF (I.GT.1)THEN                                               LUDCMP  23
                      DO 13 K=1,I-1                                             LUDCMP  24
                          SUM=SUM-A(I,K)*A(K,J)                                 LUDCMP  25
   13                 CONTINUE                                                  LUDCMP  26
c                                                                               LUDCMP  27
                      A(I,J)=SUM                                                LUDCMP  28
                  ENDIF                                                         LUDCMP  29
   14         CONTINUE                                                          LUDCMP  30
          ENDIF                                                                 LUDCMP  31
          AAMAX=0.                                                              LUDCMP  32
          DO 16 I=J,N                                                           LUDCMP  33
              SUM=A(I,J)                                                        LUDCMP  34
              IF (J.GT.1)THEN                                                   LUDCMP  35
                  DO 15 K=1,J-1                                                 LUDCMP  36
                      SUM=SUM-A(I,K)*A(K,J)                                     LUDCMP  37
   15             CONTINUE                                                      LUDCMP  38
                  A(I,J)=SUM                                                    LUDCMP  39
              ENDIF                                                             LUDCMP  40
c                                                                               LUDCMP  41
              DUM=VV(I)*ABS(SUM)                                                LUDCMP  42
              IF (DUM.GE.AAMAX) THEN                                            LUDCMP  43
                  IMAX=I                                                        LUDCMP  44
                  AAMAX=DUM                                                     LUDCMP  45
              ENDIF                                                             LUDCMP  46
   16     CONTINUE                                                              LUDCMP  47
c                                                                               LUDCMP  48
          IF (J.NE.IMAX)THEN                                                    LUDCMP  49
              DO 17 K=1,N                                                       LUDCMP  50
                  DUM=A(IMAX,K)                                                 LUDCMP  51
                  A(IMAX,K)=A(J,K)                                              LUDCMP  52
                  A(J,K)=DUM                                                    LUDCMP  53
   17         CONTINUE                                                          LUDCMP  54
c                                                                               LUDCMP  55
              D=-D                                                              LUDCMP  56
              VV(IMAX)=VV(J)                                                    LUDCMP  57
          ENDIF                                                                 LUDCMP  58
c                                                                               LUDCMP  59
          INDX(J)=IMAX                                                          LUDCMP  60
          IF(J.NE.N)THEN                                                        LUDCMP  61
              IF(A(J,J).EQ.0.) A(J,J)=TINY                                      LUDCMP  62
c                                                                               LUDCMP  63
              DUM=1./A(J,J)                                                     LUDCMP  64
              DO 18 I=J+1,N                                                     LUDCMP  65
                  A(I,J)=A(I,J)*DUM                                             LUDCMP  66
   18         CONTINUE                                                          LUDCMP  67
c                                                                               LUDCMP  68
          ENDIF                                                                 LUDCMP  69
   19 CONTINUE                                                                  LUDCMP  70
c                                                                               LUDCMP  71
      IF(A(N,N).EQ.0.) A(N,N)=TINY                                              LUDCMP  72
      RETURN                                                                    LUDCMP  73
      END                                                                       LUDCMP  74
      SUBROUTINE LUBKSB(A,N,NP,INDX,B)                                          LUBKSB   2
      DIMENSION A(NP,NP),INDX(N),B(N)                                           LUBKSB   3
      II=0                                                                      LUBKSB   4
c                                                                               LUBKSB   5
      DO 12 I=1,N                                                               LUBKSB   6
          LL=INDX(I)                                                            LUBKSB   7
          SUM=B(LL)                                                             LUBKSB   8
          B(LL)=B(I)                                                            LUBKSB   9
          IF (II.NE.0)THEN                                                      LUBKSB  10
              DO 11 J=II,I-1                                                    LUBKSB  11
                  SUM=SUM-A(I,J)*B(J)                                           LUBKSB  12
   11         CONTINUE                                                          LUBKSB  13
          ELSE IF (SUM.NE.0.) THEN                                              LUBKSB  14
              II=I                                                              LUBKSB  15
          ENDIF                                                                 LUBKSB  16
c                                                                               LUBKSB  17
          B(I)=SUM                                                              LUBKSB  18
   12 CONTINUE                                                                  LUBKSB  19
c                                                                               LUBKSB  20
      DO 14 I=N,1,-1                                                            LUBKSB  21
          SUM=B(I)                                                              LUBKSB  22
          IF(I.LT.N)THEN                                                        LUBKSB  23
              DO 13 J=I+1,N                                                     LUBKSB  24
                  SUM=SUM-A(I,J)*B(J)                                           LUBKSB  25
   13         CONTINUE                                                          LUBKSB  26
          ENDIF                                                                 LUBKSB  27
c                                                                               LUBKSB  28
          B(I)=SUM/A(I,I)                                                       LUBKSB  29
   14 CONTINUE                                                                  LUBKSB  30
      RETURN                                                                    LUBKSB  31
      END                                                                       LUBKSB  32
      SUBROUTINE BLDCONV (touts, tins, AR)                                      BLDCONV  2
c                                                                               BLDCONV  3
c         calculates the effactive convective conductances of                   BLDCONV  4
c         BLIND adjacent gaps. As the gasses are equal, only one                BLDCONV  5
c         property-list in needed. gap1 =out, gap2 =in, gap3 =both              BLDCONV  6
c                                                                               BLDCONV  7
      COMMON        // AA(75 000 000)                                           -048ar   1
      INTEGER          IA(75 000 000)                                           -048ar   2
      EQUIVALENCE  (IA(1), AA(1))                                               //       4
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     BLIND    2
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        FLOOR1   3
      COMMON /BLRUN/ IL,NL,IS                                                   /BLRUN/  2
      COMMON /BLGEO/ sun_el,sun_az,win_el,win_az,                               /BLGEO/  2
     1               bld_el,bld_ar,ibld_ax,bldcov                               VISBL    1
      DIMENSION BLD_EL(5),BLD_AR(5),IBLD_AX(5)                                  /BLGEO/  4
      COMMON /BLCONS/ PI,PIH,RAD,M,NBLPR,NGLPR,NSTPR,DEGRAD                     /BLCONS/ 2
      real PI,PIH,RAD,DEGRAD                                                    BLIND1   1
      integer M,NBLPR,NGLPR,NSTPR                                               /BLCONS/ 4
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                         /FILES/  3
     2              , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                    /FILES/  4
     3                IHRREP(3), IHRPAS(2)                                      /FILES/  5
      dimension thick(3),temp(3), Tmean(3), dtemp(3),                           BLDCONV 14
     1          XNU(3), cond(3)                                                 BLDCONV 15
                                                                                BLDCONV 16
c******************                                                             BLDCONV 17
c     write(ioutpt,'(12x,a20)') '--- CONVECTION ---'                            BLDCONV 18
c******************                                                             BLDCONV 19
c         store old pointers                                                    BLDCONV 20
      MWLstore=mwl                                                              BLDCONV 21
      ISstore=IS                                                                BLDCONV 22
      ILstore=IL                                                                BLDCONV 23
C         get BLIND data                                                        BLDCONV 24
      IS=2*IL-1                                                                 BLDCONV 25
      MWL=<MWISTC>                                                              BLDCONV 26
      h=<WLSLTD>                                                                BLDCONV 27
      s=<WLSLTW>                                                                BLDCONV 28
      d=h*sin(PIH-<WLANG>)                                                      BLDCONV 29
c         get BLIND temp from WINDOW                                            BLDCONV 30
      IG=IL                                                                     BLDCONV 31
      temp(2) = <GLAZTEMP>                                                      BLDCONV 32
c         data of adjacent solid layers and gaps                                BLDCONV 33
C         outside of BLIND                                                      BLDCONV 34
      IF (ILstore.EQ.1) THEN                                                    BLDCONV 35
         ISdata=2                                                               BLDCONV 36
         thick(1)= 1.E-5                                                        BLDCONV 37
         temp(1) = touts                                                        BLDCONV 38
      ELSE                                                                      BLDCONV 39
         IS=2*ILstore-2                                                         BLDCONV 40
         ISdata=IS                                                              BLDCONV 41
         MWL=<MWISTC>                                                           BLDCONV 42
         thick(1)=<WLTHICKN>                                                    BLDCONV 43
         IG=ILstore-1                                                           BLDCONV 44
         temp(1) = <GLAZTEMP>                                                   BLDCONV 45
         IF (temp(1).EQ.0.) temp(1)=288.                                        BLDCONV 46
      END IF                                                                    BLDCONV 47
C         inside of BLIND                                                       BLDCONV 48
      IF (ILstore.EQ.NL) THEN                                                   BLDCONV 49
         thick(2)= 1.E-5                                                        BLDCONV 50
         temp(3) = tins                                                         BLDCONV 51
      ELSE                                                                      BLDCONV 52
         IS=2*ILstore                                                           BLDCONV 53
         MWL=<MWISTC>                                                           BLDCONV 54
         thick(2)=<WLTHICKN>                                                    BLDCONV 55
         IG=IL+1                                                                BLDCONV 56
         temp(3) = <GLAZTEMP>                                                   BLDCONV 57
      END IF                                                                    BLDCONV 58
c         check temperatures                                                    BLDCONV 59
      DO IT=1,3                                                                 BLDCONV 60
         IF (temp(IT).EQ.0.) temp(IT)=288.                                      BLDCONV 61
      END DO                                                                    BLDCONV 62
C         get left data                                                         BLDCONV 63
      thick(3)=thick(1)+thick(2)                                                BLDCONV 64
C         calc mean gap temperature                                             BLDCONV 65
      Tmean(1)=0.5*(temp(1)+temp(2))                                            BLDCONV 66
      Tmean(2)=0.5*(temp(2)+temp(3))                                            BLDCONV 67
      Tmean(3)=0.5*(temp(1)+temp(3))                                            BLDCONV 68
C         calc temp gradient                                                    BLDCONV 69
      dtemp(1)=abs(temp(1)-temp(2))                                             BLDCONV 70
      dtemp(2)=abs(temp(2)-temp(3))                                             BLDCONV 71
      dtemp(3)=abs(temp(1)-temp(3))                                             BLDCONV 72
C         source layer for data                                                 BLDCONV 73
      IS=ISdata                                                                 BLDCONV 74
      MWL=<MWISTC>                                                              BLDCONV 75
C         all 3 conductances                                                    BLDCONV 76
      DO I=1,3                                                                  BLDCONV 77
         dt=Tmean(I)-273.                                                       BLDCONV 78
C         calculate temp. dependant properties                                  BLDCONV 79
         con  =<WLCOND>       + dt * <WLDCOND>*1.E-5                            BLDCONV 80
         visc =<WLVIS>*1.E-5  + dt * <WLDVIS> *1.E-7                            BLDCONV 81
         dens =<WLDENS>       + dt * <WLDDENS>                                  BLDCONV 82
         pr   =<WLPR>         + dt * <WLDPR>                                    BLDCONV 83
C         calculate conductances                                                BLDCONV 84
         GR=9.81*dens**2.*thick(I)**3.*dtemp(I)/(Tmean(I)*visc)                 BLDCONV 85
         RA=GR*pr                                                               BLDCONV 86
         XNUa=RA**0.402                                                         BLDCONV 87
         XNUb=0.0303*XNUa                                                       BLDCONV 88
         XNUc=1.+XNUb**11.                                                      BLDCONV 89
         XNU(I)=XNUc**0.091                                                     BLDCONV 90
         XNUX=(1.+(0.0303*(RA**0.402))**11.)**0.091                             BLDCONV 91
c******************                                                             BLDCONV 92
c     write(*,*) 'NUSSELT :',GR, pr,RA,XNUa, XNUb, XNUc, XNU(I), XNUX           BLDCONV 93
c******************                                                             BLDCONV 94
         cond(I) = con*XNU(I)/thick(I)                                          BLDCONV 95
      END DO                                                                    BLDCONV 96
C         calc. F, the air transmittance of the BLIND                           BLDCONV 97
      IF (BLD_AR(IL).EQ.0.) THEN                                                BLDCONV 98
         F=1.                                                                   BLDCONV 99
      ELSE IF (h.GE.s) THEN                                                     BLDCONV100
              F=1.-s**2./(h*(s+d))                                              BLDCONV101
           ELSE                                                                 BLDCONV102
              F=d/(s+d)                                                         BLDCONV103
      END IF                                                                    BLDCONV104
C         calc effective factor (multiplier for effective cond.)                BLDCONV105
c         and write data to GLASS-TYPE block                                    BLDCONV106
c         outside gap (if existing)                                             BLDCONV107
      IF (ILstore.NE.1) THEN                                                    BLDCONV108
         condeff=     AR *((1.-F)*cond(1) + F*thick(3)/thick(1)*COND(3))        BLDCONV109
     1           +(1.-AR)*thick(3)/thick(1)*COND(3)                             BLDCONV110
         eff    =condeff*thick(1)/(XNU(1)*con)                                  BLDCONV111
c*******************                                                            BLDCONV112
c     write(ioutpt,'(a10,F10.7)') '--- eff : ',eff, condeff                     BLDCONV113
c*******************                                                            BLDCONV114
         IL=ILstore-1                                                           BLDCONV115
         <GPCOND> = eff*<WLCOND>                                                BLDCONV116
         <GPDCOND>= eff*<WLDCOND>                                               BLDCONV117
      END IF                                                                    BLDCONV118
c         inside gap (if existing)                                              BLDCONV119
      IF (ILstore.NE.NL) THEN                                                   BLDCONV120
         condeff=     AR *((1.-F)*cond(2) + F*thick(3)/thick(2)*COND(3))        BLDCONV121
     1           +(1.-AR)*thick(3)/thick(2)*COND(3)                             BLDCONV122
         eff    =condeff*thick(2)/(XNU(2)*con)                                  BLDCONV123
c*******************                                                            BLDCONV124
c     write(ioutpt,'(a10,2F10.7)') '--- eff : ',eff, condeff                    BLDCONV125
c*******************                                                            BLDCONV126
         IL=ILstore                                                             BLDCONV127
         <GPCOND> = eff*<WLCOND>                                                BLDCONV128
         <GPDCOND>= eff*<WLDCOND>                                               BLDCONV129
      END IF                                                                    BLDCONV130
c         set old pointers back                                                 BLDCONV131
      IL=ILstore                                                                BLDCONV132
      IS=ISstore                                                                BLDCONV133
      MWL=MWLstore                                                              BLDCONV134
C************************                                                       BLDCONV135
c     write(ioutpt,'(12x,a10, I15  )') 'ILstore    ', Ilstore                   BLDCONV136
c     write(ioutpt,'(12x,a10,3F15.7)') 'TEMP      :', (temp(i), i=1,3)          BLDCONV137
c     write(ioutpt,'(12x,a10,3F15.7)') 'TEMP-mean :', (tmean(i), i=1,3)         BLDCONV138
c     write(ioutpt,'(12x,a10,3F15.7)') 'TEMP-grad :', (dtemp(i), i=1,3)         BLDCONV139
c     write(ioutpt,'(12x,a10,3F15.7)') 'THICKNESS :', (thick(i), i=1,3)         BLDCONV140
c     write(ioutpt,'(12x,a10,3F15.7)') 'NU        :', (XNU(i), i=1,3)           BLDCONV141
c     write(ioutpt,'(12x,a10,3F15.7)') 'COND      :', (cond(i), i=1,3)          BLDCONV142
c     write(ioutpt,'(12x,a10,2F15.7)') 'F         :', f, ar                     BLDCONV143
c     write(ioutpt,'(12x,a1,3F15.7)') ' '                                       BLDCONV144
c*************************                                                      BLDCONV145
      END                                                                       BLDCONV146
C 3/89 for DOE2  (convection updated and gas input changed)                     THERM    2
C This version of THERM is for use w/DOE2                                       THERM    3
C OP was updated 7/7/89                                                         THERM    4
C                                                                               THERM    5
      subroutine therm(nlayer,tilt,mdir,tout,tin,wso,                           THERM    6
     $ gap,tir,rir,emis,gcon,gvis,gden,gpr,scon,sol,                            THERM    7
     $ theta,flux,rgap,rs,thetas)                                               THERM    8
C                                                                               THERM    9
C   controls calculation of heat fluxes                                         THERM   10
C                                                                               THERM   11
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                         /FILES/  3
     2              , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                    /FILES/  4
     3                IHRREP(3), IHRPAS(2)                                      /FILES/  5
      COMMON  /REPORT/ IREPRT(4,37),IPRG,IUNIQV(100),IUNIQS(100),IUNIQL         BIGNAM   1
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     BLIND    2
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        FLOOR1   3
C                                                                               THERM   14
      COMMON  /ZNEWHR/ TZONER, INFCOD,                                          /ZNEWHR/ 2
     1                 QWALQ, QCELQ, QWINC, QWALD, QCELD,QINTW,                 /ZNEWHR/ 3
     2                 QUGF, QUGW, QDOOR, QEQPS, QEQPS2, QPPS,                  /ZNEWHR/ 4
     3                 QPPL, QEQPL, QEQPL2, QINFL,                              /ZNEWHR/ 5
     4                 QTSKL, QSOL, QPLENM, QLITE, QLITEW, QINFS,               /ZNEWHR/ 6
     5                 QELECT, CFMINF, QSUMW, ZCOND, QZS, QZL, QZTOT,           /ZNEWHR/ 7
     6                 QZLTEL,QZEQEL,QZGAS,QZHW,WNDSPZ,MANAGE                   /ZNEWHR/ 8
     7               , QZPEL, QZTLEL                                            /ZNEWHR/ 9
      DIMENSION QYENI(33)                                                       /ZNEWHR/10
      EQUIVALENCE  (QYENI(1), QWALQ)                                            /ZNEWHR/11
      dimension theta(5), thetas(10), gap(5)                                    THERM   16
      dimension rir(10), emis(10), tir(5)                                       THERM   17
      dimension z(10,10), zi(10,10), dtddel(10,10), ddeldt(10,10)               THERM   18
      dimension q(10), hf(10), der(10,5), dhf(10,5)                             THERM   19
      dimension sol (5), sour(5), delta(5), hcgap(5),hrgap(5)                   THERM   20
      dimension scon(5),rgap(5),rs(5)                                           THERM   21
      dimension gcon(5,2),gvis(5,2),gpr(5,2),gden(5,2)                          THERM   22
      real nu                                                                   THERM   23
      COMMON /WCTRL/  IwinReturn, Imsgflg                                       /WCTRL/  2
c              For DLLs, delete Win_MB and enable msgbox.fi                     /WCTRL/  3
#ifndef _DLL                                                                 /* -051     1 */ 
      COMMON /WIN_MB/ MB_OK,MB_ICONSTOP,MB_ICONEXCLAMATION,MB_TASKMODAL,        -051     2
     &                MB_ICONINFORMATION                                        -051     3
#else                                                                        /* -051     4 */ 
      include 'msgbox.fi'                                                       -051     5
#endif                                                                       /* -051     6 */ 
C Stefan-Boltzmann constant                                                     THERM   24
      data sigma /5.6697e-8/                                                    THERM   25
C                                                                               THERM   26
      COMMON        // AA(75 000 000)                                           -048ar   1
      INTEGER          IA(75 000 000)                                           -048ar   2
      EQUIVALENCE  (IA(1), AA(1))                                               //       4
C                                                                               THERM   28
C convergence tolerance (K); no iteration if 0.0 (default)                      THERM   29
      err = <CONVERGENCE-TOL>                                                   THERM   30
C                                                                               THERM   31
      tout2 = tout*tout                                                         THERM   32
      tin2  = tin*tin                                                           THERM   33
      outir = sigma * (tout2*tout2)                                             THERM   34
      rmir = sigma * (tin2*tin2)                                                THERM   35
C                                                                               THERM   36
      index = 0                                                                 THERM   37
      dtmax=0.0                                                                 THERM   38
      dflag = 0                                                                 THERM   39
      nface = 2*nlayer                                                          THERM   40
      do 400 k=1,nface                                                          THERM   41
         hf(k)=0.0                                                              THERM   42
         q(k)=0.0                                                               THERM   43
  400 continue                                                                  THERM   44
C set up ir transfer matrix                                                     THERM   45
      call irmat(tir,rir,nface,z)                                               THERM   46
C guess initial temp dist                                                       THERM   47
      call guess(tout,tin,nlayer,theta,thetas)                                  THERM   48
C invert matrix                                                                 THERM   49
      call matinv(z,zi,nface)                                                   THERM   50
  500 continue                                                                  THERM   51
      index = index+1                                                           THERM   52
C                                                                               THERM   53
      if(IREPRT(1,35).ne.0.and.IREPRT(1,8).ne.0)                                IREPRT  57
     $ write(IOUTPT,999) index,nlayer,err,dflag,tout,tin,                       -030    20
     $              (theta(i),i=1,10),(rs(i),i=1,10)                            -030    21
  999 format(' THERM: index,nlayer,err,dflag,tout,tin,theta,rs=',               THERM   57
     1 2i3,4f12.3/2(1x,10f12.6/))                                               THERM   58
C                                                                               THERM   59
C evaluate radiative components                                                 THERM   60
      call source(thetas,emis,nlayer,outir,rmir,tir,                            THERM   61
     $ rir,sour,der)                                                            THERM   62
C evaluate convective/conductive components of gap                              THERM   63
      call heat(tout,tin,thetas,nlayer,tilt,gap,                                THERM   64
     $  nu,hf,dhf,hcgap,gcon,gvis,gden,gpr,err)                                 THERM   65
C convective indoor film coeff                                                  THERM   66
      call filmi(<HWI>,tout,tin,thetas(nface),tilt,                             -048d    2
     $ hf(nface),dhf(nface,nlayer),hcin,adelt)                                  THERM   68
C convective outdoor film coeff                                                 THERM   69
C film2 needs outside surface temp and outside air temp in rankine              THERM   70
      tsr = thetas(1)*1.8                                                       THERM   71
      toutr = tout*1.8                                                          THERM   72
      tltrad = tilt/57.29578                                                    THERM   73
      call film2(tsr,toutr,tltrad,emis(1),6,wndspz,mdir,hcout,dum)              -048d    3
      hcout = 5.67826*hcout                                                     THERM   75
      dhf(1,1) = 0.                                                             THERM   76
      hf(1) = hcout*(thetas(1)-tout)                                            THERM   77
C ir heat fluxes from sources                                                   THERM   78
      call fluxes(sour,zi,thetas,tin,tout,rmir,outir,nface,q,                   THERM   79
     $ hrgap,hrin,hrout)                                                        THERM   80
C evaluate residuals and derivatives                                            THERM   81
      call nodes(theta,thetas,tin,tout,outir,rmir,hcgap,hrgap,                  THERM   82
     $ hcin,hrin,hcout,hrout,scon,sol,nlayer,dflag,delta,rs,rgap,err)           THERM   83
       if (dflag.eq.1.or.err.eq.0.) go to 600                                   THERM   84
C                                                                               THERM   85
      call dnode(rs,rgap,hrgap,hrin,hrout,                                      THERM   86
     $            der,dhf,ddeldt,nlayer,zi)                                     THERM   87
C invert matrix                                                                 THERM   88
      call matinv(ddeldt,dtddel,nlayer)                                         THERM   89
      IF( IwinReturn .ne. 0 ) RETURN                                            -042L4  18
C calculate new temperature distribution                                        THERM   90
      call dtemp(index,dtddel,delta,theta,                                      THERM   91
     $        nlayer,dtmax,dtmo)                                                THERM   92
C test for convergence                                                          THERM   93
      if (dtmax .gt. err .and. index .lt. 30) then                              THERM   94
         go to 500                                                              THERM   95
C stop iterating if dtmax .le. err or max of 30 iterations reached              THERM   96
      else                                                                      THERM   97
       dflag = 1                                                                THERM   98
       go to 500                                                                THERM   99
      endif                                                                     THERM  100
  600 continue                                                                  THERM  101
       flux = q(nface)+hf(nface)-rmir                                           THERM  102
      return                                                                    THERM  103
      end                                                                       THERM  104
      subroutine dnode(rs,rgap,hrgap,hrin,hrout,                                DNODE    2
     $ der,dhf,ddeldt,nlayer,mat)                                               DNODE    3
C purpose - sets up matrix of the derivative of residuals                       DNODE    4
C           wrt temps. resisuals are functions of temperatures                  DNODE    5
C           through the sources.                                                DNODE    6
C inputs -                                                                      DNODE    7
C   rs - total resistance for each gap, and inside and outside surfaces         DNODE    8
C   rgap - inverse of the sum (hrgap(i) +hcgap(i))                              DNODE    9
C   hrgap - effective radiation coefficient for each gap                        DNODE   10
C   hrin,hrout - effective radiation coeff. for the inside and outside          DNODE   11
C   der - derivatives of ir sources wrt surface temperature                     DNODE   12
C   dhf - derivatives of heat fluxes wrt surface temp                           DNODE   13
C   nlayer - number of layers                                                   DNODE   14
C   mat - inverse of ir transfer matrix                                         DNODE   15
C outputs -                                                                     DNODE   16
C   ddeldt - derivatives of residuals wrt temperatures                          DNODE   17
      dimension der(10,5),dhf(10,5),ddeldt(10,10),mat(10,10)                    DNODE   18
      dimension rs(5),rgap(5),hrgap(5),arhs(5)                                  DNODE   19
      real  mat                                                                 DNODE   20
      do 20 i=1,nlayer                                                          DNODE   21
        do 10 j=1,nlayer                                                        DNODE   22
          ddeldt(i,j) = 0.0                                                     DNODE   23
   10   continue                                                                DNODE   24
   20 continue                                                                  DNODE   25
C set up coefficients for equations                                             DNODE   26
      do 30 i=1,nlayer+1                                                        DNODE   27
      temp1 = 1/rs(i)*rgap(i)                                                   DNODE   28
   30 arhs(i)=temp1*temp1                                                       DNODE   29
C if nlayer = 1 then things are simple                                          DNODE   30
      if (nlayer .eq. 1) then                                                   DNODE   31
        ddeldt(1,1) = 1/rs(1)+arhs(1)*(dhf(1,1)                                 DNODE   32
     $     +der(1,1)-hrout)                                                     DNODE   33
     $     +1/rs(2)+arhs(2)*(dhf(2,1)+der(2,1)-hrin)                            DNODE   34
      else                                                                      DNODE   35
C first and last layers                                                         DNODE   36
           ddeldt(1,1)=1/rs(1)+arhs(1)*(dhf(1,1)-hrout)                         DNODE   37
     $          +1/rs(2)+arhs(2)*(dhf(2,1)-dhf(3,1)-hrgap(1))                   DNODE   38
           ddeldt(1,2)=-1/rs(2)+arhs(2)*(dhf(2,2)-dhf(3,2)                      DNODE   39
     $     +hrgap(1))                                                           DNODE   40
           ddeldt(nlayer,nlayer)=1/rs(nlayer)+arhs(nlayer)                      DNODE   41
     $        *(dhf(2*nlayer-1,nlayer)-dhf(2*nlayer-2,nlayer)                   DNODE   42
     $        -hrgap(nlayer-1))+1/rs(nlayer+1)                                  DNODE   43
     $        +arhs(nlayer+1)*(dhf(2*nlayer,nlayer)-hrin)                       DNODE   44
           ddeldt(nlayer,nlayer-1)=-1/rs(nlayer)+arhs(nlayer)                   DNODE   45
     $        *(dhf(2*nlayer-1,nlayer-1)-dhf(2*nlayer-2,nlayer-1)               DNODE   46
     $          +hrgap(nlayer-1))                                               DNODE   47
     $          +arhs(nlayer+1)*dhf(2*nlayer,nlayer-1)                          DNODE   48
           do 40 k=1,2*nlayer                                                   DNODE   49
              ddeldt(1,1)=ddeldt(1,1)+arhs(1)*mat(1,k)*der(k,1)                 DNODE   50
     $           +arhs(2)*(mat(2,k)-mat(3,k))*der(k,1)                          DNODE   51
              ddeldt(1,2)=ddeldt(1,2)+arhs(2)                                   DNODE   52
     $          *(mat(2,k)-mat(3,k))*der(k,2)+arhs(1)*mat(1,k)*der(k,2)         DNODE   53
              ddeldt(nlayer,nlayer)=ddeldt(nlayer,nlayer)+arhs(nlayer)          DNODE   54
     $          *(mat(2*nlayer-1,k)-mat(2*nlayer-2,k))*der(k,nlayer)            DNODE   55
     $          +arhs(nlayer+1)*mat(2*nlayer,k)*der(k,nlayer)                   DNODE   56
              ddeldt(nlayer,nlayer-1)=ddeldt(nlayer,nlayer-1)                   DNODE   57
     $          +arhs(nlayer)*(mat(2*nlayer-1,k)-mat(2*nlayer-2,k))             DNODE   58
     $          *der(k,nlayer-1)                                                DNODE   59
     $          +arhs(nlayer+1)*mat(2*nlayer,k)*der(k,nlayer-1)                 DNODE   60
           if(nlayer .eq. 2)go to 100                                           DNODE   61
   40      continue                                                             DNODE   62
           do 50 j=3,nlayer                                                     DNODE   63
              j1=j-2                                                            DNODE   64
              do 45 k=1,nlayer                                                  DNODE   65
                 ddeldt(1,j)=ddeldt(1,3)+arhs(1)*(mat(1,k)*der(k,j))            DNODE   66
     $             +arhs(2)*(mat(2,k)-mat(3,k))*der(k,j)                        DNODE   67
                 ddeldt(nlayer,j1)=ddeldt(nlayer,j1)+arhs(nlayer)               DNODE   68
     $             *(mat(2*nlayer-1,k)-mat(2*nlayer-2,k))*der(k,j1)             DNODE   69
     $             +arhs(nlayer+1)*mat(2*nlayer,k)*der(k,j1)                    DNODE   70
   45         continue                                                          DNODE   71
   50       continue                                                            DNODE   72
C intermediate layers                                                           DNODE   73
        do 80 i=2,nlayer-1                                                      DNODE   74
           i1=i+1                                                               DNODE   75
           i2=2*i                                                               DNODE   76
           do 70 j=1,nlayer                                                     DNODE   77
              ddeldt(i,j)=arhs(i)*(dhf(i2-1,j)-dhf(i2-2,j))                     DNODE   78
     $            +arhs(i+1)*(dhf(i2,j)-dhf(i2+1,j))                            DNODE   79
              do 60 k=1,2*nlayer                                                DNODE   80
                 ddeldt(i,j)=ddeldt(i,j)+arhs(i)                                DNODE   81
     $           *(mat(i2-1,k)-mat(i2-2,k))*der(k,j)+arhs(i1)                   DNODE   82
     $           *(mat(i2,k)-mat(i2+1,k))*der(k,j)                              DNODE   83
   60         continue                                                          DNODE   84
   70       continue                                                            DNODE   85
            ddeldt(i,i)=ddeldt(i,i)+1/rs(i)+1/rs(i1)                            DNODE   86
     $       -arhs(i)*hrgap(i-1)-arhs(i1)*hrgap(i)                              DNODE   87
            ddeldt(i,i1)=ddeldt(i,i1)-1/rs(i1)                                  DNODE   88
     $        +arhs(i1)*hrgap(i)                                                DNODE   89
            ddeldt(i,i-1)=ddeldt(i,i-1)-1/rs(i)                                 DNODE   90
     $        +arhs(i)*hrgap(i-1)                                               DNODE   91
   80   continue                                                                DNODE   92
  100 continue                                                                  DNODE   93
      endif                                                                     DNODE   94
      return                                                                    DNODE   95
      end                                                                       DNODE   96
      subroutine dtemp(index,dtddel,delta,theta,                                DTEMP    2
     $     nlayer,dtmax,dtmo)                                                   DTEMP    3
      dimension dtddel(10,10),delta(5),dtheta(5),theta(5)                       DTEMP    4
      dimension thdum(5),told(5)                                                DTEMP    5
C this subroutine computes the new temperature distribution                     DTEMP    6
C dtmax is the maximum absolute temperature change                              DTEMP    7
      dtmo=dtmax                                                                DTEMP    8
      dtmax=0.0                                                                 DTEMP    9
      do 200 i=1,nlayer                                                         DTEMP   10
        dtheta(i) = 0.0                                                         DTEMP   11
        do 100 j=1,nlayer                                                       DTEMP   12
          dtheta(i)=dtheta(i)-dtddel(i,j)*delta(j)                              DTEMP   13
  100   continue                                                                DTEMP   14
        told(i)=thdum(i)                                                        DTEMP   15
        thdum(i) = theta(i)                                                     DTEMP   16
        dtmax = amax1(dtmax,abs(dtheta(i)))                                     DTEMP   17
        if(index .gt. 1 .and. dtmax .gt. dtmo)then                              DTEMP   18
           dtheta(i)=dtheta(i)/2.                                               DTEMP   19
        endif                                                                   DTEMP   20
        theta(i) = theta(i) + dtheta(i)                                         DTEMP   21
  200 continue                                                                  DTEMP   22
C new t-distribution is weighted with old to                                    DTEMP   23
C avoid oscillations in numerical solution                                      DTEMP   24
        if(index .ge. 3)then                                                    DTEMP   25
      do 250 i=1,nlayer                                                         DTEMP   26
          dtmax=0.0                                                             DTEMP   27
          tdiff=told(i)-thdum(i)                                                DTEMP   28
          if((dtheta(i).gt.0.0 .and. tdiff.gt.0.0).or.(dtheta(i).lt.0.0         DTEMP   29
     $    .and. tdiff.lt.0.0))                                                  DTEMP   30
     $       theta(i) = (theta(i)+thdum(i))/2                                   DTEMP   31
          dtmax=amax1(dtmax,abs(theta(i)-thdum(i)))                             DTEMP   32
  250 continue                                                                  DTEMP   33
      endif                                                                     DTEMP   34
C                                                                               DTEMP   35
      return                                                                    DTEMP   36
      end                                                                       DTEMP   37
      subroutine filmo(tex,tw,ws,wdir,h,dh,hcout)                               FILMO    2
C purpose - to find outdoor film coeff                                          FILMO    3
C inputs -                                                                      FILMO    4
C   tex - outdoor air temp [k]                                                  FILMO    5
C   tw - outside surface temp                                                   FILMO    6
C   ws - wind speed [m/s]                                                       FILMO    7
C   wdir - wind direction [0 - windward; 1 - leeward]                           FILMO    8
C outputs                                                                       FILMO    9
C   h - heat flux [w m-2]                                                       FILMO   10
C   hcout - convective film coeff [w m-2 k-1]                                   FILMO   11
C   dh - derivative of heat flux wrt. temp.                                     FILMO   12
C                                                                               FILMO   13
C   changed  8/15/85                                                            FILMO   14
C                                                                               FILMO   15
      data conv/5.67826/                                                        -044c7   1
C   determines hcout from ashrae algorithms for building heat transfer          FILMO   17
C   algorithm "fo"                                                              FILMO   18
C   windward                                                                    FILMO   19
      if (wdir .eq. 0) then                                                     FILMO   20
         if (ws .gt. 2.0) then                                                  FILMO   21
         vc=0.25 * ws                                                           FILMO   22
         else                                                                   FILMO   23
         vc=0.5                                                                 FILMO   24
         endif                                                                  FILMO   25
      else                                                                      FILMO   26
C   leeward                                                                     FILMO   27
      vc= 0.3 + 0.05*ws                                                         FILMO   28
      endif                                                                     FILMO   29
C   convection component of film coefficient                                    FILMO   30
      hcout = 3.28*((vc)**0.605)                                                FILMO   31
C  convert to metric                                                            FILMO   32
      hcout=hcout*conv                                                          FILMO   33
C                                                                               FILMO   34
C                                                                               FILMO   35
      h = hcout*(tw-tex)                                                        FILMO   36
      dh=0.0                                                                    FILMO   37
      return                                                                    FILMO   38
      end                                                                       FILMO   39
      subroutine filmi(H,tout,tair,t,tilt,hf,dhf,hc,adelt)                      -048d    4
C purpose                                                                       FILMI    3
C   evaluate heat flux at indoor surface of window                              FILMI    4
C   using expression from mcadams                                               FILMI    5
C input                                                                         FILMI    6
C   H - Window height                                                           -048d    5
C   t - inside surface temperature                                              FILMI    7
C   tair - room air temperature                                                 FILMI    8
C output                                                                        FILMI    9
C   hc - heat transfer coeff                                                    FILMI   10
C   hf - heat flux                                                              FILMI   11
C   dhf - derivative of hf wrt t                                                FILMI   12
      dimension hc1(5),hc2(5)                                                   FILMI   13
      data hc1/4.005,3.835,3.041,2.247,0.943/                                   FILMI   14
      data hc2/0.943,2.247,3.041,3.835,4.005/                                   FILMI   15
C                                                                               FILMI   16
      delt = t - tair                                                           FILMI   17
      adelt = abs(delt)                                                         FILMI   18
      hc = 1.46*((adelt/H)**.25)                                                -048d    6
      if(tilt.gt.89.0.and.tilt.lt.91.0) go to 100                               FILMI   20
C              correction for non-vertical tilt                                 FILMI   21
      i = int(tilt/45.) + 1                                                     FILMI   22
      if(t.lt.tair) hca = hc1(i)+(hc1(i+1)-hc1(i))*(tilt-45.*(i-1))/45.         FILMI   23
      if(t.ge.tair) hca = hc2(i)+(hc2(i+1)-hc2(i))*(tilt-45.*(i-1))/45.         FILMI   24
      hc = (hca/3.041)*hc                                                       FILMI   25
  100 continue                                                                  FILMI   26
C                                                                               FILMI   27
      hf=hc*delt                                                                FILMI   28
C                                                                               FILMI   29
      dhf=.25*hc                                                                FILMI   30
C                                                                               FILMI   31
      return                                                                    FILMI   32
      end                                                                       FILMI   33
      subroutine fluxes(sour,mat,thetas,tin,tout,rmir,outir,nface,              FLUXES   2
     $  q,hrgap,hrin,hrout)                                                     FLUXES   3
C purpose - to calculate ir heat fluxes                                         FLUXES   4
C inputs                                                                        FLUXES   5
C   sour - ir source terms                                                      FLUXES   6
C   mat - inverse of ir transfer matrix                                         FLUXES   7
C   thetas - array of surface temperatures                                      FLUXES   8
C   nface - number of surfaces                                                  FLUXES   9
C output                                                                        FLUXES  10
C   q - ir heat fluxes                                                          FLUXES  11
C   hrgap - effective radiative gap coefficient                                 FLUXES  12
      dimension sour(10),mat(10,10),q(10),hrgap(5),thetas(10)                   FLUXES  13
      real mat                                                                  FLUXES  14
C                                                                               FLUXES  15
      do 200 i=1,nface                                                          FLUXES  16
        q(i)= 0.0                                                               FLUXES  17
        do 100 j=1,nface                                                        FLUXES  18
          q(i)=mat(i,j)*sour(j)+q(i)                                            FLUXES  19
  100   continue                                                                FLUXES  20
  200 continue                                                                  FLUXES  21
      dT = tout-thetas(1)                                                       -048d    7
      if (Abs(dT) .gt. 0.0001)  hrout=(outir-q(1))/dT                           -048d    8
C***                                                                            FLUXES  23
C      write(6,999) nface,mat(1,1),mat(1,2),sour(1),outir,q(1),tout,            FLUXES  24
C     1 thetas(1),hrout                                                         FLUXES  25
C  999 format(1x,' FLUXES:nface,mat11,mat12,sour1,outir,q1,tout,thetas1,h       FLUXES  26
C     1rout='/i3,8f12.5/)                                                       FLUXES  27
C***                                                                            FLUXES  28
          dT = thetas(nface)-tin                                                -048d    9
          if (Abs(dT) .gt. 0.0001)  hrin=(q(nface)-rmir)/dT                     -048d   10
          ngaps=nface/2-1                                                       FLUXES  30
          if(ngaps .ne. 0)then                                                  FLUXES  31
            do 300 i=1,ngaps                                                    FLUXES  32
              j=2*i                                                             FLUXES  33
              dT = thetas(j)-thetas(j+1)                                        -048d   11
              if (Abs(dT) .gt. 0.0001) hrgap(i)=(q(j)-q(j+1))/dT                -048d   12
  300       continue                                                            FLUXES  35
          endif                                                                 FLUXES  36
      return                                                                    FLUXES  37
      end                                                                       FLUXES  38
      subroutine edge(u,wwid,white,ispacr,uig)                                  BLFR     8
C                                                                               EDGE     3
C purpose - to correct calculated glazing u-value for                           EDGE     4
C two-dimensional edge conductance effects. "edge" is                           EDGE     5
C a 2.5in (63.5mm) wide band at glass periphery;                                EDGE     6
C the region inside this is what is called                                      EDGE     7
C here "center of glass".                                                       EDGE     8
C This routine is based on Window-4 subroutine frame                            EDGE     9
C modified to do only the edge correction; frame conduction                     EDGE    10
C is done separately in CALWIN.  Mullions are not considered.                   EDGE    11
C                                                                               EDGE    12
C inputs                                                                        EDGE    13
C   u      - glazing u-value (W/m2-K)                                           EDGE    14
C   wwid   - glazed width of window, frame excluded (mm)                        EDGE    15
C   white  - glazed height of window, frame excluded (mm)                       EDGE    16
C   ispacr- spacer type (defined below)                                         EDGE    17
C                                                                               EDGE    18
C spacer types                                                                  EDGE    19
C   1 = Aluminum                                                                EDGE    20
C   2 = Stainless steel (dual seal)                                             EDGE    21
C   3 = Butyl/metal; fiberglass; wood; glass edge                               EDGE    22
C   4 = Insulated (conductivity = .017 Btu/h-ft-F)                              EDGE    23
C   5 = U-edge = U-center-of-glass                                              EDGE    24
C                                                                               EDGE    25
C output                                                                        EDGE    26
C   uig - edge corrected uvalue                                                 EDGE    27
C                                                                               EDGE    28
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                         /FILES/  3
     2              , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                    /FILES/  4
     3                IHRREP(3), IHRPAS(2)                                      /FILES/  5
      COMMON  /REPORT/ IREPRT(4,37),IPRG,IUNIQV(100),IUNIQS(100),IUNIQL         BIGNAM   1
      dimension ucf(3,5)                                                        EDGE    30
C              correlation coefficients (SI)                                    EDGE    31
      data ucf /2.33,-0.01,0.138,                                               EDGE    32
     2          1.03, 0.76,0.0085,                                              EDGE    33
     3          0.82, 0.80,0.0022,                                              EDGE    34
     4          0.35, 0.83,0.018,                                               EDGE    35
     5          0.0,  1.00,0. /                                                 EDGE    36
C                                                                               EDGE    37
C edge u-value, W/m2-K (depends on spacer type)                                 EDGE    38
C                                                                               EDGE    39
         uedge = ucf(1,ispacr) + u*(ucf(2,ispacr) + u*ucf(3,ispacr))            BLFR     9
C                                                                               EDGE    45
C center-of-glass area                                                          EDGE    46
      ag = amax1(0.,(wwid - 127.0)*(white - 127.0))                             EDGE    47
C edge area                                                                     EDGE    48
      ae = wwid*white - ag                                                      EDGE    49
C edge-corrected uvalue                                                         EDGE    50
      uig = (u*ag + uedge*ae)/(ag+ae)                                           EDGE    51
C                                                                               EDGE    52
      if(IREPRT(1,35).ne.0.and.IREPRT(1,8).ne.0)                                IREPRT  58
     $ write(IOUTPT,999) u,uedge,ag,ae,wwid,white,uig                           -030    23
  999 format(' EDGE: u,uedge,ag,ae,wwid,white,uig=',/,                          EDGE    55
     . 1x,7f14.2)                                                               EDGE    56
C                                                                               EDGE    57
C                                                                               EDGE    58
      return                                                                    EDGE    59
      end                                                                       EDGE    60
      subroutine gasses(tleft,tright,ngp,gap,cond,                              GASSES   2
     $visk,den,pr,gr,dgrl,dgrr,                                                 GASSES   3
     $con,dcon,prand,err)                                                       GASSES   4
C purpose - to find the coeff of convective/conductive heat transfer            GASSES   5
C           in the gas filled space between isothermal solid layers             GASSES   6
C inputs -                                                                      GASSES   7
C   tleft - temperature of surface nearest outside [k]                          GASSES   8
C   tright - temperature of surface nearest inside [k]                          GASSES   9
C   gap - gap width [m]                                                         GASSES  10
C   ngp  - gap number considered                                                GASSES  11
C outputs -                                                                     GASSES  12
C   gr - grashof number                                                         GASSES  13
C   prand-prandtl number                                                        GASSES  14
C   dgrl - derivative of gr wrt tleft                                           GASSES  15
C   dgrr - derivative of gr wrt tright                                          GASSES  16
C   con - thermal conductivity [w m-1 k-1] @t=273 k                             GASSES  17
C   dcon - derivative of con wrt mean gap temp [w m-1 k-2]                      GASSES  18
C other variables                                                               GASSES  19
C   visk(1)=viscosity @t=273 [kg m-1 k-2]                                       GASSES  20
C   visk(2)=derivitive of visk(i,1) wrt mean temperature                        GASSES  21
C   den(1)=density @273 [kg m-3]                                                GASSES  22
C   den(2)=derivative of den(i,1) wrt mean temp                                 GASSES  23
C   pr(1)=prandtl number @t=273k                                                GASSES  24
C   pr(2)=prandtl number wrt temp                                               GASSES  25
                                                                                GASSES  26
                                                                                GASSES  27
      dimension visk(5,2),cond(5,2),den(5,2),pr(5,2)                            GASSES  28
C                                                                               GASSES  29
C  calculate gap temperature                                                    GASSES  30
C                                                                               GASSES  31
      t = 0.5*(tleft + tright)                                                  GASSES  32
C                                                                               GASSES  33
C for user input                                                                GASSES  34
C  ngp denotes the gap number considered                                        GASSES  35
C                                                                               GASSES  36
C                                                                               GASSES  37
C  calculate viscosity, density                                                 GASSES  38
      visc = visk(ngp,1) + visk(ngp,2)*(t-273)                                  GASSES  39
      dvisk = visk(ngp,2)                                                       GASSES  40
      dens = den(ngp,1) + den(ngp,2)*(t-273)                                    GASSES  41
      dden = den(ngp,2)                                                         GASSES  42
C                                                                               GASSES  43
C  calculate grashoff number                                                    GASSES  44
C                                                                               GASSES  45
      adelt = abs(tleft - tright)                                               GASSES  46
C                                                                               GASSES  47
      gap3 = gap*gap*gap                                                        GASSES  48
      gr = (9.81*gap3*adelt*dens*dens)/(t*visc*visc)                            GASSES  49
C                                                                               GASSES  50
C  calculate dgrl, dgrr                                                         GASSES  51
C                                                                               GASSES  52
      if(err.ne.0.) then                                                        GASSES  53
      term1 = (39.24 * gap3) / ((tleft+tright)*(tleft+tright))                  GASSES  54
      tlmr2 = abs(tleft*tleft - tright*tright)                                  GASSES  55
      term2 = tlmr2 * dden                                                      GASSES  56
      term3 = tlmr2 * dvisk                                                     GASSES  57
C                                                                               GASSES  58
      viscl = visk(ngp,1) + visk(ngp,2)*(tleft-273)                             GASSES  59
      viscr = visk(ngp,1) + visk(ngp,2)*(tright-273)                            GASSES  60
      densl  = den(ngp,1) + den(ngp,2)*(tleft-273)                              GASSES  61
      densr  = den(ngp,1) + den(ngp,2)*(tright-273)                             GASSES  62
C                                                                               GASSES  63
      densl2=densl*densl                                                        GASSES  64
      densr2=densr*densr                                                        GASSES  65
      dgrl= (term1/(viscl*viscl))*(tright*densl2 + term2*densl                  GASSES  66
     $        -term3*densl2/viscl)                                              GASSES  67
      dgrr=  (term1/(viscr*viscr))*(-tleft*densr2 + term2*densr                 GASSES  68
     $        -term3*densr2/viscr)                                              GASSES  69
      endif                                                                     GASSES  70
C                                                                               GASSES  71
C calculate the thermal conductivity and its derivative                         GASSES  72
      con = cond(ngp,1) + cond(ngp,2)*(t-273.0)                                 GASSES  73
      dcon = cond(ngp,2)                                                        GASSES  74
C calculate the prandl number                                                   GASSES  75
      prand=pr(ngp,1)+pr(ngp,2)*(t-273)                                         GASSES  76
C                                                                               GASSES  77
      return                                                                    GASSES  78
      end                                                                       GASSES  79
      subroutine guess(tout,tin,nlayer,theta,thetas)                            GUESS    2
C   purpose - initializes temperature distribution assuming                     GUESS    3
C   a constant temperature gradient across the window                           GUESS    4
C input                                                                         GUESS    5
C   tout - outdoor air temperature (k)                                          GUESS    6
C   tin - indoor air temperature (k)                                            GUESS    7
C   nlayer - number of solid layers in window                                   GUESS    8
C output                                                                        GUESS    9
C   theta -  array of nodal temps starting from outdoor layer (k)               GUESS   10
C   thetas - array of surface temperatures                                      GUESS   11
      dimension theta(nlayer),thetas(10)                                        GUESS   12
      delta = (tin-tout)/(nlayer+1)                                             GUESS   13
      do 100 i=1,nlayer                                                         GUESS   14
        j = 2*i-1                                                               GUESS   15
        theta(i) = tout + i*delta                                               GUESS   16
        thetas(j) = theta(i)                                                    GUESS   17
        thetas(j+1) = theta(i)                                                  GUESS   18
  100 continue                                                                  GUESS   19
      return                                                                    GUESS   20
      end                                                                       GUESS   21
      subroutine heat(tout,tin,thetas, nlayer,tilt,gap,                         HEAT     2
     $  nu, hf, dhf, hcgap, gcon, gvis, gden, gpr, err)                         HEAT     3
C                                                                               HEAT     4
C purpose: to compute the convective/conductive heat fluxes                     HEAT     5
C          and their derivatives wrt temperatures                               HEAT     6
C         (includes flux conducted through solid layer)                         HEAT     7
C input:                                                                        HEAT     8
C   thetas - array of surface temperatures                                      HEAT     9
C   nlayer - number of nodes                                                    HEAT    10
C   gap - gap width                                                             HEAT    11
C   gcon - user input gas conductivity                                          HEAT    12
C   dgcon - user input derivitive of gas conductivity                           HEAT    13
C   gvis - user input gas kinematic viscosity                                   HEAT    14
C   dgvis - user input derivitive of viscosity                                  HEAT    15
C output:                                                                       HEAT    16
C   hf - heat flux at each surface                                              HEAT    17
C   dhf - derivatives of heat fluxes                                            HEAT    18
C   hcgap - gap film coefficients                                               HEAT    19
C                                                                               HEAT    20
      real nu                                                                   HEAT    21
C                                                                               HEAT    22
      dimension thetas(10),gap(5)                                               HEAT    23
      dimension hf(10),dhf(10,5)                                                HEAT    24
      dimension hcgap(5)                                                        HEAT    25
      dimension gcon(5,2),gvis(5,2),gpr(5,2),gden(5,2)                          HEAT    26
C                                                                               HEAT    27
      do 100 i=1,2*nlayer                                                       HEAT    28
        do 150 j=1,nlayer                                                       HEAT    29
          dhf(i,j) = 0.0                                                        HEAT    30
  150   continue                                                                HEAT    31
  100 continue                                                                  HEAT    32
C grashof number, thermal conductivity and their derivatives                    HEAT    33
      if (nlayer .eq. 1) go to 300                                              HEAT    34
      do 200 i=1,nlayer-1                                                       HEAT    35
        j=2*i                                                                   HEAT    36
        k=j+1                                                                   HEAT    37
        call gasses(thetas(j),thetas(k),i,gap(i),gcon,                          HEAT    38
     $   gvis,gden,gpr,                                                         HEAT    39
     $   gr,dgrl,dgrr,con,dcon,pr,err)                                          HEAT    40
C  nussalt number and its derivative with respect to gr.                        HEAT    41
        call nusslt (tout,tin,tilt,gr,pr,nu,dnu,gap(i),err)                     HEAT    42
C  convection/conduction coefficient and heat flux                              HEAT    43
        hcgap(i) = con/gap(i)*nu                                                HEAT    44
C  conductive/convective source strengths                                       HEAT    45
        hf(j) = hcgap(i)*thetas(j)                                              HEAT    46
        hf(k) = hcgap(i)*thetas(k)                                              HEAT    47
      if(err.eq.0.) go to 200                                                   HEAT    48
C derivatives of conductivity wrt boundary temperatures                         HEAT    49
        dhcl = 0.5*dcon*nu/gap(i) + con/gap(i)*dnu*dgrl                         HEAT    50
        dhcr = 0.5*dcon*nu/gap(i) + con/gap(i)*dnu*dgrr                         HEAT    51
C  conv/cond contribution to the derivatives                                    HEAT    52
        dhf(j,i)= dhcl*thetas(j)                                                HEAT    53
        dhf(k,i+1) = dhcr*thetas(k)                                             HEAT    54
        dhf(j,i+1)= dhcr*thetas(j)                                              HEAT    55
        dhf(k,i) = dhcl*thetas(k)                                               HEAT    56
C                                                                               HEAT    57
  200 continue                                                                  HEAT    58
  300 continue                                                                  HEAT    59
      return                                                                    HEAT    60
      end                                                                       HEAT    61
      subroutine irmat(tir,rir,nface,m)                                         IRMAT    2
C purpose - to set up transfer matrix for ir radiation balance                  IRMAT    3
C inputs -                                                                      IRMAT    4
C   tir - array of ir transmittances for each layer                             IRMAT    5
C   rir - array of ir reflectances for each surface                             IRMAT    6
C   nface - number of surfaces (=2x nlayer)                                     IRMAT    7
C output                                                                        IRMAT    8
C   m - nface x nface ir transfer matrix                                        IRMAT    9
      dimension m(10,10),tir(10),rir(10)                                        IRMAT   10
      real m                                                                    IRMAT   11
      do 200 i=1,nface                                                          IRMAT   12
        do 100 j=1,nface                                                        IRMAT   13
          if (i .eq. j) then                                                    IRMAT   14
          m(i,j)= 1.0                                                           IRMAT   15
        else                                                                    IRMAT   16
          m(i,j) = 0.0                                                          IRMAT   17
        endif                                                                   IRMAT   18
  100   continue                                                                IRMAT   19
  200 continue                                                                  IRMAT   20
      if (nface .eq. 2) go to 400                                               IRMAT   21
C set up the first and last two rows                                            IRMAT   22
      m(1,3) = -tir(1)*tir(2)                                                   IRMAT   23
      m(2,3) = -rir(2)*tir(2)                                                   IRMAT   24
      m(nface-1,nface-2) = -rir(nface-1)*tir(nface-2)                           IRMAT   25
      m(nface,nface-2) = -tir(nface-1)*tir(nface-2)                             IRMAT   26
C set up the interior of the matrix                                             IRMAT   27
      do 300 i=2,nface/2 - 1                                                    IRMAT   28
        i2=i*2                                                                  IRMAT   29
        m(i2-1,i2-2) = -rir(i2-1)*tir(i2-2)                                     IRMAT   30
        m(i2-1,i2+1) = -tir(i2)*tir(i2-1)                                       IRMAT   31
        m(i2,i2+1)= -rir(i2)*tir(i2)                                            IRMAT   32
        m(i2,i2-2) = -tir(i2-1)*tir(i2-2)                                       IRMAT   33
  300 continue                                                                  IRMAT   34
  400 continue                                                                  IRMAT   35
      return                                                                    IRMAT   36
      end                                                                       IRMAT   37
      subroutine matinv(mat,inmat,norder)                                       MATINV   2
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                         /FILES/  3
     2              , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                    /FILES/  4
     3                IHRREP(3), IHRPAS(2)                                      /FILES/  5
      dimension mat(10,10),inmat(10,10)                                         MATINV   4
      COMMON /WCTRL/  IwinReturn, Imsgflg                                       /WCTRL/  2
c              For DLLs, delete Win_MB and enable msgbox.fi                     /WCTRL/  3
#ifndef _DLL                                                                 /* -051     1 */ 
      COMMON /WIN_MB/ MB_OK,MB_ICONSTOP,MB_ICONEXCLAMATION,MB_TASKMODAL,        -051     2
     &                MB_ICONINFORMATION                                        -051     3
#else                                                                        /* -051     4 */ 
      include 'msgbox.fi'                                                       -051     5
#endif                                                                       /* -051     6 */ 
      real mat,inmat                                                            MATINV   5
      call unit(inmat,norder)                                                   MATINV   6
      do 100 i=1,norder                                                         MATINV   7
        if (mat(i,i) .eq. 0.0 )then                                             MATINV   8
C switch the first row with a non-zero element in the i-th column               MATINV   9
C with the i-th row of mat (and same for inmat)                                 MATINV  10
           call swchw3(mat,inmat,i,norder,flag)                                 MATINV  11
C flag is set to zero unless the switch fails                                   MATINV  12
C in which case there is no inverse                                             MATINV  13
        else                                                                    MATINV  14
           flag=0.0                                                             MATINV  15
        endif                                                                   MATINV  16
        if (flag .eq. 0.0) then                                                 MATINV  17
C rescale the i-th row so that mat(i,i) = 1.0                                   MATINV  18
          call scale1(mat,inmat,norder,i)                                       -050x    9
C  subtract mat(j,i)*the i-th row from the j-th                                 MATINV  20
          call sub(mat,inmat,norder,i)                                          MATINV  21
        else                                                                    MATINV  22
        Call MSGSIM(-1,II,II,II,II)                                             -050x   10
        write(ioutpt,9100)                                                      MATINV  23
 9100   format(12x,'GLASS CONDUCTION CALCULATION FAILED IN MATINV.'/            MATINV  24
     .         12X,'CONTACT DOE-2 USERS OFFICE AT LBL.')                        MATINV  25
        Call MessageBox( NULL, 'Errors during MATINV glass conduction -'        -051    23
     &    //' ABORTING'//char(0),'MATINV Errors'//char(0), MB_OK                -051    24
     &    + MB_ICONSTOP+MB_TASKMODAL )                                          -051    25
        Return                                                                  -050x   11
        endif                                                                   MATINV  27
  100 continue                                                                  MATINV  28
      return                                                                    MATINV  29
      end                                                                       MATINV  30
      subroutine nodes(theta,thetas,tin,tout,outir,rmir,hcgap,hrgap,            NODES    2
     $hcin,hrin,hcout,hrout,scon,sol,nlayer,dflag,delta,rs,rgap,err)            NODES    3
C purpose - calculation of residuals                                            NODES    4
C inputs -                                                                      NODES    5
C   hf - vector of c/c heat fluxes                                              NODES    6
C   q - vector of ir heat fluxes                                                NODES    7
C   sol - absorbed solar flux in each layer                                     NODES    8
C   rmir - ir flux from room                                                    NODES    9
C   outir - ir flux from environment                                            NODES   10
C   nlayer - number of layers                                                   NODES   11
C   scon - array of solid layer conductances                                    NODES   12
C outputs                                                                       NODES   13
C   delta - residual at each layer                                              NODES   14
C   rs - array of layer + gap resistances                                       NODES   15
C   rgap - array of inverses of (hcgap+hrgap) for each gap                      NODES   16
C                                                                               NODES   17
      dimension theta(5),hcgap(5),hrgap(5),ascon(5),sol(5)                      NODES   18
      dimension delta(5),rs(5),rgap(5),thetas(10),scon(5)                       NODES   19
C                                                                               NODES   20
C  calculate resistances and inverses of the total gap coefficient              NODES   21
C                                                                               NODES   22
       do 5 i=1,nlayer                                                          NODES   23
    5    ascon(i)=.5/scon(i)                                                    NODES   24
C                                                                               NODES   25
       rgap(1)=1/(hcout+hrout)                                                  NODES   26
       rs(1)=rgap(1) + ascon(1)                                                 NODES   27
       do 10 i=2,nlayer                                                         NODES   28
          rgap(i)=1/(hcgap(i-1)+hrgap(i-1))                                     NODES   29
   10     rs(i)=rgap(i)+ascon(i-1)+ascon(i)                                     NODES   30
       rgap(nlayer+1)=1/(hcin+hrin)                                             NODES   31
       rs(nlayer+1)=rgap(nlayer+1)+ascon(nlayer)                                NODES   32
C                                                                               NODES   33
      if(dflag.eq.1.or.err.eq.0.) go to 400                                     NODES   34
C                                                                               NODES   35
C  calculate residuals                                                          NODES   36
      if(nlayer .eq. 1)then                                                     NODES   37
      delta(1)=(theta(1)-tout)/rs(1)+(theta(1)-tin)/rs(2)-sol(1)                NODES   38
      else                                                                      NODES   39
      delta(1)=(theta(1)-tout)/rs(1)+(theta(1)-theta(2))/rs(2)-sol(1)           NODES   40
      delta(nlayer)=(theta(nlayer)-theta(nlayer-1))/rs(nlayer)                  NODES   41
     $ +(theta(nlayer)-tin)/rs(nlayer+1)-sol(nlayer)                            NODES   42
      if(nlayer .eq. 2)go to 200                                                NODES   43
      do 100 i=2,nlayer-1                                                       NODES   44
         delta(i)=(theta(i)-theta(i-1))/rs(i)                                   NODES   45
     $ +(theta(i)-theta(i+1))/rs(i+1)-sol(i)                                    NODES   46
  100 continue                                                                  NODES   47
      endif                                                                     NODES   48
  200 continue                                                                  NODES   49
C                                                                               NODES   50
C calculate surface temperatures                                                NODES   51
C                                                                               NODES   52
      thetas(1)=(theta(1)/ascon(1)+tout/rgap(1))/(1/ascon(1)+1/rgap(1))         NODES   53
      thetas(2*nlayer)=(theta(nlayer)/ascon(nlayer)+tin/rgap(nlayer+1))         NODES   54
     $ /(1/ascon(nlayer)+1/rgap(nlayer+1))                                      NODES   55
      if(nlayer .eq. 1)go to 400                                                NODES   56
C                                                                               NODES   57
      do 300 i=2,2*nlayer-1,2                                                   NODES   58
         i1=i/2                                                                 NODES   59
         i2=(i+2)/2                                                             NODES   60
         thetas(i)=theta(i1)                                                    NODES   61
         thetas(i+1)=theta(i2)                                                  NODES   62
         ts1=thetas(i)                                                          NODES   63
         ts2=thetas(i+1)                                                        NODES   64
  250    thetas(i)=(theta(i1)/ascon(i1)+thetas(i+1)/rgap(i1+1))                 NODES   65
     $ /(1/ascon(i1)+1/rgap(i1+1))                                              NODES   66
         thetas(i+1)=(thetas(i)/rgap(i1+1)+theta(i2)/ascon(i2))                 NODES   67
     $ /(1/rgap(i1+1)+1/ascon(i2))                                              NODES   68
         diff1=abs(thetas(i)-ts1)                                               NODES   69
         diff2=abs(thetas(i+1)-ts2)                                             NODES   70
         if(diff1 .gt. .01 .or. diff2 .gt. .01)then                             NODES   71
           ts1=thetas(i)                                                        NODES   72
           ts2=thetas(i+1)                                                      NODES   73
           goto 250                                                             NODES   74
         endif                                                                  NODES   75
  300 continue                                                                  NODES   76
  400 continue                                                                  NODES   77
      return                                                                    NODES   78
      end                                                                       NODES   79
      subroutine nusslt (tso,tsi,tilt,gr,pr,nu,dnu,gap,err)                     NUSSLT   2
C purpose                                                                       NUSSLT   3
C   calculate nussalt modulus for air gaps                                      NUSSLT   4
C input                                                                         NUSSLT   5
C   tso - outside surface temp                                                  NUSSLT   6
C   tsi - inside surface temp                                                   NUSSLT   7
C   gr - grashof number based on gap width                                      NUSSLT   8
C   gap - gap width                                                             NUSSLT   9
C   tilt - window tilt from horizontal                                          NUSSLT  10
C   phi - tilt converted to radians                                             NUSSLT  11
C output                                                                        NUSSLT  12
C   nu - nussalt number                                                         NUSSLT  13
C   dnu - derivative of nu wrt t or gr=c*dt                                     NUSSLT  14
C                                                                               NUSSLT  15
      real nu,nu90,nu60,nu601,nu601a,nu602,nua,nub                              NUSSLT  16
      save dnu90                                                                -050x   12
C                                                                               NUSSLT  17
      phi=tilt*.01745329                                                        NUSSLT  18
      ra=gr*pr                                                                  NUSSLT  19
C      if(ra.gt.2.0e6)then                                                      NUSSLT  20
C         write(*,*)'WINDOW3 ERROR 4: Convection correlation no'                NUSSLT  21
C         write(*,*)'         longer holds- use results'                        NUSSLT  22
C         write(*,*)'         with caution.'                                    NUSSLT  23
C      endif                                                                    NUSSLT  24
C                                                                               NUSSLT  25
C according to elsherbiny using 1/x=40;                                         NUSSLT  26
C similar point to 80 and 110, but valid for a higher ra.                       NUSSLT  27
C according to elsherbiny ASME trans. Feb,1982                                  NUSSLT  28
C                                                                               NUSSLT  29
C              Skip if no temperature differential across gap                   -048d   13
C              (gr = 0.)                                                        -048d   14
      if (ra .lt. 1.0E-06) then                                                 -048d   15
        nu  = 1.0                                                               -048d   16
        dnu = 1.0E-06                                                           -048d   17
        return                                                                  -048d   18
      endif                                                                     -048d   19
      r11=1.9764E-17*(ra**4.422)                                                NUSSLT  30
      nu90=(1+r11)**.09091                                                      NUSSLT  31
      if(err.gt.0.0) then                                                       NUSSLT  32
        dnu1=nu90/(1+r11)                                                       NUSSLT  33
        dnu2=r11/(.0303*(ra**.402))                                             NUSSLT  34
        dnu90=dnu1*dnu2*.402*.0303*pr*ra**(-.598)                               NUSSLT  35
      endif                                                                     NUSSLT  36
C                                                                               NUSSLT  37
C windows heated from above                                                     NUSSLT  38
C                                                                               NUSSLT  39
      if(tso .gt. tsi)then                                                      NUSSLT  40
          nu=1.0+(nu90-1.0)*sin(phi)                                            NUSSLT  41
          dnu=dnu90                                                             NUSSLT  42
      else                                                                      NUSSLT  43
C                                                                               NUSSLT  44
C windows heated from below                                                     NUSSLT  45
C                                                                               NUSSLT  46
      if (tilt .ge. 60.0) then                                                  NUSSLT  47
        g=0.5*(1.0+(ra/3160.)**20.6)**(-0.1)                                    NUSSLT  48
        onepg2 = (1.+g)*(1.+g)                                                  NUSSLT  49
        nu601a=1.0 + (6.2941E-8*ra**2.198)/(onepg2*onepg2*onepg2*(1.+g))        NUSSLT  50
        nu601=nu601a**0.142857                                                  NUSSLT  51
C for A=40                                                                      NUSSLT  52
        nu602=0.108375*ra**0.283                                                NUSSLT  53
        if (nu601 .gt. nu602)then                                               NUSSLT  54
            nu60=nu601                                                          NUSSLT  55
        else                                                                    NUSSLT  56
            nu60=nu602                                                          NUSSLT  57
        endif                                                                   NUSSLT  58
        nu= ((90.0-tilt)*nu60 + (tilt-60.0)*nu90)/30.0                          NUSSLT  59
          dnu = 1.0E-06                                                         NUSSLT  60
      endif                                                                     NUSSLT  61
C                                                                               NUSSLT  62
C according to Hollands et al, J.of Heat Transfer, May 76                       NUSSLT  63
C                                                                               NUSSLT  64
      if (tilt .lt. 60.0)then                                                   NUSSLT  65
        cra=ra*cos(phi)                                                         NUSSLT  66
        a=1.0-1708.0/cra                                                        NUSSLT  67
        b=(cra/5830.0)**0.33333-1.0                                             NUSSLT  68
        nua=(abs(a)+a)/2.0                                                      NUSSLT  69
        nub=(abs(b)+b)/2.0                                                      NUSSLT  70
        ang=1708.0*(sin(1.8*phi))**1.6                                          NUSSLT  71
        nu=1.0+1.44*nua*(1.0-ang/cra)+nub                                       NUSSLT  72
          dnu = 1.0E-06                                                         NUSSLT  73
       endif                                                                    NUSSLT  74
      endif                                                                     NUSSLT  75
C                                                                               NUSSLT  76
C the derivative of nu is set here to a typical value for                       NUSSLT  77
C the case of a 90 degrees dbl. pane window which allows                        NUSSLT  78
C for the program to converge.                                                  NUSSLT  79
C Note that calculating the derivative of nu wrt to temp                        NUSSLT  80
C is not straightforward ... the assumption that                                NUSSLT  81
C gr = c*dt makes no sense here.                                                NUSSLT  82
C                                                                               NUSSLT  83
      return                                                                    NUSSLT  84
      end                                                                       NUSSLT  85
      subroutine op (n, t,  rf,  rb,  tt,  rft,  rbt,  aft)                     OP       2
C                                                                               OP       3
C purpose: to find overall optical properties                                   OP       4
C          of a series of layers with known properties                          OP       5
      dimension t(5,5), rf(5,5), rb(5,5)                                        OP       6
      dimension aft(10)                                                         OP       7
C                                                                               OP       8
C calculate perimeter elements of rt matrix                                     OP       9
      i = 1                                                                     OP      10
      do 150 i=1,n-1                                                            OP      11
      do 100 j=i+1,n                                                            OP      12
      denom = 1. - rf(j,j) * rb(j-1,i)                                          OP      13
      t(i,j) = t(i,j-1) * t(j,j) / denom                                        OP      14
      tijm1 = t(i,j-1)                                                          OP      15
      tjj = t(j,j)                                                              OP      16
      rf(i,j) = rf(i,j-1) + tijm1 * tijm1 * rf(j,j) / denom                     OP      17
      rb(j,i) = rb(j,j) + tjj * tjj * rb(j-1,i) /                               OP      18
     $    (1. - rb(j-1,i) * rf(j,j))                                            OP      19
  100 continue                                                                  OP      20
  150 continue                                                                  OP      21
      tt = t(1,n)                                                               OP      22
      rft = rf(1,n)                                                             OP      23
      rbt = rb(n,1)                                                             OP      24
C                                                                               OP      25
C calculate absorptance in each layer                                           OP      26
      do 200 j=1,n                                                              OP      27
      if (j .eq. 1) then                                                        OP      28
        t0 = 1.                                                                 OP      29
        rb0 = 0.                                                                OP      30
      else                                                                      OP      31
        t0 = t(1,j-1)                                                           OP      32
        rb0 = rb(j-1,1)                                                         OP      33
      endif                                                                     OP      34
      if (j .eq. n) then                                                        OP      35
        rf0 = 0.                                                                OP      36
      else                                                                      OP      37
        rf0 = rf(j+1,n)                                                         OP      38
      endif                                                                     OP      39
      af = 1. - t(j,j) - rf(j,j)                                                OP      40
      ab = 1. - t(j,j) - rb(j,j)                                                OP      41
      aft(j) = (t0 * af) / (1. - rf(j,n)*rb0)                                   OP      42
     $       + (t(1,j) * rf0 * ab) / (1. - rb(j,1)*rf0)                         OP      43
  200 continue                                                                  OP      44
      return                                                                    OP      45
      end                                                                       OP      46
      subroutine scale1(a,b,n,i)                                                -050x   13
      dimension a(10,10),b(10,10)                                               SCALE    3
      c=a(i,i)                                                                  SCALE    4
      do 100 j=1,n                                                              SCALE    5
        a(i,j) = a(i,j)/c                                                       SCALE    6
        b(i,j) = b(i,j)/c                                                       SCALE    7
  100 continue                                                                  SCALE    8
      return                                                                    SCALE    9
      end                                                                       SCALE   10
      subroutine shade(sol,tsol,rtot,rgap,dir,nlayer,ngaps,abs,sf)              SHADE    2
C                                                                               SHADE    3
C   This subroutine calculates the shading coefficient for a window.            SHADE    4
C                                                                               SHADE    5
C                                                                               SHADE    6
C                                                                               SHADE    7
C   inputs:                                                                     SHADE    8
C  sol - matrix of absorped fraction of solar radiation in lites                SHADE    9
C  tsol - total solar transmittance                                             SHADE   10
C  rtot - total thermal resistance of window                                    SHADE   11
C  rgap - matrix of thermal resistance of each gap                              SHADE   12
C  dir - direct solar radiation on window                                       SHADE   13
C  nlayer - number of solid layers                                              SHADE   14
C  ngaps - number of gaps                                                       SHADE   15
C   outputs:                                                                    SHADE   16
C  sf - solar gain of space                                                     SHADE   17
C                                                                               SHADE   18
      dimension sol(5),rgap(5),n(5)                                             SHADE   19
      dimension abs(5)                                                          SHADE   20
C                                                                               SHADE   21
      real n                                                                    SHADE   22
C                                                                               SHADE   23
C evaluate inward flowing fraction of absorbed radiation                        SHADE   24
C                                                                               SHADE   25
      fract = 0.0                                                               SHADE   26
      n(1)=rgap(1)/rtot                                                         SHADE   27
      fract = n(1)*abs(1)                                                       SHADE   28
      if(ngaps.ne.0)then                                                        SHADE   29
        do 10 i=1,ngaps                                                         SHADE   30
         n(i+1)=n(i) + rgap(i+1)/rtot                                           SHADE   31
         fract=n(i+1)*abs(i+1)+fract                                            SHADE   32
   10 continue                                                                  SHADE   33
      endif                                                                     SHADE   34
C                                                                               SHADE   35
C add inward fraction to directly transmitted fraction                          SHADE   36
      sf=tsol+fract                                                             SHADE   37
C                                                                               SHADE   38
      return                                                                    SHADE   39
      end                                                                       SHADE   40
      subroutine source(thetas, emis, nlayer, outir, rmir,                      SOURCE   2
     $    tir, rir, sour, der)                                                  SOURCE   3
C purpose: evaluate radiative sources and derivatives                           SOURCE   4
C input:                                                                        SOURCE   5
C   thetas - array of surface temps                                             SOURCE   6
C   emis - emissivity of each surface                                           SOURCE   7
C   nlayer - no. of layers                                                      SOURCE   8
C   outir - ir flux from outside                                                SOURCE   9
C   rmir - ir flux from room                                                    SOURCE  10
C output:                                                                       SOURCE  11
C   sour - array of ir fluxes from each surface                                 SOURCE  12
C   der - array of derivatives of sources wrt temperatures                      SOURCE  13
C                                                                               SOURCE  14
      dimension thetas(10), emis(10), sour(10), der(10,5)                       SOURCE  15
      dimension tir(5), rir(10)                                                 SOURCE  16
C                                                                               SOURCE  17
      sigma = 5.6697 e-8                                                        SOURCE  18
C initialize the array der                                                      SOURCE  19
      do 20 i=1,2*nlayer                                                        SOURCE  20
        do 10 j=1,nlayer                                                        SOURCE  21
          der(i,j) = 0.0                                                        SOURCE  22
   10   continue                                                                SOURCE  23
   20 continue                                                                  SOURCE  24
C calculate the radiative sources and derivatives                               SOURCE  25
      do 100 i=1,nlayer                                                         SOURCE  26
        j=2*i-1                                                                 SOURCE  27
        tmp1 = thetas(j)*thetas(j)                                              SOURCE  28
        sour(j)=emis(j)*sigma*tmp1*tmp1                                         SOURCE  29
        tmp1 = thetas(j+1)*thetas(j+1)                                          SOURCE  30
        sour(j+1)=emis(j+1)*sigma*tmp1*tmp1                                     SOURCE  31
        der(j,i)=8.0*sour(j)/thetas(j)                                          SOURCE  32
        der(j+1,i)=8.0*sour(j+1)/thetas(j+1)                                    SOURCE  33
  100 continue                                                                  SOURCE  34
      sour(1) = sour(1) + outir*rir(1)                                          SOURCE  35
C***                                                                            SOURCE  36
C      write(6,999)emis(1),thetas(1),outir,rir(1),sour(1)                       SOURCE  37
C  999 format(1x,'SOURCE:emis1,thetas1,outir,rir1,sour1=',5f12.5/)              SOURCE  38
C***                                                                            SOURCE  39
      sour(2) = sour(2) + tir(1)*outir                                          SOURCE  40
      sour(2*nlayer) = rmir*rir(2*nlayer) + sour(2*nlayer)                      SOURCE  41
      sour(2*nlayer-1) = sour(2*nlayer-1) + tir(2*nlayer-1)*rmir                SOURCE  42
      return                                                                    SOURCE  43
      end                                                                       SOURCE  44
      subroutine sub(a,b,n,i)                                                   SUB      2
      dimension a(10,10),b(10,10)                                               SUB      3
      do 100 j=1,n                                                              SUB      4
        if (j .ne. i) then                                                      SUB      5
          c=a(j,i)                                                              SUB      6
          do 200 k=1,n                                                          SUB      7
            a(j,k) = a(j,k)-c*a(i,k)                                            SUB      8
            b(j,k) = b(j,k)-c*b(i,k)                                            SUB      9
  200     continue                                                              SUB     10
      else                                                                      SUB     11
      endif                                                                     SUB     12
  100 continue                                                                  SUB     13
      return                                                                    SUB     14
      end                                                                       SUB     15
      subroutine swchw3(a,b,i,n,flag)                                           SWCHW3   2
      dimension a(10,10),b(10,10),c(10),d(10)                                   SWCHW3   3
      flag = 1.0                                                                SWCHW3   4
      do 300 j=i+1,n                                                            SWCHW3   5
         if (a(j,i) .ne. 0.0) then                                              SWCHW3   6
           flag = 0.0                                                           SWCHW3   7
           do 100 k=1,n                                                         SWCHW3   8
              d(k) = b(i,k)                                                     SWCHW3   9
              c(k) = a(i,k)                                                     SWCHW3  10
              a(i,k) = a(j,k)                                                   SWCHW3  11
              a(j,k) = c(k)                                                     SWCHW3  12
              b(i,k) = b(j,k)                                                   SWCHW3  13
              b(j,k) = d(k)                                                     SWCHW3  14
  100      continue                                                             SWCHW3  15
        else                                                                    SWCHW3  16
        endif                                                                   SWCHW3  17
  300 continue                                                                  SWCHW3  18
      return                                                                    SWCHW3  19
      end                                                                       SWCHW3  20
      subroutine unit(s,n)                                                      UNIT     2
      dimension s(10,10)                                                        UNIT     3
      do 200 i=1,n                                                              UNIT     4
        do 100 j=1,n                                                            UNIT     5
          if (i .eq. j) then                                                    UNIT     6
            s(i,j) = 1.0                                                        UNIT     7
          else                                                                  UNIT     8
            s(i,j) = 0.0                                                        UNIT     9
          endif                                                                 UNIT    10
  100   continue                                                                UNIT    11
  200 continue                                                                  UNIT    12
      return                                                                    UNIT    13
      end                                                                       UNIT    14
      subroutine uvalw3(rs,nlayer,u,rtot)                                       UVALW3   2
C   This subroutine calculates the u-value of a window by combining             UVALW3   3
C the thermal resistances which are evaluated based on the steady               UVALW3   4
C state temperature distribution obtained from the subprogram THERM.            UVALW3   5
C                                                                               UVALW3   6
C inputs:                                                                       UVALW3   7
C  rs - array of effective resistances                                          UVALW3   8
C  nlayer - number of glazing layers                                            UVALW3   9
C                                                                               UVALW3  10
C outputs:                                                                      UVALW3  11
C  u - uvalue of window(w/m2-K)                                                 UVALW3  12
C  rtot - total thermal resistance of window                                    UVALW3  13
      dimension rs(5)                                                           UVALW3  14
C                                                                               UVALW3  15
C total resistance                                                              UVALW3  16
C                                                                               UVALW3  17
      rtot=0.0                                                                  UVALW3  18
         do 30 j=1,nlayer+1                                                     UVALW3  19
            rtot=rtot+rs(j)                                                     UVALW3  20
  30     continue                                                               UVALW3  21
C                                                                               UVALW3  22
C u-value                                                                       UVALW3  23
      u=1/rtot                                                                  UVALW3  24
      return                                                                    UVALW3  25
      end                                                                       UVALW3  26
      SUBROUTINE  CCM                                                           CCM      2
C                                                                               CCM      3
C              CALCULATES CLOUD COVER MODIFIER AS A FUNCTION OF CLOUD           CCM      4
C              TYPE , CLOUD AMOUNT, AND SOLAR ALTITUDE                          CCM      5
C                                                                               CCM      6
      COMMON  /SUND/   ISUNUP, GUNDOG, HORANG, TDECLN, EQTIME, SOLCON,          /SUND/   2
     1                 ATMEXT, SKYDFF, RAYCOS(3), RDN,                          /SUND/   3
     2                 BSUN, DECLN, CD, SD, FSUNUP                              /SUND/   4
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
C                                                                               CCM      9
      REAL  ICLD                                                                CCM     10
C                                                                               CCM     11
      EQUIVALENCE  (ICLD  , CLDAMT), (ICLTP  , ICLDTY)                          CCM     12
     1            ,(CLDCOV, CC    ), (AL    , RAYCOS(3))                        CCM     13
C                                                                               CCM     14
      SQ     = ICLD*ICLD                                                        CCM     15
      J      = ICLTP+1                                                          CCM     16
      IF( J-2 )  130, 100, 160                                                  CCM     17
C              CLOUD TYPE 1                                                     CCM     18
  100 IF( AL .GT. 0.707 )  GO TO 120                                            CCM     19
C              LOW SUN                                                          CCM     20
      CC     = .598+.00026*ICLD+.00021*SQ-.00035*ICLD*SQ                        CCM     21
      RETURN                                                                    CCM     22
C              HIGH SUN                                                         CCM     23
  120 CC     = .908-.03214*ICLD+.0102*SQ-.00114*ICLD*SQ                         CCM     24
      RETURN                                                                    CCM     25
C              CLOUD TYPE 0                                                     CCM     26
  130 IF( AL .GT. 0.707 )  GO TO 150                                            CCM     27
C              LOW SUN                                                          CCM     28
      CC     = .849-.01277*ICLD+.00360*SQ-.00059*ICLD*SQ                        CCM     29
      RETURN                                                                    CCM     30
C              HIGH SUN                                                         CCM     31
  150 CC     = 1.010-.01394*ICLD+.00553*SQ-.00068*ICLD*SQ                       CCM     32
      RETURN                                                                    CCM     33
C              CLOUD TYPE TWO                                                   CCM     34
  160 IF( AL .GT. 0.707 )  GO TO 180                                            CCM     35
C              LOW SUN                                                          CCM     36
      CC     = .724-.00625*ICLD+.00191*SQ-.00047*ICLD*SQ                        CCM     37
      RETURN                                                                    CCM     38
C              HIGH SUN                                                         CCM     39
  180 CC     = .959-.02304*ICLD+.00787*SQ-.00091*ICLD*SQ                        CCM     40
      RETURN                                                                    CCM     41
      END                                                                       CCM     42
      FUNCTION CONVEC(TWOUT,TGIN,TAV,ATPRES,CWHITE,CWIDTH)                      CONVEC   2
C                                                                               CONVEC   3
C              THIS FUNCTION CALCULATES THE CONVECTIVE COEFFICIENT              CONVEC   4
C              ACROSS A TROMBE WALL CHANNEL (BTU/HR-FT2-DEGF).  IT              CONVEC   5
C              USES A CORRELATION FROM KRIETH, PAGE 402, AND CURVE              CONVEC   6
C              FITS TO TABLE A-3.                                               CONVEC   7
C                                                                               CONVEC   8
C              CONVERT TAV TO FAHRENHEIT                                        CONVEC   9
      TAV    = TAV - 460.                                                       CONVEC  10
C              CON IS THE THERMAL CONDUCTIVITY OF AIR                           CONVEC  11
      CON    = 1.33071E-2 + 2.14617E-5*TAV - 4.96027E-9*TAV*TAV                 CONVEC  12
C              CALCULATE EFFECTIVE CONDUCTANCE.  GR IS THE                      CONVEC  13
C              GRASHOFF NUMBER BASED ON AVERAGE TEMPERATURE.                    CONVEC  14
      GB     = 4.19174 - 3.57423E-2*TAV + 1.30881E-4*TAV*TAV                    CONVEC  15
     1     - 1.77975E-7*TAV*TAV*TAV                                             CONVEC  16
C              PRESSURE AND MAGNITUDE CORRECTION                                CONVEC  17
      GB     = 1.E6 * GB * ATPRES * ATPRES                                      CONVEC  18
      DT     = ABS(TWOUT-TGIN)                                                  CONVEC  19
      GR     = GB * DT * CWIDTH**3                                              CONVEC  20
      IF (GR .LT. 20000)  GO TO 3                                               CONVEC  21
      CONVEC = (CON/CWIDTH)*(.065*GR**.3333)*(CWHITE/CWIDTH)**(-.111)           CONVEC  22
      GO TO 5                                                                   CONVEC  23
    3 IF (GR .LT. 2000) GO TO 4                                                 CONVEC  24
      CONVEC = (CON/CWIDTH)*(.18*GR**.25)*(CWHITE/CWIDTH)**(-.111)              CONVEC  25
      GO TO 5                                                                   CONVEC  26
    4 CONVEC = (CON/CWIDTH)                                                     CONVEC  27
    5 CONTINUE                                                                  CONVEC  28
      RETURN                                                                    CONVEC  29
      END                                                                       CONVEC  30
      BLOCK DATA DATLDS                                                         DATLDS   2
C                                                                               DATLDS   3
C                                                                               DATLDS   4
      COMMON  /LENS/   MWFLEN, MRLEN, MSHLEN, MWNLEN, MDRLEN, MXLEN,            /LENS/   2
     1                 MULEN, MZLEN, MIWLEN, MFLLEN,                            HRr      5
     2                 LMTB, LLDSOU, MSTLEN, LSTFT, MWLLEN                      BLIND    1
      COMMON  /CONST/  DTOR, PIOVR2, PIOVR4, IBLNK, UNDEF, IUNDEF,              /CONST/  2
     1                 UNFILD, URAD, DEFIFR, DEFCFR, DEFINC, KWBTU              /CONST/  3
      REAL             KWBTU                                                    /CONST/  4
      COMMON  /DAYLT/ NDAYCF,IPHS,IZ,IHIT,MHHIT,IL,RHOAV,ATOT,ARHTOT,           /DAYLT/  2
     1                AR(3),AP(3),ARH(3),ARHP(3),NPH,NTH,WC(3),TMULT,           /DAYLT/  3
     2                TSOLNM,TVISDF,FRUP,ISHLOC,NWTOT,RHOCW,RHOFW,WAREA,        /DAYLT/  4
     3                IMREF,PHSUN,THSUN,PHSUND,THSUND,THSMIN,PHSMIN,            /DAYLT/  5
     4                THSMAX,PHSMAX,THSDEL,PHSDEL,H,NTHS,NPHS,NDFC,LWDC,        /DAYLT/  6
     5                BETA,W,IBZ,IWZ,ZENL,JZD,WBACLU(2,2),PF(7,5),              /DAYLT/  7
     6                VIEWVC(3),GLRNDX(2),WDAYIL(2,2),BACLUM(2),ITF(3),         /DAYLT/  8
     7                RDAYIL(2),RBACLU(2),GLRNEW(2),ETACLD,CDIRLW(24),          /DAYLT/  9
     8                CDIFLW(24),ODIFLW(24),SOLIC(12),TFAC,SPHSUN,              /DAYLT/ 10
     9                CPHSUN,PHWN,THWN,SPHWN,CPHWN,TOTIL(2),ATMMOI(12),         /DAYLT/ 11
     1                ATMTUR(12),XRAN,ALFAD,THRAT,PHRAT,SETPNT(2),              /DAYLT/ 12
     2                IZLSG,IZLSH,IZLSJM,IZLSJY,IZDREP,FPHRP(2),ZFTOT,          /DAYLT/ 13
     3                EINTSK(2,12,24),EINTSU(2,12,24),EDIRSK(2,12,24),          VISBL    2
     4                EDIRSU(2,12,24),FLCWSK(2,12),FLCWSU(2,12),                VISBL    3
     5                FLFWSK(2,12),FLFWSU(2,12),GILSK(2,10),GILSU(2,10),        VISBL    4
     6                WLUMSK(2,11,24),WLUMSU(2,11,24),AVWLSK(2,12,24),          VISBL    5
     7                AVWLSU(2,12,24),CHILSK(24),CHILSU(24),OHILSK(24),         VISBL    6
     8                DFSKHR(2,2),DFSUHR(2,2),SFSKHR(2,2),SFSUHR(2,2),          /DAYLT/ 19
     9                BFSKHR(2,2),BFSUHR(2,2),HISUNF,CHISKF,OHISKF,IZLSM        44d5br   1
      COMMON  /DAYL1/  ATMTU, ATMMO, TAU1                                       /DAYLT/ 21
     1               , TVISB, TH, PH, RAY(3), WNORM(3), TVISBR                  /DAYLT/ 22
      COMMON /DESHQ/  IDDFLG,DESHRQ(360),IDDTYP(2)                              DDAY1    2
      COMMON  /PSYDES/  HUMRD(72)                                               /PSYDES/ 2
      COMMON  /SHDWC/  DELTAX, A0, A, B0, B, SMALP,                             /SHDWC/  2
     1                 NEP(1000),XVERTF(120),YVERTF(120),ROTMAT(3,3),           -42c     2
     2                 XO, YO, ZO, S, C                                         /SHDWC/  4
      COMMON  /WINV/   UW,TDIR,ADIRO,TDIF,ADIFO,ADIRI,ADIFI,FI,FO,              /WINV/   2
     1                 AGOLGE,QDIR,QDIF,QTRANS,QABS,QSOLG,GSHACO,               /WINV/   3
     2                 QCON,CFMW,SHMULT,SOLGMX,UWW,CWIN(4),CSUM(4),             /WINV/   4
     3                 ANWIN(4),ANSUM(4),QIRWI                                  VISBL    7
      DATA DTOR,PIOVR2,PIOVR4 /.0174532925,1.570796327,.785398164/              DATLDS  12
      DATA IBLNK /1H /                                                          DATLDS  13
C                                                                               DATLDS  14
      DATA UNDEF, IUNDEF / 0.0, 0 /                                             DATLDS  19
C                                                                               DATLDS  20
      DATA UNFILD  / -66666. /                                                  DATLDS  21
C                                                                               DATLDS  22
      DATA SMALP / 1E-9 /                                                       DATLDS  23
C                                                                               DATLDS  24
      DATA URAD, DEFIFR / .90, .68 /                                            DATLDS  25
C                                                                               DATLDS  26
C                                                                               DATLDS  27
      DATA PF                                                                   DATLDS  28
     1 / 1.00, .492, .226, .128, .081, .061, .057,                              DATLDS  29
     2   .123, .119, .065, .043, .029, .026, .023,                              DATLDS  30
     3   .019, .026, .019, .016, .014, .011, .011,                              DATLDS  31
     4   .008, .008, .008, .008, .008, .006, .006,                              DATLDS  32
     5   0.00, 0.00, .003, .003, .003, .003, .003 /                             DATLDS  33
C                                                                               DATLDS  34
      DATA ITF/2,1,3/                                                           PC       2
      DATA NTH/9/, NPH/4/                                                       PC       3
      DATA IMREF/5/                                                             PC       4
      DATA THSMIN/-110./, THSDEL/55./, NTHS/5/, NPHS/4/                         PC       5
C              COEFFICIENTS FOR C AND N AS FUNCTION OF INSIDE EMITTANCE         DATLDS  35
C              FOR SINGLE-PANE GLASS IN EXPRESSION UW = C(TOUT-TIN)**N,         DATLDS  36
C              WHERE UW = CONDUCTANCE WITHOUT OUTSIDE FILM.                     DATLDS  37
C              THESE COEFFS CALCULATED BY M. RUBIN, LBL, 4-81.                  DATLDS  38
      DATA  CWIN/.1914, .7637, .6011,-.2116/                                    DATLDS  39
      DATA ANWIN/.3168,-.6174, .5758,-.2392/                                    DATLDS  40
      DATA  CSUM/.1900, .6472,-.0179, .0073/                                    DATLDS  41
      DATA ANSUM/.3197,-.3712, .4433,-.2092/                                    DATLDS  42
C            LENGTH OF SUNSPACE SOLAR TRANSFER FACTOR BLOCK                     DATLDS  43
      DATA MSTLEN /26/                                                          DATLDS  44
      END                                                                       DATLDS  45
      SUBROUTINE DAYCLC(SPCD,ZQCM,ZLSG,ZLSH,ZLSJM,ZLSJY,ZDREP,ZLSK,             DAYCLC   2
     1                 ZLSL,ZLSM)                                               44d5br  11
C                                                                               DAYCLC   4
C              DAILY LOADS CALCULATION                                          DAYCLC   5
C                                                                               DAYCLC   6
      COMMON  /RUNTIM/ IDAYBG, IMONBG, IYRBG,  IDAYND, IMONND, IYRND            /RUNTIM/ 2
      COMMON  /NHRSHR/ NHRSHR(128), IHRCTR(5,128), NHRITM, FILEHR,ICECHS        -048j    1
      INTEGER          FILEHR                                                   /NHRSHR/ 3
      COMMON /SUMBUF/ IBUFSL,IBUFSB,IBUFSE                                      /SUMBUF/ 2
      COMMON /HRPSTA/ ISTUF(20)                                                 /HRPSTA/ 2
      COMMON  /BEPS  /  BGAREA, BNAREA, PctSysOvrld, PctPltOvrld,               HVAC6    1
     $                  SiteEnergy, SourceEnergy                                HVAC6    2
      DIMENSION         BEPS(6)                                                 HVAC6    3
      EQUIVALENCE       (BEPS(1),BGAREA)                                        HVAC6    4
      COMMON  /BLDFN/  IBF1(4), IBF2(4), IBDYF1(4), IBDYF2(4)                   /BLDFN/  2
      COMMON  /BLDHRV/ BLDDTH(18), BLDDTC(18)                                   /BLDHRV/ 2
     .               , QBELEC, QBGAS , QBHW  , QBEQEL, QBLTEL                   /BLDHRV/ 3
      COMMON  /BLDPK/  BLDPK(60), IHPP(2), ICPP(2), HRHPK, HRCPK                -063     1
      DIMENSION IBLDPK(66)                                                      -063     2
      EQUIVALENCE (IBLDPK(1),BLDPK(1))                                          /BLDPK/  4
      COMMON  /BUFERS/  MRLEN1, MRLEN2, IBLDSB,IELDSB,LLDSB,N3,IBRPB1,          HVACi    1
     1                  IERPB1,LRPB1,IBRPB2,IERPB2,LRPB2                        HVACi    2
      COMMON /CLCFLG/ IFSTHR,IPRDFL,IGOLGE,NDD,LDSTYP,IFHRP                     DDAY1    1
      COMMON  /CONST/  DTOR, PIOVR2, PIOVR4, IBLNK, UNDEF, IUNDEF,              /CONST/  2
     1                 UNFILD, URAD, DEFIFR, DEFCFR, DEFINC, KWBTU              /CONST/  3
      REAL             KWBTU                                                    /CONST/  4
      COMMON /CTRL  / VERS(2),IRPFLG(4),IOVRLL(7),IWRTFL,IPROG,                 /CTRL/   2
     1       IFATAL,NAMPRG(3,7),MTRICR                                          /CTRL/   3
      COMMON  /DAYLT/ NDAYCF,IPHS,IZ,IHIT,MHHIT,IL,RHOAV,ATOT,ARHTOT,           /DAYLT/  2
     1                AR(3),AP(3),ARH(3),ARHP(3),NPH,NTH,WC(3),TMULT,           /DAYLT/  3
     2                TSOLNM,TVISDF,FRUP,ISHLOC,NWTOT,RHOCW,RHOFW,WAREA,        /DAYLT/  4
     3                IMREF,PHSUN,THSUN,PHSUND,THSUND,THSMIN,PHSMIN,            /DAYLT/  5
     4                THSMAX,PHSMAX,THSDEL,PHSDEL,H,NTHS,NPHS,NDFC,LWDC,        /DAYLT/  6
     5                BETA,W,IBZ,IWZ,ZENL,JZD,WBACLU(2,2),PF(7,5),              /DAYLT/  7
     6                VIEWVC(3),GLRNDX(2),WDAYIL(2,2),BACLUM(2),ITF(3),         /DAYLT/  8
     7                RDAYIL(2),RBACLU(2),GLRNEW(2),ETACLD,CDIRLW(24),          /DAYLT/  9
     8                CDIFLW(24),ODIFLW(24),SOLIC(12),TFAC,SPHSUN,              /DAYLT/ 10
     9                CPHSUN,PHWN,THWN,SPHWN,CPHWN,TOTIL(2),ATMMOI(12),         /DAYLT/ 11
     1                ATMTUR(12),XRAN,ALFAD,THRAT,PHRAT,SETPNT(2),              /DAYLT/ 12
     2                IZLSG,IZLSH,IZLSJM,IZLSJY,IZDREP,FPHRP(2),ZFTOT,          /DAYLT/ 13
     3                EINTSK(2,12,24),EINTSU(2,12,24),EDIRSK(2,12,24),          VISBL    2
     4                EDIRSU(2,12,24),FLCWSK(2,12),FLCWSU(2,12),                VISBL    3
     5                FLFWSK(2,12),FLFWSU(2,12),GILSK(2,10),GILSU(2,10),        VISBL    4
     6                WLUMSK(2,11,24),WLUMSU(2,11,24),AVWLSK(2,12,24),          VISBL    5
     7                AVWLSU(2,12,24),CHILSK(24),CHILSU(24),OHILSK(24),         VISBL    6
     8                DFSKHR(2,2),DFSUHR(2,2),SFSKHR(2,2),SFSUHR(2,2),          /DAYLT/ 19
     9                BFSKHR(2,2),BFSUHR(2,2),HISUNF,CHISKF,OHISKF,IZLSM        44d5br   1
      COMMON  /DAYL1/  ATMTU, ATMMO, TAU1                                       /DAYLT/ 21
     1               , TVISB, TH, PH, RAY(3), WNORM(3), TVISBR                  /DAYLT/ 22
      COMMON  /ENDUSL/ ENDUSE(22)                                               HVAC6    5
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                         /FILES/  3
     2              , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                    /FILES/  4
     3                IHRREP(3), IHRPAS(2)                                      /FILES/  5
      COMMON /HRCNTL/  MOHRS,IYRHRS                                             /HRCNT/  2
      COMMON  /HRREP / Irb, Ihrp, Lrb, Lhrp, Nrb, Nhrp, IVTLIM(3,50),           HRr      1
     &                 IGRPtr, IBRPtr, IRSch, IRSchT(5),                        HRr      2
     &                 NHRTyp(3), ITBUF(3), ITBUFB(3), ITBUFE(3),               HRr      3
     &                 IHREOF, ICDFLG                                           HRr      4
      COMMON  /INFPAR/ PTWV,DUMG(8),PSE                                         /INFPAR/ 2
      COMMON  /ISPLST/  ISPLST(4096),ISPLOC(4096)                               -42c     1
      COMMON  /LENS/   MWFLEN, MRLEN, MSHLEN, MWNLEN, MDRLEN, MXLEN,            /LENS/   2
     1                 MULEN, MZLEN, MIWLEN, MFLLEN,                            HRr      5
     2                 LMTB, LLDSOU, MSTLEN, LSTFT, MWLLEN                      BLIND    1
      COMMON  /LOCALD/ STALAT, STALON, ITIMZ, BAZIM, BALTIT,                    /LOCALD/ 2
     1                 SSTALA, CSTALA, TSTALA, SBAZIM, CBAZIM                   /LOCALD/ 3
     2                 ,BXORG, BYORG, SHCOEF, TP1, TP2, WSTP1, WSTP2,           /LOCALD/ 4
     3                 WSHGT,WSHGTL(12),ISREFL,IHOLX                            HOLID1   2
      DIMENSION LOCALD(32)                                                      HOLID1   3
      EQUIVALENCE      (LOCALD(1),STALAT)                                       /LOCALD/ 7
      COMMON/MONREP/BCSUM(12),IDYCPK(12),IHRCPK(12),DBCPK(12),                  /MONREP/ 2
     1         WBCPK(12),BCPK(12),BHSUM(12),IDYHPK(12),                         /MONREP/ 3
     2         IHRHPK(12),DBHPK(12),WBHPK(12),BHPK(12),                         /MONREP/ 4
     3                 BESUM(12),BEPK(12),BQCM(6,11),BLSI(4,25)                 /MONREP/ 5
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     BLIND    2
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        FLOOR1   3
      COMMON  /PTRBGN/ ISCB, IWFB, IWPB, ICONSB, IGTB, IWLB, IGEOB,             HRr      6
     1                 ISHADB, IWINB, IDRB, IEWB, IUGB, ISPB, IIWPB,            HRr      7
     2                 IIWB, IFLB, ISPCDB, IOTHB, ILHB, IZQCMB, ISSHDB,         HRr      8
     3                 IOHFIB, IZLSK, IZLSL, ISTFB                              HRr      9
      COMMON  /REPORT/ IREPRT(4,37),IPRG,IUNIQV(100),IUNIQS(100),IUNIQL         BIGNAM   1
      COMMON  /SHADWF/ ISDINF, LSHSTR, ISHSTB, KMAX                             /SHADWF/ 2
      COMMON  /SIZE/   LENGTH,NVECT,NSCHED,NWF,NWPAR,NCONS,NGT,NWL,NGEO,        BLIND    5
     1                 NGSHAD, NWIN, NDOOR, NEW, NUG, NSP, NIWP, NIW,           /SIZE/   3
     2                 NFL, NDESDY, NBR, NOTH, NITH, NOPSRF,                    HRr     10
     3                 NSURF, NSSHD, NSHTOT                                     GEO1     1
      COMMON  /SUND/   ISUNUP, GUNDOG, HORANG, TDECLN, EQTIME, SOLCON,          /SUND/   2
     1                 ATMEXT, SKYDFF, RAYCOS(3), RDN,                          /SUND/   3
     2                 BSUN, DECLN, CD, SD, FSUNUP                              /SUND/   4
      COMMON /TIME  / IDOY, IDOW, IDSTF, ISCHR, ISCDAY, iDSdates(6),            -044e5r  1
     1                IMO, IDAY, IYR, IHR, CLOCK(10), IDSFLG,                   HOLID1   4
     2                MONDSC(12), MONLEN(12), MONSDA(12), IEODMR                /TIME/   4
      COMMON /TITLE / TITLE(10,5)                                               /TITLE/  2
      COMMON  /TWVHR/  QSWALL,QSGIN,QSGOUT,WCS                                  /TWHR/   2
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
      COMMON  /ZNEWHR/ TZONER, INFCOD,                                          /ZNEWHR/ 2
     1                 QWALQ, QCELQ, QWINC, QWALD, QCELD,QINTW,                 /ZNEWHR/ 3
     2                 QUGF, QUGW, QDOOR, QEQPS, QEQPS2, QPPS,                  /ZNEWHR/ 4
     3                 QPPL, QEQPL, QEQPL2, QINFL,                              /ZNEWHR/ 5
     4                 QTSKL, QSOL, QPLENM, QLITE, QLITEW, QINFS,               /ZNEWHR/ 6
     5                 QELECT, CFMINF, QSUMW, ZCOND, QZS, QZL, QZTOT,           /ZNEWHR/ 7
     6                 QZLTEL,QZEQEL,QZGAS,QZHW,WNDSPZ,MANAGE                   /ZNEWHR/ 8
     7               , QZPEL, QZTLEL                                            /ZNEWHR/ 9
      DIMENSION QYENI(33)                                                       /ZNEWHR/10
      EQUIVALENCE  (QYENI(1), QWALQ)                                            /ZNEWHR/11
      COMMON        // AA(75 000 000)                                           -048ar   1
      INTEGER          IA(75 000 000)                                           -048ar   2
      EQUIVALENCE  (IA(1), AA(1))                                               //       4
      COMMON /DESHQ/  IDDFLG,DESHRQ(360),IDDTYP(2)                              DDAY1    2
      DIMENSION  WEATH(24), SUND(12), IDATE(9)                                  DAYCLC  41
      EQUIVALENCE (WEATH(1),CLRNES)                                             DAYCLC  42
      EQUIVALENCE (SUND(1),GUNDOG)                                              DAYCLC  43
      EQUIVALENCE (IDATE(1),IDOY)                                               DAYCLC  44
      DIMENSION SPCD(60,1)                                                      -060     1
      DIMENSION ZQCM(6,11,1)                                                    DAYCLC  46
      DIMENSION ZLSG(2,14,1),ZLSH(4,25,1),ZDREP(6,1),ZLSJM(1),ZLSJY(1)          DAYCLC  47
      DIMENSION IT1(11), IT2(11)                                                DAYCLC  48
      DIMENSION ZLSK(2,6,1),ZLSL(2,3,1),ZLSM(4,2,25,1)                          44d5br  12
      COMMON /WCTRL/  IwinReturn, Imsgflg                                       /WCTRL/  2
c              For DLLs, delete Win_MB and enable msgbox.fi                     /WCTRL/  3
#ifndef _DLL                                                                 /* -051     1 */ 
      COMMON /WIN_MB/ MB_OK,MB_ICONSTOP,MB_ICONEXCLAMATION,MB_TASKMODAL,        -051     2
     &                MB_ICONINFORMATION                                        -051     3
#else                                                                        /* -051     4 */ 
      include 'msgbox.fi'                                                       -051     5
#endif                                                                       /* -051     6 */ 
C                                                                               DAYCLC  50
      DATA IT1/0,2,6,7,5,3,4,12,8,10,11/                                        DAYCLC  51
      DATA IT2/0,2,6,7,16,3,4,13,8,14,15/                                       DAYCLC  52
C                                                                               DAYCLC  53
C              FOLLOWING IS THE STRUCTURE OF THE ARRAYS ZQCM AND BQCM           DAYCLC  54
C              USED TO STORE MONTHLY AND ANNUAL LOAD COMPONENTS                 DAYCLC  55
C                                                                               DAYCLC  56
C              ZQCM(I,J,IZONE) -- ZONE LOAD COMPONENTS                          DAYCLC  57
C                                                                               DAYCLC  58
C                I = 1  SENS COOLING, MONTH                                     DAYCLC  59
C                    2  LAT  COOLING, MONTH                                     DAYCLC  60
C                    3  HEATING, MONTH                                          DAYCLC  61
C                    4  SENS COOLING, YEAR                                      DAYCLC  62
C                    5  LAT  COOLING, YEAR                                      DAYCLC  63
C                    6  HEATING, YEAR                                           DAYCLC  64
C                                                                               DAYCLC  65
C                J = 1  EXTERIOR WALLS (TILT GT 45 DEG) AND DOORS               DAYCLC  66
C                    2  ROOFS (EXT WALL WITH TILT LT 45 DEG)                    DAYCLC  67
C                    3  CONDUCTION THROUGH INTERIOR SURFACES                    DAYCLC  68
C                    4  CONDUCTION THROUGH UNDERGROUND SURFACES                 DAYCLC  69
C                    5  INFILTRATION                                            DAYCLC  70
C                    6  GLASS CONDUCTION                                        DAYCLC  71
C                    7  GLASS SOLAR                                             DAYCLC  72
C                    8  OCCUPANTS                                               DAYCLC  73
C                    9  LIGHTS                                                  DAYCLC  74
C                   10  EQUIPMENT                                               DAYCLC  75
C                   11  SOURCE (VIA SOURCE-BTU/HR)                              DAYCLC  76
C                                                                               DAYCLC  77
C              BQCM(I,J) -- BUILDING MONTHLY AND ANNUAL LOAD COMPONENTS         DAYCLC  78
C                           I AND J ARE AS FOR ZQCM ABOVE                       DAYCLC  79
C                                                                               DAYCLC  80
C                                                                               DAYCLC  81
C              GET DAYLIGHT SAVINGS FLAG                                        DAYCLC  82
      CALL  DSTIM                                                               DAYCLC  83
C              GET SCHEDULE DAY                                                 DAYCLC  84
      IDDX = 0                                                                  DDAY1   10
      IF (IDDFLG.GT.0) IDDX = IDDTYP(IDDFLG)                                    DDAY1   11
      CALL HOLIDA(IHOLX,IDDX)                                                   DDAY1   12
C              GET DAILY SOLAR QUANTITTES (SOLAR CONSTANT, ETC.)                DAYCLC  86
      CALL  SUN1                                                                DAYCLC  87
C              PREPARE SCHEDULE VECTOR POINTERS FOR CURRENT DAY .               DAYCLC  88
      CALL SCHINC(IA,NSCHED,ISCB-1,0)                                           DAYCLC  89
      IF( IwinReturn .ne. 0 ) RETURN                                            -042L4  21
C              SET POINTER TO LOADS HOURLY OUTPUT FILE BUFFER                   DAYCLC  90
C              ----------- HOUR LOOP ------------                               DAYCLC  91
      DO  8000  IHR = 1 , 24                                                    DAYCLC  92
C              ZERO BUILDING  VARIABLES                                         DAYCLC  93
      CALL  FILLN ( 0., BLDDTH(1), 18 )                                         DAYCLC  94
      CALL  FILLN ( 0., BLDDTC(1), 18 )                                         DAYCLC  95
C              ZERO BUILDING HOURLY ELEC, GAS, AND H-W                          DAYCLC  96
      QBHW   = 0.0                                                              DAYCLC  97
      QBGAS  = 0.0                                                              DAYCLC  98
      QBELEC = 0.0                                                              DAYCLC  99
      QBEQEL = 0.                                                               DAYCLC 100
      QBLTEL = 0.                                                               DAYCLC 101
C              ZERO HOURLY ENDUSE ARRAY                                         DAYCLC 102
      DO 10  I=1,22                                                             DAYCLC 103
   10 ENDUSE(I) = 0.0                                                           HVAC     9
C              ZERO GLOBAL HOURLY REP VARS FOR DAYLIGHTING                      DAYCLC 105
      IF (IGRPTR.EQ.0.OR.NHRP.EQ.0) GO TO 100                                   DAYCLC 106
      IPTR   = IGRPTR - 1                                                       DAYCLC 107
      CALL FILLN(0.,AA(IPTR+48),12)                                             DAYCLC 108
  100 CONTINUE                                                                  DAYCLC 109
C              RESET SCHEDULE HOUR FOR DAYLIGHT SAVINGS                         DAYCLC 110
      ISCHR  = IHR + IDSTF                                                      DAYCLC 111
      IF (ISCHR .EQ. 25) ISCHR = 1                                              DAYCLC 112
C              CALCULATE HOURLY SOLAR VALUES                                    DAYCLC 113
      CALL  WDTSUN                                                              DAYCLC 114
C              SOLAR ALTITUDE                                                   DAYCLC 115
      PHSUN  = 1.5708 - ACOS(RAYCOS(3))                                         DAYCLC 116
      SPHSUN = SIN(PHSUN)                                                       DAYCLC 117
      CPHSUN = COS(PHSUN)                                                       DAYCLC 118
      H      = PHSUN / DTOR                                                     DAYCLC 119
      IF(ISUNUP.EQ.0) GO TO 110                                                 DAYCLC 120
C              ALTITUDE AND AZIMUTH OF SUN (DEGREES) IN BLDG COORD SYS          DAYCLC 121
      PHSUND = H                                                                DAYCLC 122
      THSUND =  ( ATAN2( RAYCOS(2),RAYCOS(1) ) ) / DTOR                         DAYCLC 123
C              SAVE SOLAR AZIM MEASURED CLOCKWISE FROM NORTH FOR HR REP         DAYCLC 124
      THSNHR = BAZIM/DTOR + 90. - THSUND                                        DAYCLC 125
      IF (THSNHR.GE.360.) THSNHR =THSNHR - 360.                                 DAYCLC 126
      IF (THSNHR.LT.0.AND.THSNHR.GE.-360.) THSNHR = THSNHR + 360.               DAYCLC 127
      IF (THSNHR.LT.-360.) THSNHR = THSNHR + 720.                               DAYCLC 128
C              CONVERT THSUND TO COORDINATE SYSTEM IN                           DAYCLC 129
C              CONVERT TO GLOBAL COORD SYS IN                                   DAYCLC 130
C              WHICH SOUTH IS 0 DEG AND EAST IS 90 DEG                          DAYCLC 131
      THSUND = 90. - BAZIM/DTOR + THSUND                                        DAYCLC 132
C              RESTRICT THSUND TO -180 TO 180 INTERVAL                          DAYCLC 133
C              (NOTE THAT BAZIM IS BETWEEN -2PI AND 2PI)                        DAYCLC 134
      IF (THSUND.LT.-180.) THSUND = THSUND + 360.                               DAYCLC 135
      IF(THSUND.GT.180.) THSUND=THSUND-360.*(1.+AINT(THSUND/540.))              DAYCLC 136
  110 CONTINUE                                                                  DAYCLC 137
c              Set flags if hourly-reports active this hour                     HRr     19
      IF (Nhrp .GT. 0)  CALL HourlyReports(1,IPRDFL)                            HRr     20
C**************** BUILDING-LOCATION:  before function ******************        DAYCLC 164
      IF( IBF1(1) .GT. 0 )   CALL  FINTL( IBF1(1), 0. )                         DAYCLC 165
C***********************************************************************        DAYCLC 166
C              EACH MONTH RECALCULATE SHADOW RATIOS                             DAYCLC 167
      IF( IGOLGE .NE. 0 )  CALL  SHADOW                                         DAYCLC 168
C            EACH MONTH RECALCULATE SUNSPACE SOLAR TRANSFER FACTORS             DAYCLC 169
C            (USED IN SUBR. IWSOL)                                              DAYCLC 170
      IF (IGOLGE.NE.0) CALL IWSTF                                               DAYCLC 171
      IF(NDAYCF.EQ.0) GO TO 205                                                 DAYCLC 172
C              CALCULATE MONTHLY EXTERIOR DAYLIGHT AVAILABILITY FACTORS         DAYCLC 173
      IF(IGOLGE.NE.0) CALL DAVAIL                                               DAYCLC 174
C              CALCULATE CURRENT-HOUR ILLUMINANCE ON AN UNOBSTRUCTED            DAYCLC 175
C              EXTERIOR HORIZONTAL SURFACE FOR CLEAR AND OVERCAST SKY           DAYCLC 176
      IF( ISUNUP .EQ. 0 )  GOTO  205                                            DAYCLC 177
C**************** building-location: DAYL-FUNCTION  before function ****        DAYCLC 178
          IF( IBDYF1(1) .GT. 0 )   CALL  FINTL( IBDYF1(1), 0. )                 DAYCLC 179
C***********************************************************************        DAYCLC 180
           CALL  DEXTIL                                                         DAYCLC 181
C**************** building-location: DAYL-FUNCTION  after function *****        DAYCLC 182
          IF( IBDYF2(1) .GT. 0 )   CALL  FINTL( IBDYF2(1), 1. )                 DAYCLC 183
C***********************************************************************        DAYCLC 184
  205 CONTINUE                                                                  DAYCLC 185
C              INITIALIZE DAYLIT SPACE COUNTER                                  DAYCLC 186
      JZD    = 0                                                                DAYCLC 187
C              ZERO LIGHT HEAT TO OTHER SPACES                                  -045br 168
      MZ = ISPB                                                                 -045br 169
      DO  IZONE=1,NSP                                                           -045br 170
        <QltOtherRad> = 0.                                                      -045br 171
        <QltOtherCnv> = 0.                                                      -045br 172
        MZ = MZ + MZLEN                                                         -045br 173
      ENDDO                                                                     -045br 174
C              ----------- ZONE LOOP ------------                               DAYCLC 193
          DO  2008  IZONEX = 1 , NSP                                            DAYCLC 194
      IZONE  = ISPLST(IZONEX)/MZLEN + 1                                         DAYCLC 195
C  LOOP THRU ZONES, FIRST SUNSPACES, THEN CONDITIONED, THEN UNCOND.             DAYCLC 196
      MZ     = ISPLST(IZONEX) + ISPB                                            DAYCLC 197
      MX     = <MZEXT>                                                          DAYCLC 198
      MLH    = <MZLDHIST>                                                       DAYCLC 199
      MWF    = <MZWF>                                                           DAYCLC 200
      IM     = 1                                                                DAYCLC 201
      TZONER = <ZTEMP> + 460.                                                   -045br 175
      INFCOD = <IZINFC>                                                         DAYCLC 203
C              CALCULATE PRESSURE DUE TO STACK EFFECT; FOR                      DAYCLC 204
C              INSIDE TEMPERATUTE USE 74 DEG F                                  DAYCLC 205
      PSE = .255*PATM*(1./DBTR - 1./534.)*<ZHTNEU>                              DAYCLC 206
C              HEIGHT & TERRAIN CORRECTED WINDSPEED                             DAYCLC 207
      WNDSPZ = WNDSPD*<WSTMUL>                                                  DAYCLC 208
C              ZERO THE ZONE LOADS                                              DAYCLC 209
      DO 210 I=1,33                                                             DAYCLC 210
  210 QYENI(I) = 0.0                                                            DAYCLC 211
      QZPEL  = 0.0                                                              DAYCLC 212
      QZTLEL = 0.0                                                              DAYCLC 213
      MANAGE = 0                                                                DAYCLC 214
      ZCOND  = <ZCONI>                                                          DAYCLC 215
C              INCREMENT DAYLIT SPACE COUNTER                                   DAYCLC 216
      IF (<DAYLIGHTING>.NE.0) JZD = JZD + 1                                     DAYCLC 217
C**************** SPACE:  before function ******************************        DAYCLC 218
      IF( <MZFN1> .GT. 0 )   CALL  FINTL( <MZFN1>, 0. )                         DAYCLC 219
C***********************************************************************        DAYCLC 220
C              GET WALL AND WINDOW LOADS                                        DAYCLC 221
      IF (<NEXTS> .NE. 0) CALL  CALEXT (ZLSG,ZLSJM,ZLSJY,ZLSM)                  44d5br  13
      IF( IwinReturn .ne. 0 ) RETURN                                            -042L4  22
C            GET CONDUCTANCE OF SUNSPACE INTERIOR WINDOWS.                      DAYCLC 223
C            GET ADJUSTMENT TO SOLAR GAIN DUE TO DIRECT AND DIFFUSE             DAYCLC 224
C            SOLAR TRANSMITTED THROUGH WINDOWS IN THE COMMON WALL BET           DAYCLC 225
C            A SUNSPACE AND A REGULAR SPACE, AND DUE TO SOLAR ABSORBED          DAYCLC 226
C            ON THE OPAQUE PART OF THE COMMON WALL                              DAYCLC 227
      IF (<SUNSPACE>.NE.0)                                                      DAYCLC 228
     .CALL IWSOL                                                                DAYCLC 229
C              INITIALIZE LIGHTING POWER MULTIPLIER FOR SPACE                   DAYCLC 230
C              AND FOR EACH DAYL REF PT TO NO-DAYLIGHTING VALUE                 DAYCLC 231
      <POWER-RED-FAC> = 1.0                                                     DAYCLC 232
      FPHRP(1) = 1.0                                                            DAYCLC 233
      FPHRP(2) = 1.0                                                            DAYCLC 234
C              FIND LIGHTING POWER MULTIPLIER FOR DAYLIT SPACES                 DAYCLC 235
      IF (ISUNUP.NE.0.AND.<DAYLIGHTING>.NE.0)                                   DAYCLC 236
     1CALL DLTSYS                                                               DAYCLC 237
C              GET INTERNAL LOADS                                               DAYCLC 238
      CALL  CALOTH                                                              DAYCLC 239
C              IF THIS IS THE WARMUP PERIOD, DO NOT FILL                        DAYCLC 240
C              REPORT VARIABLES                                                 DAYCLC 241
      IF (IPRDFL .NE. 0) GO TO 1900                                             DAYCLC 242
C              FILL SPCD ARRAY FOR OUTPUT REPORTS                               DAYCLC 243
      QYENI(1) = QWALQ + QWALD                                                  DAYCLC 244
      QYENI(2) = QCELQ + QCELD                                                  DAYCLC 245
      QYENI(4) = QSOL                                                           DAYCLC 246
      QYENI(5) = QINFS                                                          DAYCLC 247
      QYENI(7) = QUGF + QUGW                                                    DAYCLC 248
      QYENI(8) = QLITEW + QTSKL                                                 DAYCLC 249
      IF( QZS .GT. 0. )  GO TO 20200                                            DAYCLC 250
C              HEATING LOAD                                                     DAYCLC 251
      IF(IREPRT(1,20).EQ.0) GO TO 2160                                          IREPRT  60
C              INCREMENT ZONE HEATING LOAD COMPONENTS                           DAYCLC 253
C              MONTHLY COMPONENTS                                               DAYCLC 254
      ZQCM(3,1,IZONE) = ZQCM(3,1,IZONE) + QYENI(1) + QYENI(9)                   DAYCLC 255
      DO 2161 I=2,11                                                            DAYCLC 256
 2161 ZQCM(3,I,IZONE) = ZQCM(3,I,IZONE) + QYENI( IT1(I) )                       DAYCLC 257
C              YEARLY COMPONENTS                                                DAYCLC 258
      ZQCM(6,1,IZONE) = ZQCM(6,1,IZONE) + QYENI(1) + QYENI(9)                   DAYCLC 259
      DO 2162 I=2,11                                                            DAYCLC 260
 2162 ZQCM(6,I,IZONE) = ZQCM(6,I,IZONE) + QYENI( IT1(I) )                       DAYCLC 261
 2160 CONTINUE                                                                  DAYCLC 262
      IF ((ISCHR .LT. IHPP(1)) .OR. (ISCHR .GT. IHPP(2)))  GO TO 20300          DAYCLC 263
      IF( QZS .GT. SPCD(1,IZONE) )  GO TO 20300                                 DAYCLC 264
C              STORE QUANTITIES AT PEAK SENSIBLE LOAD                           DAYCLC 265
      SPCD(1,IZONE)  = QZS                                                      DAYCLC 266
      SPCD(2,IZONE)  = QZL                                                      DAYCLC 267
      IMDH = IMO*1024 + IDAY*32 + ISCHR                                         DAYCLC 268
      SPCD(3,IZONE) = Float(IMDH)                                               -048c    1
      SPCD(4,IZONE)  = DBT                                                      DAYCLC 270
      SPCD(5,IZONE)  = WBT                                                      DAYCLC 271
C TOTAL HORIZONTAL SOLAR RADIATION AT PEAK HEATING LOAD                         -060     2
      SPCD(51,IZONE)  = SOLRAD                                                  -060     3
      SPCD(52,IZONE)  = CLDAMT                                                  -060     4
      SPCD(53,IZONE)  = WNDSPZ                                                  -060     5
      DO  2150  I = 1 , 12                                                      DAYCLC 272
      SPCD(I+10,IZONE) = QYENI(I)                                               DAYCLC 273
 2150 CONTINUE                                                                  DAYCLC 274
      SPCD(23,IZONE) = CFMINF                                                   DAYCLC 275
      SPCD(24,IZONE) = QPLENM                                                   DAYCLC 276
      GO TO 20300                                                               DAYCLC 277
20200 CONTINUE                                                                  DAYCLC 278
C              COOLING LOAD                                                     DAYCLC 279
      IF(IREPRT(1,20).EQ.0) GO TO 20510                                         IREPRT  61
C              INCREMENT ZONE COOLING LOAD COMPONENTS                           DAYCLC 281
C              MONTHLY SENSIBLE AND LATENT COMPONENTS                           DAYCLC 282
      ZQCM(1,1,IZONE) = ZQCM(1,1,IZONE) + QYENI(1) + QYENI(9)                   DAYCLC 283
      DO 20511 I=2,11                                                           DAYCLC 284
      ZQCM(1,I,IZONE) = ZQCM(1,I,IZONE) + QYENI( IT1(I) )                       DAYCLC 285
      ZQCM(2,I,IZONE) = ZQCM(2,I,IZONE) + QYENI( IT2(I) )                       DAYCLC 286
20511 CONTINUE                                                                  DAYCLC 287
C              YEARLY SENSIBLE AND LATENT COMPONENTS                            DAYCLC 288
      ZQCM(4,1,IZONE) = ZQCM(4,1,IZONE) + QYENI(1) + QYENI(9)                   DAYCLC 289
      DO 20512 I=2,11                                                           DAYCLC 290
      ZQCM(4,I,IZONE) = ZQCM(4,I,IZONE) + QYENI( IT1(I) )                       DAYCLC 291
      ZQCM(5,I,IZONE) = ZQCM(5,I,IZONE) + QYENI( IT2(I) )                       DAYCLC 292
20512 CONTINUE                                                                  DAYCLC 293
20510 CONTINUE                                                                  DAYCLC 294
      IF ((ISCHR .LT. ICPP(1)) .OR. (ISCHR .GT. ICPP(2)))  GO TO 20300          DAYCLC 295
      IF( QZS .LT. SPCD(6,IZONE) )  GO TO 20300                                 DAYCLC 296
C              STORE QUANTITIES AT SENSIBLE TOTAL LOAD                          DAYCLC 297
      SPCD(6,IZONE) = QZS                                                       DAYCLC 298
      SPCD(7,IZONE) = QZL                                                       DAYCLC 299
      IMDH = IMO*1024 + IDAY*32 + ISCHR                                         DAYCLC 300
      SPCD(8,IZONE) = Float(IMDH)                                               -048c    2
      SPCD(9,IZONE)  = DBT                                                      DAYCLC 302
      SPCD(10,IZONE)  = WBT                                                     DAYCLC 303
C TOTAL HORIZONTAL SOLAR RADIATION AT PEAK COOLING LOAD                         -060     6
      SPCD(55,IZONE)  = SOLRAD                                                  -060     7
      SPCD(56,IZONE)  = CLDAMT                                                  -060     8
      SPCD(57,IZONE)  = WNDSPZ                                                  -060     9
      DO  2250  I = 1 , 16                                                      DAYCLC 304
      SPCD(I+24,IZONE) = QYENI(I)                                               DAYCLC 305
 2250 CONTINUE                                                                  DAYCLC 306
      SPCD(41,IZONE) = CFMINF                                                   DAYCLC 307
      SPCD(42,IZONE) = QPLENM                                                   DAYCLC 308
20300 CONTINUE                                                                  DAYCLC 309
      ZMULT  = <ZMULT> * <FLOOR-MULT>                                           DAYCLC 310
C              SUM BUILDING VARIABLES                                           DAYCLC 311
      QBHW   = QBHW + QZHW*ZMULT                                                DAYCLC 312
      QBGAS  = QBGAS + QZGAS*ZMULT                                              DAYCLC 313
      QBEQEL = QBEQEL + QZEQEL*ZMULT                                            DAYCLC 314
      QBLTEL = QBLTEL + QZLTEL*ZMULT                                            DAYCLC 315
      QBELEC = QBELEC + QELECT*ZMULT                                            DAYCLC 316
C              IF UNCONDITIONED, DO NOT ADD ZONE LOADS                          DAYCLC 317
C              INTO BUILDING LOADS                                              DAYCLC 318
      IF (<ISPTYPE> .GT. 1)  GO TO 20700                                        DAYCLC 319
      IF( QZS .GE. 0. )  GO TO 20580                                            DAYCLC 320
C              CALC BUILDING HEATING LOAD                                       DAYCLC 321
      DO 20500 I = 1,16                                                         DAYCLC 322
      BLDDTH(I+2) = BLDDTH(I+2) + QYENI(I)*ZMULT                                DAYCLC 323
20500 CONTINUE                                                                  DAYCLC 324
      BLDDTH(1) = BLDDTH(1) + QZS*ZMULT                                         DAYCLC 325
      BLDDTH(2) = BLDDTH(2) + QZL*ZMULT                                         DAYCLC 326
      IF(IREPRT(1,21).EQ.0) GO TO 2165                                          IREPRT  62
C              INCREMENT BLDG HEATING LOAD COMPONENTS                           DAYCLC 328
C              MONTHLY COMPONENTS                                               DAYCLC 329
      BQCM(3,1) = BQCM(3,1) + ZMULT * ( QYENI(1) + QYENI(9) )                   DAYCLC 330
      DO 2163 I=2,11                                                            DAYCLC 331
 2163 BQCM(3,I) = BQCM(3,I) + ZMULT * QYENI( IT1(I) )                           DAYCLC 332
C              YEARLY COMPONENTS                                                DAYCLC 333
      BQCM(6,1) = BQCM(6,1) + ZMULT * (QYENI(1) + QYENI(9))                     DAYCLC 334
      DO 2164 I=2,11                                                            DAYCLC 335
 2164 BQCM(6,I) = BQCM(6,I) + ZMULT * QYENI( IT1(I) )                           DAYCLC 336
 2165 CONTINUE                                                                  DAYCLC 337
      GO TO 20700                                                               DAYCLC 338
C              CALC BUILDING COOLING LOAD                                       DAYCLC 339
20580 DO  20600  I = 1 , 16                                                     DAYCLC 340
      BLDDTC(I+2) = BLDDTC(I+2) + QYENI(I)*ZMULT                                DAYCLC 341
20600 CONTINUE                                                                  DAYCLC 342
      BLDDTC(1) = BLDDTC(1) + QZS*ZMULT                                         DAYCLC 343
      BLDDTC(2) = BLDDTC(2) + QZL*ZMULT                                         DAYCLC 344
      IF(IREPRT(1,21).EQ.0) GO TO 20610                                         IREPRT  63
C              INCREMENT BLDG COOLING LOAD COMPONENTS                           DAYCLC 346
C              MONTHLY SENSIBLE AND LATENT COMPONENTS                           DAYCLC 347
      BQCM(1,1) = BQCM(1,1) + ZMULT * ( QYENI(1) + QYENI(9) )                   DAYCLC 348
      DO 20611 I=2,11                                                           DAYCLC 349
      BQCM(1,I) = BQCM(1,I) + ZMULT * QYENI( IT1(I) )                           DAYCLC 350
      BQCM(2,I) = BQCM(2,I) + ZMULT * QYENI( IT2(I) )                           DAYCLC 351
20611 CONTINUE                                                                  DAYCLC 352
C              YEARLY SENSIBLE AND LATENT COMPONENTS                            DAYCLC 353
      BQCM(4,1) = BQCM(4,1) + ZMULT * ( QYENI(1) + QYENI(9) )                   DAYCLC 354
      DO 20612 I=2,11                                                           DAYCLC 355
      BQCM(4,I) = BQCM(4,I) + ZMULT * QYENI( IT1(I) )                           DAYCLC 356
      BQCM(5,I) = BQCM(5,I) + ZMULT * QYENI( IT2(I) )                           DAYCLC 357
20612 CONTINUE                                                                  DAYCLC 358
20610 CONTINUE                                                                  DAYCLC 359
20700 CONTINUE                                                                  DAYCLC 360
      IF (IREPRT(1,26).EQ.0) GOTO 22000                                         IREPRT  64
C               TASK LIGHTING                                                   DAYCLC 362
      ZLSK(1,1,IZONE)=ZLSK(1,1,IZONE)+QZTLEL*ZMULT                              DAYCLC 363
      ZLSK(2,1,IZONE)=ZLSK(2,1,IZONE)+QZTLEL*ZMULT                              DAYCLC 364
      ZLSK(1,1,NSP+1)=ZLSK(1,1,NSP+1)+QZTLEL*ZMULT                              DAYCLC 365
      ZLSK(2,1,NSP+1)=ZLSK(2,1,NSP+1)+QZTLEL*ZMULT                              DAYCLC 366
C               TOTAL LIGHTING                                                  DAYCLC 367
      ZLSK(1,2,IZONE)=ZLSK(1,2,IZONE)+QZLTEL*ZMULT                              DAYCLC 368
      ZLSK(2,2,IZONE)=ZLSK(2,2,IZONE)+QZLTEL*ZMULT                              DAYCLC 369
      ZLSK(1,2,NSP+1)=ZLSK(1,2,NSP+1)+QZLTEL*ZMULT                              DAYCLC 370
      ZLSK(2,2,NSP+1)=ZLSK(2,2,NSP+1)+QZLTEL*ZMULT                              DAYCLC 371
C               EQUIPMENT                                                       DAYCLC 372
      ZLSK(1,3,IZONE)=ZLSK(1,3,IZONE)+(QZEQEL-QZPEL)*ZMULT                      DAYCLC 373
      ZLSK(2,3,IZONE)=ZLSK(2,3,IZONE)+(QZEQEL-QZPEL)*ZMULT                      DAYCLC 374
      ZLSK(1,3,NSP+1)=ZLSK(1,3,NSP+1)+(QZEQEL-QZPEL)*ZMULT                      DAYCLC 375
      ZLSK(2,3,NSP+1)=ZLSK(2,3,NSP+1)+(QZEQEL-QZPEL)*ZMULT                      DAYCLC 376
C               PROCESS ELECTRIC                                                DAYCLC 377
      ZLSK(1,4,IZONE)=ZLSK(1,4,IZONE)+QZPEL*ZMULT                               DAYCLC 378
      ZLSK(2,4,IZONE)=ZLSK(2,4,IZONE)+QZPEL*ZMULT                               DAYCLC 379
      ZLSK(1,4,NSP+1)=ZLSK(1,4,NSP+1)+QZPEL*ZMULT                               DAYCLC 380
      ZLSK(2,4,NSP+1)=ZLSK(2,4,NSP+1)+QZPEL*ZMULT                               DAYCLC 381
C               PROCESS GAS                                                     DAYCLC 382
      ZLSK(1,5,IZONE)=ZLSK(1,5,IZONE)+QZGAS*ZMULT                               DAYCLC 383
      ZLSK(2,5,IZONE)=ZLSK(2,5,IZONE)+QZGAS*ZMULT                               DAYCLC 384
      ZLSK(1,5,NSP+1)=ZLSK(1,5,NSP+1)+QZGAS*ZMULT                               DAYCLC 385
      ZLSK(2,5,NSP+1)=ZLSK(2,5,NSP+1)+QZGAS*ZMULT                               DAYCLC 386
C               PROCESS HOT WATER                                               DAYCLC 387
      ZLSK(1,6,IZONE)=ZLSK(1,6,IZONE)+QZHW*ZMULT                                DAYCLC 388
      ZLSK(2,6,IZONE)=ZLSK(2,6,IZONE)+QZHW*ZMULT                                DAYCLC 389
      ZLSK(1,6,NSP+1)=ZLSK(1,6,NSP+1)+QZHW*ZMULT                                DAYCLC 390
      ZLSK(2,6,NSP+1)=ZLSK(2,6,NSP+1)+QZHW*ZMULT                                DAYCLC 391
C                                                                               DAYCLC 392
22000 CONTINUE                                                                  DAYCLC 393
C              ENERGY END-USES                                                  DAYCLC 394
      ENDUSE(1)  = ENDUSE(1)  + (QZLTEL-QZTLEL) *ZMULT*KWBTU                    HVAC    10
      ENDUSE(2)  = ENDUSE(2)  +  QZTLEL         *ZMULT*KWBTU                    HVAC    11
      ENDUSE(3)  = ENDUSE(3)  + (QZEQEL-QZPEL)  *ZMULT*KWBTU                    HVAC    12
      ENDUSE(4)  = ENDUSE(4)  +  QZPEL          *ZMULT*KWBTU                    HVAC    13
      ENDUSE(14) = ENDUSE(14) +  QZGAS          *ZMULT                          HVAC    14
      IF (IREPRT(1,27).EQ.0) GOTO 23000                                         IREPRT  65
C               MANAGEMENT HOUR COUNT                                           DAYCLC 401
      ZLSL(1,1,IZONE)=ZLSL(1,1,IZONE)+FLOAT(MANAGE)                             DAYCLC 402
      ZLSL(2,1,IZONE)=ZLSL(2,1,IZONE)+FLOAT(MANAGE)                             DAYCLC 403
C               AVERAGE SOLAR                                                   DAYCLC 404
      ZLSL(1,2,IZONE)=ZLSL(1,2,IZONE)+<QSOL1>                                   DAYCLC 405
      ZLSL(2,2,IZONE)=ZLSL(2,2,IZONE)+<QSOL1>                                   DAYCLC 406
C              MAXIMUM SOLAR                                                    DAYCLC 407
      IF(<QSOL1>.GT.ZLSL(1,3,IZONE)) ZLSL(1,3,IZONE)=<QSOL1>                    DAYCLC 408
      IF(<QSOL1>.GT.ZLSL(2,3,IZONE)) ZLSL(2,3,IZONE)=<QSOL1>                    DAYCLC 409
23000 CONTINUE                                                                  DAYCLC 410
C              FILL DAYLIGHTING SUMMARY REPORT ARRAYS (SEE ALSO SUBR.           DAYCLC 411
C              DINTIL)                                                          DAYCLC 412
      IF (NDAYCF.EQ.0) GO TO 1900                                               DAYCLC 413
C              INCREMENT MONTHLY AND YEARLY SUM OF BUILDING LIGHTING            DAYCLC 414
C              ENERGY FOR USE BY REPORT LS-I                                    DAYCLC 415
      IL = 1                                                                    COMB01   1
      IF (IREPRT(1,24).EQ.0.OR.<LIGHTING-SCHEDUL>.EQ.0) GO TO 21220             -045br 176
      DZLSI  = AA(<@LIGHTING-SCHEDUL> + ISCHR) * <ZQLT> * <ZMULT>               -045br 177
      DO 21215 I = 3,4                                                          DAYCLC 419
      BLSI(I,IHR) = BLSI(I,IHR) + DZLSI                                         DAYCLC 420
21215 BLSI(I,25)  = BLSI(I,25)  + DZLSI                                         DAYCLC 421
21220 CONTINUE                                                                  DAYCLC 422
      IF (<DAYLIGHTING>.EQ.0) GO TO 21000                                       DAYCLC 423
      IF (<LIGHTING-SCHEDUL>.EQ.0) GO TO 21600                                  -045br 178
      SchV   = AA(<@LIGHTING-SCHEDUL> + ISCHR)                                  -045br 179
      DZLS   = (1. - <POWER-RED-FAC>) * SchV                                    -045br 180
      IF (IREPRT(1,22).EQ.0) GO TO 21700                                        IREPRT  67
C              ACCUMULATE LIGHTING ENERGY REDUCTION FACTORS FOR LS-G            DAYCLC 428
      ZDREP(3,JZD) = ZDREP(3,JZD) + SchV                                        -045br 181
      ZDREP(4,JZD) = ZDREP(4,JZD) + SchV                                        -045br 182
C              LIGHTING ENERGY REDUCTION, ALL HOURS                             DAYCLC 431
C                --- TOTAL ZONE                                                 DAYCLC 432
      ZLSG(1,1,JZD) = ZLSG(1,1,JZD) + DZLS                                      DAYCLC 433
      ZLSG(2,1,JZD) = ZLSG(2,1,JZD) + DZLS                                      DAYCLC 434
C                --- FOR EACH REFERENCE POINT                                   DAYCLC 435
      DZLSG1 = (1.-FPHRP(1)) * SchV                                             -045br 183
      ZLSG(1,2,JZD) = ZLSG(1,2,JZD) + DZLSG1                                    DAYCLC 437
      ZLSG(2,2,JZD) = ZLSG(2,2,JZD) + DZLSG1                                    DAYCLC 438
      IF (<NREFP>.EQ.1) GO TO 21600                                             DAYCLC 439
      DZLSG2 = (1.-FPHRP(2)) * SchV                                             -045br 184
      ZLSG(1,3,JZD) = ZLSG(1,3,JZD) + DZLSG2                                    DAYCLC 441
      ZLSG(2,3,JZD) = ZLSG(2,3,JZD) + DZLSG2                                    DAYCLC 442
21600 CONTINUE                                                                  DAYCLC 443
C              LIGHTING ENERGY REDUCTION FOR DAYL-REP-SCH HOURS                 DAYCLC 444
      REPM   = 1.0                                                              DAYCLC 445
      IF (<KZDREP>.EQ.0) GO TO 21620                                            DAYCLC 446
      REPM   = AA(<@KZDREP> + ISCHR)                                            DAYCLC 447
21620 CONTINUE                                                                  DAYCLC 448
      IF((REPM.LT.0.5).OR.(IREPRT(1,22).EQ.0)) GOTO 21700                       -021     1
      IF (ISUNUP.NE.0) ZDREP(1,JZD) = ZDREP(1,JZD) + 1.                         DAYCLC 450
      IF (ISUNUP.NE.0) ZDREP(2,JZD) = ZDREP(2,JZD) + 1.                         DAYCLC 451
      IF (<LIGHTING-SCHEDUL>.EQ.0) GO TO 21000                                  -045br 185
      ZDREP(5,JZD) = ZDREP(5,JZD) + SchV                                        -045br 186
      ZDREP(6,JZD) = ZDREP(6,JZD) + SchV                                        -045br 187
      ZLSG(1,4,JZD) = ZLSG(1,4,JZD) + DZLS                                      DAYCLC 455
      ZLSG(2,4,JZD) = ZLSG(2,4,JZD) + DZLS                                      DAYCLC 456
      ZLSG(1,5,JZD) = ZLSG(1,5,JZD) + DZLSG1                                    DAYCLC 457
      ZLSG(2,5,JZD) = ZLSG(2,5,JZD) + DZLSG1                                    DAYCLC 458
      IF (<NREFP>.EQ.1) GO TO 21700                                             DAYCLC 459
      ZLSG(1,6,JZD) = ZLSG(1,6,JZD) + DZLSG2                                    DAYCLC 460
      ZLSG(2,6,JZD) = ZLSG(2,6,JZD) + DZLSG2                                    DAYCLC 461
21700 CONTINUE                                                                  DAYCLC 462
      IF (<LIGHTING-SCHEDUL>.EQ.0) GO TO 21000                                  -045br 188
      IF (IREPRT(1,23).EQ.0) GO TO 21800                                        IREPRT  68
C              ACCUMULATE LIGHTING REDUCTION FACTORS FOR LS-H                   DAYCLC 465
      DO 21750 I=1,2                                                            DAYCLC 466
      ZLSH(I,IHR,JZD) = ZLSH(I,IHR,JZD) + DZLS                                  DAYCLC 467
      ZLSH(I+2,IHR,JZD) = ZLSH(I+2,IHR,JZD) + SchV                              -045br 189
      ZLSH(I,25,JZD) = ZLSH(I,25,JZD) + DZLS                                    DAYCLC 469
      ZLSH(I+2,25,JZD) = ZLSH(I+2,25,JZD) + SchV                                -045br 190
21750 CONTINUE                                                                  DAYCLC 471
21800 CONTINUE                                                                  DAYCLC 472
      IF (IREPRT(1,24).EQ.0) GO TO 21000                                        IREPRT  69
C              ACCUMULATE LIGHTING REDUCTION FACTORS FOR LS-I                   DAYCLC 474
      DZQLT  = <ZQLT> * <ZMULT> * DZLS                                          DAYCLC 475
      BLSI(1,IHR) = BLSI(1,IHR) + DZQLT                                         DAYCLC 476
      BLSI(2,IHR) = BLSI(2,IHR) + DZQLT                                         DAYCLC 477
      BLSI(1,25) = BLSI(1,25) + DZQLT                                           DAYCLC 478
      BLSI(2,25) = BLSI(2,25) + DZQLT                                           DAYCLC 479
21000 CONTINUE                                                                  DAYCLC 480
 1900 CONTINUE                                                                  DAYCLC 481
C              STORE HOURLY QUANTITIES TO BE PASSED TO SYSTEMS.                 DAYCLC 482
C              RECORD WILL CONTAIN ONE DAY OF OUTPUT.                           DAYCLC 483
C              ZONE SENSIBLE, LATENT, PLENUM RETURN, INFILTRATION, CONDUCTANCE, DAYCLC 484
C              AREA LIGHTS, TASK LIGHTS, EQUIPMENT, PROCESS ELECTRICAL,         DAYCLC 485
C              PROCESS GAS, PROCESS HOT WATER                                   DAYCLC 486
C              IF WORD SIZE = 30 BIT, PASS 11 WORDS PER HOUR                    DAYCLC 487
      IZBPTR = <LDSOUT> + (IHR - 1) * LLDSOU + IBLDSB                           LDS2     1
 1950 AA(IZBPTR)    = QZS                                                       DAYCLC 489
      AA(IZBPTR+1)  = QZL                                                       DAYCLC 490
      AA(IZBPTR+2)  = QPLENM                                                    DAYCLC 491
      AA(IZBPTR+3)  = CFMINF                                                    DAYCLC 492
      AA(IZBPTR+4)  = ZCOND                                                     DAYCLC 493
      AA(IZBPTR+5)  = QZLTEL - QZTLEL                                           DAYCLC 494
      AA(IZBPTR+6)  = QZTLEL                                                    DAYCLC 495
      AA(IZBPTR+7)  = QZEQEL - QZPEL                                            DAYCLC 496
      AA(IZBPTR+8)  = QZPEL                                                     DAYCLC 497
      AA(IZBPTR+9)  = QZGAS                                                     DAYCLC 498
      AA(IZBPTR+10) = QZHW                                                      DAYCLC 499
 1960 CONTINUE                                                                  DAYCLC 500
C          N1 IS LENGTH OF HOURLY DATA BUFFER FOR EACH ZONE IN SYSTEMS          DAYCLC 501
C          MAY VARY ACCORDING TO 60 BIT OR 30 BIT (IWSIZ=2) WORD SIZE.          DAYCLC 502
C          *** NOTE: 60 BIT LENGTH MAY NOT BE CORRECT                           DAYCLC 503
      N1 = 4                                                                    DAYCLC 504
      IF (IWSIZ .EQ. 2) N1 = 11                                                 DAYCLC 505
      IZBPTR = IZBPTR + N1                                                      DAYCLC 506
      N2 = 0                                                                    DAYCLC 507
      IF (<FEATURE>.NE.1) GO TO 1990                                            DAYCLC 508
      N2 = 4                                                                    DAYCLC 509
C            TROMBE WALL HOURLY DATA                                            DAYCLC 510
      MX = <MZEXT>                                                              DAYCLC 511
      MP     = <MXPROPRL>                                                       LDS1     8
      MWP = <MPEXPAR>                                                           DAYCLC 513
      AA(IZBPTR) = QSWALL                                                       DAYCLC 514
      AA(IZBPTR+1) = QSGIN                                                      DAYCLC 515
      AA(IZBPTR+2) = QSGOUT                                                     DAYCLC 516
      AA(IZBPTR+3) = WCS                                                        DAYCLC 517
 1990 CONTINUE                                                                  DAYCLC 518
      IZBPTR = IZBPTR + N2                                                      DAYCLC 519
C            HOURLY DATA FOR SUNSPACE COMMON WALLS DEFINED IN THIS SPACE        DAYCLC 520
      NIW1 = <NINTS>                                                            DAYCLC 521
      IF (NIW1.EQ.0) GO TO 1996                                                 DAYCLC 522
      DO 1995 IW1 = 1,NIW1                                                      DAYCLC 523
      MI = IA(<MZINT>+IW1-1)                                                    DAYCLC 524
C            SKIP IF NOT A SUNSPACE COMMON WALL DEFINED IN THIS SPACE           DAYCLC 525
      IF (<MZIN>.NE.MZ.OR.<IWSSPID>.NE.1) GO TO 1995                            DAYCLC 526
      MP = <MIWPROP>                                                            DAYCLC 527
      MWP = <MPEXPAR>                                                           DAYCLC 528
C            SOLAR ABSORBED ON SUNSPACE SIDE OF WALL (BTU)                      DAYCLC 529
      AA(IZBPTR) = <SOLABSIW>*FLOAT(ISUNUP)                                     DAYCLC 530
C            U*A FOR WINDOWS IN THIS WALL                                       DAYCLC 531
      AA(IZBPTR+1) = <IWNSUA>                                                   DAYCLC 532
C           SOLAR TRANSMITTED THRU WINS IN WALL FROM SUNSPACE TO                DAYCLC 533
C           ADJACENT SPACE (BTU)                                                DAYCLC 534
C             (IN 2.1D, THIS IS PASSED TO SYSTEMS BUT NOT USED)                 DAYCLC 535
      IF(IREPRT(1,35).NE.0)                                                     IREPRT  70
     1   WRITE(IOUTPT,91995) IHR,MZ,MI,<SOLTRNIW>,<SOLABSIW>,<IWNSUA>           DAYCLC 537
91995 FORMAT(' DAYCLC--IHR,MZ,MI,SOLTRNIW,SOLABSIW,IWNSUA=',3I5,3F10.3)         DAYCLC 538
      AA(IZBPTR+2) = <SOLTRNIW>*FLOAT(ISUNUP)                                   DAYCLC 539
C            NEXT WORD IS UNUSED                                                DAYCLC 540
      IA(IZBPTR+3) = 0                                                          DAYCLC 541
      IZBPTR = IZBPTR + 4                                                       DAYCLC 542
 1995 CONTINUE                                                                  DAYCLC 543
 1996 CONTINUE                                                                  DAYCLC 544
 2000 CONTINUE                                                                  DAYCLC 545
2008  CONTINUE                                                                  DAYCLC 546
C**************** BUILDING-LOCATION:  after function ****************           DAYCLC 547
      IF( IBF2(1) .GT. 0 )   CALL  FINTL( IBF2(1), 0. )                         DAYCLC 548
C*******************************************************************            DAYCLC 549
C              -------- END OF ZONE LOOP --------                               DAYCLC 550
C              RESET RUN PERIOD FIRST HOUR FLAG (SET IN LOADS)                  DAYCLC 551
      IFHRP = 0                                                                 DAYCLC 552
C              RESET FIRST HOUR FLAG                                            DAYCLC 553
      IFSTHR = 0                                                                DAYCLC 554
C              SKIP MONTHLY REPORTS IF WARMUP                                   DAYCLC 555
      IF (IPRDFL .NE. 0)  GO TO 2210                                            DAYCLC 556
C              CHECK FOR AND SAVE BUILDING PEAK LOADS                           DAYCLC 557
      CALL  PEAKCK ( BLDDTH )                                                   DAYCLC 558
      CALL  PEAKCK ( BLDDTC )                                                   DAYCLC 559
C              CALC. MONTHLY BUILDING SUMS AND PEAKS                            DAYCLC 560
      BHSUM(IMO) = BHSUM(IMO) + BLDDTH(1)                                       DAYCLC 561
      BCSUM(IMO) = BCSUM(IMO) + BLDDTC(1)                                       DAYCLC 562
      BESUM(IMO) = BESUM(IMO) + QBELEC                                          DAYCLC 563
      IF (BLDDTH(1) .GE. BHPK(IMO))  GO TO 2100                                 DAYCLC 564
      IF ((ISCHR .LT. IHPP(1)) .OR. (ISCHR .GT. IHPP(2)))  GO TO 2100           DAYCLC 565
      BHPK(IMO) = BLDDTH(1)                                                     DAYCLC 566
      IDYHPK(IMO) = IDAY                                                        DAYCLC 567
      IHRHPK(IMO) = IHR                                                         DAYCLC 568
      DBHPK(IMO)=DBT                                                            DAYCLC 569
      WBHPK(IMO)=WBT                                                            DAYCLC 570
 2100 CONTINUE                                                                  DAYCLC 571
      IF (BLDDTC(1) .LE. BCPK(IMO))  GO TO 2200                                 DAYCLC 572
      IF ((ISCHR .LT. ICPP(1)) .OR. (ISCHR .GT. ICPP(2)))  GO TO 2200           DAYCLC 573
      BCPK(IMO) = BLDDTC(1)                                                     DAYCLC 574
      IDYCPK(IMO) = IDAY                                                        DAYCLC 575
      IHRCPK(IMO) = IHR                                                         DAYCLC 576
      DBCPK(IMO)=DBT                                                            DAYCLC 577
      WBCPK(IMO)=WBT                                                            DAYCLC 578
 2200 CONTINUE                                                                  DAYCLC 579
      IF (BEPK(IMO) .LT. QBELEC)  BEPK(IMO) = QBELEC                            DAYCLC 580
 2210 CONTINUE                                                                  DAYCLC 581
c                                                                               HRr     21
c              Hourly-reports                                                   HRr     22
c              First, non-component specific report-blocks                      HRr     23
      IF (IRSch .GT. 0)  THEN                                                   HRr     24
c              Global                                                           HRr     25
        IF (IGRPTR .GT. 0)  THEN                                                HRr     26
          IGP    = IGRPTR - 1                                                   HRr     27
          DO  I=1,18                                                            HRr     28
            AA(IGP+I) = WEATH(I)                                                HRr     29
          ENDDO                                                                 HRr     30
          AA(IGP+7) = FLOAT(IA(IGP+7))                                          HRr     31
          AA(IGP+8) = FLOAT(IA(IGP+8))                                          HRr     32
          AA(IGP+9) = FLOAT(IA(IGP+9))                                          HRr     33
          AA(IGP+16) = FLOAT(IA(IGP+16))                                        HRr     34
          DO  I=18,24                                                           HRr     35
            AA(IGP+I)=WEATH(I+1)                                                HRr     36
          ENDDO                                                                 HRr     37
          DO  I=1,12                                                            HRr     38
            AA(IGP+I+25) = SUND(I)                                              HRr     39
          ENDDO                                                                 HRr     40
          IPTR   = IGP + 37                                                     HRr     41
          AA(IPTR+1) = FLOAT(IYR)                                               HRr     42
          AA(IPTR+2) = FLOAT(IMO)                                               HRr     43
          AA(IPTR+3) = FLOAT(IDAY)                                              HRr     44
          AA(IPTR+4) = FLOAT(IHR)                                               HRr     45
          AA(IPTR+5) = FLOAT(IDOY)                                              HRr     46
          AA(IPTR+6) = FLOAT(IDOW)                                              HRr     47
          AA(IPTR+7) = FLOAT(ISCHR)                                             HRr     48
          AA(IPTR+8) = FLOAT(ISCDOW)                                            HRr     49
          AA(IPTR+9) = FLOAT(IDSTF)                                             HRr     50
          AA(IGP+25) = FLOAT(ISUNUP)                                            HRr     51
          AA(IGP+47) = PTWV                                                     HRr     52
          IF (ISUNUP .GT. 0)  THEN                                              HRr     53
            AA(IGP+50) = H                                                      HRr     54
            AA(IGP+51) = THSNHR                                                 HRr     55
            IF (NDAYCF .GT. 0)  THEN                                            HRr     56
c              Daylighting                                                      HRr     57
              AA(IGP+48) = ATMTUR(IMO)                                          HRr     58
              AA(IGP+49) = ATMMOI(IMO)                                          HRr     59
              AA(IGP+52) = ETACLD                                               HRr     60
              AA(IGP+53) = CHISKF                                               HRr     61
              AA(IGP+54) = OHISKF                                               HRr     62
              AA(IGP+55) = HISUNF                                               HRr     63
              AA(IGP+56) = ALFAD                                                HRr     64
              AA(IGP+57) = CDIRLW(IHR)                                          HRr     65
              AA(IGP+58) = CDIFLW(IHR)                                          HRr     66
              AA(IGP+59) = ODIFLW(IHR)                                          HRr     67
            ENDIF                                                               HRr     68
          ENDIF                                                                 HRr     69
        ENDIF  ! IGRPTR                                                         HRr     70
c              Building level data                                              HRr     71
        IF (IBRPTR .GT. 0)  THEN                                                HRr     72
          IBP    = IBRPTR - 1                                                   HRr     73
          DO  I=1,18                                                            HRr     74
            AA(IBP+I) = BLDDTH(I)                                               HRr     75
          ENDDO                                                                 HRr     76
          DO  I=1,18                                                            HRr     77
            AA(IBP+I+18) = BLDDTC(I)                                            HRr     78
          ENDDO                                                                 HRr     79
          AA(IBP+37) = QBELEC                                                   HRr     80
          AA(IBP+38) = QBGAS                                                    HRr     81
          AA(IBP+39) = QBHW                                                     HRr     82
          AA(IBP+40) = QBEQEL                                                   HRr     83
          AA(IBP+41) = QBLTEL                                                   HRr     84
c              spare variables                                                  HRr     85
          AA(IBP+42) = 0.                                                       HRr     86
          AA(IBP+43) = 0.                                                       HRr     87
          AA(IBP+44) = 0.                                                       HRr     88
          AA(IBP+45) = 0.                                                       HRr     89
        ENDIF  ! IBRPTR                                                         HRr     90
      ENDIF  ! IRSch                                                            HRr     91
c              Process hourly reports                                           HRr     92
      IF (Nhrp .GT. 0)  CALL HourlyReports(2,xx)                                HRr     93
c                                                                               HRr     94
      IF (IPRDFL.NE.0) GOTO 8000                                                DAYCLC 711
C              KEEP TRACK OF THE NUMBER OF HOURS IN THE MONTH AND YEAR          DAYCLC 712
      MOHRS  = MOHRS+1                                                          DAYCLC 713
      IYRHRS = IYRHRS+1                                                         DAYCLC 714
C                                                                               DAYCLC 715
 8000 CONTINUE                                                                  DAYCLC 716
C              ----------- END OF HOURLY LOOP ----------                        DAYCLC 717
C              IF THE WRITE FLAG IS SET, WRITE THE LOADS                        DAYCLC 718
C              OUTPUT FILE, 1 RECORD/DAY                                        DAYCLC 719
      IF(IWRTFL .NE. 0)                                                         DAYCLC 720
     1 WRITE (ILDSO) (AA(I), I=IBLDSB,IELDSB)                                   DAYCLC 721
C***                                                                            DAYCLC 722
      ILDUMP = IELDSB-IBLDSB+1                                                  DAYCLC 723
      IF (IREPRT(1,35).NE.0 .and. IREPRT(1,33).NE.0)                            IREPRT  71
     $CALL DUMPIT(20HHOURLY OUTPUT       ,IA(IBLDSB),ILDUMP)                    DAYCLC 725
C***                                                                            DAYCLC 726
      RETURN                                                                    DAYCLC 727
      END                                                                       DAYCLC 728
      SUBROUTINE  DAVAIL                                                        DAVAIL   2
C                                                                               DAVAIL   3
C              CALLED BY DAYCLC.  CALCULATES AVAILABILITY OF NATURAL            DAVAIL   4
C              LIGHT FOR DAYLIGHTING SIMULATION.  DETERMINES SUN AND            DAVAIL   5
C              SKY ILLUMINANCE ON AN EXTERIOR HORIZONTAL SURFACE FOR            DAVAIL   6
C              CLEAR AND OVERCAST CIE SKIES IN LUMENS/SF.                       DAVAIL   7
C              CALLED ONCE EACH HOUR FOR ONE DAY PER MONTH.                     DAVAIL   8
C              IF MEASURED SOLAR DATA IS ON WEATHER                             DAVAIL   9
C              FILE, ALSO DETERMINES LUMENS/WATT CONVERSION FACTORS FOR         DAVAIL  10
C              DIRECT AND DIFFUSE SOLAR RADIATION FROM CIE CLEAR SKY            DAVAIL  11
C              (CDIRLW,CDIFLW), AND FOR DIFFUSE RADIATION FROM CIE              DAVAIL  12
C              OVERCAST SKY (ODIFLW).                                           DAVAIL  13
C                                                                               DAVAIL  14
      COMMON  /DAYLT/ NDAYCF,IPHS,IZ,IHIT,MHHIT,IL,RHOAV,ATOT,ARHTOT,           /DAYLT/  2
     1                AR(3),AP(3),ARH(3),ARHP(3),NPH,NTH,WC(3),TMULT,           /DAYLT/  3
     2                TSOLNM,TVISDF,FRUP,ISHLOC,NWTOT,RHOCW,RHOFW,WAREA,        /DAYLT/  4
     3                IMREF,PHSUN,THSUN,PHSUND,THSUND,THSMIN,PHSMIN,            /DAYLT/  5
     4                THSMAX,PHSMAX,THSDEL,PHSDEL,H,NTHS,NPHS,NDFC,LWDC,        /DAYLT/  6
     5                BETA,W,IBZ,IWZ,ZENL,JZD,WBACLU(2,2),PF(7,5),              /DAYLT/  7
     6                VIEWVC(3),GLRNDX(2),WDAYIL(2,2),BACLUM(2),ITF(3),         /DAYLT/  8
     7                RDAYIL(2),RBACLU(2),GLRNEW(2),ETACLD,CDIRLW(24),          /DAYLT/  9
     8                CDIFLW(24),ODIFLW(24),SOLIC(12),TFAC,SPHSUN,              /DAYLT/ 10
     9                CPHSUN,PHWN,THWN,SPHWN,CPHWN,TOTIL(2),ATMMOI(12),         /DAYLT/ 11
     1                ATMTUR(12),XRAN,ALFAD,THRAT,PHRAT,SETPNT(2),              /DAYLT/ 12
     2                IZLSG,IZLSH,IZLSJM,IZLSJY,IZDREP,FPHRP(2),ZFTOT,          /DAYLT/ 13
     3                EINTSK(2,12,24),EINTSU(2,12,24),EDIRSK(2,12,24),          VISBL    2
     4                EDIRSU(2,12,24),FLCWSK(2,12),FLCWSU(2,12),                VISBL    3
     5                FLFWSK(2,12),FLFWSU(2,12),GILSK(2,10),GILSU(2,10),        VISBL    4
     6                WLUMSK(2,11,24),WLUMSU(2,11,24),AVWLSK(2,12,24),          VISBL    5
     7                AVWLSU(2,12,24),CHILSK(24),CHILSU(24),OHILSK(24),         VISBL    6
     8                DFSKHR(2,2),DFSUHR(2,2),SFSKHR(2,2),SFSUHR(2,2),          /DAYLT/ 19
     9                BFSKHR(2,2),BFSUHR(2,2),HISUNF,CHISKF,OHISKF,IZLSM        44d5br   1
      COMMON  /DAYL1/  ATMTU, ATMMO, TAU1                                       /DAYLT/ 21
     1               , TVISB, TH, PH, RAY(3), WNORM(3), TVISBR                  /DAYLT/ 22
      COMMON  /SUND/   ISUNUP, GUNDOG, HORANG, TDECLN, EQTIME, SOLCON,          /SUND/   2
     1                 ATMEXT, SKYDFF, RAYCOS(3), RDN,                          /SUND/   3
     2                 BSUN, DECLN, CD, SD, FSUNUP                              /SUND/   4
      COMMON /TIME  / IDOY, IDOW, IDSTF, ISCHR, ISCDAY, iDSdates(6),            -044e5r  1
     1                IMO, IDAY, IYR, IHR, CLOCK(10), IDSFLG,                   HOLID1   4
     2                MONDSC(12), MONLEN(12), MONSDA(12), IEODMR                /TIME/   4
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
C                                                                               DAVAIL  19
      IF(ISUNUP.NE.0) GO TO 100                                                 DAVAIL  20
C              SUN IS DOWN                                                      DAVAIL  21
      CHILSK(IHR) = 0.                                                          DAVAIL  22
      CHILSU(IHR) = 0.                                                          DAVAIL  23
      OHILSK(IHR) = 0.                                                          DAVAIL  24
      CDIRLW(IHR) = 0.                                                          DAVAIL  25
      CDIFLW(IHR) = 0.                                                          DAVAIL  26
      ODIFLW(IHR) = 0.                                                          DAVAIL  27
      RETURN                                                                    DAVAIL  28
  100 CONTINUE                                                                  DAVAIL  29
C                                                                               DAVAIL  30
C              GET CLEAR SKY ZENITH LUMINANCE, MOISTURE, AND TURBIDITY          DAVAIL  31
C              COEFF FOR CURRENT MONTH                                          DAVAIL  32
      CALL DZENLM (IMO)                                                         DAVAIL  33
C                                                                               DAVAIL  34
C              HORIZONTAL ILLUMINANCE                                           DAVAIL  35
C                                                                               DAVAIL  36
      CALL DHILL ( IMO, CHILSK(IHR), CHILSU(IHR), OHILSK(IHR) )                 DAVAIL  37
C                                                                               DAVAIL  38
C              GET LUMINOUS EFFICACY OF DIRECT AND DIFFUSE                      DAVAIL  39
C              SOLAR RADIATION                                                  DAVAIL  40
C                                                                               DAVAIL  41
      CALL DLUMEF                                                               DAVAIL  42
      RETURN                                                                    DAVAIL  43
      END                                                                       DAVAIL  44
      SUBROUTINE  DAVREF                                                        DAVREF   2
C                                                                               DAVREF   3
C              CALLED BY DCOF FOR EACH DAYLIT SPACE.  DETERMINES TOTAL          DAVREF   4
C              AREA AND AREA-WEIGHTED AVERAGE VISIBLE REFLECTANCE OF            DAVREF   5
C              ALL INSIDE SURFACES OF A SPACE.  IN ADDITION, FINDS              DAVREF   6
C              AREA AND AVERAGE REFLECTANCE OF INTERIOR WALLS,                  DAVREF   7
C              UNDERGROUND WALLS, AND EXTERIOR WALLS IN FLOOR, CEILING,         DAVREF   8
C              AND WALL CATEGORIES (TILT GT 170 DEG, LT 10 DEG, AND             DAVREF   9
C              10 TO 170 DEG, RESP.)   THIS INFORMATION IS USED IN              DAVREF  10
C              CALC OF INTERNALLY REFLECTED DAYLIGHTING COMPONENT.              DAVREF  11
C                                                                               DAVREF  12
C              ATOT = TOTAL INSIDE SURFACE AREA                                 DAVREF  13
C              ARHTOT = AREA * REFLECTANCE SUM FOR ALL SURFACES                 DAVREF  14
C              RHAV = AVERAGE INSIDE REFLECTANCE OF SPACE                       DAVREF  15
C              AR(ITILT) = SURFACE AREA FOR ITILT=1 (FLOORS), 2 (WALLS),        DAVREF  16
C                 AND 3 (CEILINGS)                                              DAVREF  17
C              ARH(ITILT) = CORRESPONDING AREA * REFLECTANCE SUM                DAVREF  18
C                                                                               DAVREF  19
      COMMON  /DAYLT/ NDAYCF,IPHS,IZ,IHIT,MHHIT,IL,RHOAV,ATOT,ARHTOT,           /DAYLT/  2
     1                AR(3),AP(3),ARH(3),ARHP(3),NPH,NTH,WC(3),TMULT,           /DAYLT/  3
     2                TSOLNM,TVISDF,FRUP,ISHLOC,NWTOT,RHOCW,RHOFW,WAREA,        /DAYLT/  4
     3                IMREF,PHSUN,THSUN,PHSUND,THSUND,THSMIN,PHSMIN,            /DAYLT/  5
     4                THSMAX,PHSMAX,THSDEL,PHSDEL,H,NTHS,NPHS,NDFC,LWDC,        /DAYLT/  6
     5                BETA,W,IBZ,IWZ,ZENL,JZD,WBACLU(2,2),PF(7,5),              /DAYLT/  7
     6                VIEWVC(3),GLRNDX(2),WDAYIL(2,2),BACLUM(2),ITF(3),         /DAYLT/  8
     7                RDAYIL(2),RBACLU(2),GLRNEW(2),ETACLD,CDIRLW(24),          /DAYLT/  9
     8                CDIFLW(24),ODIFLW(24),SOLIC(12),TFAC,SPHSUN,              /DAYLT/ 10
     9                CPHSUN,PHWN,THWN,SPHWN,CPHWN,TOTIL(2),ATMMOI(12),         /DAYLT/ 11
     1                ATMTUR(12),XRAN,ALFAD,THRAT,PHRAT,SETPNT(2),              /DAYLT/ 12
     2                IZLSG,IZLSH,IZLSJM,IZLSJY,IZDREP,FPHRP(2),ZFTOT,          /DAYLT/ 13
     3                EINTSK(2,12,24),EINTSU(2,12,24),EDIRSK(2,12,24),          VISBL    2
     4                EDIRSU(2,12,24),FLCWSK(2,12),FLCWSU(2,12),                VISBL    3
     5                FLFWSK(2,12),FLFWSU(2,12),GILSK(2,10),GILSU(2,10),        VISBL    4
     6                WLUMSK(2,11,24),WLUMSU(2,11,24),AVWLSK(2,12,24),          VISBL    5
     7                AVWLSU(2,12,24),CHILSK(24),CHILSU(24),OHILSK(24),         VISBL    6
     8                DFSKHR(2,2),DFSUHR(2,2),SFSKHR(2,2),SFSUHR(2,2),          /DAYLT/ 19
     9                BFSKHR(2,2),BFSUHR(2,2),HISUNF,CHISKF,OHISKF,IZLSM        44d5br   1
      COMMON  /DAYL1/  ATMTU, ATMMO, TAU1                                       /DAYLT/ 21
     1               , TVISB, TH, PH, RAY(3), WNORM(3), TVISBR                  /DAYLT/ 22
      COMMON  /LENS/   MWFLEN, MRLEN, MSHLEN, MWNLEN, MDRLEN, MXLEN,            /LENS/   2
     1                 MULEN, MZLEN, MIWLEN, MFLLEN,                            HRr      5
     2                 LMTB, LLDSOU, MSTLEN, LSTFT, MWLLEN                      BLIND    1
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     BLIND    2
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        FLOOR1   3
      COMMON  /PTRBGN/ ISCB, IWFB, IWPB, ICONSB, IGTB, IWLB, IGEOB,             HRr      6
     1                 ISHADB, IWINB, IDRB, IEWB, IUGB, ISPB, IIWPB,            HRr      7
     2                 IIWB, IFLB, ISPCDB, IOTHB, ILHB, IZQCMB, ISSHDB,         HRr      8
     3                 IOHFIB, IZLSK, IZLSL, ISTFB                              HRr      9
      COMMON        // AA(75 000 000)                                           -048ar   1
      INTEGER          IA(75 000 000)                                           -048ar   2
      EQUIVALENCE  (IA(1), AA(1))                                               //       4
      LOGICAL INSP                                                              DAVREF  25
C              CONVERSION FROM BDL FLOOR-WALL-CEILING FLAG (0=WALL,             DAVREF  26
C              1=FLOOR,2=CEILING) TO ITILT FLAG (2=WALL,1=FLOOR,3=CEIL)         DAVREF  27
C                                                                               DAVREF  29
C                                                                               DAVREF  30
C                                                                               DAVREF  31
C              INITIALIZATION                                                   DAVREF  32
C                                                                               DAVREF  33
C              TOTAL NO. OF WINDOWS WITH AREA GREATER THAN 0.1 SF               DAVREF  34
      NWTOT  = 0                                                                DAVREF  35
C              TOTAL INSIDE SURFACE AREA, INCLUDING WINDOWS                     DAVREF  36
      ATOT   = 0.                                                               DAVREF  37
C              SUM OF PRODUCTS OF INSIDE SURFACE AREA * VIS REFLECTANCE         DAVREF  38
      ARHTOT = 0.                                                               DAVREF  39
C              AREAS AND AREA * REFLECTANCE FOR DIFFERENT ORIENTATIONS          DAVREF  40
      DO 10 ITILT=1,3                                                           DAVREF  41
      AR(ITILT) = 0.                                                            DAVREF  42
      ARH(ITILT) = 0.                                                           DAVREF  43
   10 CONTINUE                                                                  DAVREF  44
C                                                                               DAVREF  45
C              LOOP OVER UNDERGROUND SURFACES                                   DAVREF  46
C                                                                               DAVREF  47
      NUG    = <NSUG>                                                           DAVREF  48
      IF(NUG.EQ.0) GO TO 3011                                                   DAVREF  49
      MU     = <MZUG>                                                           DAVREF  50
      DO 3010 IUG = 1,NUG                                                       DAVREF  51
      AREA   = <UGAREA> * <UGMULT>                                              DAVREF  52
      ATOT   = ATOT + AREA                                                      DAVREF  53
      ARHTOT = ARHTOT + AREA*<UG-INS-VIS-REFL>                                  DAVREF  54
      ITILT  = ITF( <IUGTYPE> + 1 )                                             DAVREF  55
      AR(ITILT) = AR(ITILT) + AREA                                              DAVREF  56
      ARH(ITILT) = ARH(ITILT) + AREA*<UG-INS-VIS-REFL>                          DAVREF  57
 3010 MU     = MU + MULEN                                                       DAVREF  58
 3011 CONTINUE                                                                  DAVREF  59
C                                                                               DAVREF  60
C              LOOP OVER INTERIOR WALLS                                         DAVREF  61
C                                                                               DAVREF  62
      NIN    = <NINTS>                                                          DAVREF  63
      IF(NIN.EQ.0) GO TO 3021                                                   DAVREF  64
C              POINTER TO LIST OF INTERIOR WALLS IN THIS SPACE                  DAVREF  65
      MIW    = <MZINT>                                                          DAVREF  66
      DO 3020 IIN = 1,NIN                                                       DAVREF  67
      MI     = IA(MIW)                                                          DAVREF  68
C              SKIP INTERNAL WALLS                                              DAVREF  69
      IF (<IW-TYPE>.EQ.4) GO TO 3020                                            DAVREF  70
C              IS THIS WALL IN CURRENT SPACE OR NEXT TO IT                      DAVREF  71
      INSP   = <MZIN>.EQ.MZ                                                     DAVREF  72
      REFL   = <IW-INS-VIS-REFL1>                                               DAVREF  73
      IF(.NOT.INSP) REFL = <IW-INS-VIS-REFL2>                                   DAVREF  74
      AREA   = <IWAR>                                                           DAVREF  75
      IF (INSP) GO TO 3013                                                      DAVREF  76
C              INT WALL DEFINED IN ADJ SP.  ACCOUNT FOR MULT OF ADJ SP.         DAVREF  77
      MZSAVE = MZ                                                               DAVREF  78
      MZ     = <MZIN>                                                           DAVREF  79
      AREA   = <IWAR>*<ZMULT>                                                   DAVREF  80
      MZ     = MZSAVE                                                           DAVREF  81
 3013 CONTINUE                                                                  DAVREF  82
      ATOT   = ATOT + AREA                                                      DAVREF  83
      ARHTOT = ARHTOT + AREA * REFL                                             DAVREF  84
      ITILT  = ITF( <IWTYPE> + 1 )                                              DAVREF  85
      IF (INSP) GO TO 3015                                                      DAVREF  86
      IF (<IWTYPE>.EQ.1) ITILT = 3                                              DAVREF  87
      IF (<IWTYPE>.EQ.2) ITILT = 1                                              DAVREF  88
 3015 CONTINUE                                                                  DAVREF  89
      AR(ITILT) = AR(ITILT) + AREA                                              DAVREF  90
      ARH(ITILT) = ARH(ITILT) + AREA * REFL                                     DAVREF  91
 3020 MIW    = MIW + 1                                                          DAVREF  92
 3021 CONTINUE                                                                  DAVREF  93
C                                                                               DAVREF  94
C              LOOP OVER EXTERIOR WALLS                                         DAVREF  95
C                                                                               DAVREF  96
      NEXT   = <NEXTS>                                                          DAVREF  97
      MX     = <MZEXT>                                                          DAVREF  98
      DO 4000 IEXT = 1,NEXT                                                     DAVREF  99
C              AREA, EXCLUDING WINDOWS AND DOORS                                DAVREF 100
      AREA   = <XSAREA> * <XSMULT>                                              DAVREF 101
      REFL   = <EW-INS-VIS-REFL>                                                DAVREF 102
      ATOT   = ATOT + AREA                                                      DAVREF 103
      ARHTOT = ARHTOT + AREA*REFL                                               DAVREF 104
      IEWT   = <IEWTYPE>                                                        DAVREF 105
C              SET WALL TYPE TO VERTICAL FOR TROMBE WALL                        DAVREF 106
      IF (<IEWTYPE>.GT.2) IEWT = 0                                              DAVREF 107
      ITILT  = ITF(IEWT+1)                                                      DAVREF 108
      AR(ITILT) = AR(ITILT) + AREA                                              DAVREF 109
      ARH(ITILT) = ARH(ITILT) + AREA*REFL                                       DAVREF 110
C                                                                               DAVREF 111
C              LOOP OVER WINDOWS IN THIS WALL                                   DAVREF 112
C                                                                               DAVREF 113
      NWINS  = <NWIN>                                                           DAVREF 114
      IF(NWINS.EQ.0.OR.<IEWTYPE>.GT.2) GO TO 4300                               DAVREF 115
      MWI    = <MXWIN>                                                          DAVREF 116
      DO 4200 IWIN = 1,NWINS                                                    DAVREF 117
      AREA   = <HWI> * <WWI>                                                    DAVREF 118
      IF (AREA.LT.0.1) GO TO 4200                                               DAVREF 119
      NWTOT  = NWTOT + 1                                                        DAVREF 120
      AREA   = AREA * <XSMULT> * <GMULT>                                        DAVREF 121
      ATOT   = ATOT + AREA                                                      DAVREF 122
      visref = <INSIDE-VIS-REFL>                                                DAVREF 123
C              if glass if from Window-4 library, override with                 DAVREF 124
C              library value if not input                                       DAVREF 125
      if(visref.lt.0.149.or.visref.gt.0.151) go to 4101                         DAVREF 126
      mr = <MWIPRP>                                                             DAVREF 127
      if(<IGTYP>.gt.11) visref = <RBVIS>                                        DAVREF 128
 4101 arhtot = arhtot + area*visref                                             DAVREF 129
      AR(ITILT) = AR(ITILT) + AREA                                              DAVREF 130
      arh(itilt) = arh(itilt) + area*visref                                     DAVREF 131
 4200 MWI    = MWI + MWNLEN                                                     DAVREF 132
 4300 CONTINUE                                                                  DAVREF 133
C                                                                               DAVREF 134
C              LOOP OVER ATTACHED DOORS                                         DAVREF 135
C                                                                               DAVREF 136
      NDOORS = <NDOOR>                                                          DAVREF 137
      IF(NDOORS.EQ.0) GO TO 4000                                                DAVREF 138
      MD     = <MXDOOR>                                                         DAVREF 139
      DO 4400 IDRS = 1,NDOORS                                                   DAVREF 140
      AREA   = <DRAREA>*<XSMULT>*<DRMULT>                                       DAVREF 141
      ATOT   = ATOT + AREA                                                      DAVREF 142
      ARHTOT = ARHTOT + AREA*<DR-INS-VIS-REFL>                                  DAVREF 143
      AR(ITILT) = AR(ITILT) + AREA                                              DAVREF 144
      ARH(ITILT) = ARH(ITILT) + AREA*<DR-INS-VIS-REFL>                          DAVREF 145
 4400 MD     = MD + MDRLEN                                                      DAVREF 146
 4000 MX     = MX + MXLEN                                                       DAVREF 147
C                                                                               DAVREF 148
C              AVERAGE INSIDE SURFACE REFLECTANCE OF SPACE                      DAVREF 149
C                                                                               DAVREF 150
      RHOAV  = ARHTOT / ATOT                                                    DAVREF 151
      RETURN                                                                    DAVREF 152
      END                                                                       DAVREF 153
      SUBROUTINE  DCOF                                                          DCOF     2
C                                                                               DCOF     3
C              CALLED BY LOADS MAIN PROGRAM.  FOR EACH WINDOW/REF PT            DCOF     4
C              COMBINATION IN A SPACE, CALCULATES DAYLIGHTING FACTOR            DCOF     5
C              (INTERIOR ILLUM / EXTERIOR HORIZ ILLUM) AND GLARE FACTOR         DCOF     6
C              FOR A RANGE OF SUN POSITIONS ON CLEAR AND OVERCAST DAYS,         DCOF     7
C              FOR OPEN AND CLOSED WINDOW SHADES.  EXTRACTS COEFFICIENTS        DCOF     8
C              FOR LATER USE IN THE HOURLY DAYLIGHTING CALCULATION.             DCOF     9
C              ASSUMES TVIS OF GLASS AT NORMAL INCIDENCE IS 1.0.                DCOF    10
C              ACTUAL TVIS IS ACCOUNTED FOR IN THE HOURLY CALC.                 DCOF    11
C                                                                               DCOF    12
C              ---                                                              DCOF    13
      external  DDOT                                                            DCOF    14
c                                                                               DCOF    15
      COMMON /DAYL2/ TDIRDIR,TDIRDIF,TDIFDIF                                    /DAYL2/  2
      COMMON  /CONST/  DTOR, PIOVR2, PIOVR4, IBLNK, UNDEF, IUNDEF,              /CONST/  2
     1                 UNFILD, URAD, DEFIFR, DEFCFR, DEFINC, KWBTU              /CONST/  3
      REAL             KWBTU                                                    /CONST/  4
      COMMON /CTRL  / VERS(2),IRPFLG(4),IOVRLL(7),IWRTFL,IPROG,                 /CTRL/   2
     1       IFATAL,NAMPRG(3,7),MTRICR                                          /CTRL/   3
      COMMON  /DAYLT/ NDAYCF,IPHS,IZ,IHIT,MHHIT,IL,RHOAV,ATOT,ARHTOT,           /DAYLT/  2
     1                AR(3),AP(3),ARH(3),ARHP(3),NPH,NTH,WC(3),TMULT,           /DAYLT/  3
     2                TSOLNM,TVISDF,FRUP,ISHLOC,NWTOT,RHOCW,RHOFW,WAREA,        /DAYLT/  4
     3                IMREF,PHSUN,THSUN,PHSUND,THSUND,THSMIN,PHSMIN,            /DAYLT/  5
     4                THSMAX,PHSMAX,THSDEL,PHSDEL,H,NTHS,NPHS,NDFC,LWDC,        /DAYLT/  6
     5                BETA,W,IBZ,IWZ,ZENL,JZD,WBACLU(2,2),PF(7,5),              /DAYLT/  7
     6                VIEWVC(3),GLRNDX(2),WDAYIL(2,2),BACLUM(2),ITF(3),         /DAYLT/  8
     7                RDAYIL(2),RBACLU(2),GLRNEW(2),ETACLD,CDIRLW(24),          /DAYLT/  9
     8                CDIFLW(24),ODIFLW(24),SOLIC(12),TFAC,SPHSUN,              /DAYLT/ 10
     9                CPHSUN,PHWN,THWN,SPHWN,CPHWN,TOTIL(2),ATMMOI(12),         /DAYLT/ 11
     1                ATMTUR(12),XRAN,ALFAD,THRAT,PHRAT,SETPNT(2),              /DAYLT/ 12
     2                IZLSG,IZLSH,IZLSJM,IZLSJY,IZDREP,FPHRP(2),ZFTOT,          /DAYLT/ 13
     3                EINTSK(2,12,24),EINTSU(2,12,24),EDIRSK(2,12,24),          VISBL    2
     4                EDIRSU(2,12,24),FLCWSK(2,12),FLCWSU(2,12),                VISBL    3
     5                FLFWSK(2,12),FLFWSU(2,12),GILSK(2,10),GILSU(2,10),        VISBL    4
     6                WLUMSK(2,11,24),WLUMSU(2,11,24),AVWLSK(2,12,24),          VISBL    5
     7                AVWLSU(2,12,24),CHILSK(24),CHILSU(24),OHILSK(24),         VISBL    6
     8                DFSKHR(2,2),DFSUHR(2,2),SFSKHR(2,2),SFSUHR(2,2),          /DAYLT/ 19
     9                BFSKHR(2,2),BFSUHR(2,2),HISUNF,CHISKF,OHISKF,IZLSM        44d5br   1
      COMMON  /DAYL1/  ATMTU, ATMMO, TAU1                                       /DAYLT/ 21
     1               , TVISB, TH, PH, RAY(3), WNORM(3), TVISBR                  /DAYLT/ 22
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                         /FILES/  3
     2              , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                    /FILES/  4
     3                IHRREP(3), IHRPAS(2)                                      /FILES/  5
      COMMON  /ISPLST/  ISPLST(4096),ISPLOC(4096)                               -42c     1
      COMMON  /LENS/   MWFLEN, MRLEN, MSHLEN, MWNLEN, MDRLEN, MXLEN,            /LENS/   2
     1                 MULEN, MZLEN, MIWLEN, MFLLEN,                            HRr      5
     2                 LMTB, LLDSOU, MSTLEN, LSTFT, MWLLEN                      BLIND    1
      COMMON  /LOCALD/ STALAT, STALON, ITIMZ, BAZIM, BALTIT,                    /LOCALD/ 2
     1                 SSTALA, CSTALA, TSTALA, SBAZIM, CBAZIM                   /LOCALD/ 3
     2                 ,BXORG, BYORG, SHCOEF, TP1, TP2, WSTP1, WSTP2,           /LOCALD/ 4
     3                 WSHGT,WSHGTL(12),ISREFL,IHOLX                            HOLID1   2
      DIMENSION LOCALD(32)                                                      HOLID1   3
      EQUIVALENCE      (LOCALD(1),STALAT)                                       /LOCALD/ 7
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     BLIND    2
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        FLOOR1   3
      COMMON  /PTRBGN/ ISCB, IWFB, IWPB, ICONSB, IGTB, IWLB, IGEOB,             HRr      6
     1                 ISHADB, IWINB, IDRB, IEWB, IUGB, ISPB, IIWPB,            HRr      7
     2                 IIWB, IFLB, ISPCDB, IOTHB, ILHB, IZQCMB, ISSHDB,         HRr      8
     3                 IOHFIB, IZLSK, IZLSL, ISTFB                              HRr      9
      COMMON  /REPORT/ IREPRT(4,37),IPRG,IUNIQV(100),IUNIQS(100),IUNIQL         BIGNAM   1
      COMMON  /SHADWF/ ISDINF, LSHSTR, ISHSTB, KMAX                             /SHADWF/ 2
      COMMON  /SIZE/   LENGTH,NVECT,NSCHED,NWF,NWPAR,NCONS,NGT,NWL,NGEO,        BLIND    5
     1                 NGSHAD, NWIN, NDOOR, NEW, NUG, NSP, NIWP, NIW,           /SIZE/   3
     2                 NFL, NDESDY, NBR, NOTH, NITH, NOPSRF,                    HRr     10
     3                 NSURF, NSSHD, NSHTOT                                     GEO1     1
      COMMON  /SUND/   ISUNUP, GUNDOG, HORANG, TDECLN, EQTIME, SOLCON,          /SUND/   2
     1                 ATMEXT, SKYDFF, RAYCOS(3), RDN,                          /SUND/   3
     2                 BSUN, DECLN, CD, SD, FSUNUP                              /SUND/   4
      COMMON /TIME  / IDOY, IDOW, IDSTF, ISCHR, ISCDAY, iDSdates(6),            -044e5r  1
     1                IMO, IDAY, IYR, IHR, CLOCK(10), IDSFLG,                   HOLID1   4
     2                MONDSC(12), MONLEN(12), MONSDA(12), IEODMR                /TIME/   4
      COMMON /TITLE / TITLE(10,5)                                               /TITLE/  2
      COMMON/UNITT/VKONV(300),DUMLOG(4),JUNITT(4,300,2)                         UNITS1   1
      DIMENSION IUNITT(4,300)                                                   UNITS1   2
      EQUIVALENCE (IUNITT,JUNITT)                                               /UNITT/  4
      COMMON        // AA(75 000 000)                                           -048ar   1
      INTEGER          IA(75 000 000)                                           -048ar   2
      EQUIVALENCE  (IA(1), AA(1))                                               //       4
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
      DIMENSION W1(3), W2(3), W3(3), RREF(3), RWIN(3), W21(3),                  DCOF    33
     1          REFWC(3), W2REF(3), W23(3), R(3,2), ZF(2)                       DCOF    34
      DIMENSION LCTYPE(4,4), WSTYPE(4,5), IWTYPE(4,4), IWELLN(2)                44d5br  14
      INTEGER UNTSF,UNTFT                                                       DCOF    36
      COMMON/SCRTCH/ XYZ(8),GWP(2,10,2),EWP1(2,12,24),EWP2(2,12,24),            FIX3     1
     1 EWP3(2,12,24),EWP4(2,12,24),AREA1(2)                                     FIX3     2
      DIMENSION EW(1),GW(1)                                                     DCOF    39
     1         ,EWP1XX(1), GWPXXX(1)                                            DCOF    40
      EQUIVALENCE  (EWP1XX(1), EWP1(1,1,1)), (GWPXXX(1), GWP(1,1,1))            DCOF    41
      EQUIVALENCE (GILSK(1,1),GW(1)),(EINTSK(1,1,1),EW(1))                      DCOF    42
#ifdef _DLL                                                                  /* -051    26 */ 
      character*60 outstr                                                       -051    27
      character*90 outstr2                                                      -051    28
#endif                                                                       /* -051    29 */ 
      COMMON /WCTRL/  IwinReturn, Imsgflg                                       /WCTRL/  2
c              For DLLs, delete Win_MB and enable msgbox.fi                     /WCTRL/  3
#ifndef _DLL                                                                 /* -051     1 */ 
      COMMON /WIN_MB/ MB_OK,MB_ICONSTOP,MB_ICONEXCLAMATION,MB_TASKMODAL,        -051     2
     &                MB_ICONINFORMATION                                        -051     3
#else                                                                        /* -051     4 */ 
      include 'msgbox.fi'                                                       -051     5
#endif                                                                       /* -051     6 */ 
      DATA LCTYPE /4HCONT, 4HINUO, 4HUS  ,4H    ,                               44d5br  15
     $             4HSTEP, 4HPED , 4H    ,4H    ,                               44d5br  16
     $             4HCONT, 4HINUO, 4HUS/O,4HFF  ,                               44d5br  17
     $             4HDISC, 4HRETE, 4H    ,4H     /                              44d5br  18
      DATA IWTYPE /4HSTAN, 4HDARD, 4H    ,4H    ,                               44d5br  19
     $             4HSKYL, 4HLIGH, 4HT-FL,4HAT  ,                               44d5br  20
     $             4HSKYL, 4HLIGH, 4HT-DO,4HME  ,                               44d5br  21
     $             4HSKYL, 4HLIGH, 4HT-TU,4HBE   /                              44d5br  22
      DATA IWELLN /4HWELL, 4HTUBE  /                                            44d5br  23
      DATA WSTYPE /4HNO-S, 4HHADE, 4H    ,4H    ,                               DCOF    45
     1             4HMOVA, 4HBLE-, 4HINTE,4HRIOR,                               DCOF    46
     2             4HMOVA, 4HBLE-, 4HEXTE,4HRIOR,                               DCOF    47
     3             4HFIXE, 4HD-IN, 4HTERI,4HOR  ,                               DCOF    48
     4             4HFIXE, 4HD-EX, 4HTERI,4HOR   /                              DCOF    49
      DATA PI/3.1415926/                                                        DCOF    50
      DATA NWX/2/, NWY/2/                                                       DCOF    51
      DATA FC,RLX/2HFC,2HLX /                                                   DCOF    55
      DIMENSION TVDIRDIR(11),TVDISK(11)                                         VISBL  463
      DIMENSION XEDIRSK(2),XEDIRSU(2),XAVWLSK(2),XAVWLSU(2)                     VISBL  464
      DIMENSION X0(10), YDAT(10)                                                VISBL  465
C              cos 0, 10deg, 20deg, ... ,90deg                                  VISBL  466
      DATA X0/1.0,.984808,.939693,.866025,.776044,.642788,.5,                   VISBL  467
     1        .342020,.173648,0./                                               VISBL  468
C                                                                               DCOF    56
C                                                                               DCOF    58
C              NO. OF CLEAR-DAY DAYLIGHT AND GLARE FACTORS PER                  DCOF    59
C              WINDOW / REF PT COMBINATION                                      DCOF    60
      NDFC   = NPHS * NTHS                                                      DCOF    61
C              TOTAL LENGTH OF FACTOR BLOCK FOR EACH WIN / REF PT               DCOF    62
C              36 = 12[BARE,SHADED1,....SHADED11] * 3[DFAC,BFAC,SFAC]           VISBL  469
      LWDC   = 36 * ( NDFC + 1 )                                                VISBL  470
C              SET MINIMUM SOLAR ALTITUDE                                       DCOF    64
      PHSMIN = 10.                                                              DCOF    65
      IF ((ABS(STALAT)/DTOR).GE.48.0) PHSMIN = 5.                               DCFLT    1
C              MINIMUM SOLAR AZIMUTH FOR SOUTHERN HEMISPHERE                    DCOF    67
      IF(STALAT.LT.0.0) THSMIN=70.                                              DCOF    68
C              MAX SOLAR ALTITUDE AND AZIMUTH (GLOBAL COORD SYS)                DCOF    69
      THSMAX = THSMIN + THSDEL * FLOAT(NTHS-1)                                  DCOF    70
      PHSMAX = AMIN1(90.,113.5-ABS(STALAT)/DTOR)                                DCOF    71
      PHSDEL = (PHSMAX - PHSMIN) / FLOAT (NPHS - 1)                             DCOF    72
      IERRF  = 0                                                                DCOF    73
      NDETSH = 0                                                                DCOF    74
C                                                                               DCOF    75
C              LOOP OVER ZONES.  CHECK FOR PROPER SPECIFICATION OF REF          DCOF    76
C              POINTS AND ZONE FRACTIONS.  GET SPACE IN AA ARRAY FOR            DCOF    77
C              DAYLIGHT AND GLARE FACTORS.                                      DCOF    78
C                                                                               DCOF    79
      NDYPTX = 0                                                                DCOF    80
      DO  500  IZX = 1 , NSP                                                    DCOF    81
      IZ     = ISPLST(IZX) / MZLEN + 1                                          DCOF    82
      MZ     = ISPLST(IZX) + ISPB                                               DCOF    83
      IF( <DAYLIGHTING> .EQ.0) GO TO 500                                        DCOF    84
      NDYPTX = NDYPTX + 1                                                       DCOF    85
      <DAYLIGHTING> = NDYPTX                                                    DCOF    86
C                                                                               DCOF    87
C              FIND NUMBER OF VALID REFERENCE POINTS                            DCOF    88
C                                                                               DCOF    89
C              INITIALIZE SUM OF ZONE FRACTIONS                                 DCOF    90
      ZFTOT  = 0.                                                               DCOF    91
      <NREFP> = 2                                                               DCOF    92
C              GET X,Y,Z COORDS AND ZONE-FRACTIONS OF REF POINTS                DCOF    93
      DO 800 IL=1,2                                                             DCOF    94
      DO 810 IR=1,3                                                             DCOF    95
      IF (IL.EQ.2) GO TO 850                                                    DCOF    96
      R(IR,IL) = <LIGHT-REF-POINT1>                                             DCOF    97
      GO TO 810                                                                 DCOF    98
  850 R(IR,IL) = <LIGHT-REF-POINT2>                                             DCOF    99
  810 CONTINUE                                                                  DCOF   100
  800 CONTINUE                                                                  DCOF   101
      ZF(1)  = <ZONE-FRACTION1>                                                 DCOF   102
      ZF(2)  = <ZONE-FRACTION2>                                                 DCOF   103
      DO 2100 IL = 1,2                                                          DCOF   104
C              REQUIRE FIRST REF PT TO HAVE X, Y, AND Z SPECIFIED               DCOF   105
      IF(IL.EQ.2) GO TO 2105                                                    DCOF   106
      IF( (ITYPLS(R(1,IL)).EQ.ITYPLS(UNFILD)) .OR.                              DCOF   107
     1    (ITYPLS(R(2,IL)).EQ.ITYPLS(UNFILD)) .OR.                              DCOF   108
     2    (ITYPLS(R(3,IL)).EQ.ITYPLS(UNFILD)) )  GOTO 2200                      DCOF   109
      <NREFP> = 1                                                               DCOF   110
      ZFTOT  = ZFTOT + ZF(1)                                                    DCOF   111
      GO TO 2100                                                                DCOF   112
 2105 CONTINUE                                                                  DCOF   113
C              Has ZONE-FRACTION2 been specified? - if not skip                 -023     1
      IF( ITYPLS(ZF(2)).EQ.ITYPLS(UNFILD) ) GOTO 2100                           -023     2
C              HAS SECOND REF PT BEEN SPECIFIED                                 DCOF   114
      IF( (ITYPLS(R(1,IL)).EQ.ITYPLS(UNFILD)).AND.                              DCOF   115
     1    (ITYPLS(R(2,IL)).EQ.ITYPLS(UNFILD)).AND.                              DCOF   116
     2    (ITYPLS(R(3,IL)).EQ.ITYPLS(UNFILD)) )  GOTO 2100                      DCOF   117
      IF( (ITYPLS(R(1,IL)).EQ.ITYPLS(UNFILD)).OR.                               DCOF   118
     1    (ITYPLS(R(2,IL)).EQ.ITYPLS(UNFILD)).OR.                               DCOF   119
     2    (ITYPLS(R(3,IL)).EQ.ITYPLS(UNFILD)) )  GOTO 2300                      DCOF   120
C              COORDS OF SECOND REF POINT HAVE BEEN FULLY SPECIFIED             DCOF   121
      <NREFP> = 2                                                               DCOF   122
 2100 CONTINUE                                                                  DCOF   123
      GO TO 2400                                                                DCOF   124
 2200 CONTINUE                                                                  DCOF   125
      IERRF  = 1                                                                DCOF   126
      CALL MSGSIM(-1,0,0,0,0)                                                   DCOF   127
      WRITE(IOUTPT,2201)  ( <IZNM>, II=1,8 )                                    -042L4  24
 2201 FORMAT(                                                                   -042L4  25
     1       12X,48HDAYLIGHTING CALCULATION WAS REQUESTED FOR SPACE 8A4/        -042L4  26
     2       12X,48HBUT THE COORDINATES OF THE FIRST REFERENCE POINT/           -042L4  27
     3       12X,44HIN THIS SPACE HAVE NOT BEEN FULLY SPECIFIED./               -042L4  28
     4       12X,41HCHECK VALUES OF LIGHT-REF-POINT1 KEYWORD. )                 -042L4  29
      GO TO 500                                                                 DCOF   134
 2300 CONTINUE                                                                  DCOF   135
      IERRF  = 1                                                                DCOF   136
      CALL MSGSIM(-1,0,0,0,0)                                                   DCOF   137
      WRITE(IOUTPT,2301)  ( <IZNM>, II=1,8 )                                    -042L4  30
 2301 FORMAT(                                                                   -042L4  31
     1       12X,48HDAYLIGHTING CALCULATION WAS REQUESTED FOR SPACE 8A4/        -042L4  32
     2       12X,49HBUT THE COORDINATES OF THE SECOND REFERENCE POINT/          -042L4  33
     3       12X,49HIN THIS SPACE HAVE BEEN ONLY PARTIALLY SPECIFIED./          -042L4  34
     4       12X,41HCHECK VALUES OF LIGHT-REF-POINT2 KEYWORD. )                 -042L4  35
      GO TO 500                                                                 DCOF   144
 2400 CONTINUE                                                                  DCOF   145
C                                                                               DCOF   146
C              CHECK THAT ZONE-FRACTIONS PROPERLY ARE SPECIFIED                 DCOF   147
C                                                                               DCOF   148
      IF (<NREFP>.NE.2) GO TO 2490                                              DCOF   149
      IF( ITYPLS(ZF(2)).EQ.ITYPLS(UNFILD) ) GOTO 2450                           DCOF   150
      ZFTOT  = ZFTOT + ZF(2)                                                    DCOF   151
      IF (ZFTOT.GT.1.0) GO TO 2460                                              DCOF   152
      GO TO 2490                                                                DCOF   153
 2450 CONTINUE                                                                  DCOF   154
C              THERE ARE TWO REF PTS, BUT SECOND ZONE-FRAC UNSPECIFIED          DCOF   155
      IERRF  = 1                                                                DCOF   156
      CALL MSGSIM(-1,0,0,0,0)                                                   DCOF   157
      WRITE(IOUTPT,2455)  (<IZNM>, II=1,8)                                      -023     3
 2455 FORMAT(                                                                   -023     4
     $ 12X,'A daylighting calculation was requested for SPACE ',8A4/            -023     5
     $ 12X,'but the SPACE area fraction for the second reference point'/        -023     6
     $ 12X,'in this SPACE was not specified.' )                                 -023     7
#ifdef _DLL                                                                  /* -051    30 */ 
      WRITE(outstr,2456)  (<IZNM>, II=1,8)                                      -051    31
 2456 FORMAT('Daylighting Errors in SPACE ',8A4)                                -051    32
      Call MessageBox( NULL,                                                    -051    33
     $ 'Missing area fraction for the second reference point.'                  -051    34
     $ //char(0),outstr//char(0), MB_OK+MB_ICONSTOP+MB_TASKMODAL )              -051    35
#endif                                                                       /* -051    36 */ 
      GO TO 500                                                                 DCOF   164
 2460 CONTINUE                                                                  DCOF   165
C              THERE ARE TWO REF PTS AND SUM OF ZONE-FRACS EXCEEDS 1.0          DCOF   166
      IERRF  = 1                                                                DCOF   167
      CALL MSGSIM(-1,0,0,0,0)                                                   DCOF   168
      WRITE(IOUTPT,2465)  (<IZNM>, II=1,8), ZFTOT                               -023     8
 2465 FORMAT(                                                                   -023     9
     $ 12X,'A daylighting calculation was requested for SPACE',8A4/             -023    10
     $ 12X,'but the sum of the ZONE-FRACTIONS for this SPACE is '/              -023    11
     $ 12X,F8.2,'.  It cannot exceed 1.0.' )                                    -023    12
#ifdef _DLL                                                                  /* -051    37 */ 
      WRITE(outstr,2456)  (<IZNM>, II=1,8)                                      -051    38
      Call MessageBox( NULL,                                                    -051    39
     $ 'Sum of ZONE-FRACTIONS for this SPACE exceeds 1.0.'                      -051    40
     $ //char(0),outstr//char(0), MB_OK+MB_ICONSTOP+MB_TASKMODAL )              -051    41
#endif                                                                       /* -051    42 */ 
      GO TO 500                                                                 DCOF   175
 2490 CONTINUE                                                                  DCOF   176
C                                                                               DCOF   177
C              GET BARE-WINDOW BEAM VIS TRANS COEFFS FOR WINDOWS                VISBL  471
C              WITH LAYERS (FOR GLASS-TYPE WINDOWS, THESE                       BLIND3  10
C              COEFFS ARE DETERMINED IN BDL)                                    VISBL  473
C              COUNT NO. OF WINDOWS WITH AREA GREATER THAN 0.1 SF               DCOF   178
C                                                                               DCOF   179
      NWTOT  = 0                                                                DCOF   180
      NEXT   = <NEXTS>                                                          DCOF   181
      IF (NEXT.EQ.0) GO TO 450                                                  DCOF   182
      MX     = <MZEXT>                                                          DCOF   183
      DO 480 IEXT = 1,NEXT                                                      DCOF   184
      NWINS  = <NWIN>                                                           DCOF   185
      IF (NWINS.EQ.0) GO TO 480                                                 DCOF   186
      MWI    = <MXWIN>                                                          DCOF   187
      DO 490 IWIN = 1,NWINS                                                     DCOF   188
      IS = 1                                                                    VISBL  474
      IF(<MWISTC>.NE.0) THEN                                                    VISBL  475
         MR = <MWIPRP>                                                          VISBL  476
         DO IANG = 1,10                                                         VISBL  477
            CALL CALBLD(1,X0(IANG),0.,0.,0.)                                    VISBL  478
            YDAT(IANG) = <TVANG1>                                               VISBL  479
         ENDDO                                                                  VISBL  480
C              VISIBLE TRANSMITTANCE AT NORMAL INCIDENCE                        VISBL  481
         <VIS-TRANS> = YDAT(1)                                                  VISBL  482
C              TRANSMITTANCE NORMALIZED TO 1.0 AT NORMAL INCIDENCE              VISBL  483
         DO II = 1,10                                                           -044d5 353
           <TVvals> = YDAT(II)                                                  -044d5 354
           YDAT(II) = YDAT(II)/<VIS-TRANS>                                      -044d5 355
         ENDDO                                                                  -044d5 356
         CALL QIKFT4(10,X0,YDAT,<TVFIT1>,<TVFIT2>)                              VISBL  487
      ENDIF                                                                     VISBL  488
      IF ( <HWI>*<WWI>.LT.0.1) GO TO 490                                        DCOF   189
      NWTOT  = NWTOT + 1                                                        DCOF   190
  490 MWI    = MWI + MWNLEN                                                     DCOF   191
  480 MX     = MX + MXLEN                                                       DCOF   192
  450 CONTINUE                                                                  DCOF   193
C                                                                               DCOF   194
      IF (NWTOT.GT.0) GO TO 460                                                 DCOF   195
C              ERROR RETURN IF SPACE HAS NO WINDOWS WITH AREA GT 0.1 SF         DCOF   196
      IERRF  = 1                                                                DCOF   197
      CALL MSGSIM(-1,0,0,0,0)                                                   DCOF   198
      WRITE(IOUTPT,2501)  ( <IZNM>, II=1,8 )                                    -023    13
 2501 FORMAT(                                                                   -023    14
     $ 12X,'A daylighting calculation was requested for SPACE ',8A4/            -023    15
     $ 12X,'This SPACE has no WINDOWs with AREA more than 0.1 SQFT.'/           -023    16
     $ 12X,'Add WINDOWs to this SPACE of turn off DAYLIGHTING.')                -023    17
#ifdef _DLL                                                                  /* -051    43 */ 
      WRITE(outstr,2456)  (<IZNM>, II=1,8)                                      -051    44
      Call MessageBox( NULL,                                                    -051    45
     $ 'Must have at least one WINDOW with AREA greater than 0.1 SQFT.'         -051    46
     $ //char(0),outstr//char(0), MB_OK+MB_ICONSTOP+MB_TASKMODAL )              -051    47
#endif                                                                       /* -051    48 */ 
      GO TO 500                                                                 DCOF   206
  460 CONTINUE                                                                  DCOF   207
C                                                                               DCOF   208
      IF (NDAYCF.EQ.0) RETURN                                                   DCOF   209
C                                                                               DCOF   210
C                                                                               DCOF   211
C              GET SPACE FOR DAYLIGHT AND GLARE FACTORS                         DCOF   212
C                                                                               DCOF   213
      NRF    = <NREFP>                                                          DCOF   214
      <MDAYFACP> = MLAST + 1                                                    DCOF   215
      LDCTOT = LWDC * NWTOT * NRF                                               DCOF   216
      CALL GETBUF (IA,LDCTOT,MLAST)                                             DCOF   217
      CALL FILLN(0.,AA(<MDAYFACP>),LDCTOT)                                      VISBL  489
C                                                                               DCOF   218
  500 MZ     = MZ + MZLEN                                                       DCOF   219
C                                                                               DCOF   220
      IF (IERRF.NE.0) THEN                                                      -051    49
#ifdef _DLL                                                                  /* -051    50 */ 
        GOTO 9000                                                               -051    51
#else                                                                        /* -051    52 */ 
        CALL ABT                                                                -051    53
#endif                                                                       /* -051    54 */ 
      ENDIF                                                                     -051    55
      IF (NDAYCF.EQ.0) RETURN                                                   DCOF   222
C                                                                               DCOF   223
C              GET SPACE FOR LUMINANCE BLOCKS FOR DETACHED SHADES               DCOF   224
C              (AS ENTERED WITH THE BUILDING-SHADE AND FIXED-SHADE              DCOF   225
C              COMMANDS OR THE SHADING-SURFACE KEYWORD).                        DCOF   226
C              BLOCK CONSISTS OF NPHS*NTHS LUMINANCES FOR CLEAR-SKY             DCOF   227
C              SKY AND SUN COMPONENTS, AND ONE LUMINANCE FOR OVERCAST           DCOF   228
C              SKY FOR FIRST SUN POSITION.                                      DCOF   229
C                                                                               DCOF   230
      NDETSH = NGSHAD + NSSHD                                                   DCOF   231
      IF(NDETSH.EQ.0) GO TO 60                                                  DCOF   232
      DO 55 ITYP = 1,2                                                          DCOF   233
      NSH    = NGSHAD                                                           DCOF   234
      IF (ITYP.EQ.2) NSH = NSSHD                                                DCOF   235
      IF (NSH.EQ.0) GO TO 55                                                    DCOF   236
      MH     = ISHADB                                                           DCOF   237
      IF (ITYP.EQ.2) MH = ISSHDB                                                DCOF   238
      DO 50 ISH = 1,NSH                                                         DCOF   239
      <KDSLUM> = MLAST + 1                                                      DCOF   240
      CALL GETBUF (IA,2*NDFC+1,MLAST)                                           DCOF   241
   50 MH     = MH + MSHLEN                                                      DCOF   242
   55 CONTINUE                                                                  DCOF   243
   60 CONTINUE                                                                  DCOF   244
C                                                                               DCOF   245
C              GET SPACE FOR DIRECT-SOLAR SHADOW-CALCULATION ARRAYS             DCOF   246
C                                                                               DCOF   247
      ISHSTB = MLAST + 1                                                        DCOF   248
      LSHSTR = 400                                                              DCOF   249
      CALL CKAA (IA,LSHSTR)                                                     DCOF   250
C                                                                               DCOF   251
C              CALCULATE EXTRATERRESTRIAL DIRECT NORMAL SOLAR ILLUMI-           DCOF   252
C              NANCE (LUMENS/SF) FOR THE FIRST DAY OF EACH MONTH -- USED        DCOF   253
C              BY FUNCTION DNSOL (92.9 IS CONVERSION FROM KLX TO L/SF).         DCOF   254
C                                                                               DCOF   255
      DO 250  M = 1,12                                                          DCOF   256
      OMJ    = ( 2.*PI / 366. ) * ( 1. + FLOAT(M-1) * 30.5 )                    DCOF   257
      SOLIC (M) = ( 126.82 + 4.248 * COS(OMJ) + 0.0825 * COS(2.*OMJ) -          DCOF   258
     1            0.00043 * COS(3.*OMJ) + 0.1691 * SIN(OMJ) +                   DCOF   259
     2            0.00914 * SIN(2.*OMJ) + 0.01726 * SIN(3.*OMJ) ) * 92.9        DCOF   260
  250 CONTINUE                                                                  DCOF   261
C                                                                               DCOF   262
C              FIND ILLUMINANCE ON GROUND, SHADOW RATIOS, AND                   DCOF   263
C              DETACHED-SHADE LUMINANCES FOR DIFFERENT SUN POSITIONS            DCOF   264
C                                                                               DCOF   265
      ISUNUP = 1                                                                DCOF   266
C                                                                               DCOF   267
C              LOOP OVER SOLAR ALTITUDE (PHSUN) AND AZIMUTH (THSUN)             DCOF   268
C                                                                               DCOF   269
      DO 100 IPHS = 1,NPHS                                                      DCOF   270
      H      = PHSMIN + FLOAT(IPHS-1) * PHSDEL                                  DCOF   271
      PHSUN  = H * DTOR                                                         DCOF   272
      SPHSUN = SIN(PHSUN)                                                       DCOF   273
      CPHSUN = COS(PHSUN)                                                       DCOF   274
      RAYCOS(3) = SPHSUN                                                        DCOF   275
      THSUN  = 0.                                                               DCOF   276
C              GET CLEAR SKY ZENITH LUMINANCE, MOISTURE, AND TURBIDITY          DCOF   277
C              COEFF FOR REFERENCE MONTH                                        DCOF   278
      CALL DZENLM (IMREF)                                                       DCOF   279
C              GET EXTERIOR HORIZONTAL ILLUMINANCE FROM SKY AND SUN             DCOF   280
C              FOR CLEAR AND OVERCAST CONDITIONS                                DCOF   281
      GILSU(2,IPHS) = 0.                                                        DCOF   282
      CALL DHILL (IMREF, GILSK(1,IPHS), GILSU(1,IPHS), GILSK(2,IPHS))           DCOF   283
      DO 200 ITHS = 1,NTHS                                                      DCOF   284
C              SOLAR AZIMUTH IN BLDG COORD SYS (AZ = 0 ALONG X-AXIS)            DCOF   285
C              CONVERTED FROM GLOBAL COORD SYS WITH AZ = 0 DUE SOUTH            DCOF   286
C              AND AZ GT 0 TOWARD THE EAST.                                     DCOF   287
      THSUN  = ( THSMIN + FLOAT(ITHS-1) * THSDEL - 90. ) * DTOR + BAZIM         DCOF   288
      RAYCOS(1) = COS(THSUN) * CPHSUN                                           DCOF   289
      RAYCOS(2) = SIN(THSUN) * CPHSUN                                           DCOF   290
C                                                                               DCOF   291
C              STORE SHADOW RATIOS AND DETACHED-SHADE LUMINANCES SUCH           DCOF   292
C              THAT FIRST SUN POSITION (IPHS=1, ITHS=1) IS HOUR 1,              DCOF   293
C              SECOND POSITION (IPHS=1,ITHS=2) IS HOUR 2, ETC.                  DCOF   294
C                                                                               DCOF   295
      IHR    = ITHS + NTHS*(IPHS-1)                                             DCOF   296
C-                                                                              DCOF   297
C--- INDICATE NOT-REAL SIMULATION FOR SCHEDULE RELATED THINGS                   DCOF   298
C-                                                                              DCOF   299
      ISCHR = 0                                                                 DCOF   300
      CALL  SHADOW                                                              DCOF   301
      IF (NDETSH.NE.0)  CALL DSHDLU                                             DCOF   302
C                                                                               DCOF   303
  200 CONTINUE                                                                  DCOF   304
  100 CONTINUE                                                                  DCOF   305
      IF (IREPRT(1,35).EQ.0.OR.IREPRT(1,12).EQ.0) GO TO 101                     IREPRT  72
      CALL DUMPIT(20HAA WITH SHADE LUM   ,AA(1),MLAST)                          DCOF   307
  101 CONTINUE                                                                  DCOF   308
C                                                                               DCOF   309
C              --- MAIN DAYLIGHT AND GLARE FACTOR CALCULATION ---               DCOF   310
C                                                                               DCOF   311
C                                                                               DCOF   312
C                        -----------                                            DCOF   313
C              ---------- ZONE LOOP ----------                                  DCOF   314
C                        -----------                                            DCOF   315
C                                                                               DCOF   316
      DO  1000  IZX = 1 , NSP                                                   DCOF   317
      IZ     = ISPLST(IZX) / MZLEN + 1                                          DCOF   318
      MZ     = ISPLST(IZX) + ISPB                                               DCOF   319
      IF (<DAYLIGHTING>.EQ.0) GO TO 1000                                        DCOF   320
C                                                                               DCOF   321
C              SPACE AZIMUTH (RADIANS)                                          DCOF   322
      AZ     = <ZA> * DTOR                                                      DCOF   323
      SAZ    = SIN(AZ)                                                          DCOF   324
      CAZ    = COS(AZ)                                                          DCOF   325
C                                                                               DCOF   326
C              FIND AREA AND AVERAGE REFLECTANCE OF INSIDE SURFACES OF          DCOF   327
C              SPACE, INCLUDING WINDOWS.  COUNT NO. OF WINDOWS WITH AREA        DCOF   328
C              GREATER THAN 0.1 SF.                                             DCOF   329
C                                                                               DCOF   330
      CALL  DAVREF                                                              DCOF   331
C                                                                               DCOF   332
      IF (NWTOT.EQ.0) GO TO 1000                                                DCOF   333
C                                                                               DCOF   334
C                                                                               DCOF   335
C     Translate some variables from DAVREF to average reflectances:             -044d5 357
      ReflCeil = ARH(3)/AR(3)       !Average Ceiling reflectance                -044d5 358
      ReflWall = ARH(2)/AR(2)       !Average Wall reflectance                   -044d5 359
      ReflFlr  = ARH(1)/AR(1)       !Average Floor reflectance                  -044d5 360
C                                                                               -044d5 361
C                        -------------                                          DCOF   336
C              ---------- REF PT LOOP ----------                                DCOF   337
C                        -------------                                          DCOF   338
C                                                                               DCOF   339
      NRF    = <NREFP>                                                          DCOF   340
      ZF(1)  = <ZONE-FRACTION1>                                                 DCOF   341
      ZF(2)  = <ZONE-FRACTION2>                                                 DCOF   342
      DO 2000 IL = 1,NRF                                                        DCOF   343
C              GET REF PTS IN SPACE COORD SYS                                   DCOF   344
      DO 2010 IR=1,3                                                            DCOF   345
      IF (IL.EQ.2) GO TO 2050                                                   DCOF   346
      R(IR,IL) = <LIGHT-REF-POINT1>                                             DCOF   347
      GO TO 2010                                                                DCOF   348
 2050 R(IR,IL) = <LIGHT-REF-POINT2>                                             DCOF   349
 2010 CONTINUE                                                                  DCOF   350
C              REF PTS IN BUILDING COORD SYS                                    GEO6     1
      RREF(1) = R(1,IL)                                                         GEO6     2
      RREF(2) = R(2,IL)                                                         GEO6     3
      RREF(3) = R(3,IL)                                                         GEO6     4
C              INIT WINDOW COUNTER                                              GEO6     5
      NWD    = 0                                                                DCOF   357
      NEXT   = <NEXTS>                                                          DCOF   358
      IF( NEXT.EQ.0 ) GO TO 1000                                                DCOF   359
C                                                                               -044d5 362
C              AZIMUTH OF VIEW VECTOR IN BUILDING COORD SYS                     -044d5 363
C                                                                               -044d5 364
      IF (IL.EQ.1) THEN                                                         -044d5 365
        AZVIEW = <VIEW-AZIMUTH>                                                 -044d5 366
      ELSE                                                                      -044d5 367
        AZVIEW = <VIEW-AZIMUTH2>                                                -044d5 368
      ENDIF                                                                     -044d5 369
      VIEWVC(1) = SIN(AZVIEW)                                                   -044d5 370
      VIEWVC(2) = COS(AZVIEW)                                                   -044d5 371
      VIEWVC(3) = 0.                                                            -044d5 372
C                                                                               -044d5 373
C                                                                               DCOF   360
C                                                                               -044d5 374
C                        ----------------                                       -044d5 375
C        ---------- SPACE OBSTRUCTIONS CALCS ----------                         -044d5 376
C                        ----------------                                       -044d5 377
C                                                                               -044d5 378
C  Calculate skylight obstruction coef of utilization if there are obstructions -044d5 379
C    and if the calc method is specified as CALCULATE (vs. user SPECIFIED)      -044d5 380
C                                                                               -044d5 381
      IF (((<SKY-OBS1-TYPE>.NE.0).AND.(<SKY-OBS1-METHOD>.EQ.1)).OR.             -044d5 382
     $    ((<SKY-OBS2-TYPE>.NE.0).AND.(<SKY-OBS2-METHOD>.EQ.1))) THEN           -044d5 383
C                                                                               -044d5 384
        IF (IL.EQ.1) THEN                    !first reference point             -044d5 385
         WorkHt  = <WORKPLANE-HEIGHT>                                           -044d5 386
         IObsTyp = <SKY-OBS1-TYPE>                                              -044d5 387
         IObsMet = <SKY-OBS1-METHOD>                                            -044d5 388
         ObsRefl = <SKY-OBS1-REFL>                                              -044d5 389
         ObsWid  = <SKY-OBS1-WID>                                               -044d5 390
         ObsLen  = <SKY-OBS1-LEN>                                               -044d5 391
         ObsHt   = <SKY-OBS1-HT>                                                -044d5 392
        ELSE                                 !second reference point            -044d5 393
         WorkHt  = <WORKPLANE-HEIGHT>                                           -044d5 394
         IObsTyp = <SKY-OBS2-TYPE>                                              -044d5 395
         IObsMet = <SKY-OBS2-METHOD>                                            -044d5 396
         ObsRefl = <SKY-OBS2-REFL>                                              -044d5 397
         ObsWid  = <SKY-OBS2-WID>                                               -044d5 398
         ObsLen  = <SKY-OBS2-LEN>                                               -044d5 399
         ObsHt   = <SKY-OBS2-HT>                                                -044d5 400
        ENDIF                                                                   -044d5 401
C                                                                               -044d5 402
       IF ((IObsTyp.NE.0).AND.(IObsMet.EQ.1)) THEN                              -044d5 403
C         Calculate the Space daylighting coef of utilization for the open space-044d5 404
C         using function DCOF_CU(Wid, Len, Ht, CeilRefl, WallRefl, FlrRefl)     -044d5 405
C                                                                               -044d5 406
       ! subtract the workplane height off of the space height                  -044d5 407
       CavHt = AMAX1(<SKY-CU-SPC-HT>-WorkHt,1.0)                                -044d5 408
       CUopen =  DCOF_CU(<SKY-CU-SPC-WID>, <SKY-CU-SPC-LEN>,                    -044d5 409
     $                  CavHt,ReflCeil, ReflWall, ReflFlr)                      -044d5 410
C                                                                               -044d5 411
        IF (IObsTyp.EQ.1) Then                                 !Shelves or Racks-044d5 412
C                                                                               -044d5 413
C       Calculate the CU of the space ABOVE the Shelves/Racks                   -044d5 414
C       Weight the floor cavity reflectance with amount that is cavity and      -044d5 415
C         amount that is the top of the shelves                                 -044d5 416
C                                                                               -044d5 417
         ! calculate the effective reflectance of the "floor", which is plane   -044d5 418
         !  containing the top of the shelves                                   -044d5 419
         ReflFlrCav = DCOF_EFFREFL(ReflFlr,ObsRefl,ObsWid,                      -044d5 420
     $                             <SKY-CU-SPC-LEN>,ObsHt)                      -044d5 421
         ObsW2 = ObsWid   !rack width in feet                                   -044d5 422
         ReflFlrCav  = (ReflFlrCav*ObsLen+ObsW2*ObsRefl)/(ObsLen+ObsW2)         -044d5 423
         CavHt = AMAX1(<SKY-CU-SPC-HT>-ObsHt,1.0)                               -044d5 424
         AboveObstCU =  DCOF_CU(<SKY-CU-SPC-WID>,<SKY-CU-SPC-LEN>,              -044d5 425
     $                     CavHt, ReflCeil, ReflWall,ReflFlrCav)                -044d5 426
C                                                                               -044d5 427
C       Calculate the CU of the partitions themselves                           -044d5 428
C                                                                               -044d5 429
         ReflFlrCav = DCOF_EFFREFL(ReflFlr,ObsRefl,ObsWid,                      -044d5 430
     $                             <SKY-CU-SPC-LEN>,WorkHt)                     -044d5 431
         CavHt = AMAX1(ObsHt-WorkHt,1.0)                                        -044d5 432
         ObstCU  =  DCOF_CU(ObsWid,ObsLen,CavHt,0,ObsRefl,ReflFlrCav)           -044d5 433
C                                                                               -044d5 434
        ELSE                                                        !Partitions -044d5 435
C                                                                               -044d5 436
C       Calculate the CU of the space ABOVE the partitions.                     -044d5 437
C       Weight the floor cavity reflectance with amount that is cavity and      -044d5 438
C         amount that is the top of the partition                               -044d5 439
C                                                                               -044d5 440
         ReflFlrCav  = DCOF_EFFREFL(ReflFlr,<SKY-OBS1-REFL>,                    -044d5 441
     $                <SKY-OBS1-WID>,<SKY-OBS1-LEN>,<SKY-OBS1-HT>)              -044d5 442
         ObsW2 = 0.17   !partition width in feet                                -044d5 443
         ReflFlrCav = (ReflFlrCav*ObsWid+ObsW2*ObsRefl)/(ObsWid+ObsW2)          -044d5 444
         CavHt = AMAX1(<SKY-CU-SPC-HT>-ObsHt,1.0)                               -044d5 445
         AboveObstCU =  DCOF_CU(<SKY-CU-SPC-WID>,<SKY-CU-SPC-LEN>,              -044d5 446
     $                         CavHt, ReflCeil, ReflWall,ReflFlrCav)            -044d5 447
C                                                                               -044d5 448
C       Calculate the CU of the partitions themselves                           -044d5 449
C                                                                               -044d5 450
         ReflFlrCav=DCOF_EFFREFL(ReflFlr,ObsRefl,ObsWid,ObsLen,WorkHt)          -044d5 451
         CavHt = AMAX1(ObsHt-WorkHt,1.0)                                        -044d5 452
         ObstCU  =  DCOF_CU(ObsWid,ObsLen,CavHt, 0,ObsRefl,ReflFlrCav)          -044d5 453
        ENDIF !of Obstruction Type                                              -044d5 454
        IF (IL.EQ.1) THEN                                                       -044d5 455
         <SKY-OBS1-FACTOR> = AboveObstCU * ObstCU / CUopen                      -044d5 456
        ELSE                                                                    -044d5 457
         <SKY-OBS2-FACTOR> = AboveObstCU * ObstCU / CUopen                      -044d5 458
        ENDIF                                                                   -044d5 459
       ENDIF  !of Do this Obstruction Calc                                      -044d5 460
      ENDIF   !of Do any Obstruction Calc                                       -044d5 461
C                                                                               -044d5 462
C                        ----------------                                       DCOF   361
C              ---------- EXT. WALL LOOP ----------                             DCOF   362
C                        ----------------                                       DCOF   363
C                                                                               DCOF   364
      MX     = <MZEXT>                                                          DCOF   365
      DO 3000 IEXT =1,NEXT                                                      DCOF   366
C              SKIP TROMBE WALLS                                                DCOF   367
      IF (<IEWTYPE>.GT.2) GO TO 3000                                            DCOF   368
      NWINS  = <NWIN>                                                           DCOF   369
      IF(NWINS.EQ.0) GO TO 3000                                                 DCOF   370
C                                                                               DCOF   387
C              REMOVE THIS WALL FROM SPACE INSIDE SURFACE AREA AND AREA*        DCOF   388
C              REFLECTIVITY CALCULATED IN SUBROUTINE DAVREF.  THE               DCOF   389
C              RESULTING AREAS ARE AP(ITILT), WHERE ITILT=1 FOR FLOOR,          DCOF   390
C              2 FOR WALLS, 3 FOR CEILING.  THE RESULTING AREA*REFLECT          DCOF   391
C              IS ARHP(ITILT).                                                  DCOF   392
C                                                                               DCOF   393
C              GROSS AREA OF WALL                                               DCOF   394
      ATWL   = <XGSARE> * <XSMULT>                                              DCOF   395
C              AREA * RELFLECTIVITY FOR THIS WALL, EXCL. ATTACHMENTS            DCOF   396
      ARHTWL = <XSAREA> * <XSMULT> * <EW-INS-VIS-REFL>                          DCOF   397
      ITILT  = ITF(<IEWTYPE>+1)                                                 DCOF   398
C              LOOP OVER ATTACHED WINDOWS                                       DCOF   399
      MWI    = <MXWIN>                                                          DCOF   400
      DO 3100 IWIN = 1,NWINS                                                    DCOF   401
      AREA   = <WIAREA> * <XSMULT> * <GMULT>                                    DCOF   402
      visref = <INSIDE-VIS-REFL>                                                DCOF   403
C              if glass if from Window-4 library, override with                 DCOF   404
C              library value if not input                                       DCOF   405
      if(visref.lt.0.149.or.visref.gt.0.151) go to 3101                         DCOF   406
      mr = <MWIPRP>                                                             DCOF   407
      if(<IGTYP>.GE.1) visref = <RBVIS>                                         WLIB1   19
 3101 arhtwl = arhtwl + area*visref                                             DCOF   409
 3100 MWI    = MWI + MWNLEN                                                     DCOF   410
C              LOOP OVER ATTACHED DOORS                                         DCOF   411
      NDOORS = <NDOOR>                                                          DCOF   412
      IF(NDOORS.EQ.0) GO TO 3250                                                DCOF   413
      MD     = <MXDOOR>                                                         DCOF   414
      DO 3200 IDRS = 1,NDOORS                                                   DCOF   415
      AREA   = <DRAREA> * <XSMULT> * <DRMULT>                                   DCOF   416
      ARHTWL = ARHTWL + AREA * <DR-INS-VIS-REFL>                                DCOF   417
 3200 CONTINUE                                                                  DCOF   418
 3250 CONTINUE                                                                  DCOF   419
C              INSIDE SURF AREA OF FLOOR, WALLS, CEILING MINUS THIS WALL        DCOF   420
      DO 3300 IT = 1,3                                                          DCOF   421
      AP(IT) = AR(IT)                                                           DCOF   422
      IF(IT.EQ.ITILT) AP(IT) = AR(IT) - ATWL                                    DCOF   423
      ARHP(IT) = ARH(IT)                                                        DCOF   424
      IF(IT.EQ.ITILT) ARHP(IT) = ARH(IT) - ARHTWL                               DCOF   425
 3300 CONTINUE                                                                  DCOF   426
C                                                                               DCOF   427
C                        -------------                                          DCOF   428
C              ---------- WINDOW LOOP ----------                                DCOF   429
C                        -------------                                          DCOF   430
C                                                                               DCOF   431
      MWI    = <MXWIN>                                                          DCOF   432
      DO 4000 IWIN = 1,NWINS                                                    DCOF   433
      HW     = <HWI>                                                            DCOF   434
      WW     = <WWI>                                                            DCOF   435
      WAREA  = HW * WW                                                          DCOF   436
C              CHECK FOR WINDOW AREA CLOSE TO ZERO                              DCOF   437
      IF( WAREA.LT.0.1 )  GO TO 4000                                            DCOF   438
C                                                                               -044d5 463
C     If there is a light well, and <WELL-EFF-METHOD> = Calculate (1) then      -044d5 464
C      Calculate the Light Well Efficiency for this window                      -044d5 465
C       and store it as <WELL-EFFICIENCY>                                       -044d5 466
C       using function DCOF_CU(Wid, Len, Ht, CeilRefl, WallRefl, FlrRefl)       -044d5 467
C         where   Wid = <WELL-WIDTH-BOT>                                        -044d5 468
C                 Len = <WELL-LENGTH>                                           -044d5 469
C                 Ht  = <WELL-DEPTH-BOT>                                        -044d5 470
C            CeilRefl = <INSIDE-VIS-REFL>    !SkyCalc uses 0.99                 -044d5 471
C            WallRefl = <WELL-VIS-REFLECT>                                      -044d5 472
C             FlrRefl = 0                                                       -044d5 473
C  Should CeilRefl be a fuction of whether glass is diffusing?                  -044d5 474
C                                                                               -044d5 475
      IF ((<LIGHT-WELL>.EQ.1).AND.(<WELL-EFF-METHOD>.EQ.1)) THEN                -044d5 476
        FlrRefl = 0.0                                                           -050x   14
        <WELL-EFFICIENCY>=DCOF_CU(<WELL-WIDTH-BOT>,<WELL-LENGTH-BOT>,           -044d5 477
     $  <WELL-DEPTH>,<INSIDE-VIS-REFL>,<WELL-VIS-REFLECT>,FlrRefl)              -050x   15
      ENDIF                                                                     -044d5 479
C                                                                               -044d5 480
      WAREA  = WAREA * <GMULT> * <XSMULT>                                       DCOF   439
      LSHCAL = 0                                                                DCOF   440
      NWD    = NWD + 1                                                          DCOF   441
C              POINTERS TO WINDOW GEOM AND GLASS PROPERTIES                     DCOF   442
      MWIG   = <MWIGEOM>                                                        DCOF   443
      MR     = <MWIPRP>                                                         DCOF   444
C              DIFFUSE AND NORMAL TRANSMITTANCE FOR TOT. SOLAR SPECTRUM         DCOF   445
      if(<IGTYP>.EQ.-1) then                                                    WLIB1   20
      TSOLDF = <CAM9>                                                           DCOF   447
      TSOLNM = <CAM1> + <CAM2> + <CAM3> + <CAM4>                                DCOF   448
C              DIFFUSE TVIS (FOR NORMAL TVIS = 1.0)                             DCOF   449
 4150 TVISDF = (1./TSOLNM)*TSOLDF                                               DCOF   450
      else                                                                      DCOF   451
        tvisdf = <TVHEMIS> / (<TVANG1> + .000001)                               DCOF   452
      endif                                                                     DCOF   453
C              LOCATION OF WINDOW SHADE.  0--NONE PRESENT, 1--ON INSIDE         DCOF   454
C              OF WINDOW, 2--ON OUTSIDE                                         DCOF   455
      ISHLOC = 0                                                                DCOF   456
      IF( <WIN-SHADE-TYPE>.EQ.1 .OR. <WIN-SHADE-TYPE>.EQ.3 .OR.                 -044d5 481
     $    (<DIFFUSING-GLASS>.EQ.1)) ISHLOC = 1                                  -044d5 482
      IF( <WIN-SHADE-TYPE>.EQ.2 .OR. <WIN-SHADE-TYPE>.EQ.4 ) ISHLOC = 2         DCOF   458
C              WARNING IF WINDOW HAS VIS-TRANS-SCH BUT NO SHADING-SCH           DCOF   459
      IF (<VIS-TRANS-SCH>.EQ.0) GO TO 4151                                      DCOF   460
      IF (<KGCURT>.NE.0) GO TO 4151                                             DCOF   461
      CALL MSGSIM(-2,0,0,0,0)                                                   DCOF   462
      WRITE (IOUTPT,4152) (<IWINM>,II=1,8),(<IZNM>,II=1,8)                      -042L4  36
 4152 FORMAT (                                                                  -042L4  37
     1 12X,7HWINDOW ,8A4,17H, IN DAYLIT SPACE ,8A4/                             -042L4  38
     2 12X,60HHAS A VIS-TRANS-SCH BUT NO CORRESPONDING SHADING-SCHEDULE.        -042L4  39
     3    /12X,'The DAYLIGHTING calculation for this WINDOW will be ',          -042L4  40
     4         'done without a shading device.'  )                              -042L4  41
 4151 CONTINUE                                                                  DCOF   469
C              ERROR IF WINDOW HAS SHADING-SCH BUT NO VIS-TRANS-SCH             DCOF   470
      IF (<KGCURT>.EQ.0) GO TO 4153                                             DCOF   471
      IF (<VIS-TRANS-SCH>.NE.0) GO TO 4153                                      DCOF   472
      CALL MSGSIM(-1,0,0,0,0)                                                   DCOF   473
      WRITE(IOUTPT,4154)  (<IZNM>,II=1,8), (<IWINM>,II=1,8)                     -023    18
 4154 FORMAT(                                                                   -023    19
     1 12X,'Daylighting calculation cannot be done for SPACE ',8A4/             -023    20
     3 12X,'since WINDOW ',8A4,' has a SHADING-SCHEDULE '/                      -023    21
     4 12X,'but no VIS-TRANS-SCH.')                                             -023    22
#ifdef _DLL                                                                  /* -051    56 */ 
      WRITE(outstr,2456)  (<IZNM>, II=1,8)                                      -051    57
      WRITE(outstr2,4155) (<IWINM>,II=1,8)                                      -051    58
 4155 FORMAT('Required VIS-TRANS-SCH is missing for WINDOW ',8A4)               -051    59
      Call MessageBox( NULL,                                                    -051    60
     $ outstr2//char(0),outstr//char(0), MB_OK+MB_ICONSTOP+MB_TASKMODAL)        -051    61
      GOTO 9000                                                                 -051    62
#else                                                                        /* -051    63 */ 
      CALL ABT                                                                  DCOF   480
#endif                                                                       /* -051    64 */ 
 4153 CONTINUE                                                                  DCOF   481
C              VERTICES OF WINDOW (NUMBERED COUNTER-CLOCKWISE STARTING          DCOF   482
C              AT UPPER LEFT AS VIEWED FROM INSIDE OF ROOM)                     DCOF   483
      DO 4100 I = 1,3                                                           DCOF   484
      W1(I)  = AA(MWIG + 9 + I)                                                 DCOF   485
      W2(I)  = AA(MWIG +  6 + I)                                                DCOF   486
      W3(I)  = AA(MWIG +  3 + I)                                                DCOF   487
 4100 CONTINUE                                                                  DCOF   488
C              UNIT VECTORS FROM WINDOW VERTEX 2 TO 1 AND 2 TO 3,               DCOF   489
C              CENTER POINT OF WINDOW, AND VECTOR FROM REF PT TO CENTER         DCOF   490
      D1     = 0.0                                                              DCOF   491
      D2     = 0.0                                                              DCOF   492
      DO 4200 I = 1,3                                                           DCOF   493
      W21(I) = W1(I) - W2(I)                                                    DCOF   494
      W23(I) = W3(I) - W2(I)                                                    DCOF   495
      D1     = D1 + W21(I)*W21(I)                                               DCOF   496
      D2     = D2 + W23(I)*W23(I)                                               DCOF   497
      WC(I)  = W2(I) + 0.5*(W23(I)+W21(I))                                      DCOF   498
      REFWC(I) = WC(I) - RREF(I)                                                DCOF   499
 4200 CONTINUE                                                                  DCOF   500
      D1     = SQRT(D1)                                                         DCOF   501
      D2     = SQRT(D2)                                                         DCOF   502
      DO 4205 I=1,3                                                             DCOF   503
      W21(I) = W21(I)/D1                                                        DCOF   504
 4205 W23(I) = W23(I)/D2                                                        DCOF   505
C              UNIT VECTOR NORMAL TO WINDOW (POINTING AWAY FROM ROOM)           DCOF   506
      CALL DCROSS ( W21, W23, WNORM )                                           DCOF   507
C              Make sure this unit vector does not have elements >1             -38g     1
C              (can happen due to precision problems)                           -38g     2
      J = 0                                                                     -38g     3
      DO I=1,3                                                                  -38g     4
        IF(WNORM(I) .GT. 1.0) THEN                                              -38g     5
         IF(J .eq. 0) THEN                                                      -38g     6
          CALL MSGSIM(-2,0,0,0,0)                                               -38g     7
          WRITE(IOUTPT,4215)  (IA(MZ+II-1),II=1,8), IL,                         -38g     8
     $    (IA(MWI+II-1),II=1,8), (WNORM(II),II=1,3)                             -38g     9
 4215     FORMAT(                                                               -38g    10
     $    12X,'Daylighting coefficient calculation for SPACE ',8A4/             -38g    11
     $    12X,'for reference point ',I3, ' encountered an ERROR.'/              -38g    12
     $    12X 'The unit normal for the contribution from WINDOW ',8A4/          -38g    13
     $    12X,'had a length greater than 1.0. WNORM was: ',                     -38g    14
     $        3(F10.7,3X)/                                                      -38g    15
     $    12X,'One or more WNORM components have been reset to 1.0 ',           -38g    16
     $        'to correct the problem.')                                        -38g    17
         ENDIF                                                                  -38g    18
         WNORM(I) = 1.0                                                         -38g    19
         J=1                                                                    -38g    20
        ENDIF                                                                   -38g    21
      ENDDO                                                                     -38g    22
C              INITIALIZE NUMBER OF WINDOW ELEMENTS                             DCOF   508
      NDIVX = 40                                                                DCOF   509
      NDIVY = 40                                                                DCOF   510
C              CHECK IF REF POINT IN WINDOW DUE TO INPUT ERROR                  DCOF   511
C                                                                               DCOF   512
C              DISTANCE FROM REF POINT TO WINDOW PLANE                          DCOF   513
      ALF    = ABS (DDOT ( WNORM, REFWC ))                                      DCOF   514
      IF( ALF.GT.0.5 ) GO TO 4250                                               DCOF   515
C              REF PT IS CLOSE TO WINDOW PLANE.  GET VECTOR FROM WINDOW         DCOF   516
C              ORIGIN TO PROJECTION OF REF PT ON WINDOW PLANE                   DCOF   517
      DO 4260 I = 1,3                                                           DCOF   518
 4260 W2REF(I) = RREF(I) + ALF * WNORM(I) - W2(I)                               DCOF   519
      D1     = DDOT ( W2REF, W23 )                                              DCOF   520
      IF(D1.LT.0.0.OR.D1.GT.WW) GO TO 4254                                      DCOF   521
      D1     = DDOT ( W2REF, W21 )                                              DCOF   522
      IF(D1.LT.0.0.OR.D1.GT.HW) GO TO 4254                                      DCOF   523
C              REF PT IS IN WINDOW.  PRINT ERROR MESSAGE AND RETURN.            DCOF   524
      CALL MSGSIM(-1,0,0,0,0)                                                   DCOF   525
      WRITE(IOUTPT,4270)  (<IZNM>,II=1,8), IL, ALF, (<IWINM>,II=1,8)            -023    23
 4270 FORMAT(                                                                   -023    24
     1 12X,'Daylighting calculation was requested for SPACE ',8A4/              -023    25
     2 12X,'but reference point ',I3,' is only ',F7.4/                          -023    26
     3 12X,'feet from WINDOW ',8A4,'.  This is too close.')                     -023    27
#ifdef _DLL                                                                  /* -051    65 */ 
      WRITE(outstr,2456)  (<IZNM>, II=1,8)                                      -051    66
      WRITE(outstr2,4271) IL, (<IWINM>,II=1,8)                                  -051    67
 4271 FORMAT('Reference point',I3,' is too close to WINDOW ',8A4)               -051    68
      Call MessageBox( NULL,                                                    -051    69
     $ outstr2//char(0),outstr//char(0), MB_OK+MB_ICONSTOP+MB_TASKMODAL)        -051    70
      GOTO 9000                                                                 -051    71
#else                                                                        /* -051    72 */ 
      CALL ABT                                                                  DCOF   532
#endif                                                                       /* -051    73 */ 
 4250 CONTINUE                                                                  DCOF   533
C                                                                               DCOF   534
C              NUMBER OF WINDOW ELEMENTS                                        DCOF   535
      NDIVX  = INT (4.*WW/ALF)                                                  DCOF   536
      NDIVY  = INT (4.*HW/ALF)                                                  DCOF   537
C              WARNING IF NO. OF DIVISIONS IN X OR Y TOO SMALL FOR              DCOF   538
C              ACCURATE WINDOW-ELEMENT SOLID ANGLE CALCULATION                  DCOF   539
      IF (NDIVX.LE.80) GO TO 4252                                               DCOF   540
      CALL MSGSIM(-2,0,0,0,0)                                                   DCOF   541
      WRITE(IOUTPT,4251)  (<IZNM>,II=1,8),WW,(<IWINM>,II=1,8),ALF,IL            -042L4  42
 4251 FORMAT(                                                                   -042L4  43
     $12X,'An inaccurate daylight illuminance calculation may result'/          -042L4  44
     $12X,'for SPACE ',8A4,' since the WIDTH (',F10.1,' FT)'/                   -042L4  45
     $12X,'of WINDOW ',8A4,' is more than 20 times the distance'/               -042L4  46
     $12X,'(',F10.1,' FT) from REFERENCE POINT # ',I2,' to the WINDOW'/         -042L4  47
     $12X,'PLANE. Check REFERENCE POINT. If properly located, divide '/         -042L4  48
     $12X,'WINDOW into two pieces along its X-axis.')                           -042L4  49
 4252 IF (NDIVY.LE.80) GO TO 4254                                               DCOF   550
      CALL MSGSIM(-2,0,0,0,0)                                                   DCOF   551
      WRITE(IOUTPT,4253)  (<IZNM>,II=1,8),HW,(<IWINM>,II=1,8),ALF,IL            -042L4  50
 4253 FORMAT(                                                                   -042L4  51
     $12X,'An inaccurate daylight illuminance calculation may result'/          -042L4  52
     $12X,'for SPACE ',8A4,' since the HEIGHT (',F10.1,' FT) of WINDOW'/        -042L4  53
     $12X,8A4,' is more than 20 times the distance (',F10.1,' FT)'/             -042L4  54
     $12X,'from REFERENCE POINT # ',I2,' to the WINDOW PLANE.'/                 -042L4  55
     $12X,'Check REFERENCE POINT.  If properly located, divide WINDOW '/        -042L4  56
     $12X,'into two pieces along its Y-axis.')                                  -042L4  57
 4254 CONTINUE                                                                  DCOF   560
      NWX    = INT( <DAY-X-DIVISION> )                                          DCOF   561
      NWY    = INT( <DAY-Y-DIVISION> )                                          DCOF   562
      NWX    = MIN0 (40, MAX0(NWX,NDIVX))                                       DCOF   563
      NWY    = MIN0 (40, MAX0(NWY,NDIVY))                                       DCOF   564
C              SIZE OF WINDOW ELEMENTS                                          DCOF   565
      DWX    = WW / FLOAT(NWX)                                                  DCOF   566
      DWY    = HW / FLOAT(NWY)                                                  DCOF   567
C                                                                               DCOF   568
C              AZIMUTH AND ALTITUDE OF WINDOW NORMAL                            DCOF   569
      PHWN   = ASIN ( WNORM(3) )                                                DCOF   570
      THWN   = 0.                                                               DCOF   571
      IF(ABS(WNORM(1)).LT.1.0E-5.AND.ABS(WNORM(2)).LT.1.0E-5) GO TO 4255        DCOF   572
      THWN   = ATAN2 ( WNORM(2), WNORM(1) )                                     DCOF   573
 4255 CONTINUE                                                                  DCOF   574
      SPHWN  = WNORM(3)                                                         DCOF   575
      CPHWN  = COS(PHWN)                                                        DCOF   576
C                                                                               DCOF   577
C              CEILING-WALL (RHOCW) AND FLOOR-WALL (RHOFW) REFLECTANCE          DCOF   578
C              FACTORS FOR THIS WINDOW (USED IN CALC OF INTERNALLY              DCOF   579
C              REFLECTED DAYLIGHTING COMPONENT)                                 DCOF   580
C                                                                               DCOF   581
C              RATIO OF FLOOR-TO-WINDOW-CENTER HEIGHT TO AVERAGE FLOOR-         DCOF   582
C              TO-CEILING HEIGHT                                                DCOF   583
      ETA    = AMIN1 ( 1.0, (WC(3) - <ZZ>) * <ZFLRAR> / <ZVOL> )                DCOF   584
      IF(ETA.LT.0.) ETA = 0.                                                    DCOF   585
C              AVERAGE REFLECTANCE SEEN BY LIGHT MOVING UP (RHOCW) AND          DCOF   586
C              DOWN (RHOFW) ACROSS HORIZ PLANE THRU CENTER OF WINDOW            DCOF   587
      RHOCW  = ( ARHP(2) * (1.-ETA) + ARHP(3) ) /                               DCOF   588
     1   ( AP(2)*(1.-ETA) + AP(3) + 1.0E-5 )                                    DCOF   589
      RHOFW  = (ARHP(2) * ETA + ARHP(1) ) / ( AP(2) * ETA + AP(1)+1.E-9)        DCOF   590
C              ANGLE FACTOR FOR WINDOWS WITH DIFFUSING EXTERIOR OR              DCOF   591
C              INTERIOR SHADES.  FRUP IS FRACTION OF LIGHT FROM THE             DCOF   592
C              SHADE WHICH GOES UP TOWARD CEILING AND UPPER PART OF             DCOF   593
C              WALLS.  1 - FRUP IS THEN DOWNWARD-GOING FRACTION.                DCOF   594
      FRUP   = ( PIOVR2 - PHWN ) / PI                                           DCOF   595
C                                                                               DCOF   596
C              INITIALIZE SKY AND SUN COMPONENTS OF DIRECT ILLUMINANCE          DCOF   597
C              (EDIRSK, EDIRSU) AND AVERAGE WINDOW LUMINANCE (AVWLSK,           DCOF   598
C              AVWLSU), AT REF PT.                                              DCOF   599
C              I=1 FOR CLEAR SKY, 2 FOR OVERCAST.  J=1 FOR BARE WINDOW,         DCOF   600
C              2 FOR WINDOW WITH SHADES.  K = SUN POSITION INDEX.               DCOF   601
C                                                                               DCOF   602
      DO 4500 K = 1,24                                                          DCOF   603
      DO 4500 J = 1,12                                                          VISBL  490
      DO 4500 I = 1,2                                                           DCOF   605
      EDIRSK(I,J,K) = 0.                                                        DCOF   606
      EDIRSU(I,J,K) = 0.                                                        DCOF   607
      AVWLSK(I,J,K) = 0.                                                        DCOF   608
      AVWLSU(I,J,K) = 0.                                                        DCOF   609
 4500 CONTINUE                                                                  DCOF   610
C                                                                               DCOF   611
C              INITIALIZE SOLID ANGLE SUBTENDED BY WINDOW WRT REF PT            DCOF   612
C              AND SOLID ANGLE WEIGHTED BY GLARE POSITION-FACTOR                DCOF   613
C                                                                               DCOF   614
      <OMEGA> = 0.                                                              DCOF   615
      <OMEGAW> = 0.                                                             DCOF   616
C                                                                               DCOF   617
C                        ---------------------                                  DCOF   618
C              ---------- WINDOW ELEMENT LOOP ----------                        DCOF   619
C                        ---------------------                                  DCOF   620
C                                                                               DCOF   621
      DO 5000 IX = 1,NWX                                                        DCOF   622
      DO 6000 IY = 1,NWY                                                        DCOF   623
      LSHCAL = LSHCAL + 1                                                       DCOF   624
C              CENTER OF WIN ELEMENT IN BLDG COORD SYS                          DCOF   625
      DO 6100 I = 1,3                                                           DCOF   626
 6100 RWIN(I) = W2(I) + (FLOAT(IX) - 0.5) * W23(I) * DWX +                      DCOF   627
     1                  (FLOAT(IY) - 0.5) * W21(I) * DWY                        DCOF   628
C              DISTANCE BETWEEN REF PT AND ELEMENT                              DCOF   629
      DISQ   = 0.                                                               DCOF   630
      DO 6200 I = 1,3                                                           DCOF   631
      DDIS   = RWIN(I) - RREF(I)                                                DCOF   632
 6200 DISQ   = DISQ + DDIS * DDIS                                               DCOF   633
      DIS    = SQRT( DISQ )                                                     DCOF   634
C              UNIT VECTOR ALONG RAY FROM REF PT TO ELEMENT                     DCOF   635
      DO 6300 I = 1,3                                                           DCOF   636
 6300 RAY(I) = ( RWIN(I) - RREF(I) ) / DIS                                      DCOF   637
C              COSINE OF ANGLE BETWEEN RAY AND WINDOW OUTWARD NORMAL            DCOF   638
      COSB   = DDOT ( WNORM, RAY )                                              DCOF   639
C              IF COSB LT 0, DIRECT LIGHT FROM WINDOW CANNOT REACH REF          DCOF   640
C              PT.  SKIP TO LOOP OVER SUN POSITION AND CALCULATE                DCOF   641
C              INTER-REFLECTED COMPONENT OF ILLUMINANCE                         DCOF   642
      IF ( COSB.LE.0. ) GO TO 6900                                              DCOF   643
C              AZIMUTH ( -PI TO PI ) AND ALTITUDE ( -PI/2 TO PI/2 )             DCOF   644
C              OF RAY.  AZIMUTH = 0 IS ALONG X-AXIS OF BLDG COORD SYS.          DCOF   645
      PHRAY  = ASIN ( RAY(3) )                                                  DCOF   646
      THRAY  = 0.                                                               DCOF   647
      IF (RAY(1).EQ.0.0.AND.RAY(2).EQ.0.0) GO TO 6305                           DCOF   648
      THRAY  = ATAN2 ( RAY(2), RAY(1) )                                         DCOF   649
 6305 CONTINUE                                                                  DCOF   650
C              SOLID ANGLE SUBTENDED BY ELEMENT WRT REF PT                      DCOF   651
      DOMEGA = DWX * DWY * COSB / DISQ                                          DCOF   652
      <OMEGA> = <OMEGA> + DOMEGA                                                DCOF   653
C                                                                               DCOF   654
C              CALCULATE POSITION FACTOR (FOR GLARE CALC) FOR THIS              DCOF   655
C              WIN ELEMENT / REF PT / VIEW VECTOR COMBINATION                   DCOF   656
C                                                                               DCOF   657
      POSFAC = 0.                                                               DCOF   658
C              DIS FROM REF PT TO INTERSECTION OF VIEW VECTOR AND PLANE         DCOF   659
C              NORMAL TO VIEW VECTOR CONTAINING WIN ELEMENT                     DCOF   660
      RR     = DIS * DDOT ( RAY, VIEWVC )                                       DCOF   661
      IF ( RR.LE.0. ) GO TO 6500                                                DCOF   662
C              SQ OF DIS FROM ABOVE INTERSECTION POINT TO WIN ELEMENT           DCOF   663
      ASQ    = DISQ - RR * RR                                                   DCOF   664
C              VERTICAL DISPLACEMENT OF WIN ELEMENT WRT REF PT                  DCOF   665
      YD     = RWIN (3) - RREF (3)                                              DCOF   666
C              HORIZONTAL AND VERTICAL DISPLACEMENT RATIO AND POS FACTOR        DCOF   667
      XR     = SQRT ( ABS(ASQ - YD*YD) ) / RR                                   DCOF   668
      YR     = ABS ( YD / RR )                                                  DCOF   669
      POSFAC = DPFAC ( XR, YR )                                                 DCOF   670
 6500 CONTINUE                                                                  DCOF   671
C              INCREMENT POSITION-FACTOR-MODIFIED SOLID ANGLE                   DCOF   672
      <OMEGAW> = <OMEGAW> + DOMEGA * POSFAC                                     DCOF   673
C              TVIS OF GLASS FOR COSB INCID ANGLE (FOR NORMAL TVIS = 1)         DCOF   674
      ANGINCD = ACOS(COSB)/DTOR                                                 -044d5 483
      <SOLARANGLEINDEX>= INT(ANGINCD/10.0) + 1                                  -044d5 484
      <SOLARANGLEINC>  =     ANGINCD/10.0  - FLOAT(INT(ANGINCD/10.0))           -044d5 485
      IF(<WINDOW-TYPE> .GT. 1) THEN                                             -044d5 486
C        Window is a Domed Skylight, with transmittance multipler defined       -044d5 487
C         with arrays <SKY-TRANS-ANG> & <SKY-TRANS-MULT>                        -044d5 488
         DO II=1,10                                                             -044d5 489
           IF(<SKY-TRANS-ANG> .GE. ANGINCD)  EXIT                               -044d5 490
         ENDDO                                                                  -044d5 491
         t1 = <SKY-TRANS-MULT>                                                  -044d5 492
         t2 = <SKY-TRANS-ANG>                                                   -044d5 493
         II = II - 1                                                            -044d5 494
         TVISB = <SKY-TRANS-MULT> +(t1-<SKY-TRANS-MULT>)                        -044d5 495
     $               *(t2-ANGINCD)/(t2-<SKY-TRANS-ANG>)                         -044d5 496
      ELSE                                                                      -044d5 497
C       Not a domed skylight, transmittance multiplier defined for              -044d5 498
C        standard glass or for the library entry curve fit                      -044d5 499
        if(<IGTYP>.EQ.-1) then                                                  -044d5 500
        TVISB = (1./TSOLNM)*AMAX1(0.,<CAM1> + COSB*                             -044d5 501
     $        ( <CAM2> + COSB * ( <CAM3> + COSB * <CAM4> )))                    -044d5 502
        else                                                                    -044d5 503
          tvisb = Get_WinLib_TVIS(COSB,1)                                       -044d5d 20
        endif                                                                   -044d5 513
      ENDIF                                                                     -044d5 514
C   If a Tubular Device, alter transmittance by user entry or calculated        -044d5 515
C     transmittance of tube using the following equation                        -044d5 516
C     Tubular Well Eff = DiffuserTrans * TubeRefl^(4/pi*AspectRatio*Tan(inc))   -044d5 517
      IF(<WINDOW-TYPE> .EQ. 3) THEN                                             -044d5 518
        If (<TUBE-EFF-METHOD>.EQ.0) Then                                        -044d5 519
         TubeMult = <TUBE-EFFICIENCY>                                           -044d5 520
        Else                                                                    -044d5 521
         TubeMult = <TUBE-DIFF-TRANS> * <TUBE-VIS-REFLECT> **                   -044d5 522
     $       (1.27324*<TUBE-LENGTH>/                                            -044d5 523
     $         <TUBE-DIAMETER>*TAN(AMIN1(ANGINCD,89.)*DTOR))                    -044d5 524
        Endif                                                                   -044d5 525
         TVISB = TVISB * TubeMult                                               -044d5 526
      ENDIF                                                                     -044d5 527
C                                                                               -044d5 528
C              FOR THIS WINDOW ELEMENT GET DIRECT-DIRECT VIS TRANS              VISBL  491
C              OF WINDOW WITH BLINDS                                            VISBL  492
      IF(<IBLDF>.GE.2) THEN                                                     VISBL  493
         RAYSAV1 = RAYCOS(1)                                                    VISBL  494
         RAYSAV2 = RAYCOS(2)                                                    VISBL  495
         RAYSAV3 = RAYCOS(3)                                                    VISBL  496
         RAYCOS(3) = RAY(3)                                                     VISBL  497
         RAYCOS(2) = RAY(2)                                                     VISBL  498
         RAYCOS(1) = RAY(1)                                                     VISBL  499
         DELTANG = (<ANGSLATMAX> - <ANGSLATMIN>)/10.                            VISBL  500
         DO JB = 2,12                                                           VISBL  501
            JBB = JB-1                                                          VISBL  502
C              IF NO ADJUSTABLE LAYER, DO ONLY JB = 2                           VISBL  503
            IF(JB.GE.3.AND.<IBLDF>.LE.2) GO TO 8266                             VISBL  504
               IF(<IBLDF>.EQ.2) THEN                                            VISBL  505
C              FIXED BLIND                                                      VISBL  506
                  CALL CALBLD(2,0,0,0,0)                                        VISBL  507
               ELSE                                                             VISBL  508
C              ADJUSTABLE BLIND                                                 VISBL  509
                  ANGINP = <ANGSLATMIN> + DELTANG*(JB-2)                        VISBL  510
                  CALL CALBLD(3,0,ANGINP,0,0)                                   VISBL  511
               ENDIF                                                            VISBL  512
C              TDIRDIR IS DIRECT-DIRECT VISIBLE TRANSMITTANCE                   VISBL  513
C              (PORTION OF DIRECT VISIBLE RADIATION GOING                       VISBL  514
C              BETWEEN SLATS)                                                   VISBL  515
               TVDIRDIR(JBB) = TDIRDIR                                          VISBL  516
         ENDDO                                                                  VISBL  517
 8266    CONTINUE                                                               VISBL  518
         RAYCOS(1) = RAYSAV1                                                    VISBL  519
         RAYCOS(2) = RAYSAV2                                                    VISBL  520
         RAYCOS(3) = RAYSAV3                                                    VISBL  521
      ENDIF                                                                     VISBL  522
C                                                                               DCOF   681
C              DETERMINE IF RAY INTERSECTS A BUILDING-SHADE.  DHITSH            DCOF   682
C              SETS HIT FLAG, IHIT, AND POINTER, MHHIT, TO HIT SHADE.           DCOF   683
C                                                                               DCOF   684
      MH=0                                                                      DCOF   685
      IHIT=0                                                                    DCOF   686
      IF((<NWISHADE>+<NXSHAD>+NGSHAD+NSSHD).NE.0) CALL DHITSH(RREF,RAY)         DCOF   687
      MH1    = MHHIT                                                            DCOF   688
      IHIT1  = IHIT                                                             DCOF   689
C                                                                               DCOF   690
 6900 CONTINUE                                                                  DCOF   691
C                                                                               DCOF   692
C                        -------------------                                    DCOF   693
C              ---------- SUN POSITION LOOP ----------                          DCOF   694
C                        -------------------                                    DCOF   695
C                                                                               DCOF   696
C              ICALBLD = 0 MEANS DREFLT NEEDS TO CALL CALBLD TO                 VISBL  523
C              GET TRANSMITTANCE OF WINDOW WITH BLIND                           VISBL  524
      ICALBLD = 0                                                               VISBL  525
      DO 7000 IPHS = 1,NPHS                                                     DCOF   697
C              ALTITUDE OF SUN (DEGREES)                                        DCOF   698
      H      = PHSMIN + FLOAT(IPHS-1) * PHSDEL                                  DCOF   699
      PHSUN  = H * DTOR                                                         DCOF   700
      SPHSUN = SIN(PHSUN)                                                       DCOF   701
      CPHSUN = COS(PHSUN)                                                       DCOF   702
C              GET CLEAR SKY ZENITH LUMINANCE, MOISTURE, AND TURBIDITY          DCOF   703
C              COEFF FOR REFERENCE MONTH                                        DCOF   704
      CALL DZENLM (IMREF)                                                       DCOF   705
      DO 8000 ITHS = 1,NTHS                                                     DCOF   706
C              AZIMUTH OF SUN IN BLDG COORD SYS                                 DCOF   707
      THSUN  = ( THSMIN - 90. + FLOAT(ITHS-1) * THSDEL ) * DTOR + BAZIM         DCOF   708
      IHR    = ITHS + NTHS * (IPHS-1)                                           DCOF   709
C**************** window: WINDOW-SPEC-FN with FNTYPE=5 *****************        DCOF   710
      IF( <MWISPFN> .GT. 0 )   CALL  FINTL( <MWISPFN>, 5. )                     DCOF   711
C***********************************************************************        DCOF   712
C                                                                               DCOF   713
C                                                                               DCOF   714
C              FIRST TIME THROUGH, CALL ROUTINE TO CALC INTER-REFLECTED         DCOF   715
C              ILLUM AT REF PT AND LUMINANCE OF WINDOW WITH SHADES              DCOF   716
C                                                                               DCOF   717
      IF(LSHCAL.EQ.1) CALL DREFLT(ICALBLD)                                      VISBL  526
      ICALBLD = 1                                                               VISBL  527
C                                                                               DCOF   719
      IF(COSB.LE.0.0) GO TO 8000                                                -081     1
      MH     = MH1                                                              DCOF   720
      IHIT   = IHIT1                                                            DCOF   721
      DO II = 1,2                                                               VISBL  528
         XEDIRSK(II) = 0.                                                       VISBL  529
         XEDIRSU(II) = 0.                                                       VISBL  530
         XAVWLSK(II) = 0.                                                       VISBL  531
         XAVWLSU(II) = 0.                                                       VISBL  532
      ENDDO                                                                     VISBL  533
C                                                                               DCOF   722
C              ADD CONTRIBUTION OF THIS WIN ELEMENT TO GLARE AND TO             DCOF   723
C              DIRECT ILLUM AT REF PT                                           DCOF   724
C                                                                               DCOF   725
C              ----- CASE I -- WINDOW WITHOUT SHADES                            DCOF   726
C                                                                               DCOF   727
C              IF RAY HITS A SHADING SURFACE, CONTRIB TO ILLUM IS ZERO          DCOF   728
C              UNLESS FRONT OF A GLOBAL IS HIT (IHIT=4).  IF SHADING            DCOF   729
C              SURFACE IS NOT HIT (IHIT=0), RAY SEES SKY OR GROUND.             DCOF   730
C                                                                               DCOF   731
      IF ( IHIT.EQ.0 ) GO TO 8460                                               DCOF   732
      IF ( IHIT.LT.4 ) GO TO 8480                                               DCOF   733
C                                                                               DCOF   734
C              RAY HIT FRONT OF A GLOBAL SHADING SURF.  ADD CONTRIB OF          DCOF   735
C              SHADING SURF LUMINANCE (IN CD/SF) TO ILLUM AT REF POINT          DCOF   736
C              AND TO WINDOW LUMINANCE.                                         DCOF   737
C                                                                               DCOF   738
      IF ( PHRAY.LT.0. ) GO TO 8450                                             DCOF   739
      XEDIRSK(1) = AA(<KDSLUM>+IHR-1) * DOMEGA * RAY(3)                         VISBL  534
      EDIRSK(1,1,IHR) = EDIRSK(1,1,IHR) + XEDIRSK(1) * TVISB                    VISBL  535
      XEDIRSU(1) = AA(<KDSLUM>+NDFC+IHR-1) * DOMEGA * RAY(3)                    VISBL  536
      EDIRSU(1,1,IHR) = EDIRSU(1,1,IHR) + XEDIRSU(1) * TVISB                    VISBL  537
      IF(IHR.EQ.1) THEN                                                         VISBL  538
         XEDIRSK(2) = AA(<KDSLUM>+2*NDFC) * DOMEGA * RAY(3)                     VISBL  539
         EDIRSK(2,1,IHR) = EDIRSK(2,1,IHR) + XEDIRSK(2) * TVISB                 VISBL  540
      ENDIF                                                                     VISBL  541
 8450 CONTINUE                                                                  VISBL  542
      XAVWLSK(1) = AA(<KDSLUM>+IHR-1)                                           VISBL  543
      AVWLSK(1,1,IHR) = AVWLSK(1,1,IHR) + XAVWLSK(1) * TVISB                    VISBL  544
      XAVWLSU(1) = AA(<KDSLUM>+NDFC+IHR-1)                                      VISBL  545
      AVWLSU(1,1,IHR) = AVWLSU(1,1,IHR) + XAVWLSU(1) * TVISB                    VISBL  546
      IF(IHR.EQ.1) THEN                                                         VISBL  547
         XAVWLSK(2) = AA(<KDSLUM>+2*NDFC)                                       VISBL  548
         AVWLSK(2,1,IHR) = AVWLSK(2,1,IHR) + XAVWLSK(2) * TVISB                 VISBL  549
      ENDIF                                                                     VISBL  550
      GO TO 8480                                                                DCOF   751
C                                                                               DCOF   752
C              SHADING SURF NOT HIT.  ADD CONTRIB OF SKY OR GROUND              DCOF   753
C              LUMINANCE IN CD/SF.                                              DCOF   754
C                                                                               DCOF   755
 8460 DO 8400 I = 1,2                                                           DCOF   756
      IF ( I.EQ.2.AND.IHR.GT.1 ) GO TO 8400                                     DCOF   757
      IF ( PHRAY.LE.0. ) GO TO 8399                                             DCOF   758
      IDT = I                                                                   DCOF   759
      ELUM = DSKYLU (IDT,THRAY,PHRAY)                                           DCOF   760
      XEDIRSK(I) = ELUM * DOMEGA * RAY(3)                                       VISBL  551
      DEDIR  = XEDIRSK(I) * TVISB                                               VISBL  552
      EDIRSK(I,1,IHR) = EDIRSK(I,1,IHR) + DEDIR                                 DCOF   762
      AVWLSK(I,1,IHR) = AVWLSK(I,1,IHR) + ELUM * TVISB                          DCOF   763
      XAVWLSK(I) = ELUM                                                         VISBL  553
      GO TO 8400                                                                VISBL  554
 8399 XAVWLSK(I) = GILSK(I,IPHS) * <GNDREF> / PI                                VISBL  555
      AVWLSK(I,1,IHR) = AVWLSK(I,1,IHR) + TVISB * XAVWLSK(I)                    VISBL  556
      XAVWLSU(I) = GILSU(I,IPHS) * <GNDREF> / PI                                VISBL  557
      AVWLSU(I,1,IHR) = AVWLSU(I,1,IHR) + TVISB * XAVWLSU(I)                    VISBL  558
 8400 CONTINUE                                                                  DCOF   769
 8480 CONTINUE                                                                  DCOF   770
C                                                                               DCOF   771
C              ILLUMINANCE FROM (UNREFLECTED) DIRECT SUN                        DCOF   772
C                                                                               DCOF   773
      IF(IX.NE.NWX.OR.IY.NE.NWY) GO TO 8010                                     DCOF   774
C              UNIT VECTOR FROM REF. PT. TO SUN                                 DCOF   775
      RAYCOS(1)=CPHSUN*COS(THSUN)                                               DCOF   776
      RAYCOS(2)=CPHSUN*SIN(THSUN)                                               DCOF   777
      RAYCOS(3)=SPHSUN                                                          DCOF   778
C              IS SUN ON FRONT SIDE OF WINDOW                                   DCOF   779
      COSI=DDOT(WNORM,RAYCOS)                                                   DCOF   780
      IF(COSI.LE.0.) GO TO 8010                                                 DCOF   781
C              DOES RAYCOS PASS THRU WINDOW                                     DCOF   782
      CALL DPIERC(W1,W2,W3,RREF,RAYCOS,IP)                                      DCOF   783
      IF(IP.EQ.0) GO TO 8010                                                    DCOF   784
C              DOES RAYCOS INTERCEPT SHADING SURFACE                            DCOF   785
      CALL DHITSH(RREF,RAYCOS)                                                  DCOF   786
      IF(IHIT.NE.0) GO TO 8010                                                  DCOF   787
C              SUN REACHES REF. PT.  INCREMENT ILLUMINANCE                      DCOF   788
      ANGINCD = ACOS(COSI)/DTOR                                                 -044d5 529
      <SOLARANGLEINDEX>= INT(ANGINCD/10.0) + 1                                  -044d5 530
      <SOLARANGLEINC>  =     ANGINCD/10.0  - FLOAT(INT(ANGINCD/10.0))           -044d5 531
      IF(<WINDOW-TYPE> .GT. 1) THEN                                             -044d5 532
C        Window is a Domed Skylight, with transmittance multipler defined       -044d5 533
C         with arrays <SKY-TRANS-ANG> & <SKY-TRANS-MULT>                        -044d5 534
         TVISS = 1.0                                                            -044d5 535
          DO II=1,10                                                            -044d5 536
            IF(<SKY-TRANS-ANG> .GE. ANGINCD)  EXIT                              -044d5 537
          ENDDO                                                                 -044d5 538
         t1 = <SKY-TRANS-MULT>                                                  -044d5 539
         t2 = <SKY-TRANS-ANG>                                                   -044d5 540
         II = II - 1                                                            -044d5 541
         TVISS = <SKY-TRANS-MULT> +(t1-<SKY-TRANS-MULT>)                        -044d5 542
     $               *(t2-ANGINCD)/(t2-<SKY-TRANS-ANG>)                         -044d5 543
      ELSE                                                                      -044d5 544
C       Not a domed skylight, transmittance multiplier defined for              -044d5 545
C        standard glass or for the library entry curve fit                      -044d5 546
       if(<IGTYP>.EQ.-1) then                                                   -044d5 547
       TVISS=AMAX1(0.,<CAM1>+COSI*(<CAM2>+COSI*(<CAM3>+COSI*<CAM4>)))           -044d5 548
     &       /TSOLNM                                                            -044d5 549
       else                                                                     -044d5 550
         tviss = Get_WinLib_TVIS(cosi,1)                                        -044d5d 21
       endif                                                                    -044d5 560
      ENDIF                                                                     -044d5 561
C   If a Tubular Device, alter transmittance by user entry or calculated        -044d5 562
C     transmittance of tube using the following equation                        -044d5 563
C     Tubular Well Eff = DiffuserTrans * TubeRefl^(4/pi*AspectRatio*Tan(inc))   -044d5 564
      IF(<WINDOW-TYPE> .EQ. 3) THEN                                             -044d5 565
        If (<TUBE-EFF-METHOD>.EQ.0) Then                                        -044d5 566
         TubeMult = <TUBE-EFFICIENCY>                                           -044d5 567
        Else                                                                    -044d5 568
         TubeMult = <TUBE-DIFF-TRANS> * <TUBE-VIS-REFLECT> **                   -044d5 569
     $       (1.27324*<TUBE-LENGTH>/                                            -044d5 570
     $         <TUBE-DIAMETER>*TAN(AMIN1(ANGINCD,89.)*DTOR))                    -044d5 571
        Endif                                                                   -044d5 572
        TVISS = TVISS * TubeMult                                                -044d5 573
       ENDIF                                                                    -044d5 574
C                                                                               -044d5 575
      DNSOLI=DNSOL(IMREF)                                                       DCOF   795
      EDIRSU(1,1,IHR)=EDIRSU(1,1,IHR)+DNSOLI*RAYCOS(3)*TVISS                    DCOF   796
      IF(<IBLDF>.GE.2) THEN                                                     VISBL  559
         DO JB = 2,12                                                           VISBL  560
            JBB = JB-1                                                          VISBL  561
            TVDISK(JBB) = 0.                                                    VISBL  562
C              IF NO ADJUSTABLE LAYER, DO ONLY JB = 2                           VISBL  563
            IF(JB.GE.3.AND.<IBLDF>.LE.2) GO TO 82666                            VISBL  564
               IF(<IBLDF>.EQ.2) THEN                                            VISBL  565
C              FIXED BLIND                                                      VISBL  566
                  CALL CALBLD(2,0,0,0,0)                                        VISBL  567
               ELSE                                                             VISBL  568
C              ADJUSTABLE BLIND                                                 VISBL  569
                  ANGINP = <ANGSLATMIN> + DELTANG*(JB-2)                        VISBL  570
                  CALL CALBLD(3,0,ANGINP,0,0)                                   VISBL  571
               ENDIF                                                            VISBL  572
               TVDISK(JBB) = TDIRDIR                                            VISBL  573
               EDIRSU(1,2,IHR) = EDIRSU(1,2,IHR) +                              VISBL  574
     1                           DNSOLI*RAYCOS(3)*TDIRDIR                       VISBL  575
         ENDDO                                                                  VISBL  576
82666    CONTINUE                                                               VISBL  577
      ENDIF                                                                     VISBL  578
C                                                                               DCOF   797
C              GLARE FROM SOLAR DISK                                            DCOF   798
C                                                                               DCOF   799
C              POSITION FACTOR FOR SUN (NOTE THAT AZVIEW IS WRT BLDG            DCOF   800
C              Y-AXIS, THSUN WRT BLDG X-AXIS)                                   DCOF   801
      XR=TAN(ABS(0.5*PI-AZVIEW-THSUN)+.001)                                     DCOF   802
      YR=TAN(PHSUN+.001)                                                        DCOF   803
      POSFAC=DPFAC(XR,YR)                                                       DCOF   804
      IF(POSFAC.EQ.0.0.OR.<OMEGAW>.LT.0.000001) GO TO 8010                      DCOF   805
C              INCREMENT WINDOW LUMINANCE.  LUMINANCE OF SOLAR DISK             DCOF   806
C              (FT-L) IS 46000*DNSOL FOR DNSOL IN FC.  SOLID ANGLE              DCOF   807
C              SUBTENDED BY SUN IS .000068 SR.                                  DCOF   808
      XAVWL = 46000. * DNSOLI * SQRT(.000068*POSFAC) *                          VISBL  579
     1           (FLOAT(NWX*NWY)/PI) / <OMEGAW>**.8                             VISBL  580
      AVWLSU(1,1,IHR) = AVWLSU(1,1,IHR) + XAVWL*TVISS                           VISBL  581
      IF(<IBLDF>.GE.2) THEN                                                     VISBL  582
         DO JB = 2,12                                                           VISBL  583
            AVWLSU(1,JB,IHR) = AVWLSU(1,JB,IHR) + XAVWL*TVDISK(JB-1)            VISBL  584
         ENDDO                                                                  VISBL  585
      ENDIF                                                                     VISBL  586
 8010 CONTINUE                                                                  DCOF   811
C              DO CALC WITH SHADES IF LAYER TYPE WITH BLIND OR                  BLIND3  11
C              NON-LAYER TYPEE WITH SHADE                                       BLIND3  12
      IF (<IBLDF>.GE.2.OR.(<IBLDF>.EQ.-1.AND.ISHLOC.NE.0)) GO TO 8805           VISBL  589
      GO TO 8800                                                                VISBL  590
 8805 CONTINUE                                                                  VISBL  591
C                                                                               DCOF   813
C              ----- CASE II -- WINDOW WITH CLOSED SHADES                       DCOF   814
C                                                                               DCOF   815
C              LUMINANCE OF WIN ELEMENT IS SHADE LUMINANCE (TIMES GLASS         DCOF   816
C              TRANSMITTANCE IF SHADE IS ON OUTSIDE)                            DCOF   817
C                                                                               DCOF   818
      TVIS1  = 1.0                                                              DCOF   819
      IF ( ISHLOC.EQ.2 ) TVIS1 = TVISB                                          DCOF   820
      IF(<IBLDF>.GT.0) TVIS1 = 1.0                                              VISBL  592
      DO 8500 I = 1,2                                                           VISBL  593
      IF (I.EQ.2.AND.IHR.GT.1) GO TO 8500                                       VISBL  594
C              FOR FIXED SLATS, SLAT LUMINANCE WLUM..(..,1,..),                 VISBL  595
C              CALCULATED IN DREFLT, IS FOR FIXED SLAT ANGLE.                   VISBL  596
C              FOR ADJUSTABLE SLATS, WLUM..(..,1,..)                            VISBL  597
C              IS FOR THE MINIMUM SLAT ANGLE (FIRST SLAT ANGLE OF SEVEN).       VISBL  598
C              FOR NON-LAYER TYPE WINDOW WLUM IS LUMINANCE FOR UNITY            BLIND3  13
C              SHADE TRANSMITTANCE.                                             VISBL  600
C              XAVWLSK, XAVWLSU IS LUMINANCE OF SKY BETWEEN SLATS.              VISBL  601
C              TVDIRDIR IS THE DIRECT-TO-DIRECT VISIBLE TRANSMITTANCE           VISBL  602
C              OF WINDOW PLUS BLIND.                                            VISBL  603
      AVWLSK(I,2,IHR) = AVWLSK(I,2,IHR) + WLUMSK(I,1,IHR) * TVIS1               VISBL  604
      AVWLSU(I,2,IHR) = AVWLSU(I,2,IHR) + WLUMSU(I,1,IHR) * TVIS1               VISBL  605
      IF(<IBLDF>.GE.2) THEN                                                     VISBL  606
         AVWLSK(I,2,IHR) = AVWLSK(I,2,IHR) + XAVWLSK(I) * TVDIRDIR(1)           VISBL  607
         AVWLSU(I,2,IHR) = AVWLSU(I,2,IHR) + XAVWLSU(I) * TVDIRDIR(1)           VISBL  608
      ENDIF                                                                     VISBL  609
      IF(PHRAY.GT.0.) THEN                                                      VISBL  610
         EDIRSK(I,2,IHR) = EDIRSK(I,2,IHR) +                                    VISBL  611
     1                  WLUMSK(I,1,IHR) * DOMEGA * RAY(3) * TVIS1               VISBL  612
         EDIRSU(I,2,IHR) = EDIRSU(I,2,IHR) +                                    VISBL  613
     1                  WLUMSU(I,1,IHR) * DOMEGA * RAY(3) * TVIS1               VISBL  614
         IF(<IBLDF>.GE.2) THEN                                                  VISBL  615
            EDIRSK(I,2,IHR) = EDIRSK(I,2,IHR) + XEDIRSK(I) * TVDIRDIR(1)        VISBL  616
            EDIRSU(I,2,IHR) = EDIRSU(I,2,IHR) + XEDIRSU(I) * TVDIRDIR(1)        VISBL  617
         ENDIF                                                                  VISBL  618
      ENDIF                                                                     VISBL  619
      IF(<IBLDF>.EQ.3) THEN                                                     VISBL  620
C              ADJUSTABLE SLATS; DO SLAT POSITIONS 2 THROUGH 11                 VISBL  621
         DO JB = 3,12                                                           VISBL  622
               AVWLSK(I,JB,IHR) = AVWLSK(I,JB,IHR) +                            VISBL  623
     1            WLUMSK(I,JB-1,IHR) + XAVWLSK(I) * TVDIRDIR(JB-1)              VISBL  624
               AVWLSU(I,JB,IHR) = AVWLSU(I,JB,IHR) +                            VISBL  625
     1            WLUMSU(I,JB-1,IHR) + XAVWLSU(I) * TVDIRDIR(JB-1)              VISBL  626
               IF(PHRAY.GT.0.) THEN                                             VISBL  627
                  EDIRSK(I,JB,IHR) = EDIRSK(I,JB,IHR) +                         VISBL  628
     1                  WLUMSK(I,JB-1,IHR) * DOMEGA * RAY(3) +                  VISBL  629
     2                  XEDIRSK(I) * TVDIRDIR(JB-1)                             VISBL  630
                  EDIRSU(I,JB,IHR) = EDIRSU(I,JB,IHR) +                         VISBL  631
     1                  WLUMSU(I,JB-1,IHR) * DOMEGA * RAY(3) +                  VISBL  632
     2                  XEDIRSU(I) * TVDIRDIR(JB-1)                             VISBL  633
               ENDIF                                                            VISBL  634
         ENDDO                                                                  VISBL  635
      ENDIF                                                                     VISBL  636
 8500 CONTINUE                                                                  VISBL  637
 8800 CONTINUE                                                                  DCOF   831
 8000 CONTINUE                                                                  DCOF   832
C              ----- END OF SUN AZIMUTH LOOP -----                              DCOF   833
 7000 CONTINUE                                                                  DCOF   834
C              ----- END OF SUN ALTITUDE LOOP -----                             DCOF   835
 6000 CONTINUE                                                                  DCOF   836
C              ----- END OF WINDOW Y-ELEMENT LOOP -----                         DCOF   837
 5000 CONTINUE                                                                  DCOF   838
C              ----- END OF WINDOW X-ELEMENT LOOP -----                         DCOF   839
C                                                                               DCOF   840
C              LOOP AGAIN OVER SUN POSITIONS AND CALC DAYLIGHT FACTORS          DCOF   841
C              BY ADDING DIRECT AND INTER-REFLECTED ILLUM COMPONENTS,           DCOF   842
C              THEN DIVIDING BY EXTERIOR HORIZ ILLUM.  ALSO CALC CORRESP        DCOF   843
C              GLARE FACTORS.  PUT RESULTING FACTORS IN AA ARRAY.               DCOF   844
C                                                                               DCOF   845
C              POINTER TO FACTOR BLOCK FOR THIS WINDOW/REF PT                   DCOF   846
      MFACP  = <MDAYFACP> + ( (IL-1)*NWTOT + (NWD-1) ) * LWDC                   DCOF   847
C                                                                               DCOF   848
C              DAYLIGHT FACTOR VERIFICATION REPORT                              DCOF   849
      IF (IREPRT(1,12).EQ.0) GO TO 4550                                         IREPRT  73
      IWST   = <WIN-SHADE-TYPE> + 1                                             DCOF   851
      IF(IL .eq. 1) THEN                                                        44d5br  24
        ILCT = <LIGHT-CTRL-TYPE1>                                               44d5br  25
        SP   = <LIGHT-SET-POINT1>                                               44d5br  26
        GMax = <MAX-GLARE>                                                      44d5br  27
      ELSE                                                                      44d5br  28
        ILCT = <LIGHT-CTRL-TYPE2>                                               44d5br  29
        SP   = <LIGHT-SET-POINT2>                                               44d5br  30
        GMax = <MAX-GLARE2>                                                     44d5br  31
      ENDIF                                                                     44d5br  32
      IF(<IGTYP>.EQ.-1) THEN                                                    44d5br  33
        SHCF = <GSHACO>                                                         44d5br  34
      ELSE                                                                      44d5br  35
        SHCF = <SHDCOF>                                                         44d5br  36
      ENDIF                                                                     44d5br  37
      OBS = 1.0                                                                 44d5br  38
      IF (IL.EQ.1) Then                                                         44d5br  39
        IF ((<SKY-OBS1-TYPE>.NE.0).AND.(<WINDOW-TYPE>.GT.0)) Then               44d5br  40
          OBS = <SKY-OBS1-FACTOR>                                               44d5br  41
        Else                                                                    44d5br  42
         IF (<WINDOW-TYPE>.EQ.0) Then                                           44d5br  43
          OBS = <VERT-OBS1-FACT>                                                44d5br  44
         Endif                                                                  44d5br  45
        EndIf                                                                   44d5br  46
      Else                                                                      44d5br  47
        IF ((<SKY-OBS2-TYPE>.NE.0).AND.(<WINDOW-TYPE>.GT.0)) Then               44d5br  48
         OBS = <SKY-OBS2-FACTOR>                                                44d5br  49
        Else                                                                    44d5br  50
         IF (<WINDOW-TYPE>.EQ.0) Then                                           44d5br  51
          OBS = <VERT-OBS2-FACT>                                                44d5br  52
         Endif                                                                  44d5br  53
        Endif                                                                   44d5br  54
      Endif                                                                     44d5br  55
      WELL   = 1.0                                                              44d5br  56
      IWELL  = 1                                                                44d5br  57
      IWT  = <WINDOW-TYPE> + 1                                                  44d5br  58
      IF((<LIGHT-WELL>.NE.0).AND.                                               44d5br  59
     $   (<WINDOW-TYPE>.EQ.1 .or. <WINDOW-TYPE>.EQ.2)) THEN                     44d5br  60
        WELL = <WELL-EFFICIENCY>                                                44d5br  61
      ENDIF                                                                     44d5br  62
      IF(<WINDOW-TYPE>.EQ.3) THEN                                               44d5br  63
        IWELL = 2                                                               44d5br  64
        If (<TUBE-EFF-METHOD>.EQ.0) Then                                        44d5br  65
         WELL = <TUBE-EFFICIENCY>                                               44d5br  66
        Else                                                                    44d5br  67
         WELL = <TUBE-DIFF-TRANS>                                               44d5br  68
        Endif                                                                   44d5br  69
      ENDIF                                                                     44d5br  70
C              AZIM OF WINDOW AND GLARE VIEW VECTOR MEAS CLOCKWISE              DCOF   856
C              FROM NORTH, FOR LV-L                                             DCOF   857
      AZVSCS = (BAZIM+AZVIEW) / DTOR                                            DCOF   858
      AZWSCS = (PIOVR2-THWN+BAZIM) / DTOR                                       DCOF   859
      IF (AZVSCS.GE.360.) AZVSCS = AZVSCS - 360.                                DCOF   860
      IF (AZVSCS.LT.0.0.AND.AZVSCS.GE.-360.) AZVSCS = AZVSCS + 360.             DCOF   861
      IF (AZVSCS.LT.-360.) AZVSCS = AZVSCS + 720.                               DCOF   862
      IF (AZWSCS.GE.360.) AZWSCS = AZWSCS - 360.                                DCOF   863
      IF (AZWSCS.LT.0.0.AND.AZWSCS.GE.-360.) AZWSCS = AZWSCS + 360.             DCOF   864
      IF (AZWSCS.LT.-360.) AZWSCS = AZWSCS + 720.                               DCOF   865
C                                                                               DCOF   866
C              INITIALIZATION FOR OUTPUT-UNIT DEPENDENT REPORT                  DCOF   867
C                                                                               DCOF   868
      AREA1(1)=<ZFLRAR>                                                         DCOF   869
      AREA1(2)=<WIAREA>                                                         DCOF   870
      DO 997 II=1,3                                                             DCOF   871
  997 XYZ(II)=R(II,IL)                                                          DCOF   872
      BSP    = SP                                                               DCOF   873
      XYZ(4) = <HWI>                                                            DCOF   874
      XYZ(5) = <WWI>                                                            DCOF   875
C              WINDOW ORIGIN IN SPACE C.S.                                      DCOF   876
      XYZ(6) = (W3(1)-<ZX>)*CAZ - (W3(2)-<ZY>)*SAZ                              DCOF   877
      XYZ(7) = (W3(1)-<ZX>)*SAZ + (W3(2)-<ZY>)*CAZ                              DCOF   878
      XYZ(8) = W3(3) - <ZZ>                                                     DCOF   879
C                                                                               DCOF   880
      UNTSF  = JUNITT(1, 9,2-MTRICR)                                            DCOF   881
      UNTFT  = JUNITT(1,15,2-MTRICR)                                            DCOF   882
      UNTFC  = FC                                                               DCOF   883
      IF (MTRICR.EQ.0)  GOTO 996                                                DCOF   884
      CALL KDIV(AREA1,9,2,0)                                                    DCOF   885
      CALL KDIV(XYZ,15,8,0)                                                     DCOF   886
      CALL KDIV(BSP,70,1,0)                                                     DCOF   887
      UNTFC  = RLX                                                              DCOF   888
  996 CONTINUE                                                                  DCOF   889
C                                                                               DCOF   890
      WRITE(IOUTPT, 990,ERR=99002) ((TITLE(I,J), I=1,10), J=1,2),               -041m    1
     $                             (VERS(I),I=1,2),                             -041m    2
     $            (CLOCK(I),I=1,8),((TITLE(I,J),I=1,10),J=3,5)                  -041m    3
99002 CONTINUE                                                                  DCOF   894
  990 FORMAT(1H1,20A4,' DOE-',2A4,2X,7A4,3HRUN,I3 / 1X,30A4)                    -041m    4
      WRITE(IOUTPT,991) IL,(<IWINM>,II=1,8),(IWDID(I),I=1,5)                    44d5br  71
  991 FORMAT(' REPORT- LV-L Daylighting Factors Ref Pnt ',I1,2X,                44d5br  72
     $        8A4,12X,18H    WEATHER FILE- ,5A4)                                44d5br  73
      WRITE(IOUTPT,992)                                                         44d5br  74
  992 FORMAT(1X,129(1H-) /)                                                     44d5br  75
      WRITE(IOUTPT,993) (<IZNM>,II=1,8),                                        44d5br  76
     $                  (IWTYPE(II,<WINDOW-TYPE>+1),II=1,4),                    44d5br  77
     $                  (<IPRPNMG>,II=1,8),SHCF, <VIS-TRANS>                    44d5br  78
  993 FORMAT(' Parent SPACE: ',8A4,' WINDOW-TYPE: ',4A4,                        44d5br  79
     $                             '  GLASS-TYPE: ',8A4/                        44d5br  80
     $47X,'SHADING-COEF: ',F5.3,14X,'VIS-TRANS: ',                              44d5br  81
     $     F5.3/)                                                               44d5br  82
      WRITE(IOUTPT,995) UNTSF,AREA1(2),UNTFT,XYZ(1),UNTFT,XYZ(2),               44d5br  83
     1 UNTFT,XYZ(3),                                                            44d5br  84
     2 UNTSF,AREA1(1),UNTFT,XYZ(4),UNTFT,XYZ(5),ZF(IL),GMax,                    44d5br  85
     3 RHOAV,AZWSCS,<TEW>,UNTFC,BSP,AZVSCS,                                     44d5br  86
     4 NWX,NWY,(LCTYPE(II,ILCT),II=1,4),                                        44d5br  87
     5 UNTFT,XYZ(6),UNTFT,XYZ(7),UNTFT,XYZ(8),IWELLN(IWELL),WELL,               44d5br  88
     6 (WSTYPE(II,IWST),II=1,4),OBS                                             44d5br  89
  995 FORMAT(1X,'Space Data:',16X,                                              44d5br  90
     1  'Window Data:',3X,5HAREA(,A4,1H),F10.3,8X,'Ref Point: ',                44d5br  91
     $       2HX(,A2,1H),F9.3,4H  Y(,A2,1H),F9.3,4H  Z(,A2,1H),F7.3/            44d5br  92
     2  ' AREA(',A4,1H),F10.1,7X,2HH(,A2,1H),F13.3,4H  W(,A2,1H),               44d5br  93
     $       F10.3,19X,13HZONE-FRACTION,F10.2,1X,9HMAX-GLARE,F11.1/             44d5br  94
     3  ' Ave Reflectance ',F4.2,7X,                                            44d5br  95
     $       9HAZIM(DEG),F9.1,11H  TILT(DEG),F6.1,                              44d5br  96
     $       19X,14HLTG-SET-POINT(,A2,1H),F6.1,1X,12HVIEW-AZ(DEG),F8.1/         44d5br  97
     4  28X,9HDAY-X-DIV,I9,11H  DAY-Y-DIV,I6,                                   44d5br  98
     $       19X,15HLTG-CTRL-TYPE: ,4A4/                                        44d5br  99
     5  28X,2HX(,A2,1H),F9.3,4H  Y(,A2,1H),F9.3,4H  Z(,A2,1H),F7.3,             44d5br 100
     $       10X,A4,'-EFFICIENCY',F8.3,/                                        44d5br 101
     6  28X,16HWIN-SHADE-TYPE: ,4A4,22X,'OBSTRUCTIONS FRAC ',F5.3/)             44d5br 102
      WRITE(IOUTPT,994) UNTFC,UNTFC,UNTFC,UNTFC,UNTFC,UNTFC                     44d5br 103
  994 FORMAT(25X,2(5X,3HEXT),2(5X,3HDIR,4X,4HREFL),2(5X,3HDAY),                 44d5br 104
     1  2(5X,3HWIN),2(3X,5HBACKG)/                                              44d5br 105
     21X,3HSUN,5X,3HWIN,3X,3HSUN,4X,3HSUN,8(5X,3HILL),                          44d5br 106
     3  4(5X,3HLUM)/                                                            44d5br 107
     41X,11HPOS DAY SHD,3X,3HALT,3X,4HAZIM,4X,4H-SKY,4X,4H-SUN,                 44d5br 108
     5  2(4X,4H-SKY),2(4X,4H-SUN),6(5X,3HFAC),3X,5HGLARE/                       44d5br 109
     61X,11HNO. TYP IND,1X,5H(DEG),2X,5H(DEG),6(4X,1H(,A2,1H)),                 44d5br 110
     7  3(4X,4H-SKY,4X,4H-SUN),3X,5HINDEX/ )                                    44d5br 111
 4550 CONTINUE                                                                  44d5br 112
C                                                                               DCOF   932
C              INITIALIZATION DEPENDING ON OUTPUT-UNITS                         DCOF   933
C                                                                               DCOF   934
      DO 4860 II=1,40                                                           DCOF   935
 4860 GWPXXX(II) = GW(II)                                                       DCOF   936
C              2304 BELOW IS 4*(2*12*24)                                        FIX3     3
      DO 4861 II=1,2304                                                         FIX3     4
 4861 EWP1XX(II) = EW(II)                                                       DCOF   938
      IF (MTRICR.EQ.0)  GOTO 4865                                               DCOF   939
      CALL KDIV(GWP,70,40,0)                                                    DCOF   940
      CALL KDIV(EWP1,70,2304,0)                                                 FIX3     5
 4865 CONTINUE                                                                  DCOF   942
      DO 4600 IPHS = 1,NPHS                                                     DCOF   943
      PHSDEG = PHSMIN + FLOAT(IPHS-1)*PHSDEL                                    VISBL  640
      DO 4700 ITHS = 1,NTHS                                                     DCOF   944
      THSDEG = THSMIN + FLOAT(ITHS-1)*THSDEL                                    VISBL  641
C              SOLAR AZIM CLOCKWISE FROM NORTH FOR LV-L                         FIX3     6
      THSLVL = 180. - THSDEG                                                    FIX3     7
      IHR    = ITHS + NTHS * (IPHS-1)                                           DCOF   945
C                                                                               DCOF   946
C              DAY TYPE                                                         DCOF   947
C                                                                               DCOF   948
      DO 4800 I = 1,2                                                           DCOF   949
      IF ( I.EQ.2.AND.IHR.GT.1 ) GO TO 4800                                     DCOF   950
C                                                                               DCOF   951
C              J=1 IS BARE WINDOW                                               FIX3     8
C              J=2 IS NON-BLIND SHADE OR FIRST SLAT ANGLE FOR BLIND             FIX3     9
C              J=3 TO 12 ARE OTHER SLAT ANGLES FOR BLINDS WITH                  FIX3    10
C                  MOVABLE SLATS                                                FIX3    11
C                                                                               DCOF   953
      DO 4850 J = 1,12                                                          VISBL  642
C                                                                               DCOF   959
C              TOTAL ILLUMINANCE FROM THIS WINDOW (FC), DAYLIGHT                DCOF   960
C              FACTORS (FC/FC), WINDOW LUMINANCE FACTOR (FT-L/FC),              DCOF   961
C              AND BACKGROUND LUMINANCE FACTOR (FT-L/FC)                        DCOF   962
C                                                                               DCOF   963
      IF(J.EQ.3.AND.<IBLDF>.LE.2) GO TO 4800                                    VISBL  643
      ETOTSK = EDIRSK(I,J,IHR) + EINTSK(I,J,IHR)                                DCOF   964
      ETOTSU = EDIRSU(I,J,IHR) + EINTSU(I,J,IHR)                                DCOF   965
      DFACSK = ETOTSK / GILSK(I,IPHS)                                           DCOF   966
      DFACSU = ETOTSU / (GILSU(I,IPHS) + 0.0001)                                DCOF   967
      SFACSK = AVWLSK(I,J,IHR) * PI / (FLOAT(NWX*NWY) * GILSK(I,IPHS))          DCOF   968
      SFACSU = AVWLSU(I,J,IHR) * PI / (FLOAT(NWX*NWY) *                         DCOF   969
     1         (GILSU(I,IPHS) + 0.0001))                                        DCOF   970
      IF (<LIGHT-WELL>.EQ.1) Then                                               -044d5 576
        DFACSK = DFACSK * <WELL-EFFICIENCY>                                     -044d5 577
        DFACSU = DFACSU * <WELL-EFFICIENCY>                                     -044d5 578
        SFACSK = SFACSK * <WELL-EFFICIENCY>                                     -044d5 579
        SFACSU = SFACSU * <WELL-EFFICIENCY>                                     -044d5 580
      Endif                                                                     -044d5 581
C     If there are obstructions in the space and this is a skylight, then       -044d5 582
C       apply the appropriate obstruction factor                                -044d5 583
      IF (IL.EQ.1) Then                                                         -044d5 584
        IF ((<SKY-OBS1-TYPE>.NE.0).AND.(<WINDOW-TYPE>.GT.0)) Then               -044d5 585
          DFACSK = DFACSK * <SKY-OBS1-FACTOR>                                   -044d5 586
          DFACSU = DFACSU * <SKY-OBS1-FACTOR>                                   -044d5 587
          SFACSK = SFACSK * <SKY-OBS1-FACTOR>                                   -044d5 588
          SFACSU = SFACSU * <SKY-OBS1-FACTOR>                                   -044d5 589
        Else                                                                    -044d5 590
         IF (<WINDOW-TYPE>.EQ.0) Then                                           -044d5 591
          DFACSK = DFACSK * <VERT-OBS1-FACT>                                    -044d5 592
          DFACSU = DFACSU * <VERT-OBS1-FACT>                                    -044d5 593
          SFACSK = SFACSK * <VERT-OBS1-FACT>                                    -044d5 594
          SFACSU = SFACSU * <VERT-OBS1-FACT>                                    -044d5 595
         Endif                                                                  -044d5 596
        EndIf                                                                   -044d5 597
      Else                                                                      -044d5 598
        IF ((<SKY-OBS2-TYPE>.NE.0).AND.(<WINDOW-TYPE>.GT.0)) Then               -044d5 599
         DFACSK = DFACSK * <SKY-OBS2-FACTOR>                                    -044d5 600
         DFACSU = DFACSU * <SKY-OBS2-FACTOR>                                    -044d5 601
         SFACSK = SFACSK * <SKY-OBS2-FACTOR>                                    -044d5 602
         SFACSU = SFACSU * <SKY-OBS2-FACTOR>                                    -044d5 603
        Else                                                                    -044d5 604
         IF (<WINDOW-TYPE>.EQ.0) Then                                           -044d5 605
          DFACSK = DFACSK * <VERT-OBS2-FACT>                                    -044d5 606
          DFACSU = DFACSU * <VERT-OBS2-FACT>                                    -044d5 607
          SFACSK = SFACSK * <VERT-OBS2-FACT>                                    -044d5 608
          SFACSU = SFACSU * <VERT-OBS2-FACT>                                    -044d5 609
         Endif                                                                  -044d5 610
        Endif                                                                   -044d5 611
      Endif                                                                     -044d5 612
C              LIMIT SFACSU TO PREVENT PACKING OVERFLOW                         DCOF   971
      SFACSU=AMIN1(99.,SFACSU)                                                  DCOF   972
      BFACSK = EINTSK(I,J,IHR) * RHOAV / GILSK(I,IPHS)                          DCOF   973
      BFACSU = EINTSU(I,J,IHR) * RHOAV / (GILSU(I,IPHS) + 0.0001)               DCOF   974
      IF (IREPRT(1,12).EQ.0) GO TO 4560                                         IREPRT  74
C              GLARE INDEX CALC FOR PRINT                                       DCOF   976
      AWLUM  = SFACSK * GILSK(I,IPHS) + SFACSU * GILSU(I,IPHS)                  DCOF   977
      BLUM   = AMAX1( SP*RHOAV, BFACSK * GILSK(I,IPHS) +                        DCOF   978
     1               BFACSU * GILSU(I,IPHS)  )                                  DCOF   979
      GI1    = ( <OMEGAW>**0.8 ) * ( (AWLUM+.000001)**1.6 )                     DCOF   980
      GI2    = BLUM + .07 * AWLUM * <OMEGA>**0.5                                DCOF   981
      GI     = AMAX1( 0. ,10.*ALOG10( (.0001+GI1) / (.0001+GI2) )  )            DCOF   982
C                                                                               DCOF   983
C              PRINT DAYLIGHT FACTOR SUMMARY, LV-L                              DCOF   984
C                                                                               DCOF   985
C              DON'T PRINT SLAT POSITIONS 2 THRU 12;                            FIX3    12
C              THEREFORE, FOR WINDOWS WITH FIXED BLINDS, THE DAYLIGHT           FIX3    13
C              FACTORS AT THE FIXED SLAT POSITION IS SHOWN IN THIS              FIX3    14
C              REPORT; FOR WINDOWS WITH MOVABLE SLATS, ONLY FIRST               FIX3    15
C              OF 11 SLAT POSITIONS IS SHOWN.                                   FIX3    16
      IF(J.GE.3) GO TO 4560                                                     FIX3    17
C                                                                               FIX3    18
      WRITE(IOUTPT,999)  IHR,I,J,PHSDEG,THSLVL,(GWP(I,IPHS,II),II=1,2),         DCOF   986
     1EWP3(I,J,IHR),EWP1(I,J,IHR),EWP4(I,J,IHR),EWP2(I,J,IHR),                  DCOF   987
     2       DFACSK,DFACSU,SFACSK,SFACSU,BFACSK,                                DCOF   988
     3           BFACSU,GI                                                      DCOF   989
  999 FORMAT(1X,I3,2I4,F6.0,F7.0,6F8.1,6F8.4,F8.1)                              DCOF   990
 4560 CONTINUE                                                                  DCOF   991
C                                                                               DCOF   992
C              PUT FACTORS IN AA ARRAY                                          DCOF   993
C                                                                               DCOF   994
      IF (I.EQ.2) GO TO 4851                                                    DCOF   995
      MD1    = (J-1)*NDFC + IHR - 1                                             DCOF   996
      MG1    = ( (J+1)*NDFC + 2 ) + IHR - 1                                     DCOF   997
      MG2    = ( (J+3)*NDFC + 4 ) + IHR - 1                                     DCOF   998
      GO TO 4852                                                                DCOF   999
 4851 CONTINUE                                                                  DCOF  1000
      MD1    = 2*NDFC + J - 1                                                   DCOF  1001
      MG1    = ( 4*NDFC + 2 ) + J - 1                                           DCOF  1002
      MG2    = ( 6*NDFC + 4 ) + J - 1                                           DCOF  1003
 4852 CONTINUE                                                                  DCOF  1004
      IA (MFACP + MD1) = IDPAK (DFACSK,DFACSU,10000.)                           DCOF  1005
      IA (MFACP + MG1) = IDPAK (BFACSK,BFACSU,10000.)                           DCOF  1006
      IA (MFACP + MG2) = IDPAK (SFACSK,SFACSU,1000.)                            DCOF  1007
 4850 CONTINUE                                                                  DCOF  1008
 4800 CONTINUE                                                                  DCOF  1009
 4700 CONTINUE                                                                  DCOF  1010
 4600 CONTINUE                                                                  DCOF  1011
      IF (IREPRT(1,12).NE.0) WRITE(IOUTPT,998)                                  IREPRT  75
  998 FORMAT(' NOTE -- Above factors use VISIBLE TRANSMITTANCE = 1.0',          44d5br 113
     $' for glass and shading device.'                                          44d5br 114
     $' Hourly calculation uses real transmittances.')                          44d5br 115
C                                                                               DCOF  1016
C              ----- END OF WINDOW LOOP -----                                   DCOF  1017
 4000 MWI    = MWI + MWNLEN                                                     DCOF  1018
C              ----- END OF EXT. WALL LOOP -----                                DCOF  1019
 3000 MX     = MX + MXLEN                                                       DCOF  1020
C              ----- END OF REF PT LOOP -----                                   DCOF  1021
 2000 CONTINUE                                                                  DCOF  1022
C              ----- END OF ZONE LOOP -----                                     DCOF  1023
 1000 MZ     = MZ + MZLEN                                                       DCOF  1024
      IF (IREPRT(1,35).EQ.0.OR.IREPRT(1,12).EQ.0) GO TO 1002                    IREPRT  76
      CALL DUMPIT(20HAA WITH DAY FACS    ,AA(1),MLAST)                          DCOF  1026
 1002 CONTINUE                                                                  DCOF  1027
C                                                                               DCOF  1028
      RETURN                                                                    DCOF  1029
 9000 Call MessageBox( NULL,'Errors during daylighting factors calc -'          -051    74
     &  //' ABORTING'//char(0),'DCOF Errors'//char(0), MB_OK                    -051    75
     &  + MB_ICONSTOP+MB_TASKMODAL )                                            -051    76
      IwinReturn = 1                                                            -051    77
      RETURN                                                                    -051    78
      END                                                                       DCOF  1030
      FUNCTION DCOF_FEXCH(WIDTH, LENGTH, DEPTH)                                 -044d5 613
C    returns the form factor for two equal sized parallel rectangles            -044d5 614
C      of dimensions WIDTH and LENGTH separated by a distance DEPTH             -044d5 615
C      WIDTH, LENGTH, DEPTH in consistent units of length                       -044d5 616
      REAL WIDTH, LENGTH, DEPTH                                                 -044d5 617
      REAL X, Y, F1, F2, F3, F4, TMP                                            -044d5 618
      DATA PI/3.141592654/                                                      -044d5 619
C                                                                               -044d5 620
      X = LENGTH / DEPTH                                                        -044d5 621
      Y = WIDTH / DEPTH                                                         -044d5 622
      TMP=((1 + X ** 2) * (1 + Y ** 2) / (1 + X ** 2 + Y ** 2)) ** 0.5          -044d5 623
      F1 = 2 / (PI * X * Y) * LOG(TMP)                                          -044d5 624
      F2 = 2 / (PI*X)*(1+X**2)**0.5*ATAN(y/(1+X**2)**0.5)                       -044d5 625
      F3 = 2 / (PI*Y)*(1+Y** 2) ** 0.5 * ATAN(X/(1 + Y ** 2) ** 0.5)            -044d5 626
      F4 = -2 /(PI*X)*ATAN(Y)-2/(PI * Y)*ATAN(X)                                -044d5 627
      DCOF_FEXCH=F1+F2+F3+F4                                                    -044d5 628
      RETURN                                                                    -044d5 629
      END                                                                       -044d5 630
C                                                                               -044d5 631
      FUNCTION DCOF_CU(Wid, Len, Ht, CeilRefl, WallRefl, FlrRefl)               -044d5 632
C      Returns the Coefficient of Utiization for daylighting calculations       -044d5 633
C      Room Width (Wid), Length (Len) and Height (Ht) in consistent             -044d5 634
C       units of length,                                                        -044d5 635
C      Ceiling, Wall and Floor Visible Reflectance as fraction                  -044d5 636
      REAL  Wid, Len, Ht, CeilRefl, WallRefl, FlrRefl                           -044d5 637
      REAL  PHID, PHIU, DG                                                      -044d5 638
      REAL C0, C1, C2, C3, CU1, CU2, CU3, G, F                                  -044d5 639
      G = 5 * Ht * (Wid + Len) / (Wid * Len)                                    -044d5 640
C     PHID AND PHIU are 1,0 for a Lambertian diffuser                           -044d5 641
      PHID = 1                                                                  -044d5 642
      PHIU = 0                                                                  -044d5 643
      FlrRefl = AMIN1(FlrRefl,0.9)  !limit floor reflectance to avoid DIV by 0  -044d5 644
      IF (G .LT. 0.01) THEN                                                     -044d5 645
         CU = (PHID + CeilRefl * PHIU) / (1 - CeilRefl * FlrRefl)               -044d5 646
      ELSE                                                                      -044d5 647
         F = DCOF_FEXCH(Wid, Len, Ht)                                           -044d5 648
         DG  = F                                                                -044d5 649
         C1  = (1 - WallRefl) * (1 - F ** 2) * G                                -044d5 650
     $       / (2.5 * WallRefl * (1 - F ** 2) + G * F * (1 - WallRefl))         -044d5 651
         C2  = (1 - CeilRefl) * (1 + F) / (1 + CeilRefl * F)                    -044d5 652
         C3  = (1 - FlrRefl) * (1 + F) / (1 + FlrRefl * F)                      -044d5 653
         C0  = C1 + C2 + C3                                                     -044d5 654
         CU1 = 2.5 * WallRefl * C1 * C3 * (1 - DG) * PHID                       -044d5 655
     $       / (G * (1 - WallRefl) * (1 - FlrRefl) * C0)                        -044d5 656
         CU2 = CeilRefl * C2 * C3 * PHIU                                        -044d5 657
     $       / ((1 - CeilRefl) * (1 - FlrRefl) * C0)                            -044d5 658
         CU3 = (1 - FlrRefl * C3 * (C1 + C2) / ((1 - FlrRefl) * C0))            -044d5 659
     $       * DG * PHID / (1 - FlrRefl)                                        -044d5 660
         CU  = CU1 + CU2 + CU3                                                  -044d5 661
      END IF                                                                    -044d5 662
      DCOF_CU = AMIN1(AMAX1(CU,0.0),1.5)                                        -044d5 663
      RETURN                                                                    -044d5 664
      END                                                                       -044d5 665
C                                                                               -044d5 666
      FUNCTION  DCOF_EFFREFL(BaseRefl,WallRefl, Wid, Len, Dep)                  -044d5 667
C      returns the effective reflectance of a rectangular cavity (ceiling or flo-044d5 668
C      Room Width (Wid), Length (Len) and Depth of Cavity (Ht) in consistent uni-044d5 669
C      Floor or Ceiling Reflectance (BaseRefl) and Wall reflectance (WallRefl) a-044d5 670
      REAL BaseRefl,WallRefl,Wid,Len,Dep                                        -044d5 671
      REAL F, AW, AB, NUM1, DEN1                                                -044d5 672
      IF(Dep.EQ.0) THEN                                                         -044d5 673
        DCOF_EFFREFL = BaseRefl                                                 -044d5 674
      ELSE                                                                      -044d5 675
        AW = 2 * (Wid + Len) * Dep                                              -044d5 676
        AB = Wid * Len                                                          -044d5 677
        F = DCOF_FEXCH(Wid, Len, Dep)                                           -044d5 678
        NUM1=BaseRefl * WallRefl * F * (2 * AB / AW * (1 - F) - F)              -044d5 679
     $        + BaseRefl* F ** 2 + WallRefl*AB/AW*(1-F)**2                      -044d5 680
        DEN1=1 - BaseRefl * WallRefl * AB / AW * (1 - F) ** 2                   -044d5 681
     $         - WallRefl * (1 - 2 * AB / AW * (1 - F))                         -044d5 682
        DCOF_EFFREFL = NUM1 / DEN1                                              -044d5 683
      END IF                                                                    -044d5 684
      RETURN                                                                    -044d5 685
      END                                                                       -044d5 686
C                                                                               -044d5 687
      SUBROUTINE  DEXTIL                                                        DEXTIL   2
C                                                                               DEXTIL   3
C              CALLED FROM DAYCLC EACH HOUR THAT SUN IS UP IF THERE IS          DEXTIL   4
C              AT LEAST ONE DAYLIT SPACE.  CALCULATES CURRENT HOUR              DEXTIL   5
C              CLEAR AND OVERCAST ILLUMINANCE ON AN UNOBSTRUCTED                DEXTIL   6
C              HORIZONTAL SURFACE IN LUMENS/FT**2.                              DEXTIL   7
C                                                                               DEXTIL   8
      COMMON  /CONST/  DTOR, PIOVR2, PIOVR4, IBLNK, UNDEF, IUNDEF,              /CONST/  2
     1                 UNFILD, URAD, DEFIFR, DEFCFR, DEFINC, KWBTU              /CONST/  3
      REAL             KWBTU                                                    /CONST/  4
      COMMON  /DAYLT/ NDAYCF,IPHS,IZ,IHIT,MHHIT,IL,RHOAV,ATOT,ARHTOT,           /DAYLT/  2
     1                AR(3),AP(3),ARH(3),ARHP(3),NPH,NTH,WC(3),TMULT,           /DAYLT/  3
     2                TSOLNM,TVISDF,FRUP,ISHLOC,NWTOT,RHOCW,RHOFW,WAREA,        /DAYLT/  4
     3                IMREF,PHSUN,THSUN,PHSUND,THSUND,THSMIN,PHSMIN,            /DAYLT/  5
     4                THSMAX,PHSMAX,THSDEL,PHSDEL,H,NTHS,NPHS,NDFC,LWDC,        /DAYLT/  6
     5                BETA,W,IBZ,IWZ,ZENL,JZD,WBACLU(2,2),PF(7,5),              /DAYLT/  7
     6                VIEWVC(3),GLRNDX(2),WDAYIL(2,2),BACLUM(2),ITF(3),         /DAYLT/  8
     7                RDAYIL(2),RBACLU(2),GLRNEW(2),ETACLD,CDIRLW(24),          /DAYLT/  9
     8                CDIFLW(24),ODIFLW(24),SOLIC(12),TFAC,SPHSUN,              /DAYLT/ 10
     9                CPHSUN,PHWN,THWN,SPHWN,CPHWN,TOTIL(2),ATMMOI(12),         /DAYLT/ 11
     1                ATMTUR(12),XRAN,ALFAD,THRAT,PHRAT,SETPNT(2),              /DAYLT/ 12
     2                IZLSG,IZLSH,IZLSJM,IZLSJY,IZDREP,FPHRP(2),ZFTOT,          /DAYLT/ 13
     3                EINTSK(2,12,24),EINTSU(2,12,24),EDIRSK(2,12,24),          VISBL    2
     4                EDIRSU(2,12,24),FLCWSK(2,12),FLCWSU(2,12),                VISBL    3
     5                FLFWSK(2,12),FLFWSU(2,12),GILSK(2,10),GILSU(2,10),        VISBL    4
     6                WLUMSK(2,11,24),WLUMSU(2,11,24),AVWLSK(2,12,24),          VISBL    5
     7                AVWLSU(2,12,24),CHILSK(24),CHILSU(24),OHILSK(24),         VISBL    6
     8                DFSKHR(2,2),DFSUHR(2,2),SFSKHR(2,2),SFSUHR(2,2),          /DAYLT/ 19
     9                BFSKHR(2,2),BFSUHR(2,2),HISUNF,CHISKF,OHISKF,IZLSM        44d5br   1
      COMMON  /DAYL1/  ATMTU, ATMMO, TAU1                                       /DAYLT/ 21
     1               , TVISB, TH, PH, RAY(3), WNORM(3), TVISBR                  /DAYLT/ 22
      COMMON  /SUND/   ISUNUP, GUNDOG, HORANG, TDECLN, EQTIME, SOLCON,          /SUND/   2
     1                 ATMEXT, SKYDFF, RAYCOS(3), RDN,                          /SUND/   3
     2                 BSUN, DECLN, CD, SD, FSUNUP                              /SUND/   4
      COMMON /TIME  / IDOY, IDOW, IDSTF, ISCHR, ISCDAY, iDSdates(6),            -044e5r  1
     1                IMO, IDAY, IYR, IHR, CLOCK(10), IDSFLG,                   HOLID1   4
     2                MONDSC(12), MONLEN(12), MONSDA(12), IEODMR                /TIME/   4
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
C                                                                               DEXTIL  14
C              CLOUDINESS FACTOR, ETACLD, WHICH IS USED TO INTER-               DEXTIL  15
C              POLATE BETWEEN CLEAR AND OVERCAST CONDITIONS.                    DEXTIL  16
C                                                                               DEXTIL  17
      CR     = CLDAMT / 10.                                                     DEXTIL  18
      ETACLD = 1.0                                                              DEXTIL  19
      IF (CR.GT.0.2) ETACLD = 1.0 - (CR-0.2)*1.25                               DEXTIL  20
C                                                                               DEXTIL  21
C              DIRECT AND DIFFUSE HORIZ SOLAR IRRADIANCE (WATTS/SF)             DEXT1    1
C                                                                               DEXT1    2
      SDIRH  = RDNCC * RAYCOS(3) * KWBTU * 1000.                                DEXT1    3
      SDIFH  = BSCC * KWBTU * 1000.                                             DEXT1    4
C                                                                               DEXT1    5
C              DIFFUSE HORIZONTAL ILL FROM CLEAR AND OVERCAST PARTS             DEXT1    6
C              OF SKY, OBTAINED FROM DIFFUSE HORIZONTAL IRRADIANCE              DEXT1    7
C              AND CALCULATED DIFFUSE LUMENS/WATT                               DEXT1    8
C                                                                               DEXT1    9
      CHISKF = SDIFH * ETACLD * CDIFLW(IHR)                                     DEXT1   10
      OHISKF = SDIFH * (1.-ETACLD) * CDIFLW(IHR)                                DEXT1   11
C                                                                               DEXT1   12
C              DIRECT HORIZONTAL ILLUM (LM/SF) OBTAINED FROM                    DEXT1   13
C              DIRECT HORIZONTAL IRRADIANCE AND CALCULATED                      DEXT1   14
C              DIRECT LUMENS/WATT                                               DEXT1   15
C                                                                               DEXT1   16
C              LUMINOUS EFFICACY OF DIRECT SOLAR RADIATION.                     DEXT1   17
C              USES CALCULATED CURRENT-HOUR ATMOSPHERIC MOISTURE,               DEXT1   18
C              WHEREAS THE BEAM EFFICACY CALCULATED IN DLUMEF USES              DEXT1   19
C              THE USER-INPUT MONTHLY AVERAGE MOISTURE (ATMMOI).                DEXT1   20
C                                                                               DEXT1   21
      BC = AMIN1(0.2,BETA)                                                      DEXT1   22
C              PERCIPITABLE ATMOSPHERIC MOISTURE (CM), FROM                     DEXT1   23
C              CORRELATION TO DEWPOINT TEMPERATURE [WRIGHT,                     DEXT1   24
C              PEREZ AND MICHALSKY, SOLAR ENERGY 42(1989)357]                   DEXT1   25
      WCH = EXP(0.07*(DPT-32.)/1.8 - 0.075)                                     DEXT1   26
C              LUMINOUS EFFICACY, FROM AYDINLI (SEE SUBR. DLUMEF)               DEXT1   27
      SUNFLW = (99.+4.7*WCH-52.4*BC)*(1.-EXP((24.*BC-8.)*PHSUN))                DEXT1   28
      HISUNF = SDIRH * SUNFLW                                                   DEXT1   29
C                                                                               DEXTIL  50
  500 CONTINUE                                                                  DEXTIL  51
      RETURN                                                                    DEXTIL  52
      END                                                                       DEXTIL  53
      SUBROUTINE  DGLARE ( BLUM, GLINDX )                                       DGLARE   2
C                                                                               DGLARE   3
C              CALLED FROM DINTIL.  FINDS GLARE INDEX AT A REFERENCE            DGLARE   4
C              POINT IN A SPACE USING THE CORNELL/BRS LARGE SOURCE              DGLARE   5
C              GLARE FORMULA.  BLUM IS THE BACKGROUND LUMINANCE (FT-L).         DGLARE   6
C                                                                               DGLARE   7
      COMMON  /DAYLT/ NDAYCF,IPHS,IZ,IHIT,MHHIT,IL,RHOAV,ATOT,ARHTOT,           /DAYLT/  2
     1                AR(3),AP(3),ARH(3),ARHP(3),NPH,NTH,WC(3),TMULT,           /DAYLT/  3
     2                TSOLNM,TVISDF,FRUP,ISHLOC,NWTOT,RHOCW,RHOFW,WAREA,        /DAYLT/  4
     3                IMREF,PHSUN,THSUN,PHSUND,THSUND,THSMIN,PHSMIN,            /DAYLT/  5
     4                THSMAX,PHSMAX,THSDEL,PHSDEL,H,NTHS,NPHS,NDFC,LWDC,        /DAYLT/  6
     5                BETA,W,IBZ,IWZ,ZENL,JZD,WBACLU(2,2),PF(7,5),              /DAYLT/  7
     6                VIEWVC(3),GLRNDX(2),WDAYIL(2,2),BACLUM(2),ITF(3),         /DAYLT/  8
     7                RDAYIL(2),RBACLU(2),GLRNEW(2),ETACLD,CDIRLW(24),          /DAYLT/  9
     8                CDIFLW(24),ODIFLW(24),SOLIC(12),TFAC,SPHSUN,              /DAYLT/ 10
     9                CPHSUN,PHWN,THWN,SPHWN,CPHWN,TOTIL(2),ATMMOI(12),         /DAYLT/ 11
     1                ATMTUR(12),XRAN,ALFAD,THRAT,PHRAT,SETPNT(2),              /DAYLT/ 12
     2                IZLSG,IZLSH,IZLSJM,IZLSJY,IZDREP,FPHRP(2),ZFTOT,          /DAYLT/ 13
     3                EINTSK(2,12,24),EINTSU(2,12,24),EDIRSK(2,12,24),          VISBL    2
     4                EDIRSU(2,12,24),FLCWSK(2,12),FLCWSU(2,12),                VISBL    3
     5                FLFWSK(2,12),FLFWSU(2,12),GILSK(2,10),GILSU(2,10),        VISBL    4
     6                WLUMSK(2,11,24),WLUMSU(2,11,24),AVWLSK(2,12,24),          VISBL    5
     7                AVWLSU(2,12,24),CHILSK(24),CHILSU(24),OHILSK(24),         VISBL    6
     8                DFSKHR(2,2),DFSUHR(2,2),SFSKHR(2,2),SFSUHR(2,2),          /DAYLT/ 19
     9                BFSKHR(2,2),BFSUHR(2,2),HISUNF,CHISKF,OHISKF,IZLSM        44d5br   1
      COMMON  /DAYL1/  ATMTU, ATMMO, TAU1                                       /DAYLT/ 21
     1               , TVISB, TH, PH, RAY(3), WNORM(3), TVISBR                  /DAYLT/ 22
      COMMON  /LENS/   MWFLEN, MRLEN, MSHLEN, MWNLEN, MDRLEN, MXLEN,            /LENS/   2
     1                 MULEN, MZLEN, MIWLEN, MFLLEN,                            HRr      5
     2                 LMTB, LLDSOU, MSTLEN, LSTFT, MWLLEN                      BLIND    1
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     BLIND    2
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        FLOOR1   3
      COMMON        // AA(75 000 000)                                           -048ar   1
      INTEGER          IA(75 000 000)                                           -048ar   2
      EQUIVALENCE  (IA(1), AA(1))                                               //       4
C                                                                               DGLARE  12
C              INITIALIZE GLARE CONSTANT                                        DGLARE  13
C                                                                               DGLARE  14
      GTOT   = 0.                                                               DGLARE  15
C                                                                               DGLARE  16
C              LOOP OVER WINDOWS                                                DGLARE  17
C                                                                               DGLARE  18
      NEXT   = <NEXTS>                                                          DGLARE  19
      MX     = <MZEXT>                                                          DGLARE  20
      DO 2000 IEXT = 1,NEXT                                                     DGLARE  21
      NWINS  = <NWIN>                                                           DGLARE  22
      IF (NWINS.EQ.0.OR.<IEWTYPE>.GT.2) GO TO 2000                              DGLARE  23
      MWI    = <MXWIN>                                                          DGLARE  24
      DO 3000 IWIN = 1,NWINS                                                    DGLARE  25
      IF (<WIAREA>.LT.0.1) GO TO 3000                                           DGLARE  26
      ID     = IL                                                               DGLARE  27
      IF ((<SHADING-FLAG>.GE.2) .OR. (<IBLDF>.GE.2) .OR.                        -044d5 688
     $    (<DIFFUSING-GLASS>.EQ.1)) ID = IL + 2                                 -044d5 689
      GTOT1  = ( <SLUMW>**1.6 ) * <OMEGAW>**0.8                                 DGLARE  29
      GTOT2  = BLUM + 0.07 * ( <OMEGA>**0.5 ) * <SLUMW>                         DGLARE  30
      GTOT   = GTOT + GTOT1 / ( GTOT2 + 0.000001 )                              DGLARE  31
 3000 MWI    = MWI + MWNLEN                                                     DGLARE  32
 2000 MX     = MX + MXLEN                                                       DGLARE  33
C                                                                               DGLARE  34
C              GLARE INDEX (ADDING 0.000001 PREVENTS ALOG10 (0))                DGLARE  35
C                                                                               DGLARE  36
      GLINDX = 10. * ALOG10 ( GTOT + 0.000001)                                  DGLARE  37
C              SET GLARE INDEX TO ZERO FOR GTOT LT 1                            DGLARE  38
      GLINDX = AMAX1(0.,GLINDX)                                                 DGLARE  39
      RETURN                                                                    DGLARE  40
      END                                                                       DGLARE  41
      SUBROUTINE  DHILL ( M, CHISK, CHISU, OHISK )                              DHILL    2
C                                                                               DHILL    3
C              CALLED BY DCOF AND DAVAIL.  CALCULATES ILLUMINANCE IN            DHILL    4
C              LUMENS/SF ON UNOBSTRUCTED HORIZONTAL SURFACE FOR CIE             DHILL    5
C              CLEAR AND OVERCAST SKIES.                                        DHILL    6
C                                                                               DHILL    7
      COMMON  /CONST/  DTOR, PIOVR2, PIOVR4, IBLNK, UNDEF, IUNDEF,              /CONST/  2
     1                 UNFILD, URAD, DEFIFR, DEFCFR, DEFINC, KWBTU              /CONST/  3
      REAL             KWBTU                                                    /CONST/  4
      COMMON  /DAYLT/ NDAYCF,IPHS,IZ,IHIT,MHHIT,IL,RHOAV,ATOT,ARHTOT,           /DAYLT/  2
     1                AR(3),AP(3),ARH(3),ARHP(3),NPH,NTH,WC(3),TMULT,           /DAYLT/  3
     2                TSOLNM,TVISDF,FRUP,ISHLOC,NWTOT,RHOCW,RHOFW,WAREA,        /DAYLT/  4
     3                IMREF,PHSUN,THSUN,PHSUND,THSUND,THSMIN,PHSMIN,            /DAYLT/  5
     4                THSMAX,PHSMAX,THSDEL,PHSDEL,H,NTHS,NPHS,NDFC,LWDC,        /DAYLT/  6
     5                BETA,W,IBZ,IWZ,ZENL,JZD,WBACLU(2,2),PF(7,5),              /DAYLT/  7
     6                VIEWVC(3),GLRNDX(2),WDAYIL(2,2),BACLUM(2),ITF(3),         /DAYLT/  8
     7                RDAYIL(2),RBACLU(2),GLRNEW(2),ETACLD,CDIRLW(24),          /DAYLT/  9
     8                CDIFLW(24),ODIFLW(24),SOLIC(12),TFAC,SPHSUN,              /DAYLT/ 10
     9                CPHSUN,PHWN,THWN,SPHWN,CPHWN,TOTIL(2),ATMMOI(12),         /DAYLT/ 11
     1                ATMTUR(12),XRAN,ALFAD,THRAT,PHRAT,SETPNT(2),              /DAYLT/ 12
     2                IZLSG,IZLSH,IZLSJM,IZLSJY,IZDREP,FPHRP(2),ZFTOT,          /DAYLT/ 13
     3                EINTSK(2,12,24),EINTSU(2,12,24),EDIRSK(2,12,24),          VISBL    2
     4                EDIRSU(2,12,24),FLCWSK(2,12),FLCWSU(2,12),                VISBL    3
     5                FLFWSK(2,12),FLFWSU(2,12),GILSK(2,10),GILSU(2,10),        VISBL    4
     6                WLUMSK(2,11,24),WLUMSU(2,11,24),AVWLSK(2,12,24),          VISBL    5
     7                AVWLSU(2,12,24),CHILSK(24),CHILSU(24),OHILSK(24),         VISBL    6
     8                DFSKHR(2,2),DFSUHR(2,2),SFSKHR(2,2),SFSUHR(2,2),          /DAYLT/ 19
     9                BFSKHR(2,2),BFSUHR(2,2),HISUNF,CHISKF,OHISKF,IZLSM        44d5br   1
      COMMON  /DAYL1/  ATMTU, ATMMO, TAU1                                       /DAYLT/ 21
     1               , TVISB, TH, PH, RAY(3), WNORM(3), TVISBR                  /DAYLT/ 22
      DATA PI/3.1415926/                                                        DHILL   10
C                                                                               DHILL   11
C              INTEGRATE TO OBTAIN ILLUMINANCE FROM CLEAR SKY.                  DHILL   12
C              THE CONTRIBUTION IN LUMENS/SF FROM A PATCH OF SKY AT             DHILL   13
C              ALTITUDE PH AND AZIMUTH TH IS L(TH,PH)*SIN(PH)*COS(PH)*          DHILL   14
C              DTH*DPH, WHERE L(TH,PH) IS THE LUMINANCE OF THE PATCH            DHILL   15
C              IN CD/SF.                                                        DHILL   16
C                                                                               DHILL   17
C              SKY INTEGRATION STEP SIZE IN AZIMUTH AND ALTITUDE                DHILL   18
      DTH    = 2.*PI / FLOAT(NTH)                                               DHILL   19
      DPH    = PI / (2.*FLOAT(NPH))                                             DHILL   20
      Z      = 0.                                                               DHILL   21
C                                                                               DHILL   22
C              SKY INTEGRATION                                                  DHILL   23
C                                                                               DHILL   24
      DO 300 IPH = 1,NPH                                                        DHILL   25
      PH     = ( FLOAT(IPH) - 0.5 ) * DPH                                       DHILL   26
      SPHCPH = SIN(PH) * COS(PH)                                                DHILL   27
      DO 200 ITH = 1,NTH                                                        DHILL   28
      TH     = ( FLOAT(ITH) - 0.5 ) * DTH                                       DHILL   29
      Z      = Z + DSKYLU ( 1, TH, PH ) * SPHCPH                                DHILL   30
  200 CONTINUE                                                                  DHILL   31
  300 CONTINUE                                                                  DHILL   32
      CHISK  = Z * DTH * DPH                                                    DHILL   33
C                                                                               DHILL   34
C              DIRECT SOLAR ILLUM                                               DHILL   35
C                                                                               DHILL   36
      CHISU  = SPHSUN * DNSOL (M)                                               DHILL   37
C                                                                               DHILL   38
C              ILLUM FROM OVERCAST SKY.  THERE IS NO DIRECT COMPONENT.          DHILL   39
C              THE INTEGRATION OVER THE SKY CAN BE DONE IN CLOSED FORM,         DHILL   40
C              GIVING (7.*PI/9.)*(ZENITH LUMINANCE).                            DHILL   41
C                                                                               DHILL   42
      OHISK  = 2.44346 * DSKYLU ( 2, 0., PIOVR2 )                               DHILL   43
C              *    OHISK = PI * DSKYLU (2,0.,PIOVR2)                           DHILL   44
      RETURN                                                                    DHILL   45
      END                                                                       DHILL   46
      SUBROUTINE  DHITSH ( R1, RN )                                             DHITSH   2
C                                                                               DHITSH   3
C              CALLED BY DCOF AND DREFLT.                                       DHITSH   4
C              DETERMINES IF A RAY FROM R1 IN THE                               DHITSH   5
C              DIRECTION OF RN INTERSECTS A SHADING SURFACE.  RETURNS           DHITSH   6
C              HIT FLAG, IHIT, AND POINTER TO SHADE BLOCK.                      DHITSH   7
C              IF A SETBACK-SHADE IS HIT, IHIT=1.  IF AN OVERHANG/FIN           DHITSH   8
C              IS HIT, IHIT=2.  IF A GLOBAL SHADE IS HIT FROM BEHIND,           DHITSH   9
C              IHIT=3.  IF A GLOBAL SHADE IS HIT FROM THE FRONT, IHIT=4.        DHITSH  10
C                                                                               DHITSH  11
      COMMON  /DAYLT/ NDAYCF,IPHS,IZ,IHIT,MHHIT,IL,RHOAV,ATOT,ARHTOT,           /DAYLT/  2
     1                AR(3),AP(3),ARH(3),ARHP(3),NPH,NTH,WC(3),TMULT,           /DAYLT/  3
     2                TSOLNM,TVISDF,FRUP,ISHLOC,NWTOT,RHOCW,RHOFW,WAREA,        /DAYLT/  4
     3                IMREF,PHSUN,THSUN,PHSUND,THSUND,THSMIN,PHSMIN,            /DAYLT/  5
     4                THSMAX,PHSMAX,THSDEL,PHSDEL,H,NTHS,NPHS,NDFC,LWDC,        /DAYLT/  6
     5                BETA,W,IBZ,IWZ,ZENL,JZD,WBACLU(2,2),PF(7,5),              /DAYLT/  7
     6                VIEWVC(3),GLRNDX(2),WDAYIL(2,2),BACLUM(2),ITF(3),         /DAYLT/  8
     7                RDAYIL(2),RBACLU(2),GLRNEW(2),ETACLD,CDIRLW(24),          /DAYLT/  9
     8                CDIFLW(24),ODIFLW(24),SOLIC(12),TFAC,SPHSUN,              /DAYLT/ 10
     9                CPHSUN,PHWN,THWN,SPHWN,CPHWN,TOTIL(2),ATMMOI(12),         /DAYLT/ 11
     1                ATMTUR(12),XRAN,ALFAD,THRAT,PHRAT,SETPNT(2),              /DAYLT/ 12
     2                IZLSG,IZLSH,IZLSJM,IZLSJY,IZDREP,FPHRP(2),ZFTOT,          /DAYLT/ 13
     3                EINTSK(2,12,24),EINTSU(2,12,24),EDIRSK(2,12,24),          VISBL    2
     4                EDIRSU(2,12,24),FLCWSK(2,12),FLCWSU(2,12),                VISBL    3
     5                FLFWSK(2,12),FLFWSU(2,12),GILSK(2,10),GILSU(2,10),        VISBL    4
     6                WLUMSK(2,11,24),WLUMSU(2,11,24),AVWLSK(2,12,24),          VISBL    5
     7                AVWLSU(2,12,24),CHILSK(24),CHILSU(24),OHILSK(24),         VISBL    6
     8                DFSKHR(2,2),DFSUHR(2,2),SFSKHR(2,2),SFSUHR(2,2),          /DAYLT/ 19
     9                BFSKHR(2,2),BFSUHR(2,2),HISUNF,CHISKF,OHISKF,IZLSM        44d5br   1
      COMMON  /DAYL1/  ATMTU, ATMMO, TAU1                                       /DAYLT/ 21
     1               , TVISB, TH, PH, RAY(3), WNORM(3), TVISBR                  /DAYLT/ 22
      COMMON  /LENS/   MWFLEN, MRLEN, MSHLEN, MWNLEN, MDRLEN, MXLEN,            /LENS/   2
     1                 MULEN, MZLEN, MIWLEN, MFLLEN,                            HRr      5
     2                 LMTB, LLDSOU, MSTLEN, LSTFT, MWLLEN                      BLIND    1
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     BLIND    2
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        FLOOR1   3
      COMMON  /PTRBGN/ ISCB, IWFB, IWPB, ICONSB, IGTB, IWLB, IGEOB,             HRr      6
     1                 ISHADB, IWINB, IDRB, IEWB, IUGB, ISPB, IIWPB,            HRr      7
     2                 IIWB, IFLB, ISPCDB, IOTHB, ILHB, IZQCMB, ISSHDB,         HRr      8
     3                 IOHFIB, IZLSK, IZLSL, ISTFB                              HRr      9
      COMMON  /SIZE/   LENGTH,NVECT,NSCHED,NWF,NWPAR,NCONS,NGT,NWL,NGEO,        BLIND    5
     1                 NGSHAD, NWIN, NDOOR, NEW, NUG, NSP, NIWP, NIW,           /SIZE/   3
     2                 NFL, NDESDY, NBR, NOTH, NITH, NOPSRF,                    HRr     10
     3                 NSURF, NSSHD, NSHTOT                                     GEO1     1
      COMMON        // AA(75 000 000)                                           -048ar   1
      INTEGER          IA(75 000 000)                                           -048ar   2
      EQUIVALENCE  (IA(1), AA(1))                                               //       4
      DIMENSION R1(3), RN(3), V1(3), V2(3), V3(3)                               DHITSH  18
C                                                                               DHITSH  19
      IHIT   = 0                                                                DHITSH  20
      MHHIT  = 0                                                                DHITSH  21
C                                                                               DHITSH  22
C              LOOP OVER LOCAL SHADING SURFACES PRODUCED BY SETBACK             DHITSH  23
C                                                                               DHITSH  24
      NLOCSH = <NWISHADE>                                                       DHITSH  25
      IF (NLOCSH.EQ.0) GO TO 190                                                DHITSH  26
      MH     = <MWISHADE>                                                       DHITSH  27
      DO 100 ISH = 1,NLOCSH                                                     DHITSH  28
      MG     = <MSGEOM>                                                         DHITSH  29
C              GET SHADE VERTICES                                               DHITSH  30
      DO 150 I = 1,3                                                            DHITSH  31
      V1(I)  = AA(MG+I)                                                         DHITSH  32
      V2(I)  = AA(MG+3+I)                                                       DHITSH  33
  150 V3(I)  = AA(MG+6+I)                                                       DHITSH  34
C              SEE IF RAY INTERSECTS THIS SHADE                                 DHITSH  35
      CALL DPIERC (V1,V2,V3,R1,RN,IP)                                           DHITSH  36
      IF ( IP .EQ. 0 )  GO TO 100                                               DHITSH  37
C              RAY HITS SHADE                                                   DHITSH  38
      IHIT   = 1                                                                DHITSH  39
      MHHIT  = MH                                                               DHITSH  40
      GO TO 400                                                                 DHITSH  41
  100 MH     = MH + MSHLEN                                                      DHIT1    1
  190 CONTINUE                                                                  DHITSH  43
C                                                                               DHITSH  44
C              LOOP OVER LOCAL SHADING SURFACES PRODUCED BY FIN AND             DHITSH  45
C              OVERHANG KEYWORDS                                                DHITSH  46
C                                                                               DHITSH  47
      NFOH   = <NXSHAD>                                                         DHITSH  48
      IF (NFOH.EQ.0) GO TO 235                                                  DHITSH  49
      MH     = <MXSHAD>                                                         DHITSH  50
      DO 200 ISH = 1,NFOH                                                       DHITSH  51
      MG     = <MSGEOM>                                                         DHITSH  52
      DO 210 I=1,3                                                              DHITSH  53
      V1(I)  = AA(MG+I)                                                         DHITSH  54
      V2(I)  = AA(MG+3+I)                                                       DHITSH  55
  210 V3(I)  = AA(MG+6+I)                                                       DHITSH  56
      CALL DPIERC (V1,V2,V3,R1,RN,IP)                                           DHITSH  57
      IF (IP.EQ.0) GO TO 200                                                    DHITSH  58
      IHIT   = 2                                                                DHITSH  59
      MHHIT  = MH                                                               DHITSH  60
      GO TO 400                                                                 DHITSH  61
  200 MH     = MH + MSHLEN                                                      FIX3    19
  235 CONTINUE                                                                  DHITSH  63
C                                                                               DHITSH  64
C              LOOP OVER GLOBAL SHADING SURFACES                                DHITSH  65
C                                                                               DHITSH  66
      IF ((NGSHAD+NSSHD).EQ.0) GO TO 400                                        DHITSH  67
      DO 300 ITYP = 1,2                                                         DHITSH  68
      NSH    = NGSHAD                                                           DHITSH  69
      IF (ITYP.EQ.2) NSH = NSSHD                                                DHITSH  70
      IF (NSH.EQ.0) GO TO 300                                                   DHITSH  71
      MH     = ISHADB                                                           DHITSH  72
      IF (ITYP.EQ.2) MH = ISSHDB                                                DHITSH  73
      DO 240 ISH = 1,NSH                                                        DHITSH  74
      MG     = <MSGEOM>                                                         DHITSH  75
C              PREVENT SELF-SHADE OF WINDOW                                     DHITSH  76
      IF (MG.EQ.<MXGEOM>) GO TO 240                                             DHITSH  77
      DO 250 I =1,3                                                             DHITSH  78
      V1(I)  = AA(MG+I)                                                         DHITSH  79
      V2(I)  = AA(MG+3+I)                                                       DHITSH  80
  250 V3(I)  = AA(MG+6+I)                                                       DHITSH  81
      CALL DPIERC (V1, V2, V3, R1, RN, IP)                                      DHITSH  82
      IF (IP.EQ.0) GO TO 240                                                    DHITSH  83
C                                                                               DHITSH  84
C              RAY HITS SHADE                                                   DHITSH  85
      MHHIT  = MH                                                               DHITSH  86
      IHIT   = 4                                                                DHITSH  87
      IF (IP.EQ.-1) IHIT = 3                                                    DHITSH  88
      GO TO 400                                                                 DHITSH  89
  240 MH     = MH + MSHLEN                                                      DHITSH  90
  300 CONTINUE                                                                  DHITSH  91
  400 CONTINUE                                                                  DHITSH  92
      RETURN                                                                    DHITSH  93
      END                                                                       DHITSH  94
      SUBROUTINE  DINTIL (ZLSG,ZLSJM,ZLSJY,ZLSM)                                44d5br 116
C                                                                               DINTIL   3
C              CALLED BY CALEXT FOR SPACES WITH DAYLIGHTING SPECIFIED.          DINTIL   4
C              DETERMINES HOURLY DAYLIGHT ILLUMINANCE AND GLARE INDEX           DINTIL   5
C              AT EACH REF PT IN A SPACE.                                       DINTIL   6
C                                                                               DINTIL   7
      COMMON  /LOCALD/ STALAT, STALON, ITIMZ, BAZIM, BALTIT,                    /LOCALD/ 2
     1                 SSTALA, CSTALA, TSTALA, SBAZIM, CBAZIM                   /LOCALD/ 3
     2                 ,BXORG, BYORG, SHCOEF, TP1, TP2, WSTP1, WSTP2,           /LOCALD/ 4
     3                 WSHGT,WSHGTL(12),ISREFL,IHOLX                            HOLID1   2
      DIMENSION LOCALD(32)                                                      HOLID1   3
      EQUIVALENCE      (LOCALD(1),STALAT)                                       /LOCALD/ 7
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                         /FILES/  3
     2              , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                    /FILES/  4
     3                IHRREP(3), IHRPAS(2)                                      /FILES/  5
      COMMON /CLCFLG/ IFSTHR,IPRDFL,IGOLGE,NDD,LDSTYP,IFHRP                     DDAY1    1
      COMMON  /CONST/  DTOR, PIOVR2, PIOVR4, IBLNK, UNDEF, IUNDEF,              /CONST/  2
     1                 UNFILD, URAD, DEFIFR, DEFCFR, DEFINC, KWBTU              /CONST/  3
      REAL             KWBTU                                                    /CONST/  4
      COMMON  /DAYLT/ NDAYCF,IPHS,IZ,IHIT,MHHIT,IL,RHOAV,ATOT,ARHTOT,           /DAYLT/  2
     1                AR(3),AP(3),ARH(3),ARHP(3),NPH,NTH,WC(3),TMULT,           /DAYLT/  3
     2                TSOLNM,TVISDF,FRUP,ISHLOC,NWTOT,RHOCW,RHOFW,WAREA,        /DAYLT/  4
     3                IMREF,PHSUN,THSUN,PHSUND,THSUND,THSMIN,PHSMIN,            /DAYLT/  5
     4                THSMAX,PHSMAX,THSDEL,PHSDEL,H,NTHS,NPHS,NDFC,LWDC,        /DAYLT/  6
     5                BETA,W,IBZ,IWZ,ZENL,JZD,WBACLU(2,2),PF(7,5),              /DAYLT/  7
     6                VIEWVC(3),GLRNDX(2),WDAYIL(2,2),BACLUM(2),ITF(3),         /DAYLT/  8
     7                RDAYIL(2),RBACLU(2),GLRNEW(2),ETACLD,CDIRLW(24),          /DAYLT/  9
     8                CDIFLW(24),ODIFLW(24),SOLIC(12),TFAC,SPHSUN,              /DAYLT/ 10
     9                CPHSUN,PHWN,THWN,SPHWN,CPHWN,TOTIL(2),ATMMOI(12),         /DAYLT/ 11
     1                ATMTUR(12),XRAN,ALFAD,THRAT,PHRAT,SETPNT(2),              /DAYLT/ 12
     2                IZLSG,IZLSH,IZLSJM,IZLSJY,IZDREP,FPHRP(2),ZFTOT,          /DAYLT/ 13
     3                EINTSK(2,12,24),EINTSU(2,12,24),EDIRSK(2,12,24),          VISBL    2
     4                EDIRSU(2,12,24),FLCWSK(2,12),FLCWSU(2,12),                VISBL    3
     5                FLFWSK(2,12),FLFWSU(2,12),GILSK(2,10),GILSU(2,10),        VISBL    4
     6                WLUMSK(2,11,24),WLUMSU(2,11,24),AVWLSK(2,12,24),          VISBL    5
     7                AVWLSU(2,12,24),CHILSK(24),CHILSU(24),OHILSK(24),         VISBL    6
     8                DFSKHR(2,2),DFSUHR(2,2),SFSKHR(2,2),SFSUHR(2,2),          /DAYLT/ 19
     9                BFSKHR(2,2),BFSUHR(2,2),HISUNF,CHISKF,OHISKF,IZLSM        44d5br   1
      COMMON  /DAYL1/  ATMTU, ATMMO, TAU1                                       /DAYLT/ 21
     1               , TVISB, TH, PH, RAY(3), WNORM(3), TVISBR                  /DAYLT/ 22
      COMMON  /HRREP / Irb, Ihrp, Lrb, Lhrp, Nrb, Nhrp, IVTLIM(3,50),           HRr      1
     &                 IGRPtr, IBRPtr, IRSch, IRSchT(5),                        HRr      2
     &                 NHRTyp(3), ITBUF(3), ITBUFB(3), ITBUFE(3),               HRr      3
     &                 IHREOF, ICDFLG                                           HRr      4
      COMMON  /LENS/   MWFLEN, MRLEN, MSHLEN, MWNLEN, MDRLEN, MXLEN,            /LENS/   2
     1                 MULEN, MZLEN, MIWLEN, MFLLEN,                            HRr      5
     2                 LMTB, LLDSOU, MSTLEN, LSTFT, MWLLEN                      BLIND    1
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     BLIND    2
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        FLOOR1   3
      COMMON  /PTRBGN/ ISCB, IWFB, IWPB, ICONSB, IGTB, IWLB, IGEOB,             HRr      6
     1                 ISHADB, IWINB, IDRB, IEWB, IUGB, ISPB, IIWPB,            HRr      7
     2                 IIWB, IFLB, ISPCDB, IOTHB, ILHB, IZQCMB, ISSHDB,         HRr      8
     3                 IOHFIB, IZLSK, IZLSL, ISTFB                              HRr      9
      COMMON  /REPORT/ IREPRT(4,37),IPRG,IUNIQV(100),IUNIQS(100),IUNIQL         BIGNAM   1
      COMMON /TIME  / IDOY, IDOW, IDSTF, ISCHR, ISCDAY, iDSdates(6),            -044e5r  1
     1                IMO, IDAY, IYR, IHR, CLOCK(10), IDSFLG,                   HOLID1   4
     2                MONDSC(12), MONLEN(12), MONSDA(12), IEODMR                /TIME/   4
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
      COMMON        // AA(75 000 000)                                           -048ar   1
      INTEGER          IA(75 000 000)                                           -048ar   2
      EQUIVALENCE  (IA(1), AA(1))                                               //       4
C                                                                               DINTIL  21
      DIMENSION ZLSG(2,14,1), ZLSJM(9,2,1),ZLSJY(9,2,1),ZLSM(4,2,25,1)          44d5br 117
C                                                                               DINTIL  23
C                                                                               DINTIL  24
C              FIND CONTRIBUTION OF EACH WINDOW TO THE DAYLIGHT ILLUM           DINTIL  25
C              AND TO THE GLARE NUMERATOR AT EACH REF PT.  USE SHADING-         DINTIL  26
C              FLAGS SET IN CALEXT ON BASIS OF SOLAR GAIN.  SHADING-            DINTIL  27
C              FLAG=0 -- WINDOW HAS NO SHADE ASSIGNED, =1 -- SHADE IS           DINTIL  28
C              OPEN, =2 -- SHADE IS CLOSED.                                     DINTIL  29
C                                                                               DINTIL  30
C**************** space :  DAYL-ILLUM-FN  before function **************        DINTIL  31
      IF( <MZDAYILLUMFN1> .GT. 0 )   CALL FINTL( <MZDAYILLUMFN1>,0.)            DINTIL  32
C***********************************************************************        DINTIL  33
      NREFPT = <NREFP>                                                          DINTIL  34
C              INIT REF POINT ILLUM AND BACKGROUND ILLUM                        DINTIL  35
      DO 100 IL = 1,NREFPT                                                      DINTIL  36
      <DAYLIGHT-ILLUM> = 0.                                                     DINTIL  37
      BACLUM(IL) = 0.                                                           DINTIL  38
  100 CONTINUE                                                                  DINTIL  39
C              GET LIGHTING SET POINTS                                          DINTIL  40
      SETPNT(1) = <LIGHT-SET-POINT1>                                            DINTIL  41
      IF (NREFPT.EQ.2) SETPNT(2) = <LIGHT-SET-POINT2>                           DINTIL  42
C              IF AZ (THSUND) OR ALT (PHSUND) OF SUN THIS HOUR (CALC IN         DINTIL  43
C              DAYCLC) IS OUTSIDE OF BOUNDS USED IN DCOF, SET EQUAL TO          DINTIL  44
C              BOUNDARY VALUE.                                                  DINTIL  45
C                                                                               DINTIL  46
C              DAYL FACTORS ARE CALCULATED AT SUN AZIM (FROM SOUTH):            DINTIL  47
C              -110 -55   0  55 110 (NORTHERN HEMISPHERE)                       DINTIL  48
C                70 125 180 235 290 (SOUTHERN HEMISPHERE)                       DINTIL  49
C                                                                               DINTIL  50
C              FOR SOUTHERN HEMISPHERE CONSTRAIN THSUND TO 0 TO 360             DINTIL  51
C              SO AS TO INCLUDE VALUES AT WHICH DAYL FAC CALCULATED             DINTIL  52
C              (THSUND WAS CONSTRAINED TO -180 TO 180 IN DAYCLC)                DINTIL  53
C                                                                               DINTIL  54
      IF(STALAT.LT.0.0.AND.THSUND.LT.0.0) THSUND = THSUND + 360.                DINTIL  55
      IF (THSUND.LT.THSMIN) THSUND = THSMIN                                     DINTIL  56
      IF (THSUND.GT.THSMAX) THSUND = THSMAX                                     DINTIL  57
      IF (PHSUND.LT.PHSMIN) PHSUND = PHSMIN                                     DINTIL  58
      IF (PHSUND.GT.PHSMAX) PHSUND = PHSMAX                                     DINTIL  59
C              AZIM AND ALT INDICES OF BASE POINT                               DINTIL  60
      THSN   = ( THSUND - THSMIN ) / THSDEL                                     DINTIL  61
      PHSN   = ( PHSUND - PHSMIN ) / PHSDEL                                     DINTIL  62
      ITHS   = INT ( THSN ) + 1                                                 DINTIL  63
      IPHS   = INT ( PHSN ) + 1                                                 DINTIL  64
      IHRS   = ITHS + NTHS * (IPHS - 1)                                         DINTIL  65
C              DISPLACEMENT RATIOS RELATIVE TO BASE POINT                       DINTIL  66
      THRAT  = THSN - FLOAT(ITHS-1)                                             DINTIL  67
      PHRAT  = PHSN - FLOAT(IPHS-1)                                             DINTIL  68
      IF(IREPRT(1,35).ne.0 .and. IREPRT(1,1).ne.0 .and. IRSCH.ne.0              IREPRT  77
     $   .and. <MZBUF>.ne. 0 )  THEN                                            DINTIL  70
        write(ioutpt,9001) imo,iday,ihr,mz,thsn,phsn,iths,iphs,ihrs,            DINTIL  71
     $      thrat,phrat,nths,                                                   DINTIL  72
     $      thsmin,thsmax,phsmin,phsmax,                                        DINTIL  73
     $      thsund,phsund,thsdel,phsdel                                         DINTIL  74
 9001 format(//'imo, iday, ihr, mz ',4I5/                                       DINTIL  75
     $       ' thsn,phsn,iths,iphs,ihrs    ',2f13.6,3I13/                       DINTIL  76
     $       ' thrat,phrat,nths            ',2f13.6, I13/                       DINTIL  77
     $       ' thsmin,thsmax,phsmin,phsmax ',4f13.6/                            DINTIL  78
     $       ' thsund,phsund,thsdel,phsdel ',4f13.6)                            DINTIL  79
      ENDIF                                                                     DINTIL  80
      NEXT   = <NEXTS>                                                          DINTIL  81
      MX     = <MZEXT>                                                          DINTIL  82
C              INITIALIZE WINDOW COUNTER                                        DINTIL  83
      NWD    = 0                                                                DINTIL  84
C              FIND TOTAL NO. OF WINDOWS WITH AREA GT 0.1 SF                    DINTIL  85
      NWTOT  = 0                                                                DINTIL  86
      DO 200 IEXT = 1,NEXT                                                      DINTIL  87
      NWINS  = <NWIN>                                                           DINTIL  88
      IF (NWINS.EQ.0) GO TO 200                                                 DINTIL  89
      MWI    = <MXWIN>                                                          DINTIL  90
      DO 220 IWIN = 1,NWINS                                                     DINTIL  91
      IF (<HWI>*<WWI>.GE.0.1) NWTOT = NWTOT + 1                                 DINTIL  92
  220 MWI    = MWI + MWNLEN                                                     DINTIL  93
  200 MX     = MX + MXLEN                                                       DINTIL  94
      MX     = <MZEXT>                                                          DINTIL  95
C              LOOP OVER EXTERIOR WALLS                                         DINTIL  96
      DO 1000 IEXT = 1,NEXT                                                     DINTIL  97
      NWINS  = <NWIN>                                                           DINTIL  98
C              SKIP IF NO WINDOWS OR IF TROMBE WALL                             DINTIL  99
      IF (NWINS.EQ.0.OR.<IEWTYPE>.GT.2) GO TO 1000                              DINTIL 100
      MWI    = <MXWIN>                                                          DINTIL 101
C                                                                               DINTIL 102
C              LOOP OVER WINDOWS IN THIS WALL                                   DINTIL 103
C                                                                               DINTIL 104
      IFNCFL = 0                                                                DINTIL 105
      DO 2000 IWIN = 1,NWINS                                                    DINTIL 106
      IF (<HWI>*<WWI>.LT.0.1) GO TO 2000                                        DINTIL 107
      MR = <MWIPRP>                                                             DINTIL 108
      NWD    = NWD + 1                                                          DINTIL 109
      IF( <MWISPFN> .EQ. 0 )  GOTO  330                                         DINTIL 110
          IF( IFNCFL .EQ. 0 )   CALL  SUN3                                      DINTIL 111
          IFNCFL = 1                                                            DINTIL 112
C**************** window: WINDOW-SPEC-FN with FNTYPE=4 *****************        DINTIL 113
           CALL  FINTL( <MWISPFN>, 4. )                                         DINTIL 114
C***********************************************************************        DINTIL 115
330   CONTINUE                                                                  DINTIL 116
C              SET SHADING-FLAG FOR WINDOWS WITH FIXED SHADE                    DINTIL 117
      IF (<WIN-SHADE-TYPE>.EQ.3.OR.<WIN-SHADE-TYPE>.EQ.4)                       DINTIL 118
     1    <SHADING-FLAG> = 2                                                    DINTIL 119
C              WIN SHADE TRANSMITTANCE                                          DINTIL 120
      TAU    = 1.                                                               DINTIL 121
      IF (<SHADING-FLAG>.EQ.0.OR.<VIS-TRANS-SCH>.EQ.0) GO TO 2100               DINTIL 122
      MS     = <@VIS-TRANS-SCH> + ISCHR                                         DINTIL 123
      TAU    = AA(MS)                                                           DINTIL 124
 2100 CONTINUE                                                                  DINTIL 125
C                                                                               DINTIL 126
C              LOOP OVER REF PTS                                                DINTIL 127
C                                                                               DINTIL 128
      DO 3000 IL = 1,NREFPT                                                     DINTIL 129
C                                                                               DINTIL 130
C              POINTER TO DCOF FACTORS FOR THIS WIN/REF PT COMBINATION          DINTIL 131
C                                                                               DINTIL 132
      MFACP  = <MDAYFACP> + ((IL-1)*NWTOT + (NWD-1)) * LWDC                     DINTIL 133
      IF(IREPRT(1,35).ne.0 .and. IREPRT(1,1).ne.0 .and. IRSCH.ne.0              IREPRT  78
     $   .and. <MZBUF>.ne. 0 )  THEN                                            DINTIL 135
        write(ioutpt,9002) MX,MWI,MFACP,TAU                                     DINTIL 136
 9002 format('0MX,MWI,MFACP,TAU ',3I5,f13.6)                                    DINTIL 137
      ENDIF                                                                     DINTIL 138
C                                                                               DINTIL 139
C              LOOP OVER WITHOUT/WITH WINDOW SHADE CONDITION                    DINTIL 140
C                                                                               DINTIL 141
C              ===BARE WINDOW===                                                VISBL  645
      IS = 1                                                                    VISBL  646
C              OVERCAST SKY                                                     VISBL  647
      I = 2                                                                     VISBL  648
C                                                                               VISBL  649
      MD1    = MFACP + 2*NDFC + IS - 1                                          VISBL  650
      MG1    = MFACP + 4*NDFC + 2 + (IS - 1)                                    VISBL  651
      MG2    = MFACP + 6*NDFC + 4 + (IS-1)                                      VISBL  652
      CALL DUNPAK (IA(MD1),10000.,DFSKHR(I,IS),DFSUHR(I,IS))                    VISBL  653
      CALL DUNPAK (IA(MG1),10000.,BFSKHR(I,IS),BFSUHR(I,IS))                    VISBL  654
      CALL DUNPAK (IA(MG2),1000.,SFSKHR(I,IS),SFSUHR(I,IS))                     VISBL  655
C                                                                               VISBL  656
C              CLEAR SKY.  INTERPOLATE TO GET DAYLIGHT AND GLARE FACTORS        VISBL  657
C              FOR CURRENT-HOUR SUN POSITION.                                   VISBL  658
      I = 1                                                                     VISBL  659
C              TO SAVE TIME, AVOID UNPACKING/INTERPOLATION OF CLEAR             VISBL  660
C              SKY FACTORS FOR SKIES WITH LOW DIR SOLAR EXT ILLUM               VISBL  661
C              EXTERIOR ILLUMINANCE                                             VISBL  662
      IF (CLDAMT.GE.9.9.AND.HISUNF.LE.20.0) THEN                                VISBL  663
         DFSKHR(I,IS) = 0.                                                      VISBL  664
         DFSUHR(I,IS) = 0.                                                      VISBL  665
         BFSKHR(I,IS) = 0.                                                      VISBL  666
         BFSUHR(I,IS) = 0.                                                      VISBL  667
         SFSKHR(I,IS) = 0.                                                      VISBL  668
         SFSUHR(I,IS) = 0.                                                      VISBL  669
      ELSE                                                                      VISBL  670
C              UNPACK AND INTERPOLATE CLEAR SKY FACTORS                         VISBL  671
         MD1    = MFACP + (IS-1)*NDFC + IHRS - 1                                VISBL  672
         MG1    = MFACP + (IS+1)*NDFC + 2 + IHRS - 1                            VISBL  673
         MG2    = MFACP + (IS+3)*NDFC + 4 + IHRS - 1                            VISBL  674
         CALL DINTRP(MD1,NTHS,10000.,DFSKHR(I,IS),DFSUHR(I,IS))                 VISBL  675
         CALL DINTRP(MG1,NTHS,10000.,BFSKHR(I,IS),BFSUHR(I,IS))                 VISBL  676
         CALL DINTRP(MG2,NTHS,1000.,SFSKHR(I,IS),SFSUHR(I,IS))                  VISBL  677
      ENDIF                                                                     VISBL  678
C              ===SHADED WINDOW====                                             VISBL  679
      IS = 2                                                                    VISBL  680
C              OVERCAST SKY                                                     VISBL  681
      I = 2                                                                     VISBL  682
      IF((<SHADING-FLAG>.NE.0) .OR. (<IBLDF>.GE.2) .OR.                         -044d5 690
     $   (<DIFFUSING-GLASS>.EQ.1)) THEN                                         -044d5 691
      MD1    = MFACP + 2*NDFC + IS - 1                                          VISBL  684
      MG1    = MFACP + 4*NDFC + 2 + (IS - 1)                                    VISBL  685
      MG2    = MFACP + 6*NDFC + 4 + (IS-1)                                      VISBL  686
      CALL DUNPAK (IA(MD1),10000.,DFSKHR(I,IS),DFSUHR(I,IS))                    VISBL  687
      CALL DUNPAK (IA(MG1),10000.,BFSKHR(I,IS),BFSUHR(I,IS))                    VISBL  688
      CALL DUNPAK (IA(MG2),1000.,SFSKHR(I,IS),SFSUHR(I,IS))                     VISBL  689
C              IF WINDOW HAS A SLAT-ANGLE ADJUSTABLE LAYER, INTERPOLATE         VISBL  690
C              IN SLAT ANGLE                                                    VISBL  691
      IF(<IBLDF>.EQ.3) THEN                                                     VISBL  692
C              FIND IS1, IS2 SUCH THAT CURRENT-HOUR SLAT ANGLE IS BETWEEN       VISBL  693
C              IS1 ANGLE AND IS2 ANGLE                                          VISBL  694
         DELTANG = (<ANGSLATMAX> - <ANGSLATMIN>)/10.                            VISBL  695
         IS1 = 2                                                                VISBL  696
         IS2 = 3                                                                VISBL  697
         DO ISN = 2,11                                                          VISBL  698
            ANGLE1 = <ANGSLATMIN> + DELTANG*(ISN-2)                             VISBL  699
            IF(<ANGSLATADJ>.LT.(ANGLE1+DELTANG+0.0001)) THEN                    VISBL  700
               IS1 = ISN                                                        VISBL  701
               IS2 = ISN + 1                                                    VISBL  702
               GO TO 3252                                                       VISBL  703
            ENDIF                                                               VISBL  704
         ENDDO                                                                  VISBL  705
         ANGLE1 = <ANGSLATMIN>                                                  VISBL  706
 3252    CONTINUE                                                               VISBL  707
         MD1    = MFACP + 2*NDFC + IS1 - 1                                      VISBL  708
         MG1    = MFACP + 4*NDFC + 2 + (IS1 - 1)                                VISBL  709
         MG2    = MFACP + 6*NDFC + 4 + (IS1 - 1)                                VISBL  710
         CALL DUNPAK (IA(MD1),10000.,DFSKHR1,DFSUHR1)                           VISBL  711
         CALL DUNPAK (IA(MG1),10000.,BFSKHR1,BFSUHR1)                           VISBL  712
         CALL DUNPAK (IA(MG2),1000., SFSKHR1,SFSUHR1)                           VISBL  713
         MD1    = MFACP + 2*NDFC + IS2 - 1                                      VISBL  714
         MG1    = MFACP + 4*NDFC + 2 + (IS2 - 1)                                VISBL  715
         MG2    = MFACP + 6*NDFC + 4 + (IS2 - 1)                                VISBL  716
         CALL DUNPAK (IA(MD1),10000.,DFSKHR2,DFSUHR2)                           VISBL  717
         CALL DUNPAK (IA(MG1),10000.,BFSKHR2,BFSUHR2)                           VISBL  718
         CALL DUNPAK (IA(MG2),1000., SFSKHR2,SFSUHR2)                           VISBL  719
C              INTERPOLATE AND PUT RESULT IN IS=2 LOCATION                      VISBL  720
         F1 = (ANGLE1+DELTANG-<ANGSLATADJ>)/(DELTANG + 0.0001)                  VISBL  721
         F2 = 1. - F1                                                           VISBL  722
         DFSKHR(I,2) = DFSKHR1*F1 + DFSKHR2*F2                                  VISBL  723
         BFSKHR(I,2) = BFSKHR1*F1 + BFSKHR2*F2                                  VISBL  724
         SFSKHR(I,2) = SFSKHR1*F1 + SFSKHR2*F2                                  VISBL  725
         DFSUHR(I,2) = DFSUHR1*F1 + DFSUHR2*F2                                  VISBL  726
         BFSUHR(I,2) = BFSUHR1*F1 + BFSUHR2*F2                                  VISBL  727
         SFSUHR(I,2) = SFSUHR1*F1 + SFSUHR2*F2                                  VISBL  728
      ENDIF                                                                     VISBL  729
      ENDIF                                                                     VISBL  730
C              CLEAR SKY                                                        VISBL  731
      I = 1                                                                     VISBL  732
C              TO SAVE TIME, AVOID UNPACKING/INTERPOLATION OF CLEAR             VISBL  733
C              SKY FACTORS FOR SKIES WITH LOW DIR SOLAR EXT ILLUM               VISBL  734
      IF (CLDAMT.GE.9.9.AND.HISUNF.LE.20.0) THEN                                VISBL  735
         DFSKHR(I,IS) = 0.                                                      VISBL  736
         DFSUHR(I,IS) = 0.                                                      VISBL  737
         BFSKHR(I,IS) = 0.                                                      VISBL  738
         BFSUHR(I,IS) = 0.                                                      VISBL  739
         SFSKHR(I,IS) = 0.                                                      VISBL  740
         SFSUHR(I,IS) = 0.                                                      VISBL  741
      ELSE                                                                      VISBL  742
C              UNPACK AND INTERPOLATE CLEAR SKY FACTORS                         VISBL  743
         MD1    = MFACP + (IS-1)*NDFC + IHRS - 1                                VISBL  744
         MG1    = MFACP + (IS+1)*NDFC + 2 + IHRS - 1                            VISBL  745
         MG2    = MFACP + (IS+3)*NDFC + 4 + IHRS - 1                            VISBL  746
         CALL DINTRP(MD1,NTHS,10000.,DFSKHR(I,IS),DFSUHR(I,IS))                 VISBL  747
         CALL DINTRP(MG1,NTHS,10000.,BFSKHR(I,IS),BFSUHR(I,IS))                 VISBL  748
         CALL DINTRP(MG2,NTHS,1000.,SFSKHR(I,IS),SFSUHR(I,IS))                  VISBL  749
C              IF WINDOW HAS A SLAT-ANGLE ADJUSTABLE LAYER, INTERPOLATE         VISBL  750
C              IN SLAT ANGLE                                                    VISBL  751
      IF(<IBLDF>.EQ.3) THEN                                                     VISBL  752
         MD1    = MFACP + (IS1-1)*NDFC + IHRS - 1                               VISBL  753
         MG1    = MFACP + (IS1+1)*NDFC + 2 + IHRS - 1                           VISBL  754
         MG2    = MFACP + (IS1+3)*NDFC + 4 + IHRS - 1                           VISBL  755
         CALL DINTRP(MD1,NTHS,10000.,DFSKHR1,DFSUHR1)                           VISBL  756
         CALL DINTRP(MG1,NTHS,10000.,BFSKHR1,BFSUHR1)                           VISBL  757
         CALL DINTRP(MG2,NTHS,1000., SFSKHR1,SFSUHR1)                           VISBL  758
         MD1    = MFACP + (IS2-1)*NDFC + IHRS - 1                               VISBL  759
         MG1    = MFACP + (IS2+1)*NDFC + 2 + IHRS - 1                           VISBL  760
         MG2    = MFACP + (IS2+3)*NDFC + 4 + IHRS - 1                           VISBL  761
         CALL DINTRP(MD1,NTHS,10000.,DFSKHR2,DFSUHR2)                           VISBL  762
         CALL DINTRP(MG1,NTHS,10000.,BFSKHR2,BFSUHR2)                           VISBL  763
         CALL DINTRP(MG2,NTHS,1000., SFSKHR2,SFSUHR2)                           VISBL  764
C              INTERPOLATE AND PUT RESULT IN IS=2 LOCATION                      VISBL  765
         DFSKHR(I,2) = DFSKHR1*F1 + DFSKHR2*F2                                  VISBL  766
         BFSKHR(I,2) = BFSKHR1*F1 + BFSKHR2*F2                                  VISBL  767
         SFSKHR(I,2) = SFSKHR1*F1 + SFSKHR2*F2                                  VISBL  768
         DFSUHR(I,2) = DFSUHR1*F1 + DFSUHR2*F2                                  VISBL  769
         BFSUHR(I,2) = BFSUHR1*F1 + BFSUHR2*F2                                  VISBL  770
         SFSUHR(I,2) = SFSUHR1*F1 + SFSUHR2*F2                                  VISBL  771
      ENDIF                                                                     VISBL  772
      ENDIF                                                                     VISBL  773
C                                                                               DINTIL 217
C              GET ILLUMINANCE AT REF POINT FROM BARE AND SHADED                VISBL  774
C              WINDOW                                                           VISBL  775
C                                                                               VISBL  776
      DO IS = 1,2                                                               VISBL  777
      ID     = IL + 2*(IS-1)                                                    VISBL  778
      TAU1   = 1.                                                               VISBL  779
      IF (IS.EQ.2.AND.<IBLDF>.LE.1) TAU1 = TAU                                  VISBL  780
C     Reduce window transmittance for daylight calcs due to                     -044d5 692
C       DIRT-DEPREC-SCH if specified:                                           -044d5 693
        IF (IA(MWI+133) .ne. 0)                                                 -050x   16
     &    TAU1 = TAU1 * AA(<@DIRT-DEPREC-SCH> + ISCHR)                          -044d5 695
C                                                                               VISBL  781
C              DAYLIGHT FACTORS FOR REGULAR WINDOWS AND                         VISBL  782
C              LAYER-TYPE WINDOWS WITHOUT BLINDS WERE CALCULATED                BLIND3  14
C              FOR VISIBLE TRANSMITTANCE SCALED SUCH THAT                       BLIND3  15
C              VALUE WAS 1.0 AT NORMAL INCIDENCE.                               BLIND3  16
C              DAYLIGHT FACTORS FOR LAYER-TYPE WINDOWS WITH BLINDS              BLIND3  17
C              WERE CALCULATED FOR ACTUAL VISIBLE TRANSMITTANCE.                BLIND3  18
C              IN THE FOLLOWING:                                                BLIND3  19
C              MULTIPLY BY EXTERIOR HORIZONTAL ILLUMINANCE,                     BLIND3  20
C              BY GLASS NORMAL TRANSMITTANCE (IF REGULAR WINDOW OR              BLIND3  21
C              NON-LAYER TYPE WINDOW W/O BLINDS), AND BY SHADE                  BLIND3  22
C              TRANSMITTANCE (=1 IF LAYER-TYPE WINDOW OR NO SHADE)              BLIND3  23
C                                                                               VISBL  793
      VTN = <VIS-TRANS-SEL>                                                     VISBL  794
      IF(IS.EQ.2.AND.<IBLDF>.GE.2) VTN = 1.                                     VISBL  795
      <ILLUMW> = VTN*TAU1*( DFSUHR(1,IS)*HISUNF                                 040a     1
     1           + DFSKHR(1,IS)*CHISKF + DFSKHR(2,IS)*OHISKF )                  VISBL  797
      <BLUMW> =  VTN*TAU1*( BFSUHR(1,IS)*HISUNF                                 VISBL  798
     1           + BFSKHR(1,IS)*CHISKF + BFSKHR(2,IS)*OHISKF )                  VISBL  799
      <SLUMW> =  VTN*TAU1*( SFSUHR(1,IS)*HISUNF                                 VISBL  800
     1           + SFSKHR(1,IS)*CHISKF + SFSKHR(2,IS)*OHISKF )                  VISBL  801
C              ENTER ILLUMINANCE IN WINDOW HR REP BUFFER                        DINTIL 243
      IWNBFP = <MWIBUF>                                                         DINTIL 244
      IF (IRSCH.EQ.0.OR.IWNBFP.EQ.0) GO TO 3200                                 DINTIL 245
      IPTR   = IWNBFP - 1                                                       DINTIL 246
      AA(IPTR+23+ID) = <ILLUMW>                                                 DINTIL 247
 3200 CONTINUE                                                                  DINTIL 248
      ENDDO                                                                     VISBL  802
 3000 CONTINUE                                                                  DINTIL 249
 2000 MWI    = MWI + MWNLEN                                                     DINTIL 250
 1000 MX     = MX + MXLEN                                                       DINTIL 251
C                                                                               DINTIL 252
C              SECOND LOOP OVER WINDOWS.  FIND TOTAL DAYLIGHT ILLUM             DINTIL 253
C              AND BACKGROUND LUM FOR EACH REF PT FROM ALL WINDOWS IN           DINTIL 254
C              THE SPACE.  USE SHADING-FLAGS SET IN CALEXT.                     DINTIL 255
C              INITIALIZE FLAG THAT ONE OR MORE WINDOWS HAS SWITCHING           DINTIL 256
C              CONTROL FOR ADJUSTING VIS TRANS TO JUST MEET DAYLTG SETPT        DINTIL 257
      ISWFLG = 0                                                                DINTIL 258
C                                                                               DINTIL 259
      MX     = <MZEXT>                                                          DINTIL 260
      DO 11000 IEXT = 1,NEXT                                                    DINTIL 261
      NWINS  = <NWIN>                                                           DINTIL 262
      IF (NWINS.EQ.0.OR.<IEWTYPE>.GT.2) GO TO 11000                             DINTIL 263
      MWI    = <MXWIN>                                                          DINTIL 264
      DO 12000 IWIN = 1,NWINS                                                   DINTIL 265
      IF (<HWI>*<WWI>.LT.0.1) GO TO 12000                                       DINTIL 266
      IF(<SWITCH-CONTROL>.NE.8) GO TO 13400                                     DINTIL 267
      IF(<SWITCH-SCH>.EQ.0) THEN                                                DINTIL 268
         ISWFLG=1                                                               DINTIL 269
         GO TO 13400                                                            DINTIL 270
      ELSE                                                                      DINTIL 271
         IF(AA(<@SWITCH-SCH>+ISCHR).GT.0.0) ISWFLG=1                            DINTIL 272
      ENDIF                                                                     DINTIL 273
13400 CONTINUE                                                                  DINTIL 274
C              ABOVE ASSUMES SCHED ALWAYS ON IF NOT INPUT                       DINTIL 275
C              WINDOW SHADE TRANSMITTANCE                                       DINTIL 276
      TAU    = 1.                                                               DINTIL 277
      IF (<SHADING-FLAG>.EQ.0.OR.<VIS-TRANS-SCH>.EQ.0) GO TO 13500              DINTIL 278
      MS     = <@VIS-TRANS-SCH> + ISCHR                                         DINTIL 279
      TAU    = AA(MS)                                                           DINTIL 280
13500 CONTINUE                                                                  DINTIL 281
      DO 13000 IL = 1,NREFPT                                                    DINTIL 282
C            DETERMINE IF ILLUMINANCE CONTRIBUTION IS FROM BARE                 VISBL  803
C            OR SHADED WINDOW. STRUCTURE IS CONSIDERED SHADED                   VISBL  804
C            IF 98% OR MORE OF WINDOW IS COVERED WITH A BLIND.                  VISBL  805
      ID = IL                                                                   VISBL  806
      IF ((<SHADING-FLAG>.EQ.2) .OR.                                            -044d5 696
     $    (<SHADING-FLAG>.EQ.3.AND.TAU.LT.1.0) .OR.                             -044d5 697
     $    (<DIFFUSING-GLASS>.EQ.1) .OR.                                         -044d5 698
     $    (<IBLDF>.GE.2)) ID = IL + 2                                           -044d5 699
      <DAYLIGHT-ILLUM> = <DAYLIGHT-ILLUM> + <ILLUMW>                            DINTIL 288
      BACLUM(IL) = BACLUM(IL) + <BLUMW>                                         DINTIL 289
13000 CONTINUE                                                                  DINTIL 297
12000 MWI    = MWI + MWNLEN                                                     DINTIL 298
11000 MX     = MX + MXLEN                                                       DINTIL 299
C                                                                               DINTIL 300
C              OPTICAL SWITCHING CONTROL (E.G. ELECTROCHROMIC GLASS) TO         DINTIL 301
C              ADJUST VIS TRANS DOWNWARD SO DAYLIGHT LEVEL EQUALS OR IS AS      DINTIL 302
C              CLOSE AS POSSIBLE TO THE ILLUMINANCE SETPOINT AT                 DINTIL 303
C              REFERENCE POINT 1.  ASSUMES VIS TRANS IN FULLY SWITCHED          DINTIL 304
C              STATE IS LESS THAN THAT IN UNSWITCHED STATE.                     DINTIL 305
C              ASSUMES SOME WINDOWS IN A SPACE MAY HAVE THIS CONTROL AND        DINTIL 306
C              OTHERS NOT.  NOTE: FOR THIS CONTROL, SWITCH-SCH VALUE            DINTIL 307
C              =1 MEANS GLASS CAN SWITCH, =0 MEANS GLASS CANNOT SWITCH.         DINTIL 308
C                                                                               DINTIL 309
      IF(ISWFLG.EQ.0) GO TO 1200                                                DINTIL 310
C              SKIP TEST IF DAYL ILLUM BELOW SETPOINT AT REF PT 1               DINTIL 311
      IL=1                                                                      DINTIL 312
      IF(<DAYLIGHT-ILLUM>.LE.SETPNT(1)) GO TO 1200                              DINTIL 313
C              LOOP OVER WINDOWS.  GET DILLSW AND DILLUN = ILLUM AT REF PT 1 FRODINTIL 314
C              WINDOWS THAT HAVE DAYLIGHT SWITCHING AND THOSE THAT DON'T, RESP. DINTIL 315
C              INITIALLY, WINDOWS THAT HAVE DAYLIGHT SWITCHING ARE IN THE       DINTIL 316
C              UNSWITCHED STATE; OTHER WINDOWS MAY ALREADY BE SWITCHED (SEE SUBRDINTIL 317
C              CALEXT).                                                         DINTIL 318
      DILLSW = 0.                                                               DINTIL 319
      DILLUN = 0.                                                               DINTIL 320
      MX = <MZEXT>                                                              DINTIL 321
      DO 11010 IEXT=1,NEXT                                                      DINTIL 322
      NWINS = <NWIN>                                                            DINTIL 323
      IF(NWINS.EQ.0.OR.<IEWTYPE>.GT.2) GO TO 11010                              DINTIL 324
      MWI = <MXWIN>                                                             DINTIL 325
      DO 12010 IWIN=1,NWINS                                                     DINTIL 326
      IF(<HWI>*<WWI>.LT.0.1) GO TO 12010                                        DINTIL 327
      MR = <MWIPRP>                                                             DINTIL 328
      IL = 1                                                                    DINTIL 329
      ID = 1                                                                    DINTIL 330
      IF((<SHADING-FLAG>.EQ.2) .OR.                                             -044d5 700
     $   (<SHADING-FLAG>.EQ.3.AND.TAU.LT.1.0) .OR.                              -044d5 701
     $   (<DIFFUSING-GLASS>.EQ.1)) ID = IL + 2                                  -044d5 702
      IF(<SWITCH-CONTROL>.NE.8) GO TO 11200                                     DINTIL 333
      IF(<SWITCH-SCH>.EQ.0) THEN                                                DINTIL 334
        DILLSW = DILLSW + <ILLUMW>                                              DINTIL 335
        GO TO 11300                                                             DINTIL 336
      ELSE                                                                      DINTIL 337
        IF(AA(<@SWITCH-SCH>+ISCHR).GT.0.0) THEN                                 DINTIL 338
          DILLSW = DILLSW + <ILLUMW>                                            DINTIL 339
        ELSE                                                                    DINTIL 340
          DILLUN = DILLUN + <ILLUMW>                                            DINTIL 341
        ENDIF                                                                   DINTIL 342
      ENDIF                                                                     DINTIL 343
      GO TO 11300                                                               DINTIL 344
11200 DILLUN = DILLUN + <ILLUMW>                                                DINTIL 345
11300 CONTINUE                                                                  DINTIL 346
      IF(IREPRT(1,35).NE.0.AND.IREPRT(1,8).NE.0)                                IREPRT  84
     1 WRITE(IOUTPT,12019) IHR,IWIN,<SWITCH-CONTROL>,<ILLUMW>,DILLSW,           DINTIL 348
     1 DILLUN,SETPNT(1)                                                         DINTIL 349
12019 FORMAT(/,1X,'IHR,IWIN,SW-CON,ILLUMW,DILLSW,DILLUN,SETPNT=',               DINTIL 350
     1       3I3,4F10.3)                                                        DINTIL 351
12010 MWI = MWI + MWNLEN                                                        DINTIL 352
11010 MX = MX + MXLEN                                                           DINTIL 353
C              TRANSMITTANCE MULTIPLIER.                                        DINTIL 354
      ASETIL = (SETPNT(1)-DILLUN)/(DILLSW+.00001)                               DINTIL 355
      IF(IREPRT(1,35).NE.0.AND.IREPRT(1,8).NE.0)                                IREPRT  85
     1 WRITE(IOUTPT,11019) ASETIL                                               DINTIL 357
11019 FORMAT(1X,'ASETIL=',F10.3)                                                DINTIL 358
C              ASETIL > 1 MEANS NOT ENOUGH LIGHT EVEN WITH NO                   DINTIL 359
C              SWITCHING, SO DON'T SWITCH                                       DINTIL 360
      IF(ASETIL.GE.1.0) GO TO 1200                                              DINTIL 361
C              LOOP AGAIN OVER WINDOWS TO DETERMINE WHICH TO SWITCH             DINTIL 362
      MX = <MZEXT>                                                              DINTIL 363
      DO 11020 IEXT=1,NEXT                                                      DINTIL 364
      NWINS = <NWIN>                                                            DINTIL 365
      IF(NWINS.EQ.0.OR.<IEWTYPE>.GT.2) GO TO 11020                              DINTIL 366
      MWI = <MXWIN>                                                             DINTIL 367
      DO 12020 IWIN=1,NWINS                                                     DINTIL 368
      IF(<HWI>*<WWI>.LT.0.1) GO TO 12020                                        DINTIL 369
      MR = <MWIPRP>                                                             DINTIL 370
      IGLTY1 = MR                                                               WLIB1   24
C              VIS TRANS OF UNSWITCHED GLASS                                    DINTIL 371
      TVIS1 = <TVANG1>                                                          DINTIL 372
C              VIS TRANS OF FULLY SWITCHED GLASS                                DINTIL 373
      MR = <MWIPRPSW>                                                           DINTIL 374
      IGLTY2 = MR                                                               WLIB1   25
      TVIS2 = <TVANG1>                                                          DINTIL 375
      MR = <MWIPRP>                                                             DINTIL 376
      IF(<SWITCH-CONTROL>.NE.8) GO TO 12020                                     DINTIL 377
C              NO SWITCHING IF SWITCHED AND UNSWITCHED GLASS-TYPES              -058    13
C              ARE THE SAME                                                     -058    14
      IF(IGLTY1.EQ.IGLTY2) GO TO 12020                                          -058    15
      IF(<SWITCH-SCH>.EQ.0) GO TO 12022                                         DINTIL 378
      IF(AA(<@SWITCH-SCH>+ISCHR).EQ.0.0) GO TO 12020                            DINTIL 379
12022 CONTINUE                                                                  DINTIL 380
C              ASETIL < 0 MEANS ILLUM FROM NON-DAYLIGHT-SWITCHABLE              DINTIL 381
C              WINDOWS EXCEEDS SETPOINT, SO COMPLETELY SWITCH ALL               DINTIL 382
C              DAYLIGHT-SWITCHABLE WINDOWS TO MINIMIZE SOLAR GAIN               DINTIL 383
      IF(ASETIL.LE.0.0) THEN                                                    DINTIL 384
        <SWFAC> = 0.0                                                           DINTIL 385
        <VIS-TRANS-SEL> = TVIS2                                                 DINTIL 386
      ELSE                                                                      DINTIL 387
C              CASE WHERE 0 < ASETIL < 1: DARKEN GLASS IN ALL                   DINTIL 388
C              DAYLIGHT-SWITCHABLE WINDOWS TO JUST MEET ILLUM                   DINTIL 389
C              SETPOINT.                                                        DINTIL 390
      <VIS-TRANS-SEL> = AMAX1(TVIS2,ASETIL*TVIS1) + 0.0001                      DINTIL 391
      <SWFAC> = (<VIS-TRANS-SEL>-TVIS2)/(TVIS1-TVIS2+0.00001)                   DINTIL 392
      ENDIF                                                                     DINTIL 393
      IF(IREPRT(1,35).NE.0.AND.IREPRT(1,8).NE.0)                                IREPRT  86
     2 WRITE(IOUTPT,12029) IWIN,<SWITCH-CONTROL>,TVIS1,TVIS2,                   DINTIL 395
     1 <SWFAC>,ASETIL,<VIS-TRANS-SEL>                                           DINTIL 396
12029 FORMAT(1X,'IWIN,SW-CON,TVIS1,TVIS2,SWFAC,ASETIL,VTSEL=',                  DINTIL 397
     1 2I2,5F10.3)                                                              DINTIL 398
C              RESET DAYLIGHT QUANTITIES                                        DINTIL 399
      DO 12026 IL=1,NREFPT                                                      DINTIL 400
      VTRAT = <VIS-TRANS-SEL>/(TVIS1+0.00001)                                   DINTIL 401
      ID = IL                                                                   DINTIL 402
      IF((<SHADING-FLAG>.EQ.2) .OR.                                             -044d5 703
     $   (<SHADING-FLAG>.EQ.3.AND.TAU.LT.1.0) .OR.                              -044d5 704
     $   (<DIFFUSING-GLASS>.EQ.1)) ID = IL + 2                                  -044d5 705
      <DAYLIGHT-ILLUM> = <DAYLIGHT-ILLUM> + (VTRAT-1.)*<ILLUMW>                 DINTIL 405
      BACLUM(IL) = BACLUM(IL) + (VTRAT-1.)*<BLUMW>                              DINTIL 406
      IF(IREPRT(1,35).NE.0.AND.IREPRT(1,8).NE.0)                                IREPRT  87
     1 WRITE(IOUTPT,12028) IWIN,IL,ID,<VIS-TRANS-SEL>,TVIS1,VTRAT,              DINTIL 408
     1 <DAYLIGHT-ILLUM>,BACLUM(IL)                                              DINTIL 409
12028 FORMAT(1X,'IWIN,IL,ID,VT-SEL,VT,VTRAT,DAY-ILL,BACLUM=',3I3,5F10.3)        DINTIL 410
12025 CONTINUE                                                                  DINTIL 411
C              RESET ILL, BACKGROUND ILL, AND SOURCE LUM FOR THIS WINDOW        DINTIL 412
      <ILLUMW> = VTRAT*<ILLUMW>                                                 DINTIL 413
      <BLUMW>  = VTRAT*<BLUMW>                                                  DINTIL 414
      <SLUMW>  = VTRAT*<SLUMW>                                                  DINTIL 415
      IF(IRSCH.NE.0.AND.<MWIBUF>.NE.0) THEN                                     DINTIL 416
        IPTR = <MWIBUF>-1                                                       DINTIL 417
        AA(IPTR+23+ID) = <ILLUMW>                                               DINTIL 418
      ENDIF                                                                     DINTIL 419
12026 CONTINUE                                                                  DINTIL 420
12020 MWI = MWI + MWNLEN                                                        DINTIL 421
11020 MX = MX + MXLEN                                                           DINTIL 422
 1200 CONTINUE                                                                  DINTIL 423
C                                                                               DINTIL 424
C              CALCULATE GLARE INDEX AT EACH REF PT                             DINTIL 425
C                                                                               DINTIL 426
      DO 5000 IL = 1,NREFPT                                                     DINTIL 427
      BACL   = AMAX1 (SETPNT(IL)*RHOAV, BACLUM(IL))                             DINTIL 428
      CALL  DGLARE ( BACL, GLRNDX(IL) )                                         DINTIL 429
      IF(IREPRT(1,35).ne.0 .and. IREPRT(1,1).ne.0 .and. IRSCH.ne.0              IREPRT  88
     $   .and. <MZBUF>.ne. 0 )  THEN                                            DINTIL 431
        write(ioutpt,9009) IL,<SHADING-FLAG>,TAU,                               DINTIL 432
     $BACL,SETPNT(IL),RHOAV,BACLUM(IL),GLRNDX(IL),AA(MZ+87)                     DINTIL 433
 9009 format('0 DINTIL 217 (GLARE)- IL,SHADING-FLAG,TAU '/2I5,f13.6/            DINTIL 434
     $' BACL,SETPNT(IL),RHOAV,BACLUM(IL),GLRNDX(IL),MAX-GLARE'/6f13.6)          DINTIL 435
      ENDIF                                                                     DINTIL 436
 5000 CONTINUE                                                                  DINTIL 437
C                                                                               DINTIL 438
C              CHECK IF GLARE LEVEL IS LESS THAN MAXIMUM ALLOWED AT             DINTIL 439
C              EACH REF PT.  IF MAXIMUM IS EXCEEDED AT EITHER REF PT,           DINTIL 440
C              ATTEMPT TO REDUCE GLARE TO ACCEPTABLE LEVEL BY CLOSING           DINTIL 441
C              SHADING DEVICE ON WINDOWS WHICH HAVE SHADES THAT ARE             DINTIL 442
C              NOT ALREADY BEEN CLOSED TO LIMIT SOLAR GAIN.                     DINTIL 443
C                                                                               DINTIL 444
      DO 5100 IL = 1,NREFPT                                                     DINTIL 445
      IF (GLRNDX(IL).GT.<MAX-GLARE>) GO TO 5500                                 DINTIL 446
 5100 CONTINUE                                                                  DINTIL 447
C                                                                               DINTIL 448
C              GLARE IS ACCEPTABLE                                              DINTIL 449
C                                                                               DINTIL 450
      GO TO 10000                                                               DINTIL 451
 5500 CONTINUE                                                                  DINTIL 452
C                                                                               DINTIL 453
C              GLARE IS TOO HIGH AT A REF PT.  LOOP THROUGH WINDOWS.            DINTIL 454
C                                                                               DINTIL 455
      MX     = <MZEXT>                                                          DINTIL 456
      DO 21000 IEXT = 1,NEXT                                                    DINTIL 457
      NWINS  = <NWIN>                                                           DINTIL 458
      IF (NWINS.EQ.0.OR.<IEWTYPE>.GT.2) GO TO 21000                             DINTIL 459
      MWI    = <MXWIN>                                                          DINTIL 460
      DO 22000 IWIN = 1,NWINS                                                   DINTIL 461
      IF (<HWI>*<WWI>.LT.0.1) GO TO 22000                                       DINTIL 462
C              SKIP THIS WINDOW IF SHADE NOT ASSIGNED, SHADE IS ALREADY         DINTIL 463
C              CLOSED, OR GLARE CONTROL PROBABILITY TEST FAILS                  DINTIL 464
      IF (<SHADING-FLAG>.EQ.0.OR.<SHADING-FLAG>.EQ.2.OR.                        DINTIL 472
     1    <VIS-TRANS-SCH>.EQ.0) GO TO 22000                                     DINTIL 473
C              SKIP GLARE CONTROL IF LAYER-TYPE WINDOW                          BLIND3  24
      IS = 1                                                                    VISBL  810
      IF(<MWISTC>.NE.0) GO TO 22000                                             VISBL  811
      IF (<GLARE-CTRL-PROB>.EQ.1.0) GO TO 22050                                 DINTIL 474
C              GET RANDOM NUMBER BETWEEN 0 AND 1                                DINTIL 475
      CALL  DRAND (XRAN)                                                        DINTIL 476
      IF(IREPRT(1,35).ne.0 .and. IREPRT(1,1).ne.0 .and. IRSCH.ne.0              IREPRT  90
     $   .and. <MZBUF>.ne. 0 )  THEN                                            DINTIL 478
        write(ioutpt,9011) XRAN                                                 DINTIL 479
 9011 format('0 DINTIL 244 (GLARE XRAN)- ',f13.6)                               DINTIL 480
      ENDIF                                                                     DINTIL 481
      IF (XRAN.GT.<GLARE-CTRL-PROB>) GO TO 22000                                DINTIL 482
22050 CONTINUE                                                                  DINTIL 483
C                                                                               DINTIL 484
C              ILLUMINANCE (WDAYIL) AND BACKGND LUMINANCE (WBACLU)              DINTIL 485
C              CONTRIBUTION FROM THIS WINDOW WITH SHADE OPEN (IS=1)             DINTIL 486
C              AND CLOSED (IS=2) FOR EACH REF PT.                               DINTIL 487
C                                                                               DINTIL 488
      DO 22100 IL = 1,NREFPT                                                    DINTIL 489
      DO 22300 IS = 1,2                                                         DINTIL 490
      ID     = IL + 2*(IS-1)                                                    DINTIL 491
      WDAYIL(IL,IS) = <ILLUMW>                                                  DINTIL 492
      WBACLU(IL,IS) = <BLUMW>                                                   DINTIL 493
      IF(IREPRT(1,35).ne.0 .and. IREPRT(1,1).ne.0 .and. IRSCH.ne.0              IREPRT  91
     $   .and. <MZBUF>.ne. 0 )  THEN                                            DINTIL 495
        write(ioutpt,9012) il,is,id,                                            DINTIL 496
     $WDAYIL(IL,IS),AA(MWI+ID+101),WBACLU(IL,IS),AA(MWI+ID+105)                 DINTIL 497
 9012 format('0 DINTIL 260 (RECALC ILL)- '/                                     DINTIL 498
     $'WDAYIL(IL,IS),AA(MWI+ID+101),WBACLU(IL,IS),AA(MWI+ID+105)'/              DINTIL 499
     $4f13.6)                                                                   DINTIL 500
      ENDIF                                                                     DINTIL 501
22300 CONTINUE                                                                  DINTIL 502
22100 CONTINUE                                                                  DINTIL 503
C                                                                               DINTIL 504
C              RECALCULATE ILLUM AND GLARE AFTER CLOSING SHADE ON THIS          DINTIL 505
C              WINDOW                                                           DINTIL 506
C                                                                               DINTIL 507
      <SHADING-FLAG> = 2                                                        DINTIL 508
C              SAVE CURRENT MX AND MWI SINCE DGLARE CHANGES THEM                DINTIL 509
      MXSAV  = MX                                                               DINTIL 510
      MWISAV = MWI                                                              DINTIL 511
      DO 22400 IL = 1,NREFPT                                                    DINTIL 512
      RDAYIL(IL) = <DAYLIGHT-ILLUM> - WDAYIL(IL,1) + WDAYIL(IL,2)               DINTIL 513
      RBACLU(IL) = BACLUM(IL) - WBACLU(IL,1) + WBACLU(IL,2)                     DINTIL 514
      BACL   = AMAX1 (SETPNT(IL)*RHOAV, RBACLU(IL))                             DINTIL 515
      CALL DGLARE ( BACL, GLRNEW(IL) )                                          DINTIL 516
      IF(IREPRT(1,35).ne.0 .and. IREPRT(1,1).ne.0 .and. IRSCH.ne.0              IREPRT  92
     $   .and. <MZBUF>.ne. 0 )  THEN                                            DINTIL 518
        write(ioutpt,9013) IL,IA(MWI+95),                                       DINTIL 519
     $RDAYIL(IL),RBACLU(IL),BACL,SETPNT(IL),RHOAV,RBACLU(IL),GLRNEW(IL)         DINTIL 520
     $,GLRNDX(IL)                                                               DINTIL 521
 9013 format('0 DINTIL 277 (NEW GLARE)- IL,IA(MWI+95) ',2I5/                    DINTIL 522
     $'RDAYIL(IL),RBACLU(IL),BACL,SETP(IL),RHOAV,RBACLU(IL),GLRNEW(IL)'         DINTIL 523
     $,'GLRNDX(IL)'/8F13.6)                                                     DINTIL 524
      ENDIF                                                                     DINTIL 525
22400 CONTINUE                                                                  DINTIL 526
      MX     = MXSAV                                                            DINTIL 527
      MWI    = MWISAV                                                           DINTIL 528
      IF (NREFPT.EQ.2) GO TO 22500                                              DINTIL 529
C              ONE REF PT.  GO TO NEXT WINDOW IF GLARE HAS INCREASED.           DINTIL 530
      IF (GLRNEW(1).GT.GLRNDX(1)) GO TO 22980                                   DINTIL 531
C              GLARE HAS DECREASED.                                             DINTIL 532
      GO TO 22900                                                               DINTIL 533
22500 CONTINUE                                                                  DINTIL 534
C              TWO REF PTS.  THERE ARE THREE CASES DEPENDING ON GLARE           DINTIL 535
C              VALUES.                                                          DINTIL 536
      IF (GLRNDX(1).GT.<MAX-GLARE>.AND.GLRNDX(2).GT.<MAX-GLARE>)                DINTIL 537
     1  GO TO 22510                                                             DINTIL 538
      IF (GLRNDX(1).GT.<MAX-GLARE>.AND.GLRNDX(2).LE.<MAX-GLARE>)                DINTIL 539
     1  GO TO 22520                                                             DINTIL 540
      GO TO 22530                                                               DINTIL 541
22510 CONTINUE                                                                  DINTIL 542
C                                                                               DINTIL 543
C              INITIAL GLARE TOO HIGH AT BOTH REF PTS.  CLOSE SHADE ON          DINTIL 544
C              THIS WINDOW IF THIS DECREASES GLARE AT BOTH REF PTS.             DINTIL 545
C                                                                               DINTIL 546
      IF (GLRNEW(1).GT.GLRNDX(1).OR.GLRNEW(2).GT.GLRNDX(2) ) GO TO 22980        DINTIL 547
      GO TO 22900                                                               DINTIL 548
22520 CONTINUE                                                                  DINTIL 549
C                                                                               DINTIL 550
C              INITIAL GLARE TOO HIGH ONLY AT FIRST REF PT.  CLOSE SHADE        DINTIL 551
C              ON THIS WINDOW IF GLARE AT FIRST REF PT DECREASES AND            DINTIL 552
C              GLARE AT SECOND REF PT STAYS BELOW MAX.                          DINTIL 553
C                                                                               DINTIL 554
      IF(GLRNEW(1).GT.GLRNDX(1).OR.GLRNEW(2).GT.<MAX-GLARE>) GO TO 22980        DINTIL 555
      GO TO 22900                                                               DINTIL 556
22530 CONTINUE                                                                  DINTIL 557
C                                                                               DINTIL 558
C              INITIAL GLARE TOO HIGH AT SECOND REF PT.  CLOSE WINDOW           DINTIL 559
C              SHADE IF GLARE AT SECOND REF PT DECREASES AND GLARE AT           DINTIL 560
C              FIRST REF PT STAYS BELOW MAX.                                    DINTIL 561
C                                                                               DINTIL 562
      IF(GLRNEW(2).GT.GLRNDX(2).OR.GLRNEW(1).GT.<MAX-GLARE>) GO TO 22980        DINTIL 563
22900 CONTINUE                                                                  DINTIL 564
C                                                                               DINTIL 565
C              CLOSING SHADE ON THIS WINDOW HAS IMPROVED THE GLARE              DINTIL 566
C              SITUATION.  RESET BACKG LUM, GLARE INDX, AND DAYL ILLUM          DINTIL 567
C              AT EACH REF PT.                                                  DINTIL 568
C                                                                               DINTIL 569
      DO 22950 IL = 1,NREFPT                                                    DINTIL 570
      BACLUM(IL) = RBACLU(IL)                                                   DINTIL 571
      GLRNDX(IL) = GLRNEW(IL)                                                   DINTIL 572
      <DAYLIGHT-ILLUM> = RDAYIL(IL)                                             DINTIL 573
22950 CONTINUE                                                                  DINTIL 574
C                                                                               DINTIL 575
C              CHECK IF GLARE NOW ACCEPTABLE AT EACH REF PT.  IF NOT, GO        DINTIL 576
C              TO NEXT WINDOW.                                                  DINTIL 577
C                                                                               DINTIL 578
      IF(NREFPT .EQ. 2) GO TO 22954                                             DINTIL 579
      IF(GLRNDX(1) .LE. <MAX-GLARE>) GO TO 10000                                DINTIL 580
      GO TO 22000                                                               DINTIL 581
22954 CONTINUE                                                                  DINTIL 582
      IF(GLRNDX(1) .LE. <MAX-GLARE> .AND.                                       DINTIL 583
     1   GLRNDX(2) .LE. <MAX-GLARE>) GO TO 10000                                DINTIL 584
      GO TO 22000                                                               DINTIL 585
C                                                                               DINTIL 586
C              CLOSING THE SHADE ON THIS WINDOW HAS NOT IMPROVED THE            DINTIL 587
C              GLARE SITUATION.  OPEN SHADE, GO TO NEXT WINDOW.                 DINTIL 588
C                                                                               DINTIL 589
22980 <SHADING-FLAG> = 1                                                        DINTIL 590
22000 MWI    = MWI + MWNLEN                                                     DINTIL 591
21000 MX     = MX + MXLEN                                                       DINTIL 592
10000 CONTINUE                                                                  DINTIL 593
C**************** space : DAYL-ILLUM-FN  after function ****************        DINTIL 594
      IF( <MZDAYILLUMFN2> .GT. 0 )   CALL FINTL( <MZDAYILLUMFN2>,1.)            DINTIL 595
C***********************************************************************        DINTIL 596
C              ENTER ILLUM AND GLARE QUANTITIES IN SPACE HR REP BUFFER          DINTIL 597
      ISPBFP = <MZBUF>                                                          DINTIL 598
      IF (IRSCH.EQ.0.OR.ISPBFP.EQ.0) GO TO 30000                                DINTIL 599
      IPTR   = ISPBFP - 1                                                       DINTIL 600
      DO 15000 IL = 1,NREFPT                                                    DINTIL 601
      AA(IPTR+48+IL) = <DAYLIGHT-ILLUM>                                         DINTIL 602
      AA(IPTR+50+IL) = BACLUM(IL)                                               DINTIL 603
      AA(IPTR+52+IL) = GLRNDX(IL)                                               DINTIL 604
15000 CONTINUE                                                                  DINTIL 605
30000 CONTINUE                                                                  DINTIL 606
      IF (IPRDFL.NE.0) GO TO 40000                                              DINTIL 607
C                                                                               44d5br 118
C              ACCUMULATE ILLUM BIN CONTENTS FOR REPORT LS-M                    44d5br 119
C                                                                               44d5br 120
      IF (IREPRT(1,28).NE.0) THEN                                               44d5br 121
        DO IL=1,NREFPT                                                          44d5br 122
          DO I=1,2                                                              44d5br 123
            ZLSM(I,IL,IHR,JZD)   = ZLSM(I,IL,IHR,JZD)                           44d5br 124
     $                             + <DAYLIGHT-ILLUM>                           44d5br 125
            ZLSM(I+2,IL,IHR,JZD) = ZLSM(I+2,IL,IHR,JZD) + 1.0                   44d5br 126
            ZLSM(I,IL,25,JZD)    = ZLSM(I,IL,25,JZD)                            44d5br 127
     $                             + <DAYLIGHT-ILLUM>                           44d5br 128
            ZLSM(I+2,IL,25,JZD)  = ZLSM(I+2,IL,25,JZD)  + 1.0                   44d5br 129
          ENDDO                                                                 44d5br 130
        ENDDO                                                                   44d5br 131
      ENDIF                                                                     44d5br 132
C                                                                               DINTIL 608
C              ACCUMULATE ILLUM AND GLARE QUANTITIES FOR REPORT LS-G            DINTIL 609
C                                                                               DINTIL 610
      REPM   = 1.                                                               DINTIL 611
      IF (<KZDREP>.EQ.0) GO TO 30100                                            DINTIL 612
      REPM   = AA(<@KZDREP> + ISCHR)                                            DINTIL 613
30100 CONTINUE                                                                  DINTIL 614
      IF (REPM.LT.0.5) GO TO 40000                                              DINTIL 615
      DO 31000 IL = 1,NREFPT                                                    DINTIL 616
      IF (IREPRT(1,22).EQ.0) GO TO 30300                                        IREPRT  93
C              AVERAGE MONTHLY AND ANNUAL ILLUMINANCE                           DINTIL 618
      ZLSG(1,IL+6,JZD) = ZLSG(1,IL+6,JZD) + <DAYLIGHT-ILLUM>                    DINTIL 619
      ZLSG(2,IL+6,JZD) = ZLSG(2,IL+6,JZD) + <DAYLIGHT-ILLUM>                    DINTIL 620
C              HOURS ILLUMINANCE GREATER THAN SETPOINT                          DINTIL 621
      IF (<DAYLIGHT-ILLUM>.LE.SETPNT(IL)) GO TO 30200                           DINTIL 622
      ZLSG(1,IL+8,JZD) = ZLSG(1,IL+8,JZD) + 1.                                  DINTIL 623
      ZLSG(2,IL+8,JZD) = ZLSG(2,IL+8,JZD) + 1.                                  DINTIL 624
C              AVERAGE MONTHLY AND ANNUAL GLARE INDEX                           DINTIL 625
30200 ZLSG(1,IL+10,JZD) = ZLSG(1,IL+10,JZD) + GLRNDX(IL)                        DINTIL 626
      ZLSG(2,IL+10,JZD) = ZLSG(2,IL+10,JZD) + GLRNDX(IL)                        DINTIL 627
C              HOURS GLARE TOO HIGH                                             DINTIL 628
      GLRLIM = <MAX-GLARE>                                                      DINTIL 629
C              IF <MAX-GLARE> NOT INPUT, SET GLARE LIM FOR LS-G                 DINTIL 630
C              LEVEL FOR GENERAL OFFICE WORK (BRITISH IES CODE, 1977)           DINTIL 631
      IF (<MAX-GLARE>.EQ.100.) GLRLIM = 22.                                     DINTIL 632
      IF (GLRNDX(IL).LE.GLRLIM) GO TO 30300                                     DINTIL 633
      ZLSG(1,IL+12,JZD) = ZLSG(1,IL+12,JZD) + 1.                                DINTIL 634
      ZLSG(2,IL+12,JZD) = ZLSG(2,IL+12,JZD) + 1.                                DINTIL 635
30300 CONTINUE                                                                  DINTIL 636
      IF (IREPRT(1,25).EQ.0) GO TO 31000                                        IREPRT  94
C                                                                               DINTIL 638
C              ACCUMULATE ILLUM BIN CONTENTS FOR REPORT LS-J                    DINTIL 639
C                                                                               DINTIL 640
      KBIN   = INT (<DAYLIGHT-ILLUM>/10.) + 1                                   DINTIL 641
      IF (KBIN.GT.8) KBIN = 9                                                   DINTIL 642
      ZLSJM(KBIN,IL,JZD) = ZLSJM(KBIN,IL,JZD) + 1.                              DINTIL 643
      ZLSJY(KBIN,IL,JZD) = ZLSJY(KBIN,IL,JZD) + 1.                              DINTIL 644
31000 CONTINUE                                                                  DINTIL 645
40000 CONTINUE                                                                  DINTIL 646
      RETURN                                                                    DINTIL 647
      END                                                                       DINTIL 648
      SUBROUTINE  DINTRP (M, N, SN, FSK, FSU)                                   DINTRP   2
C                                                                               DINTRP   3
C              CALLED BY DINTIL.  UNPACKS AND INTERPOLATES TO GET               DINTRP   4
C              SKY AND SUN DAYLIGHT AND GLARE FACTORS.                          DINTRP   5
C                                                                               DINTRP   6
      COMMON  /DAYLT/ NDAYCF,IPHS,IZ,IHIT,MHHIT,IL,RHOAV,ATOT,ARHTOT,           /DAYLT/  2
     1                AR(3),AP(3),ARH(3),ARHP(3),NPH,NTH,WC(3),TMULT,           /DAYLT/  3
     2                TSOLNM,TVISDF,FRUP,ISHLOC,NWTOT,RHOCW,RHOFW,WAREA,        /DAYLT/  4
     3                IMREF,PHSUN,THSUN,PHSUND,THSUND,THSMIN,PHSMIN,            /DAYLT/  5
     4                THSMAX,PHSMAX,THSDEL,PHSDEL,H,NTHS,NPHS,NDFC,LWDC,        /DAYLT/  6
     5                BETA,W,IBZ,IWZ,ZENL,JZD,WBACLU(2,2),PF(7,5),              /DAYLT/  7
     6                VIEWVC(3),GLRNDX(2),WDAYIL(2,2),BACLUM(2),ITF(3),         /DAYLT/  8
     7                RDAYIL(2),RBACLU(2),GLRNEW(2),ETACLD,CDIRLW(24),          /DAYLT/  9
     8                CDIFLW(24),ODIFLW(24),SOLIC(12),TFAC,SPHSUN,              /DAYLT/ 10
     9                CPHSUN,PHWN,THWN,SPHWN,CPHWN,TOTIL(2),ATMMOI(12),         /DAYLT/ 11
     1                ATMTUR(12),XRAN,ALFAD,THRAT,PHRAT,SETPNT(2),              /DAYLT/ 12
     2                IZLSG,IZLSH,IZLSJM,IZLSJY,IZDREP,FPHRP(2),ZFTOT,          /DAYLT/ 13
     3                EINTSK(2,12,24),EINTSU(2,12,24),EDIRSK(2,12,24),          VISBL    2
     4                EDIRSU(2,12,24),FLCWSK(2,12),FLCWSU(2,12),                VISBL    3
     5                FLFWSK(2,12),FLFWSU(2,12),GILSK(2,10),GILSU(2,10),        VISBL    4
     6                WLUMSK(2,11,24),WLUMSU(2,11,24),AVWLSK(2,12,24),          VISBL    5
     7                AVWLSU(2,12,24),CHILSK(24),CHILSU(24),OHILSK(24),         VISBL    6
     8                DFSKHR(2,2),DFSUHR(2,2),SFSKHR(2,2),SFSUHR(2,2),          /DAYLT/ 19
     9                BFSKHR(2,2),BFSUHR(2,2),HISUNF,CHISKF,OHISKF,IZLSM        44d5br   1
      COMMON  /DAYL1/  ATMTU, ATMMO, TAU1                                       /DAYLT/ 21
     1               , TVISB, TH, PH, RAY(3), WNORM(3), TVISBR                  /DAYLT/ 22
      COMMON        // AA(75 000 000)                                           -048ar   1
      INTEGER          IA(75 000 000)                                           -048ar   2
      EQUIVALENCE  (IA(1), AA(1))                                               //       4
C                                                                               DINTRP   9
      IF (PHSUND.LT.PHSMAX.AND.THSUND.LT.THSMAX) GO TO 301                      DINTRP  10
      IF (PHSUND.EQ.PHSMAX.AND.THSUND.EQ.THSMAX) GO TO 302                      DINTRP  11
      IF (PHSUND.EQ.PHSMAX) GO TO 303                                           DINTRP  12
      IF (THSUND.EQ.THSMAX) GO TO 304                                           DINTRP  13
  301 CONTINUE                                                                  DINTRP  14
      CALL DUNPAK (IA(M), SN, A1, B1)                                           DINTRP  15
      CALL DUNPAK (IA(M+1), SN, A2, B2)                                         DINTRP  16
      CALL DUNPAK (IA(M+N), SN, A3, B3)                                         DINTRP  17
      CALL DUNPAK (IA(M+N+1), SN, A4, B4)                                       DINTRP  18
      FA     = A1 + THRAT * (A2-A1)                                             DINTRP  19
      FB     = A3 + THRAT * (A4-A3)                                             DINTRP  20
      FSK    = FA + PHRAT * (FB-FA)                                             DINTRP  21
      FA     = B1 + THRAT * (B2-B1)                                             DINTRP  22
      FB     = B3 + THRAT * (B4-B3)                                             DINTRP  23
      FSU    = FA + PHRAT * (FB-FA)                                             DINTRP  24
      RETURN                                                                    DINTRP  25
  302 CONTINUE                                                                  DINTRP  26
      CALL DUNPAK (IA(M), SN, FSK, FSU)                                         DINTRP  27
      RETURN                                                                    DINTRP  28
  303 CONTINUE                                                                  DINTRP  29
      CALL DUNPAK (IA(M), SN, A1, B1)                                           DINTRP  30
      CALL DUNPAK (IA(M+1), SN, A2, B2)                                         DINTRP  31
      FSK    = A1 + THRAT * (A2-A1)                                             DINTRP  32
      FSU    = B1 + THRAT * (B2-B1)                                             DINTRP  33
      RETURN                                                                    DINTRP  34
  304 CONTINUE                                                                  DINTRP  35
      CALL DUNPAK (IA(M), SN, A1, B1)                                           DINTRP  36
      CALL DUNPAK (IA(M+N), SN, A2, B2)                                         DINTRP  37
      FSK    = A1 + PHRAT * (A2-A1)                                             DINTRP  38
      FSU    = B1 + PHRAT * (B2-B1)                                             DINTRP  39
      RETURN                                                                    DINTRP  40
      END                                                                       DINTRP  41
      SUBROUTINE  DLTSYS                                                        DLTSYS   2
C                                                                               DLTSYS   3
C              CALLED FROM DAYCLC FOR EACH SPACE WITH DAYLIGHTING.              DLTSYS   4
C              DETERMINES LIGHTING POWER REDUCTION FACTOR DUE TO                DLTSYS   5
C              DAYLIGHTING FOR DIFFERENT LIGHTING CONTROL SYSTEMS.              DLTSYS   6
C                                                                               DLTSYS   7
      COMMON  /CONST/  DTOR, PIOVR2, PIOVR4, IBLNK, UNDEF, IUNDEF,              /CONST/  2
     1                 UNFILD, URAD, DEFIFR, DEFCFR, DEFINC, KWBTU              /CONST/  3
      REAL             KWBTU                                                    /CONST/  4
      COMMON  /DAYLT/ NDAYCF,IPHS,IZ,IHIT,MHHIT,IL,RHOAV,ATOT,ARHTOT,           /DAYLT/  2
     1                AR(3),AP(3),ARH(3),ARHP(3),NPH,NTH,WC(3),TMULT,           /DAYLT/  3
     2                TSOLNM,TVISDF,FRUP,ISHLOC,NWTOT,RHOCW,RHOFW,WAREA,        /DAYLT/  4
     3                IMREF,PHSUN,THSUN,PHSUND,THSUND,THSMIN,PHSMIN,            /DAYLT/  5
     4                THSMAX,PHSMAX,THSDEL,PHSDEL,H,NTHS,NPHS,NDFC,LWDC,        /DAYLT/  6
     5                BETA,W,IBZ,IWZ,ZENL,JZD,WBACLU(2,2),PF(7,5),              /DAYLT/  7
     6                VIEWVC(3),GLRNDX(2),WDAYIL(2,2),BACLUM(2),ITF(3),         /DAYLT/  8
     7                RDAYIL(2),RBACLU(2),GLRNEW(2),ETACLD,CDIRLW(24),          /DAYLT/  9
     8                CDIFLW(24),ODIFLW(24),SOLIC(12),TFAC,SPHSUN,              /DAYLT/ 10
     9                CPHSUN,PHWN,THWN,SPHWN,CPHWN,TOTIL(2),ATMMOI(12),         /DAYLT/ 11
     1                ATMTUR(12),XRAN,ALFAD,THRAT,PHRAT,SETPNT(2),              /DAYLT/ 12
     2                IZLSG,IZLSH,IZLSJM,IZLSJY,IZDREP,FPHRP(2),ZFTOT,          /DAYLT/ 13
     3                EINTSK(2,12,24),EINTSU(2,12,24),EDIRSK(2,12,24),          VISBL    2
     4                EDIRSU(2,12,24),FLCWSK(2,12),FLCWSU(2,12),                VISBL    3
     5                FLFWSK(2,12),FLFWSU(2,12),GILSK(2,10),GILSU(2,10),        VISBL    4
     6                WLUMSK(2,11,24),WLUMSU(2,11,24),AVWLSK(2,12,24),          VISBL    5
     7                AVWLSU(2,12,24),CHILSK(24),CHILSU(24),OHILSK(24),         VISBL    6
     8                DFSKHR(2,2),DFSUHR(2,2),SFSKHR(2,2),SFSUHR(2,2),          /DAYLT/ 19
     9                BFSKHR(2,2),BFSUHR(2,2),HISUNF,CHISKF,OHISKF,IZLSM        44d5br   1
      COMMON  /DAYL1/  ATMTU, ATMMO, TAU1                                       /DAYLT/ 21
     1               , TVISB, TH, PH, RAY(3), WNORM(3), TVISBR                  /DAYLT/ 22
      COMMON  /HRREP / Irb, Ihrp, Lrb, Lhrp, Nrb, Nhrp, IVTLIM(3,50),           HRr      1
     &                 IGRPtr, IBRPtr, IRSch, IRSchT(5),                        HRr      2
     &                 NHRTyp(3), ITBUF(3), ITBUFB(3), ITBUFE(3),               HRr      3
     &                 IHREOF, ICDFLG                                           HRr      4
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     BLIND    2
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        FLOOR1   3
      COMMON  /PTRBGN/ ISCB, IWFB, IWPB, ICONSB, IGTB, IWLB, IGEOB,             HRr      6
     1                 ISHADB, IWINB, IDRB, IEWB, IUGB, ISPB, IIWPB,            HRr      7
     2                 IIWB, IFLB, ISPCDB, IOTHB, ILHB, IZQCMB, ISSHDB,         HRr      8
     3                 IOHFIB, IZLSK, IZLSL, ISTFB                              HRr      9
      COMMON  /SUND/   ISUNUP, GUNDOG, HORANG, TDECLN, EQTIME, SOLCON,          /SUND/   2
     1                 ATMEXT, SKYDFF, RAYCOS(3), RDN,                          /SUND/   3
     2                 BSUN, DECLN, CD, SD, FSUNUP                              /SUND/   4
      COMMON /TIME  / IDOY, IDOW, IDSTF, ISCHR, ISCDAY, iDSdates(6),            -044e5r  1
     1                IMO, IDAY, IYR, IHR, CLOCK(10), IDSFLG,                   HOLID1   4
     2                MONDSC(12), MONLEN(12), MONSDA(12), IEODMR                /TIME/   4
      COMMON        // AA(75 000 000)                                           -048ar   1
      INTEGER          IA(75 000 000)                                           -048ar   2
      EQUIVALENCE  (IA(1), AA(1))                                               //       4
C                                                                               DLTSYS  15
C**************** space : DAYL-LTCTRL-FN  before function **************        DLTSYS  16
      IF( <MZDAYLTCTLFN1> .GT. 0 )  CALL FINTL( <MZDAYLTCTLFN1>, 0. )           DLTSYS  17
C***********************************************************************        DLTSYS  18
C                                                                               DLTSYS  19
      <POWER-RED-FAC> = 0.                                                      DLTSYS  20
C                                                                               DLTSYS  21
C              LOOP OVER REFERENCE POINTS                                       DLTSYS  22
C                                                                               DLTSYS  23
      NREFPT = <NREFP>                                                          DLTSYS  24
      ZFTOT  = <ZONE-FRACTION1>                                                 DLTSYS  25
      IF(NREFPT .GT. 1)  ZFTOT = ZFTOT + <ZONE-FRACTION2>                       DLTSYS  26
      DO 500 IL = 1,NREFPT                                                      DLTSYS  27
      IF (IL.EQ.1) THEN                                                         -044d5 707
       LSYSTP = <LIGHT-CTRL-TYPE1>                                              -044d5 708
       ZFRAC  = <ZONE-FRACTION1>                                                -044d5 709
      ELSE                                                                      -044d5 710
       LSYSTP = <LIGHT-CTRL-TYPE2>                                              -044d5 711
       ZFRAC  = <ZONE-FRACTION2>                                                -044d5 712
      ENDIF                                                                     -044d5 713
C              FRACTIONAL LIGHT OUTPUT REQUIRED TO MEET SETPOINT                -044d5 714
      FL     = MAX((SETPNT(IL)-<DAYLIGHT-ILLUM>)/SETPNT(IL),0.)                 -044d5 715
C              BRANCH ON LIGHTING SYSTEM TYPE                                   -044d5 716
C              LSYSTYPE 1: CONTINUOUS                                           -044d5 717
C              LSYSTYPE 2: STEPPED                                              -044d5 718
C              LSYSTYPE 3: CONTINUOUS/OFF                                       -044d5 719
C              LSYSTYPE 4: DISCRETE                                             -044d5 720
      IF (LSYSTP.EQ.2) GO TO 200                                                DLTSYS  38
      IF (LSYSTP.EQ.4) GO TO 350                                                -044d5 721
C                                                                               DLTSYS  39
C              CONTINUOUSLY DIMMABLE SYSTEM WITH LINEAR POWER CURVE             DLTSYS  40
C                                                                               DLTSYS  41
C              FRACTIONAL OUTPUT POWER REQUIRED TO MEET SETPOINT                DLTSYS  42
      FP     = 1.0                                                              -044d5 722
      IF (IL .EQ. 1) THEN                                                       -044d5 723
        FPmin  =<MIN-POWER-FRAC>                                                -044d5 724
        FLmin  =<MIN-LIGHT-FRAC>                                                -044d5 725
      ELSE                                                                      -044d5 726
        FPmin  =<MIN-POWER-FRAC2>                                               -044d5 727
        FLmin  =<MIN-LIGHT-FRAC2>                                               -044d5 728
      ENDIF                                                                     -044d5 729
C              LIGHT-CTRL-TYPE = CONTINUOUS (LSYSTP = 2)                        -044d5 730
      IF (FL .LE. FLmin) FP = FPmin                                             -044d5 731
C              LIGHT-CTRL-TYPE = CONTINUOUS/OFF (LSYSTP = 3)                    -044d5 732
      IF ((FL .LE. FLmin) .AND. (LSYSTP .EQ. 3)) FP = 0.0                       -044d5 733
      IF ((FL .GT. FLmin) .AND. (FL     .LT. 1.0))                              -044d5 734
     $ FP = (FL + (1.-FL)*FPmin - FLmin) / (1. - FLmin)                         -044d5 735
      GO TO 400                                                                 DLTSYS  48
  200 CONTINUE                                                                  DLTSYS  49
C                                                                               DLTSYS  50
C              STEPPED SYSTEM                                                   DLTSYS  51
C                                                                               DLTSYS  52
      FP     = 0.                                                               DLTSYS  53
      IF (IL .EQ. 1) THEN                                                       -044d5 736
        STEPS  =  <LIGHT-CTRL-STEPS>                                            -044d5 737
        CPROB  = <LIGHT-CTRL-PROB>                                              -044d5 738
      ELSE                                                                      -044d5 739
        STEPS  = <LIGHT-CTRL-STEP2>                                             -044d5 740
        CPROB  = <LIGHT-CTRL-PROB2>                                             -044d5 741
      ENDIF                                                                     -044d5 742
      IF ( (<DAYLIGHT-ILLUM> .GT. 0.0) .AND.                                    -044d5 743
     $     (<DAYLIGHT-ILLUM> .LT. SETPNT(IL)) )                                 -044d5 744
     $  FP = FLOAT(INT(STEPS*FL) + 1) / STEPS                                   -044d5 745
      IF (<DAYLIGHT-ILLUM>.EQ.0.) FP = 1.0                                      -044d5 746
C                                                                               -044d5 747
      IF (CPROB .EQ. 1.0)   GO TO 300                                           -044d5 748
C                                                                               DLTSYS  59
C              MANUAL OPERATION.  OCCUPANT SETS LIGHTS ONE LEVEL TOO            DLTSYS  60
C              HIGH A FRACTION OF THE TIME EQUAL TO                             DLTSYS  61
C              1.-<LIGHT-CTRL-PROB>.  DRAND RETURNS A RANDOM NUMBER             DLTSYS  62
C              BETWEEN 0 AND 1.                                                 DLTSYS  63
C                                                                               DLTSYS  64
      CALL  DRAND (XRAN)                                                        DLTSYS  65
      IF (XRAN  .LT. CPROB) GO TO 300                                           -044d5 749
C              SET LEVEL ONE HIGHER                                             -044d5 750
      IF (FP .LT. 1.0)  FP = FP + 1.0 / STEPS                                   -044d5 751
  300 CONTINUE                                                                  DLTSYS  69
      GO TO 400                                                                 -044d5 752
  350 CONTINUE                                                                  -044d5 753
C              DISCRETE Daylight controls                                       -044d5 754
      FP     = 1.                                                               -044d5 755
      IF (IL.EQ.1) THEN                        ! Ref Pt (IL) 1                  -044d5 756
        DO II=1,<LIGHT-CTRL-STEPS>                                              -044d5 757
          IF (<DISCRETE-LIGHT1>.LT.FL) EXIT                                     -044d5 758
        ENDDO                                                                   -044d5 759
        IF (<DISCRETE-LIGHT1>.LT.FL) II = II - 1                                -044d5 760
        IF (II.GT.0) FP = <DISCRETE-POWER1>                                     -044d5 761
      ELSE                                     ! Ref Pt (IL) 2                  -044d5 762
        DO II=1,<LIGHT-CTRL-STEP2>                                              -044d5 763
          IF (<DISCRETE-LIGHT2>.LT.FL) EXIT                                     -044d5 764
        ENDDO                                                                   -044d5 765
        IF (<DISCRETE-LIGHT2>.LT.FL) II = II - 1                                -044d5 766
        IF (II.GT.0) FP = <DISCRETE-POWER2>                                     -044d5 767
      ENDIF                                                                     -044d5 768
  400 CONTINUE                                                                  DLTSYS  70
C              CORRECT FOR FRACTION OF HOUR THAT SUN IS DOWN                    DLTSYS  71
      FP     = FP * FSUNUP + (1.0 - FSUNUP)                                     DLTSYS  72
      FPHRP(IL) = FP                                                            DLTSYS  73
C                                                                               DLTSYS  74
C              ACCUMULATE NET LTG POWER REDUCTION FACTOR FOR ENTIRE ZONE        DLTSYS  75
C                                                                               DLTSYS  76
      <POWER-RED-FAC> = <POWER-RED-FAC> + FP * ZFRAC                            DLTSYS  77
C                                                                               DLTSYS  78
  500 CONTINUE                                                                  DLTSYS  79
C              CORRECT FOR FRACTION OF ZONE (1-ZFTOT) NOT CONTROLLED BY         DLTSYS  80
C              THE REF PTS.  FOR THIS FRACTION (WHICH IS USUALLY ZERO),         DLTSYS  81
C              THE ELECTRIC LTG IS UNAFFECTED AND THE POWER REDUCTION           DLTSYS  82
C              FACTOR IS THEREFORE 1.0.                                         DLTSYS  83
      <POWER-RED-FAC> = <POWER-RED-FAC> + (1.0 - ZFTOT)                         DLTSYS  84
C**************** space : DAYL-LTCTRL-FN  after function ***************        DLTSYS  85
      IF( <MZDAYLTCTLFN2> .GT. 0 )  CALL FINTL( <MZDAYLTCTLFN2>, 1. )           DLTSYS  86
C***********************************************************************        DLTSYS  87
C              ENTER POWER REDUCTION FACTORS IN SPACE HR REP BUFFER             DLTSYS  88
      ISPBFP = <MZBUF>                                                          DLTSYS  89
      IF (IRSCH.EQ.0.OR.ISPBFP.EQ.0) GO TO 550                                  DLTSYS  90
      IPTR   = ISPBFP - 1                                                       DLTSYS  91
      AA(IPTR+55) = FPHRP(1)                                                    DLTSYS  92
      IF (NREFPT.EQ.2) AA(IPTR+56) = FPHRP(2)                                   DLTSYS  93
      AA(IPTR+57) = <POWER-RED-FAC>                                             DLTSYS  94
  550 CONTINUE                                                                  DLTSYS  95
      RETURN                                                                    DLTSYS  96
      END                                                                       DLTSYS  97
      SUBROUTINE  DLUMEF                                                        DLUMEF   2
C                                                                               DLUMEF   3
C              CALLED BY DAVAIL                                                 DLUMEF   4
C              CALCULATES LUMINOUS EFFICACY IN LUMENS/WATT OF DIRECT            DLUMEF   5
C              SOLAR RADIATION, CLEAR SKY DIFFUSE SOLAR RADIATION, AND          DLUMEF   6
C              OVERCAST SKY DIFFUSE SOLAR RADIATION.                            DLUMEF   7
C                                                                               DLUMEF   8
      COMMON  /DAYLT/ NDAYCF,IPHS,IZ,IHIT,MHHIT,IL,RHOAV,ATOT,ARHTOT,           /DAYLT/  2
     1                AR(3),AP(3),ARH(3),ARHP(3),NPH,NTH,WC(3),TMULT,           /DAYLT/  3
     2                TSOLNM,TVISDF,FRUP,ISHLOC,NWTOT,RHOCW,RHOFW,WAREA,        /DAYLT/  4
     3                IMREF,PHSUN,THSUN,PHSUND,THSUND,THSMIN,PHSMIN,            /DAYLT/  5
     4                THSMAX,PHSMAX,THSDEL,PHSDEL,H,NTHS,NPHS,NDFC,LWDC,        /DAYLT/  6
     5                BETA,W,IBZ,IWZ,ZENL,JZD,WBACLU(2,2),PF(7,5),              /DAYLT/  7
     6                VIEWVC(3),GLRNDX(2),WDAYIL(2,2),BACLUM(2),ITF(3),         /DAYLT/  8
     7                RDAYIL(2),RBACLU(2),GLRNEW(2),ETACLD,CDIRLW(24),          /DAYLT/  9
     8                CDIFLW(24),ODIFLW(24),SOLIC(12),TFAC,SPHSUN,              /DAYLT/ 10
     9                CPHSUN,PHWN,THWN,SPHWN,CPHWN,TOTIL(2),ATMMOI(12),         /DAYLT/ 11
     1                ATMTUR(12),XRAN,ALFAD,THRAT,PHRAT,SETPNT(2),              /DAYLT/ 12
     2                IZLSG,IZLSH,IZLSJM,IZLSJY,IZDREP,FPHRP(2),ZFTOT,          /DAYLT/ 13
     3                EINTSK(2,12,24),EINTSU(2,12,24),EDIRSK(2,12,24),          VISBL    2
     4                EDIRSU(2,12,24),FLCWSK(2,12),FLCWSU(2,12),                VISBL    3
     5                FLFWSK(2,12),FLFWSU(2,12),GILSK(2,10),GILSU(2,10),        VISBL    4
     6                WLUMSK(2,11,24),WLUMSU(2,11,24),AVWLSK(2,12,24),          VISBL    5
     7                AVWLSU(2,12,24),CHILSK(24),CHILSU(24),OHILSK(24),         VISBL    6
     8                DFSKHR(2,2),DFSUHR(2,2),SFSKHR(2,2),SFSUHR(2,2),          /DAYLT/ 19
     9                BFSKHR(2,2),BFSUHR(2,2),HISUNF,CHISKF,OHISKF,IZLSM        44d5br   1
      COMMON  /DAYL1/  ATMTU, ATMMO, TAU1                                       /DAYLT/ 21
     1               , TVISB, TH, PH, RAY(3), WNORM(3), TVISBR                  /DAYLT/ 22
      COMMON  /LOCALD/ STALAT, STALON, ITIMZ, BAZIM, BALTIT,                    /LOCALD/ 2
     1                 SSTALA, CSTALA, TSTALA, SBAZIM, CBAZIM                   /LOCALD/ 3
     2                 ,BXORG, BYORG, SHCOEF, TP1, TP2, WSTP1, WSTP2,           /LOCALD/ 4
     3                 WSHGT,WSHGTL(12),ISREFL,IHOLX                            HOLID1   2
      DIMENSION LOCALD(32)                                                      HOLID1   3
      EQUIVALENCE      (LOCALD(1),STALAT)                                       /LOCALD/ 7
      COMMON /TIME  / IDOY, IDOW, IDSTF, ISCHR, ISCDAY, iDSdates(6),            -044e5r  1
     1                IMO, IDAY, IYR, IHR, CLOCK(10), IDSFLG,                   HOLID1   4
     2                MONDSC(12), MONLEN(12), MONSDA(12), IEODMR                /TIME/   4
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
C                                                                               DLUMEF  13
C                                                                               DLUMEF  14
C              LUMENS/WATT FOR DIRECT SOLAR RADIATION, CLEAR SKY                DLUMEF  15
C              (FIT TO TABULATED VALUES OF DIR NORM LUMINOUS                    DLUMEF  16
C              EFFICACY VS SOLAR ALTITUDE,TURBIDITY FACTOR, MOISTURE --         DLUMEF  17
C              AYDINLI, THE AVAILABILITY OF SOLAR RADIATION AND                 DLUMEF  18
C              DAYLIGHT, TABLE 4, OCTOBER 1981.)                                DLUMEF  19
C                                                                               DLUMEF  20
C              RESTRICT BETA TO RANGE OF AYDINLI VALUES (0 TO 0.2)              DLUMEF  21
      BC=AMIN1(0.2,BETA)                                                        DLUMEF  22
      CDIRLW(IHR)=(99.+4.7*W-52.4*BC)*(1.-EXP((24.*BC-8.)*PHSUN))               DLUMEF  23
C                                                                               DLUMEF  24
C              LUMENS/WATT FOR DIFFUSE RADIATION FROM CLEAR SKY                 DLUMEF  25
C              (FROM AYDINLI, THE AVAILABILITY OF SOLAR RADIATION AND           DLUMEF  26
C              DAYLIGHT, OCTOBER 1981)                                          DLUMEF  27
C                                                                               DLUMEF  28
      CDIFLW(IHR) = 125.4                                                       DLUMEF  29
C                                                                               DLUMEF  30
C              LUMENS/WATT FOR DIFFUSE RADIATION FROM OVERCAST SKY              DLUMEF  31
C              (FROM DOGNIAUX AND LEMOINE)                                      DLUMEF  32
C                                                                               DLUMEF  33
      ODIFLW(IHR) = 110.                                                        DLUMEF  34
C                                                                               DLUMEF  35
      RETURN                                                                    DLUMEF  36
      END                                                                       DLUMEF  37
      FUNCTION  DNSOL ( M )                                                     DNSOL    2
C                                                                               DNSOL    3
C              CALLED BY DHILL, DSHDLU, AND DREFLT.  GIVES DIRECT NORMAL        DNSOL    4
C              SOLAR INTENSITY IN LUMENS/SF FOR CIE STANDARD CLEAR SKY.         DNSOL    5
C              SOLIC IS THE EXTRATERRESTRIAL SOLAR ILLUMINANCE IN LUM/SF        DNSOL    6
C              CALCULATED FOR THE FIRST DAY OF EACH MONTH IN SUBR. DCOF.        DNSOL    7
C                                                                               DNSOL    8
      COMMON  /DAYLT/ NDAYCF,IPHS,IZ,IHIT,MHHIT,IL,RHOAV,ATOT,ARHTOT,           /DAYLT/  2
     1                AR(3),AP(3),ARH(3),ARHP(3),NPH,NTH,WC(3),TMULT,           /DAYLT/  3
     2                TSOLNM,TVISDF,FRUP,ISHLOC,NWTOT,RHOCW,RHOFW,WAREA,        /DAYLT/  4
     3                IMREF,PHSUN,THSUN,PHSUND,THSUND,THSMIN,PHSMIN,            /DAYLT/  5
     4                THSMAX,PHSMAX,THSDEL,PHSDEL,H,NTHS,NPHS,NDFC,LWDC,        /DAYLT/  6
     5                BETA,W,IBZ,IWZ,ZENL,JZD,WBACLU(2,2),PF(7,5),              /DAYLT/  7
     6                VIEWVC(3),GLRNDX(2),WDAYIL(2,2),BACLUM(2),ITF(3),         /DAYLT/  8
     7                RDAYIL(2),RBACLU(2),GLRNEW(2),ETACLD,CDIRLW(24),          /DAYLT/  9
     8                CDIFLW(24),ODIFLW(24),SOLIC(12),TFAC,SPHSUN,              /DAYLT/ 10
     9                CPHSUN,PHWN,THWN,SPHWN,CPHWN,TOTIL(2),ATMMOI(12),         /DAYLT/ 11
     1                ATMTUR(12),XRAN,ALFAD,THRAT,PHRAT,SETPNT(2),              /DAYLT/ 12
     2                IZLSG,IZLSH,IZLSJM,IZLSJY,IZDREP,FPHRP(2),ZFTOT,          /DAYLT/ 13
     3                EINTSK(2,12,24),EINTSU(2,12,24),EDIRSK(2,12,24),          VISBL    2
     4                EDIRSU(2,12,24),FLCWSK(2,12),FLCWSU(2,12),                VISBL    3
     5                FLFWSK(2,12),FLFWSU(2,12),GILSK(2,10),GILSU(2,10),        VISBL    4
     6                WLUMSK(2,11,24),WLUMSU(2,11,24),AVWLSK(2,12,24),          VISBL    5
     7                AVWLSU(2,12,24),CHILSK(24),CHILSU(24),OHILSK(24),         VISBL    6
     8                DFSKHR(2,2),DFSUHR(2,2),SFSKHR(2,2),SFSUHR(2,2),          /DAYLT/ 19
     9                BFSKHR(2,2),BFSUHR(2,2),HISUNF,CHISKF,OHISKF,IZLSM        44d5br   1
      COMMON  /DAYL1/  ATMTU, ATMMO, TAU1                                       /DAYLT/ 21
     1               , TVISB, TH, PH, RAY(3), WNORM(3), TVISBR                  /DAYLT/ 22
      COMMON  /LOCALD/ STALAT, STALON, ITIMZ, BAZIM, BALTIT,                    /LOCALD/ 2
     1                 SSTALA, CSTALA, TSTALA, SBAZIM, CBAZIM                   /LOCALD/ 3
     2                 ,BXORG, BYORG, SHCOEF, TP1, TP2, WSTP1, WSTP2,           /LOCALD/ 4
     3                 WSHGT,WSHGTL(12),ISREFL,IHOLX                            HOLID1   2
      DIMENSION LOCALD(32)                                                      HOLID1   3
      EQUIVALENCE      (LOCALD(1),STALAT)                                       /LOCALD/ 7
      COMMON /TIME  / IDOY, IDOW, IDSTF, ISCHR, ISCDAY, iDSdates(6),            -044e5r  1
     1                IMO, IDAY, IYR, IHR, CLOCK(10), IDSFLG,                   HOLID1   4
     2                MONDSC(12), MONLEN(12), MONSDA(12), IEODMR                /TIME/   4
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
C                                                                               DNSOL   13
C              OPTICAL AIR MASS CORRECTED FOR BUILDING ALTITUDE                 DNSOL   14
C                                                                               DNSOL   15
      AM     = (1. - 0.1 * BALTIT / 3281.) /                                    DNSOL   16
     1     ( SPHSUN + 0.15 / (H + 3.885) ** 1.253 )                             DNSOL   17
      ABARS=1.4899-2.1099*CPHSUN+0.6322*COS(2.*PHSUN)+                          DNSOL   18
     &      0.0252*COS(3.*PHSUN)-1.0022*SPHSUN+                                 DNSOL   19
     &      1.0077*SIN(2.*PHSUN)-0.2606*SIN(3.*PHSUN)                           DNSOL   20
      BC=AMIN1(0.2,BETA)                                                        DNSOL   21
C              LUMINOUS EFFICACY                                                DNSOL   22
      EFFLUM=(99.4+4.7*W-52.4*BC)*(1.-EXP((24.*BC-8.)*PHSUN))                   DNSOL   23
C              93.73 BELOW IS EXTRATERRESTRIAL LUM EFFICACY (LM/W)              DNSOL   24
      DNSOL=EFFLUM*(SOLIC(M)/93.73)*EXP(-AM*TFAC*ABARS)                         DNSOL   25
C                                                                               DNSOL   26
      RETURN                                                                    DNSOL   27
      END                                                                       DNSOL   28
      FUNCTION  DPFAC (X, Y)                                                    DPFAC    2
C                                                                               DPFAC    3
C              CALLED BY DCOF.  BY TABLE INTERPOLATION, EVALUATES THE           DPFAC    4
C              HOPKINSON POSITION FACTOR USED IN GLARE CALCULATION              DPFAC    5
C              (HOPKINSON, PETHERBRIDGE, AND LONGMORE -- DAYLIGHTING,           DPFAC    6
C              LONDON, 1966, PP 307, 323).  X (Y) IS THE LATERAL                DPFAC    7
C              (VERTICAL) DISTANCE OF LUMINOUS WINDOW ELEMENT FROM              DPFAC    8
C              HORIZONTAL LINE OF VISION, DIVIDED BY HORIZONTAL DISTANCE        DPFAC    9
C              FROM EYE OF OBSERVER. THE ARRAY PF CONTAINS VALUES OF            DPFAC   10
C              THE POSITION FACTOR FOR X = 0, 0.5, 1.0, 1.5, 2.0, 2.5,          DPFAC   11
C              AND 3.0 AND Y = 0, 0.5, 1.0, 1.5, 2.0.                           DPFAC   12
C                                                                               DPFAC   13
      COMMON  /DAYLT/ NDAYCF,IPHS,IZ,IHIT,MHHIT,IL,RHOAV,ATOT,ARHTOT,           /DAYLT/  2
     1                AR(3),AP(3),ARH(3),ARHP(3),NPH,NTH,WC(3),TMULT,           /DAYLT/  3
     2                TSOLNM,TVISDF,FRUP,ISHLOC,NWTOT,RHOCW,RHOFW,WAREA,        /DAYLT/  4
     3                IMREF,PHSUN,THSUN,PHSUND,THSUND,THSMIN,PHSMIN,            /DAYLT/  5
     4                THSMAX,PHSMAX,THSDEL,PHSDEL,H,NTHS,NPHS,NDFC,LWDC,        /DAYLT/  6
     5                BETA,W,IBZ,IWZ,ZENL,JZD,WBACLU(2,2),PF(7,5),              /DAYLT/  7
     6                VIEWVC(3),GLRNDX(2),WDAYIL(2,2),BACLUM(2),ITF(3),         /DAYLT/  8
     7                RDAYIL(2),RBACLU(2),GLRNEW(2),ETACLD,CDIRLW(24),          /DAYLT/  9
     8                CDIFLW(24),ODIFLW(24),SOLIC(12),TFAC,SPHSUN,              /DAYLT/ 10
     9                CPHSUN,PHWN,THWN,SPHWN,CPHWN,TOTIL(2),ATMMOI(12),         /DAYLT/ 11
     1                ATMTUR(12),XRAN,ALFAD,THRAT,PHRAT,SETPNT(2),              /DAYLT/ 12
     2                IZLSG,IZLSH,IZLSJM,IZLSJY,IZDREP,FPHRP(2),ZFTOT,          /DAYLT/ 13
     3                EINTSK(2,12,24),EINTSU(2,12,24),EDIRSK(2,12,24),          VISBL    2
     4                EDIRSU(2,12,24),FLCWSK(2,12),FLCWSU(2,12),                VISBL    3
     5                FLFWSK(2,12),FLFWSU(2,12),GILSK(2,10),GILSU(2,10),        VISBL    4
     6                WLUMSK(2,11,24),WLUMSU(2,11,24),AVWLSK(2,12,24),          VISBL    5
     7                AVWLSU(2,12,24),CHILSK(24),CHILSU(24),OHILSK(24),         VISBL    6
     8                DFSKHR(2,2),DFSUHR(2,2),SFSKHR(2,2),SFSUHR(2,2),          /DAYLT/ 19
     9                BFSKHR(2,2),BFSUHR(2,2),HISUNF,CHISKF,OHISKF,IZLSM        44d5br   1
      COMMON  /DAYL1/  ATMTU, ATMMO, TAU1                                       /DAYLT/ 21
     1               , TVISB, TH, PH, RAY(3), WNORM(3), TVISBR                  /DAYLT/ 22
C                                                                               DPFAC   15
      DPFAC  = 0.                                                               DPFAC   16
      IF (X.LT.0.0.OR.X.GE.3.0) RETURN                                          DPFAC   17
      IF (Y.LT.0.0.OR.Y.GE.2.0) RETURN                                          DPFAC   18
      IX     = 1 + INT(2.*X)                                                    DPFAC   19
      IY     = 1 + INT(2.*Y)                                                    DPFAC   20
      X1     = 0.5 * ( FLOAT(IX-1) )                                            DPFAC   21
      Y1     = 0.5 * ( FLOAT(IY-1) )                                            DPFAC   22
      FA     = PF(IX,IY) + 2. * (X-X1) * ( PF(IX+1,IY) - PF(IX,IY) )            DPFAC   23
      FB = PF(IX,IY+1) + 2. * (X-X1) * ( PF(IX+1,IY+1) - PF(IX,IY+1) )          DPFAC   24
      DPFAC  = FA + 2. * (Y-Y1) * (FB - FA)                                     DPFAC   25
      RETURN                                                                    DPFAC   26
      END                                                                       DPFAC   27
      SUBROUTINE DPIERC (V1, V2, V3, R1, RN, IPIERC)                            DPIERC   2
C                                                                               DPIERC   3
C              CALLED BY DCOF (TO DETERMINE IF SUN VISIBLE FROM                 DPIERC   4
C              REFERENCE POINT) AND DHITSH (TO FIND INTERSECTIONS               DPIERC   5
C              WITH SHADING SURFACES).                                          DPIERC   6
C              RETURNS 0 IF THE LINE THROUGH POINT R1                           DPIERC   7
C              IN DIRECTION OF UNIT VECTOR RN DOES NOT INTERSECT THE            DPIERC   8
C              THE RECTANGULAR AREA DEFINED BY                                  DPIERC   9
C              VERTICES V1, V2, AND V3, WITH NORMAL (V3-V2)X(V1-V2).            DPIERC  10
C              RETURNS 1 (-1) IF FRONT (BACK) OF THE RECTANGLE IS               DPIERC  11
C              INTERSECTED.                                                     DPIERC  12
C                                                                               DPIERC  13
      external  DDOT                                                            DPIERC  14
c                                                                               DPIERC  15
      DIMENSION V1(3), V2(3), V3(3), R1(3), RN(3), A(3), B(3), BA(3),           DPIERC  16
     1          C(3)                                                            DPIERC  17
C                                                                               DPIERC  18
      IPIERC = 0                                                                DPIERC  19
C                                                                               DPIERC  20
C              VECTORS FROM V2 TO V1 AND V2 TO V3                               DPIERC  21
C                                                                               DPIERC  22
      DO 10 I= 1,3                                                              DPIERC  23
      A(I)   = V1(I) - V2(I)                                                    DPIERC  24
   10 B(I)   = V3(I) - V2(I)                                                    DPIERC  25
C                                                                               DPIERC  26
C              VECTOR NORMAL TO RECTANGLE                                       DPIERC  27
C                                                                               DPIERC  28
      CALL DCROSS ( B, A, BA )                                                  DPIERC  29
C                                                                               DPIERC  30
C              SCALE FACTOR                                                     DPIERC  31
C                                                                               DPIERC  32
      F1     = 0.                                                               DPIERC  33
      F2     = 0.                                                               DPIERC  34
      DO 30 I = 1,3                                                             DPIERC  35
      F1     = F1 + BA(I) * (V2(I) - R1(I))                                     DPIERC  36
   30 F2     = F2 + BA(I) * RN(I)                                               DPIERC  37
      IF (F2.EQ.0.) RETURN                                                      DPIERC  38
      SCALE  = F1 / F2                                                          DPIERC  39
C              2.1E: SKIP SURFACES THAT RN POINTS AWAY FROM                     DPIERC  40
      IF(SCALE.LE.0.0) RETURN                                                   DPIERC  41
C                                                                               DPIERC  42
C              VECTOR, C, FROM V2 TO POINT THAT RAY ALONG RN INTERSECTS         DPIERC  43
C              PLANE OF RECTANGLE. C=R1+RN*((BXA).(V2-R1)/(BXA).RN)-V2.         DPIERC  44
C                                                                               DPIERC  45
      DO 40 I = 1,3                                                             DPIERC  46
   40 C(I)   = R1(I) + RN(I) * SCALE - V2(I)                                    DPIERC  47
C                                                                               DPIERC  48
C              INTERSECTION POINT, C, IS INSIDE RECTANGLE IF                    DPIERC  49
C              0 LT C.B LT B.B AND 0 LT C.A LT A.A                              DPIERC  50
C                                                                               DPIERC  51
      DOTCB  = DDOT (C, B)                                                      DPIERC  52
      IF (DOTCB.LT.0.) RETURN                                                   DPIERC  53
      IF (DOTCB.GT.DDOT(B,B)) RETURN                                            DPIERC  54
      DOTCA  = DDOT (C, A)                                                      DPIERC  55
      IF (DOTCA.LT.0.) RETURN                                                   DPIERC  56
      IF (DOTCA.GT.DDOT(A,A)) RETURN                                            DPIERC  57
      IPIERC = 1                                                                DPIERC  58
      IF (DDOT(RN, BA).GT.0.) IPIERC = -1                                       DPIERC  59
      RETURN                                                                    DPIERC  60
      END                                                                       DPIERC  61
      SUBROUTINE  DRAND (X)                                                     DRAND    2
C                                                                               DRAND    3
C              CALLED BY CALEXT, DINTIL, AND DLTSYS.  GENERATES A               DRAND    4
C              RANDOM NUMBER BETWEEN 0 AND 1.  INITIAL VALUE OF X IS            DRAND    5
C              SET AS XRAN IN DATLDS.  (FROM MEISSNER AND ORGANICK,             DRAND    6
C              FORTRAN 77).                                                     DRAND    7
C                                                                               DRAND    8
      DATA K, J, M, RM / 5701, 3612, 566927, 566927.0 /                         DRAND    9
C                                                                               DRAND   10
      IX     = INT (X * RM)                                                     DRAND   11
      IRAND  = MOD (J * IX + K, M)                                              DRAND   12
      X      = (FLOAT (IRAND) + 0.5) / RM                                       DRAND   13
      RETURN                                                                    DRAND   14
      END                                                                       DRAND   15
      SUBROUTINE  DREFLT(ICALBLD)                                               VISBL  812
C                                                                               DREFLT   3
C              CALLED FROM DCOF FOR EACH WINDOW AND REF PT IN A DAYLIT          DREFLT   4
C              SPACE, FOR EACH SUN POSITION.                                    DREFLT   5
C              CALCULATES ILLUMINANCE, EINT, AT REFERENCE POINT DUE             DREFLT   6
C              TO INTERNALLY REFLECTED LIGHT BY INTEGRATING TO DETERMINE        DREFLT   7
C              THE AMOUNT OF FLUX FROM SKY AND GROUND TRANSMITTED               DREFLT   8
C              THROUGH THE CENTER OF THE WINDOW AND THEN REFLECTING THIS        DREFLT   9
C              LIGHT FROM THE INSIDE SURFACES OF THE SPACE.  THE SPLIT-         DREFLT  10
C              FLUX METHOD IS USED (LYNES, PRINCIPLES OF NATURAL LTG,           DREFLT  11
C              1968, P. 129).  EINT IS DETERMINED FOR CLEAR AND OVERCAST        DREFLT  12
C              SKIES AND FOR WINDOWS WITH AND WITHOUT SHADES.                   DREFLT  13
C                                                                               DREFLT  14
C              ALSO FINDS LUMINANCE, WLUM, OF WINDOW WITH SHADE                 VISBL  813
C              FOR CLEAR AND OVERCAST SKIES.                                    VISBL  814
C                                                                               DREFLT  18
C              THE EFFECT OF EXTERNAL OBSTRUCTIONS (BUILDING-SHADES) IS         DREFLT  19
C              TAKEN INTO ACCOUNT                                               DREFLT  20
C                                                                               DREFLT  21
      COMMON  /SUND/   ISUNUP, GUNDOG, HORANG, TDECLN, EQTIME, SOLCON,          /SUND/   2
     1                 ATMEXT, SKYDFF, RAYCOS(3), RDN,                          /SUND/   3
     2                 BSUN, DECLN, CD, SD, FSUNUP                              /SUND/   4
      COMMON /DAYL2/ TDIRDIR,TDIRDIF,TDIFDIF                                    /DAYL2/  2
      COMMON  /CONST/  DTOR, PIOVR2, PIOVR4, IBLNK, UNDEF, IUNDEF,              /CONST/  2
     1                 UNFILD, URAD, DEFIFR, DEFCFR, DEFINC, KWBTU              /CONST/  3
      REAL             KWBTU                                                    /CONST/  4
      COMMON  /DAYLT/ NDAYCF,IPHS,IZ,IHIT,MHHIT,IL,RHOAV,ATOT,ARHTOT,           /DAYLT/  2
     1                AR(3),AP(3),ARH(3),ARHP(3),NPH,NTH,WC(3),TMULT,           /DAYLT/  3
     2                TSOLNM,TVISDF,FRUP,ISHLOC,NWTOT,RHOCW,RHOFW,WAREA,        /DAYLT/  4
     3                IMREF,PHSUN,THSUN,PHSUND,THSUND,THSMIN,PHSMIN,            /DAYLT/  5
     4                THSMAX,PHSMAX,THSDEL,PHSDEL,H,NTHS,NPHS,NDFC,LWDC,        /DAYLT/  6
     5                BETA,W,IBZ,IWZ,ZENL,JZD,WBACLU(2,2),PF(7,5),              /DAYLT/  7
     6                VIEWVC(3),GLRNDX(2),WDAYIL(2,2),BACLUM(2),ITF(3),         /DAYLT/  8
     7                RDAYIL(2),RBACLU(2),GLRNEW(2),ETACLD,CDIRLW(24),          /DAYLT/  9
     8                CDIFLW(24),ODIFLW(24),SOLIC(12),TFAC,SPHSUN,              /DAYLT/ 10
     9                CPHSUN,PHWN,THWN,SPHWN,CPHWN,TOTIL(2),ATMMOI(12),         /DAYLT/ 11
     1                ATMTUR(12),XRAN,ALFAD,THRAT,PHRAT,SETPNT(2),              /DAYLT/ 12
     2                IZLSG,IZLSH,IZLSJM,IZLSJY,IZDREP,FPHRP(2),ZFTOT,          /DAYLT/ 13
     3                EINTSK(2,12,24),EINTSU(2,12,24),EDIRSK(2,12,24),          VISBL    2
     4                EDIRSU(2,12,24),FLCWSK(2,12),FLCWSU(2,12),                VISBL    3
     5                FLFWSK(2,12),FLFWSU(2,12),GILSK(2,10),GILSU(2,10),        VISBL    4
     6                WLUMSK(2,11,24),WLUMSU(2,11,24),AVWLSK(2,12,24),          VISBL    5
     7                AVWLSU(2,12,24),CHILSK(24),CHILSU(24),OHILSK(24),         VISBL    6
     8                DFSKHR(2,2),DFSUHR(2,2),SFSKHR(2,2),SFSUHR(2,2),          /DAYLT/ 19
     9                BFSKHR(2,2),BFSUHR(2,2),HISUNF,CHISKF,OHISKF,IZLSM        44d5br   1
      COMMON  /DAYL1/  ATMTU, ATMMO, TAU1                                       /DAYLT/ 21
     1               , TVISB, TH, PH, RAY(3), WNORM(3), TVISBR                  /DAYLT/ 22
      COMMON  /LENS/   MWFLEN, MRLEN, MSHLEN, MWNLEN, MDRLEN, MXLEN,            /LENS/   2
     1                 MULEN, MZLEN, MIWLEN, MFLLEN,                            HRr      5
     2                 LMTB, LLDSOU, MSTLEN, LSTFT, MWLLEN                      BLIND    1
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     BLIND    2
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        FLOOR1   3
      COMMON  /SIZE/   LENGTH,NVECT,NSCHED,NWF,NWPAR,NCONS,NGT,NWL,NGEO,        BLIND    5
     1                 NGSHAD, NWIN, NDOOR, NEW, NUG, NSP, NIWP, NIW,           /SIZE/   3
     2                 NFL, NDESDY, NBR, NOTH, NITH, NOPSRF,                    HRr     10
     3                 NSURF, NSSHD, NSHTOT                                     GEO1     1
      COMMON /TIME  / IDOY, IDOW, IDSTF, ISCHR, ISCDAY, iDSdates(6),            -044e5r  1
     1                IMO, IDAY, IYR, IHR, CLOCK(10), IDSFLG,                   HOLID1   4
     2                MONDSC(12), MONLEN(12), MONSDA(12), IEODMR                /TIME/   4
      COMMON        // AA(75 000 000)                                           -048ar   1
      INTEGER          IA(75 000 000)                                           -048ar   2
      EQUIVALENCE  (IA(1), AA(1))                                               //       4
      DIMENSION ZSK(2),ZSU(2),U(3),IHITM(16,9),MHM(16,9)                        DREFLT  29
      DIMENSION TDIRDIRBLD(16,9,11), TDIRDIFBLD(16,9,11)                        VISBL  817
      DATA PI/3.1415926/                                                        DREFLT  30
      DATA NPHMAX/16/, NTHMAX/9/                                                DREFLT  31
C                                                                               DREFLT  32
C                                                                               DREFLT  34
C              INITIALIZE WINDOW LUMINANCE AND FLUXES FOR SPLIT-FLUX            DREFLT  35
C              CALCULATION                                                      DREFLT  36
C                                                                               DREFLT  37
      DO I=1,2                                                                  VISBL  818
         DO J=1,11                                                              VISBL  819
            WLUMSK(I,J,IHR) = 0.                                                VISBL  820
            WLUMSU(I,J,IHR) = 0.                                                VISBL  821
         ENDDO                                                                  VISBL  822
         DO J=1,12                                                              VISBL  823
            FLFWSK(I,J) = 0.                                                    VISBL  824
            FLFWSU(I,J) = 0.                                                    VISBL  825
            FLCWSK(I,J) = 0.                                                    VISBL  826
            FLCWSU(I,J) = 0.                                                    VISBL  827
         ENDDO                                                                  VISBL  828
      ENDDO                                                                     VISBL  829
C                                                                               DREFLT  48
C              DIVIDE SKY AND GROUND INTO ELEMENTS OF ALTITUDE PH AND           DREFLT  49
C              AND AZIMUTH TH, AND ADD THE CONTRIBUTION OF LIGHT COMING         DREFLT  50
C              FROM EACH ELEMENT TO THE TRANSMITTED FLUX AT THE                 DREFLT  51
C              CENTER OF THE WINDOW.                                            DREFLT  52
C                                                                               DREFLT  53
      TMULT  = 1.0                                                              DREFLT  54
      DPH    = PI / FLOAT(NPHMAX)                                               DREFLT  55
C                                                                               DREFLT  56
C              ALTITUDE INTEGRATION                                             DREFLT  57
C                                                                               DREFLT  58
      DO 8100 IPH = 1,NPHMAX                                                    DREFLT  59
      PH     = (FLOAT(IPH) - 0.5) * DPH - PIOVR2                                DREFLT  60
      IF( PH.GE.(PHWN + PIOVR2) .OR. PH.LE.(PHWN - PIOVR2) ) GO TO 8100         DREFLT  61
      SPH    = SIN(PH)                                                          DREFLT  62
      CPH    = COS(PH)                                                          DREFLT  63
C              THIRD COMPONENT OF UNIT VECTOR IN (TH,PH) DIRECTION              DREFLT  64
      U(3)   = SPH                                                              DREFLT  65
C              LIMITS OF AZIMUTH INTEGRATION                                    DREFLT  66
      CALL DTHLIM ( PH, THWN, PHWN, THMIN, THMAX )                              DREFLT  67
      DTH    = ( THMAX - THMIN ) / FLOAT(NTHMAX)                                DREFLT  68
      DA     = CPH * DTH * DPH                                                  DREFLT  69
C                                                                               DREFLT  70
C              AZIMUTH INTEGRATION                                              DREFLT  71
C                                                                               DREFLT  72
      DO 8200 ITH = 1,NTHMAX                                                    DREFLT  73
      TH     = THMIN + (FLOAT(ITH) - 0.5) * DTH                                 DREFLT  74
      U(1)   = CPH * COS(TH)                                                    DREFLT  75
      U(2)   = CPH * SIN(TH)                                                    DREFLT  76
C              COSINE OF ANGLE OF INCIDENCE OF LIGHT FROM SKY OR GROUND         DREFLT  77
C              ELEMENT                                                          DREFLT  78
      COSB   = SPH * SPHWN + CPH * CPHWN * COS(TH-THWN)                         DREFLT  79
      IF( COSB.LT.0.0 ) GO TO 8200                                              DREFLT  80
C              TRANSMITTANCE OF WINDOW (EXCLUDING SHADES) FOR THIS COSB         DREFLT  81
C              (ASSUMED TO HAVE SAME DEPENDENCE ON COSB AS TOTAL                DREFLT  82
C              SOLAR SPECTRUM).  ASSUMES NORMAL TVIS = 1.0.                     DREFLT  83
      ANGINCD = ACOS(COSB)/DTOR                                                 -044d5 769
      <SOLARANGLEINDEX>= INT(ANGINCD/10.0) + 1                                  -044d5 770
      <SOLARANGLEINC>  =     ANGINCD/10.0  - FLOAT(INT(ANGINCD/10.0))           -044d5 771
      IF(<WINDOW-TYPE> .GT. 1) THEN                                             -044d5 772
C        Window is a Domed Skylight, with transmittance multipler defined       -044d5 773
C         with arrays <SKY-TRANS-ANG> & <SKY-TRANS-MULT>                        -044d5 774
         DO II=1,10                                                             -044d5 775
           IF(<SKY-TRANS-ANG> .GE. ANGINCD)  EXIT                               -044d5 776
         ENDDO                                                                  -044d5 777
         t1 = <SKY-TRANS-MULT>                                                  -044d5 778
         t2 = <SKY-TRANS-ANG>                                                   -044d5 779
         II = II - 1                                                            -044d5 780
         TVISBR = <SKY-TRANS-MULT> +(t1-<SKY-TRANS-MULT>)                       -044d5 781
     $               *(t2-ANGINCD)/(t2-<SKY-TRANS-ANG>)                         -044d5 782
      ELSE                                                                      -044d5 783
C       Not a domed skylight, transmittance multiplier defined for              -044d5 784
C        standard glass or for the library entry curve fit                      -044d5 785
        if(<IGTYP>.EQ.-1) then                                                  -044d5 786
        TVISBR = (1./TSOLNM)*AMAX1(0.,<CAM1> + COSB*                            -044d5 787
     $        ( <CAM2> + COSB * ( <CAM3> + COSB * <CAM4> )))                    -044d5 788
        else                                                                    -044d5 789
          tvisbr = Get_WinLib_TVIS(cosb,1)                                      -044d5d 22
        endif                                                                   -044d5 799
      ENDIF                                                                     -044d5 800
C   If a Tubular Device, alter transmittance by user entry or calculated        -044d5 801
C     transmittance of tube using the following equation                        -044d5 802
C     Tubular Well Eff = DiffuserTrans * TubeRefl^(4/pi*AspectRatio*Tan(inc))   -044d5 803
      IF(<WINDOW-TYPE> .EQ. 3) THEN                                             -044d5 804
        If (<TUBE-EFF-METHOD>.EQ.0) Then                                        -044d5 805
         TubeMult = <TUBE-EFFICIENCY>                                           -044d5 806
        Else                                                                    -044d5 807
         TubeMult = <TUBE-DIFF-TRANS> * <TUBE-VIS-REFLECT> **                   -044d5 808
     $       (1.27324*<TUBE-LENGTH>/                                            -044d5 809
     $          <TUBE-DIAMETER>*TAN(AMIN1(ANGINCD,89.)*DTOR))                   -044d5 810
        Endif                                                                   -044d5 811
         TVISBR = TVISBR * TubeMult                                             -044d5 812
      ENDIF                                                                     -044d5 813
C**************** window: WINDOW-SPEC-FN with FNTYPE=6 *****************        DREFLT  90
      IF( <MWISPFN> .GT. 0 )   CALL  FINTL( <MWISPFN>, 6. )                     DREFLT  91
C***********************************************************************        DREFLT  92
C              INITIALIZE LUMENS/SF INCIDENT ON WINDOW FOR THIS                 DREFLT  93
C              SKY-GROUND ELEMENT FOR CLEAR AND OVERCAST SKY.                   DREFLT  94
      DO 8230 I = 1,2                                                           DREFLT  95
      ZSK(I) = 0.                                                               DREFLT  96
      ZSU(I) = 0.                                                               DREFLT  97
 8230 CONTINUE                                                                  DREFLT  98
      IF (IHR.GT.1) GO TO 8220                                                  DREFLT  99
C              DETERMINE IF RAY INTERSECTS A SHADING SURFACE.  SAVE HIT         DREFLT 100
C              FLAG AND SHADE POINTER.                                          DREFLT 101
      MH=0                                                                      DREFLT 102
      IHIT=0                                                                    DREFLT 103
      IF((<NWISHADE>+<NXSHAD>+NGSHAD+NSSHD).NE.0) CALL DHITSH(WC,U)             DREFLT 104
      IHITM(IPH,ITH) = IHIT                                                     DREFLT 105
      MHM(IPH,ITH) = MH                                                         DREFLT 106
 8220 CONTINUE                                                                  DREFLT 107
      IF (IHITM(IPH,ITH).EQ.0) GO TO 8240                                       DREFLT 108
C              SHADING SURFACE INTERSECTED.                                     DREFLT 109
C              IF LOCAL SHADE HIT, OR BACK OF GLOBAL SHADE HIT,                 DREFLT 110
C              CONTRIBUTION TO TRANSMITTED FLUX                                 DREFLT 111
C              IS ZERO (LUMINANCE OF LOCAL SHADES, LIKE FINS AND                DREFLT 112
C              OVERHANGS, IS ASSUMED TO BE ZERO)                                DREFLT 113
      IF (IHITM(IPH,ITH).LT.4) GO TO 8250                                       DREFLT 114
C              FRONT OF A GLOBAL SHADE WAS HIT                                  DREFLT 115
      MH     = MHM(IPH,ITH)                                                     DREFLT 116
      ZSK(1) = AA(<KDSLUM>+IHR-1) * COSB * DA                                   DREFLT 117
      ZSU(1) = AA(<KDSLUM>+NDFC+IHR-1) * COSB * DA                              DREFLT 118
C              HERE AND BELOW, DO OVERCAST DAY ONLY FOR FIRST SUN POSI-         DREFLT 119
C              TION (IHR = 1, SET IN DCOF) SINCE SKY LUM DISTRIBUTION           DREFLT 120
C              IS INDEPENDENT OF POSITION OF SUN IN THIS CASE                   DREFLT 121
      IF(IHR.EQ.1)  ZSK(2) = AA(<KDSLUM>+2*NDFC) * COSB * DA                    DREFLT 122
      GO TO 8250                                                                DREFLT 123
 8240 CONTINUE                                                                  DREFLT 124
C              NO SHADING SURFACE WAS INTERSECTED.  CONTRIBUTION IS FROM        DREFLT 125
C              SKY IF PH GT 0, FROM GROUND IF PH LT 0.                          DREFLT 126
      IF (PH.LE.0.) GO TO 8245                                                  DREFLT 127
      DO 8241 I=1,2                                                             DREFLT 128
      IF(I.EQ.2.AND.IHR.GT.1) GO TO 8241                                        DREFLT 129
      IDT = I                                                                   DREFLT 130
      ZSK(I) = DSKYLU (IDT,TH,PH) * COSB * DA                                   DREFLT 131
 8241 CONTINUE                                                                  DREFLT 132
      GO TO 8250                                                                DREFLT 133
 8245 DO 8246 I=1,2                                                             DREFLT 134
      IF(I.EQ.2.AND.IHR.GT.1) GO TO 8246                                        DREFLT 135
C              BELOW, LUMINANCE OF GROUND IN CD/SF IS ILLUMINANCE               DREFLT 136
C              ON GROUND IN LUMENS/SF TIMES GROUND REFLECTANCE                  DREFLT 137
C              (WHICH GIVES FT-LAMBERTS) DIVIDED BY PI.                         DREFLT 138
      ZSK(I) = ( GILSK(I,IPHS) * <GNDREF> / PI ) * COSB * DA                    DREFLT 139
      ZSU(I) = ( GILSU(I,IPHS) * <GNDREF> / PI ) * COSB * DA                    DREFLT 140
 8246 CONTINUE                                                                  DREFLT 141
 8250 CONTINUE                                                                  DREFLT 142
C                                                                               DREFLT 143
C              BARE GLASS, CLEAR AND OVERCAST DAYS:                             VISBL  830
C              INCREMENT FLUX ENTERING SPACE.                                   VISBL  831
C              INCREMENT WINDOW LUMINANCE (CD/SF)                               VISBL  832
C              FLCW--(I,J) = PART OF INCOMING FLUX (IN LUMENS) WHICH            VISBL  833
C              GOES UP TO CEILING AND UPPER PART OF WALLS. FLFW-- =             VISBL  834
C              PART WHICH GOES DOWN TO FLOOR AND LOWER PART OF WALLS            VISBL  835
C              (I=1--CLEAR DAY, 2--OVERCAST, J=1--BARE WINDOW, 2--WITH          VISBL  836
C              SHADES)                                                          VISBL  837
C                                                                               VISBL  838
C              TRANSMITTANCE MULTIPLIER                                         VISBL  839
      IF(ISHLOC.EQ.1) TMULT = TVISBR                                            VISBL  840
      DO 8260 I=1,2                                                             VISBL  841
      IF(I.EQ.2.AND.IHR.GT.1) GO TO 8260                                        VISBL  842
      ZSKI = ZSK(I)                                                             VISBL  843
      ZSUI = ZSU(I)                                                             VISBL  844
      IF (PH.LT.0.) GO TO 8261                                                  VISBL  845
      FLFWSK(I,1) = FLFWSK(I,1) + ZSKI * TVISBR                                 VISBL  846
      FLFWSU(I,1) = FLFWSU(I,1) + ZSUI * TVISBR                                 VISBL  847
      GO TO 8262                                                                VISBL  848
 8261 CONTINUE                                                                  VISBL  849
      FLCWSK(I,1) = FLCWSK(I,1) + ZSKI * TVISBR                                 VISBL  850
      FLCWSU(I,1) = FLCWSU(I,1) + ZSUI * TVISBR                                 VISBL  851
 8262 CONTINUE                                                                  VISBL  852
 8260 CONTINUE                                                                  VISBL  853
C                                                                               VISBL  854
C              WINDOW WITH SHADES, CLEAR AND OVERCAST DAYS:                     VISBL  855
C              INCREMENT FLUX ENTERING SPACE AND WINDOW LUMINANCE.              VISBL  856
C              FOR NON-BLIND SHADES AND FOR THE SLATS OF BLIND-TYPE             VISBL  857
C              SHADES A FLUX FRACTION, FRUP (DETERMINED BY WINDOW TILT),        VISBL  858
C              GOES UP TOWARD CEILING AND UPPER PART OF WALLS, AND 1-FRUP       VISBL  859
C              GOES DOWN TOWARD FLOOR AND LOWER PART OF WALLS.                  VISBL  860
C              THE RADIATION THAT GOES BETWEEN THE SLATS OF BLIND-TYPE          VISBL  861
C              SHADES CONTRIBUTES TO EITHER THE UP OR DOWN FLUX, BUT NOT        VISBL  862
C              BOTH, AND DOES NOT CONTRIBUTE TO THE WINDOW LUMINANCE.           VISBL  863
C              (NON-BLIND WINDOW SHADES AND THE SLATS OF BLIND-TYPE SHADES      VISBL  864
C              ARE TAKEN TO BE PERFECT DIFFUSERS. NON-BLIND WINDOW SHADES       VISBL  865
C              ARE ASSUMED TO HAVE 100% TRANSMITTANCE, WHICH IS MULTIPLIED      VISBL  866
C              LATER IN THE HOURLY LOOP BY THE VIS-TRANS-SCH VALUE. THE         VISBL  867
C              ACTUAL TRANSMITTANCE OF BLIND-TYPE SHADES IS USED, AS            VISBL  868
C              DETERMINED BY CALBLD AS A FUNCTION OF DIRECTION OF INCIDENT      VISBL  869
C              RADIATION ON THE WINDOW, SLAT ANGLE, SLAT GEOMETRY, ETC.).       VISBL  870
C                                                                               VISBL  871
      TMULT1 = TVISBR                                                           VISBL  872
      IF(ISHLOC.EQ.2) TMULT1 = TVISDF                                           VISBL  873
      DO 8265 I=1,2                                                             VISBL  874
      IF(I.EQ.2.AND.IHR.GT.1) GO TO 8265                                        VISBL  875
      ZSKI = ZSK(I)                                                             VISBL  876
      ZSUI = ZSU(I)                                                             VISBL  877
      IF(<IBLDF>.LT.2) THEN                                                     VISBL  878
C              WINDOWS WITH NON-BLIND SHADES                                    VISBL  879
         WLUMSK(I,1,IHR) = WLUMSK(I,1,IHR) + ZSKI * TMULT / PI                  VISBL  880
         WLUMSU(I,1,IHR) = WLUMSU(I,1,IHR) + ZSUI * TMULT / PI                  VISBL  881
         FLFWSK(I,2) = FLFWSK(I,2) + ZSKI * TMULT1 * (1. - FRUP)                VISBL  882
         FLFWSU(I,2) = FLFWSU(I,2) + ZSUI * TMULT1 * (1. - FRUP)                VISBL  883
         FLCWSK(I,2) = FLCWSK(I,2) + ZSKI * TMULT1 * FRUP                       VISBL  884
         FLCWSU(I,2) = FLCWSU(I,2) + ZSUI * TMULT1 * FRUP                       VISBL  885
      ELSE                                                                      VISBL  886
C              WINDOWS WITH BLIND-TYPE SHADES                                   VISBL  887
C              SKY/GROUND PATCH POSITION FOR USE IN CALBLD                      VISBL  888
C              (SAVE, AND LATER, RESTORE, DCOF VALUE OF SUN POSITION)           VISBL  889
         RAYSAV1 = RAYCOS(1)                                                    VISBL  890
         RAYSAV2 = RAYCOS(2)                                                    VISBL  891
         RAYSAV3 = RAYCOS(3)                                                    VISBL  892
         RAYCOS(3) = SPH                                                        VISBL  893
         RAYCOS(2) = CPH*SIN(TH)                                                VISBL  894
         RAYCOS(1) = CPH*COS(TH)                                                VISBL  895
         DELTANG = (<ANGSLATMAX> - <ANGSLATMIN>)/10.                            VISBL  896
         DO JB = 2,12                                                           VISBL  897
            JBB = JB-1                                                          VISBL  898
C              IF NO ADJUSTABLE LAYER, DO ONLY JB = 2                           VISBL  899
            IF(JB.GE.3.AND.<IBLDF>.LE.2) GO TO 8266                             VISBL  900
            IF(ICALBLD.EQ.0) THEN                                               VISBL  901
               IF(<IBLDF>.EQ.2) THEN                                            VISBL  902
C              FIXED BLIND                                                      VISBL  903
                  CALL CALBLD(2,0,0,0,0)                                        VISBL  904
               ELSE                                                             VISBL  905
C              ADJUSTABLE BLIND                                                 VISBL  906
                  ANGINP = <ANGSLATMIN> + DELTANG*(JB-2)                        VISBL  907
                  CALL CALBLD(3,0,ANGINP,0,0)                                   VISBL  908
               ENDIF                                                            VISBL  909
C              TDIRDIR IS DIRECT-DIRECT VISIBLE TRANSMITTANCE                   VISBL  910
C              (PORTION OF DIRECT VISIBLE RADIATION GOING                       VISBL  911
C              BETWEEN SLATS)                                                   VISBL  912
               TDIRDIRBLD(IPH,ITH,JBB) = TDIRDIR                                VISBL  913
               TDIRDIFBLD(IPH,ITH,JBB) = TDIRDIF                                VISBL  914
            ELSE                                                                VISBL  915
               TDIRDIR = TDIRDIRBLD(IPH,ITH,JBB)                                VISBL  916
               TDIRDIF = TDIRDIFBLD(IPH,ITH,JBB)                                VISBL  917
            ENDIF                                                               VISBL  918
C              WINDOW LUMINANCE, WITH BLINDS, IS DUE TO PORTION OF              VISBL  919
C              INCOMING RADIATION (TDIRDIF)                                     VISBL  920
C              REFLECTED BY THE SLATS INTO THE ROOM                             VISBL  921
            WLUMSK(I,JB-1,IHR) = WLUMSK(I,JB-1,IHR) + ZSKI * TDIRDIF/PI         VISBL  922
            WLUMSU(I,JB-1,IHR) = WLUMSU(I,JB-1,IHR) + ZSUI * TDIRDIF/PI         VISBL  923
C              TDIRDIR PORTION CONTRIBUTES ONLY TO UP OR DOWN FLUX,             VISBL  924
C              BUT NOT BOTH. TDIRDIF PORTION CONTRIBUTES TO UP AND DOWN         VISBL  925
C              FLUX. RADIANCE OF BLINDS IS ASSUMED TO BE ISOTROPIC.             VISBL  926
            FLFWSK(I,JB) = FLFWSK(I,JB) + ZSKI * TDIRDIF * (1. - FRUP)          VISBL  927
            FLFWSU(I,JB) = FLFWSU(I,JB) + ZSUI * TDIRDIF * (1. - FRUP)          VISBL  928
            FLCWSK(I,JB) = FLCWSK(I,JB) + ZSKI * TDIRDIF * FRUP                 VISBL  929
            FLCWSU(I,JB) = FLCWSU(I,JB) + ZSUI * TDIRDIF * FRUP                 VISBL  930
            IF(RAYCOS(3).GT.0.) THEN                                            VISBL  931
               FLFWSK(I,JB) = FLFWSK(I,JB) + ZSKI * TDIRDIR                     VISBL  932
               FLFWSU(I,JB) = FLFWSU(I,JB) + ZSUI * TDIRDIR                     VISBL  933
            ELSE                                                                VISBL  934
               FLCWSK(I,JB) = FLCWSK(I,JB) + ZSKI * TDIRDIR                     VISBL  935
               FLCWSU(I,JB) = FLCWSU(I,JB) + ZSUI * TDIRDIR                     VISBL  936
            ENDIF                                                               VISBL  937
         ENDDO                                                                  VISBL  938
         RAYCOS(1) = RAYSAV1                                                    VISBL  939
         RAYCOS(2) = RAYSAV2                                                    VISBL  940
         RAYCOS(3) = RAYSAV3                                                    VISBL  941
 8266    CONTINUE                                                               VISBL  942
      ENDIF                                                                     VISBL  943
 8265 CONTINUE                                                                  VISBL  944
 8270 CONTINUE                                                                  VISBL  945
 8200 CONTINUE                                                                  DREFLT 190
 8100 CONTINUE                                                                  DREFLT 191
C                                                                               DREFLT 192
C              CALCULATE SKY-RELATED PORTION OF INTERNALLY REFLECTED            DREFLT 193
C              ILLUMINANCE.  THE INSIDE SURFACE AREA, ATOT, AND AVERAGE         DREFLT 194
C              REFLECTANCES, RHOFW, RHOCW, AND RHOAV, WERE CALCULATED IN        DREFLT 195
C              SUBR. DAVREF.                                                    DREFLT 196
C                                                                               DREFLT 197
      DO 8105 I=1,2                                                             DREFLT 198
      IF(I.EQ.2.AND.IHR.GT.1) GO TO 8105                                        DREFLT 199
      DO 8106 J=1,2                                                             DREFLT 200
      EINTSK(I,J,IHR) = ( FLFWSK(I,J)*RHOFW + FLCWSK(I,J)*RHOCW ) *             DREFLT 201
     1                  WAREA / ( ATOT * (1.-RHOAV) )                           DREFLT 202
 8106 CONTINUE                                                                  DREFLT 203
 8105 CONTINUE                                                                  DREFLT 204
C                                                                               DREFLT 205
C              CONTRIBUTION TO FLUX ENTERING SPACE FROM DIRECT SOLAR            DREFLT 206
C              ILLUMINANCE ON WINDOW (CLEAR DAY ONLY)                           DREFLT 207
C                                                                               DREFLT 208
      JJ     = IHR                                                              DREFLT 209
      IF (<WGOLGE>.GE.1.0) GO TO 8150                                           DREFLT 210
C              COS OF ANGLE OF INCIDENCE                                        DREFLT 211
      COSBD  = SPHSUN * SPHWN  +  CPHSUN * CPHWN * COS(THSUN-THWN)              DREFLT 212
      IF (COSBD.LE.0.) GO TO 8150                                               DREFLT 213
C              DIRECT NORMAL SOLAR ILLUM                                        DREFLT 214
      DSUN   = DNSOL (IMREF)                                                    DREFLT 215
C              GLASS TRANSMITTANCE (FOR NORMAL TRANS = 1.0)                     DREFLT 216
      ANGINCD = ACOS(COSBD)/DTOR                                                -044d5 814
      <SOLARANGLEINDEX>= INT(ANGINCD/10.0) + 1                                  -044d5 815
      <SOLARANGLEINC>  =     ANGINCD/10.0  - FLOAT(INT(ANGINCD/10.0))           -044d5 816
      IF(<WINDOW-TYPE> .GT. 1) THEN                                             -044d5 817
C        Window is a Domed Skylight, with transmittance multipler defined       -044d5 818
C         with arrays <SKY-TRANS-ANG> & <SKY-TRANS-MULT>                        -044d5 819
         DO II=1,10                                                             -044d5 820
           IF(<SKY-TRANS-ANG> .GE. ANGINCD)  EXIT                               -044d5 821
         ENDDO                                                                  -044d5 822
         t1 = <SKY-TRANS-MULT>                                                  -044d5 823
         t2 = <SKY-TRANS-ANG>                                                   -044d5 824
         II = II - 1                                                            -044d5 825
         TVISBD = <SKY-TRANS-MULT> +(t1-<SKY-TRANS-MULT>)                       -044d5 826
     $               *(t2-ANGINCD)/(t2-<SKY-TRANS-ANG>)                         -044d5 827
      ELSE                                                                      -044d5 828
C       Not a domed skylight, transmittance multiplier defined for              -044d5 829
C        standard glass or for the library entry curve fit                      -044d5 830
        if(<IGTYP>.EQ.-1) then                                                  -044d5 831
        TVISBD = (1./TSOLNM)*AMAX1(0.,<CAM1> + COSBD*                           -044d5 832
     $        ( <CAM2> + COSBD * ( <CAM3> + COSBD * <CAM4> )))                  -044d5 833
        else                                                                    -044d5 834
          tvisbd = Get_WinLib_TVIS(cosbd,1)                                     -044d5d 23
        endif                                                                   -044d5 844
      ENDIF                                                                     -044d5 845
C   If a Tubular Device, alter transmittance by user entry or calculated        -044d5 846
C     transmittance of tube using the following equation                        -044d5 847
C     Tubular Well Eff = DiffuserTrans * TubeRefl^(4/pi*AspectRatio*Tan(inc))   -044d5 848
      IF(<WINDOW-TYPE> .EQ. 3) THEN                                             -044d5 849
        If (<TUBE-EFF-METHOD>.EQ.0) Then                                        -044d5 850
         TubeMult = <TUBE-EFFICIENCY>                                           -044d5 851
        Else                                                                    -044d5 852
         TubeMult = <TUBE-DIFF-TRANS> * <TUBE-VIS-REFLECT> **                   -044d5 853
     $       (1.27324*<TUBE-LENGTH>/                                            -044d5 854
     $         <TUBE-DIAMETER>*TAN(AMIN1(ANGINCD,89.)*DTOR))                    -044d5 855
        Endif                                                                   -044d5 856
         TVISBD = TVISBD * TubeMult                                             -044d5 857
      ENDIF                                                                     -044d5 858
      IF(ISHLOC.EQ.1) TMULT = TVISBD                                            DREFLT 223
C              MULTIPLY DIRECT NORMAL ILLUM BY INCIDENT ANGLE FACTOR AND        VISBL  946
C              BY FRACTION OF WINDOW THAT IS NOT SHADED.                        VISBL  947
      ZSU1 = DSUN * COSBD * (1. - <WGOLGE>)                                     VISBL  948
C              CONTRIBUTION TO WINDOW LUMINANCE AND DOWNGOING FLUX              VISBL  949
C              -- BARE WINDOW                                                   VISBL  950
      FLFWSU(1,1) = FLFWSU(1,1) + ZSU1 * TVISBD                                 VISBL  951
C              -- WINDOW WITH SHADES                                            VISBL  952
      IF(ISHLOC.EQ.1) TMULT = TVISBD                                            VISBL  953
      TMULT1 = TVISBD                                                           VISBL  954
      IF(ISHLOC.EQ.2) TMULT1 = TVISDF                                           VISBL  955
      IF(<IBLDF>.LT.2) THEN                                                     VISBL  956
C              WINDOWS WITH NON-BLIND SHADES                                    VISBL  957
         WLUMSU(1,1,IHR) = WLUMSU(1,1,IHR) + ZSU1 * TMULT / PI                  VISBL  958
         FLFWSU(1,2) = FLFWSU(1,2) + ZSU1 * TMULT1 * (1.-FRUP)                  VISBL  959
         FLCWSU(1,2) = FLCWSU(1,2) + ZSU1 * TMULT1 * FRUP                       VISBL  960
      ELSE                                                                      VISBL  961
C              WINDOWS WITH BLIND-TYPE SHADES                                   VISBL  962
C              SUN POSITION FOR USE IN CALBLD                                   VISBL  963
         RAYSAV1 = RAYCOS(1)                                                    VISBL  964
         RAYSAV2 = RAYCOS(2)                                                    VISBL  965
         RAYSAV3 = RAYCOS(3)                                                    VISBL  966
         RAYCOS(3) = SPHSUN                                                     VISBL  967
         RAYCOS(2) = CPHSUN*SIN(THSUN)                                          VISBL  968
         RAYCOS(1) = CPHSUN*COS(THSUN)                                          VISBL  969
         DELTANG = (<ANGSLATMAX> - <ANGSLATMIN>)/10.                            VISBL  970
         DO JB = 2,12                                                           VISBL  971
C              IF NO ADJUSTABLE LAYER, DO ONLY JB = 2                           VISBL  972
            IF(JB.GE.3.AND.<IBLDF>.LE.2) GO TO 8151                             VISBL  973
            IF(<IBLDF>.EQ.2) THEN                                               VISBL  974
C              FIXED BLIND                                                      VISBL  975
               CALL CALBLD(2,0,0,0,0)                                           VISBL  976
            ELSE                                                                VISBL  977
C              ADJUSTABLE BLIND                                                 VISBL  978
               ANGINP = <ANGSLATMIN> + DELTANG*(JB-2)                           VISBL  979
C              NOTE: IN FOLLOWING CALL, CALBLD WILL USE RAYCOS OF SUN           VISBL  980
C              CALCULATED IN THE DCOF SUN POSITION LOOP                         VISBL  981
               CALL CALBLD(3,0,ANGINP,0,0)                                      VISBL  982
            ENDIF                                                               VISBL  983
            WLUMSU(1,JB-1,IHR) = WLUMSU(1,JB-1,IHR) + ZSU1 * TDIRDIF/PI         VISBL  984
            FLFWSU(1,JB) = FLFWSU(1,JB) + ZSU1 * (TDIRDIF*(1. - FRUP)           VISBL  985
     1                                           + TDIRDIR)                     VISBL  986
            FLCWSU(1,JB) = FLCWSU(1,JB) + ZSU1 * TDIRDIF * FRUP                 VISBL  987
         ENDDO                                                                  VISBL  988
         RAYCOS(3) = RAYSAV1                                                    VISBL  989
         RAYCOS(2) = RAYSAV2                                                    VISBL  990
         RAYCOS(1) = RAYSAV3                                                    VISBL  991
 8151    CONTINUE                                                               VISBL  992
      ENDIF                                                                     VISBL  993
 8150 CONTINUE                                                                  VISBL  994
C                                                                               VISBL  995
C              CALCULATE SUN-RELATED PORTION OF INTERNALLY REFLECTED            VISBL  996
C              ILLUMINANCE                                                      VISBL  997
C                                                                               VISBL  998
      DO J=1,2                                                                  VISBL  999
         EINTSU(1,J,IHR) = (FLFWSU(1,J)*RHOFW + FLCWSU(1,J)*RHOCW) *            VISBL 1000
     1                  WAREA / ( ATOT*(1.-RHOAV) )                             VISBL 1001
         EINTSU(2,J,IHR) = 0.                                                   VISBL 1002
      ENDDO                                                                     VISBL 1003
      IF(<IBLDF>.GT.2) THEN                                                     VISBL 1004
         DO J=3,12                                                              VISBL 1005
            EINTSU(1,J,IHR) = (FLFWSU(1,J)*RHOFW + FLCWSU(1,J)*RHOCW) *         VISBL 1006
     1                  WAREA / ( ATOT*(1.-RHOAV) )                             VISBL 1007
            EINTSU(2,J,IHR) = 0.                                                VISBL 1008
         ENDDO                                                                  VISBL 1009
      ENDIF                                                                     VISBL 1010
      RETURN                                                                    DREFLT 252
      END                                                                       DREFLT 253
      SUBROUTINE  DSHDLU                                                        DSHDLU   2
C                                                                               DSHDLU   3
C              CALLED BY DCOF.  CALCULATES LUMINANCE IN CD/FT**2 OF             DSHDLU   4
C              DETACHED BUILDING-SHADES FOR CLEAR AND OVERCAST CIE              DSHDLU   5
C              SKY, FOR SOLAR ALTITUDE PHSUN AND AZIMUTH THSUN.                 DSHDLU   6
C              (THE LUMINANCE OF ATTACHED BUILDING-SHADES IS ASSUMED            DSHDLU   7
C              TO BE ZERO.)  DETACHED BLDG-SHADES ARE ASSUMED TO                DSHDLU   8
C              BE UNOBSTRUCTED.  ONLY THE SIDE OF THE SHADE FROM WHICH          DSHDLU   9
C              THE OUTWARD NORMAL (I.E., THE VECTOR FROM WHICH THE TILT         DSHDLU  10
C              AND AZIMUTH OF THE SHADE WERE ORIGINALLY DETERMINED) IS          DSHDLU  11
C              CONSIDERED TO HAVE LUMINANCE.                                    DSHDLU  12
C                                                                               DSHDLU  13
      COMMON  /CONST/  DTOR, PIOVR2, PIOVR4, IBLNK, UNDEF, IUNDEF,              /CONST/  2
     1                 UNFILD, URAD, DEFIFR, DEFCFR, DEFINC, KWBTU              /CONST/  3
      REAL             KWBTU                                                    /CONST/  4
      COMMON  /DAYLT/ NDAYCF,IPHS,IZ,IHIT,MHHIT,IL,RHOAV,ATOT,ARHTOT,           /DAYLT/  2
     1                AR(3),AP(3),ARH(3),ARHP(3),NPH,NTH,WC(3),TMULT,           /DAYLT/  3
     2                TSOLNM,TVISDF,FRUP,ISHLOC,NWTOT,RHOCW,RHOFW,WAREA,        /DAYLT/  4
     3                IMREF,PHSUN,THSUN,PHSUND,THSUND,THSMIN,PHSMIN,            /DAYLT/  5
     4                THSMAX,PHSMAX,THSDEL,PHSDEL,H,NTHS,NPHS,NDFC,LWDC,        /DAYLT/  6
     5                BETA,W,IBZ,IWZ,ZENL,JZD,WBACLU(2,2),PF(7,5),              /DAYLT/  7
     6                VIEWVC(3),GLRNDX(2),WDAYIL(2,2),BACLUM(2),ITF(3),         /DAYLT/  8
     7                RDAYIL(2),RBACLU(2),GLRNEW(2),ETACLD,CDIRLW(24),          /DAYLT/  9
     8                CDIFLW(24),ODIFLW(24),SOLIC(12),TFAC,SPHSUN,              /DAYLT/ 10
     9                CPHSUN,PHWN,THWN,SPHWN,CPHWN,TOTIL(2),ATMMOI(12),         /DAYLT/ 11
     1                ATMTUR(12),XRAN,ALFAD,THRAT,PHRAT,SETPNT(2),              /DAYLT/ 12
     2                IZLSG,IZLSH,IZLSJM,IZLSJY,IZDREP,FPHRP(2),ZFTOT,          /DAYLT/ 13
     3                EINTSK(2,12,24),EINTSU(2,12,24),EDIRSK(2,12,24),          VISBL    2
     4                EDIRSU(2,12,24),FLCWSK(2,12),FLCWSU(2,12),                VISBL    3
     5                FLFWSK(2,12),FLFWSU(2,12),GILSK(2,10),GILSU(2,10),        VISBL    4
     6                WLUMSK(2,11,24),WLUMSU(2,11,24),AVWLSK(2,12,24),          VISBL    5
     7                AVWLSU(2,12,24),CHILSK(24),CHILSU(24),OHILSK(24),         VISBL    6
     8                DFSKHR(2,2),DFSUHR(2,2),SFSKHR(2,2),SFSUHR(2,2),          /DAYLT/ 19
     9                BFSKHR(2,2),BFSUHR(2,2),HISUNF,CHISKF,OHISKF,IZLSM        44d5br   1
      COMMON  /DAYL1/  ATMTU, ATMMO, TAU1                                       /DAYLT/ 21
     1               , TVISB, TH, PH, RAY(3), WNORM(3), TVISBR                  /DAYLT/ 22
      COMMON  /LENS/   MWFLEN, MRLEN, MSHLEN, MWNLEN, MDRLEN, MXLEN,            /LENS/   2
     1                 MULEN, MZLEN, MIWLEN, MFLLEN,                            HRr      5
     2                 LMTB, LLDSOU, MSTLEN, LSTFT, MWLLEN                      BLIND    1
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     BLIND    2
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        FLOOR1   3
      COMMON  /PTRBGN/ ISCB, IWFB, IWPB, ICONSB, IGTB, IWLB, IGEOB,             HRr      6
     1                 ISHADB, IWINB, IDRB, IEWB, IUGB, ISPB, IIWPB,            HRr      7
     2                 IIWB, IFLB, ISPCDB, IOTHB, ILHB, IZQCMB, ISSHDB,         HRr      8
     3                 IOHFIB, IZLSK, IZLSL, ISTFB                              HRr      9
      COMMON  /SIZE/   LENGTH,NVECT,NSCHED,NWF,NWPAR,NCONS,NGT,NWL,NGEO,        BLIND    5
     1                 NGSHAD, NWIN, NDOOR, NEW, NUG, NSP, NIWP, NIW,           /SIZE/   3
     2                 NFL, NDESDY, NBR, NOTH, NITH, NOPSRF,                    HRr     10
     3                 NSURF, NSSHD, NSHTOT                                     GEO1     1
      COMMON /TIME  / IDOY, IDOW, IDSTF, ISCHR, ISCDAY, iDSdates(6),            -044e5r  1
     1                IMO, IDAY, IYR, IHR, CLOCK(10), IDSFLG,                   HOLID1   4
     2                MONDSC(12), MONLEN(12), MONSDA(12), IEODMR                /TIME/   4
      COMMON        // AA(75 000 000)                                           -048ar   1
      INTEGER          IA(75 000 000)                                           -048ar   2
      EQUIVALENCE  (IA(1), AA(1))                                               //       4
C                                                                               DSHDLU  22
      external  DDOT                                                            DSHDLU  23
c                                                                               DSHDLU  24
      DIMENSION W21(3), W23(3), WSNORM(3)                                       DSHDLU  25
      DATA PI/3.1415926/                                                        DSHDLU  26
C                                                                               DSHDLU  27
C              ---------- LOOP OVER GLOBAL SHADES ----------                    DSHDLU  28
C                                                                               DSHDLU  29
      DO 400 ITYP = 1,2                                                         DSHDLU  30
      NSH    = NGSHAD                                                           DSHDLU  31
      IF (ITYP.EQ.2) NSH = NSSHD                                                DSHDLU  32
      IF (NSH.EQ.0) GO TO 400                                                   DSHDLU  33
      MH     = ISHADB                                                           DSHDLU  34
      IF (ITYP.EQ.2) MH = ISSHDB                                                DSHDLU  35
      DO 100 ISH = 1,NSH                                                        DSHDLU  36
C              INITIALIZE CLEAR AND OVERCAST DAY SHADE LUMINANCE TO ZERO        DSHDLU  37
      AA(<KDSLUM>+IHR-1) = 0.                                                   DSHDLU  38
      AA(<KDSLUM>+NDFC+IHR-1) = 0.                                              DSHDLU  39
      IF (IHR.EQ.1)  AA(<KDSLUM>+2*NDFC) = 0.                                   DSHDLU  40
C              GO TO NEXT SHADE IF REFLECTANCE IS ZERO                          DSHDLU  41
      IF (<SHADE-VIS-REFL>.EQ.0.) GO TO 100                                     DSHDLU  42
C              FIND AZIMUTH AND TILT OF SHADE (IN BLDG COORD SYS) FROM          DSHDLU  43
C              COORDINATES OF VERTICES 1, 2, AND 3                              DSHDLU  44
      MSHG   = <MSGEOM>                                                         DSHDLU  45
      DO 110 I = 1,3                                                            DSHDLU  46
      W21(I) = AA(MSHG + I) - AA(MSHG + 3 +I)                                   DSHDLU  47
      W23(I) = AA(MSHG + 6 + I) - AA(MSHG + 3 +I)                               DSHDLU  48
  110 CONTINUE                                                                  DSHDLU  49
C              UNIT VECTOR NORMAL TO SHADE                                      DSHDLU  50
      CALL DCROSS (W23, W21, WSNORM)                                            DSHDLU  51
      DWNORM = SQRT (DDOT (WSNORM, WSNORM))                                     DSHDLU  52
      IF(DWNORM.LT.0.001) GO TO 100                                             -069     1
      DO 130 I = 1,3                                                            DSHDLU  53
  130 WSNORM(I) = WSNORM(I) / DWNORM                                            DSHDLU  54
C              AZIMUTH AND ALTITUDE OF SHADE NORMAL                             DSHDLU  55
      PHSHN  = ASIN ( WSNORM(3) )                                               DSHDLU  56
      THSHN  = 0.                                                               DSHDLU  57
      IF (WSNORM(1).EQ.0.0.AND.WSNORM(2).EQ.0.0) GO TO 135                      DSHDLU  58
      THSHN  = ATAN2 ( WSNORM(2), WSNORM(1) )                                   DSHDLU  59
  135 CONTINUE                                                                  DSHDLU  60
      SPHSHN = WSNORM(3)                                                        DSHDLU  61
      CPHSHN = COS ( PHSHN )                                                    DSHDLU  62
C                                                                               DSHDLU  63
C              DIRECT ILLUMINANCE FROM SUN                                      DSHDLU  64
C                                                                               DSHDLU  65
      Z1SUN  = 0.                                                               DSHDLU  66
C              COS OF ANGLE OF INCIDENCE                                        DSHDLU  67
      COSBSH = SPHSUN * SPHSHN  +  CPHSUN * CPHSHN * COS (THSUN-THSHN)          DSHDLU  68
C              SKIP IF SUNLIGHT FALLS ON BACK OF SHADE                          DSHDLU  69
      IF (COSBSH.LT.0) GO TO 140                                                DSHDLU  70
      Z1SUN  = DNSOL(IMREF) * COSBSH                                            DSHDLU  71
  140 CONTINUE                                                                  DSHDLU  72
C                                                                               DSHDLU  73
C              INTEGRATE TO GET CONTRIBUTION OF DIFFUSE LIGHT FROM SKY          DSHDLU  74
C                                                                               DSHDLU  75
      Z1SKY  = 0.                                                               DSHDLU  76
      Z2SKY  = 0.                                                               DSHDLU  77
      DPH    = PIOVR2 / FLOAT(NPH)                                              DSHDLU  78
      DO 200 IPH = 1,NPH                                                        DSHDLU  79
      PH     = (FLOAT(IPH) - 0.5) * DPH                                         DSHDLU  80
      IF (PH.GE.(PHSHN + PIOVR2)) GO TO 200                                     DSHDLU  81
      SPH    = SIN(PH)                                                          DSHDLU  82
      CPH    = COS(PH)                                                          DSHDLU  83
C              FIND LIMITS OF INTEGRATION OF SKY AZIMUTH                        DSHDLU  84
      CALL  DTHLIM (PH, THSHN, PHSHN, THMIN, THMAX)                             DSHDLU  85
      DTH    = (THMAX - THMIN) / FLOAT(NTH)                                     DSHDLU  86
      DASKY  = CPH * DTH * DPH                                                  DSHDLU  87
      DO 300 ITH = 1,NTH                                                        DSHDLU  88
      TH     = THMIN + (FLOAT(ITH) - 0.5) * DTH                                 DSHDLU  89
C              COS OF ANGLE OF INCIDENCE                                        DSHDLU  90
      COSBSH = SPH * SPHSHN  +  CPH * CPHSHN * COS(TH - THSHN)                  DSHDLU  91
      IF (COSBSH.LT.0.) GO TO 300                                               DSHDLU  92
      Z1SKY  = Z1SKY + DSKYLU (1, TH, PH) * COSBSH * DASKY                      DSHDLU  93
      IF (IHR.EQ.1)                                                             DSHDLU  94
     1Z2SKY = Z2SKY + DSKYLU (2, TH, PH) * COSBSH * DASKY                       DSHDLU  95
  300 CONTINUE                                                                  DSHDLU  96
  200 CONTINUE                                                                  DSHDLU  97
C                                                                               DSHDLU  98
C              ADD DIFFUSE ILLUMINANCE FROM GROUND                              DSHDLU  99
C                                                                               DSHDLU 100
      Z1SKY  = Z1SKY + GILSK(1,IPHS) * <SHADE-GND-REFL> *                       DSHDLU 101
     1                0.5 * (1. - SPHSHN)                                       DSHDLU 102
      Z1SUN  = Z1SUN + GILSU(1,IPHS) * <SHADE-GND-REFL> *                       DSHDLU 103
     1                0.5 * (1. - SPHSHN)                                       DSHDLU 104
      IF (IHR.EQ.1)                                                             DSHDLU 105
     1Z2SKY = Z2SKY + GILSK(2,IPHS) * <SHADE-GND-REFL> *                        DSHDLU 106
     2                0.5 * (1. - SPHSHN)                                       DSHDLU 107
C                                                                               DSHDLU 108
C              OVERALL LUMINANCE OF SHADING SURFACE (CD/FT**2)                  DSHDLU 109
C                                                                               DSHDLU 110
      AA(<KDSLUM>+IHR-1) = Z1SKY * <SHADE-VIS-REFL> / PI                        DSHDLU 111
      AA(<KDSLUM>+NDFC+IHR-1) = Z1SUN * <SHADE-VIS-REFL> / PI                   DSHDLU 112
      IF (IHR.EQ.1)                                                             DSHDLU 113
     1AA(<KDSLUM>+2*NDFC) = Z2SKY * <SHADE-VIS-REFL> / PI                       DSHDLU 114
C                                                                               DSHDLU 115
  100 MH     = MH + MSHLEN                                                      DSHDLU 116
  400 CONTINUE                                                                  DSHDLU 117
      RETURN                                                                    DSHDLU 118
      END                                                                       DSHDLU 119
      FUNCTION  DSKYLU ( IDT, THSKY, PHSKY )                                    DSKYLU   2
C                                                                               DSKYLU   3
C              CALLED BY DCOF, DHILL, DREFLT, AND DSHDLU.  GIVES                DSKYLU   4
C              LUMINANCE IN CD/FT**2 OF CIE STANDARD CLEAR                      DSKYLU   5
C              AND OVERCAST SKIES.  INPUT PARAMETERS ARE IDT =                  DSKYLU   6
C              DAY TYPE (1=CLEAR, 2=OVERCAST),  THSUN =                         DSKYLU   7
C              AZIMUTH OF SUN, PHSUN = ALTITUDE OF SUN, THSKY =                 DSKYLU   8
C              AZIMUTH OF SKY ELEMENT, PHSKY = ALTITUDE OF SKY ELEMENT,         DSKYLU   9
C              BETA = ATMOSPHERIC TURBIDITY, W = ATMOSPHERIC MOISTURE.          DSKYLU  10
C                                                                               DSKYLU  11
      COMMON  /DAYLT/ NDAYCF,IPHS,IZ,IHIT,MHHIT,IL,RHOAV,ATOT,ARHTOT,           /DAYLT/  2
     1                AR(3),AP(3),ARH(3),ARHP(3),NPH,NTH,WC(3),TMULT,           /DAYLT/  3
     2                TSOLNM,TVISDF,FRUP,ISHLOC,NWTOT,RHOCW,RHOFW,WAREA,        /DAYLT/  4
     3                IMREF,PHSUN,THSUN,PHSUND,THSUND,THSMIN,PHSMIN,            /DAYLT/  5
     4                THSMAX,PHSMAX,THSDEL,PHSDEL,H,NTHS,NPHS,NDFC,LWDC,        /DAYLT/  6
     5                BETA,W,IBZ,IWZ,ZENL,JZD,WBACLU(2,2),PF(7,5),              /DAYLT/  7
     6                VIEWVC(3),GLRNDX(2),WDAYIL(2,2),BACLUM(2),ITF(3),         /DAYLT/  8
     7                RDAYIL(2),RBACLU(2),GLRNEW(2),ETACLD,CDIRLW(24),          /DAYLT/  9
     8                CDIFLW(24),ODIFLW(24),SOLIC(12),TFAC,SPHSUN,              /DAYLT/ 10
     9                CPHSUN,PHWN,THWN,SPHWN,CPHWN,TOTIL(2),ATMMOI(12),         /DAYLT/ 11
     1                ATMTUR(12),XRAN,ALFAD,THRAT,PHRAT,SETPNT(2),              /DAYLT/ 12
     2                IZLSG,IZLSH,IZLSJM,IZLSJY,IZDREP,FPHRP(2),ZFTOT,          /DAYLT/ 13
     3                EINTSK(2,12,24),EINTSU(2,12,24),EDIRSK(2,12,24),          VISBL    2
     4                EDIRSU(2,12,24),FLCWSK(2,12),FLCWSU(2,12),                VISBL    3
     5                FLFWSK(2,12),FLFWSU(2,12),GILSK(2,10),GILSU(2,10),        VISBL    4
     6                WLUMSK(2,11,24),WLUMSU(2,11,24),AVWLSK(2,12,24),          VISBL    5
     7                AVWLSU(2,12,24),CHILSK(24),CHILSU(24),OHILSK(24),         VISBL    6
     8                DFSKHR(2,2),DFSUHR(2,2),SFSKHR(2,2),SFSUHR(2,2),          /DAYLT/ 19
     9                BFSKHR(2,2),BFSUHR(2,2),HISUNF,CHISKF,OHISKF,IZLSM        44d5br   1
      COMMON  /DAYL1/  ATMTU, ATMMO, TAU1                                       /DAYLT/ 21
     1               , TVISB, TH, PH, RAY(3), WNORM(3), TVISBR                  /DAYLT/ 22
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
C                                                                               DSKYLU  14
      SPHSKY = SIN (PHSKY)                                                      DSKYLU  15
      GO TO (100,200), IDT                                                      DSKYLU  16
  100 CONTINUE                                                                  DSKYLU  17
C                                                                               DSKYLU  18
C              CLEAR SKY                                                        DSKYLU  19
C                                                                               DSKYLU  20
C              ANGLE BETWEEN SUN AND ELEMENT OF SKY                             DSKYLU  21
C                                                                               DSKYLU  22
      COSG = SPHSKY * SPHSUN + COS(PHSKY) * CPHSUN * COS(THSKY - THSUN)         DSKYLU  23
C              prevent cosg out of range due to roundoff                        DSKYLU  24
      cosg = amax1(-1.0,amin1(cosg,1.0))                                        DSKYLU  25
      G      = ACOS ( COSG )                                                    DSKYLU  26
C                                                                               DSKYLU  27
C              VARIOUS LUMINANCE FACTORS                                        DSKYLU  28
C                                                                               DSKYLU  29
      Z1     = 0.910 + 10.*EXP( -3.*G ) + 0.45 * COSG * COSG                    DSKYLU  30
      Z2     = 1. - EXP( -0.32 / SPHSKY )                                       DSKYLU  31
      Z3     = 0.27385 * (0.91 + 10.*EXP( -3.*(1.5708 - PHSUN)) +               DSKYLU  32
     1             0.45*SPHSUN*SPHSUN )                                         DSKYLU  33
C                                                                               DSKYLU  34
C              LUMINANCE OF SKY ELEMENT (CD/FT**2)                              DSKYLU  35
C                                                                               DSKYLU  36
      DSKYLU = 92.9 * ZENL * Z1 * Z2 / Z3                                       DSKYLU  37
C                                                                               DSKYLU  38
      RETURN                                                                    DSKYLU  39
  200 CONTINUE                                                                  DSKYLU  40
C                                                                               DSKYLU  41
C              OVERCAST SKY (0.123+8.6*SPHSUN IS ZENITH LUM IN KCD/M**2)        DSKYLU  42
C                                                                               DSKYLU  43
      DSKYLU = 92.9 * (0.123 + 8.6 * SPHSUN) * (.33333 + .66667*SPHSKY)         DSKYLU  44
C                                                                               DSKYLU  45
      RETURN                                                                    DSKYLU  46
      END                                                                       DSKYLU  47
      SUBROUTINE  DTHLIM ( PHSKY, THSUR, PHSUR, THMIN, THMAX )                  DTHLIM   2
C                                                                               DTHLIM   3
C              CALLED BY DREFLT AND DSHDLU.  DETERMINES LIMITS OF               DTHLIM   4
C              INTEGRATION OF SKY AZIMUTH ANGLE FOR A SURFACE                   DTHLIM   5
C              RECEIVING LIGHT FROM SKY ELEMENTS OF ALTITUDE PHSKY.             DTHLIM   6
C              THE NORMAL TO THE RECEIVING SURFACE HAS AZIMUTH THSUR            DTHLIM   7
C              AND ALTITUDE PHSUR.                                              DTHLIM   8
C                                                                               DTHLIM   9
      COMMON  /CONST/  DTOR, PIOVR2, PIOVR4, IBLNK, UNDEF, IUNDEF,              /CONST/  2
     1                 UNFILD, URAD, DEFIFR, DEFCFR, DEFINC, KWBTU              /CONST/  3
      REAL             KWBTU                                                    /CONST/  4
C                                                                               DTHLIM  11
      DATA PI/3.1415926/                                                        DTHLIM  12
C                                                                               DTHLIM  13
      IF (ABS(PHSUR).LT.0.035) GO TO 100                                        DTHLIM  14
      TLTSUR = PIOVR2 - PHSUR                                                   DTHLIM  15
      THMIN  = -PI                                                              DTHLIM  16
      THMAX  =  PI                                                              DTHLIM  17
      IF (PHSKY.GT.TLTSUR.OR.ABS(PHSKY).GT.(PI-TLTSUR)) RETURN                  DTHLIM  18
      A      = -TAN(PHSKY) / TAN(TLTSUR)                                        DTHLIM  19
      A      = ABS ( ACOS(A) )                                                  DTHLIM  20
      THMIN  = THSUR - A                                                        DTHLIM  21
      THMAX  = THSUR + A                                                        DTHLIM  22
      RETURN                                                                    DTHLIM  23
  100 CONTINUE                                                                  DTHLIM  24
C              SURFACE WITHIN TWO DEGREES OF VERTICAL                           DTHLIM  25
      THMIN  = THSUR - PIOVR2                                                   DTHLIM  26
      THMAX  = THSUR + PIOVR2                                                   DTHLIM  27
      RETURN                                                                    DTHLIM  28
      END                                                                       DTHLIM  29
      SUBROUTINE  DZENLM (IMO)                                                  DZENLM   2
C                                                                               DZENLM   3
C              CALLED BY DAVAIL AND DCOF.  SETS TURBIDITY COEFF (BETA)          DZENLM   4
C              AND ATMOSPHERIC MOISTURE (W) IN CM FOR SPECIFIED MONTH           DZENLM   5
C              (IMO).  CALCULATES TURBIDITY FACTOR (TFAC) ACCORDING TO          DZENLM   6
C              DOGNIAUX (AYDINLI, THE AVAILABILITY OF SOLAR RADIATION           DZENLM   7
C              AND DAYLIGHT, TECHNICAL UNIV. OF BERLIN, 1981).                  DZENLM   8
C              CALCULATES CLEAR SKY ZENITH LUMINANCE (ZENL) IN                  DZENLM   9
C              KCD/M**2 ACCORDING TO LIEBELT (LEUCHTDICHTE-                     DZENLM  10
C              UND STRAHLDICHTEVERTEILUNG DES HIMMELS, DOCTORAL THESIS,         DZENLM  11
C              KARLSRUHE UNIV., 1978).  SINCE LIEBELT ZENL EXPRESSION           DZENLM  12
C              IS VALID ONLY FOR SUN ALTITUDE BELOW ABOUT 60 DEGREES,           DZENLM  13
C              GETS ZENL ABOVE 60 DEG BY REQUIRING HOR ILL PROPORTIONAL         DZENLM  14
C              TO SIN (SOL ALT).                                                DZENLM  15
C                                                                               DZENLM  16
      COMMON  /DAYLT/ NDAYCF,IPHS,IZ,IHIT,MHHIT,IL,RHOAV,ATOT,ARHTOT,           /DAYLT/  2
     1                AR(3),AP(3),ARH(3),ARHP(3),NPH,NTH,WC(3),TMULT,           /DAYLT/  3
     2                TSOLNM,TVISDF,FRUP,ISHLOC,NWTOT,RHOCW,RHOFW,WAREA,        /DAYLT/  4
     3                IMREF,PHSUN,THSUN,PHSUND,THSUND,THSMIN,PHSMIN,            /DAYLT/  5
     4                THSMAX,PHSMAX,THSDEL,PHSDEL,H,NTHS,NPHS,NDFC,LWDC,        /DAYLT/  6
     5                BETA,W,IBZ,IWZ,ZENL,JZD,WBACLU(2,2),PF(7,5),              /DAYLT/  7
     6                VIEWVC(3),GLRNDX(2),WDAYIL(2,2),BACLUM(2),ITF(3),         /DAYLT/  8
     7                RDAYIL(2),RBACLU(2),GLRNEW(2),ETACLD,CDIRLW(24),          /DAYLT/  9
     8                CDIFLW(24),ODIFLW(24),SOLIC(12),TFAC,SPHSUN,              /DAYLT/ 10
     9                CPHSUN,PHWN,THWN,SPHWN,CPHWN,TOTIL(2),ATMMOI(12),         /DAYLT/ 11
     1                ATMTUR(12),XRAN,ALFAD,THRAT,PHRAT,SETPNT(2),              /DAYLT/ 12
     2                IZLSG,IZLSH,IZLSJM,IZLSJY,IZDREP,FPHRP(2),ZFTOT,          /DAYLT/ 13
     3                EINTSK(2,12,24),EINTSU(2,12,24),EDIRSK(2,12,24),          VISBL    2
     4                EDIRSU(2,12,24),FLCWSK(2,12),FLCWSU(2,12),                VISBL    3
     5                FLFWSK(2,12),FLFWSU(2,12),GILSK(2,10),GILSU(2,10),        VISBL    4
     6                WLUMSK(2,11,24),WLUMSU(2,11,24),AVWLSK(2,12,24),          VISBL    5
     7                AVWLSU(2,12,24),CHILSK(24),CHILSU(24),OHILSK(24),         VISBL    6
     8                DFSKHR(2,2),DFSUHR(2,2),SFSKHR(2,2),SFSUHR(2,2),          /DAYLT/ 19
     9                BFSKHR(2,2),BFSUHR(2,2),HISUNF,CHISKF,OHISKF,IZLSM        44d5br   1
      COMMON  /DAYL1/  ATMTU, ATMMO, TAU1                                       /DAYLT/ 21
     1               , TVISB, TH, PH, RAY(3), WNORM(3), TVISBR                  /DAYLT/ 22
C                                                                               DZENLM  18
      BETA   = ATMTUR(IMO)                                                      DZENLM  19
      W      = ATMMOI(IMO) * 2.54                                               DZENLM  20
      TFAC = (H + 85.)/(39.5*EXP(-W) + 47.4) + 0.1 + (16.+0.22*W) * BETA        DZENLM  21
      PHST   = AMIN1(PHSUN,1.0472)                                              DZENLM  22
C              RESTRICT TO 3<TFAC<7.5 SINCE LIEBELT ZENL INVALID OUTSIDE        DZENLM  23
C              THIS RANGE                                                       DZENLM  24
      TFACL  = AMIN1( 7.5, AMAX1(3.,TFAC) )                                     DZENLM  25
      TFAC = AMIN1(TFAC,7.5)                                                    DZENLM  26
      ZENL   = (1.34*TFACL - 3.46)*TAN(PHST) + 0.10*TFACL + 0.90                DZENLM  27
C              3.7528 BELOW IS 3.25/SIN(60)                                     DZENLM  28
      IF(H.GT.60.) ZENL=3.7528*SIN(PHSUN)*ZENL/                                 DZENLM  29
     1  (3.25+(H-60)*(-.105+.0010*(H-60)))                                      DZENLM  30
      RETURN                                                                    DZENLM  31
      END                                                                       DZENLM  32
      FUNCTION IDPAK ( A, B, SN )                                               IDPAK    2
C                                                                               IDPAK    3
C              CALLED FROM DCOF.  PACKS SKY (A) AND SUN (B) COMPONENTS          IDPAK    4
C              OF DAYLIGHT AND GLARE FACTORS.                                   IDPAK    5
C    pack values  IDPAK  = INT ( SN * A +.5  ) * 100000  +  INT ( SN * B  + .5 )IDPAK    6
C                                                                               IDPAK    7
      INTEGER IDPAK, I1, I2, I3                                                 IDPAK    8
      REAL    SN   ,  A,  B                                                     IDPAK    9
      I1     = INT ( SN * A + 0.5 )                                             IDPAK   10
      I2     = I1 * 100000                                                      IDPAK   11
      I3     = INT ( SN * B + 0.5 )                                             IDPAK   12
      IDPAK  = I2 + I3                                                          IDPAK   13
      RETURN                                                                    IDPAK   14
      END                                                                       IDPAK   15
      SUBROUTINE  DUNPAK (IW, SN, A, B)                                         DUNPAK   2
C                                                                               DUNPAK   3
C              CALLED FROM DINTIL AND DINTRP.                                   DUNPAK   4
C              UNPACKS SKY (A) AND SUN (B)                                      DUNPAK   5
C              COMPONENTS OF DAYLIGHT AND GLARE FACTORS.                        DUNPAK   6
C                                                                               DUNPAK   7
      INTEGER IW   ,IW1,IW2                                                     DUNPAK   8
      REAL    SN   ,  A,  B                                                     DUNPAK   9
      IW1    = IW / 100000                                                      DUNPAK  10
      A      = FLOAT( IW1 ) / SN                                                DUNPAK  11
      IW2    = IW - 100000*IW1                                                  DUNPAK  12
      B      = FLOAT( IW2 ) / SN                                                DUNPAK  13
      RETURN                                                                    DUNPAK  14
      END                                                                       DUNPAK  15
      SUBROUTINE  DCROSS (A, B, C)                                              DCROSS   2
C                                                                               DCROSS   3
C              CROSS PRODUCT BETWEEN VECTORS A AND B                            DCROSS   4
C                                                                               DCROSS   5
      DIMENSION A(3), B(3), C(3)                                                DCROSS   6
C                                                                               DCROSS   7
      C(1)   = A(2) * B(3)  -  A(3) * B(2)                                      DCROSS   8
      C(2)   = A(3) * B(1)  -  A(1) * B(3)                                      DCROSS   9
      C(3)   = A(1) * B(2)  -  A(2) * B(1)                                      DCROSS  10
      RETURN                                                                    DCROSS  11
      END                                                                       DCROSS  12
      FUNCTION  DDOT (A, B)                                                     DDOT     2
C                                                                               DDOT     3
C              DOT PRODUCT OF VECTORS A AND B                                   DDOT     4
C                                                                               DDOT     5
      DIMENSION A(3), B(3)                                                      DDOT     6
C                                                                               DDOT     7
      DDOT   = A(1) * B(1) + A(2) * B(2) + A(3) * B(3)                          DDOT     8
      RETURN                                                                    DDOT     9
      END                                                                       DDOT    10
      SUBROUTINE  DCANG (IP,WA,WT,ETA)                                          DCANG    2
C                                                                               DCANG    3
C            CALLED BY IWSTF.  CALCULATES THE COSINE OF THE ANGLE               DCANG    4
C            BETWEEN A SURFACE NORMAL (DEFINED BY AZIMUTH WA AND                DCANG    5
C            TILT WT) AND THE SUN.                                              DCANG    6
C            IF IP = +1 USE THE NORMAL TO SURFACE AS DEFINED                    DCANG    7
C            IF IP = -1 USE OPPOSITE NORMAL                                     DCANG    8
C            (THIS ROUTINE IS FROM E. ERDEM-S MTB PROGRAM)                      DCANG    9
C                                                                               DCANG   10
      COMMON  /SUND/   ISUNUP, GUNDOG, HORANG, TDECLN, EQTIME, SOLCON,          /SUND/   2
     1                 ATMEXT, SKYDFF, RAYCOS(3), RDN,                          /SUND/   3
     2                 BSUN, DECLN, CD, SD, FSUNUP                              /SUND/   4
      COMMON        // AA(75 000 000)                                           -048ar   1
      INTEGER          IA(75 000 000)                                           -048ar   2
      EQUIVALENCE  (IA(1), AA(1))                                               //       4
C                                                                               DCANG   13
      IF (ABS(WT).GT.0.002) GO TO 110                                           DCANG   14
C            TILT = 0                                                           DCANG   15
      GAMMA = 1.                                                                DCANG   16
      ETA = RAYCOS(3)                                                           DCANG   17
      GO TO 240                                                                 DCANG   18
  110 IF (ABS(WT-1.5708).GT.0.002) GO TO 130                                    DCANG   19
C            TILT = 90 DEG                                                      DCANG   20
      GAMMA = 0.                                                                DCANG   21
      SWT = 1.                                                                  DCANG   22
      GO TO 140                                                                 DCANG   23
C            OTHERWISE                                                          DCANG   24
  130 GAMMA = COS(WT)                                                           DCANG   25
      SWT = SIN(WT)                                                             DCANG   26
  140 IF (ABS(WA).GT.0.002) GO TO 150                                           DCANG   27
C            AZIMUTH = 0                                                        DCANG   28
      SWA = 0.                                                                  DCANG   29
      CWA = 1.                                                                  DCANG   30
      GO TO 230                                                                 DCANG   31
  150 IF (ABS(WA-1.5708).GT.0.002) GO TO 160                                    DCANG   32
C            AZIMUTH = 90 DEG                                                   DCANG   33
      SWA = 1.                                                                  DCANG   34
      CWA = 0.                                                                  DCANG   35
      GO TO 230                                                                 DCANG   36
  160 IF (ABS(WA-3.1416).GT.0.002) GO TO 170                                    DCANG   37
C            AZIMUTH = 180 DEG                                                  DCANG   38
      SWA = 0.                                                                  DCANG   39
      CWA = -1.                                                                 DCANG   40
      GO TO 230                                                                 DCANG   41
  170 IF (ABS(WA-4.7124).GT.0.002) GO TO 180                                    DCANG   42
C            AZIMUTH = 270 DEG                                                  DCANG   43
      SWA = -1.                                                                 DCANG   44
      CWA = 0.                                                                  DCANG   45
      GO TO 230                                                                 DCANG   46
C            OTHERWISE                                                          DCANG   47
  180 SWA = SIN(WA)                                                             DCANG   48
      CWA = COS(WA)                                                             DCANG   49
C            CALCULATE ETA IN THE GENERAL CASE                                  DCANG   50
  230 ETA = (RAYCOS(1)*SWA + RAYCOS(2)*CWA)*SWT + RAYCOS(3)*GAMMA               DCANG   51
  240 ETA = FLOAT(IP)*ETA                                                       DCANG   52
      RETURN                                                                    DCANG   53
      END                                                                       DCANG   54
      SUBROUTINE DESDAY                                                         DESDAY   2
C                                                                               DESDAY   3
C              DESDAY CALCULATES HOURLY VALUES FOR DRY BULB, WET                DESDAY   4
C              BULB, AND DEW POINT TEMPERATURES WHEN THE MAX,                   DESDAY   5
C              MIN, TIME OF MAX AND TIME OF MIN ARE GIVEN FOR                   DESDAY   6
C              DRY BULB AND DEW POINT.  THE HOURLY VALUES ARE                   DESDAY   7
C              STORED IN DESHRQ.  INPUT IS VIA DESDYQ.  THE                     DESDAY   8
C              STRUCTURE OF DESHRQ IS                                           DESDAY   9
C              WORDS 1 -24  DRYBULB FOR 1ST DAY                                 DESDAY  10
C                    25-48  WET BULB FOR 1ST DAY                                DESDAY  11
C                    49-72  DEW POINT FOR 1ST DAY                               DESDAY  12
C                  73-96  WINDSPEED (KNOTS)                                     DESDAY  13
C                  97-120 CLOUD AMOUNT (TENTHS)                                 DESDAY  14
C                 121-144 DRY BULB FOR 2ND DAY                                  DESDAY  15
C                    ETC.                                                       DESDAY  16
C                                                                               DESDAY  17
      COMMON  /BLDVA/  BLDVOL, BLDARE, PATMDS                                   /BLDVA/  2
      COMMON /DESHQ/  IDDFLG,DESHRQ(360),IDDTYP(2)                              DDAY1    2
      COMMON  /DESW/   DESDYQ(34)                                               DDAY1    3
      INTEGER IDESDYQ(34)                                                       DDAY1    4
      EQUIVALENCE (DESDYQ(1),IDESDYQ(1))                                        DDAY1    5
      COMMON  /PSYDES/  HUMRD(72)                                               /PSYDES/ 2
      COMMON  /CONST/  DTOR, PIOVR2, PIOVR4, IBLNK, UNDEF, IUNDEF,              /CONST/  2
     1                 UNFILD, URAD, DEFIFR, DEFCFR, DEFINC, KWBTU              /CONST/  3
      REAL             KWBTU                                                    /CONST/  4
      COMMON /TIME  / IDOY, IDOW, IDSTF, ISCHR, ISCDAY, iDSdates(6),            -044e5r  1
     1                IMO, IDAY, IYR, IHR, CLOCK(10), IDSFLG,                   HOLID1   4
     2                MONDSC(12), MONLEN(12), MONSDA(12), IEODMR                /TIME/   4
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
C                                                                               DESDAY  24
      REAL DB(24),WB,DP,HR,DBMX,WBMX,HRMX,PWSWBX,HRWBX,PWSX,RH,PWX,PWS,         DDAY1   16
     1     HRS,ENTH                                                             DDAY1   17
C              IDESPT POINTS TO THE CURRENT DESIGN DAY                          DESDAY  25
C              IN DESHRQ                                                        DESDAY  26
      CALL FILLN(0.,DB(1),24)                                                   DDAY1   18
      WB = 0.                                                                   DDAY1   19
      DP = 0.                                                                   DDAY1   20
      HR = 0.                                                                   DDAY1   21
      DBMX = 0.                                                                 DDAY1   22
      WBMX = 0.                                                                 DDAY1   23
      HRMX = 0.                                                                 DDAY1   24
      PWSWBX = 0.                                                               DDAY1   25
      HRWBX = 0.                                                                DDAY1   26
      PWSX = 0.                                                                 DDAY1   27
      RH = 0.                                                                   DDAY1   28
      PWX = 0.                                                                  DDAY1   29
      PWS = 0.                                                                  DDAY1   30
      HRS = 0.                                                                  DDAY1   31
      ENTH = 0.                                                                 DDAY1   32
      IDESPT = (IDDFLG-1)*120                                                   DDAY1   33
C              IP2 POINTS TO THE CURRENT DESIGN DAY                             DESDAY  28
C              INPUT IN DESDYQ                                                  DESDAY  29
      IP2    = (IDDFLG-1)*17                                                    DDAY1   34
C              GET DRYBULB, WETBULB, AND HUMIDITY RATIO AT PEAK                 DDAY1   35
      DBMX = DESDYQ(IP2+2)                                                      DDAY1   36
      WBMX = DESDYQ(IP2+4)                                                      DDAY1   37
      IF (ITYPLS(WBMX).EQ.ITYPLS(UNFILD)) THEN                                  DDAY1   38
C              IF NO WET-BULB (HEATING DEWIGN DAY) ASSUME 50%                   DDAY1   39
C              RELATIVE HUMIDITY AND CALCULATE THE HUMIDITY RATIO               DDAY1   40
          PWSX = PPWVM1(DBMX)                                                   DDAY1   41
          RH = 0.5                                                              DDAY1   42
          PWX = 0.5*PWSX                                                        DDAY1   43
          HRMX = 0.62198*(PWX/(PATMDS-PWX))                                     DDAY1   44
      ELSE                                                                      DDAY1   45
C              IF WET-BULB INPUT, USE IT TO CALCULATE THE                       DDAY1   46
C              HUMIDITY RATIO                                                   DDAY1   47
          PWSWBX = PPWVM1(WBMX)                                                 DDAY1   48
          HRWBX = .62198*PWSWBX/(PATMDS-PWSWBX)                                 DDAY1   49
          HRMX = ((1093.-0.556*WBMX)*HRWBX - .24*(DBMX-WBMX)) /                 DDAY1   50
     1       (1093.+0.44*DBMX-WBMX)                                             DDAY1   51
      END IF                                                                    DDAY1   52
C              DRYBULB HIGH & LOW, TIME OF HIGH AND LOW                         DDAY1   53
      TE = DBMX                                                                 DDAY1   54
      TL = DBMX - DESDYQ(IP2+3)                                                 DDAY1   55
      TIMTE = DESDYQ(IP2+5)                                                     DDAY1   56
      TIMTL = DESDYQ(IP2+6)                                                     DDAY1   57
C              IF TIME OF HIGH IS BEFORE TIME OF LOW, SWITCH                    DESDAY  37
C              TIMES AND TEMPERATURES                                           DESDAY  38
      IF (TIMTL .LT. TIMTE) CALL SWITCH(TL, TE, TIMTL, TIMTE)                   DESDAY  39
C              GET 24 HOURLY VALUES FOR DRYBULB                                 DDAY1   58
      CALL TCYCLE(TE,TL,TIMTE,TIMTL,DB(1))                                      DDAY1   59
C              GET 24 HOURLY VALUES FOR WETBULB AND DEWPOINT AND FILL           DDAY1   60
C              THE DESIGN DAY HOURLY DATA ARRAY                                 DDAY1   61
      IPHR = (IDDFLG-1)*24                                                      DDAY1   62
      DO I=1,24                                                                 DDAY1   63
          PWS = PPWVM1(DB(I))                                                   DDAY1   64
          HRS = 0.62198*(PWS/(PATMDS-PWS))                                      DDAY1   65
          HR = AMIN1(HRS,HRMX)                                                  DDAY1   66
          ENTH = .24*DB(I) + (1061.+.444*DB(I))*HR                              DDAY1   67
          WB = WBF(ENTH,PATMDS)                                                 DDAY1   68
          DP = DEWPT(HR,PATMDS)                                                 DDAY1   69
          DESHRQ(IDESPT+I) = DB(I)                                              DDAY1   70
          DESHRQ(IDESPT+I+24) = WB                                              DDAY1   71
          DESHRQ(IDESPT+I+48) = DP                                              DDAY1   72
          DESHRQ(IDESPT+I+72) = DESDYQ(IP2+7)                                   DDAY1   73
          DESHRQ(IDESPT+I+96) = DESDYQ(IP2+9)                                   DDAY1   74
          HUMRD(IPHR+I) = HR                                                    DDAY1   75
      END DO                                                                    DDAY1   76
      IMO = INT(DESDYQ(IP2+10))                                                 DDAY1   77
      IDAY = INT(DESDYQ(IP2+11))                                                DDAY1   78
      CALL WEATHI                                                               DDAY1   79
C===== temporary code; will eliminate cloud type and clearness                  DDAY1   80
      IDESDYQ(IP2+16) = ICLDTY                                                  DDAY1   81
      DESDYQ(IP2+15) = CLRNES                                                   DDAY1   82
C              IF GROUND TEMP NOT SET, SET IT                                   DDAY1   83
      IF (ITYPLS(DESDYQ(IP2+12)).EQ.ITYPLS(UNFILD)) THEN                        DDAY1   84
          DESDYQ(IP2+12) = TGNDR - 460.                                         DDAY1   85
      END IF                                                                    DDAY1   86
C              SAVE THE TYPE IN IDDTYP                                          DDAY1   87
      IDDTYP(IDDFLG) = IDESDYQ(IP2+1)                                           DDAY1   88
      RETURN                                                                    DESDAY  74
      END                                                                       DESDAY  75
      SUBROUTINE DESFOU(SPCD,ISPCD,DSBUF,IDSBUF)                                DESFOU   2
C                                                                               DESFOU   3
C              OUTPUT DESIGN FILE FOR SYSTEMS .                                 DESFOU   4
C                                                                               DESFOU   5
C              SPACE DATA ON DESIGN FILE                                        DESFOU   6
C                                                                               DESFOU   7
C              1-4   ZONE NAME                                                  DESFOU   8
C              5-10  AIR TEMP WEIGHTING FACTORS                                 DESFOU   9
C              11-14 LOADS CALCULATION TEMPS (ONLY FIRST USED)                  DESFOU  10
C              15    INFILTRATION METHOD CODE                                   DESFOU  11
C              16-18 CONST, WIND, DTEMP COEFFS FOR INFIL                        DESFOU  12
C              19    UA SUM FOR EXTERIOR WALLS                                  DESFOU  13
C              20    U*A*DT SUM FOR INTERIOR WALLS                              DESFOU  14
C              21-22 PEAK COOLING, HEATING LOADS                                DESFOU  15
C              23-24 FLOOR AREA, VOLUME                                         DESFOU  16
C              25    MAXIMUM NO. OF PEOPLE                                      DESFOU  17
C              26-27 LATENT GAIN AT HTG, CLG PEAK                               DESFOU  18
C              28-29 INFILTRATION CFM AT HTG, CLG PEAK                          DESFOU  19
C              30-31 PLENUM HEAT AT HTG, CLG PEAK                               DESFOU  20
C              32    POINTER TO BEGINNING OF TROMBE WALL DATA                   DESFOU  21
C              33    POINTER TO HOURLY LOADS BUFFER                             DESFOU  22
C              34    FRAC LT HEAT TO OTHER SPACES / FRAC FROM OTHER             DESFOU  23
C              35-36 ZONE MULTIPLIER, FLOOR MULTIPLIER                          DESFOU  24
C              37    FLAG -- 1=INTERIOR ZONE, 2=EXTERIOR ZONE                   DESFOU  25
C              38-42 CONDUCTION WEIGHTING FACTORS                               DESFOU  26
C              43-47 SOLAR WEIGHTING FACTORS                                    DESFOU  27
C              48    FLAG -- 1=SUNSPACE, 0=NOT SUNSPACE                         DESFOU  28
C              49    NO. OF SUNSPACE INTERIOR WALLS DEFINED IN THIS SPACE       DESFOU  29
C              50    PTR IN DES FILE TO BEGINNING OF SUNSPACE                   DESFOU  30
C                      INTERIOR-WALL DATA FOR THIS SPACE                        DESFOU  31
C                                                                               DESFOU  32
C                                                                               DESFOU  33
      COMMON  /REPORT/ IREPRT(4,37),IPRG,IUNIQV(100),IUNIQS(100),IUNIQL         BIGNAM   1
      COMMON  /BEPS  /  BGAREA, BNAREA, PctSysOvrld, PctPltOvrld,               HVAC6    1
     $                  SiteEnergy, SourceEnergy                                HVAC6    2
      DIMENSION         BEPS(6)                                                 HVAC6    3
      EQUIVALENCE       (BEPS(1),BGAREA)                                        HVAC6    4
      COMMON  /BLDPK/  BLDPK(60), IHPP(2), ICPP(2), HRHPK, HRCPK                -063     1
      DIMENSION IBLDPK(66)                                                      -063     2
      EQUIVALENCE (IBLDPK(1),BLDPK(1))                                          /BLDPK/  4
      COMMON  /BLDVA/  BLDVOL, BLDARE, PATMDS                                   /BLDVA/  2
      COMMON  /BUFERS/  MRLEN1, MRLEN2, IBLDSB,IELDSB,LLDSB,N3,IBRPB1,          HVACi    1
     1                  IERPB1,LRPB1,IBRPB2,IERPB2,LRPB2                        HVACi    2
      COMMON /CLCFLG/ IFSTHR,IPRDFL,IGOLGE,NDD,LDSTYP,IFHRP                     DDAY1    1
      COMMON  /DATEDS/  IDSMON(3)                                               /DATEDS/ 2
      COMMON /DESHQ/  IDDFLG,DESHRQ(360),IDDTYP(2)                              DDAY1    2
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                         /FILES/  3
     2              , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                    /FILES/  4
     3                IHRREP(3), IHRPAS(2)                                      /FILES/  5
      COMMON  /IRUNPD/  NRUNPD, JRUNPD, IRUNPD(6,15)                            /IRUNPD/ 2
      COMMON  /IWCPTR/ MIWC1, MIWC2, NIWC, LIWC                                 /IWCPTR/ 2
      COMMON  /LENS/   MWFLEN, MRLEN, MSHLEN, MWNLEN, MDRLEN, MXLEN,            /LENS/   2
     1                 MULEN, MZLEN, MIWLEN, MFLLEN,                            HRr      5
     2                 LMTB, LLDSOU, MSTLEN, LSTFT, MWLLEN                      BLIND    1
      COMMON  /LOCALD/ STALAT, STALON, ITIMZ, BAZIM, BALTIT,                    /LOCALD/ 2
     1                 SSTALA, CSTALA, TSTALA, SBAZIM, CBAZIM                   /LOCALD/ 3
     2                 ,BXORG, BYORG, SHCOEF, TP1, TP2, WSTP1, WSTP2,           /LOCALD/ 4
     3                 WSHGT,WSHGTL(12),ISREFL,IHOLX                            HOLID1   2
      DIMENSION LOCALD(32)                                                      HOLID1   3
      EQUIVALENCE      (LOCALD(1),STALAT)                                       /LOCALD/ 7
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     BLIND    2
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        FLOOR1   3
      COMMON  /PSYDES/  HUMRD(72)                                               /PSYDES/ 2
      COMMON  /PTRBGN/ ISCB, IWFB, IWPB, ICONSB, IGTB, IWLB, IGEOB,             HRr      6
     1                 ISHADB, IWINB, IDRB, IEWB, IUGB, ISPB, IIWPB,            HRr      7
     2                 IIWB, IFLB, ISPCDB, IOTHB, ILHB, IZQCMB, ISSHDB,         HRr      8
     3                 IOHFIB, IZLSK, IZLSL, ISTFB                              HRr      9
      COMMON  /SIZE/   LENGTH,NVECT,NSCHED,NWF,NWPAR,NCONS,NGT,NWL,NGEO,        BLIND    5
     1                 NGSHAD, NWIN, NDOOR, NEW, NUG, NSP, NIWP, NIW,           /SIZE/   3
     2                 NFL, NDESDY, NBR, NOTH, NITH, NOPSRF,                    HRr     10
     3                 NSURF, NSSHD, NSHTOT                                     GEO1     1
      COMMON /TIME  / IDOY, IDOW, IDSTF, ISCHR, ISCDAY, iDSdates(6),            -044e5r  1
     1                IMO, IDAY, IYR, IHR, CLOCK(10), IDSFLG,                   HOLID1   4
     2                MONDSC(12), MONLEN(12), MONSDA(12), IEODMR                /TIME/   4
      COMMON /TITLE / TITLE(10,5)                                               /TITLE/  2
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
      COMMON        // AA(75 000 000)                                           -048ar   1
      INTEGER          IA(75 000 000)                                           -048ar   2
      EQUIVALENCE  (IA(1), AA(1))                                               //       4
C                                                                               DESFOU  55
C              DSBUF IS AVAILABLE AS A DESIGN FILE BUFFER                       DESFOU  56
      DIMENSION DSBUF(62,1),IDSBUF(62,1)                                        DESFOU  57
      DIMENSION SPCD(60,1), ISPCD(60,1)                                         -060    10
C                                                                               DESFOU  59
C              SET PTR TO START OF SPECIAL-WALL DATA.  INITIALIZE LENGTH        DESFOU  60
C              OF SPECIAL-WALL DATA.                                            DESFOU  61
      ITWP = MLAST + 1                                                          DESFOU  62
      ITWS = MLAST                                                              DESFOU  63
      LTWB = 0                                                                  DESFOU  64
      IHRFP  = 0                                                                DESFOU  65
      MZ     = ISPB                                                             DESFOU  66
C              PUT ZONE OUTPUT QUANTITIES FOR DESIGN                            DESFOU  67
C              FILE INTO SPCD ARRAY                                             DESFOU  68
      DO  450  IZ = 1 , NSP                                                     DESFOU  69
      QHSMAX = SPCD(1,IZ)                                                       DESFOU  70
      QCSMAX = SPCD(6,IZ)                                                       DESFOU  71
      QHLMAX = SPCD(2,IZ)                                                       DESFOU  72
      QCLMAX = SPCD(7,IZ)                                                       DESFOU  73
      CFMHMX = SPCD(23,IZ)                                                      DESFOU  74
      PLNHMX = SPCD(24,IZ)                                                      DESFOU  75
      DO 200 II=1,4                                                             DESFOU  76
C              ZONE NAME                                                        DESFOU  77
  200 SPCD(II,IZ) = TYPLS(<IZNM>)                                               DESFOU  78
      MWF    = <MZWF>                                                           DESFOU  79
      SPCD(5,IZ) = <TEMP-G0>                                                    DESFOU  80
      SPCD(6,IZ) = <TEMP-G1>                                                    DESFOU  81
      SPCD(7,IZ) = <TEMP-G2>                                                    DESFOU  82
      SPCD(8,IZ) = <TEMP-G3>                                                    DESFOU  83
      SPCD(9,IZ) = <TEMP-P1>                                                    DESFOU  84
      SPCD(10,IZ) = <TEMP-P2>                                                   DESFOU  85
      IM     = 1                                                                DESFOU  86
      SPCD(11,IZ) = <ZTEMP>                                                     -045br 191
      DO 300 I=1,8                                                              DESFOU  88
  300 SPCD(11+I,IZ) = 0.                                                        DESFOU  89
      ISPCD(33,IZ) = IHRFP                                                      DESFOU  90
      SPCD(13,IZ)  = <WSTMUL>                                                   -046r   32
      IF (<KZINF> .gt. 0)  ISPCD(14,IZ) = (<KZINF>-ISCB-11)/13 + 1              -046r   33
      ISPCD(15,IZ) = <IZINFC>                                                   DESFOU  91
c              Coefs for temperature-dependent infiltration to be               -046r   34
c              recalculated in SYSTEMS                                          -046r   35
      SELECT CASE (<IZINFC>)  ! Inf Method                                      -046r   36
      CASE (3)  ! Residential                                                   -046r   37
        SPCD(16,IZ) = 0.                                                        -046r   38
        SPCD(17,IZ) = <INF-COEF-DTEMP>                                          -046r   39
        SPCD(18,IZ) = 0.                                                        -046r   40
      CASE (4)  ! S-G                                                           -046r   41
        SPCD(16,IZ) = <LEAK-AREA>                                               -046r   42
        SPCD(17,IZ) = <STACKCOEF>                                               -046r   43
        SPCD(18,IZ) = 0.                                                        -046r   44
      CASE (5)  ! ASHRAE enhanced                                               -046r   45
        SPCD(16,IZ) = <FLOW-COEF>                                               -046r   46
        SPCD(17,IZ) = <STACK-COEF>                                              -046r   47
        SPCD(18,IZ) = <PRESSURE-EXP>                                            -046r   48
      END SELECT                                                                -046r   49
      SPCD(20,IZ) = <QZINTS>                                                    DESFOU 100
      SPCD(21,IZ) = QCSMAX                                                      DESFOU 101
      SPCD(22,IZ) = QHSMAX                                                      DESFOU 102
      SPCD(23,IZ) = <ZFLRAR>                                                    DESFOU 103
      SPCD(24,IZ) = <ZVOL>                                                      DESFOU 104
      SPCD(25,IZ) = <ZPPLNO>                                                    DESFOU 105
      SPCD(26,IZ) = QHLMAX                                                      DESFOU 106
      SPCD(27,IZ) = QCLMAX                                                      DESFOU 107
      SPCD(28,IZ) = CFMHMX                                                      DESFOU 108
      SPCD(29,IZ) = SPCD(41,IZ)                                                 DESFOU 109
      SPCD(30,IZ) = PLNHMX                                                      DESFOU 110
      SPCD(31,IZ) = SPCD(42,IZ)                                                 DESFOU 111
      DSBUF(1,IZ) = <ZZ>                                                        DESFOU 112
      DSBUF(2,IZ) = <NEUTRAL-LEVEL>                                             DESFOU 113
C            INITIALIZE NO. OF SUNSPACE COMMON WALLS DEFINED IN THIS SPACE      DESFOU 114
C            (DATA WILL BE PASSED TO SYSTEMS IN THE DESIGN FILE                 DESFOU 115
C            FOR THESE WALLS)                                                   DESFOU 116
      NCW = 0                                                                   DESFOU 117
C            SET LENGTH OF WALL PARAMS BLOCK (EXCLUDING TEMP HIST AND           DESFOU 118
C            RESPONSE FACTORS)                                                  DESFOU 119
      LTWBAS = 36                                                               DESFOU 120
C              ASSEMBLE T-W DATA FOR VENTED TROMBE WALLS                        DESFOU 121
C              SUM EXTERIOR CONDUCTANCE FOR SYSTEMS                             DESFOU 122
      ISPCD(32,IZ) = 0                                                          DESFOU 123
      IL = 1                                                                    LTSYS1  38
      SPCD(34,IZ) = <LIGHT-TO-OTHER> /(<LIGHT-TO-SPACE> + 0.0001)               -045br 192
      SPCD(35,IZ) = <ZMULT>                                                     DESFOU 125
      SPCD(36,IZ) = <FLOOR-MULT>                                                DESFOU 126
C            CONDUCTION WEIGHTING FACTORS                                       DESFOU 127
      SPCD(38,IZ) = <COND-V0>                                                   DESFOU 128
      SPCD(39,IZ) = <COND-V1>                                                   DESFOU 129
      SPCD(40,IZ) = <COND-V2>                                                   DESFOU 130
      SPCD(41,IZ) = <COND-W1>                                                   DESFOU 131
      SPCD(42,IZ) = <COND-W2>                                                   DESFOU 132
C            SOLAR WEIGHTING FACTORS                                            DESFOU 133
      SPCD(43,IZ) = <SOLAR-V0>                                                  DESFOU 134
      SPCD(44,IZ) = <SOLAR-V1>                                                  DESFOU 135
      SPCD(45,IZ) = <SOLAR-V2>                                                  DESFOU 136
      SPCD(46,IZ) = <SOLAR-W1>                                                  DESFOU 137
      SPCD(47,IZ) = <SOLAR-W2>                                                  DESFOU 138
C            SUNSPACE ID (1=SUNSPACE, 2=REG SPACE ADJAC TO SUNSPACE,            DESFOU 139
C            0=OTHER)                                                           DESFOU 140
      ISPCD(48,IZ) = <SUNSPACE>                                                 DESFOU 141
      IF (<FEATURE> .EQ. 1)  ISPCD(32,IZ) = ITWP - ITWS                         DESFOU 142
      COND = 0.                                                                 DESFOU 143
      MX = <MZEXT>                                                              DESFOU 144
      NEX = <NEXTS>                                                             DESFOU 145
      ISPCD(37,IZ) = 2                                                          DESFOU 146
      IF (NEX .EQ. 0)  ISPCD(37,IZ) = 1                                         DESFOU 147
      IF (NEX .EQ. 0)  GO TO 360                                                DESFOU 148
      DO 350 IE=1,NEX                                                           DESFOU 149
      MP     = <MXPROPRL>                                                       LDS1     9
      MWI = <MXWIN>                                                             DESFOU 151
      MD = <MXDOOR>                                                             DESFOU 152
      IF (<IEWTYPE> .LT. 3)                                                     DESFOU 153
     1 COND = COND + (1./(0.4+1./<UFACTR>))*<XSAREA>                            DESFOU 154
     2               *<XSMULT>                                                  DESFOU 155
      IF (<IEWTYPE> .GE. 3)  MR = <MWIPRP>                                      DESFOU 156
      IF (<IEWTYPE> .GE. 3)  COND = COND +                                      DESFOU 157
     1 (1./(0.4+1./<GCON>+1.+1./<UFACTR>))                                      DESFOU 158
     2 *<XSAREA>*<XSMULT>                                                       DESFOU 159
      IF (<IEWTYPE> .EQ. 3) GO TO 340                                           DESFOU 160
      IF (<IEWTYPE> .LT. 3) GO TO 305                                           DESFOU 161
      NRESF  = <NRESF>                                                          DESFOU 162
      LTW = LTWBAS + 3*NRESF                                                    DESFOU 163
      CALL GETBUF(IA,LTW,MLAST)                                                 DESFOU 164
      MWP    = <MPEXPAR>                                                        DESFOU 165
      AA(ITWP+13) = <WIAREA>                                                    DESFOU 166
      AA(ITWP+14) = <XSMULT>                                                    DESFOU 167
      AA(ITWP+15) = <HEW>                                                       DESFOU 168
      IF(<MXSSURF>.NE.0) AA(ITWP+15) = SQRT(<XGSARE>)                           DESFOU 169
      AA(ITWP+16) = <CHANNEL-WIDTH>                                             DESFOU 170
      RBARE  = 1./<GCON> - .66                                                  DESFOU 171
      AA(ITWP+17) = 1./AMAX1(.01,RBARE)                                         DESFOU 172
      IF (<NPANE> .EQ. 1)  AA(ITWP+17) = 1.E5                                   DESFOU 173
      AA(ITWP+18) = <LOWER-VENT-AREA>                                           DESFOU 174
      AA(ITWP+19) = <UPPER-VENT-AREA>                                           DESFOU 175
      AA(ITWP+20) = <SURABSO>                                                   DESFOU 176
      AA(ITWP+21) = <EMISSIVITY>                                                DESFOU 177
      AA(ITWP+22) = <VERT-VENT-SEP>                                             DESFOU 178
      IA(ITWP+23) = NRESF                                                       DESFOU 179
      AA(ITWP+24) = <RFCOMR>                                                    DESFOU 180
      DO 306 II=1,4                                                             DESFOU 181
  306 IA(ITWP+25+II) = <IXSNM>                                                  DESFOU 182
C            NEXT WORD, WALL TYPE, NOT CURRENTLY IN USE                         DESFOU 183
      IA(ITWP+25) = 0                                                           DESFOU 184
      IA(ITWP+34) = <IZNUM>                                                     DESFOU 185
      IA(ITWP+30) = <AIR-FLOW-TYPE>                                             DESFOU 186
      AA(ITWP+31) = <AIR-FLOW-RATE>                                             DESFOU 187
      AA(ITWP+32) = <AIR-FLOW-CTRL-DT>                                          DESFOU 188
      AA(ITWP+33) = <FAN-KW>                                                    DESFOU 189
      IR     = 0                                                                DESFOU 190
      DO 303 IRF=1,NRESF                                                        DESFOU 191
      J1 = (LTWBAS-1) + NRESF + ITWP                                            DESFOU 192
      J2     = J1 + NRESF                                                       DESFOU 193
      AA(IRF+J1) = <RFXIR>                                                      DESFOU 194
      AA(IRF+J2) = <RFYIR>                                                      DESFOU 195
      IR     = IR + 3                                                           DESFOU 196
  303 CONTINUE                                                                  DESFOU 197
      ITWP   = ITWP + LTW                                                       DESFOU 198
      LTWB   = LTWB + LTW                                                       DESFOU 199
      GO TO 340                                                                 DESFOU 200
  305 CONTINUE                                                                  DESFOU 201
      NWI = <NWIN>                                                              DESFOU 202
      IF (NWI .EQ. 0)  GO TO 320                                                DESFOU 203
      DO 310 IWI=1,NWI                                                          DESFOU 204
      MR = <MWIPRP>                                                             DESFOU 205
      COND = COND + (1./(0.4+1./<GCON>))*<WIAREA>                               DESFOU 206
     1              *<GMULT>*<XSMULT>                                           DESFOU 207
  310 MWI = MWI + MWNLEN                                                        DESFOU 208
  320 ND = <NDOOR>                                                              DESFOU 209
      IF (ND .EQ. 0)  GO TO 340                                                 DESFOU 210
      DO 330 ID=1,ND                                                            DESFOU 211
      MP = <MDRPROP>                                                            DESFOU 212
      COND = COND + 1./(0.4+1./<UFACTR>)                                        DESFOU 213
     1              *<DRAREA>*<DRMULT>*<XSMULT>                                 DESFOU 214
  330 MD = MD + MDRLEN                                                          DESFOU 215
  340 MX = MX + MXLEN                                                           DESFOU 216
  350 CONTINUE                                                                  DESFOU 217
  360 SPCD(19,IZ) = COND                                                        DESFOU 218
C                                                                               DESFOU 219
C            LOOP THRU I-W DEFINED IN THIS SPACE AND GET DESIGN DATA FOR        DESFOU 220
C            THOSE WHICH ARE SUNSPACE COMMON WALLS                              DESFOU 221
C                                                                               DESFOU 222
      NIW1 = <NINTS>                                                            DESFOU 223
      IF (NIW1.EQ.0) GO TO 445                                                  DESFOU 224
C              PTR TO BEG OF COMMON WALL DATA FOR THIS SPACE (RELATIVE          DESFOU 225
C              TO BEG OF WALL PARAMETERS BLOCK)                                 DESFOU 226
      ICWRB = ITWP - ITWS                                                       DESFOU 227
      DO 440 IW1 = 1,NIW1                                                       DESFOU 228
      MI = IA(<MZINT>+IW1-1)                                                    DESFOU 229
C            SKIP IF NOT A COMMON WALL                                          DESFOU 230
      IF (<IWSSPID>.NE.1) GO TO 440                                             DESFOU 231
C            SKIP IF THE I-W NOT DEFINED IN THIS SPACE                          DESFOU 232
      IF (<MZIN>.NE.MZ) GO TO 440                                               DESFOU 233
      NCW = NCW + 1                                                             DESFOU 234
C              PTR TO RESPONSE FACTORS WITHOUT IFR                              DESFOU 235
      MP = <MIWPROP>                                                            DESFOU 236
      MWP = <MPEXPAR>                                                           DESFOU 237
      NRESF = <NRESF>                                                           DESFOU 238
      LTW = 7*NRESF + LTWBAS                                                    DESFOU 239
      CALL GETBUF(IA,LTW,MLAST)                                                 DESFOU 240
C              PTR TO PARAMETERS FOR THIS WALL IN THE DESIGN FILE               DESFOU 241
C              (RELATIVE TO BEGINNING OF WALL PARS BLOCK)                       DESFOU 242
      <MIWPARDF> = ITWP - ITWS                                                  DESFOU 243
      AA(ITWP+14) = 1.                                                          DESFOU 244
C            SOME OF QUANTITIES BELOW MAY BE ZERO IF INAPPROPRIATE              DESFOU 245
C            TO THIS TYPE OF WALL                                               DESFOU 246
      IA(ITWP+23) = NRESF                                                       DESFOU 247
      AA(ITWP+24) = <RFCOMR>                                                    DESFOU 248
      IF (NRESF.EQ.0) AA(ITWP+24) = 0.                                          DESFOU 249
      IA(ITWP+25) = <IWSSPID>                                                   DESFOU 250
      DO 441 II=1,4                                                             DESFOU 251
  441 IA(ITWP+25+II) = <IWNM>                                                   DESFOU 252
C            NUMBER OF IN SPACE AND NEXT TO SPACE                               DESFOU 253
      IA(ITWP+34) = <IZNUM>                                                     DESFOU 254
      MZSAV = MZ                                                                DESFOU 255
      MZ = <MZNEXTTO>                                                           DESFOU 256
      IA(ITWP+35) = <IZNUM>                                                     DESFOU 257
      MZ = MZSAV                                                                DESFOU 258
C              INITIALIZE AIR FLOW TYPE TO NO AIR FLOW                          DESFOU 259
      IA(ITWP+30) = 1                                                           DESFOU 260
C              SKIP ENTERING AIR-FLOW DATA IF NO WALL-PARAMETERS BLOCK          DESFOU 261
      IF (MWP.EQ.0) GO TO 442                                                   DESFOU 262
      AA(ITWP+18) = <LOWER-VENT-AREA>                                           DESFOU 263
      AA(ITWP+19) = <UPPER-VENT-AREA>                                           DESFOU 264
      AA(ITWP+22) = <VERT-VENT-SEP>                                             DESFOU 265
      IA(ITWP+30) = <AIR-FLOW-TYPE>                                             DESFOU 266
      AA(ITWP+31) = <AIR-FLOW-RATE>                                             DESFOU 267
      AA(ITWP+32) = <AIR-FLOW-CTRL-DT>                                          DESFOU 268
      AA(ITWP+33) = <FAN-KW>                                                    DESFOU 269
      AA(ITWP+20) = <DOORWAY-H>                                                 DESFOU 270
      AA(ITWP+21) = <DOORWAY-W>                                                 DESFOU 271
  442 CONTINUE                                                                  DESFOU 272
      AA(ITWP+13) = <IWARNET>                                                   DESFOU 273
C            SURFACE TO SURFACE U VALUE                                         DESFOU 274
      AA(ITWP+17) = <UFACTR>                                                    DESFOU 275
C            SUBTRACT TWO FILM COEFS IF QUICK WALL                              DESFOU 276
      IF (NRESF.EQ.0) AA(ITWP+17) =                                             DESFOU 277
     1  1./AMAX1( 0.01, 1./<UFACTR> - 1.36 )                                    DESFOU 278
      AA(ITWP+16) = <IW-IFR>                                                    DESFOU 279
C              SET FILM RES TO 0.68 IF QUICK CONSTRUCTION                       DESFOU 280
      IF (NRESF.EQ.0) AA(ITWP+16) = 0.68                                        DESFOU 281
      IF (NRESF.EQ.0) GO TO 444                                                 DESFOU 282
C            SET PTRS TO RESPONSE FACTORS                                       DESFOU 283
      J1 = ITWP + LTWBAS + 4*NRESF - 1                                          DESFOU 284
      J2 = J1 + NRESF                                                           DESFOU 285
      J3 = J2 + NRESF                                                           DESFOU 286
C            GET MODIFIED SURFACE-TO-SURFACE X, Y, AND Z RESPONSE FACTORS       DESFOU 287
C            (RF(I) MODIFIED = RF(I) - COMRAT*RF(I-1), EXCEPT RF(1) MODIFIED    DESFOU 288
C            = RF(1))                                                           DESFOU 289
      DO 443 IRF = 1,NRESF                                                      DESFOU 290
      IR = 3*(IRF-1)                                                            DESFOU 291
      AA(J1+IRF) = <RFXIR>                                                      -036     1
      AA(J2+IRF) = <RFYIR>                                                      -036     2
      AA(J3+IRF) = <RFZIR>                                                      -036     3
      IF (IRF.NE.1) THEN                                                        -036     4
        IR = IR-3                                                               -036     5
        AA(J1+IRF) = AA(J1+IRF) - <RFXIR>*<RFCOMR>                              -036     6
        AA(J2+IRF) = AA(J2+IRF) - <RFYIR>*<RFCOMR>                              -036     7
        AA(J3+IRF) = AA(J3+IRF) - <RFZIR>*<RFCOMR>                              -036     8
      ENDIF                                                                     -036     9
  443 CONTINUE                                                                  DESFOU 300
  444 CONTINUE                                                                  DESFOU 301
      ITWP = ITWP + LTW                                                         DESFOU 302
      LTWB = LTWB + LTW                                                         DESFOU 303
  440 CONTINUE                                                                  DESFOU 304
  445 CONTINUE                                                                  DESFOU 305
      ISPCD(49,IZ) = NCW                                                        DESFOU 306
C            SET PTR TO BEG OF COM WALL DATA IN DES FILE FOR THIS SPACE         DESFOU 307
C            (RELATIVE TO BEG OF WALL PARAMETERS BLOCK)                         DESFOU 308
      IF (NCW.EQ.0) GO TO 446                                                   DESFOU 309
      ISPCD(50,IZ) = ICWRB                                                      DESFOU 310
      IF (<FEATURE>.EQ.1) ISPCD(49,IZ) = ITWP - ITWS + 5                        DESFOU 311
  446 CONTINUE                                                                  DESFOU 312
C          IHRPF IS POINTER TO HOURLY DATA BUFFER FOR EACH ZONE IN SYSTEMS      DESFOU 313
C          INCREMENT ACCORDING TO 60 BIT OR 30 BIT (IWSIZ=2) WORD SIZE.         DESFOU 314
C          *** NOTE: 60 BIT INCREMENT MAY NOT BE CORRECT                        DESFOU 315
      IF (IWSIZ .EQ. 2) THEN                                                    DESFOU 316
          IHRFP = IHRFP + 11                                                    DESFOU 317
        ELSE                                                                    DESFOU 318
          IHRFP = IHRFP + 4                                                     DESFOU 319
        ENDIF                                                                   DESFOU 320
      IF (<FEATURE> .EQ. 1)  IHRFP = IHRFP + 4                                  DESFOU 321
C              ADD FOUR MORE WORDS FOR EACH COM WALL DEFD IN THE SPACE          DESFOU 322
      IHRFP = IHRFP + 4*NCW                                                     DESFOU 323
      MZ     = MZ + MZLEN                                                       DESFOU 324
  450 CONTINUE                                                                  DESFOU 325
      IF (LTWB .EQ. 0)  LTWB = 1                                                DESFOU 326
C            LOOP OVER INTERIOR WALLS AND ASSEMBLE FIRST 5 WORDS                DESFOU 327
      IF (NIW .EQ. 0)  GO TO 500                                                DESFOU 328
      MI     = IIWB                                                             DESFOU 329
      IIWS = MLAST + 1                                                          DESFOU 330
      IIWE = MLAST                                                              DESFOU 331
      CALL GETBUF(IA,NIW*5,MLAST)                                               DESFOU 332
      DO 400 I=1,NIW                                                            DESFOU 333
C              WORD 1 = ZONE FROM (IN)                                          DESFOU 334
C              WORD 2 = ZONE TO (NEXT-TO)                                       DESFOU 335
C              WORD 3 = U*A FOR WALL                                            DESFOU 336
C              WORD 4 = INT-WALL-TYPE                                           DESFOU 337
C              WORD 5 = PTR IN DESIGN FILE TO WALL-PARS FOR THIS WALL           DESFOU 338
      MP = <MIWPROPRL>                                                          DESFOU 339
      U      = 1.0/((1.0/<UFACTR>) + <IW-IFR>)                                  DESFOU 340
      MZ     = <MZIN>                                                           DESFOU 341
      IA(IIWE+1) = <IZNUM>                                                      DESFOU 342
      MZ     = <MZNEXTTO>                                                       DESFOU 343
      IA(IIWE+2) = <IZNUM>                                                      DESFOU 344
      AA(IIWE+3) = <IWAR> * U                                                   DESFOU 345
C            FOR INT WALLS BET A SUNSPACE AND A REGULAR SPACE, PASS ZERO        DESFOU 346
C            CONDUCTANCE HERE. (THE UA OF INT WINDOWS, WHICH MAY VARY DUE       DESFOU 347
C            TO MOVABLE INSULATION, IS PASSED IN THE HOURLY LOADS OUTPUT.       DESFOU 348
C            THE INT WINDOW PLUS OPAQUE INT WALL CONDUCTANCE IS ADDED TO        DESFOU 349
C            THE OVERALL ZONE CONDUCTANCE IN THE SYSTEMS ROUTINE HOURIN.)       DESFOU 350
      IF (<IWSSPID>.EQ.1) AA(IIWE+3) = 0.0                                      DESFOU 351
      IA(IIWE+4) = <IW-TYPE>                                                    DESFOU 352
      IA(IIWE+5) = <MIWPARDF>                                                   DESFOU 353
      IIWE = IIWE + 5                                                           DESFOU 354
  400 MI     = MI + MIWLEN                                                      DESFOU 355
  500 CONTINUE                                                                  DESFOU 356
      LIWC = 5*NIW                                                              DESFOU 357
      IF (NIW.EQ.0) THEN                                                        DESFOU 358
          LIWC = 1                                                              DESFOU 359
          IIWE = IIWS                                                           DESFOU 360
          CALL GETBUF(IA,1,MLAST)                                               DESFOU 361
      END IF                                                                    DESFOU 362
C                                                                               DESFOU 363
C              GET BUILDING HEAT PEAK                                           DESFOU 364
      BLDHP  = TOTL(BLDPK(11), 12)                                              DESFOU 365
C              GET BUILDING COOLING PEAK SENSIBLE                               DESFOU 366
      BLDCPS = TOTL(BLDPK(25), 12)                                              DESFOU 367
C              GET BUILDING COOLING PEAK LATENT                                 DESFOU 368
      BLDCPL = TOTL(BLDPK(37), 4)                                               DESFOU 369
C              WRITE DESIGN FILE                                                DESFOU 370
      WRITE (IDSNFL) NRUNPD, NSP, LIWC, NDESDY, LLDSB, LTWB                     DESFOU 371
      WRITE (IDSNFL) IRUNPD, ((SPCD(J,I),J=1,50),                               DESFOU 372
     +                        (DSBUF(J,I),J=1,2),I=1,NSP),                      DESFOU 373
     1               (AA(I),I=IIWS,IIWE),BLDHP,BLDCPS,BLDCPL,PATMDS,            DESFOU 374
     2               IDSFLG,iDSdates,BLDPK(4),BLDPK(9),HRHPK,HRCPK,             -044e5r  4
     3 (DESHRQ(I),I=1,48),   (HUMRD(I),I=1,24), (DESHRQ(I),I=73,120),           DESFOU 376
     4 (DESHRQ(I),I=121,168),(HUMRD(I),I=25,48),(DESHRQ(I),I=193,240),          DESFOU 377
     5 (DESHRQ(I),I=241,288),(HUMRD(I),I=49,72),(DESHRQ(I),I=313,360),          DESFOU 378
     + IDDTYP(1),IDDTYP(2),                                                     DDAY1   89
     6               (AA(ITWS+I),I=1,LTWB)                                      DESFOU 379
C            PRINT SPACE, I-W, AND WALL PARS BLOCKS                             DESFOU 380
      IF (IREPRT(1,35).EQ.0 .or. IREPRT(1,32).EQ.0) GO TO 600                   IREPRT  95
      CALL DUMPIT (20HDES FIL SPACE DATA  ,SPCD(1,1),50*NSP)                    DESFOU 382
      CALL DUMPIT (20HDES FIL INT WAL BLK ,AA(IIWS),IIWE-IIWS+1)                -072     1
      CALL DUMPIT (20HDES FIL WALL PARAMS ,AA(ITWS+1),LTWB)                     DESFOU 384
  600 CONTINUE                                                                  DESFOU 385
      IF (IREPRT(1,35).NE.0 .and. IREPRT(1,32).NE.0)                            IREPRT  96
     $   CALL DUMPIT(20HDES DAY BLOCK       ,                                   DESFOU 387
     1  DESHRQ(1),360)                                                          DESFOU 388
      RETURN                                                                    DESFOU 389
      END                                                                       DESFOU 390
      SUBROUTINE DESWTH                                                         DESWTH   2
C                                                                               DESWTH   3
C              FILLS HOURLY WEATHER VARIABLES WITH DESIGN                       DESWTH   4
C              DAY WEATHER                                                      DESWTH   5
C                                                                               DESWTH   6
      COMMON  /BLDVA/  BLDVOL, BLDARE, PATMDS                                   /BLDVA/  2
      COMMON /DESHQ/  IDDFLG,DESHRQ(360),IDDTYP(2)                              DDAY1    2
      COMMON  /DESW/   DESDYQ(34)                                               DDAY1    3
      INTEGER IDESDYQ(34)                                                       DDAY1    4
      EQUIVALENCE (DESDYQ(1),IDESDYQ(1))                                        DDAY1    5
      COMMON  /PSYDES/  HUMRD(72)                                               /PSYDES/ 2
      COMMON /TIME  / IDOY, IDOW, IDSTF, ISCHR, ISCDAY, iDSdates(6),            -044e5r  1
     1                IMO, IDAY, IYR, IHR, CLOCK(10), IDSFLG,                   HOLID1   4
     2                MONDSC(12), MONLEN(12), MONSDA(12), IEODMR                /TIME/   4
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
      IPDB = (IDDFLG-1)*120                                                     DDAY1   90
      IP2    = (IDDFLG-1)*17                                                    DDAY1   91
      IPWB   = IPDB + 24                                                        DESWTH  15
      IPDP   = IPWB + 24                                                        DESWTH  16
      DBT    = DESHRQ(IPDB+IHR)                                                 DESWTH  17
      WBT    = DESHRQ(IPWB+IHR)                                                 DESWTH  18
      DPT    = DESHRQ(IPDP+IHR)                                                 DESWTH  19
      PATM   = PATMDS                                                           DESWTH  20
      IPHR   = (IDDFLG-1)*24                                                    DDAY1   92
      HUMRAT = HUMRD(IPHR+IHR)                                                  DESWTH  22
      WNDSPD = DESDYQ(IP2+7)                                                    DDAY1   93
      CLDAMT = DESDYQ(IP2+9)                                                    DDAY1   94
      ICLDTY = IDESDYQ(IP2+16)                                                  DDAY1   95
      IWNDDR = IDESDYQ(IP2+8)                                                   DDAY1   96
      DBTR   = DBT + 460.                                                       DESWTH  30
      CLRNES = DESDYQ(IP2+15)                                                   DDAY1   97
      TGNDR = DESDYQ(IP2+12)                                                    DDAY1   98
      TGNDR  = TGNDR + 460.                                                     DESWTH  33
      RETURN                                                                    DESWTH  34
      END                                                                       DESWTH  35
      SUBROUTINE  EXTPRP(IERRFL)                                                EXTPRP   2
C                                                                               EXTPRP   3
C              PREPARE EXTERNAL SURFACE DATA .                                  EXTPRP   4
C              CALLED FROM READSF INSIDE THE ZONE LOOP                          EXTPRP   5
C                                                                               EXTPRP   6
      COMMON /CLCFLG/ IFSTHR,IPRDFL,IGOLGE,NDD,LDSTYP,IFHRP                     DDAY1    1
      COMMON  /CONST/  DTOR, PIOVR2, PIOVR4, IBLNK, UNDEF, IUNDEF,              /CONST/  2
     1                 UNFILD, URAD, DEFIFR, DEFCFR, DEFINC, KWBTU              /CONST/  3
      REAL             KWBTU                                                    /CONST/  4
      COMMON  /LENS/   MWFLEN, MRLEN, MSHLEN, MWNLEN, MDRLEN, MXLEN,            /LENS/   2
     1                 MULEN, MZLEN, MIWLEN, MFLLEN,                            HRr      5
     2                 LMTB, LLDSOU, MSTLEN, LSTFT, MWLLEN                      BLIND    1
      COMMON  /LOCALD/ STALAT, STALON, ITIMZ, BAZIM, BALTIT,                    /LOCALD/ 2
     1                 SSTALA, CSTALA, TSTALA, SBAZIM, CBAZIM                   /LOCALD/ 3
     2                 ,BXORG, BYORG, SHCOEF, TP1, TP2, WSTP1, WSTP2,           /LOCALD/ 4
     3                 WSHGT,WSHGTL(12),ISREFL,IHOLX                            HOLID1   2
      DIMENSION LOCALD(32)                                                      HOLID1   3
      EQUIVALENCE      (LOCALD(1),STALAT)                                       /LOCALD/ 7
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     BLIND    2
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        FLOOR1   3
      COMMON  /PTRBGN/ ISCB, IWFB, IWPB, ICONSB, IGTB, IWLB, IGEOB,             HRr      6
     1                 ISHADB, IWINB, IDRB, IEWB, IUGB, ISPB, IIWPB,            HRr      7
     2                 IIWB, IFLB, ISPCDB, IOTHB, ILHB, IZQCMB, ISSHDB,         HRr      8
     3                 IOHFIB, IZLSK, IZLSL, ISTFB                              HRr      9
      COMMON  /SIZE/   LENGTH,NVECT,NSCHED,NWF,NWPAR,NCONS,NGT,NWL,NGEO,        BLIND    5
     1                 NGSHAD, NWIN, NDOOR, NEW, NUG, NSP, NIWP, NIW,           /SIZE/   3
     2                 NFL, NDESDY, NBR, NOTH, NITH, NOPSRF,                    HRr     10
     3                 NSURF, NSSHD, NSHTOT                                     GEO1     1
      COMMON  /SURFD/  NV, AREA, PERIM, AZIM, TILT, H, W                        /SURFD/  2
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
      COMMON  /ZWALOC/ XZ0, YZ0, ZZ0, AZ0,  SAZ, CAZ, XW0, YW0, ZW0,            /ZWALOC/ 2
     1                 AW0, TW0,  SAW, CAW, STW, CTW, XW, YW                    /ZWALOC/ 3
      COMMON        // AA(75 000 000)                                           -048ar   1
      INTEGER          IA(75 000 000)                                           -048ar   2
      EQUIVALENCE  (IA(1), AA(1))                                               //       4
C                                                                               EXTPRP  18
      MX     = <MZEXT>                                                          EXTPRP  19
      IE2    = <NEXTS>                                                          EXTPRP  20
C              LOOP OVER WALLS IN THIS ZONE                                     EXTPRP  21
      DO  4000  IE = 1 , IE2                                                    EXTPRP  22
      MG     = <MXGEOM>                                                         EXTPRP  25
      MP     = <MXPROPRL>                                                       LDS1    10
      MWI    = <MXWIN>                                                          EXTPRP  27
      MD     = <MXDOOR>                                                         EXTPRP  28
      MH     = <MXSHAD>                                                         EXTPRP  29
C              FOR EXTERIOR WALL, IF ONLY ONE OF SKYFF OR GNDFF IS GIVEN        GEO1     2
C              CALCULATE THE OTHER                                              GEO1     3
      IF( (ITYPLS(<EWSKYFF>) .EQ. ITYPLS(UNFILD)) .AND.                         EXTPRP  60
     1    (ITYPLS(<EWGNDFF>) .EQ. ITYPLS(UNFILD)) )GOTO  200                    EXTPRP  61
      IF( ITYPLS(<EWSKYFF>) .EQ. ITYPLS(UNFILD) )                               EXTPRP  62
     1     <EWSKYFF> = 1. - <EWGNDFF>                                           EXTPRP  63
      IF( ITYPLS(<EWGNDFF>) .EQ. ITYPLS(UNFILD) )                               EXTPRP  64
     1     <EWGNDFF> = 1. - <EWSKYFF>                                           EXTPRP  65
  200 CONTINUE                                                                  EXTPRP  66
C              INITIALIZE SHADOW RATIOS TO ZERO                                 EXTPRP  78
      J      = 1                                                                EXTPRP  79
      CALL  FILLN ( 0., <XGOLGE>, 24 )                                          EXTPRP  80
C              INITIALIZE OUTSIDE SURFACE TEMPERATURE HISTORY                   EXTPRP  81
C              TO DRYBULB TEMP OF FIRST HOUR                                    EXTPRP  82
      NRESF  = <NRESF>                                                          EXTPRP  83
      IF( NRESF .EQ. 0 )  GO TO 700                                             EXTPRP  84
      CALL  FILLN ( DBTR, AA(<MEWOTH>), NRESF )                                 EXTPRP  85
      IR     = 3*NRESF - 3                                                      EXTPRP  86
      DT     = DBTR - 535.                                                      EXTPRP  87
C              INITIALIZE SOME RESPONSE FACTOR SUMMATIONS                       EXTPRP  88
      <XSXCOMP> = ( <RFUX> + <RFXIR> / (1. - <RFCOMR> ) )*DT                    EXTPRP  89
      <XSQCOMP> = ( <RFUY> + <RFYIR> / (1. - <RFCOMR> ) )*DT                    EXTPRP  90
      <SUMXDT> = <RFUX> * DT                                                    EXTPRP  91
      <SUMYDT>   = <RFUY> * DT                                                  EXTPRP  92
      IF ((ITYPLS(<EWSKYFF>) .EQ. ITYPLS(UNFILD)) .AND.                         EXTPRP  93
     1    (ITYPLS(<EWGNDFF>) .NE. ITYPLS(UNFILD)))                              EXTPRP  94
     2     <EWSKYFF> = 1. - <EWGNDFF>                                           EXTPRP  95
      IF ((ITYPLS(<EWSKYFF>) .NE. ITYPLS(UNFILD)) .AND.                         EXTPRP  96
     1    (ITYPLS(<EWGNDFF>) .EQ. ITYPLS(UNFILD)))                              EXTPRP  97
     2     <EWGNDFF> = 1. - <EWSKYFF>                                           EXTPRP  98
  700 CONTINUE                                                                  EXTPRP  99
C              PREPARE ATTACHMENTS DATA .                                       EXTPRP 100
      NWI    = <NWIN>                                                           EXTPRP 101
      IF (NWI .EQ. 0)  GO TO 1120                                               EXTPRP 102
C              LOOP OVER WINDOWS                                                EXTPRP 103
      DO  1100  K = 1 , NWI                                                     EXTPRP 104
C              FOR WINDOW, IF ONLY ONE OF SKYFF OR GNDFF IS GIVEN               GEO1     4
C              CALCULATE THE OTHER                                              GEO1     5
      IF( (ITYPLS(<WISKYFF>).EQ.ITYPLS(UNFILD)) .AND.                           EXTPRP 116
     1    (ITYPLS(<WIGNDFF>) .EQ. ITYPLS(UNFILD)) )GOTO  800                    EXTPRP 117
      IF( ITYPLS(<WISKYFF>) .EQ. ITYPLS(UNFILD) )                               EXTPRP 118
     1     <WISKYFF> = 1. - <WIGNDFF>                                           EXTPRP 119
      IF( ITYPLS(<WIGNDFF>) .EQ. ITYPLS(UNFILD) )                               EXTPRP 120
     1     <WIGNDFF> = 1. - <WISKYFF>                                           EXTPRP 121
  800 CONTINUE                                                                  EXTPRP 122
C              ZERO THE SHADOW RATIOS                                           EXTPRP 133
      JJ     = 1                                                                EXTPRP 134
      CALL  FILLN ( 0., <WGOLGE>, 24 )                                          EXTPRP 135
      <TGIN> = DBTR                                                             EXTPRP 136
      IF ((ITYPLS(<WISKYFF>) .EQ. ITYPLS(UNFILD)) .AND.                         EXTPRP 137
     1    (ITYPLS(<WIGNDFF>) .NE. ITYPLS(UNFILD)))                              EXTPRP 138
     2     <WISKYFF> = 1. - <WIGNDFF>                                           EXTPRP 139
      IF ((ITYPLS(<WISKYFF>) .NE. ITYPLS(UNFILD)) .AND.                         EXTPRP 140
     1    (ITYPLS(<WIGNDFF>) .EQ. ITYPLS(UNFILD)))                              EXTPRP 141
     2     <WIGNDFF> = 1. - <WISKYFF>                                           EXTPRP 142
 1100 MWI    = MWI + MWNLEN                                                     EXTPRP 143
 1120 ND     = <NDOOR>                                                          EXTPRP 144
      IF (ND .EQ. 0)  GO TO 1520                                                EXTPRP 145
C              LOOP OVER DOORS                                                  EXTPRP 146
      DO 1500 K=1,ND                                                            EXTPRP 147
C              FOR DOOR, IF ONLY ONE OF SKYFF OR GNDFF IS GIVEN                 GEO1     6
C              CALCULATE THE OTHER                                              GEO1     7
      IF( (ITYPLS(<DRSKYFF>).EQ.ITYPLS(UNFILD)) .AND.                           EXTPRP 159
     1    (ITYPLS(<DRGNDFF>) .EQ. ITYPLS(UNFILD)) )GOTO 1200                    EXTPRP 160
      IF( ITYPLS(<DRSKYFF>) .EQ. ITYPLS(UNFILD) )                               EXTPRP 161
     1     <DRSKYFF> = 1. - <DRGNDFF>                                           EXTPRP 162
      IF( ITYPLS(<DRGNDFF>) .EQ. ITYPLS(UNFILD) )                               EXTPRP 163
     1     <DRGNDFF> = 1. - <DRSKYFF>                                           EXTPRP 164
 1200 CONTINUE                                                                  EXTPRP 165
C              ZERO SHADOW RATIOS                                               EXTPRP 176
      JJ     = 1                                                                EXTPRP 177
      CALL FILLN(0.,<DRGOLGE>,24)                                               EXTPRP 178
      IF ( (ITYPLS(<DRSKYFF>) .EQ. ITYPLS(UNFILD)) .AND.                        EXTPRP 179
     1     (ITYPLS(<DRGNDFF>) .NE. ITYPLS(UNFILD)) )                            EXTPRP 180
     2     <DRSKYFF> = 1. - <DRGNDFF>                                           EXTPRP 181
      IF ( (ITYPLS(<DRSKYFF>) .NE. ITYPLS(UNFILD)) .AND.                        EXTPRP 182
     1     (ITYPLS(<DRGNDFF>) .EQ. ITYPLS(UNFILD)) )                            EXTPRP 183
     2     <DRGNDFF> = 1. - <DRSKYFF>                                           EXTPRP 184
 1500 MD     = MD + MDRLEN                                                      EXTPRP 185
 1520 CONTINUE                                                                  EXTPRP 186
      MX     = MX + MXLEN                                                       EXTPRP 189
 4000 CONTINUE                                                                  EXTPRP 190
      RETURN                                                                    EXTPRP 191
      END                                                                       EXTPRP 192
      SUBROUTINE FFDIF                                                          FFDIF    2
C                                                                               FFDIF    3
C            CALLED BY LOADS.  FOR EACH EXTERIOR WALL, WINDOW AND DOOR          FFDIF    4
C            CALCULATES THE FOLLOWING RATIO: (DIFFUSE SKY RADIATION ON          FFDIF    5
C            SURFACE WITH SHADING) / (DIFFUSE SKY RADIATION ON SURFACE          FFDIF    6
C            WITHOUT SHADING).  A SIMILAR RATIO IS CALCULATED FOR               FFDIF    7
C            GROUND RADIATION.  THE RATIOS ARE STORED                           VISBL 1011
C            IN <EWSKYFF>,<EWGNDFF>,<WISKYFF>,<WIGNDFF>,                        VISBL 1012
C            <DRSKYFF>, AND <DRGNDFF>.  TO CALCULATE INCIDENT DIFFUSE           FFDIF   10
C            RADIATION, THE SKY AND GROUND HEMISPHERES ARE DIVIDED              FFDIF   11
C            INTO SOURCE ELEMENTS (PATCHES).  EACH PATCH IS ASSUMED TO          FFDIF   12
C            HAVE THE SAME RADIANCE, I.E. RADIATION IS ISOTROPIC.               FFDIF   13
C            THE SUM OF IRRADIANCE FROM PATCHES ABOVE THE HORIZON               FFDIF   14
C            GIVES THE NET SKY IRRADIANCE ON A SURFACE.  SIMILARLY THE          FFDIF   15
C            SUM OF THE IRRADIANCE FROM PATCHES BELOW THE HORIZON               FFDIF   16
C            GIVE THE NET IRRADIANCE FROM THE GROUND.  THE SHADING              FFDIF   17
C            ROUTINES (SHADOW, ETC) ARE USED TO DETERMINE HOW MUCH              FFDIF   18
C            RADIATION FROM A GIVEN PATCH IS BLOCKED BY SHADING                 FFDIF   19
C            SURFACES.                                                          FFDIF   20
C            THE RATIOS FOUND IN THIS ROUTINE ARE USED                          FFDIF   21
C            IN SUN3, CALEXT, AND CALWIN TO DETERMINE FORM FACTORS              FFDIF   22
C            FOR DIFFUSE SOLAR SKY AND GROUND RADIATION WHEN SHADING            FFDIF   23
C            IS PRESENT.  THEY ARE ALSO USED IN CALEXT AND CALWIN               FFDIF   24
C            TO DETERMINE FORM FACTORS FOR EXTERIOR LONG WAVE                   FFDIF   25
C            (INFRARED) RADIATION WHEN SHADING IS PRESENT.                      VISBL 1013
C                                                                               FFDIF   29
      COMMON /CFFDIF/IFFDIF                                                     FFDIF   30
      COMMON  /LENS/   MWFLEN, MRLEN, MSHLEN, MWNLEN, MDRLEN, MXLEN,            /LENS/   2
     1                 MULEN, MZLEN, MIWLEN, MFLLEN,                            HRr      5
     2                 LMTB, LLDSOU, MSTLEN, LSTFT, MWLLEN                      BLIND    1
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     BLIND    2
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        FLOOR1   3
      COMMON  /PTRBGN/ ISCB, IWFB, IWPB, ICONSB, IGTB, IWLB, IGEOB,             HRr      6
     1                 ISHADB, IWINB, IDRB, IEWB, IUGB, ISPB, IIWPB,            HRr      7
     2                 IIWB, IFLB, ISPCDB, IOTHB, ILHB, IZQCMB, ISSHDB,         HRr      8
     3                 IOHFIB, IZLSK, IZLSL, ISTFB                              HRr      9
      COMMON  /REPORT/ IREPRT(4,37),IPRG,IUNIQV(100),IUNIQS(100),IUNIQL         BIGNAM   1
      COMMON  /SIZE/   LENGTH,NVECT,NSCHED,NWF,NWPAR,NCONS,NGT,NWL,NGEO,        BLIND    5
     1                 NGSHAD, NWIN, NDOOR, NEW, NUG, NSP, NIWP, NIW,           /SIZE/   3
     2                 NFL, NDESDY, NBR, NOTH, NITH, NOPSRF,                    HRr     10
     3                 NSURF, NSSHD, NSHTOT                                     GEO1     1
      COMMON  /SUND/   ISUNUP, GUNDOG, HORANG, TDECLN, EQTIME, SOLCON,          /SUND/   2
     1                 ATMEXT, SKYDFF, RAYCOS(3), RDN,                          /SUND/   3
     2                 BSUN, DECLN, CD, SD, FSUNUP                              /SUND/   4
      COMMON /TIME  / IDOY, IDOW, IDSTF, ISCHR, ISCDAY, iDSdates(6),            -044e5r  1
     1                IMO, IDAY, IYR, IHR, CLOCK(10), IDSFLG,                   HOLID1   4
     2                MONDSC(12), MONLEN(12), MONSDA(12), IEODMR                /TIME/   4
      COMMON  /CONST/  DTOR, PIOVR2, PIOVR4, IBLNK, UNDEF, IUNDEF,              /CONST/  2
     1                 UNFILD, URAD, DEFIFR, DEFCFR, DEFINC, KWBTU              /CONST/  3
      REAL             KWBTU                                                    /CONST/  4
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                         /FILES/  3
     2              , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                    /FILES/  4
     3                IHRREP(3), IHRPAS(2)                                      /FILES/  5
      COMMON        // AA(75 000 000)                                           -048ar   1
      INTEGER          IA(75 000 000)                                           -048ar   2
      EQUIVALENCE  (IA(1), AA(1))                                               //       4
      external  DDOT                                                            FFDIF   41
c                                                                               FFDIF   42
      DIMENSION W1(3),W2(3),W3(3),W21(3),W23(3),WNM(3)                          FFDIF   43
      LOGICAL LAST                                                              FFDIF   44
      DATA NPHR/12/, NTHR/12/                                                   FFDIF   45
C                                                                               FFDIF   46
C            SET FLAG USED IN SHADOW                                            FFDIF   47
      IFFDIF=1                                                                  FFDIF   48
      IF(NEW.EQ.0) GO TO 5000                                                   FFDIF   49
C            FORCE SHADING ROUTINE TO THINK SUN IS UP                           FFDIF   50
      ISUNUP=1                                                                  FFDIF   51
C            IHR=1 MAKES SHADOW PUT SHADING FRACTIONS IN THE FIRST              FFDIF   52
C            LOCATION OF XGOLGE, WGOLGE AND DRGOLGE                             FFDIF   53
      IHR=1                                                                     FFDIF   54
C            SET INCREMENT OF PATCH ALTITUDE AND AZIMUTH                        FFDIF   55
      DPHR = 2.*PIOVR2/FLOAT(NPHR)                                              FFDIF   56
      DTHR = 4.*PIOVR2/FLOAT(NTHR)                                              FFDIF   57
C            MINIMUM VALUE OF ALTITUDE AND AZIMUTH.  THE SUMMATION              FFDIF   58
C            WILL BE OVER ALT. FROM -PI/2 TO PI/2 AND AZ. FROM O TO 2PI         FFDIF   59
      PHRMIN = -(PIOVR2 - 0.5*DPHR)                                             FFDIF   60
      THRMIN = 0.5*DTHR                                                         FFDIF   61
C                                                                               FFDIF   62
C            INITIALIZE SHADING FACTOR ARRAYS                                   FFDIF   63
C                                                                               FFDIF   64
C            LOOP OVER EXT. WALLS                                               FFDIF   65
      MX=IEWB                                                                   FFDIF   66
      DO 500 IEXT=1,NEW                                                         FFDIF   67
      DO 1001 J=1,5                                                             FFDIF   68
 1001 <XGOLGE>=0.                                                               FFDIF   69
C             LOOP OVER WINDOWS                                                 FFDIF   70
 1300 NWN = <NWIN>                                                              FFDIF   71
      IF(NWN.EQ.0) GO TO 1380                                                   FFDIF   72
      MWI = <MXWIN>                                                             FFDIF   73
      DO 1500 IWN=1,NWN                                                         FFDIF   74
      DO 1002 JJ=1,5                                                            FFDIF   75
 1002 <WGOLGE>=0.                                                               FFDIF   76
 1500 MWI = MWI+MWNLEN                                                          FFDIF   77
C            LOOP OVER DOORS                                                    FFDIF   78
 1380 ND = <NDOOR>                                                              FFDIF   79
      IF (ND.EQ.0) GO TO 500                                                    FFDIF   80
      MD = <MXDOOR>                                                             FFDIF   81
      DO 1600 ID=1,ND                                                           FFDIF   82
      DO 1003 JJ=1,5                                                            FFDIF   83
 1003 <DRGOLGE>=0.                                                              FFDIF   84
 1600 MD = MD + MDRLEN                                                          FFDIF   85
  500 MX = MX + MXLEN                                                           FFDIF   86
C                                                                               FFDIF   87
C            LOOP OVER PATCH ALTITUDE AND AZIMUTH                               FFDIF   88
C                                                                               FFDIF   89
      DO 1000 IPHR=1,NPHR                                                       FFDIF   90
      PHR = PHRMIN + FLOAT(IPHR-1)*DPHR                                         FFDIF   91
C           THE PATCH WILL BE CONSIDERED AS A SUN POSITION IN SHADOW,           FFDIF   92
C           SO WE NEED THE PATCH DIRECTION COSINES                              FFDIF   93
      RAYCOS(3) = SIN(PHR)                                                      FFDIF   94
      COSPHR = COS(PHR)                                                         FFDIF   95
C                                                                               FFDIF   96
      DO 2000  ITHR=1,NTHR                                                      FFDIF   97
      LAST  = (IPHR.EQ.NPHR).AND.(ITHR.EQ.NTHR)                                 FFDIF   98
      THR = THRMIN + FLOAT(ITHR-1)*DTHR                                         FFDIF   99
      RAYCOS(1) = COSPHR*COS(THR)                                               FFDIF  100
      RAYCOS(2) = COSPHR*SIN(THR)                                               FFDIF  101
C                                                                               FFDIF  102
C            FOR THIS PATCH, GET THE SHADED FRACTION                            FFDIF  103
C            OF EACH EXT. WALL, WINDOW, AND DOOR                                FFDIF  104
C                                                                               FFDIF  105
      CALL SHADOW                                                               FFDIF  106
C                                                                               FFDIF  107
C            ADD THE RADIATION FROM THIS PATCH, WITH AND WITHOUT                FFDIF  108
C            SHADING, TO THE TOTAL RADIATION FALLING ON EACH SURFACE            FFDIF  109
C                                                                               FFDIF  110
C            LOOP OVER EXTERIOR WALLS                                           FFDIF  111
      MX=IEWB                                                                   FFDIF  112
      DO 4000 IEXT=1,NEW                                                        FFDIF  113
      MG = <MXGEOM>                                                             FFDIF  114
C            FIRST THREE VERTICES OF WALL                                       COLLN    1
      DO I=1,3                                                                  COLLN    2
        W1(I) = AA(MG+I)                                                        COLLN    3
        W2(I) = AA(MG+3+I)                                                      COLLN    4
        W3(I) = AA(MG+6+I)                                                      COLLN    5
      ENDDO                                                                     COLLN    6
      DO I=1,3                                                                  COLLN    7
        W21(I) = W1(I) - W2(I)                                                  COLLN    8
        W23(I) = W3(I) - W2(I)                                                  COLLN    9
      ENDDO                                                                     COLLN   10
      CALL DCROSS(W23,W21,WNM)                                                  COLLN   11
C            COS OF ANGLE BETWEEN WALL NORMAL AND PATCH DIRECTION               FFDIF  127
      COSETA = DDOT(RAYCOS,WNM)/SQRT(DDOT(WNM,WNM))                             FFDIF  128
C            SKIP IF CENTER OF PATCH IS LESS THAN ONE SOLAR DIAMETER            FFDIF  129
C            IN FRONT OF WALL (WE USE .0092 RADIANS, THE SOLAR DIAM             FFDIF  130
C            RATHER THAN ZERO FOR CONSISTENCY WITH SHDWIN)                      FFDIF  131
      IF(COSETA.LE.0.0092) GO TO 4250                                           FFDIF  132
C            SOLID ANGLE OF PATCH TIMES COSINE OF INCIDENCE ANGLE               FFDIF  133
      FAC1 = COSPHR*DTHR*DPHR*COSETA                                            FFDIF  134
C            FOR THIS PATCH, FRACTION OF WALL WHICH IS UNSHADED                 FFDIF  135
      J=1                                                                       FFDIF  136
      UNSH = 1. - <XGOLGE>                                                      FFDIF  137
      IF (PHR.LE.0.) GO TO 4210                                                 FFDIF  138
C            PATCH IS IN SKY HEMISPHERE.                                        FFDIF  139
C            USE LOCATIONS 2-5 IN SHADING FRACTION ARRAY FOR TEMPORARY          FFDIF  140
C            STORAGE --                                                         FFDIF  141
C              LOC 2 = SKY DIFF IRRADIANCE, NO SHADING                          FFDIF  142
C              LOC 3 = SKY DIFF IRRADIANCE, WITH SHADING                        FFDIF  143
C              LOC 4 = GND DIFF IRRADIANCE, NO SHADING                          FFDIF  144
C              LOC 5 = GND DIFF IRRADIANCE, WITH SHADING                        FFDIF  145
      J=2                                                                       FFDIF  146
      <XGOLGE> = <XGOLGE> + FAC1                                                FFDIF  147
      J=3                                                                       FFDIF  148
      <XGOLGE> = <XGOLGE> + FAC1*UNSH                                           FFDIF  149
      GO TO 4215                                                                FFDIF  150
C             PATCH IS IN GROUND HEMISPHERE                                     FFDIF  151
 4210 J=4                                                                       FFDIF  152
      <XGOLGE> = <XGOLGE> + FAC1                                                FFDIF  153
      J=5                                                                       FFDIF  154
      <XGOLGE> = <XGOLGE> + FAC1*UNSH                                           FFDIF  155
 4215 CONTINUE                                                                  FFDIF  156
C                                                                               FFDIF  157
      IF (IREPRT(1,35).NE.0.AND.IREPRT(1,6).NE.0) THEN                          IREPRT  97
      ETA=ACOS(COSETA)                                                          FFDIF  159
      WRITE(IOUTPT,1999) IPHR,ITHR,IEXT,PHR*57.3,THR*57.3,ETA,FAC1,             FFDIF  160
     1                   UNSH,(<XGOLGE>,J=2,5)                                  FFDIF  161
 1999 FORMAT(34H FFEXT--IP,IT,IE,P,T,ETA,F1,UN,XG=,3I3,4F10.3,5F6.3)            FFDIF  162
      END IF                                                                    FFDIF  163
C                                                                               FFDIF  164
 4250 CONTINUE                                                                  FFDIF  165
C             CHECK FOR END OF PATCH LOOP                                       FFDIF  166
      IF(.NOT.LAST) GO TO 4300                                                  FFDIF  167
C             ENTER SHADED/UNSHADED IRRADIANCE RATIOS AS NEGATIVE TO            FFDIF  168
C             INDICATE THEY HAVE BEEN CALCULATED AND STORED IN                  FFDIF  169
C             <EWSKYFF>, ETC.  THIS DISTINGUISHES <EWSKYFF>, ETC                FFDIF  170
C             FROM THE CASE WHERE THEY CONTAIN USER-SPECIFIED VALUES            FFDIF  171
      J=2                                                                       FFDIF  172
      SKY0 = <XGOLGE> + .000001                                                 FFDIF  173
      J=3                                                                       FFDIF  174
      SKYSH = <XGOLGE>                                                          FFDIF  175
      J=4                                                                       FFDIF  176
      GND0 = <XGOLGE> + .000001                                                 FFDIF  177
      J=5                                                                       FFDIF  178
      GNDSH = <XGOLGE>                                                          FFDIF  179
      <EWSKYFF> = SKYSH/SKY0                                                    VISBL 1014
      <EWGNDFF> = GNDSH/GND0                                                    VISBL 1015
C                                                                               FFDIF  185
      IF (IREPRT(1,35).NE.0.AND.IREPRT(1,6).NE.0)   WRITE(IOUTPT,2999)          IREPRT  98
     1                  SKYSH,SKY0,GNDSH,GND0,<EWSKYFF>,<EWGNDFF>               FFDIF  187
2999  FORMAT( ' FFDIF-- SKYSH,SKY0,GNDSH,GND0,(EWSKYFF),(EWGNDFF)=',            FFDIF  188
     1                 6F10.3 )                                                 FFDIF  189
 4300 CONTINUE                                                                  FFDIF  190
C                                                                               FFDIF  191
C             LOOP OVER WINDOWS                                                 FFDIF  192
C                                                                               FFDIF  193
      NWN = <NWIN>                                                              FFDIF  194
      IF(NWN.EQ.0) GO TO 4380                                                   FFDIF  195
      MWI = <MXWIN>                                                             FFDIF  196
      DO 4500 IWN=1,NWN                                                         FFDIF  197
      IF (COSETA.LE.0.0092) GO TO 4325                                          FFDIF  200
      JJ=1                                                                      FFDIF  201
      UNSH = 1.-<WGOLGE>                                                        FFDIF  202
      IF (PHR.LE.0.) GO TO 4310                                                 FFDIF  203
      JJ=3                                                                      FFDIF  204
      <WGOLGE> = <WGOLGE> + FAC1*UNSH                                           FFDIF  205
      GO TO 4315                                                                FFDIF  206
 4310 JJ=5                                                                      FFDIF  207
      <WGOLGE> = <WGOLGE> + FAC1*UNSH                                           FFDIF  208
 4315 CONTINUE                                                                  FFDIF  209
C                                                                               FFDIF  210
      IF (IREPRT(1,35).NE.0.AND.IREPRT(1,6).NE.0)                               IREPRT  99
     1 WRITE(IOUTPT,3999) IPHR,ITHR,IWN,PHR*57.3,THR*57.3,57.3*ETA,FAC1,        FFDIF  212
     1                   UNSH,(<WGOLGE>,J=2,5)                                  FFDIF  213
 3999 FORMAT(34H FFWIN--IP,IT,IE,P,T,ETA,F1,UN,WG=,3I3,4F10.3,5F6.3)            FFDIF  214
C                                                                               FFDIF  215
 4325 CONTINUE                                                                  FFDIF  216
      IF (.NOT.LAST) GO TO 4500                                                 FFDIF  217
      JJ=3                                                                      FFDIF  218
      SKYSH = <WGOLGE>                                                          FFDIF  219
      JJ=5                                                                      FFDIF  220
      GNDSH = <WGOLGE>                                                          FFDIF  221
      <WISKYFF> = SKYSH/SKY0                                                    VISBL 1016
      <WIGNDFF> = GNDSH/GND0                                                    VISBL 1017
C                                                                               FFDIF  224
      IF (IREPRT(1,35).NE.0.AND.IREPRT(1,6).NE.0)                               IREPRT 100
     1WRITE(IOUTPT,4999) SKYSH,SKY0,GNDSH,GND0,<WISKYFF>,<WIGNDFF>              FFDIF  226
 4999 FORMAT(/,39H SKYSH,SKY0,GNDSH,GND0,WISKYFF,WIGNDFF= ,6F10.3/)             FFDIF  227
C                                                                               FFDIF  228
 4500 MWI = MWI+MWNLEN                                                          FFDIF  229
 4380 CONTINUE                                                                  FFDIF  230
C                                                                               FFDIF  231
C            LOOP OVER DOORS                                                    FFDIF  232
C                                                                               FFDIF  233
      ND = <NDOOR>                                                              FFDIF  234
      IF (ND.EQ.0) GO TO 4000                                                   FFDIF  235
      MD = <MXDOOR>                                                             FFDIF  236
      DO 4600 ID=1,ND                                                           FFDIF  237
      IF (COSETA.LE.0.0092) GO TO 4415                                          FFDIF  240
      JJ=1                                                                      FFDIF  241
      UNSH = 1.-<DRGOLGE>                                                       FFDIF  242
      IF (PHR.LE.0.0) GO TO 4410                                                FFDIF  243
      JJ=3                                                                      FFDIF  244
      <DRGOLGE> = <DRGOLGE> + FAC1*UNSH                                         FFDIF  245
      GO TO 4415                                                                FFDIF  246
 4410 JJ=5                                                                      FFDIF  247
      <DRGOLGE> = <DRGOLGE> + FAC1*UNSH                                         FFDIF  248
 4415 IF (.NOT.LAST) GO TO 4600                                                 FFDIF  249
      JJ=3                                                                      FFDIF  250
      SKYSH = <DRGOLGE>                                                         FFDIF  251
      JJ=5                                                                      FFDIF  252
      GNDSH = <DRGOLGE>                                                         FFDIF  253
      <DRSKYFF> = SKYSH/SKY0                                                    VISBL2   7
      <DRGNDFF> = GNDSH/GND0                                                    VISBL2   8
 4600 MD = MD + MDRLEN                                                          FFDIF  256
C                                                                               FFDIF  257
 4000 MX = MX + MXLEN                                                           FFDIF  258
C                                                                               FFDIF  259
 2000 CONTINUE                                                                  FFDIF  260
 1000 CONTINUE                                                                  FFDIF  261
 5000 CONTINUE                                                                  FFDIF  262
C                                                                               FFDIF  263
      IFFDIF = 0                                                                FFDIF  264
      RETURN                                                                    FFDIF  265
      END                                                                       FFDIF  266
      subroutine  FIACCL ( iflag, ioffs )                                       FIACCL   2
c---                                                                            FIACCL   3
c--- get values from LDS data structure into function symbol table              FIACCL   4
c---                                                                            FIACCL   5
c-----------------------------------------------------------------------        FIACCL   6
      COMMON        // AA(75 000 000)                                           -048ar   1
      INTEGER          IA(75 000 000)                                           -048ar   2
      EQUIVALENCE  (IA(1), AA(1))                                               //       4
c-----------------------------------------------------------------------        FIACCL   8
      COMMON  /BEPS  /  BGAREA, BNAREA, PctSysOvrld, PctPltOvrld,               HVAC6    1
     $                  SiteEnergy, SourceEnergy                                HVAC6    2
      DIMENSION         BEPS(6)                                                 HVAC6    3
      EQUIVALENCE       (BEPS(1),BGAREA)                                        HVAC6    4
c-----------------------------------------------------------------------        FIACCL  10
      COMMON  /BLDFN/  IBF1(4), IBF2(4), IBDYF1(4), IBDYF2(4)                   /BLDFN/  2
c-----------------------------------------------------------------------        FIACCL  12
      COMMON  /BLDHRV/ BLDDTH(18), BLDDTC(18)                                   /BLDHRV/ 2
     .               , QBELEC, QBGAS , QBHW  , QBEQEL, QBLTEL                   /BLDHRV/ 3
c-----------------------------------------------------------------------        FIACCL  14
      COMMON  /BLDPK/  BLDPK(60), IHPP(2), ICPP(2), HRHPK, HRCPK                -063     1
      DIMENSION IBLDPK(66)                                                      -063     2
      EQUIVALENCE (IBLDPK(1),BLDPK(1))                                          /BLDPK/  4
c-----------------------------------------------------------------------        FIACCL  16
      COMMON  /BLDVA/  BLDVOL, BLDARE, PATMDS                                   /BLDVA/  2
c-----------------------------------------------------------------------        FIACCL  18
      COMMON  /BUFERS/  MRLEN1, MRLEN2, IBLDSB,IELDSB,LLDSB,N3,IBRPB1,          HVACi    1
     1                  IERPB1,LRPB1,IBRPB2,IERPB2,LRPB2                        HVACi    2
c-----------------------------------------------------------------------        FIACCL  20
      COMMON /CLCFLG/ IFSTHR,IPRDFL,IGOLGE,NDD,LDSTYP,IFHRP                     DDAY1    1
c-----------------------------------------------------------------------        FIACCL  22
      COMMON  /CONST/  DTOR, PIOVR2, PIOVR4, IBLNK, UNDEF, IUNDEF,              /CONST/  2
     1                 UNFILD, URAD, DEFIFR, DEFCFR, DEFINC, KWBTU              /CONST/  3
      REAL             KWBTU                                                    /CONST/  4
c-----------------------------------------------------------------------        FIACCL  24
      COMMON /CTRL  / VERS(2),IRPFLG(4),IOVRLL(7),IWRTFL,IPROG,                 /CTRL/   2
     1       IFATAL,NAMPRG(3,7),MTRICR                                          /CTRL/   3
c-----------------------------------------------------------------------        FIACCL  26
      COMMON  /DATEDS/  IDSMON(3)                                               /DATEDS/ 2
c-----------------------------------------------------------------------        FIACCL  28
      COMMON  /DAYLT/ NDAYCF,IPHS,IZ,IHIT,MHHIT,IL,RHOAV,ATOT,ARHTOT,           /DAYLT/  2
     1                AR(3),AP(3),ARH(3),ARHP(3),NPH,NTH,WC(3),TMULT,           /DAYLT/  3
     2                TSOLNM,TVISDF,FRUP,ISHLOC,NWTOT,RHOCW,RHOFW,WAREA,        /DAYLT/  4
     3                IMREF,PHSUN,THSUN,PHSUND,THSUND,THSMIN,PHSMIN,            /DAYLT/  5
     4                THSMAX,PHSMAX,THSDEL,PHSDEL,H,NTHS,NPHS,NDFC,LWDC,        /DAYLT/  6
     5                BETA,W,IBZ,IWZ,ZENL,JZD,WBACLU(2,2),PF(7,5),              /DAYLT/  7
     6                VIEWVC(3),GLRNDX(2),WDAYIL(2,2),BACLUM(2),ITF(3),         /DAYLT/  8
     7                RDAYIL(2),RBACLU(2),GLRNEW(2),ETACLD,CDIRLW(24),          /DAYLT/  9
     8                CDIFLW(24),ODIFLW(24),SOLIC(12),TFAC,SPHSUN,              /DAYLT/ 10
     9                CPHSUN,PHWN,THWN,SPHWN,CPHWN,TOTIL(2),ATMMOI(12),         /DAYLT/ 11
     1                ATMTUR(12),XRAN,ALFAD,THRAT,PHRAT,SETPNT(2),              /DAYLT/ 12
     2                IZLSG,IZLSH,IZLSJM,IZLSJY,IZDREP,FPHRP(2),ZFTOT,          /DAYLT/ 13
     3                EINTSK(2,12,24),EINTSU(2,12,24),EDIRSK(2,12,24),          VISBL    2
     4                EDIRSU(2,12,24),FLCWSK(2,12),FLCWSU(2,12),                VISBL    3
     5                FLFWSK(2,12),FLFWSU(2,12),GILSK(2,10),GILSU(2,10),        VISBL    4
     6                WLUMSK(2,11,24),WLUMSU(2,11,24),AVWLSK(2,12,24),          VISBL    5
     7                AVWLSU(2,12,24),CHILSK(24),CHILSU(24),OHILSK(24),         VISBL    6
     8                DFSKHR(2,2),DFSUHR(2,2),SFSKHR(2,2),SFSUHR(2,2),          /DAYLT/ 19
     9                BFSKHR(2,2),BFSUHR(2,2),HISUNF,CHISKF,OHISKF,IZLSM        44d5br   1
      COMMON  /DAYL1/  ATMTU, ATMMO, TAU1                                       /DAYLT/ 21
     1               , TVISB, TH, PH, RAY(3), WNORM(3), TVISBR                  /DAYLT/ 22
c-----------------------------------------------------------------------        FIACCL  30
      COMMON /DESHQ/  IDDFLG,DESHRQ(360),IDDTYP(2)                              DDAY1    2
c-----------------------------------------------------------------------        FIACCL  32
c-----------------------------------------------------------------------        FIACCL  34
      COMMON  /DESTIT/ IDEST(3)                                                 /DESTIT/ 2
c-----------------------------------------------------------------------        FIACCL  36
      COMMON  /DESW/   DESDYQ(34)                                               DDAY1    3
      INTEGER IDESDYQ(34)                                                       DDAY1    4
      EQUIVALENCE (DESDYQ(1),IDESDYQ(1))                                        DDAY1    5
c-----------------------------------------------------------------------        FIACCL  38
          COMMON /DOORV/  FILMUD, DRGOLG,SOLID, TSOLD, QD,CFMD,DDIF             /DOORV/  2
      DIMENSION DRV(6)                                                          /DOORV/  3
      EQUIVALENCE (DRV(1),FILMUD)                                               /DOORV/  4
c-----------------------------------------------------------------------        FIACCL  40
      COMMON  /ENDUSL/ ENDUSE(22)                                               HVAC6    5
c-----------------------------------------------------------------------        FIACCL  42
      COMMON  /FARRAY/ FARRAY(99)                                               /FARRAY/ 2
c-----------------------------------------------------------------------        FIACCL  44
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                         /FILES/  3
     2              , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                    /FILES/  4
     3                IHRREP(3), IHRPAS(2)                                      /FILES/  5
c-----------------------------------------------------------------------        FIACCL  46
      COMMON  /FMPTR/  MPTR(16)                                                 /FMPTR/  2
c-----------------------------------------------------------------------        FIACCL  48
      COMMON  /FPTRS/  IFLABL(4), LSFREC, NLITT , NCONT , NCODE, ICONT0         /FPTRS/  2
     .               , IFLEVL, NSYMT, ISYMT0, ICODE0, ILITT0, IVAR0             /FPTRS/  3
     3         , IFNBGN, NFN, FRANDX, FNTYPE, IFGET, IVAR, JSYMT                /FPTRS/  4
c-----------------------------------------------------------------------        FIACCL  50
      COMMON /HOLALT/ NHOLA(2),IHOLTY(2),IHOLDY(60,2),IHOLMN(60,2)              HOLID1   1
c-----------------------------------------------------------------------        FIACCL  52
      COMMON /HRCNTL/  MOHRS,IYRHRS                                             /HRCNT/  2
c-----------------------------------------------------------------------        FIACCL  54
      COMMON  /HRREP / Irb, Ihrp, Lrb, Lhrp, Nrb, Nhrp, IVTLIM(3,50),           HRr      1
     &                 IGRPtr, IBRPtr, IRSch, IRSchT(5),                        HRr      2
     &                 NHRTyp(3), ITBUF(3), ITBUFB(3), ITBUFE(3),               HRr      3
     &                 IHREOF, ICDFLG                                           HRr      4
c-----------------------------------------------------------------------        FIACCL  56
      COMMON /HRPSTA/ ISTUF(20)                                                 /HRPSTA/ 2
c-----------------------------------------------------------------------        FIACCL  58
      COMMON /IAX   / IAX, IADIM, IADIMV, IAXMAX, KORE                          /IAX/    2
c-----------------------------------------------------------------------        FIACCL  60
      COMMON  /INFPAR/ PTWV,DUMG(8),PSE                                         /INFPAR/ 2
c-----------------------------------------------------------------------        FIACCL  62
      COMMON /INTS  / IZERO,IONE,ITWO,ITHREE,IFOUR,IFIVE,ISIX,                  /INTS/   2
     1                ISEVEN,IEIGHT,ININE,ITEN,                                 /INTS/   3
     2                I11,I12,I13,I14,I15,I16,I17,I18,I19,I20,                  /INTS/   4
     3                I21,I22,I23,I24,I25,I26,I27,I28,I29,I30,                  HVAC     4
     4                I31,I32,I33,I34,I35,I36,I37,I38,I39,I40,                  HVAC     5
     5                I41,I42,I43,I44,I45,I46,I47,I48,I49,I50,                  HVAC     6
     $                I51,I52,I53,I54,I55,I56,I57,I58,I59,I60,                  HVAC6    6
     $                I61,I62,I63,I64,I65,I66,I67,I68,I69,I70,                  HVAC6    7
     $                I71,I72,I73,I74,I75,I76,I77,I78,I79,I80,                  HVAC6    8
     $                I81,I82,I83,I84,I85,I86,I87,I88,I89,I90,                  HVAC6    9
     $                I91,I92,I93,I94,I95,I96,I97,I98,I99,I100                  HVAC6   10
      INTEGER         INTS(101)                                                 HVAC6   11
      EQUIVALENCE(IZERO,INTS(1))                                                /INTS/   7
c-----------------------------------------------------------------------        FIACCL  64
      COMMON /INTSUN/ IVEC,ISPEW                                                /INTSUN/ 2
c-----------------------------------------------------------------------        FIACCL  66
      COMMON  /IRUNPD/  NRUNPD, JRUNPD, IRUNPD(6,15)                            /IRUNPD/ 2
c-----------------------------------------------------------------------        FIACCL  68
      COMMON  /ISPLST/  ISPLST(4096),ISPLOC(4096)                               -42c     1
c-----------------------------------------------------------------------        FIACCL  70
      COMMON  /IWCPTR/ MIWC1, MIWC2, NIWC, LIWC                                 /IWCPTR/ 2
c-----------------------------------------------------------------------        FIACCL  72
      COMMON  /LENS/   MWFLEN, MRLEN, MSHLEN, MWNLEN, MDRLEN, MXLEN,            /LENS/   2
     1                 MULEN, MZLEN, MIWLEN, MFLLEN,                            HRr      5
     2                 LMTB, LLDSOU, MSTLEN, LSTFT, MWLLEN                      BLIND    1
c-----------------------------------------------------------------------        FIACCL  74
      COMMON  /LOCALD/ STALAT, STALON, ITIMZ, BAZIM, BALTIT,                    /LOCALD/ 2
     1                 SSTALA, CSTALA, TSTALA, SBAZIM, CBAZIM                   /LOCALD/ 3
     2                 ,BXORG, BYORG, SHCOEF, TP1, TP2, WSTP1, WSTP2,           /LOCALD/ 4
     3                 WSHGT,WSHGTL(12),ISREFL,IHOLX                            HOLID1   2
      DIMENSION LOCALD(32)                                                      HOLID1   3
      EQUIVALENCE      (LOCALD(1),STALAT)                                       /LOCALD/ 7
c-----------------------------------------------------------------------        FIACCL  76
      COMMON/MONREP/BCSUM(12),IDYCPK(12),IHRCPK(12),DBCPK(12),                  /MONREP/ 2
     1         WBCPK(12),BCPK(12),BHSUM(12),IDYHPK(12),                         /MONREP/ 3
     2         IHRHPK(12),DBHPK(12),WBHPK(12),BHPK(12),                         /MONREP/ 4
     3                 BESUM(12),BEPK(12),BQCM(6,11),BLSI(4,25)                 /MONREP/ 5
c-----------------------------------------------------------------------        FIACCL  78
      COMMON  /NHRSHR/ NHRSHR(128), IHRCTR(5,128), NHRITM, FILEHR,ICECHS        -048j    1
      INTEGER          FILEHR                                                   /NHRSHR/ 3
c-----------------------------------------------------------------------        FIACCL  80
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     BLIND    2
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        FLOOR1   3
c-----------------------------------------------------------------------        FIACCL  82
      COMMON  /PSYDES/  HUMRD(72)                                               /PSYDES/ 2
c-----------------------------------------------------------------------        FIACCL  84
      COMMON  /PTRBGN/ ISCB, IWFB, IWPB, ICONSB, IGTB, IWLB, IGEOB,             HRr      6
     1                 ISHADB, IWINB, IDRB, IEWB, IUGB, ISPB, IIWPB,            HRr      7
     2                 IIWB, IFLB, ISPCDB, IOTHB, ILHB, IZQCMB, ISSHDB,         HRr      8
     3                 IOHFIB, IZLSK, IZLSL, ISTFB                              HRr      9
c-----------------------------------------------------------------------        FIACCL  86
      COMMON  /REPORT/ IREPRT(4,37),IPRG,IUNIQV(100),IUNIQS(100),IUNIQL         BIGNAM   1
c-----------------------------------------------------------------------        FIACCL  88
      COMMON  /RUNTIM/ IDAYBG, IMONBG, IYRBG,  IDAYND, IMONND, IYRND            /RUNTIM/ 2
c-----------------------------------------------------------------------        FIACCL  90
      COMMON  /SHADWF/ ISDINF, LSHSTR, ISHSTB, KMAX                             /SHADWF/ 2
c-----------------------------------------------------------------------        FIACCL  92
      COMMON  /SHDWC/  DELTAX, A0, A, B0, B, SMALP,                             /SHDWC/  2
     1                 NEP(1000),XVERTF(120),YVERTF(120),ROTMAT(3,3),           -42c     2
     2                 XO, YO, ZO, S, C                                         /SHDWC/  4
c-----------------------------------------------------------------------        FIACCL  94
      COMMON  /SIZE/   LENGTH,NVECT,NSCHED,NWF,NWPAR,NCONS,NGT,NWL,NGEO,        BLIND    5
     1                 NGSHAD, NWIN, NDOOR, NEW, NUG, NSP, NIWP, NIW,           /SIZE/   3
     2                 NFL, NDESDY, NBR, NOTH, NITH, NOPSRF,                    HRr     10
     3                 NSURF, NSSHD, NSHTOT                                     GEO1     1
c-----------------------------------------------------------------------        FIACCL  96
      COMMON /SUMBUF/ IBUFSL,IBUFSB,IBUFSE                                      /SUMBUF/ 2
c-----------------------------------------------------------------------        FIACCL  98
      COMMON  /SUND/   ISUNUP, GUNDOG, HORANG, TDECLN, EQTIME, SOLCON,          /SUND/   2
     1                 ATMEXT, SKYDFF, RAYCOS(3), RDN,                          /SUND/   3
     2                 BSUN, DECLN, CD, SD, FSUNUP                              /SUND/   4
c-----------------------------------------------------------------------        FIACCL 100
c-----------------------------------------------------------------------        FIACCL 102
      COMMON /TIME  / IDOY, IDOW, IDSTF, ISCHR, ISCDAY, iDSdates(6),            -044e5r  1
     1                IMO, IDAY, IYR, IHR, CLOCK(10), IDSFLG,                   HOLID1   4
     2                MONDSC(12), MONLEN(12), MONSDA(12), IEODMR                /TIME/   4
c-----------------------------------------------------------------------        FIACCL 104
      COMMON /TITLE / TITLE(10,5)                                               /TITLE/  2
c-----------------------------------------------------------------------        FIACCL 106
      COMMON  /TWVHR/  QSWALL,QSGIN,QSGOUT,WCS                                  /TWHR/   2
c-----------------------------------------------------------------------        FIACCL 108
      COMMON/UNITT/VKONV(300),DUMLOG(4),JUNITT(4,300,2)                         UNITS1   1
      DIMENSION IUNITT(4,300)                                                   UNITS1   2
      EQUIVALENCE (IUNITT,JUNITT)                                               /UNITT/  4
c-----------------------------------------------------------------------        FIACCL 110
      COMMON  /WALLV/  SOLI,XGOLGE,FILMU,PCO,Q,T,CFM,C2,C3,                     /WALLV/  2
     1                 SUMXDT,SUMYDT,DT,XSXCMP,XSQCMP,ETA,                      /WALLV/  3
     2                 BG,RDIR,RDIF,RTOT,FFS,FFG,SOLDF1,SOLDF2,                 /WALLV/  4
     3                 SOLDF3,SOLDF4,SOLDF5,FFS0,FFG0,QIREW,MWDIR,              -044d5   1
     4                 ANGINCD                                                  -044d5   2
c-----------------------------------------------------------------------        FIACCL 112
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
c-----------------------------------------------------------------------        FIACCL 114
      COMMON  /WINV/   UW,TDIR,ADIRO,TDIF,ADIFO,ADIRI,ADIFI,FI,FO,              /WINV/   2
     1                 AGOLGE,QDIR,QDIF,QTRANS,QABS,QSOLG,GSHACO,               /WINV/   3
     2                 QCON,CFMW,SHMULT,SOLGMX,UWW,CWIN(4),CSUM(4),             /WINV/   4
     3                 ANWIN(4),ANSUM(4),QIRWI                                  VISBL    7
c-----------------------------------------------------------------------        FIACCL 116
      COMMON  /ZNEWHR/ TZONER, INFCOD,                                          /ZNEWHR/ 2
     1                 QWALQ, QCELQ, QWINC, QWALD, QCELD,QINTW,                 /ZNEWHR/ 3
     2                 QUGF, QUGW, QDOOR, QEQPS, QEQPS2, QPPS,                  /ZNEWHR/ 4
     3                 QPPL, QEQPL, QEQPL2, QINFL,                              /ZNEWHR/ 5
     4                 QTSKL, QSOL, QPLENM, QLITE, QLITEW, QINFS,               /ZNEWHR/ 6
     5                 QELECT, CFMINF, QSUMW, ZCOND, QZS, QZL, QZTOT,           /ZNEWHR/ 7
     6                 QZLTEL,QZEQEL,QZGAS,QZHW,WNDSPZ,MANAGE                   /ZNEWHR/ 8
     7               , QZPEL, QZTLEL                                            /ZNEWHR/ 9
      DIMENSION QYENI(33)                                                       /ZNEWHR/10
      EQUIVALENCE  (QYENI(1), QWALQ)                                            /ZNEWHR/11
c-----------------------------------------------------------------------        FIACCL 118
      COMMON  /ZWALOC/ XZ0, YZ0, ZZ0, AZ0,  SAZ, CAZ, XW0, YW0, ZW0,            /ZWALOC/ 2
     1                 AW0, TW0,  SAW, CAW, STW, CTW, XW, YW                    /ZWALOC/ 3
c-----------------------------------------------------------------------        FIACCL 120
        real             BEPS0(6)                                               HVAC9    1
          equivalence  ( BEPS0(1) , BEPS(1)   )                                 FIACCL 122
        real             BLDFN0(16)                                             FIACCL 123
          equivalence  ( BLDFN0(1) , IBF1(1)   )                                FIACCL 124
        real             BLDHR0(41)                                             FIACCL 125
          equivalence  ( BLDHR0(1) , BLDDTH(1) )                                FIACCL 126
        real             BLDPK0(48)                                             FIACCL 127
          equivalence  ( BLDPK0(1) , IBLDPK(1) )                                FIACCL 128
        real             BLDVA0(3)                                              FIACCL 129
          equivalence  ( BLDVA0(1) , BLDVOL    )                                FIACCL 130
        real             BUFER0(12)                                             FIACCL 131
          equivalence  ( BUFER0(1) , MRLEN1    )                                HVAC9    2
          equivalence  ( BUFER0(1) , MRLEN1    )                                FIX1     1
        real             CLCFL0(6)                                              DDAY1   99
          equivalence  ( CLCFL0(1) , IFSTHR    )                                FIACCL 134
        real             CONST0(12)                                             FIACCL 135
          equivalence  ( CONST0(1) , DTOR      )                                FIACCL 136
        real             CTRL0(38)                                              FIACCL 137
          equivalence  ( CTRL0(1) , VERS(1)   )                                 FIACCL 138
        real             DATED0(3)                                              FIACCL 139
          equivalence  ( DATED0(1) , IDSMON(1) )                                FIACCL 140
        real             DAYL10(13)                                             FIACCL 141
          equivalence  ( DAYL10(1) , ATMTU     )                                FIACCL 142
        real             DAYLT0(1075)                                           FIACCL 143
          equivalence  ( DAYLT0(1) , NDAYCF    )                                FIACCL 144
        real             DESHQ0(363)                                            DDAY1  100
          equivalence  ( DESHQ0(1) , IDDFLG     )                               DDAY1  101
        real             DESPN0(1)                                              FIACCL 147
          equivalence  ( DESPN0(1) , IDESPT    )                                FIACCL 148
        real             DESTI0(3)                                              FIACCL 149
          equivalence  ( DESTI0(1) , IDEST(1)  )                                FIACCL 150
        real             DESW0(34)                                              DDAY1  102
          equivalence  ( DESW0(1) , DESDYQ(1) )                                 FIACCL 152
        real             DOORV0(7)                                              FIACCL 153
          equivalence  ( DOORV0(1) , DRV(1)    )                                FIACCL 154
        real             ENDUS0(22)                                             HVAC6   13
          equivalence  ( ENDUS0(1) , ENDUSE(1) )                                FIACCL 156
        real             FARRA0(99)                                             FIACCL 157
          equivalence  ( FARRA0(1) , FARRAY(1) )                                FIACCL 158
        real             FILES0(21)                                             FIACCL 159
          equivalence  ( FILES0(1) , ISTNDF    )                                FIACCL 160
        real             FMPTR0(16)                                             FIACCL 161
          equivalence  ( FMPTR0(1) , MPTR(1)   )                                FIACCL 162
        real             FPTRS0(22)                                             FIACCL 163
          equivalence  ( FPTRS0(1) , IFLABL(1) )                                FIACCL 164
        real             HOLAL0(121)                                            FIACCL 165
          equivalence  ( HOLAL0(1) , NHOLA     )                                FIACCL 166
        real             HRCNT0(2)                                              FIACCL 167
          equivalence  ( HRCNT0(1) , MOHRS     )                                FIACCL 168
        real             HREPS0(21)                                             FIACCL 169
          equivalence  ( HREPS0(1) , IGRPTR    )                                FIACCL 170
        real             HRPST0(20)                                             FIACCL 171
          equivalence  ( HRPST0(1) , ISTUF(1)  )                                FIACCL 172
        real             IAX0(5)                                                FIACCL 173
          equivalence  ( IAX0(1) , IAX       )                                  FIACCL 174
        real             INFPA0(10)                                             FIACCL 175
          equivalence  ( INFPA0(1) , PTWV      )                                FIACCL 176
        real             INTS0(31)                                              FIACCL 177
          equivalence  ( INTS0(1) , INTS(1)   )                                 FIACCL 178
        real             INTSU0(2)                                              FIACCL 179
          equivalence  ( INTSU0(1) , IVEC      )                                FIACCL 180
        real             IRUNP0(92)                                             FIACCL 181
          equivalence  ( IRUNP0(1) , NRUNPD    )                                FIACCL 182
        real             ISPLS0(200)                                            FIACCL 183
          equivalence  ( ISPLS0(1) , ISPLST(1) )                                FIACCL 184
        real             IWCPT0(4)                                              FIACCL 185
          equivalence  ( IWCPT0(1) , MIWC1     )                                FIACCL 186
        real             LENS0(15)                                              FIACCL 187
          equivalence  ( LENS0(1) , MWFLEN    )                                 FIACCL 188
        real             LOCAL0(31)                                             FIACCL 189
          equivalence  ( LOCAL0(1) , LOCALD(1) )                                FIACCL 190
        real             MONRE0(334)                                            FIACCL 191
          equivalence  ( MONRE0(1) , BCSUM(1)  )                                FIACCL 192
        real             NHRSH0(771)                                            -048j    2
          equivalence  ( NHRSH0(1) , NHRSHR(1) )                                FIACCL 194
        real             PNTRS0(17)                                             FIACCL 195
          equivalence  ( PNTRS0(1) , MWF       )                                FIACCL 196
        real             PSYDE0(72)                                             FIACCL 197
          equivalence  ( PSYDE0(1) , HUMRD(1)  )                                FIACCL 198
        real             PTRBG0(25)                                             FIACCL 199
          equivalence  ( PTRBG0(1) , ISCB      )                                FIACCL 200
        real             REPOR0(37)                                             FIACCL 201
          equivalence  ( REPOR0(1) , IREPRT(1,1) )                              IREPRT 101
        real             RUNTI0(6)                                              FIACCL 203
          equivalence  ( RUNTI0(1) , IDAYBG    )                                FIACCL 204
        real             SHADW0(4)                                              FIACCL 205
          equivalence  ( SHADW0(1) , ISDINF    )                                FIACCL 206
        real             SHDWC0(1060)                                           FIACCL 207
          equivalence  ( SHDWC0(1) , DELTAX    )                                FIACCL 208
        real             SIZE0(26)                                              HRr     95
          equivalence  ( SIZE0(1) , LENGTH    )                                 FIACCL 210
        real             SUMBU0(3)                                              FIACCL 211
          equivalence  ( SUMBU0(1) , IBUFSL    )                                FIACCL 212
        real             SUND0(17)                                              FIACCL 213
          equivalence  ( SUND0(1) , ISUNUP    )                                 FIACCL 214
        real             SURFD0(7)                                              FIACCL 215
          equivalence  ( SURFD0(1) , NV        )                                FIACCL 216
        real             TCYCI0(4)                                              FIACCL 217
          equivalence  ( TCYCI0(1) , TE        )                                FIACCL 218
        real             TIME0(57)                                              HOLID1   8
          equivalence  ( TIME0(1) , IDOY      )                                 FIACCL 220
        real             TITLE0(50)                                             FIACCL 221
          equivalence  ( TITLE0(1) , TITLE(1,1))                                -050x   17
        real             TWVHR0(4)                                              FIACCL 223
          equivalence  ( TWVHR0(1) , QSWALL    )                                FIACCL 224
        real             UNITT0(724)                                            FIACCL 225
          equivalence  ( UNITT0(1) , VKONV(1)  )                                FIACCL 226
        real             WALLV0(30)                                             FIACCL 227
          equivalence  ( WALLV0(1) , SOLI      )                                FIACCL 228
        real             WEATH0(63)                                             FIACCL 229
          equivalence  ( WEATH0(1) , IWDID(1)  )                                FIACCL 230
        real             WINV0(38)                                              FIACCL 231
          equivalence  ( WINV0(1) , UW        )                                 FIACCL 232
        real             ZNEWH0(39)                                             FIACCL 233
          equivalence  ( ZNEWH0(1) , TZONER    )                                FIACCL 234
        real             ZWALO0(17)                                             FIACCL 235
          equivalence  ( ZWALO0(1) , XZ0       )                                FIACCL 236
C                                                                               FIACCL 237
C$    IOUTPT = 6                                                                FIACCL 238
C$    WRITE( IOUTPT, 901 )  IFGET, (I, AA(IVAR0+I), I=1,NSYMT)                  FIACCL 239
C$901 FORMAT( ' --) FIACC ---   IFGET=',I2, '   AA(IVAR0+I)=', /,               FIACCL 240
C$   .(1XI6'='G14.7, I6'='G14.7, I6'='G14.7, I6'='G14.7, I6'='G14.7 ) )         FIACCL 241
C                                                                               FIACCL 242
C---- if only one variable skip the loop.                                       FIACCL 243
      if ( iflag .ne. 0 )    then                                               FIACCL 244
          goto  200                                                             FIACCL 245
      endif                                                                     FIACCL 246
C-----------------------------------------------------------------------        FIACCL 247
      if( IFGET .ne. 0 )     call  MOVEN( PNTRS0, MPTR, 14 )                    FIACCL 248
c-----------------------------------------------------------------------        FIACCL 249
      JSYMT = ISYMT0 - 8                                                        FIACCL 250
      IVAR = IVAR0                                                              FIACCL 251
C---- loop on all symbols.                                                      FIACCL 252
      ISYMT = 1                                                                 FIACCL 253
      if ( NSYMT .lt. 1 )    goto  900                                          FIACCL 254
C                                                                               FIACCL 255
100   IVAR   = IVAR + 1                                                         FIACCL 256
      JSYMT  = JSYMT + 8                                                        FIACCL 257
C.................................. ck R/W FLAG and IFGET match.                FIACCL 258
      if( (IFGET.eq.0) .and.                                                    FIACCL 259
     1    ( (IA(JSYMT+3).eq.0) .or. (IA(JSYMT+3).eq.1) ) )  goto  70000         FIACCL 260
C..................................................... ck if global var.        FIACCL 261
      if( IA(JSYMT+4) .ne. 1 )    goto  60000                                   FIACCL 262
200       continue                                                              FIACCL 263
          I7 = IABS( IA(JSYMT+7) )                                              FIACCL 264
          IX = IA(JSYMT+8) + ioffs                                              FIACCL 265
C................................................. ck if commoned var.          FIACCL 266
          if( IABS( IA(JSYMT+6) ) .gt. 2 )    goto  30000                       FIACCL 267
C-----------------------------------------------------------------------        FIACCL 268
      goto( 1, 2, 3, 4, 5, 6, 7, 8, 9,10,11,12,13,14,15                         FIACCL 269
     1    ,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30                         FIACCL 270
     1    ,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45                         FIACCL 271
     1    ,46,47,48,49,50,51,52,53,54,55,56,57,58,59                            FIACCL 272
     1    ), I7                                                                 FIACCL 273
 1       call  FIMOV( AA(IX) )                                                  FIACCL 274
                                    goto  70000                                 FIACCL 275
 2       call  FIMOV( BEPS0(IX) )                                               FIACCL 276
                                    goto  70000                                 FIACCL 277
 3       call  FIMOV( BLDFN0(IX) )                                              FIACCL 278
                                    goto  70000                                 FIACCL 279
 4       call  FIMOV( BLDHR0(IX) )                                              FIACCL 280
                                    goto  70000                                 FIACCL 281
 5       call  FIMOV( BLDPK0(IX) )                                              FIACCL 282
                                    goto  70000                                 FIACCL 283
 6       call  FIMOV( BLDVA0(IX) )                                              FIACCL 284
                                    goto  70000                                 FIACCL 285
 7       call  FIMOV( BUFER0(IX) )                                              FIACCL 286
                                    goto  70000                                 FIACCL 287
 8       call  FIMOV( CLCFL0(IX) )                                              FIACCL 288
                                    goto  70000                                 FIACCL 289
 9       call  FIMOV( CONST0(IX) )                                              FIACCL 290
                                    goto  70000                                 FIACCL 291
10       call  FIMOV( CTRL0(IX) )                                               FIACCL 292
                                    goto  70000                                 FIACCL 293
11       call  FIMOV( DATED0(IX) )                                              FIACCL 294
                                    goto  70000                                 FIACCL 295
12       call  FIMOV( DAYL10(IX) )                                              FIACCL 296
                                    goto  70000                                 FIACCL 297
13       call  FIMOV( DAYLT0(IX) )                                              FIACCL 298
                                    goto  70000                                 FIACCL 299
14       call  FIMOV( DESHQ0(IX) )                                              FIACCL 300
                                    goto  70000                                 FIACCL 301
15       call  FIMOV( DESPN0(IX) )                                              FIACCL 302
                                    goto  70000                                 FIACCL 303
16       call  FIMOV( DESTI0(IX) )                                              FIACCL 304
                                    goto  70000                                 FIACCL 305
17       call  FIMOV( DESW0(IX) )                                               FIACCL 306
                                    goto  70000                                 FIACCL 307
18       call  FIMOV( DOORV0(IX) )                                              FIACCL 308
                                    goto  70000                                 FIACCL 309
19       call  FIMOV( ENDUS0(IX) )                                              FIACCL 310
                                    goto  70000                                 FIACCL 311
20       call  FIMOV( FARRA0(IX) )                                              FIACCL 312
                                    goto  70000                                 FIACCL 313
21       call  FIMOV( FILES0(IX) )                                              FIACCL 314
                                    goto  70000                                 FIACCL 315
22       call  FIMOV( FMPTR0(IX) )                                              FIACCL 316
                                    goto  70000                                 FIACCL 317
23       call  FIMOV( FPTRS0(IX) )                                              FIACCL 318
                                    goto  70000                                 FIACCL 319
24       call  FIMOV( HOLAL0(IX) )                                              FIACCL 320
                                    goto  70000                                 FIACCL 321
25       call  FIMOV( HRCNT0(IX) )                                              FIACCL 322
                                    goto  70000                                 FIACCL 323
26       call  FIMOV( HREPS0(IX) )                                              FIACCL 324
                                    goto  70000                                 FIACCL 325
27       call  FIMOV( HRPST0(IX) )                                              FIACCL 326
                                    goto  70000                                 FIACCL 327
28       call  FIMOV( IAX0(IX) )                                                FIACCL 328
                                    goto  70000                                 FIACCL 329
29       call  FIMOV( INFPA0(IX) )                                              FIACCL 330
                                    goto  70000                                 FIACCL 331
30       call  FIMOV( INTS0(IX) )                                               FIACCL 332
                                    goto  70000                                 FIACCL 333
31       call  FIMOV( INTSU0(IX) )                                              FIACCL 334
                                    goto  70000                                 FIACCL 335
32       call  FIMOV( IRUNP0(IX) )                                              FIACCL 336
                                    goto  70000                                 FIACCL 337
33       call  FIMOV( ISPLS0(IX) )                                              FIACCL 338
                                    goto  70000                                 FIACCL 339
34       call  FIMOV( IWCPT0(IX) )                                              FIACCL 340
                                    goto  70000                                 FIACCL 341
35       call  FIMOV( LENS0(IX) )                                               FIACCL 342
                                    goto  70000                                 FIACCL 343
36       call  FIMOV( LOCAL0(IX) )                                              FIACCL 344
                                    goto  70000                                 FIACCL 345
37       call  FIMOV( MONRE0(IX) )                                              FIACCL 346
                                    goto  70000                                 FIACCL 347
38       call  FIMOV( NHRSH0(IX) )                                              FIACCL 348
                                    goto  70000                                 FIACCL 349
39       call  FIMOV( PNTRS0(IX) )                                              FIACCL 350
                                    goto  70000                                 FIACCL 351
40       call  FIMOV( PSYDE0(IX) )                                              FIACCL 352
                                    goto  70000                                 FIACCL 353
41       call  FIMOV( PTRBG0(IX) )                                              FIACCL 354
                                    goto  70000                                 FIACCL 355
42       call  FIMOV( REPOR0(IX) )                                              FIACCL 356
                                    goto  70000                                 FIACCL 357
43       call  FIMOV( RUNTI0(IX) )                                              FIACCL 358
                                    goto  70000                                 FIACCL 359
44       call  FIMOV( SHADW0(IX) )                                              FIACCL 360
                                    goto  70000                                 FIACCL 361
45       call  FIMOV( SHDWC0(IX) )                                              FIACCL 362
                                    goto  70000                                 FIACCL 363
46       call  FIMOV( SIZE0(IX) )                                               FIACCL 364
                                    goto  70000                                 FIACCL 365
47       call  FIMOV( SUMBU0(IX) )                                              FIACCL 366
                                    goto  70000                                 FIACCL 367
48       call  FIMOV( SUND0(IX) )                                               FIACCL 368
                                    goto  70000                                 FIACCL 369
49       call  FIMOV( SURFD0(IX) )                                              FIACCL 370
                                    goto  70000                                 FIACCL 371
50       call  FIMOV( TCYCI0(IX) )                                              FIACCL 372
                                    goto  70000                                 FIACCL 373
51       call  FIMOV( TIME0(IX) )                                               FIACCL 374
                                    goto  70000                                 FIACCL 375
52       call  FIMOV( TITLE0(IX) )                                              FIACCL 376
                                    goto  70000                                 FIACCL 377
53       call  FIMOV( TWVHR0(IX) )                                              FIACCL 378
                                    goto  70000                                 FIACCL 379
54       call  FIMOV( UNITT0(IX) )                                              FIACCL 380
                                    goto  70000                                 FIACCL 381
55       call  FIMOV( WALLV0(IX) )                                              FIACCL 382
                                    goto  70000                                 FIACCL 383
56       call  FIMOV( WEATH0(IX) )                                              FIACCL 384
                                    goto  70000                                 FIACCL 385
57       call  FIMOV( WINV0(IX) )                                               FIACCL 386
                                    goto  70000                                 FIACCL 387
58       call  FIMOV( ZNEWH0(IX) )                                              FIACCL 388
                                    goto  70000                                 FIACCL 389
59       call  FIMOV( ZWALO0(IX) )                                              FIACCL 390
                                    goto  70000                                 FIACCL 391
C.........................  <> variable.                                        FIACCL 392
30000     IX = MPTR(I7) + IX + ioffs                                            FIACCL 393
           call  FIMOV( AA(IX) )                                                FIACCL 394
                      goto  70000                                               FIACCL 395
C.............................................. ck if SCHEDULE by PTR.          FIACCL 396
60000 if( IA(JSYMT+4) .ne. 2 )  goto  61000                                     FIACCL 397
          IX = MPTR(IA(JSYMT+7)) + IA(JSYMT+8)                                  FIACCL 398
          if( IA(IX) .le. 0 )    goto  60200                                    FIACCL 399
              M = IA(IA(IX)) + ISCHR                                            FIACCL 400
              AA(IVAR) = AA(M)                                                  FIACCL 401
                      goto  70000                                               FIACCL 402
C............................... if SCHEDULE PTR = 0, return ZERO.              FIACCL 403
60200     AA(IVAR) = 0                                                          FIACCL 404
                      goto  70000                                               FIACCL 405
C.............................................. ck if SCHEDULE by NAME.         FIACCL 406
61000 if( IA(JSYMT+4) .ne. 3 )    goto  62000                                   FIACCL 407
          M = IA(IA(JSYMT+8)) + ISCHR                                           FIACCL 408
           call  FIMOV( AA(M) )                                                 FIACCL 409
          goto  70000                                                           FIACCL 410
62000     continue                                                              FIACCL 411
70000     continue                                                              FIACCL 412
      if ( iflag .eq. 0 )    then                                               FIACCL 413
          ISYMT = ISYMT + 1                                                     FIACCL 414
          if ( ISYMT .le. NSYMT )    goto  100                                  FIACCL 415
      endif                                                                     FIACCL 416
900   continue                                                                  FIACCL 417
C                                                                               FIACCL 418
C$    write( IOUTPT, 909 )  (I, AA(IVAR0+I), I=1,NSYMT)                         FIACCL 419
C$909 format( ' (-- FIACC ---   AA(IVAR0+I)=', /,                               FIACCL 420
C$   .(1XI6'='G14.7, I6'='G14.7, I6'='G14.7, I6'='G14.7, I6'='G14.7 ) )         FIACCL 421
      return                                                                    FIACCL 422
      end                                                                       FIACCL 423
C-----------------------------------------------------------------------        FIACCL 424
      SUBROUTINE FILM2 (TS,TAMB,WTILTi,EM,IROUGH,WSPDK,MDIR,HCOUT,HROUT)        -030    24
C                                                                               FILM2    3
      DIMENSION RF(6)                                                           FILM2    4
      DATA RF/2.10, 1.67, 1.52, 1.13, 1.11, 1.00/                               FILM2    5
C                                                                               FILM2    6
C              CONVECTIVE AND RADIATIVE OUTSIDE AIR FILM CONDUCTANCE            FILM2    7
C              Replaces FILM function used in DOE-2.1D                          FILM2    8
C                                                                               FILM2    9
C    INPUT                                                                      FILM2   10
C                                                                               FILM2   11
C    TS    = PREVIOUS HOUR SURFACE TEMPERATURE (R)                              FILM2   12
C    TAMB  = OUTSIDE AIR TEMPERATURE (R)                                        FILM2   13
C    WTILT = SURFACE TILT (RADIANS, MEASURED FROM BLDG Z-AXIS)                  FILM2   14
C    EM    = OUTSIDE SURFACE IR EMISSIVITY                                      FILM2   15
C    IROUGH= ROUGHNESS (1=STUCCO, 2=BRICK, ROUGH PLASTER, 3=CONCRETE,           FILM2   16
C             4=CLEAR PINE, 5=SMOOTH PLASTER, 6=GLASS, PAINTED PINE)            FILM2   17
C    WSPDK = FREE-STREAM WIND SPEED AT BUILDING SITE,                           FILM2   18
C            SPACE LEVEL (KNOTS)                                                FILM2   19
C    MDIR  = WIND DIRECTION: 0=WINDWARD, 1=LEEWARD                              FILM2   20
C                                                                               FILM2   21
C    OUTPUT                                                                     FILM2   22
C                                                                               FILM2   23
C    HCOUT = CONVECTIVE AIR FILM CONDUCTANCE (BTU/H-FT2-F)                      FILM2   24
C    HROUT = RADIATIVE AIR FILM CONDUCTANCE (BTU/H-FT2-F)                       FILM2   25
C                                                                               FILM2   26
C                                                                               FILM2   27
C              ---RADIATIVE CONDUCTANCE---                                      FILM2   28
C              (.0857E-8 IS 0.5*STEFAN-BOLTZMANN CONST)                         FILM2   29
      HROUT = EM*0.0857E-8*(TAMB+TS)**3                                         FILM2   30
C                                                                               FILM2   31
C              ---CONVECTIVE CONDUCTANCE---                                     FILM2   32
C              NATURAL CONVECTION FROM ASHRAE FUNDAMENTALS.                     FILM2   33
C              FORCED CONVECTION BASED ON LBL MOWITT MEASUREMENTS               FILM2   34
C              BY J. KLEMS AND M. YAZDANIAN, NOV. 1992                          FILM2   35
C              HCOUT = SQRT(HCNAT**2 + HCFORC**2), WHERE                        FILM2   36
C              HCNAT = NATURAL CONVECTION COEFFICIENT (DEPENDS ON               FILM2   37
C                      TILT, TEMP DIFF, AND HEAT FLOW DIRECTION)                FILM2   38
C              HCFORC= WIND-FORCED CONVECTION COEFFICIENT (DEPENDS              FILM2   39
C                      ON WIND SPEED AND WHETHER SURFACE IS LEEWARD             FILM2   40
C                      OR WINDWARD)                                             FILM2   41
C                                                                               FILM2   42
C              HCNAT: NATURAL CONVECTION COEFFICIENT CALCULATION                FILM2   43
C              BASED ON ASHRAE FUNDAMENTALS 1989, P. 3.13 (LARGE                FILM2   44
C              PLATES, TURBULENT FLOW) WITH TILT DEPENDENCE FROM                FILM2   45
C              TARP PROGRAM ALGORITHMS, G. WALTON, NIST, 1983.                  FILM2   46
C              FOR VERTICAL PLATES, hcnat=0.19(delt)**.33.                      FILM2   47
C                                                                               FILM2   48
C              RF: ROUGHNESS FACTOR IS BASED ON G. WALTON, TARP PROGRAM         FILM2   49
C              ALGORITHMS, NIST, 1983.                                          FILM2   50
C                                                                               FILM2   51
C              Use absolute value of TILT                                       -030    25
      wtilt = abs(WTILTi)                                                       -030    26
      adelt = abs(ts-tamb)                                                      FILM2   52
      if( (ts.ge.tamb.and.wtilt.le.1.5708).or.                                  FILM2   53
     1    (ts.le.tamb.and.wtilt.ge.1.5708) ) then                               FILM2   54
        hcnat = (adelt**.33)*1.375/(7.238-abs(cos(wtilt)))                      FILM2   55
      else                                                                      FILM2   56
        hcnat = (adelt**.33)*0.263/(1.381+abs(cos(wtilt)))                      FILM2   57
      endif                                                                     FILM2   58
C                                                                               FILM2   59
C              HCFORC: WIND-FORCED CONVECTION CALCULATION                       FILM2   60
      if(mdir.eq.0) then                                                        FILM2   61
C              WINDWARD                                                         FILM2   62
        hcforc = 0.299*(wspdk)**0.89                                            -048d   20
      else                                                                      FILM2   64
C              LEEWARD                                                          FILM2   65
        hcforc = 0.399*(wspdk)**0.617                                           -048d   21
      endif                                                                     FILM2   67
C              OVERALL CONVECTION COEFFICIENT                                   FILM2   68
      hcout = sqrt(hcnat*hcnat + hcforc*hcforc)                                 FILM2   69
C              CORRECTION FOR SURFACE ROUGHNESS                                 FILM2   70
      if(irough.ne.6) hcout = hcnat + (hcout-hcnat)*rf(irough)                  FILM2   71
      RETURN                                                                    FILM2   72
      END                                                                       FILM2   73
      FUNCTION  Get_WinLib_TSOL(ETA,Norm)                                       GETWVAL  2
C      Returns the window property TVIS based on possible window permutations   GETWVAL  3
C       works only for Library and Layers type windows                          GETWVAL  4
C                                                                               GETWVAL  5
C                     ETA:  Cosine of incidence angle                           GETWVAL  6
C              NORMALIZED:  0 = NO,1 = YES                                      GETWVAL  7
C                                                                               GETWVAL  8
C    Window properties used:                                                    GETWVAL  9
C           <WINDOW-TYPE>:  0 = STANDARD                                        GETWVAL 10
C                           1 = SKYLIGHT-FLAT                                   GETWVAL 11
C                           2 = SKYLIGHT                                        GETWVAL 12
C                           3 = SKYLIGHT-TUBULAR                                GETWVAL 13
C                                                                               GETWVAL 14
C        <GLASS-PROP-CALC>: 0 = Curve fit for library/layers type windows       GETWVAL 15
C                           1 = interpolate                                     GETWVAL 16
C                                                                               GETWVAL 17
C  <TRANG1>,<TRvals>: window properties                                         GETWVAL 18
C                                                                               GETWVAL 19
C  <TRFIT1>,<TRFIT2>: previously calculated curve coefficients                  GETWVAL 20
C                                                                               GETWVAL 21
C  <SOLARANGLEINDEX>,<SOLARANGLEINC>: previously calc'd interpolation coefs     GETWVAL 22
C                                                                               GETWVAL 23
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     BLIND    2
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        FLOOR1   3
      COMMON        // AA(75 000 000)                                           -048ar   1
      INTEGER          IA(75 000 000)                                           -048ar   2
      EQUIVALENCE  (IA(1), AA(1))                                               //       4
      fit4(x,c1,c2) = amax1(0.,x*(2.-x+(1.-x)*(1.-x)*(c1+c2*(2.+x))))           GETWVAL 26
       If(<WINDOW-TYPE> .LT. 2) Then                    !  not a Domed Skylight GETWVAL 27
        IF(<GLASS-PROP-CALC> .EQ. 0) THEN               !   Curve fit           GETWVAL 28
         If (Norm.EQ.1) Then                            !    normalized result  GETWVAL 29
          TDIR = FIT4(ETA,<TRFIT1>,<TRFIT2>)                                    GETWVAL 30
         Else                                           !    not normalized     GETWVAL 31
          TDIR = <TRANG1> * FIT4(ETA,<TRFIT1>,<TRFIT2>)                         GETWVAL 32
         Endif                                                                  GETWVAL 33
        ELSE                                            !  Interpolate          GETWVAL 34
          II   = <SOLARANGLEINDEX>                      !    (not normalized)   GETWVAL 35
          t1   = <TRvals>                                                       GETWVAL 36
          II   = <SOLARANGLEINDEX> + 1                                          GETWVAL 37
          t2   = <TRvals>                                                       GETWVAL 38
          TDIR = t1 + <SOLARANGLEINC>*(t2-t1)                                   GETWVAL 39
         If (Norm.EQ.1) Then                            !    normalized         GETWVAL 40
          TDIR = TDIR / <TRANG1>                                                GETWVAL 41
         Endif                                                                  GETWVAL 42
        ENDIF                                                                   GETWVAL 43
       Else  !domed skylight                            ! Domed Skylight        GETWVAL 44
        If (Norm.EQ.1) Then                             !    normalized         GETWVAL 45
         TDIR = <SKYTRMULT>                                                     GETWVAL 46
        Else                                            !    not normalized     GETWVAL 47
         TDIR = <TRANG1>*<SKYTRMULT>                                            GETWVAL 48
        Endif                                                                   GETWVAL 49
       Endif                                                                    GETWVAL 50
      Get_WinLib_TSOL=TDIR                                                      GETWVAL 51
      RETURN                                                                    GETWVAL 52
      END                                                                       GETWVAL 53
C                                                                               GETWVAL 54
      FUNCTION  Get_WinLib_TVIS(ETA,Norm)                                       GETWVAL 55
C      Returns the window property TVIS based on possible window permutations.  GETWVAL 56
C       works only for Library and Layers type windows                          GETWVAL 57
C       see Get_WinLib_TSOL for more information                                GETWVAL 58
C                                                                               GETWVAL 59
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     BLIND    2
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        FLOOR1   3
      COMMON        // AA(75 000 000)                                           -048ar   1
      INTEGER          IA(75 000 000)                                           -048ar   2
      EQUIVALENCE  (IA(1), AA(1))                                               //       4
      fit4(x,c1,c2) = amax1(0.,x*(2.-x+(1.-x)*(1.-x)*(c1+c2*(2.+x))))           GETWVAL 62
       If(<WINDOW-TYPE> .LT. 2) Then                    !  not a Domed Skylight GETWVAL 63
        IF(<GLASS-PROP-CALC> .EQ. 0) THEN               !   Curve fit           GETWVAL 64
         If (Norm.EQ.1) Then                            !    normalized result  GETWVAL 65
          TVIS = FIT4(ETA,<TVFIT1>,<TVFIT2>)                                    GETWVAL 66
         Else                                           !    not normalized     GETWVAL 67
          TVIS = <TVANG1> * FIT4(ETA,<TVFIT1>,<TVFIT2>)                         GETWVAL 68
         Endif                                                                  GETWVAL 69
        ELSE                                            !  Interpolate          GETWVAL 70
          II   = <SOLARANGLEINDEX>                      !    (not normalized)   GETWVAL 71
          t1   = <TVvals>                                                       GETWVAL 72
          II   = <SOLARANGLEINDEX> + 1                                          GETWVAL 73
          t2   = <TVvals>                                                       GETWVAL 74
          TVIS = t1 + <SOLARANGLEINC>*(t2-t1)                                   GETWVAL 75
         If (Norm.EQ.1) Then                            !    normalized         GETWVAL 76
          TVIS = TVIS / <TVANG1>                                                GETWVAL 77
         Endif                                                                  GETWVAL 78
        ENDIF                                                                   GETWVAL 79
       Else  !domed skylight                            ! Domed Skylight        GETWVAL 80
        If (Norm.EQ.1) Then                             !    normalized         GETWVAL 81
         TVIS = <SKYTRMULT>                                                     GETWVAL 82
        Else                                            !    not normalized     GETWVAL 83
         TVIS = <TVANG1>*<SKYTRMULT>                                            GETWVAL 84
        Endif                                                                   GETWVAL 85
       Endif                                                                    GETWVAL 86
      Get_WinLib_TVIS=TVIS                                                      GETWVAL 87
      RETURN                                                                    GETWVAL 88
      END                                                                       GETWVAL 89
C                                                                               GETWVAL 90
      FUNCTION  Get_WinSC_TSOL(ETA,Norm)                                        GETWVAL 91
C      Returns the window property based on all the possible window permutationsGETWVAL 92
C       works only for SHADING-COEFFICIENT type windows                         GETWVAL 93
C       see Get_WinLib_TSOL for more information                                GETWVAL 94
C                                                                               GETWVAL 95
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     BLIND    2
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        FLOOR1   3
      COMMON        // AA(75 000 000)                                           -048ar   1
      INTEGER          IA(75 000 000)                                           -048ar   2
      EQUIVALENCE  (IA(1), AA(1))                                               //       4
       IF(<WINDOW-TYPE> .LT. 2) THEN                    !  not a Domed Skylight GETWVAL 98
        If (Norm.EQ.1) Then                             !   normalized          GETWVAL 99
         TSOLNM = AMAX1(0.,<CAM1>+<CAM2>+<CAM3>+<CAM4>)                         GETWVAL100
         TDIR = (1./TSOLNM)*AMAX1(0.,<CAM1> + ETA*                              GETWVAL101
     $        ( <CAM2> + ETA * ( <CAM3> + ETA * <CAM4> )))                      GETWVAL102
        Else                                            !   not normalized      GETWVAL103
         TDIR = AMAX1(0.,<CAM1>+ETA*(<CAM2>+ETA*(<CAM3>                         GETWVAL104
     $                                    +ETA* <CAM4>)))                       GETWVAL105
        Endif                                                                   GETWVAL106
       ELSE                                             !  DOMED SKYLIGHT       GETWVAL107
        If (Norm.EQ.1) Then                             !   normalized          GETWVAL108
         TDIR = <SKYTRMULT>                                                     GETWVAL109
        Else                                            !   not normalized      GETWVAL110
         TDIR = AMAX1(0.,<CAM1>+<CAM2>+<CAM3>+<CAM4>)*<SKYTRMULT>               GETWVAL111
        Endif                                                                   GETWVAL112
       ENDIF                                                                    GETWVAL113
      Get_WinSC_TSOL=TDIR                                                       GETWVAL114
      RETURN                                                                    GETWVAL115
      END                                                                       GETWVAL116
                                                                                GETWVAL117
      FUNCTION  Get_WinLib_ABS(eta,II)                                          -044e3   8
C      Returns the window property ABS based on possible window permutations    GETWVAL119
C       works only for Library and Layers type windows                          GETWVAL120
C       see Get_WinLib_TSOL for more information                                GETWVAL121
C                                                                               GETWVAL122
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     BLIND    2
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        FLOOR1   3
      COMMON        // AA(75 000 000)                                           -048ar   1
      INTEGER          IA(75 000 000)                                           -048ar   2
      EQUIVALENCE  (IA(1), AA(1))                                               //       4
      fit4(x,c1,c2) = amax1(0.,x*(2.-x+(1.-x)*(1.-x)*(c1+c2*(2.+x))))           GETWVAL125
      IL = II                                                                   -044e3   9
      IF(<GLASS-PROP-CALC> .EQ. 0) THEN                                         GETWVAL126
        abs = <ABSANG1> * fit4(eta,<ABSFIT1>,<ABSFIT2>)                         GETWVAL127
      ELSE                                                                      GETWVAL128
        JJ   = (II-1)*10 + <SOLARANGLEINDEX>                                    GETWVAL129
        t1   = <ABSvals>                                                        GETWVAL130
        JJ   = (II-1)*10 + <SOLARANGLEINDEX> + 1                                GETWVAL131
        t2   = <ABSvals>                                                        GETWVAL132
       abs = t1 + <SOLARANGLEINC>*(t2-t1)                                       GETWVAL133
      ENDIF                                                                     GETWVAL134
      Get_WinLib_ABS=abs                                                        GETWVAL135
      RETURN                                                                    GETWVAL136
      END                                                                       GETWVAL137
C                                                                               GETWVAL138
      SUBROUTINE INFPRP                                                         INFPRP   2
C                                                                               INFPRP   3
C              PRECALCULATE SOME INFILTRATION COEFFICIENTS                      INFPRP   4
C                                                                               INFPRP   5
      COMMON  /LOCALD/ STALAT, STALON, ITIMZ, BAZIM, BALTIT,                    /LOCALD/ 2
     1                 SSTALA, CSTALA, TSTALA, SBAZIM, CBAZIM                   /LOCALD/ 3
     2                 ,BXORG, BYORG, SHCOEF, TP1, TP2, WSTP1, WSTP2,           /LOCALD/ 4
     3                 WSHGT,WSHGTL(12),ISREFL,IHOLX                            HOLID1   2
      DIMENSION LOCALD(32)                                                      HOLID1   3
      EQUIVALENCE      (LOCALD(1),STALAT)                                       /LOCALD/ 7
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     BLIND    2
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        FLOOR1   3
      COMMON        // AA(75 000 000)                                           -048ar   1
      INTEGER          IA(75 000 000)                                           -048ar   2
      EQUIVALENCE  (IA(1), AA(1))                                               //       4
C                                                                               INFPRP   9
      IF (<IZINFC> .NE. 1)  GO TO 100                                           INFPRP  10
C              AIR-CHANGE METHOD                                                INFPRP  11
      <ZCFMWSC> = .001922*<ZVOL>*<ZACHG>                                        INFPRP  12
      <ZCFMSA> = <ZCFMSF>*<ZFLRAR>                                              INFPRP  13
      RETURN                                                                    INFPRP  14
  100 IF (<IZINFC> .NE. 4)  RETURN                                              INFPRP  15
C              SHERMAN-GRIMSRUD INFILTRATION                                    INFPRP  16
      BLDHT  = <ZVOL>/<ZFLRAR> + <ZZ>                                           INFPRP  17
      <WSCOEF> = 88. * (1.-<HOR-LEAK-FRAC>)**.33333                             -046r   50
      BLDHT  = BLDHT - <ZZ>                                                     INFPRP  19
      <STACKCOEF> = 60.*(1.+0.5*<HOR-LEAK-FRAC>)*0.33333 * (SQRT(               INFPRP  20
     1              8.*<NEUTRAL-LEVEL>)*SQRT(1.-<NEUTRAL-LEVEL>) /              INFPRP  21
     2              (SQRT(<NEUTRAL-LEVEL>) + SQRT(1.-<NEUTRAL-LEVEL>)))         INFPRP  22
     3               * SQRT(32.*BLDHT/531.)                                     INFPRP  23
      <LEAK-AREA> = <FRAC-LEAK-AREA> * <ZFLRAR>                                 INFPRP  24
      RETURN                                                                    INFPRP  25
      END                                                                       INFPRP  26
      SUBROUTINE  INITLZ(IFLAG,SPCD)                                            INITLZ   2
C                                                                               INITLZ   3
C              INITIALIZE LOADS RUN                                             INITLZ   4
C                                                                               INITLZ   5
C              IFLAG > 0  MEANS DESIGN DAY RUN.  DO NOT ZERO                    INITLZ   6
C              REPORT ARRAYS.                                                   INITLZ   7
C              IFLAG = 0 MEANS FIRST NORMAL RUN PERIOD.                         INITLZ   8
C              ZERO REPORT ARRAYS.                                              INITLZ   9
C              IFLAG = -100 MEANS CALL FROM READSF.  THIS IS                    INITLZ  10
C              THE VERY FIRST INITIALIZATION CALL.                              INITLZ  11
C                                                                               INITLZ  12
      COMMON /INTSUN/ IVEC,ISPEW                                                /INTSUN/ 2
      COMMON  /BEPS  /  BGAREA, BNAREA, PctSysOvrld, PctPltOvrld,               HVAC6    1
     $                  SiteEnergy, SourceEnergy                                HVAC6    2
      DIMENSION         BEPS(6)                                                 HVAC6    3
      EQUIVALENCE       (BEPS(1),BGAREA)                                        HVAC6    4
      COMMON  /BLDPK/  BLDPK(60), IHPP(2), ICPP(2), HRHPK, HRCPK                -063     1
      DIMENSION IBLDPK(66)                                                      -063     2
      EQUIVALENCE (IBLDPK(1),BLDPK(1))                                          /BLDPK/  4
      COMMON  /DAYLT/ NDAYCF,IPHS,IZ,IHIT,MHHIT,IL,RHOAV,ATOT,ARHTOT,           /DAYLT/  2
     1                AR(3),AP(3),ARH(3),ARHP(3),NPH,NTH,WC(3),TMULT,           /DAYLT/  3
     2                TSOLNM,TVISDF,FRUP,ISHLOC,NWTOT,RHOCW,RHOFW,WAREA,        /DAYLT/  4
     3                IMREF,PHSUN,THSUN,PHSUND,THSUND,THSMIN,PHSMIN,            /DAYLT/  5
     4                THSMAX,PHSMAX,THSDEL,PHSDEL,H,NTHS,NPHS,NDFC,LWDC,        /DAYLT/  6
     5                BETA,W,IBZ,IWZ,ZENL,JZD,WBACLU(2,2),PF(7,5),              /DAYLT/  7
     6                VIEWVC(3),GLRNDX(2),WDAYIL(2,2),BACLUM(2),ITF(3),         /DAYLT/  8
     7                RDAYIL(2),RBACLU(2),GLRNEW(2),ETACLD,CDIRLW(24),          /DAYLT/  9
     8                CDIFLW(24),ODIFLW(24),SOLIC(12),TFAC,SPHSUN,              /DAYLT/ 10
     9                CPHSUN,PHWN,THWN,SPHWN,CPHWN,TOTIL(2),ATMMOI(12),         /DAYLT/ 11
     1                ATMTUR(12),XRAN,ALFAD,THRAT,PHRAT,SETPNT(2),              /DAYLT/ 12
     2                IZLSG,IZLSH,IZLSJM,IZLSJY,IZDREP,FPHRP(2),ZFTOT,          /DAYLT/ 13
     3                EINTSK(2,12,24),EINTSU(2,12,24),EDIRSK(2,12,24),          VISBL    2
     4                EDIRSU(2,12,24),FLCWSK(2,12),FLCWSU(2,12),                VISBL    3
     5                FLFWSK(2,12),FLFWSU(2,12),GILSK(2,10),GILSU(2,10),        VISBL    4
     6                WLUMSK(2,11,24),WLUMSU(2,11,24),AVWLSK(2,12,24),          VISBL    5
     7                AVWLSU(2,12,24),CHILSK(24),CHILSU(24),OHILSK(24),         VISBL    6
     8                DFSKHR(2,2),DFSUHR(2,2),SFSKHR(2,2),SFSUHR(2,2),          /DAYLT/ 19
     9                BFSKHR(2,2),BFSUHR(2,2),HISUNF,CHISKF,OHISKF,IZLSM        44d5br   1
      COMMON  /DAYL1/  ATMTU, ATMMO, TAU1                                       /DAYLT/ 21
     1               , TVISB, TH, PH, RAY(3), WNORM(3), TVISBR                  /DAYLT/ 22
      COMMON  /CONST/  DTOR, PIOVR2, PIOVR4, IBLNK, UNDEF, IUNDEF,              /CONST/  2
     1                 UNFILD, URAD, DEFIFR, DEFCFR, DEFINC, KWBTU              /CONST/  3
      REAL             KWBTU                                                    /CONST/  4
      COMMON  /DESTIT/ IDEST(3)                                                 /DESTIT/ 2
      COMMON  /DESW/   DESDYQ(34)                                               DDAY1    3
      INTEGER IDESDYQ(34)                                                       DDAY1    4
      EQUIVALENCE (DESDYQ(1),IDESDYQ(1))                                        DDAY1    5
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                         /FILES/  3
     2              , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                    /FILES/  4
     3                IHRREP(3), IHRPAS(2)                                      /FILES/  5
      COMMON  /IRUNPD/  NRUNPD, JRUNPD, IRUNPD(6,15)                            /IRUNPD/ 2
      COMMON  /LOCALD/ STALAT, STALON, ITIMZ, BAZIM, BALTIT,                    /LOCALD/ 2
     1                 SSTALA, CSTALA, TSTALA, SBAZIM, CBAZIM                   /LOCALD/ 3
     2                 ,BXORG, BYORG, SHCOEF, TP1, TP2, WSTP1, WSTP2,           /LOCALD/ 4
     3                 WSHGT,WSHGTL(12),ISREFL,IHOLX                            HOLID1   2
      DIMENSION LOCALD(32)                                                      HOLID1   3
      EQUIVALENCE      (LOCALD(1),STALAT)                                       /LOCALD/ 7
      COMMON/MONREP/BCSUM(12),IDYCPK(12),IHRCPK(12),DBCPK(12),                  /MONREP/ 2
     1         WBCPK(12),BCPK(12),BHSUM(12),IDYHPK(12),                         /MONREP/ 3
     2         IHRHPK(12),DBHPK(12),WBHPK(12),BHPK(12),                         /MONREP/ 4
     3                 BESUM(12),BEPK(12),BQCM(6,11),BLSI(4,25)                 /MONREP/ 5
      COMMON  /RUNTIM/ IDAYBG, IMONBG, IYRBG,  IDAYND, IMONND, IYRND            /RUNTIM/ 2
      COMMON  /SIZE/   LENGTH,NVECT,NSCHED,NWF,NWPAR,NCONS,NGT,NWL,NGEO,        BLIND    5
     1                 NGSHAD, NWIN, NDOOR, NEW, NUG, NSP, NIWP, NIW,           /SIZE/   3
     2                 NFL, NDESDY, NBR, NOTH, NITH, NOPSRF,                    HRr     10
     3                 NSURF, NSSHD, NSHTOT                                     GEO1     1
      COMMON /TIME  / IDOY, IDOW, IDSTF, ISCHR, ISCDAY, iDSdates(6),            -044e5r  1
     1                IMO, IDAY, IYR, IHR, CLOCK(10), IDSFLG,                   HOLID1   4
     2                MONDSC(12), MONLEN(12), MONSDA(12), IEODMR                /TIME/   4
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
      COMMON  /PSYDES/  HUMRD(72)                                               /PSYDES/ 2
      COMMON /DESHQ/  IDDFLG,DESHRQ(360),IDDTYP(2)                              DDAY1    2
C                                                                               INITLZ  28
      COMMON /WCTRL/  IwinReturn, Imsgflg                                       /WCTRL/  2
c              For DLLs, delete Win_MB and enable msgbox.fi                     /WCTRL/  3
#ifndef _DLL                                                                 /* -051     1 */ 
      COMMON /WIN_MB/ MB_OK,MB_ICONSTOP,MB_ICONEXCLAMATION,MB_TASKMODAL,        -051     2
     &                MB_ICONINFORMATION                                        -051     3
#else                                                                        /* -051     4 */ 
      include 'msgbox.fi'                                                       -051     5
#endif                                                                       /* -051     6 */ 
      DIMENSION IDD(3), SPCD(60,1)                                              -060    11
C                                                                               INITLZ  30
      DATA IDD/4H  DE,4HSIGN,4H DAY/                                            VISBL2   9
C     ZERO LS-A THROUGH LS-D REPORT ARRAYS                                      INITLZ  32
      IF(IFLAG.EQ.-100.OR.IFLAG.EQ.0) GO TO 10                                  INITLZ  33
      GO TO 21                                                                  INITLZ  34
   10 CONTINUE                                                                  INITLZ  35
      DO 13 I=1,50                                                              INITLZ  36
      DO 11 J=1,NSP                                                             INITLZ  37
      SPCD(I,J) = 0.0                                                           INITLZ  38
   11 CONTINUE                                                                  INITLZ  39
   13 CONTINUE                                                                  INITLZ  40
      DO 12 I=1,42                                                              INITLZ  41
   12 BLDPK(I) = 0.0                                                            INITLZ  42
      DO 15 I=1,12                                                              INITLZ  43
      BCSUM(I) = 0.0                                                            INITLZ  44
      IDYCPK(I) = 0                                                             INITLZ  45
      IHRCPK(I) = 0                                                             INITLZ  46
      DBCPK(I)=0.0                                                              INITLZ  47
      WBCPK(I)=0.0                                                              INITLZ  48
      BCPK(I) = 0.0                                                             INITLZ  49
      BHSUM(I) = 0.0                                                            INITLZ  50
      IDYHPK(I) = 0                                                             INITLZ  51
      IHRHPK(I) = 0                                                             INITLZ  52
      DBHPK(I)=0.0                                                              INITLZ  53
      WBHPK(I)=0.0                                                              INITLZ  54
      BHPK(I) = 0.0                                                             INITLZ  55
      BESUM(I) = 0.0                                                            INITLZ  56
      BEPK(I) = 0.0                                                             INITLZ  57
   15 CONTINUE                                                                  INITLZ  58
   21 CONTINUE                                                                  INITLZ  59
      IF (IFLAG .EQ. -100)  GO TO 30                                            INITLZ  60
C              INITIALIZE DESIGN DAY TITLE                                      INITLZ  61
      DO 23 I=1,3                                                               INITLZ  62
   23 IDEST(I) = IBLNK                                                          INITLZ  63
C              SET YEAR, DAY OF YEAR, AND DAY OF WEEK                           INITLZ  64
      IYR    = IYRBG                                                            INITLZ  65
      IDOY = IDOYR(IMONBG,IDAYBG) - 1                                           INITLZ  66
      IDOW = IDOWK(IYR,IDOY+1) - 1                                              INITLZ  67
      IF (IFLAG .EQ. 0)  GO TO 50                                               INITLZ  68
      IF (IFLAG .GT. 0)  GO TO 40                                               INITLZ  69
      RETURN                                                                    INITLZ  70
C              FIRST INITIALIZATION CALL.  SET SIN, COS, OF  BUILDING           INITLZ  71
C              AZIMUTH                                                          INITLZ  72
   30 BAZIM  = BAZIM*DTOR                                                       INITLZ  73
      SBAZIM = SIN( BAZIM )                                                     INITLZ  74
      CBAZIM = COS( BAZIM )                                                     INITLZ  75
      CALL FILLN(0,DESHRQ(1),360)                                               DDAY1  105
      CALL FILLN(0,HUMRD(1),72)                                                 DDAY1  106
      CALL FILLN(0,IDDTYP(1),2)                                                 DDAY1  107
      XRAN = 0.5                                                                INITLZ  76
      HRHPK  = 0.0                                                              INITLZ  77
      HRCPK  = 0.0                                                              INITLZ  78
      DEFCFR = 1./((1./DEFIFR)-URAD)                                            INITLZ  79
      DEFINC = DEFCFR - DEFIFR                                                  INITLZ  80
C              CONVERT GROUND TEMPS TO DEGREES R                                INITLZ  81
      DO 33 I=1,12                                                              INITLZ  82
      IF( ITYPLS(GTEMP(I)) .NE. ITYPLS(UNFILD) )                                INITLZ  83
     1     GTEMP(I) = GTEMP(I) + 460.                                           INITLZ  84
   33 CONTINUE                                                                  INITLZ  85
C              GET KW/BTU CONVERSION FACTOR DIRECTLY FROM UNITS TABLE           INITLZ  86
      KWBTU = 1.0                                                               INITLZ  87
      CALL KDIV(KWBTU, 80, 1, 0)                                                INITLZ  88
      IF (NDESDY .EQ. NRUNPD) GO TO 37                                          INITLZ  89
C              GET STATION NAME AND LOCATION                                    INITLZ  90
      IF (IFX .GE. 3)  GO TO 31                                                 INITLZ  91
      READ(IWEATH,END=35)IWDID(1),IWDID(2),LYR,WLAT,WLONG,LTIMZ,DUM,DUM,        INITLZ  92
     .                   CLRNES,TGNDR                                           INITLZ  93
      GO TO 32                                                                  INITLZ  94
31    READ(IWEATH,END=35) DUM                                                   INITLZ  95
      READ(IWEATH,END=35)IWDID,LYR,WLAT,WLONG,LTIMZ,DUM,DUM,CLRNES,TGNDR        INITLZ  96
C              CHECK FOR MISSING LAT, LONG, AND TIME ZONE                       INITLZ  97
   32 IF (ITYPLS(STALAT) .EQ. ITYPLS(UNFILD))  STALAT = WLAT                    INITLZ  98
      IF (ITYPLS(STALON) .EQ. ITYPLS(UNFILD))  STALON = WLONG                   INITLZ  99
      IF (ITYPLS(ITIMZ) .EQ. ITYPLS(UNFILD))  ITIMZ = LTIMZ                     INITLZ 100
      IF(ABS(STALAT-WLAT).GT.5.0.OR.ABS(STALON-WLONG).GT.5.0.OR.                INITLZ 101
     1   ITIMZ.NE.LTIMZ) THEN                                                   INITLZ 102
        CALL MSGSIM(-2,0,0,0,0)                                                 INITLZ 103
        IF(IFX.GE.5) THEN                                                       INITLZ 104
C                                                                               INITLZ 105
          WRITE(IOUTPT,9032) STALAT,STALON,ITIMZ,WLAT,WLONG,LTIMZ               INITLZ 106
 9032     FORMAT(                                                               INITLZ 107
     1 12X,19HBUILDING LATITUDE (,F6.1,14H), LONGITUDE (,F6.1,                  INITLZ 108
     2 17H), OR TIME ZONE (,I3,30H) DISAGREES WITH WEATHER FILE,/,              INITLZ 109
     3 12X,18HWHICH HAS LATITUDE,F7.1,11H, LONGITUDE,F7.1,                      INITLZ 110
     4 15H, AND TIME ZONE,I4,32H.  VALUES FROM WEATHER FILE WILL,/              INITLZ 111
     5 12X,48HBE USED TO ASSURE CONSISTENCY BETWEEN CALCULATED,                 INITLZ 112
     6 1X,46HSUN POSITION AND SOLAR DATA FROM WEATHER FILE. )                   INITLZ 113
      STALAT = WLAT                                                             INITLZ 114
      STALON = WLONG                                                            INITLZ 115
      ITIMZ  = LTIMZ                                                            INITLZ 116
        ELSE                                                                    INITLZ 117
          WRITE(IOUTPT,9033) STALAT,STALON,ITIMZ,WLAT,WLONG,LTIMZ               INITLZ 118
 9033     FORMAT(                                                               INITLZ 119
     1 12X,19HBUILDING LATITUDE (,F6.1,14H), LONGITUDE (,F6.1,                  INITLZ 120
     2 17H), OR TIME ZONE (,I3,30H) DISAGREES WITH WEATHER FILE,/,              INITLZ 121
     3 12X,18HWHICH HAS LATITUDE,F7.1,11H, LONGITUDE,F7.1,                      INITLZ 122
     4 15H, AND TIME ZONE,I3,1H./,12X,                                          INITLZ 123
     5 54HTHIS MAY CAUSE INCONSISTENCY BETWEEN TEMPERATURES FROM/,              INITLZ 124
     6 12X,49HTHE WEATHER FILE AND CALCULATED SOLAR QUANTITIES./,12X,           INITLZ 125
     7 56HUSE WEATHER FILE THAT IS CLOSER TO BUILDING LOCATION OR ,             INITLZ 126
     8 37HADJUST INPUT LATITUDE, LONGITUDE, AND/,12X,                           INITLZ 127
     9 40HTIME ZONE TO CORRESPOND TO WEATHER FILE. )                            INITLZ 128
        ENDIF                                                                   INITLZ 129
      ENDIF                                                                     INITLZ 130
   35 LRECX  = 0                                                                INITLZ 131
      IMO    = IMONBG                                                           INITLZ 132
      IDAY   = IDAYBG                                                           INITLZ 133
      IHR    = 1                                                                INITLZ 134
      ISPEW = 0                                                                 INITLZ 135
      IVEC  = 1                                                                 INITLZ 136
      REWIND IWEATH                                                             INITLZ 137
      CALL WEATHI                                                               INITLZ 138
C     THE PROGRAM IS GOING TO TEST IF THERE ARE VALUES SPECIFIED FOR LATITUDE   INITLZ 139
C     AND LONGITUDE IN BUILDING-LOCATION. IF NOT IT WILL ABORT THE RUN AND ASK  INITLZ 140
C     FOR THEM.                                                                 INITLZ 141
C                                                                               INITLZ 142
   37 IF ( ( ITYPLS(STALAT) .EQ. ITYPLS(UNFILD) ) .OR.                          INITLZ 143
     $     ( ITYPLS(STALON) .EQ. ITYPLS(UNFILD) ) ) THEN                        INITLZ 144
         CALL MSGSIM(-1,0,0,0,0)                                                INITLZ 145
         WRITE (IOUTPT,9034)                                                    INITLZ 146
 9034    FORMAT(                                                                INITLZ 147
     1          12X,42HTHE LATITUDE AND LONGITUDE OF THE BUILDING/,             INITLZ 148
     2          12X,42HHAVE TO BE SPECIFIED IF YOU ARE USING ONLY/,             INITLZ 149
     3          12X,11HDESIGN DAY. )                                            INITLZ 150
         CALL ABT                                                               INITLZ 151
      ENDIF                                                                     INITLZ 152
      IF (NDESDY .GT. 0)  DBTR = 0.5*(DESDYQ(1) + DESDYQ(2)) + 460.             INITLZ 153
      STALAT = STALAT*DTOR                                                      INITLZ 154
      STALON = STALON*DTOR                                                      INITLZ 155
      SSTALA = SIN(STALAT)                                                      INITLZ 156
      CSTALA = COS(STALAT)                                                      INITLZ 157
      TSTALA = SSTALA/CSTALA                                                    INITLZ 158
c              WSHGTL(12) used to contain the monthly height of the weather     -046r   51
c              station wind speed measurement.  Now unused                      -046r   52
      RETURN                                                                    INITLZ 176
C              DESIGN DAY.  SET DESIGN DAY TITLE                                INITLZ 177
   40 CONTINUE                                                                  INITLZ 178
      DO 42 I=1,3                                                               INITLZ 179
   42 IDEST(I) = IDD(I)                                                         INITLZ 180
      RETURN                                                                    INITLZ 181
C              FIRST NORMAL RUN PERIOD.  ZERO RECX, THE RECORD NO.              INITLZ 182
C              READ FROM THE WEATHER FILE SO WEATHER FILE WILL                  INITLZ 183
C              BE READ IN AT LEAST ONCE AND DESDAY VARIABLES REPLACED           INITLZ 184
   50 CONTINUE                                                                  INITLZ 185
      BACKSPACE IWEATH                                                          INITLZ 186
      LRECX   = 0                                                               INITLZ 187
      RETURN                                                                    INITLZ 188
      END                                                                       INITLZ 189
      SUBROUTINE IWINET(COSBIW)                                                 IWINET   2
C                                                                               IWINET   3
C              CALLED BY IWSOL.  CALCULATES EFFECTIVE SOLAR TRANSMITTANCE       IWINET   4
C              OF INTERIOR GLAZING SEPARATING A SUNSPACE AND ADJACENT           IWINET   5
C              ROOM, FOR DIFFUSE RADIATION AND FOR DIRECT RADIATION             IWINET   6
C              AT COS(ANGLE OF INCIDENCE)=COSBIW.                               IWINET   7
C              THE EFFECTIVE TRANSMITTANCE IS THE TRANSMITTANCE                 IWINET   8
C              PLUS THE FRACTION OF ABSORBED RADIATION FLOWING TO THE           IWINET   9
C              ROOM.  SEE SUBROUTINE CALWIN FOR DEFN OF VARIABLES.              IWINET  10
C                                                                               IWINET  11
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     BLIND    2
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        FLOOR1   3
      COMMON  /WINV/   UW,TDIR,ADIRO,TDIF,ADIFO,ADIRI,ADIFI,FI,FO,              /WINV/   2
     1                 AGOLGE,QDIR,QDIF,QTRANS,QABS,QSOLG,GSHACO,               /WINV/   3
     2                 QCON,CFMW,SHMULT,SOLGMX,UWW,CWIN(4),CSUM(4),             /WINV/   4
     3                 ANWIN(4),ANSUM(4),QIRWI                                  VISBL    7
      COMMON  /HRREP / Irb, Ihrp, Lrb, Lhrp, Nrb, Nhrp, IVTLIM(3,50),           HRr      1
     &                 IGRPtr, IBRPtr, IRSch, IRSchT(5),                        HRr      2
     &                 NHRTyp(3), ITBUF(3), ITBUFB(3), ITBUFE(3),               HRr      3
     &                 IHREOF, ICDFLG                                           HRr      4
      COMMON        // AA(75 000 000)                                           -048ar   1
      INTEGER          IA(75 000 000)                                           -048ar   2
      EQUIVALENCE  (IA(1), AA(1))                                               //       4
C                                                                               IWINET  16
      DIMENSION WINV(21)                                                        IWINET  17
      EQUIVALENCE (WINV(1),UW)                                                  IWINET  18
C                                                                               IWINET  19
C            INLINE FUNCTIONS TO FIND GLASS TRANSMITTANCE, ABSORPTANCE          IWINET  20
C              GLASS-TYPE-CODE .LE. 11                                          IWINET  21
      TAFN1(E1,A1,A2,A3,A4) = AMAX1(0.,A1+E1*(A2+E1*(A3+E1*A4)))                IWINET  22
      TAFN2(E2,B1,B2,B3,B4) = AMAX1(0.,B1+E2*B2+B3/(E2+B4))                     IWINET  23
C              GLASS-TYPE-CODE .GE. 12 (FROM WINDOW-4 LIBRARY)                  IWINET  24
      fit4(x,c1,c2) = amax1(0.,x*(2.-x+(1.-x)*(1.-x)*(c1+c2*(2.+x))))           IWINET  25
C                                                                               IWINET  26
      MR = <MWIPRP>                                                             IWINET  27
      if(<IGTYP>.le.0) then                                                     WLIB1   28
C              GLASS HAS S-C SPECIFIED OR IS UNGLAZED OPENING                   WLIB1   29
      RO = 0.68                                                                 WLIB1   30
      UWI = 1./AMAX1(<GCON>,1.E-9)                                              WLIB1   31
      UW = 1./(RO+UWI)                                                          WLIB1   32
C            TRANSMITTANCE OF INT WIN                                           WLIB1   33
      IF(<IGTYP>.EQ.-1) THEN                                                    WLIB1   34
C              SHADING-COEF SPECIFIED                                           WLIB1   35
         TDIR =  TAFN1(COSBIW,<CAM1>,<CAM2>,<CAM3>,<CAM4>)                      WLIB1   36
         TDIF = <CAM9>                                                          WLIB1   37
         ADIRO = TAFN2(COSBIW,<CAM5>,<CAM6>,<CAM7>,<CAM8>)                      WLIB1   38
         ADIRO = AMAX1(ADIRO,0.)                                                WLIB1   39
         ADIFO = <CAM10>                                                        WLIB1   40
         IF(<GCON>.GT.0.7) THEN                                                 WLIB1   41
C              SINGLE PANE                                                      WLIB1   42
            FO = 0.33*(0.70-0.55*<GSHACO>)                                      WLIB1   43
         ELSE                                                                   WLIB1   44
C              MULTIPANE                                                        WLIB1   45
            FO = 0.075                                                          WLIB1   46
         ENDIF                                                                  WLIB1   47
      ELSE                                                                      WLIB1   48
C              UNGLAZED OPENING                                                 WLIB1   49
         TDIR = 1.0                                                             WLIB1   50
         TDIF = 1.0                                                             WLIB1   51
         ADIRO = 0.                                                             WLIB1   52
         FO = 0.                                                                WLIB1   53
      ENDIF                                                                     WLIB1   54
      <TDIR> = TDIR                                                             WLIB1   55
C            EFFECTIVE TRANSMITTANCE                                            WLIB1   56
      <TEFIWNDR> = TDIR*<GSHACO> + FO*ADIRO                                     WLIB1   57
      <TEFIWNDF> = TDIF*<GSHACO> + FO*ADIFO                                     WLIB1   58
C                                                                               IWINET  69
      else                                                                      IWINET  70
C              glass type is from window-4 library                              IWINET  71
C                                                                               IWINET  72
      tdir   = <TRANG1> * fit4(cosbiw,<TRFIT1>,<TRFIT2>)                        IWINET  73
      <TDIR> = tdir                                                             IWINET  74
      tdif = <TRHEMIS>                                                          IWINET  75
      nlay = <NLAYER>                                                           IWINET  76
C              resistance excluding both air films                              IWINET  77
      rbare = 5.67826/<UCENTER-BARE>                                            IWINET  78
C              resistance including both air films                              IWINET  79
      ro = .68                                                                  IWINET  80
      ri = .68                                                                  IWINET  81
      rtot = ro + rbare + ri                                                    IWINET  82
C              gap resistance                                                   IWINET  83
      rg = 0.                                                                   IWINET  84
      if(nlay.ge.2) rg = rbare/(nlay-1)                                         IWINET  85
C              initialize effective dir and dif transmittance                   IWINET  86
      <TEFIWNDR> = <TDIR>                                                       IWINET  87
      <TEFIWNDF> = <TRHEMIS>                                                    IWINET  88
C              get inward flowing contribution                                  IWINET  89
      do il = 1,nlay                                                            IWINET  90
        fil = (ro+(il-1)*rg)/rtot                                               IWINET  91
        adiril = <ABSANG1> * fit4(cosbiw,<ABSFIT1>,<ABSFIT2>)                   IWINET  92
        adifil = <ABSHEMIS>                                                     IWINET  93
        <TEFIWNDR> = <TEFIWNDR> + fil*adiril                                    IWINET  94
        <TEFIWNDF> = <TEFIWNDF> + fil*adifil                                    IWINET  95
C***                                                                            IWINET  96
C      write(ioutpt,999) <IGTYP>,il,cosbiw,<TDIR>,                              IWINET  97
C     .   nlay,<UCENTER-BARE>,rbare,                                            IWINET  98
C     .   rtot,rg,fil,adiril,adifil,<TRFIT1>,<TRFIT2>,                          IWINET  99
C     .   <ABSFIT1>,<ABSFIT2>,<TEFIWNDR>,<TEFIWNDF>                             IWINET 100
C  999 format(' gtc,il,cos,tdir,nlay,ubare,rbare,rtot,rg,fil,adiril,adifi       IWINET 101
C     .l,TEFIWNDR,TEFIWNDF='/1x,2i5,2f6.3,i3,7f10.3/1x,6f10.3)                  IWINET 102
C***                                                                            IWINET 103
      if(il.eq.1) then                                                          IWINET 104
        ADIFO = adifil                                                          IWINET 105
        ADIRO = adiril                                                          IWINET 106
        FO = fil                                                                IWINET 107
      endif                                                                     IWINET 108
      if(il.eq.2) then                                                          IWINET 109
        ADIFI = adifil                                                          IWINET 110
        ADIRI = adiril                                                          IWINET 111
        FI = fil                                                                IWINET 112
      endif                                                                     IWINET 113
      enddo                                                                     IWINET 114
C                                                                               IWINET 117
      endif                                                                     IWINET 118
C                                                                               IWINET 119
      IF (IRSCH.EQ.0.OR.<MWIBUF>.EQ.0) GO TO 500                                IWINET 120
      IPTR = <MWIBUF> - 1                                                       IWINET 121
      DO 400 I=2,9                                                              IWINET 122
  400 AA(IPTR+I) = WINV(I)                                                      IWINET 123
      AA(IPTR+16) = <GSHACO>                                                    IWINET 124
      if(<IGTYP>.ge.0) aa(iptr+16) = <SHDCOF>                                   WLIB1   59
  500 CONTINUE                                                                  IWINET 126
      RETURN                                                                    IWINET 127
      END                                                                       IWINET 128
      SUBROUTINE IWSHAD(ASUN,NDIV)                                              IWSHAD   2
C                                                                               IWSHAD   3
C              CALLED BY IWSTF.  FINDS SUNLIT AREA OF AN INTERIOR               IWSHAD   4
C              SURFACE DUE TO DIRECT RADIATION FROM AN EXTERIOR                 IWSHAD   5
C              WINDOW.  THE SHADOW ROUTINES ARE USED TO PROJECT THE             IWSHAD   6
C              IMAGE OF THE EXTERIOR WINDOW ONTO THE INTERIOR SURFACE,          IWSHAD   7
C              WHICH MAY BE AN INTERIOR WALL OR INTERIOR WINDOW.  THE           IWSHAD   8
C              IMAGE IS THEN REVERSED (SEE SUBROUTINE SHDWUN) AND               IWSHAD   9
C              UNIONED WITH THE SHADOWS FROM SHADING SURFACES TO GET            IWSHAD  10
C              THE NET ILLUMINATED AREA.                                        IWSHAD  11
C                                                                               IWSHAD  12
      COMMON /INTSUN/ IVEC,ISPEW                                                /INTSUN/ 2
      COMMON  /LENS/   MWFLEN, MRLEN, MSHLEN, MWNLEN, MDRLEN, MXLEN,            /LENS/   2
     1                 MULEN, MZLEN, MIWLEN, MFLLEN,                            HRr      5
     2                 LMTB, LLDSOU, MSTLEN, LSTFT, MWLLEN                      BLIND    1
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     BLIND    2
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        FLOOR1   3
      COMMON  /PTRBGN/ ISCB, IWFB, IWPB, ICONSB, IGTB, IWLB, IGEOB,             HRr      6
     1                 ISHADB, IWINB, IDRB, IEWB, IUGB, ISPB, IIWPB,            HRr      7
     2                 IIWB, IFLB, ISPCDB, IOTHB, ILHB, IZQCMB, ISSHDB,         HRr      8
     3                 IOHFIB, IZLSK, IZLSL, ISTFB                              HRr      9
      COMMON  /SHADWF/ ISDINF, LSHSTR, ISHSTB, KMAX                             /SHADWF/ 2
      COMMON  /SIZE/   LENGTH,NVECT,NSCHED,NWF,NWPAR,NCONS,NGT,NWL,NGEO,        BLIND    5
     1                 NGSHAD, NWIN, NDOOR, NEW, NUG, NSP, NIWP, NIW,           /SIZE/   3
     2                 NFL, NDESDY, NBR, NOTH, NITH, NOPSRF,                    HRr     10
     3                 NSURF, NSSHD, NSHTOT                                     GEO1     1
      COMMON        // AA(75 000 000)                                           -048ar   1
      INTEGER          IA(75 000 000)                                           -048ar   2
      EQUIVALENCE  (IA(1), AA(1))                                               //       4
                                                                                IWSHAD  20
C                                                                               IWSHAD  21
C            PUT THE INTERIOR SURFACE INTO RECEIVING POLYGON                    IWSHAD  22
      ISPEW = 0                                                                 IWSHAD  23
      CALL SHDWIN (<KOSE>,<X>,NDIV,AA(ISHSTB))                                  IWSHAD  24
C            PROCESS EXT WIN AS A SENDING POLYGON                               IWSHAD  25
C            SET GLOBAL SHADE PTR TO EXTERIOR WINDOW GEOMETRY                   IWSHAD  26
      MH = <MWIGEOM>                                                            IWSHAD  27
C            SET FLAG INDICATING SENDING POLYGON IS AN EXT WINDOW               IWSHAD  28
      ISPEW = 1                                                                 IWSHAD  29
      CALL SHDWS (1,0,NDIV,AA(ISHSTB))                                          IWSHAD  30
C              PROCESS SHADING SURFACES AS SENDING POLYGONS                     IWSHAD  31
      ISPEW = 0                                                                 IWSHAD  32
      IF ((<MXSHAD>+<MWISHADE>+NGSHAD+NSSHD).EQ.0) GO TO 605                    IWSHAD  33
C              WALL SHADES                                                      IWSHAD  34
      MH = <MXSHAD>                                                             IWSHAD  35
      IF (MH.GT.0) CALL SHDWS(<NXSHAD>,15,NDIV,AA(ISHSTB))                      IWSHAD  36
C              GLOBAL SHADES                                                    IWSHAD  37
      MH = ISHADB                                                               IWSHAD  38
      IF (NGSHAD.GT.0) CALL SHDWS(NGSHAD,MSHLEN,NDIV,AA(ISHSTB))                IWSHAD  39
C              SELF SHADES                                                      IWSHAD  40
      MH = ISSHDB                                                               IWSHAD  41
      IF (NSSHD.GT.0) CALL SHDWS(NSSHD,MSHLEN,NDIV,AA(ISHSTB))                  IWSHAD  42
C              ATTACHED SHADES                                                  IWSHAD  43
      MH = <MWISHADE>                                                           IWSHAD  44
      IF (MH.GT.0) CALL SHDWS(<NWISHADE>,2,NDIV,AA(ISHSTB))                     IWSHAD  45
  605 CONTINUE                                                                  IWSHAD  46
C            INTERIOR SURFACE AREA WITH DIRECT SUN                              IWSHAD  47
      ISPEW = 1                                                                 IWSHAD  48
      CALL SHDWAR (ASUN,NDIV,AA(ISHSTB))                                        IWSHAD  49
      RETURN                                                                    IWSHAD  50
      END                                                                       IWSHAD  51
      SUBROUTINE  IWSOL                                                         IWSOL    2
C                                                                               IWSOL    3
C            CALLED FROM DAYCLC FOR SUNSPACES AND FOR SPACES ADJACENT           IWSOL    4
C            TO A SUNSPACE.                                                     IWSOL    5
C                                                                               IWSOL    6
C            CALCULATES CONDUCTANCE SUM FOR WINDOWS IN INTERIOR WALLS           IWSOL    7
C            BETWEEN A SUNSPACE AND A REGULAR SPACE.                            IWSOL    8
C                                                                               IWSOL    9
C            FOR SUNSPACES, CALCULATES THE DIRECT AND DIFFUSE SOLAR             IWSOL   10
C            RADIATION ABSORBED BY EACH COMMON WALL, <SOLABSIW>, AND            IWSOL   11
C            TRANSMITTED BY THE WINDOWS IN EACH COMMON WALL, <SOLTRNIW>.        IWSOL   12
C             <SOLABSIW> IS PASSED TO SYSTEMS, WHERE IT IS USED IN              IWSOL   13
C             CALCULATING DELAYED CONDUCTION THRU COMMON WALLS.                 IWSOL   14
C             <SOLTRNIW> IS USED IN SUBR. CALOTH TO INCREMENT THE SOLAR         IWSOL   15
C             GAIN TO SPACES ADJACENT TO A SUNSPACE (IN 2.1C THIS WAS           IWSOL   16
C             DONE IN SYSTEMS).                                                 IWSOL   17
C                                                                               IWSOL   18
C            QIWSU1 (THE SUM OF THE <SOLABSIW) AND QIWSU2 (THE SUM OF THE       IWSOL   19
C            <SOLTRNIW>) ARE SUBTRACTED FROM QSOL, THE SUNSPACE SOLAR GAIN      IWSOL   20
C            CALCULATED IN CALWIN.                                              IWSOL   21
C                                                                               IWSOL   22
C            SOLAR TRANSFER FACTORS (STF), CALCULATED IN SUBR. IWSTF,           IWSOL   23
C            ARE USED TO CALCULATE THE DIRECT SOLAR RADIATION ORIGINATING       IWSOL   24
C            FROM EACH SUNSPACE EXTERIOR WINDOW AND INCIDENT ON EACH            IWSOL   25
C            COMMON-WALL OPAQUE SURFACE AND WINDOW.                             IWSOL   26
C            SHADING DEVICES (DRAPES, ETC.) ON EXTERIOR WINDOWS ARE             IWSOL   27
C            ASSUMED TO BE PERFECTLY DIFFUSING, THUS ALLOWING ONLY DIFFUSE      IWSOL   28
C            RADIATION TO REACH INTERIOR SURFACES.                              IWSOL   29
C                                                                               IWSOL   30
C            THE DIFFUSE SOLAR IRRADIANCE INSIDE A SUNSPACE HAS THREE           IWSOL   31
C            SOURCES -- (1) PRIMARY DIFFUSE RADIATION FROM EXTERIOR WINDOWS,    IWSOL   32
C            (2) REFLECTION OF PRIMARY DIFFUSE RADIATION FROM INTERIOR          IWSOL   33
C            SURFACES, AND (3) REFLECTION OF DIRECT RADIATION FROM INTERIOR     IWSOL   34
C            SURFACES.  PRIMARY AND REFLECTED DIFFUSE IRRADIANCE IS ASSUMED     IWSOL   35
C            TO BE UNIFORMLY DISTRIBUTED THROUGHOUT THE SUNSPACE.               IWSOL   36
C            IN CALCULATING THE DIFFUSE IRRADIANCE FROM REFLECTION OF           IWSOL   37
C            DIRECT RADIATION, IT IS ASSUMED THAT ALL DIRECT RADIATION NOT      IWSOL   38
C            FALLING ON COMMON WALLS FALLS ON THE FLOOR OF THE SUNSPACE.        IWSOL   39
C                                                                               IWSOL   40
C            THE EFFECT OF SHADING DEVICES ON INTERIOR WINDOWS IS ACCOUNTED     IWSOL   41
C            FOR BY MULTIPLYING THE TRANSMITTED PLUS RE-CONDUCTED SOLAR         IWSOL   42
C            RADIATION BY THE SHADING-SCHEDULE VALUE FOR THE WINDOW.            IWSOL   43
C                                                                               IWSOL   44
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                         /FILES/  3
     2              , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                    /FILES/  4
     3                IHRREP(3), IHRPAS(2)                                      /FILES/  5
      COMMON  /HRREP / Irb, Ihrp, Lrb, Lhrp, Nrb, Nhrp, IVTLIM(3,50),           HRr      1
     &                 IGRPtr, IBRPtr, IRSch, IRSchT(5),                        HRr      2
     &                 NHRTyp(3), ITBUF(3), ITBUFB(3), ITBUFE(3),               HRr      3
     &                 IHREOF, ICDFLG                                           HRr      4
      COMMON  /WINV/   UW,TDIR,ADIRO,TDIF,ADIFO,ADIRI,ADIFI,FI,FO,              /WINV/   2
     1                 AGOLGE,QDIR,QDIF,QTRANS,QABS,QSOLG,GSHACO,               /WINV/   3
     2                 QCON,CFMW,SHMULT,SOLGMX,UWW,CWIN(4),CSUM(4),             /WINV/   4
     3                 ANWIN(4),ANSUM(4),QIRWI                                  VISBL    7
      COMMON  /LENS/   MWFLEN, MRLEN, MSHLEN, MWNLEN, MDRLEN, MXLEN,            /LENS/   2
     1                 MULEN, MZLEN, MIWLEN, MFLLEN,                            HRr      5
     2                 LMTB, LLDSOU, MSTLEN, LSTFT, MWLLEN                      BLIND    1
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     BLIND    2
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        FLOOR1   3
      COMMON  /PTRBGN/ ISCB, IWFB, IWPB, ICONSB, IGTB, IWLB, IGEOB,             HRr      6
     1                 ISHADB, IWINB, IDRB, IEWB, IUGB, ISPB, IIWPB,            HRr      7
     2                 IIWB, IFLB, ISPCDB, IOTHB, ILHB, IZQCMB, ISSHDB,         HRr      8
     3                 IOHFIB, IZLSK, IZLSL, ISTFB                              HRr      9
      COMMON  /SIZE/   LENGTH,NVECT,NSCHED,NWF,NWPAR,NCONS,NGT,NWL,NGEO,        BLIND    5
     1                 NGSHAD, NWIN, NDOOR, NEW, NUG, NSP, NIWP, NIW,           /SIZE/   3
     2                 NFL, NDESDY, NBR, NOTH, NITH, NOPSRF,                    HRr     10
     3                 NSURF, NSSHD, NSHTOT                                     GEO1     1
      COMMON /TIME  / IDOY, IDOW, IDSTF, ISCHR, ISCDAY, iDSdates(6),            -044e5r  1
     1                IMO, IDAY, IYR, IHR, CLOCK(10), IDSFLG,                   HOLID1   4
     2                MONDSC(12), MONLEN(12), MONSDA(12), IEODMR                /TIME/   4
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
      COMMON  /SUND/   ISUNUP, GUNDOG, HORANG, TDECLN, EQTIME, SOLCON,          /SUND/   2
     1                 ATMEXT, SKYDFF, RAYCOS(3), RDN,                          /SUND/   3
     2                 BSUN, DECLN, CD, SD, FSUNUP                              /SUND/   4
      COMMON  /REPORT/ IREPRT(4,37),IPRG,IUNIQV(100),IUNIQS(100),IUNIQL         BIGNAM   1
      COMMON  /ZNEWHR/ TZONER, INFCOD,                                          /ZNEWHR/ 2
     1                 QWALQ, QCELQ, QWINC, QWALD, QCELD,QINTW,                 /ZNEWHR/ 3
     2                 QUGF, QUGW, QDOOR, QEQPS, QEQPS2, QPPS,                  /ZNEWHR/ 4
     3                 QPPL, QEQPL, QEQPL2, QINFL,                              /ZNEWHR/ 5
     4                 QTSKL, QSOL, QPLENM, QLITE, QLITEW, QINFS,               /ZNEWHR/ 6
     5                 QELECT, CFMINF, QSUMW, ZCOND, QZS, QZL, QZTOT,           /ZNEWHR/ 7
     6                 QZLTEL,QZEQEL,QZGAS,QZHW,WNDSPZ,MANAGE                   /ZNEWHR/ 8
     7               , QZPEL, QZTLEL                                            /ZNEWHR/ 9
      DIMENSION QYENI(33)                                                       /ZNEWHR/10
      EQUIVALENCE  (QYENI(1), QWALQ)                                            /ZNEWHR/11
      COMMON        // AA(75 000 000)                                           -048ar   1
      INTEGER          IA(75 000 000)                                           -048ar   2
      EQUIVALENCE  (IA(1), AA(1))                                               //       4
C                                                                               IWSOL   58
C            INITIALIZE QIWSU1 = TOTAL SOLAR ABSORBED BY THE OPAQUE PART OF ALL IWSOL   59
C                                THE COMMON WALLS IN A SUNSPACE (BTUH), AND     IWSOL   60
C                       QIWSU2 = TOTAL SOLAR TRANSMITTED AND RECONDUCTED THROUGHIWSOL   61
C                                THE COMMON-WALL INTERIOR WINDOWS IN A SUNSPACE IWSOL   62
C                                OR IN A REGULAR SPACE ADJACENT TO A SUNSPACE.  IWSOL   63
C                                                                               IWSOL   64
      QIWSU1 = 0.                                                               IWSOL   65
      QIWSU2 = 0.                                                               IWSOL   66
C          SET WGOLGE HOUR INDEX                                                IWSOL   67
      JJ = IHR                                                                  IWSOL   68
C                                                                               IWSOL   69
      NIW1 = <NINTS>                                                            IWSOL   70
      IF (NIW1.EQ.0) GO TO 1000                                                 IWSOL   71
C                                                                               IWSOL   72
C            ---------------------------                                        IWSOL   73
C            UA SUM FOR INTERIOR WINDOWS                                        IWSOL   74
C            ---------------------------                                        IWSOL   75
C                                                                               IWSOL   76
C            GET CONDUCTANCE OF INTERIOR WINDOWS FOR EACH COMMON                IWSOL   77
C            WALL DEFINED IN THIS SPACE                                         IWSOL   78
C                                                                               IWSOL   79
C            ---INTERIOR WALL LOOP---                                           IWSOL   80
C                                                                               IWSOL   81
      DO 50 IW1 = 1,NIW1                                                        IWSOL   82
      MI = IA(<MZINT>+IW1-1)                                                    IWSOL   83
C           SKIP IF NOT A COMMON WALL DEFINED IN THIS SPACE                     IWSOL   84
      IF (<IWSSPID>.NE.1.OR.MZ.NE.<MZIN>) GO TO 50                              IWSOL   85
C           INITIALIZE WINDOW CONDUCTANCE                                       IWSOL   86
      <IWNSUA> = 0.                                                             IWSOL   87
      NIWN1 = <NIWIN>                                                           IWSOL   88
      IF (NIWN1.EQ.0) GO TO 50                                                  IWSOL   89
      MWI = <MIWIN>                                                             IWSOL   90
C                                                                               IWSOL   91
C           ---INTERIOR WINDOW LOOP---                                          IWSOL   92
C                                                                               IWSOL   93
      DO 60 IWN1 = 1,NIWN1                                                      IWSOL   94
      MR = <MWIPRP>                                                             IWSOL   95
      UWN = <GCON>                                                              IWSOL   96
      if(<IGTYP>.GE.0) uwn=1./(5.67826/(<UCENTER-BARE>+0.0001)+.68)             WLIB1   60
      IF (<KGCON>.EQ.0) GO TO 65                                                IWSOL   98
      MS = <@KGCON> + ISCHR                                                     IWSOL   99
      UWN = UWN * AA(MS)                                                        IWSOL  100
   65 CONTINUE                                                                  IWSOL  101
      UWN = 1./(1./(UWN+.00001)+.68)                                            IWSOL  102
      IF (IRSCH.EQ.0.OR.<MWIBUF>.EQ.0) GO TO 66                                 IWSOL  103
C              ZERO INT  WIN HOURLY REP VARIABLES                               IWSOL  104
      IPTR = <MWIBUF> - 1                                                       IWSOL  105
      DO 67 I = 2,23                                                            IWSOL  106
   67 AA(IPTR+I) = 0.                                                           IWSOL  107
      AA(IPTR+1) = UWN                                                          IWSOL  108
   66 CONTINUE                                                                  IWSOL  109
      <IWNSUA> = <IWNSUA> + <WIAREA>*<GMULT>*UWN                                IWSOL  110
   60 MWI = MWI + MWNLEN                                                        IWSOL  111
   50 CONTINUE                                                                  IWSOL  112
C                                                                               IWSOL  113
C           SKIP IF SUN IS DOWN                                                 IWSOL  114
      IF (ISUNUP.EQ.0) GO TO 1000                                               IWSOL  115
C           SKIP IF NOT A SUNSPACE                                              IWSOL  116
      IF (<SUNSPACE>.NE.1) GO TO 1000                                           IWSOL  117
C                                                                               IWSOL  118
C            ----------------------                                             IWSOL  119
C            DIRECT SOLAR RADIATION                                             IWSOL  120
C            ----------------------                                             IWSOL  121
C                                                                               IWSOL  122
      NIW1 = <NINTS>                                                            IWSOL  123
      IF (NIW1.EQ.0) GO TO 1000                                                 IWSOL  124
C                                                                               IWSOL  125
C            ---INTERIOR WALL LOOP---                                           IWSOL  126
C                                                                               IWSOL  127
      DO 100 IW1 = 1,NIW1                                                       IWSOL  128
      MI = IA(<MZINT> + IW1 - 1)                                                IWSOL  129
C            SKIP THIS INT WALL IF NOT A COMMON WALL BET SUNSP AND REG SP       IWSOL  130
      IF (<IWSSPID>.NE.1) GO TO 100                                             IWSOL  131
C             INITIALIZE TRANSMITTED AND ABSORBED SOLAR RADIATION               IWSOL  132
      <SOLTRNIW> = 0.                                                           IWSOL  133
      <SOLABSIW> = 0.                                                           IWSOL  134
C            GET SOLAR ABSORPTANCE OF SUNSP SIDE OF WALL                        IWSOL  135
      ABS = <IW-INS-SOL-ABS1>                                                   IWSOL  136
      IF (MZ.NE.<MZIN>) ABS = <IW-INS-SOL-ABS2>                                 IWSOL  137
C              GET MULTIPLIER OF SPACE ON OTHER SIDE OF THIS INT WALL           IWSOL  138
      MZSAV = MZ                                                                IWSOL  139
      MZ = <MZIN>                                                               IWSOL  140
      IF (MZSAV.EQ.<MZIN>) MZ = <MZNEXTTO>                                      IWSOL  141
      ZMNEXT = <ZMULT>                                                          IWSOL  142
      MZ = MZSAV                                                                IWSOL  143
C                                                                               IWSOL  144
C            LOOP OVER THE EXT WINS IN THE SUNSP ADJACENT TO THIS INT WALL      IWSOL  145
C                                                                               IWSOL  146
      NSTF1 = <NIWLSTF>                                                         IWSOL  147
      IF (NSTF1.EQ.0) GO TO 150                                                 IWSOL  148
C            GET PTR TO BEGINNING OF SOL TRANSFER FACTORS FOR THIS INT WALL     IWSOL  149
      MPSTF = <MIWLSTF>                                                         IWSOL  150
C                                                                               IWSOL  151
C            ---EXTERIOR WINDOW LOOP---                                         IWSOL  152
C                                                                               IWSOL  153
      DO 200 ISTF1 =1,NSTF1                                                     IWSOL  154
C            PTR TO EXT WIN ASSOCIATED WITH THIS SET OF STF                     IWSOL  155
      MWI = IA(MPSTF)                                                           IWSOL  156
      MR = <MWIPRP>                                                             IWSOL  157
C            SKIP IF THIS EXT WIN HAS A CLOSED SHADING DEVICE                   IWSOL  158
      IF((<SHADING-FLAG>.GE.2) .OR. (<DIFFUSING-GLASS>.EQ.1)) GO TO 200         -044d5 859
C            FIND DIR RADIATION FROM THIS EXT WIN WHICH IS INCIDENT ON          IWSOL  160
C            THE OPAQUE PART OF THE SUNSP SIDE OF THIS INT WALL                 IWSOL  161
      TEXWIN = <TDIR>*<GSHACO-SEL>                                              VISBL 1020
      IF(<IBLDF>.GE.0) TEXWIN = <TSDIRDIR>                                      VISBL 1021
      DIRINC = RDNCC*TEXWIN*AA(MPSTF+IHR+1)*<IWARNET>*<GMULT>                   VISBL 1022
C              INITIALIZE TOTAL SOLAR ON INT WINDOW                             VISBL 1023
      DSFTOT = 0.                                                               VISBL 1024
      <EICWDRWN> = <EICWDRWN> + DIRINC*ZMNEXT                                   IWSOL  164
C            DIRECT SOL RAD ABSORBED BY OPAQUE PART OF WALL (BTUH)              IWSOL  165
      ABSIW = DIRINC * ABS                                                      IWSOL  166
C            INCREMENT SOL RAD ABSORBED BY THIS WALL AND                        IWSOL  167
C            BY ALL COMMON WALLS                                                IWSOL  168
      <SOLABSIW> = <SOLABSIW> + ABSIW                                           IWSOL  169
      QIWSU1 = QIWSU1 + ABSIW*ZMNEXT                                            IWSOL  170
C            GET DIRECT SOL RAD REFLECTED BY WALL (BTUH)                        IWSOL  171
      REFIW = DIRINC * (1.-ABS)                                                 IWSOL  172
      <ERCWDRWN> = <ERCWDRWN> + REFIW*ZMNEXT                                    IWSOL  173
      IF(IREPRT(1,35).NE.0)                                                     IREPRT 102
     1 WRITE(IOUTPT,299)                                                        IWSOL  175
     2 IW1,MI,NSTF1,MPSTF,ISTF1,MWI,                                            IWSOL  176
     3 ABS,RDNCC,<TDIR>,<GSHACO-SEL>,<IWARNET>,<GMULT>,                         IWSOL  177
     4 DIRINC,<EICWDRWN>,ABSIW,<SOLABSIW>,QIWSU1,REFIW,                         IWSOL  178
     5 <ERCWDRWN>                                                               IWSOL  179
  299 FORMAT                                                                    IWSOL  180
     1 (48H IWSOL,OP,DIR--IW1,MI,NSTF1,MPSTF,ISTF1,MWI     ,6I10/               IWSOL  181
     3  48H ABS, RDNCC,TDIR,GSHACO,IWARNET,GMULT           ,6F10.2/             IWSOL  182
     4  48H DIRINC,EICWDRWN,ABSIW,SOLABSIW,QIWSU1,REFIW    ,6F10.2/             IWSOL  183
     5  48H ERCWDRWN                                       ,F10.2)              IWSOL  184
  200 MPSTF = MPSTF + MSTLEN                                                    IWSOL  185
  150 CONTINUE                                                                  IWSOL  186
C                                                                               IWSOL  187
      NIWN1 = <NIWIN>                                                           IWSOL  188
      IF (NIWN1.EQ.0) GO TO 100                                                 IWSOL  189
      MWI = <MIWIN>                                                             IWSOL  190
C                                                                               IWSOL  191
C            ---INT WINDOW LOOP---                                              IWSOL  192
C                                                                               IWSOL  193
      DO 300 IWN1 = 1,NIWN1                                                     IWSOL  194
C            GET SHADING MULTIPLIER FOR THIS INT WIN                            IWSOL  195
      SHIW = 1.                                                                 IWSOL  196
      IF (<KGCURT>.EQ.0) GO TO 310                                              IWSOL  197
      MS = <@KGCURT> + ISCHR                                                    IWSOL  198
      SHIW = AA(MS)                                                             IWSOL  199
  310 CONTINUE                                                                  IWSOL  200
      AIWN = <WIAREA> * <GMULT> * ZMNEXT                                        IWSOL  201
C              COS OF ANGLE BETWEEN SUN AND INT WINDOW                          IWSOL  202
      IVEC = 1                                                                  IWSOL  203
      IF (<MZIN>.EQ.MZ) IVEC = -1                                               IWSOL  204
      CALL DCANG(IVEC,<IWAZM>,<IWTLT>,COSBIW)                                   IWSOL  205
C              EFFECTIVE TRANSMITTANCE                                          IWSOL  206
      CALL IWINET(COSBIW)                                                       IWSOL  207
      TEFDR = <TEFIWNDR>                                                        IWSOL  208
      TEFDF = <TEFIWNDF>                                                        IWSOL  209
      TDIRIW = <TDIR>                                                           IWSOL  210
C              SET INT WIN SHADING-FLAG (0=NO SHADE, 1=SHADE ASSIGNED           IWSOL  211
C              AND OPEN, 2=SHADE ASSIGNED AND CLOSED DUE TO SOLAR GAIN          IWSOL  212
C              OR OUTSIDE DRYBULB TEST, 3=SHADE ASSIGNED AND CLOSED,            IWSOL  213
C              NO SOLAR GAIN OR OUTSIDE DRYBULB TEST REQUESTED)                 IWSOL  214
      <SHADING-FLAG> = 3                                                        IWSOL  215
      IF (<KGCURT>.EQ.0) <SHADING-FLAG> = 0                                     IWSOL  216
C              OUTSIDE DRYBULB TEST                                             IWSOL  217
      IF (<KGCON>.EQ.0.OR.<KGCURT>.EQ.0.OR.<CONDUCT-TMIN-SCH>.EQ.0)             IWSOL  218
     .   GO TO 382                                                              IWSOL  219
      <SHADING-FLAG> = 1                                                        IWSOL  220
      IF (DBT.LE.AA(<@CONDUCT-TMIN-SCH>+ISCHR)) <SHADING-FLAG> = 2              IWSOL  221
  382 CONTINUE                                                                  IWSOL  222
C              SOLAR GAIN TEST                                                  IWSOL  223
      SOLGMX = 0.                                                               IWSOL  224
      IF (<MAX-SOLAR-SCH>.EQ.0) GO TO 384                                       IWSOL  225
      MS = <@MAX-SOLAR-SCH> + ISCHR                                             IWSOL  226
      SOLGMX = AA(MS)                                                           IWSOL  227
  384 CONTINUE                                                                  IWSOL  228
      IF (ISUNUP.EQ.0.OR.<KGCURT>.EQ.0.OR.<MAX-SOLAR-SCH>.EQ.0.OR.              IWSOL  229
     .    <SHADING-FLAG>.EQ.0) GO TO 380                                        IWSOL  230
C              SET SHADE TO OPEN                                                IWSOL  231
      <SHADING-FLAG> = 1                                                        IWSOL  232
C              INITIALIZE TRANSMITTED DIRECT SOLAR GAIN THRU INT WINDOW         IWSOL  233
      QTRIWT = 0.                                                               IWSOL  234
C              LOOP OVER EXTERIOR WINDOWS                                       IWSOL  235
      NSTF1 = <NIWNSTF>                                                         IWSOL  236
      IF (NSTF1.EQ.0) GO TO 370                                                 IWSOL  237
      MWISAV = MWI                                                              IWSOL  238
      MPSTF = <MIWNSTF>                                                         IWSOL  239
      DO 350 ISTF1 = 1,NSTF1                                                    IWSOL  240
C              PTR TO EXT WINDOW                                                IWSOL  241
      MWI = IA(MPSTF)                                                           IWSOL  242
      MR = <MWIPRP>                                                             IWSOL  243
C              NO DIRECT RADIATION IF EXT WINDOW IS SHADED                      IWSOL  244
      IF((<SHADING-FLAG>.GE.2) .OR. (<DIFFUSING-GLASS>.EQ.1)) GO TO 350         -044d5 860
C              DIR RAD ON INT WIN (PER SF) FROM THIS EXT WIN                    IWSOL  246
      TEXWIN = <TDIR>*<GSHACO-SEL>                                              VISBL 1025
      IF(<IBLDF>.GE.0) TEXWIN = <TSDIRDIR>                                      VISBL 1026
      DIRSF = RDNCC*TEXWIN*AA(MPSTF+1+IHR)*<GMULT>                              VISBL 1027
      DSFTOT = DSFTOT + DIRSF                                                   VISBL 1028
C            FIND INTER-REFLECTED IRRADIANCE IN SUNSP DUE TO DIRECT             VISBL 1029
C            RADIATION TRANSMITTED BY THIS EXT WIN                              VISBL 1030
      DRIRFL = 0.                                                               VISBL 1031
      IF (<SHADING-FLAG>.LE.1.OR.<IBLDF>.GE.0)                                  VISBL 1032
     1 DRIRFL = (<ERCWDRWN> + (<ESOLTRDRWN>-<EICWDRWN>)*(1.-<ABSFLR>))          VISBL 1033
     2         / <SABSARZ>                                                      VISBL 1034
C            INTER-REFLECTED IRRADIANCE IN SUNSP DUE TO DIFFUSE                 VISBL 1035
C            RADIATION TRANSMITTED BY THIS EXT WIN                              VISBL 1036
C            PTR TO EXT WALL CONTAINING THIS EXT WIN                            VISBL 1037
      MX = IA(MPSTF+1)                                                          VISBL 1038
C            FIND AREA OF SUNSP EXCL AREA OF WALL CONTAINING EXT WIN            VISBL 1039
      AMEW = <ARZ> - <XGSARE>*<XSMULT>                                          VISBL 1040
      DFIRFL = (<ESOLTRDFWN>/(AMEW+0.0001)) *                                   VISBL 1041
     .         (1.+AMEW-<SABSARZ>+<SABSARW>*<XSMULT>)/<SABSARZ>                 VISBL 1042
      DSFTOT = DSFTOT + DRIRFL + DFIRFL                                         VISBL 1043
  350 MPSTF = MPSTF + MSTLEN                                                    IWSOL  249
      MWI = MWISAV                                                              IWSOL  250
  370 CONTINUE                                                                  IWSOL  251
C              CLOSE SHADE ON THIS INT WIN IF DSFTOT ABOVE THRESHOLD            VISBL 1044
      IF (DSFTOT.GT.SOLGMX) <SHADING-FLAG> = 2                                  VISBL 1045
      IF (QTRIWT.GT.SOLGMX) <SHADING-FLAG> = 2                                  IWSOL  253
      IF (<SUN-CTRL-PROB>.EQ.1.) GO TO 380                                      IWSOL  254
      CALL DRAND (XRAN)                                                         IWSOL  255
C              OPEN SHADE IF PROBABILITY TEST FAILS                             IWSOL  256
      IF (XRAN.GT.<SUN-CTRL-PROB>) <SHADING-FLAG> = 1                           IWSOL  257
  380 CONTINUE                                                                  IWSOL  258
      IF (<SHADING-FLAG>.LT.2) SHIW = 1.0                                       IWSOL  259
C              FILL SOME HOURLY REPORT VARIABLES                                IWSOL  260
      IF (IRSCH.EQ.0.OR.<MWIBUF>.EQ.0) GO TO 385                                IWSOL  261
      IPTR = <MWIBUF> - 1                                                       IWSOL  262
      AA(IPTR+19) = SHIW                                                        IWSOL  263
      AA(IPTR+20) = SOLGMX                                                      IWSOL  264
      IA(IPTR+23) = <SHADING-FLAG>                                              IWSOL  265
  385 CONTINUE                                                                  IWSOL  266
C            LOOP AGAIN OVER STF BLOCKS TO GET INT WIN SOLAR GAIN               IWSOL  267
C            CONTRIBUTION FROM EACH EXTERIOR WINDOW IN THE SUNSPACE             IWSOL  268
      NSTF1 = <NIWNSTF>                                                         IWSOL  269
      IF (NSTF1.EQ.0) GO TO 300                                                 IWSOL  270
      MWISAV = MWI                                                              IWSOL  271
C              INITIALIZE TOTAL DIRECT RAD INCIDENT ON INT WIN                  IWSOL  272
      QDIR = 0.                                                                 IWSOL  273
C              INITIALIZE TRANSMITTED DIRECT SOLAR GAIN THRU                    IWSOL  274
C              INTERIOR WINDOW                                                  IWSOL  275
      QTRIWT = 0.                                                               IWSOL  276
C            PTR TO BEGINNING OF STF BLOCKS FOR THIS WINDOW                     IWSOL  277
      MPSTF = <MIWNSTF>                                                         IWSOL  278
C                                                                               IWSOL  279
C            ---EXT WINDOW LOOP---                                              IWSOL  280
C                                                                               IWSOL  281
      DO 400 ISTF1 = 1,NSTF1                                                    IWSOL  282
C            PTR TO EXT WIN                                                     IWSOL  283
      MWI = IA(MPSTF)                                                           IWSOL  284
      MR = <MWIPRP>                                                             IWSOL  285
C            SKIP IF THIS EXT WIN HAS A CLOSED SHADE                            IWSOL  286
      IF((<SHADING-FLAG>.GE.2) .OR. (<DIFFUSING-GLASS>.EQ.1)) GO TO 400         -044d5 861
C            FIND DIR RAD FROM THIS EXT WIN WHICH IS INCIDENT ON THE INT WIN    IWSOL  288
      TEXWIN = <TDIR>*<GSHACO-SEL>                                              VISBL 1046
      IF(<IBLDF>.GE.0) TEXWIN = <TSDIRDIR>                                      VISBL 1047
      QDIREW = RDNCC * TEXWIN * AA(MPSTF+1+IHR) * <GMULT>                       VISBL 1048
      DIRINC = QDIREW * AIWN                                                    IWSOL  290
      QDIR = QDIR + QDIREW                                                      IWSOL  291
C            INCREMENT DIR RAD FROM THIS EXT WIN INCID ON COMMON WALLS          IWSOL  292
      <EICWDRWN> = <EICWDRWN> + DIRINC                                          IWSOL  293
C            FIND DIR SOL FROM EXT WIN TRANSMITTED BY INT WIN                   IWSOL  294
      QTRIW = DIRINC * TEFDR * SHIW                                             IWSOL  295
      QIWSU2 = QIWSU2 + QTRIW                                                   IWSOL  296
      <SOLTRNIW> = <SOLTRNIW> + QTRIW                                           IWSOL  297
      QTRIWT = QTRIWT + QTRIW                                                   IWSOL  298
C            FIND DIR SOL FROM EXT WIN REFLECTED BY INT WIN                     IWSOL  299
      REFIW = DIRINC * (1. - TEFDR*SHIW)                                        IWSOL  300
C            INCREMENT DIR RAD FROM THIS EXT WIN REFL BY COMMON WALLS           IWSOL  301
      <ERCWDRWN> = <ERCWDRWN> + REFIW                                           IWSOL  302
      IF (IREPRT(1,35).NE.0)                                                    IREPRT 103
     1 WRITE(IOUTPT,399) ISTF1,NSTF1,MPSTF,MWI,MWISAV,IWN1,IHR,RDNCC,           IWSOL  304
     2 <TDIR>,<GSHACO-SEL>,AA(MPSTF+1+IHR),                                     IWSOL  305
     2 <GMULT>,QDIREW,AIWN,<EICWDRWN>,                                          IWSOL  306
     3 DIRINC,TEFDR,QTRIW,QDIR,<SOLTRNIW>,REFIW,<ERCWDRWN>,QIWSU2,QSOL          IWSOL  307
     4,QTRIWT                                                                   IWSOL  308
  399 FORMAT(48H IWSOL -- ISTF1,NSTF1,MPSTF,MWI,MWISAV,IWN1,IHR ,7I10/          IWSOL  309
     1   48H RDNCC,TDIR,GSHACO,AA(MPSTF+1+IHR),GMULT,QDIREW ,6F10.4/            IWSOL  310
     2   48H AIWN,EICWDRWN,DIRINC,TEFDR,QTRIW,QDIR          ,6F10.4/            IWSOL  311
     3   48H SOLTRNIW,REFIW,ERCWDRWN,QIWSU2,QSOL,QTRIWT     ,6F10.4/)           IWSOL  312
  400 MPSTF = MPSTF + MSTLEN                                                    IWSOL  313
      MWI = MWISAV                                                              IWSOL  314
      IF ((IRSCH .EQ. 0) .OR. (<MWIBUF> .EQ. 0)) GO TO 300                      IWSOL  315
      IPTR = <MWIBUF> - 1                                                       IWSOL  316
      AA(IPTR+11) = QDIR                                                        IWSOL  317
      AA(IPTR+15) = QTRIWT                                                      IWSOL  318
  300 MWI = MWI + MWNLEN                                                        IWSOL  319
  100 CONTINUE                                                                  IWSOL  320
C                                                                               IWSOL  321
C               -----------------------                                         IWSOL  322
C            ---DIFFUSE SOLAR RADIATION---                                      IWSOL  323
C               -----------------------                                         IWSOL  324
C                                                                               IWSOL  325
C            ---INTERIOR WALL LOOP---                                           IWSOL  326
C                                                                               IWSOL  327
      DO 1100 IW1 = 1,NIW1                                                      IWSOL  328
      MI = IA(<MZINT>+IW1-1)                                                    IWSOL  329
C            SKIP IF NOT A COMMON WALL                                          IWSOL  330
      IF (<IWSSPID>.NE.1) GO TO 1100                                            IWSOL  331
C             GET SOL ABSORPTANCE ON SUNSP SIDE OF WALL                         IWSOL  332
      ABS = <IW-INS-SOL-ABS1>                                                   IWSOL  333
      IF (MZ.NE.<MZIN>) ABS = <IW-INS-SOL-ABS2>                                 IWSOL  334
C                                                                               IWSOL  335
C            LOOP OVER EXT WINS IN SUNSP                                        IWSOL  336
C                                                                               IWSOL  337
      NSTF1 = <NIWLSTF>                                                         IWSOL  338
      IF (NSTF1.EQ.0) GO TO 1150                                                IWSOL  339
      MPSTF = <MIWLSTF>                                                         IWSOL  340
C                                                                               IWSOL  341
C            ---EXT WINDOW LOOP---                                              IWSOL  342
C                                                                               IWSOL  343
      DO 1200 ISTF1 = 1,NSTF1                                                   IWSOL  344
      MWI = IA(MPSTF)                                                           IWSOL  345
C            FIND INTER-REFLECTED IRRADIANCE IN SUNSP DUE TO DIRECT             IWSOL  346
C            RADIATION TRANSMITTED BY THIS EXT WIN                              IWSOL  347
      DRIRFL = 0.                                                               IWSOL  348
      IF(((<SHADING-FLAG>.LE.1).OR.(<IBLDF>.GE.0))                              -044d5 862
     $    .AND. (<DIFFUSING-GLASS>.EQ.0))                                       -044d5 863
     .DRIRFL = ( <ERCWDRWN> + (<ESOLTRDRWN>-<EICWDRWN>)*(1.-<ABSFLR>) )         IWSOL  350
     .         / <SABSARZ>                                                      IWSOL  351
C            FIND INTER-REFLECTED IRRADIANCE IN SUNSP DUE TO DIFFUSE            IWSOL  352
C            RADIATION TRANSMITTED BY THIS EXT WIN                              IWSOL  353
C            PTR TO EXT WALL CONTAINING THIS EXT WIN                            IWSOL  354
      MX = IA(MPSTF+1)                                                          IWSOL  355
C            FIND AREA OF SUNSP EXCL AREA OF WALL CONTAINING EXT WIN            IWSOL  356
      AMEW = <ARZ> - <XGSARE>*<XSMULT>                                          IWSOL  357
      DFIRFL = (<ESOLTRDFWN>/(AMEW+0.0001)) *                                   IWSOL  358
     .         (1. + (AMEW-<SABSARZ>+<SABSARW>*<XSMULT>)/<SABSARZ>)             IWSOL  359
C            INTER-REFL RAD FROM THIS EXT WIN ABSORBED BY INT WALL              IWSOL  360
      ABSIW = (DRIRFL + DFIRFL) * <IWARNET> * ABS                               IWSOL  361
C            INCREMENT TOT RAD ABSORBED  BY THIS INT WALL                       IWSOL  362
      <SOLABSIW> = <SOLABSIW> + ABSIW                                           IWSOL  363
C            INCREMENT TOT RAD ABSORBED BY COMMON WALLS IN SUNSPACE             IWSOL  364
      QIWSU1 = QIWSU1 + ABSIW                                                   IWSOL  365
      IF(IREPRT(1,35).NE.0)                                                     IREPRT 104
     1 WRITE(IOUTPT,1299)                                                       IWSOL  367
     2 IW1,MI,NSTF1,MPSTF,ISTF1,MWI,MX,                                         IWSOL  368
     3 ABS,DRIRFL,<EICWDRWN>,<ERCWDRWN>,<ESOLTRDRWN>,<ABSFLR>,                  IWSOL  369
     4 <SABSARZ>,<ARZ>,<XGSARE>,AMEW,DFIRFL,<ESOLTRDFWN>,                       IWSOL  370
     5 <SABSARW>,<XSMULT>,<IWARNET>,ABSIW,<SOLABSIW>,QIWSU1,                    IWSOL  371
     6 QIWSU2,QSOL                                                              IWSOL  372
 1299 FORMAT                                                                    IWSOL  373
     1 (48H IWSOL,OP,DIF--IW1,MI,NSTF1,MPSTF,ISTF1,MWI,MX  ,7I10/               IWSOL  374
     2  48H ABS,DRIRFL,EICWDRWN,ERCWDRWN,ESOLTRDRWN,ABSFLR ,6F10.2/             IWSOL  375
     3  48H SABSARZ,ARZ,XGSARE,AMEW,DFIRFL,ESOLTRDFWN      ,6F10.2/             IWSOL  376
     4  48H SABSARW,XSMULT,IWARNET,ABSIW,SOLABSIW,QIWSU1   ,6F10.2/             IWSOL  377
     5  48H QIWSU2,QSOL                                    ,2F10.2)             IWSOL  378
 1200 MPSTF = MPSTF + MSTLEN                                                    IWSOL  379
 1150 CONTINUE                                                                  IWSOL  380
C                                                                               IWSOL  381
      NIWN1 = <NIWIN>                                                           IWSOL  382
      IF (NIWN1.EQ.0) GO TO 1100                                                IWSOL  383
      MWI = <MIWIN>                                                             IWSOL  384
C                                                                               IWSOL  385
C            ----INTERIOR WINDOW LOOP----                                       IWSOL  386
C                                                                               IWSOL  387
      DO 1300 IWN1 = 1,NIWN1                                                    IWSOL  388
C            SHADING MULTIPLIER                                                 IWSOL  389
      SHIW = 1.                                                                 IWSOL  390
      IF (<KGCURT>.EQ.0.OR.<SHADING-FLAG>.LT.2) GO TO 1310                      IWSOL  391
      MS = <@KGCURT> + ISCHR                                                    IWSOL  392
      SHIW = AA(MS)                                                             IWSOL  393
 1310 CONTINUE                                                                  IWSOL  394
      AIWN = <WIAREA> * <GMULT>                                                 IWSOL  395
      TEFDF = <TEFIWNDF>                                                        IWSOL  396
      FFIWN = <WISKYFF>                                                         IWSOL  397
C                                                                               IWSOL  398
C            LOOP OVER EXT WINS IN SUNSP                                        IWSOL  399
C                                                                               IWSOL  400
      NSTF1 = <NIWNSTF>                                                         IWSOL  401
      IF (NSTF1.EQ.0) GO TO 1300                                                IWSOL  402
      MWISAV = MWI                                                              IWSOL  403
C             INITIALIZE TOTAL DIFFUSE RAD INCIDENT ON INT WIN                  IWSOL  404
      QDIF = 0.                                                                 IWSOL  405
C              INITIALIZE TRANSMITTED DIFFUSE SOLAR GAIN THRU                   IWSOL  406
C              INT WINDOW                                                       IWSOL  407
      QTRIWT = 0.                                                               IWSOL  408
      MPSTF = <MIWNSTF>                                                         IWSOL  409
C                                                                               IWSOL  410
C            ---EXT WIN LOOP---                                                 IWSOL  411
C                                                                               IWSOL  412
      DO 1400 ISTF1 = 1,NSTF1                                                   IWSOL  413
      MWI = IA(MPSTF)                                                           IWSOL  414
      DRIRFL = 0.                                                               IWSOL  415
      IF(((<SHADING-FLAG>.LE.1).OR.(<IBLDF>.GE.0))                              -044d5 864
     $    .AND. (<DIFFUSING-GLASS>.EQ.0))                                       -044d5 865
     .DRIRFL = ( <ERCWDRWN> + (<ESOLTRDRWN>-<EICWDRWN>)*(1.-<ABSFLR>) )         IWSOL  417
     .          / <SABSARZ>                                                     IWSOL  418
      MX = IA(MPSTF+1)                                                          IWSOL  419
      AMEW = <ARZ> - <XGSARE>*<XSMULT>                                          IWSOL  420
      DFIRFL = ( <ESOLTRDFWN> / (AMEW+0.0001) ) *                               IWSOL  421
     .   (1.+(AMEW-<SABSARZ>+<SABSARW>*<XSMULT>)/<SABSARZ>)                     IWSOL  422
      QTRIW = (DRIRFL + DFIRFL) * TEFDF * SHIW * AIWN * FFIWN                   IWSOL  423
      QDIF = QDIF + (DRIRFL+DFIRFL)*FFIWN                                       IWSOL  424
      QIWSU2 = QIWSU2 + QTRIW                                                   IWSOL  425
      <SOLTRNIW> = <SOLTRNIW> + QTRIW                                           IWSOL  426
      QTRIWT = QTRIWT + QTRIW                                                   IWSOL  427
      IF (IREPRT(1,35).NE.0)                                                    IREPRT 105
     1 WRITE(IOUTPT,1399) ISTF1,NSTF1,MPSTF,MWI,MWISAV,IWN1,IHR,DRIRFL,         IWSOL  429
     2 DFIRFL,AA(MPSTF+1+IHR),<GMULT>,<ABSFLR>,AIWN,<EICWDRWN>,                 IWSOL  430
     3 TEFDF,QTRIWT,QTRIW,QDIF,<SOLTRNIW>,AMEW,<ERCWDRWN>,QIWSU2,               IWSOL  431
     4 QIWSU1,QSOL,<ESOLTRDRWN>,<EICWDRWN>,<SABSARZ>,<SABSARW>                  IWSOL  432
 1399 FORMAT(48H IWSOL -- ISTF1,NSTF1,MPSTF,MWI,MWISAV,IWN1,IHR ,7I10/          IWSOL  433
     1   48H DIRFL,DIFR,AA(MPSTF+1+IHR),GMULT,ABSFLR          ,5F10.4/          IWSOL  434
     2   48H AIWN,EICWDRWN,TEFDF,QTRIWT,QTRIW,QDIF            ,6F10.4/          IWSOL  435
     3   48H SOLTRNIW,AMEW ,ERCWDRWN,QIWSU2,QIWSU1            ,5F10.4/          IWSOL  436
     3   48H QSOL,ESOLTRDRWN,EICW--,SABSARZ,SABSAR            ,5F10.4)          IWSOL  437
 1400 MPSTF = MPSTF + MSTLEN                                                    IWSOL  438
      MWI = MWISAV                                                              IWSOL  439
C              FILL SOME HOURLY REPORT VARIABLES                                IWSOL  440
      IF (IRSCH.EQ.0.OR.<MWIBUF>.EQ.0) GO TO 1450                               IWSOL  441
      IPTR = <MWIBUF> - 1                                                       IWSOL  442
      AA(IPTR+12) = QDIF                                                        IWSOL  443
      AA(IPTR+15) = AA(IPTR+15) + QTRIWT                                        IWSOL  444
 1450 CONTINUE                                                                  IWSOL  445
 1300 MWI = MWI + MWNLEN                                                        IWSOL  446
 1100 CONTINUE                                                                  IWSOL  447
C                                                                               IWSOL  448
C            ADJUST SOLAR GAIN TO SUNSPACE                                      IWSOL  449
C                                                                               IWSOL  450
      QSOL = AMAX1(0.,QSOL-(QIWSU1+QIWSU2))                                     IWSOL  451
 1000 CONTINUE                                                                  IWSOL  452
      RETURN                                                                    IWSOL  453
      END                                                                       IWSOL  454
      SUBROUTINE  IWSTF                                                         IWSTF    2
C                                                                               IWSTF    3
C            CALLED BY DAYCLC FOR EACH HOUR OF THE FIRST DAY OF                 IWSTF    4
C            EACH MONTH.  CALCULATES SOLAR TRANSFER FACTORS (STF)               IWSTF    5
C            BETWEEN EXTERIOR WINDOWS IN A SUNSPACE AND THE INTERIOR            IWSTF    6
C            SURFACES (WINDOWS AND WALLS) WHICH SEPARATE THE SUNSPACE           IWSTF    7
C            FROM ADJACENT REGULAR SPACES.  THE STFS ARE USED LATER             IWSTF    8
C            IN THE HOURLY LOOP (SUBROUTINE IWSOL) TO GET THE DIRECT            IWSTF    9
C            SOLAR GAIN THROUGH SUNSPACE INTERIOR WINDOWS AND THE               IWSTF   10
C            DIRECT SOLAR RADIATION ABSORBED BY THE OPAQUE PORTION OF           IWSTF   11
C            SUNSPACE INTERIOR WALLS.                                           IWSTF   12
C                                                                               IWSTF   13
C            FOR AN EXTERIOR-WINDOW/INTERIOR-SURFACE COMBINATION, THE           IWSTF   14
C            SOLAR TRANSFER FACTOR IS  STF = COSBIW * X, WHERE COSBIW           IWSTF   15
C            = ANGLE OF INCIDENCE OF SUN ON THE INTERIOR SURFACE, AND           IWSTF   16
C            X = FRACTION OF INTERIOR SURFACE (WINDOW OR OPAQUE PART OF         IWSTF   17
C            INTERIOR WALL) WHICH IS ILLUMINATED BY DIRECT RADIATION            IWSTF   18
C            FROM THE EXTERIOR WINDOW.  IN CALCULATING STF, EXTERIOR            IWSTF   19
C            BUILDING SHADES (FINS, OVERHANGS, ETC) ARE ACCOUNTED FOR.          IWSTF   20
C                                                                               IWSTF   21
C            THE SUNLIT AREA OF INTERIOR SURFACES IS OBTAINED BY USING          IWSTF   22
C            THE SHADOW ROUTINES TO PROJECT THE IMAGE OF EACH EXTERIOR          IWSTF   23
C            WINDOW ONTO INTERIOR SURFACES OF THE SUNSPACE.                     IWSTF   24
C                                                                               IWSTF   25
C            IN THE AA ARRAY, EACH SUNSP HAS AN STF BLOCK FOR EVERY             IWSTF   26
C            COMBINATION OF (EXTERIOR WINDOW)/(INTERIOR SURF BETWEEN            IWSTF   27
C            SUNSP AND ADJACENT SPACE).  EACH STF BLOCK HAS THE FORM---         IWSTF   28
C                                                                               IWSTF   29
C               PTR TO EXT WINDOW                                               IWSTF   30
C               PTR TO WALL CONTAINING THE EXT WINDOW                           IWSTF   31
C               STF VALUE, HOUR 1                                               IWSTF   32
C                     .                                                         IWSTF   33
C               STF VALUE, HOUR 24                                              IWSTF   34
C                                                                               IWSTF   35
C            THE STF BLOCKS ARE ORDERED AS FOLLOWS (EWN=EXT WIN,                IWSTF   36
C            IWN=INT WIN, IWL=INT WALL) --                                      IWSTF   37
C                                                                               IWSTF   38
C                 EWN 1 / IWN 1 OF IWL 1                                        IWSTF   39
C                   .                                                           IWSTF   40
C                 EWN <NEXWIN> / IWN 1 OF IWL 1                                 IWSTF   41
C                   .                                                           IWSTF   42
C                   .                                                           IWSTF   43
C                 EWN 1 / IWN <NIWIN> ON IWL 1                                  IWSTF   44
C                   .                                                           IWSTF   45
C                 EWN <NEXWIN> / IWN <NIWIN> ON IWL 1                           IWSTF   46
C                 EWN 1 / OPAQUE PART OF IWL 1                                  IWSTF   47
C                   .                                                           IWSTF   48
C                 EWN <NEXWIN> / OPAQUE PART OF IWL 1                           IWSTF   49
C                                                                               IWSTF   50
C              AND SO ON FOR THE OTHER INT WINS AND INT WALLS                   IWSTF   51
C              BETWEEN THE SUNSP AND ADJACENT SPACE.                            IWSTF   52
C                                                                               IWSTF   53
      COMMON /INTSUN/ IVEC,ISPEW                                                /INTSUN/ 2
      COMMON  /LENS/   MWFLEN, MRLEN, MSHLEN, MWNLEN, MDRLEN, MXLEN,            /LENS/   2
     1                 MULEN, MZLEN, MIWLEN, MFLLEN,                            HRr      5
     2                 LMTB, LLDSOU, MSTLEN, LSTFT, MWLLEN                      BLIND    1
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     BLIND    2
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        FLOOR1   3
      COMMON  /PTRBGN/ ISCB, IWFB, IWPB, ICONSB, IGTB, IWLB, IGEOB,             HRr      6
     1                 ISHADB, IWINB, IDRB, IEWB, IUGB, ISPB, IIWPB,            HRr      7
     2                 IIWB, IFLB, ISPCDB, IOTHB, ILHB, IZQCMB, ISSHDB,         HRr      8
     3                 IOHFIB, IZLSK, IZLSL, ISTFB                              HRr      9
      COMMON  /SHADWF/ ISDINF, LSHSTR, ISHSTB, KMAX                             /SHADWF/ 2
      COMMON  /SIZE/   LENGTH,NVECT,NSCHED,NWF,NWPAR,NCONS,NGT,NWL,NGEO,        BLIND    5
     1                 NGSHAD, NWIN, NDOOR, NEW, NUG, NSP, NIWP, NIW,           /SIZE/   3
     2                 NFL, NDESDY, NBR, NOTH, NITH, NOPSRF,                    HRr     10
     3                 NSURF, NSSHD, NSHTOT                                     GEO1     1
      COMMON  /SUND/   ISUNUP, GUNDOG, HORANG, TDECLN, EQTIME, SOLCON,          /SUND/   2
     1                 ATMEXT, SKYDFF, RAYCOS(3), RDN,                          /SUND/   3
     2                 BSUN, DECLN, CD, SD, FSUNUP                              /SUND/   4
      COMMON /TIME  / IDOY, IDOW, IDSTF, ISCHR, ISCDAY, iDSdates(6),            -044e5r  1
     1                IMO, IDAY, IYR, IHR, CLOCK(10), IDSFLG,                   HOLID1   4
     2                MONDSC(12), MONLEN(12), MONSDA(12), IEODMR                /TIME/   4
      COMMON  /REPORT/ IREPRT(4,37),IPRG,IUNIQV(100),IUNIQS(100),IUNIQL         BIGNAM   1
      COMMON        // AA(75 000 000)                                           -048ar   1
      INTEGER          IA(75 000 000)                                           -048ar   2
      EQUIVALENCE  (IA(1), AA(1))                                               //       4
C                                                                               IWSTF   64
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                         /FILES/  3
     2              , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                    /FILES/  4
     3                IHRREP(3), IHRPAS(2)                                      /FILES/  5
C            ZERO THE SOLAR TRANSFER FACTORS                                    IWSTF   66
      IF (IHR.EQ.1) CALL FILLN (0.,AA(ISTFB),LSTFT)                             IWSTF   67
C            IF SUN DOWN, SKIP CALCULATION                                      IWSTF   68
      IF (ISUNUP.EQ.0) GO TO 2000                                               IWSTF   69
C            SET PTR TO BEGINNING OF STF BLOCKS                                 IWSTF   70
      MST = ISTFB                                                               IWSTF   71
C                                                                               IWSTF   72
C            ----LOOP THROUGH ZONES----                                         IWSTF   73
C                                                                               IWSTF   74
      MZ = ISPB                                                                 IWSTF   75
      DO 1000 IZONE = 1,NSP                                                     IWSTF   76
C            SKIP TO NEXT ZONE IF NOT A SUNSPACE                                IWSTF   77
      IF (<SUNSPACE>.NE.1) GO TO 1000                                           IWSTF   78
C           SKIP IF NO EXT  WINDOWS IN THIS SPACE                               IWSTF   79
      IF (<NEXWIN>.EQ.0) GO TO 1000                                             IWSTF   80
      NEW1 = <NEXTS>                                                            IWSTF   81
      MX = <MZEXT>                                                              IWSTF   82
C            INITIALIZE EXT WIN COUNTER                                         IWSTF   83
      JEXWIN = 0                                                                IWSTF   84
C                                                                               IWSTF   85
C            ----EXTERIOR WALL LOOP----                                         IWSTF   86
C                                                                               IWSTF   87
      DO 900 IEW1 = 1,NEW1                                                      IWSTF   88
      NW1 = <NWIN>                                                              IWSTF   89
      IF (NW1.EQ.0) GO TO 900                                                   IWSTF   90
C            SKIP SPECIAL EXT WALLS (TW, ETC)                                   IWSTF   91
      IF (<IEWTYPE>.GT.2) GO TO 900                                             IWSTF   92
C            COS OF ANGLE BETWEEN SUN AND THIS EXT WALL                         IWSTF   93
      CALL DCANG(1,<XSAZM>,<XSTLT>,COSBEW)                                      IWSTF   94
C              ISUNEW IS 1 IF SUN CAN HIT WALL, 0 OTHERWISE                     IWSTF   95
      ISUNEW = 1                                                                IWSTF   96
      IF (COSBEW.LE.0.02) ISUNEW = 0                                            IWSTF   97
C              SET GEOM PTR FOR USE IN SUBR SHDWS                               IWSTF   98
      MGX = <MXGEOM>                                                            IWSTF   99
      MWI = <MXWIN>                                                             IWSTF  100
C                                                                               IWSTF  101
C            ----EXTERIOR WINDOW LOOP----                                       IWSTF  102
C                                                                               IWSTF  103
      DO 800 IW1 = 1,NW1                                                        IWSTF  104
      HXWIN = <HWI>+0.00001                                                     IWSTF  105
      WXWIN = <WWI>+0.00001                                                     IWSTF  106
C            INCREMENT EXT WINDOW COUNTER                                       IWSTF  107
      JEXWIN = JEXWIN + 1                                                       IWSTF  108
C              SAVE PTR TO  EXT WIN                                             IWSTF  109
      MWIEXT = MWI                                                              IWSTF  110
C            INITIALIZE INTERIOR SURFACE COUNTER                                IWSTF  111
      JIS = 0                                                                   IWSTF  112
      NIW1 = <NINTS>                                                            IWSTF  113
      IF (NIW1.EQ.0) GO TO 1000                                                 IWSTF  114
C                                                                               IWSTF  115
C            ----INTERIOR WALL LOOP----                                         IWSTF  116
C                                                                               IWSTF  117
      DO 700 IWL1 = 1,NIW1                                                      IWSTF  118
      MI = IA(<MZINT> + IWL1 -1)                                                IWSTF  119
C            SKIP TO NEXT INT WALL IF NOT AN INT WALL BET A SUNSPACE            IWSTF  120
C            AND A REGULAR SPACE (I.E., IF NOT A SUNSPACE COMMON WALL)          IWSTF  121
      IF (<IWSSPID>.NE.1) GO TO 700                                             IWSTF  122
C            COS OF ANGLE BET SUN AND THIS INT WALL                             IWSTF  123
      IVEC = 1                                                                  IWSTF  124
      IF (<MZIN>.EQ.MZ) IVEC = -1                                               IWSTF  125
      CALL DCANG (IVEC,<IWAZM>,<IWTLT>,COSBIW)                                  IWSTF  126
C              ISUNIW IS 1 IF SUN CAN HIT WALL, 0 OTHERWISE                     IWSTF  127
      ISUNIW = 1                                                                IWSTF  128
      IF (COSBIW.LE.0.02) ISUNIW = 0                                            IWSTF  129
C            INITIALIZE TOTAL SUNLIT AREA OF INT WINS IN THIS WALL              IWSTF  130
      ASNWNT = 0.                                                               IWSTF  131
      NIWN1 = <NIWIN>                                                           IWSTF  132
      IF (NIWN1.EQ.0) GO TO 650                                                 IWSTF  133
      MWI = <MIWIN>                                                             IWSTF  134
C                                                                               IWSTF  135
C            ----INTERIOR WINDOW LOOP----                                       IWSTF  136
C                                                                               IWSTF  137
      DO 600 IWN1 = 1,NIWN1                                                     IWSTF  138
      JIS = JIS + 1                                                             IWSTF  139
      MG = <MWIGEOM>                                                            IWSTF  140
C              SAVE PTR TO INT WIN                                              IWSTF  141
      MWIINT = MWI                                                              IWSTF  142
C            NUMBER OF SHADING DIVISIONS FOR THIS WINDOW                        IWSTF  143
      NDIV1=10*MAX1(<HWI>/HXWIN,<HWI>/WXWIN,<WWI>/HXWIN,<WWI>/WXWIN)            IWSTF  144
      NDIV=MAX0(20,MIN0(1000,NDIV1))                                            IWSTF  145
      IF(IREPRT(1,35).NE.0) WRITE (IOUTPT,9143) HXWIN,WXWIN,<HWI>,<WWI>,        IREPRT 106
     1 NDIV1,NDIV                                                               IWSTF  147
 9143 FORMAT(/,29H HX,WX,HWIN,WWIN,NDIV1,NDIV  ,4F10.2,2I10/)                   IWSTF  148
C      NDIV=<NWIXDIV>                                                           IWSTF  149
C            FIND SUNLIT AREA OF INT WIN DUE TO THIS EXT WINDOW                 IWSTF  150
      MWI = MWIEXT                                                              IWSTF  151
      ASNWN = 0.                                                                IWSTF  152
      IF (ISUNEW.EQ.1.AND.ISUNIW.EQ.1) CALL IWSHAD(ASNWN,NDIV)                  IWSTF  153
C              SET WINDOW PTR TO INT WIN                                        IWSTF  154
      MWI = MWIINT                                                              IWSTF  155
C                                                                               IWSTF  156
C            CALC THE SOLAR TRANSFER FACTOR (STIWN).  THE SOLAR GAIN            IWSTF  157
C            THRU THIS INT WIN DUE TO DIRECT SOL RAD FROM THE EXT WIN IS        IWSTF  158
C            IDN * TE * SC * STIWN * A * TI, WHERE                              IWSTF  159
C                                                                               IWSTF  160
C               IDN   = DIR NORM SOL INCIDENT ON BLDG (BTUH/SF)                 IWSTF  161
C               TE    = DIR TO DIR TRANSMITTANCE OF EXT WIN                     IWSTF  162
C               SC    = SHADING COEFFICIENT OF EXT WIN                          IWSTF  163
C               STIWN = (FRACTION OF INT WIN ILLUMINATED BY EXT WIN) *          IWSTF  164
C                       (COS INC ANGLE ON INT WIN)                              IWSTF  165
C               A     = AREA OF INT WIN (SF)                                    IWSTF  166
C               TI    = EFFECTIVE TRANSMITTANCE OF INT WIN =                    IWSTF  167
C                       (DIR TRANSMITTANCE OF INT-WIN GLASS + FRAC OF           IWSTF  168
C                       ABSORBED RAD FLOWING TO ROOM ADJ TO SUNSP) *            IWSTF  169
C                       (INT WIN SHADING COEFF)                                 IWSTF  170
C                                                                               IWSTF  171
      STIWN = COSBIW * ASNWN / <WIAREA>                                         IWSTF  172
C                                                                               IWSTF  173
C            INCREMENT TOTAL SUNLIT AREA OF INT WINS ON THIS INT WALL           IWSTF  174
      ASNWNT = ASNWNT + ASNWN                                                   IWSTF  175
C            ENTER DATA INTO AA ARRAY                                           IWSTF  176
      JST = MST + (JIS-1)*MSTLEN*<NEXWIN> + (JEXWIN-1)*MSTLEN                   IWSTF  177
      IA(JST) = MWIEXT                                                          IWSTF  178
      IA(JST+1) = MX                                                            IWSTF  179
      AA(JST+IHR+1) = STIWN                                                     IWSTF  180
      IF (IREPRT(1,35).NE.0)                                                    IREPRT 107
     1 WRITE(IOUTPT,599) IW1,IWL1,IWN1,MWIEXT,MWIINT,MWI,JIS,MG,NDIV,           IWSTF  182
     2  JST,MST,MSTLEN,<NEXWIN>,JEXWIN,MX,IHR,<WIAREA>,ASNWN,COSBIW,            IWSTF  183
     3  ASNWNT,STIWN                                                            IWSTF  184
  599 FORMAT( 48H IWSTF -- IW1,IWL1,IWN1,MWIEXT,MWIINT,MWI       ,6I10/         IWSTF  185
     1    48H JIS,MG,NDIV,JST,MST,MSTLEN                     ,6I10/             IWSTF  186
     2    48H NEXWIN,JEXWIN,MX,IHR                           ,4I10/             IWSTF  187
     3    48H WIAREA,ASNWN,COSBIW,ASNWNT,STIWN               ,5F10.3/)          IWSTF  188
  600 MWI = MWI + MWNLEN                                                        IWSTF  189
  650 CONTINUE                                                                  IWSTF  190
C                                                                               IWSTF  191
C            GET SOLAR TRANSFER FACTOR FOR OPAQUE PART OF INT WALL              IWSTF  192
      JIS = JIS + 1                                                             IWSTF  193
      MWI = MWIEXT                                                              IWSTF  194
      MG = <MIWGEOM>                                                            IWSTF  195
      IF(<MIWSURF>.EQ.0) THEN                                                   IWSTF  196
      HW1=SQRT( (AA(MG+1)-AA(MG+4))**2 + (AA(MG+2)-AA(MG+5))**2 +               IWSTF  197
     1         (AA(MG+3)-AA(MG+6))**2 )                                         IWSTF  198
      WW1=SQRT( (AA(MG+4)-AA(MG+7))**2 + (AA(MG+5)-AA(MG+8))**2 +               IWSTF  199
     1         (AA(MG+6)-AA(MG+9))**2 )                                         IWSTF  200
      ELSE                                                                      IWSTF  201
        HW1 = SQRT(<IWAR>)                                                      IWSTF  202
        WW1 = HW1                                                               IWSTF  203
      ENDIF                                                                     IWSTF  204
      NDIV2=10*MAX1(HW1/HXWIN,HW1/WXWIN,WW1/HXWIN,WW1/WXWIN)                    IWSTF  205
      NDIV=MAX0(20,MIN0(1000,NDIV2))                                            IWSTF  206
      IF(IREPRT(1,35).NE.0) WRITE(IOUTPT,9182) HXWIN,WXWIN,HW1,WW1,             IREPRT 108
     1 NDIV2,NDIV,(AA(MG+J),J=1,12)                                             IWSTF  208
 9182 FORMAT(/,29H HX,WX,HWAL,WWAL,NDIV2,NDIV  ,4F10.2,2I10/,                   IWSTF  209
     1  12F10.2/)                                                               IWSTF  210
C              GET SUNLIT AREA OF INT WALL ASSUMING IT HAS NO WINDOWS           IWSTF  211
      ASNWL = 0.                                                                IWSTF  212
      IF (ISUNEW.EQ.1.AND.ISUNIW.EQ.1) CALL IWSHAD(ASNWL,NDIV)                  IWSTF  213
C            SUBTRACT SUNLIT WIN AREA TO GET SUNLIT AREA                        IWSTF  214
C            OF OPAQUE PART OF INTERIOR WALL                                    IWSTF  215
      ASNWLO = AMAX1(0.,ASNWL-ASNWNT)                                           IWSTF  216
      STIWL = COSBIW * ASNWLO / <IWARNET>                                       IWSTF  217
C                                                                               IWSTF  218
C            ENTER INTO AA ARRAY                                                IWSTF  219
C                                                                               IWSTF  220
      JST = MST + (JIS-1)*MSTLEN*<NEXWIN> + (JEXWIN-1)*MSTLEN                   IWSTF  221
      IA(JST) = MWIEXT                                                          IWSTF  222
      IA(JST+1) = MX                                                            IWSTF  223
      AA(JST+IHR+1) = STIWL                                                     IWSTF  224
      IF(IREPRT(1,35).NE.0)                                                     IREPRT 109
     1 WRITE(IOUTPT,799)                                                        IWSTF  226
     2 IWL1,JEXWIN,JIS,MWI,MG,MST,JST,IHR,MWIEXT,MX,NDIV,                       IWSTF  227
     3 COSBIW,ASNWL,ASNWNT,AA(MI+47),STIWL                                      IWSTF  228
  799 FORMAT                                                                    IWSTF  229
     1 (48H IWSTF(OPAQ)--IWL1,JEXWIN,JIS,MWI,MG,MST        ,6I10/               IWSTF  230
     2  48H JST,IHR,MWIEXT,MX,NDIV                         ,5I10/               IWSTF  231
     3  48H COSBIW,ASNWL,ASNWNT,IWARNET,STIWL              ,5F10.2)             IWSTF  232
  700 CONTINUE                                                                  IWSTF  233
  800 MWI = MWI + MWNLEN                                                        IWSTF  234
  900 MX = MX + MXLEN                                                           IWSTF  235
      MST = MST + <NEXWIN>*JIS*MSTLEN                                           IWSTF  236
 1000 MZ = MZ + MZLEN                                                           IWSTF  237
 2000 CONTINUE                                                                  IWSTF  238
      ISPEW = 0                                                                 IWSTF  239
      IVEC  = 1                                                                 IWSTF  240
      RETURN                                                                    IWSTF  241
      END                                                                       IWSTF  242
      FUNCTION IROUND(F)                                                        IROUND   2
C                                                                               IROUND   3
C              ROUND A FLOATING POINT NUMBER                                    IROUND   4
C                                                                               IROUND   5
      AF     = F + SIGN(0.5,F)                                                  IROUND   6
      IROUND = INT(AF)                                                          IROUND   7
      RETURN                                                                    IROUND   8
      END                                                                       IROUND   9
      SUBROUTINE IWPRP                                                          IWPRP    2
C                                                                               IWPRP    3
C            CALLED BY READSF IN THE ZONE LOOP.  RESETS INTERIOR                IWPRP    4
C            WALL AND INTERIOR WINDOW DATA.                                     IWPRP    5
C                                                                               IWPRP    6
      COMMON  /CONST/  DTOR, PIOVR2, PIOVR4, IBLNK, UNDEF, IUNDEF,              /CONST/  2
     1                 UNFILD, URAD, DEFIFR, DEFCFR, DEFINC, KWBTU              /CONST/  3
      REAL             KWBTU                                                    /CONST/  4
      COMMON  /LENS/   MWFLEN, MRLEN, MSHLEN, MWNLEN, MDRLEN, MXLEN,            /LENS/   2
     1                 MULEN, MZLEN, MIWLEN, MFLLEN,                            HRr      5
     2                 LMTB, LLDSOU, MSTLEN, LSTFT, MWLLEN                      BLIND    1
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     BLIND    2
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        FLOOR1   3
      COMMON  /PTRBGN/ ISCB, IWFB, IWPB, ICONSB, IGTB, IWLB, IGEOB,             HRr      6
     1                 ISHADB, IWINB, IDRB, IEWB, IUGB, ISPB, IIWPB,            HRr      7
     2                 IIWB, IFLB, ISPCDB, IOTHB, ILHB, IZQCMB, ISSHDB,         HRr      8
     3                 IOHFIB, IZLSK, IZLSL, ISTFB                              HRr      9
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                         /FILES/  3
     2              , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                    /FILES/  4
     3                IHRREP(3), IHRPAS(2)                                      /FILES/  5
      COMMON  /SURFD/  NV, AREA, PERIM, AZIM, TILT, H, W                        /SURFD/  2
      COMMON  /ZWALOC/ XZ0, YZ0, ZZ0, AZ0,  SAZ, CAZ, XW0, YW0, ZW0,            /ZWALOC/ 2
     1                 AW0, TW0,  SAW, CAW, STW, CTW, XW, YW                    /ZWALOC/ 3
      COMMON        // AA(75 000 000)                                           -048ar   1
      INTEGER          IA(75 000 000)                                           -048ar   2
      EQUIVALENCE  (IA(1), AA(1))                                               //       4
      COMMON /WCTRL/  IwinReturn, Imsgflg                                       /WCTRL/  2
c              For DLLs, delete Win_MB and enable msgbox.fi                     /WCTRL/  3
#ifndef _DLL                                                                 /* -051     1 */ 
      COMMON /WIN_MB/ MB_OK,MB_ICONSTOP,MB_ICONEXCLAMATION,MB_TASKMODAL,        -051     2
     &                MB_ICONINFORMATION                                        -051     3
#else                                                                        /* -051     4 */ 
      include 'msgbox.fi'                                                       -051     5
#endif                                                                       /* -051     6 */ 
C                                                                               IWPRP   15
      NINTS = <NINTS>                                                           IWPRP   16
      MIWP = <MZINT> - 1                                                        IWPRP   17
C                                                                               IWPRP   18
C            ----INTERIOR WALL LOOP----                                         IWPRP   19
C                                                                               IWPRP   20
      DO 1000 IW = 1,NINTS                                                      IWPRP   21
      MI = IA(MIWP+IW)                                                          IWPRP   22
C            DO GEOM TRANSFORM IF THE INT WALL WAS DEFINED IN THIS SPACE        IWPRP   23
      IF (MZ.NE.<MZIN>) GO TO 1000                                              IWPRP   24
      MP = <MIWPROP>                                                            IWPRP   25
      MG = <MIWGEOM>                                                            IWPRP   26
C              STANDARD INT WALL BETW A SUNSP AND NON-SUNSP MUST BE A           IWPRP   27
C              POLYGON OR HAVE HEIGHT AND WIDTH DEFINED. OTHERWISE ERROR.       IWPRP   28
      ISSP = <SUNSPACE>                                                         IWPRP   29
      MZADJ = <MZNEXTTO>                                                        IWPRP   30
      MZSAV = MZ                                                                IWPRP   31
      MZ = MZADJ                                                                IWPRP   32
      ISSPAJ = <SUNSPACE>                                                       IWPRP   33
      MZ = MZSAV                                                                IWPRP   34
      IF ((ISSP.EQ.0.AND.ISSPAJ.EQ.0).OR.(ISSP.EQ.1.AND.ISSPAJ.EQ.1))           IWPRP   35
     .  GO TO 500                                                               IWPRP   36
      IF (<IW-TYPE>.NE.1) GO TO 500                                             IWPRP   37
      IF( (<MIWSURF>.GT.0) .OR. (<MIWSURF>.EQ.0.AND.<HIW>.GT.0.0) )             IWPRP   38
     1 GO TO 490                                                                IWPRP   39
      CALL MSGSIM(-1,0,0,0,0)                                                   IWPRP   40
      WRITE(IOUTPT,9500) (<IWNM>,II=1,8)                                        -042L4  62
 9500 FORMAT(                                                                   -042L4  63
     $12X,'INTERIOR-WALL ',8A4,', between a SUNSPACE and a non-'/               -042L4  64
     $12X,'SUNSPACE, must be a POLYGON or have HEIGHT and WIDTH'/               -042L4  65
     $12X,'specified for calculation of solar radiation absorbed'/              -042L4  66
     $12X,'on the SUNSPACE side of this wall.')                                 -042L4  67
      Call MessageBox( NULL,'WALL missing dimensions -'                         -051    79
     &  //' ABORTING'//char(0),'IWPRP Errors'//char(0), MB_OK                   -051    80
     &  + MB_ICONSTOP+MB_TASKMODAL )                                            -051    81
      CALL ABT                                                                  IWPRP   48
  490 CONTINUE                                                                  IWPRP   49
      IF (<XIW>.NE.0.0.OR.<YIW>.NE.0.0) GO TO 500                               IWPRP   50
C              CAUTION FOR UNPOSITIONED SUNSPACE INTERIOR WALL                  IWPRP   51
      CALL MSGSIM(-3,0,0,0,0)                                                   IWPRP   52
      WRITE(IOUTPT,9490) (<IWNM>,II=1,8)                                        -042L4  68
 9490 FORMAT(                                                                   -042L4  69
     $12X,'SUNSPACE INTERIOR-WALL ',8A4,' has X=0, Y=0'/                        -042L4  70
     $12X,'it therefore may not be correctly positioned.'/                      -042L4  71
     $12X,'This may cause an inaccurate calculation of'/                        -042L4  72
     $12X,'solar radiation absorbed by the WALL.')                              -042L4  73
  500 CONTINUE                                                                  IWPRP   59
C                                                                               IWPRP   79
      NWI = <NIWIN>                                                             IWPRP   80
      IF (NWI.EQ.0) GO TO 1120                                                  IWPRP   81
      MWI = <MIWIN>                                                             IWPRP   82
C                                                                               IWPRP   83
C            ----INT WINDOW LOOP----                                            IWPRP   84
C                                                                               IWPRP   85
      DO 1100 K = 1,NWI                                                         IWPRP   86
      MG = <MWIGEOM>                                                            IWPRP   87
      MR = <MWIPRP>                                                             IWPRP   88
C            GET WINDOW POSITION IN SURFACE COORDINATES                         IWPRP   89
      XW = <XW>                                                                 IWPRP   90
      YW = <YW>                                                                 IWPRP   91
C              WARNING FOR POSSIBLE UNPOSITIONED INTERIOR WINDOW                IWPRP   92
      IF (<IW-TYPE>.NE.1) GO TO 1050                                            IWPRP   93
      IF ((ISSP.EQ.0.AND.ISSPAJ.EQ.0).OR.(ISSP.EQ.1.AND.ISSPAJ.EQ.1).OR.        IWPRP   94
     .    XW.NE.0.0.OR.YW.NE.0.0) GO TO 1050                                    IWPRP   95
      CALL MSGSIM(-2,0,0,0,0)                                                   IWPRP   96
      WRITE(IOUTPT,1045) (<IWINM>,II=1,8),(<IWNM>,II=1,8)                       -042L4  74
 1045 FORMAT(                                                                   -042L4  75
     $12X,'WINDOW ',8A4,' on INTERIOR-WALL ',8A4,' has X=0, Y=0 '/              -042L4  76
     $12X,'thus may not be cirrectly potioned on the WALL.'/                    -042L4  77
     $12X,'This may cause an inaccurate solar radiation'/                       -042L4  78
     $12X,'transmission calculation.')                                          -042L4  79
 1050 CONTINUE                                                                  IWPRP  103
C            ZERO THE SHADOW RATIOS (ALTHO NOT CURRENTLY USED                   IWPRP  109
C            FOR INTERIOR WINDOWS)                                              IWPRP  110
      JJ = 1                                                                    IWPRP  111
      CALL FILLN (0.,<WGOLGE>,24)                                               IWPRP  112
C              FORM FACTOR FOR DIFFUSE SHADING USED IN SUBR IWSOL               IWPRP  113
C              (<WIGNDFF> IS UNUSED FOR INT WINDOWS)                            IWPRP  114
      IF (ITYPLS(<WISKYFF>).EQ.ITYPLS(UNFILD)) <WISKYFF> = 1.0                  IWPRP  115
 1100 MWI = MWI + MWNLEN                                                        IWPRP  116
 1120 CONTINUE                                                                  IWPRP  117
 1000 CONTINUE                                                                  IWPRP  118
      RETURN                                                                    IWPRP  119
      END                                                                       IWPRP  120
      SUBROUTINE  PEAKCK ( DT )                                                 PEAKCK   2
C                                                                               PEAKCK   3
C              CHECK FOR PEAK HEATING AND COOLING LOADS.                        PEAKCK   4
C              IF PEAK SAVE PEAK LOAD COMPONENTS, TIME,                         PEAKCK   5
C              DATE, AND TEMPERATURE                                            PEAKCK   6
C                                                                               PEAKCK   7
      COMMON  /BLDPK/  BLDPK(60), IHPP(2), ICPP(2), HRHPK, HRCPK                -063     1
      DIMENSION IBLDPK(66)                                                      -063     2
      EQUIVALENCE (IBLDPK(1),BLDPK(1))                                          /BLDPK/  4
      COMMON  /ZNEWHR/ TZONER, INFCOD,                                          /ZNEWHR/ 2
     1                 QWALQ, QCELQ, QWINC, QWALD, QCELD,QINTW,                 /ZNEWHR/ 3
     2                 QUGF, QUGW, QDOOR, QEQPS, QEQPS2, QPPS,                  /ZNEWHR/ 4
     3                 QPPL, QEQPL, QEQPL2, QINFL,                              /ZNEWHR/ 5
     4                 QTSKL, QSOL, QPLENM, QLITE, QLITEW, QINFS,               /ZNEWHR/ 6
     5                 QELECT, CFMINF, QSUMW, ZCOND, QZS, QZL, QZTOT,           /ZNEWHR/ 7
     6                 QZLTEL,QZEQEL,QZGAS,QZHW,WNDSPZ,MANAGE                   /ZNEWHR/ 8
     7               , QZPEL, QZTLEL                                            /ZNEWHR/ 9
      DIMENSION QYENI(33)                                                       /ZNEWHR/10
      EQUIVALENCE  (QYENI(1), QWALQ)                                            /ZNEWHR/11
      COMMON /TIME  / IDOY, IDOW, IDSTF, ISCHR, ISCDAY, iDSdates(6),            -044e5r  1
     1                IMO, IDAY, IYR, IHR, CLOCK(10), IDSFLG,                   HOLID1   4
     2                MONDSC(12), MONLEN(12), MONSDA(12), IEODMR                /TIME/   4
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
C                                                                               PEAKCK  11
      DIMENSION  DT(18)                                                         PEAKCK  12
C                                                                               PEAKCK  13
      IF( DT(1) .GE. 0. )  GO TO 200                                            PEAKCK  14
C              HEATING PEAK CK                                                  PEAKCK  15
      IF ((ISCHR .LT. IHPP(1)) .OR. (ISCHR .GT. IHPP(2)))  GO TO 300            PEAKCK  16
      IF( DT(1) .GE. BLDPK(1) )  GO TO 300                                      PEAKCK  17
      BLDPK(1)  = DT(1)                                                         PEAKCK  18
      BLDPK(2)  = DT(2)                                                         PEAKCK  19
      IPK = IMO*1024 + IDAY*32 + ISCHR                                          PEAKCK  20
      BLDPK(3) = Float(IPK)                                                     -048c    3
      BLDPK(4)  = DBT                                                           PEAKCK  22
      BLDPK(5)  = WBT                                                           PEAKCK  23
      HRHPK  = HUMRAT                                                           PEAKCK  24
      BLDPK(51)  = SOLRAD                                                       -063     4
      BLDPK(52)  = CLDAMT                                                       -063     5
      BLDPK(53)  = WNDSPZ                                                       -063     6
      DO  150  I = 1 , 12                                                       PEAKCK  25
      BLDPK(I+10) = DT(I+2)                                                     PEAKCK  26
  150 CONTINUE                                                                  PEAKCK  27
      GO TO 300                                                                 PEAKCK  28
C              COOLING PEAK CK                                                  PEAKCK  29
  200 IF ((ISCHR .LT. ICPP(1)) .OR. (ISCHR .GT. ICPP(2)))  GO TO 300            PEAKCK  30
      IF( DT(1) .LE. BLDPK(6) )  GO TO 300                                      PEAKCK  31
      BLDPK(6)  = DT(1)                                                         PEAKCK  32
      BLDPK(7)  = DT(2)                                                         PEAKCK  33
      IPK = IMO*1024 + IDAY*32 + ISCHR                                          PEAKCK  34
      BLDPK(8) = Float(IPK)                                                     -048c    4
      BLDPK(9)  = DBT                                                           PEAKCK  36
      BLDPK(10)  = WBT                                                          PEAKCK  37
      HRCPK  = HUMRAT                                                           PEAKCK  38
      BLDPK(55)  = SOLRAD                                                       -063     7
      BLDPK(56)  = CLDAMT                                                       -063     8
      BLDPK(57)  = WNDSPZ                                                       -063     9
      DO  250  I = 1 , 16                                                       PEAKCK  39
      BLDPK(I+24) = DT(I+2)                                                     PEAKCK  40
  250 CONTINUE                                                                  PEAKCK  41
  300 CONTINUE                                                                  PEAKCK  42
      RETURN                                                                    PEAKCK  43
      END                                                                       PEAKCK  44
      FUNCTION PPWVM1(TEMP)                                                     PPWVMS   2
C                                                                               PPWVMS   3
C              CALCULATES VAPOR PRESSURE OF  SATURATED AIR                      PPWVMS   4
C                                                                               PPWVMS   5
      DIMENSION A(6),B(4)                                                       PPWVMS   6
      DATA A/-7.90298,5.02808,-1.3816E-7,11.344,8.1328E-3,-3.49149/             PPWVMS   7
      DATA B/-9.09718,-3.56654,0.876793,0.0060273/                              PPWVMS   8
      T      = (TEMP+459.7)/1.8                                                 PPWVMS   9
      IF(T.LT.273.16) GO TO   100                                               PPWVMS  10
      Z      = 373.16/T                                                         PPWVMS  11
      P1     = A(1)*(Z-1.0)                                                     PPWVMS  12
      P2     = A(2)*ALOG10(Z)                                                   PPWVMS  13
      P3     = A(3)*(10.0**(A(4)*(1.0-1.0/Z))-1.0)                              PPWVMS  14
      P4     = A(5)*(10.0**(A(6)*(Z-1.0))-1.0)                                  PPWVMS  15
      GO TO   110                                                               PPWVMS  16
  100 Z      = 273.16/T                                                         PPWVMS  17
      P1     = B(1)*(Z-1.0)                                                     PPWVMS  18
      P2     = B(2)*ALOG10(Z)                                                   PPWVMS  19
      P3     = B(3)*(1.0-1.0/Z)                                                 PPWVMS  20
      P4     = ALOG10(B(4))                                                     PPWVMS  21
 110  PPWVM1 = 29.921*(10.0**(P1+P2+P3+P4))                                     PPWVMS  22
      RETURN                                                                    PPWVMS  23
      END                                                                       PPWVMS  24
      subroutine qikft4(ndata,x,y,coef1,coef2)                                  QIKFIT4  2
C                                                                               QIKFIT4  3
C    Called by DCOF.                                                            QIKFIT4  4
C    Finds the two undetermined coeffs in the constrained quartic form          QIKFIT4  5
C    y = x*(2 - x + (1 - x)^2*(coef1 + coef2*(2+x))),                           QIKFIT4  6
C    which satisfies the constraints y(0)=0, y(1)=1, y'(1)=0                    QIKFIT4  7
C                                                                               QIKFIT4  8
C                                                                               QIKFIT4  9
      dimension x(1), y(1)                                                      QIKFIT4 10
      p1 = 0.                                                                   QIKFIT4 11
      p2 = 0.                                                                   QIKFIT4 12
      p3 = 0.                                                                   QIKFIT4 13
      p4 = 0.                                                                   QIKFIT4 14
      p5 = 0.                                                                   QIKFIT4 15
      p6 = 0.                                                                   QIKFIT4 16
      do i = 1, ndata                                                           QIKFIT4 17
        d0 = (2. - x(i))*x(i)                                                   QIKFIT4 18
        d1 = x(i)*(1. - x(i))*(1. - x(i))                                       QIKFIT4 19
        d2 = 2. + x(i)                                                          QIKFIT4 20
        p1 = p1 + (y(i) - d0)*d1                                                QIKFIT4 21
        p2 = p2 + d1*d1                                                         QIKFIT4 22
        p3 = p3 + d1*d1*d2                                                      QIKFIT4 23
        p4 = p4 + (y(i) - d0)*d1*d2                                             QIKFIT4 24
        p5 = p5 + d1*d1*d2                                                      QIKFIT4 25
        p6 = p6 + d1*d1*d2*d2                                                   QIKFIT4 26
      enddo                                                                     QIKFIT4 27
      coef1 = (p1*p6 - p3*p4)/(p2*p6 - p3*p5)                                   QIKFIT4 28
      coef2 = (p1*p5 - p2*p4)/(p3*p5 - p2*p6)                                   QIKFIT4 29
      return                                                                    QIKFIT4 30
      end                                                                       QIKFIT4 31
      SUBROUTINE  READSF ( IERRF )                                              READSF   2
C                                                                               READSF   3
C              READ STANDARD FILE, RESET POINTERS, AND SOME                     READSF   4
C              VALUES ON THE STANDARD FILE                                      READSF   5
C                                                                               READSF   6
      COMMON  /BEPS  /  BGAREA, BNAREA, PctSysOvrld, PctPltOvrld,               HVAC6    1
     $                  SiteEnergy, SourceEnergy                                HVAC6    2
      DIMENSION         BEPS(6)                                                 HVAC6    3
      EQUIVALENCE       (BEPS(1),BGAREA)                                        HVAC6    4
      COMMON  /BLDFN/  IBF1(4), IBF2(4), IBDYF1(4), IBDYF2(4)                   /BLDFN/  2
      COMMON  /BLDPK/  BLDPK(60), IHPP(2), ICPP(2), HRHPK, HRCPK                -063     1
      DIMENSION IBLDPK(66)                                                      -063     2
      EQUIVALENCE (IBLDPK(1),BLDPK(1))                                          /BLDPK/  4
      COMMON  /BLDVA/  BLDVOL, BLDARE, PATMDS                                   /BLDVA/  2
      COMMON  /BUFERS/  MRLEN1, MRLEN2, IBLDSB,IELDSB,LLDSB,N3,IBRPB1,          HVACi    1
     1                  IERPB1,LRPB1,IBRPB2,IERPB2,LRPB2                        HVACi    2
      COMMON /CLCFLG/ IFSTHR,IPRDFL,IGOLGE,NDD,LDSTYP,IFHRP                     DDAY1    1
      COMMON  /CONST/  DTOR, PIOVR2, PIOVR4, IBLNK, UNDEF, IUNDEF,              /CONST/  2
     1                 UNFILD, URAD, DEFIFR, DEFCFR, DEFINC, KWBTU              /CONST/  3
      REAL             KWBTU                                                    /CONST/  4
      COMMON /CTRL  / VERS(2),IRPFLG(4),IOVRLL(7),IWRTFL,IPROG,                 /CTRL/   2
     1       IFATAL,NAMPRG(3,7),MTRICR                                          /CTRL/   3
      COMMON  /DAYLT/ NDAYCF,IPHS,IZ,IHIT,MHHIT,IL,RHOAV,ATOT,ARHTOT,           /DAYLT/  2
     1                AR(3),AP(3),ARH(3),ARHP(3),NPH,NTH,WC(3),TMULT,           /DAYLT/  3
     2                TSOLNM,TVISDF,FRUP,ISHLOC,NWTOT,RHOCW,RHOFW,WAREA,        /DAYLT/  4
     3                IMREF,PHSUN,THSUN,PHSUND,THSUND,THSMIN,PHSMIN,            /DAYLT/  5
     4                THSMAX,PHSMAX,THSDEL,PHSDEL,H,NTHS,NPHS,NDFC,LWDC,        /DAYLT/  6
     5                BETA,W,IBZ,IWZ,ZENL,JZD,WBACLU(2,2),PF(7,5),              /DAYLT/  7
     6                VIEWVC(3),GLRNDX(2),WDAYIL(2,2),BACLUM(2),ITF(3),         /DAYLT/  8
     7                RDAYIL(2),RBACLU(2),GLRNEW(2),ETACLD,CDIRLW(24),          /DAYLT/  9
     8                CDIFLW(24),ODIFLW(24),SOLIC(12),TFAC,SPHSUN,              /DAYLT/ 10
     9                CPHSUN,PHWN,THWN,SPHWN,CPHWN,TOTIL(2),ATMMOI(12),         /DAYLT/ 11
     1                ATMTUR(12),XRAN,ALFAD,THRAT,PHRAT,SETPNT(2),              /DAYLT/ 12
     2                IZLSG,IZLSH,IZLSJM,IZLSJY,IZDREP,FPHRP(2),ZFTOT,          /DAYLT/ 13
     3                EINTSK(2,12,24),EINTSU(2,12,24),EDIRSK(2,12,24),          VISBL    2
     4                EDIRSU(2,12,24),FLCWSK(2,12),FLCWSU(2,12),                VISBL    3
     5                FLFWSK(2,12),FLFWSU(2,12),GILSK(2,10),GILSU(2,10),        VISBL    4
     6                WLUMSK(2,11,24),WLUMSU(2,11,24),AVWLSK(2,12,24),          VISBL    5
     7                AVWLSU(2,12,24),CHILSK(24),CHILSU(24),OHILSK(24),         VISBL    6
     8                DFSKHR(2,2),DFSUHR(2,2),SFSKHR(2,2),SFSUHR(2,2),          /DAYLT/ 19
     9                BFSKHR(2,2),BFSUHR(2,2),HISUNF,CHISKF,OHISKF,IZLSM        44d5br   1
      COMMON  /DAYL1/  ATMTU, ATMMO, TAU1                                       /DAYLT/ 21
     1               , TVISB, TH, PH, RAY(3), WNORM(3), TVISBR                  /DAYLT/ 22
      COMMON  /DESW/   DESDYQ(34)                                               DDAY1    3
      INTEGER IDESDYQ(34)                                                       DDAY1    4
      EQUIVALENCE (DESDYQ(1),IDESDYQ(1))                                        DDAY1    5
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                         /FILES/  3
     2              , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                    /FILES/  4
     3                IHRREP(3), IHRPAS(2)                                      /FILES/  5
      COMMON /HOLALT/ NHOLA(2),IHOLTY(2),IHOLDY(60,2),IHOLMN(60,2)              HOLID1   1
      COMMON  /HRREP / Irb, Ihrp, Lrb, Lhrp, Nrb, Nhrp, IVTLIM(3,50),           HRr      1
     &                 IGRPtr, IBRPtr, IRSch, IRSchT(5),                        HRr      2
     &                 NHRTyp(3), ITBUF(3), ITBUFB(3), ITBUFE(3),               HRr      3
     &                 IHREOF, ICDFLG                                           HRr      4
      COMMON  /IRUNPD/  NRUNPD, JRUNPD, IRUNPD(6,15)                            /IRUNPD/ 2
      COMMON  /ISPLST/  ISPLST(4096),ISPLOC(4096)                               -42c     1
      COMMON  /IWCPTR/ MIWC1, MIWC2, NIWC, LIWC                                 /IWCPTR/ 2
      COMMON  /LENS/   MWFLEN, MRLEN, MSHLEN, MWNLEN, MDRLEN, MXLEN,            /LENS/   2
     1                 MULEN, MZLEN, MIWLEN, MFLLEN,                            HRr      5
     2                 LMTB, LLDSOU, MSTLEN, LSTFT, MWLLEN                      BLIND    1
      COMMON  /LOCALD/ STALAT, STALON, ITIMZ, BAZIM, BALTIT,                    /LOCALD/ 2
     1                 SSTALA, CSTALA, TSTALA, SBAZIM, CBAZIM                   /LOCALD/ 3
     2                 ,BXORG, BYORG, SHCOEF, TP1, TP2, WSTP1, WSTP2,           /LOCALD/ 4
     3                 WSHGT,WSHGTL(12),ISREFL,IHOLX                            HOLID1   2
      DIMENSION LOCALD(32)                                                      HOLID1   3
      EQUIVALENCE      (LOCALD(1),STALAT)                                       /LOCALD/ 7
      COMMON/MONREP/BCSUM(12),IDYCPK(12),IHRCPK(12),DBCPK(12),                  /MONREP/ 2
     1         WBCPK(12),BCPK(12),BHSUM(12),IDYHPK(12),                         /MONREP/ 3
     2         IHRHPK(12),DBHPK(12),WBHPK(12),BHPK(12),                         /MONREP/ 4
     3                 BESUM(12),BEPK(12),BQCM(6,11),BLSI(4,25)                 /MONREP/ 5
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     BLIND    2
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        FLOOR1   3
      COMMON  /PTRBGN/ ISCB, IWFB, IWPB, ICONSB, IGTB, IWLB, IGEOB,             HRr      6
     1                 ISHADB, IWINB, IDRB, IEWB, IUGB, ISPB, IIWPB,            HRr      7
     2                 IIWB, IFLB, ISPCDB, IOTHB, ILHB, IZQCMB, ISSHDB,         HRr      8
     3                 IOHFIB, IZLSK, IZLSL, ISTFB                              HRr      9
      COMMON  /REPORT/ IREPRT(4,37),IPRG,IUNIQV(100),IUNIQS(100),IUNIQL         BIGNAM   1
      COMMON  /RUNTIM/ IDAYBG, IMONBG, IYRBG,  IDAYND, IMONND, IYRND            /RUNTIM/ 2
      COMMON  /SHADWF/ ISDINF, LSHSTR, ISHSTB, KMAX                             /SHADWF/ 2
      COMMON  /SIZE/   LENGTH,NVECT,NSCHED,NWF,NWPAR,NCONS,NGT,NWL,NGEO,        BLIND    5
     1                 NGSHAD, NWIN, NDOOR, NEW, NUG, NSP, NIWP, NIW,           /SIZE/   3
     2                 NFL, NDESDY, NBR, NOTH, NITH, NOPSRF,                    HRr     10
     3                 NSURF, NSSHD, NSHTOT                                     GEO1     1
      COMMON /TIME  / IDOY, IDOW, IDSTF, ISCHR, ISCDAY, iDSdates(6),            -044e5r  1
     1                IMO, IDAY, IYR, IHR, CLOCK(10), IDSFLG,                   HOLID1   4
     2                MONDSC(12), MONLEN(12), MONSDA(12), IEODMR                /TIME/   4
      COMMON /TITLE / TITLE(10,5)                                               /TITLE/  2
      COMMON/UNITT/VKONV(300),DUMLOG(4),JUNITT(4,300,2)                         UNITS1   1
      DIMENSION IUNITT(4,300)                                                   UNITS1   2
      EQUIVALENCE (IUNITT,JUNITT)                                               /UNITT/  4
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
      COMMON  /ZWALOC/ XZ0, YZ0, ZZ0, AZ0,  SAZ, CAZ, XW0, YW0, ZW0,            /ZWALOC/ 2
     1                 AW0, TW0,  SAW, CAW, STW, CTW, XW, YW                    /ZWALOC/ 3
      COMMON        // AA(75 000 000)                                           -048ar   1
      INTEGER          IA(75 000 000)                                           -048ar   2
      EQUIVALENCE  (IA(1), AA(1))                                               //       4
      COMMON /IAX   / IAX, IADIM, IADIMV, IAXMAX, KORE                          /IAX/    2
C                                                                               READSF  38
      DIMENSION BRES(8), SPCD(1), ISTD(2)                                       READSF  39
      DIMENSION ZLSK(1),ZLSL(1),ZLSM(1)                                         44d5br 133
      DIMENSION ZQCM(1),ZLSG(1),ZLSH(1),ZLSJM(1),ZLSJY(1),ZDREP(1)              READSF  41
      EQUIVALENCE (BRES(1),IBGS), (SPCD(1),AA(1)), (ZQCM(1),AA(1))              READSF  42
      EQUIVALENCE (ZLSG(1),AA(1)), (ZLSH(1),AA(1)), (ZLSJM(1),AA(1)),           READSF  43
     1            (ZLSJY(1),AA(1)), (ZDREP(1),AA(1)),(ZLSK(1),AA(1)),           44d5br 134
     2            (ZLSL(1),AA(1)),  (ZLSM(1),AA(1))                             44d5br 135
      DIMENSION EZERO(1)                                                        READSF  46
      EQUIVALENCE (EZERO(1),EINTSK(1,1,1))                                      READSF  47
#ifdef _DLL                                                                  /* -051    82 */ 
      character*60 outstr                                                       -051    83
#endif                                                                       /* -051    84 */ 
      COMMON /WCTRL/  IwinReturn, Imsgflg                                       /WCTRL/  2
c              For DLLs, delete Win_MB and enable msgbox.fi                     /WCTRL/  3
#ifndef _DLL                                                                 /* -051     1 */ 
      COMMON /WIN_MB/ MB_OK,MB_ICONSTOP,MB_ICONEXCLAMATION,MB_TASKMODAL,        -051     2
     &                MB_ICONINFORMATION                                        -051     3
#else                                                                        /* -051     4 */ 
      include 'msgbox.fi'                                                       -051     5
#endif                                                                       /* -051     6 */ 
      DIMENSION V1(3),V2(3),V3(3),V21(3),V23(3),V(120,3),VNM(3)                 -42c     5
      DIMENSION LASTU(2)                                                        -042L1r  7
C                                                                               READSF  48
      DATA ISTD / 4HSTAN, 4HDARD /                                              READSF  49
      DATA LASTU/ 4HUNUS, 4HED   /                                              -042L1r  8
C                                                                               READSF  50
C                                                                               READSF  51
      IERRF  = 0                                                                READSF  52
      NOPSRF = 0                                                                -023    29
      IOHFIB = 0                                                                -023    30
      ILHB   = 0                                                                -023    31
      ISSHDB = 0                                                                -023    32
      NSSHD  = 0                                                                -023    33
C              MLAST POINTS TO THE LAST WORD OF BLANK COMMON USED               READSF  53
      MLAST  = 0                                                                READSF  54
      IST    = 1                                                                READSF  55
C              READ 19 BLOCKS OF DATA (38 RECORDS)                              FLOOR1   7
C              FROM THE STANDARD FILE                                           READSF  57
C                                                                               READSF  58
C              BLOCK 1  = DAY SCHEDULES                                         READSF  59
C              BLOCK 2  = SCHEDULES                                             READSF  60
C              BLOCK 3  = WEIGHTING FACTORS                                     READSF  61
C              BLOCK 4  = WALL-PARAMETERS                                       READSF  62
C              BLOCK 5  = WALL PROPERTIES (RES FAC WITH IFR)                    READSF  63
C              BLOCK 6  = WALL PROPERTIES (RES FAC WITHOUT IFR)                 READSF  64
C              BLOCK 7  = WINDOW PROPERTIES                                     READSF  65
c              BLOCK 8  = WINDOW-LAYER  (following +1)                          BLIND   41
C              BLOCK 8  = GEOMETRY                                              READSF  66
C              BLOCK 9  = GLOBAL SHADES                                         READSF  67
C              BLOCK 10 = WINDOWS                                               READSF  68
C              BLOCK 11 = DOORS                                                 READSF  69
C              BLOCK 12 = EXTERIOR WALLS                                        READSF  70
C              BLOCK 13 = UNDERGROUND WALLS                                     READSF  71
C              BLOCK 14 = FLOORS                                                FLOOR1   8
C              BLOCK 15 = SPACES                                                FLOOR1   9
C              BLOCK 16 = INTERIOR WALL POINTERS                                FLOOR1  10
C              BLOCK 17 = INTERIOR WALLS                                        FLOOR1  11
C              BLOCK 18 = REPORT BLOCKS                                         FLOOR1  12
C              BLOCK 19 = HOURLY REPORTS                                        FLOOR1  13
C                                                                               READSF  77
C              INITIALIZE BUFFER FOR BLIND METRIC-CONVERSION IN DCOF            READSF  78
C              REPORT OUTPUT                                                    READSF  79
c      write(IOUTPT,'(A20)') 'READSF-begin******'                               BLIND   42
      DO 2 I = 1,440                                                            READSF  80
    2 EZERO(I)=0.                                                               READSF  81
      DO 10 I=1,20                                                              BLIND   43
      READ (ISTNDF,END=80000) N,LEN                                             READSF  83
C              GET BLANK COMMON FOR NEXT BLOCK                                  READSF  84
      CALL GETBUF(IA,LEN,MLAST)                                                 READSF  85
      IF( IwinReturn .ne. 0 ) RETURN                                            -042L4  81
      CALL READN(ISTNDF,AA(IST),LEN)                                            READSF  86
      IF( IwinReturn .ne. 0 ) RETURN                                            -042L4  82
c      write(IOUTPT,'(I20)') I                                                  BLIND   44
c      call DUMPIT(20HXXY***              ,IA(IST),LEN)                         BLIND   45
      IST    = IST + LEN                                                        READSF  87
   10 CONTINUE                                                                  READSF  88
C                                                                               READSF  89
C              READ POINTERS, NO, OF COMPONENTS, AND MISCELLANEOUS              READSF  90
C              STUFF FROM THE STANDARD FILE.                                    READSF  91
C              NVECT, NSCHED, ETC ARE THE NUMBER OF COMPONENTS                  READSF  92
C              IN EACH BLOCK.                                                   READSF  93
C              ISCB, ICONSB, ETC., POINT TO THE START OF THE                    READSF  94
C              BLOCKS.                                                          READSF  95
C              MPLEN, MRLEN, ETC., ARE THE LENGTHS OF THE                       READSF  96
C              COMPONENTS IN EACH BLOCK                                         READSF  97
C                                                                               READSF  98
      READ(ISTNDF,END=80000) LENGTH, NVECT, NSCHED, NWF, NWPAR, NCONS,          READSF  99
     .                       NGT, NGEO, NGSHAD,                                 READSF 100
     1              NWIN,NDOOR,NEW,NUG,NSP,NIWP,NIW,NFL,NWL,NRB,NHRP,           BLIND   46
     2              NDESDY,ISCB,IWFB,IWPB,ICONSB,ICONB2,IGTB,IGEOB,             BLIND   47
     3              ISHADB,IWINB,IDRB,                                          READSF 103
     4              IEWB,IUGB,ISPB,IIWPB,IIWB,IFLB,IWLB,Irb,Ihrp,MWFLEN,        HRr     97
     5              MPLEN,MRLEN,MSHLEN,MWNLEN,MDRLEN,MXLEN,MULEN,               FLOOR1  17
     6              MZLEN,MIWLEN,MFLLEN,Lrb,Lhrp,MWLLEN,CLOCK,TITLE,            HRr     98
     7 (IREPRT(1,i),i=1,37),STALAT,STALON,ITIMZ,BALTIT,IDSFLG,GTEMP,CLR,        IREPRT 110
     8              ATMMOI,ATMTUR,SHCOEF,TP1,TP2,WSTP1,WSTP2,WSHGT,             ALPHA    2
     9              WSHGTL,iDSdates,BAZIM,IHOLX,BGAREA,IHPP,ICPP,               -044e5r  5
     1              BXORG,BYORG,IBF1,IBF2,IBDYF1,IBDYF2,ISREFL,DESDYQ,          ALPHA    4
     2              NRUNPD, IRUNPD, LDSTYP, NOTH, NITH, LMTB,                   READSF 111
     3              NHOLA,IHOLTY,IHOLDY,IHOLMN,NSHTOT,                          HOLID1  10
     4              (ISPLST(I),I=1,NSP),(ISPLOC(I),I=1,NSP)                     HOLID1  11
C***                                                                            READSF 113
       CALL  FREAD( ISCB, NSCHED, MLAST, IA )                                   READSF 114
C--- ATTACH BUILDING LEVEL FUNCTIONS                                            READSF 115
       CALL  FNATT( IBF1, IBF1(1), IA )                                         READSF 116
       CALL  FNATT( IBF2, IBF2(1), IA )                                         READSF 117
       CALL  FNATT( IBDYF1, IBDYF1(1), IA )                                     READSF 118
       CALL  FNATT( IBDYF2, IBDYF2(1), IA )                                     READSF 119
      IF (NRUNPD .GT. NDESDY)  IMONBG = IRUNPD(1,NDESDY+1)                      READSF 120
      IF (NRUNPD .GT. NDESDY)  IDAYBG = IRUNPD(2,NDESDY+1)                      READSF 121
C              SET DESIGN PRESSURE                                              READSF 122
      PATMDS = 29.92 * EXP(-0.0000368*BALTIT)                                   READSF 123
C              GRAB SPACE FOR PEAK LOADS REPORT ARRAY (SPCD)                    READSF 124
      ISPCDB = MLAST + 1                                                        READSF 125
      CALL GETBUF(IA,NSP*60,MLAST)                                              -060    12
C              INITIALIZE                                                       READSF 127
      CALL INITLZ(-100,SPCD(ISPCDB))                                            READSF 128
C              GET SPACE FOR ZONE MONTHLY LOAD COMPONENT ARRAY USED             READSF 129
C              FOR REPORT LS-E                                                  READSF 130
      IZQCMB = MLAST + 1                                                        READSF 131
      IF(IREPRT(1,20).EQ.0) GO TO 15                                            IREPRT 111
      LZQCM  = NSP * 66                                                         READSF 133
      CALL GETBUF(IA,LZQCM,MLAST)                                               READSF 134
C              INITIALIZE LS-E REPORT ARRAY                                     READSF 135
      DO 5 I=1,LZQCM                                                            READSF 136
      ZQCM(IZQCMB+I-1) = 0.                                                     READSF 137
    5 CONTINUE                                                                  READSF 138
   15 CONTINUE                                                                  READSF 139
C              INITIALIZE LS-F REPORT ARRAY                                     READSF 140
      IF(IREPRT(1,21).EQ.0) GO TO 18                                            IREPRT 112
      DO 17 I=1,6                                                               READSF 142
      DO 16 J=1,11                                                              READSF 143
      BQCM(I,J) = 0.                                                            READSF 144
   16 CONTINUE                                                                  READSF 145
   17 CONTINUE                                                                  READSF 146
   18 CONTINUE                                                                  READSF 147
C              GRAB SPACE FOR OUTSIDE TEMP HIST BLOCK AND                       READSF 148
C              LOAD HISTORY BLOCK                                               READSF 149
      IOTHB  = 0                                                                READSF 150
      ILHB   = 0                                                                READSF 151
      IF (NOTH .EQ. 0)  GO TO 20                                                READSF 152
      IOTHB  = MLAST + 1                                                        READSF 153
      CALL GETBUF(IA,NOTH,MLAST)                                                READSF 154
   20 ILHB   = MLAST + 1                                                        READSF 155
      CALL GETBUF(IA,NSP*62,MLAST)                                              READSF 156
C              INITIALIZE LOADS HOURLY OUTPUT BUFFER SIZE                       READSF 157
      LLDSB  = 0                                                                READSF 158
C              IF VARIABLES IN OUTPUT ARE PACKED, L1 SHOULD BE                  READSF 159
C              SET TO THE LENGTH USED WITH PACKED VARIABLES                     READSF 160
      L1     = 4                                                                READSF 161
      IF (IWSIZ .EQ. 2)  L1 = 11                                                READSF 162
C              RESET SPACE POINTERS                                             READSF 163
      MZ     = ISPB                                                             READSF 164
C              LOOP OVER FLOORS TO RESET SPACE POINTERS                         FLOOR1  22
      IF(NFL.EQ.0) GO TO 3110                                                   FLOOR1  23
      MFL = IFLB                                                                FLOOR1  24
      DO 3100 IFLR=1,NFL                                                        FLOOR1  25
      IFL2 = <NFLSP>                                                            FLOOR1  26
      IF(IFL2.EQ.0) GO TO 3000                                                  FLOOR1  27
      <MFLSP> = <MFLSP> + ISPB - 1                                              FLOOR1  28
 3000 CONTINUE                                                                  FLOOR1  29
 3100 MFL = MFL + MFLLEN                                                        FLOOR1  30
 3110 CONTINUE                                                                  FLOOR1  31
C              INITIALIZE DAYLIGHTING FLAG                                      READSF 169
      NDAYCF = 0                                                                READSF 170
C              LOOP OVER SPACES                                                 READSF 171
      DO 5000 IZ=1,NSP                                                          READSF 172
       CALL  FNATT( <IZFN1NM>, <MZFN1>, IA )                                    READSF 173
       CALL  FNATT( <IZFN2NM>, <MZFN2>, IA )                                    READSF 174
       CALL  FNATT( <IZDAYILLUMFN1NM>, <MZDAYILLUMFN1>, IA )                    READSF 175
       CALL  FNATT( <IZDAYILLUMFN2NM>, <MZDAYILLUMFN2>, IA )                    READSF 176
       CALL  FNATT( <IZDAYLTCTLFN1NM>, <MZDAYLTCTLFN1>, IA )                    READSF 177
       CALL  FNATT( <IZDAYLTCTLFN2NM>, <MZDAYLTCTLFN2>, IA )                    READSF 178
C              CHANGE SCHEDULE POINTERS FROM A SCHEDULE NUMBER TO               READSF 179
C              A POINTER TO THE LOCATION OF WHAT WILL BE                        READSF 180
C              THE CURRENT DAY SCHEDULE POINTER                                 READSF 181
      <PEOPLE-SCHEDULE>  = IPTSCH(ISCB,<PEOPLE-SCHEDULE>)                       -045br 193
      <SOURCE-SCHEDULE>  = IPTSCH(ISCB,<SOURCE-SCHEDULE>)                       -045br 194
      <TASK-LIGHT-SCH>   = IPTSCH(ISCB,<TASK-LIGHT-SCH>)                        -045br 195
      DO  IL=1,5                                                                -045br 196
        <LIGHTING-SCHEDUL> = IPTSCH(ISCB,<LIGHTING-SCHEDUL>)                    -045br 197
        <EQUIP-SCHEDULE>   = IPTSCH(ISCB,<EQUIP-SCHEDULE>)                      -045br 198
C              SET POINTER TO SPACE RECEIVING LIGHT HEAT                        -045br 199
C              IN THE FOLLOWING, ISPLOC(SPACE BDL OCCURRENCE NO.)               -045br 200
C              = SPACE SF OCCURRENCE NUMBER                                     -045br 201
        IF (<LIGHT-HEAT-TO> .ne. 0)                                             -050x   18
     &      <LIGHT-HEAT-TO> = (ISPLOC(<LIGHT-HEAT-TO>)-1) * MZLEN + ISPB        -045br 203
      ENDDO                                                                     -045br 204
      <KZINF> = IPTSCH(ISCB,<KZINF>)                                            BIGNAM  20
      <KZDREP> = IPTSCH(ISCB,<KZDREP>)                                          BIGNAM  21
C              IF NUMBER-OF-PEOPLE WAS NOT INPUT, CALCULATE IT FROM             READSF 189
C              AREA/PERSON                                                      READSF 190
      IF (ITYPLS(<ZPPLNO>) .EQ. ITYPLS(UNFILD)  .AND.                           -045br 205
     &                                        <PEOPLE-SCHEDULE> .NE. 0)         -045br 206
     1 <ZPPLNO> = <ZFLRAR>/<AREA/PERSON>                                        READSF 192
      IF (ITYPLS(<ZPPLNO>) .EQ. ITYPLS(UNFILD))  <ZPPLNO> = 0.                  READSF 193
c              Set weighted fraction of internal heat gains to 1.0 if           -045br 207
c              ASHRAE weighting factors are used                                -045br 208
      IF (<ZFLRWT> .gt. 0.) THEN                                                -045br 209
        <PEOPLE-RAD-FRAC> = 1.                                                  -045br 210
        <SOURCE-RAD-FRAC> = 1.                                                  -045br 211
        <TASK-RAD-FRAC>   = 1.                                                  -045br 212
        DO IL = 1,5                                                             -045br 213
          <EQUIP-RAD-FRAC> = 1.                                                 -045br 214
          <LIGHT-RAD-FRAC> = 1.                                                 -045br 215
        ENDDO                                                                   -045br 216
      ENDIF                                                                     -045br 217
C              RESET INTERIOR WALL POINTERS                                     READSF 194
      <MZINT> = IIWPB + <MZINT> - 1                                             READSF 195
C               SET POINTER TO SPACE RECEIVING LIGHT HEAT                       READSF 196
C              IN THE FOLLOWING, ISPLOC(SPACE BDL OCCURRENCE NO.)               LTSYS3   4
C              = SPACE SF OCCURRENCE NUMBER                                     LTSYS3   5
C              SET LOAD HISTORY POINTER                                         READSF 199
      <MZLDHIST> = (IZ-1)*62 + ILHB                                             READSF 200
C              RESET WEIGHTING FACTOR POINTER                                   READSF 201
      <MZWF> = <MZWF> + IWFB - 1                                                READSF 202
C              ZERO THE HOURLY REPORT BUFFER POINTER                            READSF 203
      <MZBUF> = 0                                                               READSF 204
C              COUNT SPACES WITH DAYLIGHTING CALCULATION REQUESTED              READSF 205
      IF(<DAYLIGHTING>.GT.0) NDAYCF = NDAYCF + 1                                READSF 206
C              PRINT WARNING FOR DAYLIT SPACE WITH LT 6 SURFACES                READSF 207
      IF (<DAYLIGHTING>.GT.0.AND.(<NEXTS>+<NSUG>+<NINTS>).LT.6) THEN            -023    34
        IF(<NEXTS>+<NSUG>+<NINTS>.LT.3) THEN                                    -023    35
          IERRF  = 1                                                            -023    36
          CALL MSGSIM(-1,0,0,0,0)                                               -023    37
          WRITE(IOUTPT,26)  (<IZNM>,II=1,8)                                     -023    38
#ifdef _DLL                                                                  /* -051    85 */ 
          WRITE(outstr,24)  (<IZNM>,II=1,8)                                     -051    86
          Call MessageBox( NULL,                                                -051    87
     $    'Must have at least three surfaces in SPACE for Daylighting'          -051    88
     $    //char(0),outstr//char(0), MB_OK+MB_ICONSTOP+MB_TASKMODAL )           -051    89
   24 FORMAT('Daylighting Errors in SPACE ',8A4)                                -051    90
#endif                                                                       /* -051    91 */ 
        ELSE                                                                    -023    43
          CALL MSGSIM(-2,0,0,0,0)                                               -023    44
          WRITE(IOUTPT,25)  (<IZNM>,II=1,8)                                     -023    45
        ENDIF                                                                   -023    46
      ENDIF                                                                     -023    47
   25 FORMAT (                                                                  -023    48
     $ 12X,'The DAYLIGHTING calculation for SPACE ',8A4/                        -023    49
     $ 12X,'may be inaccurate because it has less than six surfaces.')          -023    50
   26 FORMAT (                                                                  -023    51
     $ 12X,'DAYLIGHTING calculation is illegal for SPACE ',8A4/                 -023    52
     $ 12X,'because it has less than three enclosing surfaces.')                -023    53
C                                                                               -044d5 866
C          WARNING if Daylighting and Obstruction specified, Obstruction        -044d5 867
C           method is CALCULATE and obstruction length, width or height = 0     -044d5 868
      If (<DAYLIGHTING>.GT.0) Then                                              -044d5 869
       If (((<SKY-OBS1-TYPE>.GT.0).AND.(<SKY-OBS1-METHOD>.EQ.1)).AND.           -044d5 870
     $    ((<SKY-OBS1-HT>.LT.0.1).OR.(<SKY-OBS1-WID>.LT.0.1).OR.                -044d5 871
     $     (<SKY-OBS1-LEN>.LT.0.1))) THEN                                       -044d5 872
        <SKY-OBS1-TYPE> = 0                 !type set to NONE                   -044d5 873
        CALL MSGSIM(-2,0,0,0,0)             !warning level msg                  -044d5 874
        WRITE(IOUTPT,21)  '1',(<IZNM>,II=1,8)                                   -044d5 875
       Endif                                                                    -044d5 876
       If (((<SKY-OBS2-TYPE>.GT.0).AND.(<SKY-OBS2-METHOD>.EQ.1)).AND.           -044d5 877
     $   ((<SKY-OBS2-HT>.LT.0.1).OR.(<SKY-OBS2-WID>.LT.0.1).OR.                 -044d5 878
     $    (<SKY-OBS2-LEN>.LT.0.1))) THEN                                        -044d5 879
        <SKY-OBS2-TYPE> = 0                 !type set to NONE                   -044d5 880
        CALL MSGSIM(-2,0,0,0,0)             !warning level msg                  -044d5 881
        WRITE(IOUTPT,21)  '2',(<IZNM>,II=1,8)                                   -044d5 882
       Endif                                                                    -044d5 883
   21  FORMAT (                                                                 -044d5 884
     $ 12X,'Daylighting Obstruction specified for ref pt ',A1,                  -044d5 885
     $ 'in SPACE ',8A4/,12X,' and METHOD is set to CALCULATE,',                 -044d5 886
     $ 'but obstruction HEIGHT, WIDTH or'/,12X,' DEPTH is set to 0;'/           -044d5 887
     $ 12X,'Obstruction calculation for this ref pt has been turned',           -044d5 888
     $ ' off.')                                                                 -044d5 889
      Endif                                                                     -044d5 890
C                                                                               -044d5 891
C  Make sure <DISCRETE-LIGHT1/2>, <DISCRETE-POWER1/2> are properly formatted    -044d5 892
C                                                                               -044d5 893
      If (<DAYLIGHTING>.GT.0) Then                                              -044d5 894
       IDiscErr = 0                                                             -044d5 895
       IDiscWar = 0                                                             -044d5 896
       If((<ZONE-FRACTION1>.GT.0.0).AND.(<LIGHT-CTRL-TYPE1>.EQ.4)) Then         -044d5 897
C         check formatting of <DISCRETE-LIGHT1>, <DISCRETE-POWER1>              -044d5 898
         PrevLt =  9.                                                           -044d5 899
         PrevPw =  9.                                                           -044d5 900
         DO II=1,10                                                             -044d5 901
          If ((<DISCRETE-LIGHT1>.EQ.UNFILD).OR.                                 -044d5 902
     $       (<DISCRETE-POWER1>.EQ.UNFILD)) EXIT                                -044d5 903
          If (<DISCRETE-LIGHT1>.GE.PrevLt)  IDiscErr = 1                        -044d5 904
          If (<DISCRETE-POWER1>.GE.PrevPw)  IDiscWar = 1                        -044d5 905
          PrevLt = <DISCRETE-LIGHT1>                                            -044d5 906
          PrevPw = <DISCRETE-POWER1>                                            -044d5 907
         ENDDO                                                                  -044d5 908
         If ((<DISCRETE-LIGHT1>.EQ.UNFILD).OR.                                  -044d5 909
     $       (<DISCRETE-POWER1>.EQ.UNFILD)) II = II-1                           -044d5 910
         <LIGHT-CTRL-STEPS>=II                                                  -044d5 911
       Endif                                                                    -044d5 912
       If (IDiscErr.GT.0) Then                                                  -044d5 913
         CALL MSGSIM(-1,0,0,0,0)               !abort level msg                 -044d5 914
         WRITE(IOUTPT,31)  (<IZNM>,II=1,8),'1'                                  -044d5 915
       Endif                                                                    -044d5 916
       If (IDiscWar.GT.0) Then                                                  -044d5 917
         CALL MSGSIM(-2,0,0,0,0)               !warning level msg               -044d5 918
         WRITE(IOUTPT,32)  (<IZNM>,II=1,8),'1'                                  -044d5 919
       Endif                                                                    -044d5 920
       If ((<ZONE-FRACTION2>.GT.0.0).AND.(<LIGHT-CTRL-TYPE2>.EQ.4)) Then        -044d5 921
C         check formatting of <DISCRETE-LIGHT2>, <DISCRETE-POWER2>              -044d5 922
         PrevLt =  9.                                                           -044d5 923
         PrevPw =  9.                                                           -044d5 924
         DO II=1,10                                                             -044d5 925
          If ((<DISCRETE-LIGHT2>.EQ.UNFILD).OR.                                 -044d5 926
     $       (<DISCRETE-POWER2>.EQ.UNFILD)) EXIT                                -044d5 927
          If (<DISCRETE-LIGHT2>.GE.PrevLt)  IDiscErr = 2                        -044d5 928
          If (<DISCRETE-POWER2>.GE.PrevPw)  IDiscWar = 2                        -044d5 929
          PrevLt = <DISCRETE-LIGHT2>                                            -044d5 930
          PrevPw = <DISCRETE-POWER2>                                            -044d5 931
         ENDDO                                                                  -044d5 932
         If ((<DISCRETE-LIGHT2>.EQ.UNFILD).OR.                                  -044d5 933
     $       (<DISCRETE-POWER2>.EQ.UNFILD)) II = II-1                           -044d5 934
         <LIGHT-CTRL-STEP2>=II                                                  -044d5 935
       Endif                                                                    -044d5 936
       If (IDiscErr.GT.1) Then                                                  -044d5 937
         CALL MSGSIM(-1,0,0,0,0)               !abort level msg                 -044d5 938
         WRITE(IOUTPT,31)  (<IZNM>,II=1,8),'2'                                  -044d5 939
       Endif                                                                    -044d5 940
       If (IDiscWar.GT.1) Then                                                  -044d5 941
         CALL MSGSIM(-2,0,0,0,0)               !warning level msg               -044d5 942
         WRITE(IOUTPT,32)  (<IZNM>,II=1,8),'2'                                  -044d5 943
       Endif                                                                    -044d5 944
   31  FORMAT (                                                                 -044d5 945
     $ 12X,'In the daylighting controls for SPACE ',8A4/                        -044d5 946
     $ 12X,'the DISCRETE-LIGHT',A1,' values are not DECREASING')                -044d5 947
   32  FORMAT (                                                                 -044d5 948
     $ 12X,'In the daylighting controls for SPACE ',8A4/                        -044d5 949
     $ 12X,'the DISCRETE-POWER',A1,' values are not DECREASING')                -044d5 950
      Endif                                                                     -044d5 951
C                                                                               -044d5 952
C              RESET EXTERIOR SURFACE POINTERS                                  READSF 214
C              ZERO THE FEATURE FLAG                                            READSF 215
      <FEATURE> = 0                                                             READSF 216
      IE2    = <NEXTS>                                                          READSF 217
      IF (IE2 .EQ. 0)  GO TO 550                                                READSF 218
      <MZEXT> = <MZEXT> + IEWB - 1                                              READSF 219
      MX     = <MZEXT>                                                          READSF 220
      DO 540 IE=1,IE2                                                           READSF 221
       CALL  FNATT( <IEWFN1NM>, <MEWFN1>, IA )                                  READSF 222
       CALL  FNATT( <IEWFN2NM>, <MEWFN2>, IA )                                  READSF 223
      <MXGEOM> = <MXGEOM> + IGEOB - 1                                           READSF 224
      IF (<MXSHAD>.NE.0) <MXSHAD> = <MXSHAD> + ISHADB - 1                       GEO1     9
      <MXPROPRL> = <MXPROPRL> + ICONSB - 1                                      LDS1    17
      <MEWOTH> = <MEWOTH> + IOTHB - 1                                           READSF 226
C              IF VENTED TROMBE WALL, SET FEATURE FLAG TO 1                     READSF 229
      IF (<IEWTYPE> .EQ. 4)  <FEATURE> = 1                                      READSF 230
C              RESET WINDOW POINTERS                                            READSF 231
      NW     = <NWIN>                                                           READSF 232
      IF (NW .EQ. 0)  GO TO 525                                                 READSF 233
      <MXWIN> = <MXWIN> + IWINB - 1                                             READSF 234
      MWI    = <MXWIN>                                                          READSF 235
      DO 520 IWIN=1,NW                                                          READSF 236
      DO 27 IS=1,9                                                              VISBL 1051
   27 IF (<MWISTC>.NE.0)   <MWISTC> = <MWISTC> + IWLB - 1                       BLIND   51
      <MWIS-SCH> = IPTSCH(ISCB,<MWIS-SCH>)                                      BIGNAM  22
      <MWIS-TRIG> = IPTSCH(ISCB,<MWIS-TRIG>)                                    BIGNAM  23
      <MWIB-SCH> = IPTSCH(ISCB,<MWIB-SCH>)                                      BIGNAM  24
      <MWIB-TRIG> = IPTSCH(ISCB,<MWIB-TRIG>)                                    BIGNAM  25
       CALL  FNATT( <IWIFN1NM>, <MWIFN1>, IA )                                  READSF 237
       CALL  FNATT( <IWIFN2NM>, <MWIFN2>, IA )                                  READSF 238
      <MWIGEOM> = <MWIGEOM> + IGEOB - 1                                         READSF 239
      IF(<MWISHADE>.NE.0) <MWISHADE> = <MWISHADE> + ISHADB - 1                  GEO1    10
       CALL  FNATT( <IWISPFNNM>, <MWISPFN>, IA )                                READSF 240
      <MWIPRP> = <MWIPRP> + IGTB - 1                                            READSF 245
      <MWIPRPSW> = <MWIPRPSW> + IGTB - 1                                        READSF 246
C              WARNING IF WINDOW HAS CONDUCT-SCH WITHOUT SHADING-SCH            READSF 247
      IF (<KGCON>.EQ.0.OR.<KGCURT>.NE.0) GO TO 30                               READSF 248
      CALL MSGSIM(-2,0,0,0,0)                                                   READSF 249
      WRITE(IOUTPT,29)  (<IWINM>,II=1,8), (<IZNM>,II=1,8)                       -042L4  83
   29 FORMAT(                                                                   -042L4  84
     $12X,'The CONDUCT-SCHEDULE for WINDOW ',8A4,' in SPACE ', 8A4/             -042L4  85
     $12X,'has no effect since the WINDOW has no SHADING-SCHEDULE.')            -042L4  86
   30 CONTINUE                                                                  READSF 254
C     RESET SHADING, DIRT-DEPREC AND CONDUCTANCE SCHEDULE POINTERS              -044d5 953
      <DIRT-DEPREC-SCH> = IPTSCH(ISCB, <DIRT-DEPREC-SCH>)                       -044d5 954
      <KGCURT> = IPTSCH(ISCB,<KGCURT>)                                          BIGNAM  26
      <KGCON> = IPTSCH(ISCB,<KGCON>)                                            BIGNAM  27
C            RESET SOLAR TRANS SCH POINTER                                      READSF 258
      <SOL-TRANS-SCH> = IPTSCH(ISCB,<SOL-TRANS-SCH>)                            BIGNAM  28
C              RESET MAX SOLAR GAIN, VIS TRANS SCHEDULE, AND MOVABLE-           READSF 261
C              INSULATION TMIN SCHEDULE POINTERS                                READSF 262
      <MAX-SOLAR-SCH> = IPTSCH(ISCB,<MAX-SOLAR-SCH>)                            BIGNAM  29
      <MIN-SOLAR-SCH> = IPTSCH(ISCB,<MIN-SOLAR-SCH>)                            -045n   46
      <VIS-TRANS-SCH> = IPTSCH(ISCB,<VIS-TRANS-SCH>)                            BIGNAM  30
      <CONDUCT-TMIN-SCH> = IPTSCH(ISCB,<CONDUCT-TMIN-SCH>)                      BIGNAM  31
      <CONDUCT-TMAX-SCH> = IPTSCH(ISCB,<CONDUCT-TMAX-SCH>)                      -045n   47
      <OPEN-SHADE-SCH> = IPTSCH(ISCB,<OPEN-SHADE-SCH>)                          BIGNAM  32
C              RESET SWITCHING SCHEDULE POINTER                                 READSF 271
      <SWITCH-SCH> = IPTSCH(ISCB,<SWITCH-SCH>)                                  BIGNAM  33
C              SET WIN-SHADE-TYPE TO NO-SHADE IF NO SHADING-SCHEDULE            READSF 274
      IF (<KGCURT>.EQ.0) <WIN-SHADE-TYPE> = 0                                   READSF 275
C              SET FLAG USED IN WINDOW BLIND CALCULATION                        VISBL 1052
C              AND MIN, MAX SLAT ANGLE FOR WINDOW WITH BLIND                    VISBL 1053
C              <IBLDF> = -1: WINDOW IS NOT LAYER TYPE (SET IN READSF)           BLIND3  25
C                         0: WINDOW IS LAYER TYPE WITHOUT BLIND                 BLIND3  26
C                            (SET IN READSF)                                    VISBL 1056
C                         1: WINDOW HAS BLIND THAT DOES NOT COVER WINDOW        VISBL 1057
C                              THIS HOUR (SET IN CALBLD FOR DINTIL)             VISBL 1058
C                         2: WINDOW HAS FIXED-SLAT BLIND (SET IN READSF         VISBL 1059
C                              FOR DCOF)                                        VISBL 1060
C                         3: WINDOW HAS ADJUSTABLE-SLAT BLIND (SET IN           VISBL 1061
C                              READSF FOR DCOF)                                 VISBL 1062
C                         2: WINDOW HAS FIXED-SLAT BLIND THAT COVERS            VISBL 1063
C                              WINDOW (SET IN CALBLD FOR DINTIL)                VISBL 1064
C                         3: WINDOW HAS ADJUSTABLE-SLAT BLIND THAT              VISBL 1065
C                              COVERS WINDOW (SET IN CALBLD FOR DINTIL)         VISBL 1066
      IS = 1                                                                    VISBL 1067
      MWL = <MWISTC>                                                            VISBL 1068
      IF(MWL.EQ.0) THEN                                                         VISBL 1069
C              NOT A LAYER-TYPE WINDOW                                          BLIND3  27
         <IBLDF> = -1                                                           VISBL 1071
      ELSE                                                                      VISBL 1072
C              COUNT NO. OF BLIND LAYERS FOR LAYER-TYPE WINDOW                  BLIND3  28
         <NLAYBLD> = 0                                                          VISBL 1074
         DO IS = 1,9                                                            VISBL 1075
            MWL = <MWISTC>                                                      VISBL 1076
            IF(MWL.EQ.0) GO TO 519                                              VISBL 1077
            IF(<IWLTYPE>.EQ.1) THEN                                             VISBL 1078
               <NLAYBLD> = <NLAYBLD> + 1                                        VISBL 1079
               <ANGSLATMIN> = <WLANGMIN>                                        VISBL 1080
               <ANGSLATMAX> = <WLANGMAX>                                        VISBL 1081
            ENDIF                                                               VISBL 1082
         ENDDO                                                                  VISBL 1083
  519    CONTINUE                                                               VISBL 1084
         IF(<NLAYBLD>.EQ.0) <IBLDF> = 0                                         VISBL 1085
         IF(<NLAYBLD>.NE.0.AND.<MWIS-ADJ>.EQ.1) <IBLDF> = 2                     VISBL 1086
         IF(<NLAYBLD>.NE.0.AND.<MWIS-ADJ>.NE.1) <IBLDF> = 3                     VISBL 1087
      ENDIF                                                                     VISBL 1088
C                                                                               -44d5c   1
C  Make sure <SKY-TRANS-ANG> & <SKY-TRANS-MULT> are properly formatted          -44d5c   2
C                                                                               -44d5c   3
      If (<WINDOW-TYPE>.GT.1) Then      !Domed skylight or Domed Tubular device -44d5c   4
        ITrErr1   = 0                                                           -44d5c   5
        ITrErr2   = 0                                                           -44d5c   6
        ITrErr3   = 0                                                           -44d5c   7
        ITrErr4   = 0                                                           -44d5c   8
        TrMultMin =  999.                                                       -44d5c   9
        TrMultMax = -999.                                                       -44d5c  10
        TrAngPast = -999.                                                       -44d5c  11
        II = 1                                                                  -44d5c  12
        If (ABS(<SKY-TRANS-ANG>) .GT. 0.001) ITrErr1 = 1                        -44d5c  13
        DO II=1,10                                                              -44d5c  14
          IF((<SKY-TRANS-ANG>.EQ.UNFILD) .OR.                                   -44d5c  15
     $       (<SKY-TRANS-MULT>.EQ.UNFILD)) EXIT                                 -44d5c  16
          IF(<SKY-TRANS-MULT>.GE.TrMultMax) TrMultMax=<SKY-TRANS-MULT>          -44d5c  17
          IF(<SKY-TRANS-MULT>.LE.TrMultMin) TrMultMin=<SKY-TRANS-MULT>          -44d5c  18
          IF(<SKY-TRANS-ANG>.LE.TrAngPast) ITrErr2 = 1                          -44d5c  19
          TrAngPast = <SKY-TRANS-ANG>                                           -44d5c  20
        ENDDO                                                                   -44d5c  21
        IF((<SKY-TRANS-ANG>.EQ.UNFILD).OR.(<SKY-TRANS-MULT>.EQ.UNFILD))         -44d5c  22
     $    II = II-1                                                             -44d5c  23
        If (<SKY-TRANS-ANG>.NE.90) ITrErr3 = 1                                  -44d5c  24
        If (TrMultMin .LT. 0.)     ITrErr4 = 1                                  -44d5c  25
        If (ITrErr1+ITrErr2+ITrErr3+ITrErr4 .GT. 0) Then                        -44d5c  26
          CALL MSGSIM(-1,0,0,0,0)               !abort level msg                -44d5c  27
          WRITE(IOUTPT,22)  (<IWINM>,II=1,8)                                    -44d5c  28
          If(ITrErr1.EQ.1) WRITE(IOUTPT,23)                                     -44d5c  29
     $          '   - The first angle value in list is not 0.0'                 -44d5c  30
          If(ITrErr2.EQ.1) WRITE(IOUTPT,23)                                     -44d5c  31
     $          '   - Angle list values are not in increasing order'            -44d5c  32
          If(ITrErr3.EQ.1) WRITE(IOUTPT,23)                                     -44d5c  33
     $          '   - Last Angle value in list is not 90.0'                     -44d5c  34
          If(ITrErr4.EQ.1) WRITE(IOUTPT,23)                                     -44d5c  35
     $          '   - A Transmittance Multiplier value is less than 0.0'        -44d5c  36
        Endif                                                                   -44d5c  37
   22   FORMAT (                                                                -44d5c  38
     $  12X,'Transmittance as a function of incidence angle inputs for',        -44d5c  39
     $  ' the WINDOW ',8A4/                                                     -44d5c  40
     $  12X,'is not properly specified. The following error(s) must be',        -44d5c  41
     $     ' corrected before a simulation can be performed.')                  -44d5c  42
   23   FORMAT ( 12X,A )                                                        -44d5c  43
      Endif                                                                     -44d5c  44
C                                                                               -44d5c  45
      MWI    = MWI + MWNLEN                                                     READSF 276
  520 CONTINUE                                                                  READSF 277
C              RESET DOOR POINTERS                                              READSF 278
  525 ND     = <NDOOR>                                                          READSF 279
      IF (ND .EQ. 0)  GO TO 535                                                 READSF 280
      <MXDOOR> = <MXDOOR> + IDRB - 1                                            READSF 281
      MD     = <MXDOOR>                                                         READSF 282
      DO 530 IDR=1,ND                                                           READSF 283
       CALL  FNATT( <IDRFN1NM>, <MDRFN1>, IA )                                  READSF 284
       CALL  FNATT( <IDRFN2NM>, <MDRFN2>, IA )                                  READSF 285
C              --- INCREMENT OH-FIN COUNT                                       READSF 286
      IF( <DR-OH-D> * <DR-OH-W>  .GT.  0. )  NOHFIN = NOHFIN + 1                READSF 287
      IF( <DR-LF-D> * <DR-LF-H>  .GT.  0. )  NOHFIN = NOHFIN + 1                READSF 288
      IF( <DR-RF-D> * <DR-RF-H>  .GT.  0. )  NOHFIN = NOHFIN + 1                READSF 289
      <MDRGEOM> = <MDRGEOM> + IGEOB - 1                                         READSF 290
      IF(<MDRSHADE>.NE.0) <MDRSHADE> = <MDRSHADE> + ISHADB - 1                  GEO1    11
      <MDRPROP> = <MDRPROP> + ICONSB - 1                                        READSF 291
      MD     = MD + MDRLEN                                                      READSF 292
  530 CONTINUE                                                                  READSF 293
  535 MX     = MX + MXLEN                                                       READSF 294
  540 CONTINUE                                                                  READSF 295
  550 CONTINUE                                                                  READSF 296
C              RESET UNDERGROUND SURFACE POINTERS                               READSF 297
      NSUG   = <NSUG>                                                           READSF 298
      IF (NSUG .EQ. 0)  GO TO 600                                               READSF 299
      <MZUG> = <MZUG> + IUGB - 1                                                READSF 300
      MU     = <MZUG>                                                           READSF 301
      DO 590 IU=1,NSUG                                                          READSF 302
       CALL  FNATT( <IUGFN1NM>, <MUGFN1>, IA )                                  READSF 303
       CALL  FNATT( <IUGFN2NM>, <MUGFN2>, IA )                                  READSF 304
      <MUGEOM> = <MUGEOM> + IGEOB - 1                                           GEO1    12
      <MUGPROPRL> = <MUGPROPRL> + ICONSB - 1                                    LDS1    18
      MU     = MU + MULEN                                                       READSF 306
  590 CONTINUE                                                                  READSF 307
  600 MZ     = MZ + MZLEN                                                       READSF 308
 5000 CONTINUE                                                                  READSF 309
C              TURN OFF DAYLTG SUMMARY RPTS IF NO DAYL CALC REQUESTED           READSF 320
      IF (NDAYCF.GT.0) GO TO 592                                                READSF 321
      DO 591 I=22,25                                                            READSF 322
  591 IREPRT(1,I) = 0                                                           IREPRT 113
      IREPRT(1,28) = 0                                                          44d5br 136
C              IF NO SUMMARY REPORTS, TURN ON LS-D                              READSF 324
      DO 593 I=16,30                                                            READSF 325
      IF (IREPRT(1,I).GT.0) GO TO 592                                           IREPRT 114
  593 CONTINUE                                                                  READSF 327
      IREPRT(1,19) = 1                                                          IREPRT 115
  592 CONTINUE                                                                  READSF 329
      IF (NDAYCF.EQ.0) GO TO 609                                                READSF 330
C              GET SPACE FOR DAYLIGHTING SUMMARY REPORT ARRAYS                  READSF 331
C              LS-G ARRAYS                                                      READSF 332
      IF (IREPRT(1,22).EQ.0) GO TO 602                                          IREPRT 116
      LZLSG  = 28 * NDAYCF                                                      READSF 334
      IZLSG  = MLAST + 1                                                        READSF 335
      CALL GETBUF(IA,LZLSG,MLAST)                                               READSF 336
      DO 601 I=1,LZLSG                                                          READSF 337
  601 ZLSG(IZLSG+I-1) = 0.                                                      READSF 338
      LZDREP = 6 * NDAYCF                                                       READSF 339
      IZDREP = MLAST + 1                                                        READSF 340
      CALL GETBUF(IA,LZDREP,MLAST)                                              READSF 341
      DO 612 I=1,LZDREP                                                         READSF 342
  612 ZDREP(IZDREP+I-1) = 0.                                                    READSF 343
  602 CONTINUE                                                                  READSF 344
C              LS-H ARRAY                                                       READSF 345
      IF (IREPRT(1,23).EQ.0) GO TO 604                                          IREPRT 117
      LZLSH  = 100 * NDAYCF                                                     READSF 347
      IZLSH  = MLAST + 1                                                        READSF 348
      CALL GETBUF(IA,LZLSH,MLAST)                                               READSF 349
      DO 603 I=1,LZLSH                                                          READSF 350
  603 ZLSH(IZLSH+I-1) = 0.                                                      READSF 351
  604 CONTINUE                                                                  READSF 352
C              LS-I ARRAY                                                       READSF 353
      IF (IREPRT(1,24).EQ.0) GO TO 606                                          IREPRT 118
      DO 605 I = 1,4                                                            READSF 355
      DO 605 J = 1,25                                                           READSF 356
      BLSI(I,J) = 0.                                                            READSF 357
  605 CONTINUE                                                                  READSF 358
  606 CONTINUE                                                                  READSF 359
C              LS-J ARRAYS                                                      READSF 360
      IF (IREPRT(1,25).EQ.0) GO TO 608                                          IREPRT 119
      LZLSJ  = 18 * NDAYCF                                                      READSF 362
      IZLSJM = MLAST + 1                                                        READSF 363
      CALL GETBUF(IA,LZLSJ,MLAST)                                               READSF 364
      IZLSJY = MLAST + 1                                                        READSF 365
      CALL GETBUF(IA,LZLSJ,MLAST)                                               READSF 366
      DO 607 I=1,LZLSJ                                                          READSF 367
      ZLSJM(IZLSJM+I-1) = 0.                                                    READSF 368
  607 ZLSJY(IZLSJY+I-1) = 0.                                                    READSF 369
  608 CONTINUE                                                                  READSF 370
  609 CONTINUE                                                                  READSF 371
C               LS-K ARRAYS                                                     READSF 372
      IF (IREPRT(1,26).EQ.0) GO TO 6000                                         IREPRT 120
      LZLSK  = 12*(NSP+1)                                                       READSF 374
      IZLSK  = MLAST+1                                                          READSF 375
      CALL GETBUF(IA,LZLSK,MLAST)                                               READSF 376
      DO 4010 I=1,LZLSK                                                         READSF 377
 4010 ZLSK(IZLSK+I-1)=0.                                                        READSF 378
 6000 CONTINUE                                                                  READSF 379
C               LS-L ARRAYS                                                     READSF 380
      IF (IREPRT(1,27).EQ.0) GO TO 7000                                         IREPRT 121
      LZLSL  = 6*NSP                                                            READSF 382
      IZLSL  = MLAST+1                                                          READSF 383
      CALL GETBUF(IA,LZLSL,MLAST)                                               READSF 384
      DO 4020 I=1,LZLSL                                                         READSF 385
 4020 ZLSL(IZLSL+I-1)=0.                                                        READSF 386
 7000 CONTINUE                                                                  READSF 387
C              LS-M ARRAY                                                       44d5br 137
      IF((IREPRT(1,28).NE.0) .AND. (NDAYCF.NE.0) ) THEN                         44d5br 138
        LZLSM  = 200 * NDAYCF                                                   44d5br 139
        IZLSM  = MLAST + 1                                                      44d5br 140
        CALL GETBUF(IA,LZLSM,MLAST)                                             44d5br 141
        DO I=1,LZLSM                                                            44d5br 142
          ZLSM(IZLSM+I-1) = 0.                                                  44d5br 143
        ENDDO                                                                   44d5br 144
      ENDIF                                                                     44d5br 145
C              RESET INTERIOR WALL POINTERS                                     READSF 388
      IF (NIW .EQ. 0)  GO TO 620                                                READSF 389
      MI     = IIWB                                                             READSF 390
      DO 610 IW=1,NIW                                                           READSF 391
       CALL  FNATT( <IIWFN1NM>, <MIWFN1>, IA )                                  READSF 392
       CALL  FNATT( <IIWFN2NM>, <MIWFN2>, IA )                                  READSF 393
C              PTR TO CONSTRUCTION WITH IFR                                     READSF 394
      <MIWPROPRL> = <MIWPROPRL> + ICONSB - 1                                    READSF 395
C              PTR TO CONSTRUCTION W/O IFR (FOR DELAYED INT WALLS)              READSF 396
      <MIWPROP> = <MIWPROP> + ICONB2 - 1                                        READSF 397
      <MZIN> = (<MZIN>-1)*MZLEN + ISPB                                          READSF 398
      IF (<MZNEXTTO> .GT. 0)  <MZNEXTTO> = (<MZNEXTTO>-1)*MZLEN + ISPB          READSF 399
      <MIWGEOM> = <MIWGEOM> + IGEOB - 1                                         READSF 400
C                                                                               READSF 401
C            RESET INT WINDOW POINTERS                                          READSF 402
C                                                                               READSF 403
      NIWN = <NIWIN>                                                            READSF 404
      IF (NIWN.EQ.0) GO TO 613                                                  READSF 405
      <MIWIN> = <MIWIN> + IWINB - 1                                             READSF 406
      MWI = <MIWIN>                                                             READSF 407
      DO 611 IWIN = 1,NIWN                                                      READSF 408
      DO 689 IS=1,9                                                             VISBL 1089
  689 IF (<MWISTC>.NE.0) <MWISTC> = <MWISTC> + IWLB - 1                         BLIND   57
      <MWIS-SCH> = IPTSCH(ISCB,<MWIS-SCH>)                                      BIGNAM  34
      <MWIS-TRIG> = IPTSCH(ISCB,<MWIS-TRIG>)                                    BIGNAM  35
      <MWIB-SCH> = IPTSCH(ISCB,<MWIB-SCH>)                                      BIGNAM  36
      <MWIB-TRIG> = IPTSCH(ISCB,<MWIB-TRIG>)                                    BIGNAM  37
      <MWIGEOM> = <MWIGEOM> + IGEOB - 1                                         READSF 409
      <MWIPRP> = <MWIPRP> + IGTB - 1                                            READSF 410
C            RESET SHADING, CONDUCTANCE, AND SOLAR TRANS SCHEDULE PTRS          READSF 411
      <KGCURT> = IPTSCH(ISCB,<KGCURT>)                                          BIGNAM  38
      <KGCON> = IPTSCH(ISCB,<KGCON>)                                            BIGNAM  39
      <SOL-TRANS-SCH> = IPTSCH(ISCB,<SOL-TRANS-SCH>)                            BIGNAM  40
C            RESET MAX-SOLAR-GAIN, VIS-TRANS-SCH, AND MOVABLE INSULATION        READSF 416
C            T-MIN SCHEDULE POINTERS                                            READSF 417
      <MAX-SOLAR-SCH> = IPTSCH(ISCB,<MAX-SOLAR-SCH>)                            BIGNAM  41
      <MIN-SOLAR-SCH> = IPTSCH(ISCB,<MIN-SOLAR-SCH>)                            -045n   48
      <VIS-TRANS-SCH> = IPTSCH(ISCB,<VIS-TRANS-SCH>)                            BIGNAM  42
      <CONDUCT-TMIN-SCH> = IPTSCH(ISCB,<CONDUCT-TMIN-SCH>)                      BIGNAM  43
      <CONDUCT-TMAX-SCH> = IPTSCH(ISCB,<CONDUCT-TMAX-SCH>)                      -045n   49
      MWI = MWI + MWNLEN                                                        READSF 424
  611 CONTINUE                                                                  READSF 425
  613 CONTINUE                                                                  READSF 426
      MI     = MI + MIWLEN                                                      READSF 427
  610 CONTINUE                                                                  READSF 428
C              RESET INTERIOR WALL POINTER LIST                                 READSF 429
      IWP1   = IIWPB - 1                                                        READSF 430
      DO 615 IW=1,NIWP                                                          READSF 431
  615 IA(IWP1+IW) = IA(IWP1+IW) + IIWB - 1                                      READSF 432
  620 CONTINUE                                                                  GEO1    13
C              RESET CONSTRUCTION POINTERS                                      READSF 440
      IF (NCONS .EQ. 0)  GO TO 690                                              READSF 441
      MP     = ICONSB                                                           READSF 442
      DO 680 IC=1,NCONS                                                         READSF 443
      IF (<MPEXPAR> .NE. 0)  <MPEXPAR> = <MPEXPAR> + IWPB - 1                   READSF 444
  680 MP     = MP + <MPLEN>                                                     READSF 445
      MP = ICONB2                                                               READSF 446
      DO 685 IC=1,NCONS                                                         READSF 447
      IF (<MPEXPAR>.NE.0) <MPEXPAR> = <MPEXPAR> + IWPB - 1                      READSF 448
  685 MP = MP + <MPLEN>                                                         READSF 449
  690 CONTINUE                                                                  READSF 450
C    WRITES THE LV-M REPORT (DOE2-UNITS TABLE AND CONVERSION FCTORS)            READSF 451
      IF (IREPRT(1,13).EQ.0)  GOTO 2020                                         IREPRT 122
C              PRINT UNITS TABLE                                                -042L1r  9
      WRITE(IOUTPT,2001,ERR=2010) ((TITLE(I,J), I=1,10), J=1,2),                -042L1r 10
     $                             (VERS(I),I=1,2),                             -042L1r 11
     $            (CLOCK(I),I=1,8),((TITLE(I,J),I=1,10),J=3,5)                  -042L1r 12
 2010 CONTINUE                                                                  -042L1r 13
 2001 FORMAT(1H1,20A4,' DOE-',2A4,2X,7A4,3HRUN,I3 / 1X,30A4)                    -042L1r 14
      WRITE(IOUTPT,2002) (IWDID(I),I=1,5)                                       -042L1r 15
 2002 FORMAT(45H REPORT- LV-M DOE-2.2 Units Conversion Table ,                  -042L1r 16
     $        44X,18H    WEATHER FILE- ,5A4 / 1X, 129(1H-) /)                   -042L1r 17
      WRITE(IOUTPT,2003)                                                        -042L1r 18
 2003 FORMAT(20X,7HENGLISH,5X,14HMULTIPLIED BY ,2X,5HGIVES,3X,6HMETRIC,         -042L1r 19
     $       6X,14HMULTIPLIED BY ,2X,5HGIVES,3X,7HENGLISH/)                     -042L1r 20
      DO I=0,299                                                                -042L1r 21
        Ilastu = 300-I                                                          -042L1r 22
        IF((JUNITT(1,Ilastu,2).ne.LASTU(1)).and.                                -042L1r 23
     $     (JUNITT(2,Ilastu,2).ne.LASTU(2))) EXIT                               -042L1r 24
      ENDDO                                                                     -042L1r 25
      DO I=1,Ilastu                                                             -042L1r 26
        A      = 1./VKONV(I)                                                    -042L1r 27
        IF(I.NE.8)                                                              -042L1r 28
     $    WRITE(IOUTPT,2000) I,(JUNITT(J,I,2),J=1,4),VKONV(I),                  -042L1r 29
     $                         (JUNITT(J,I,1),J=1,4),                           -042L1r 30
     $                         A,(JUNITT(J,I,2),J=1,4)                          -042L1r 31
 2000   FORMAT(9X,I3,8X,4A4,2(4X,F13.6,3X,4A4))                                 -042L1r 32
      ENDDO                                                                     -042L1r 33
 2020 CONTINUE                                                                  READSF 467
C              WRITE THE REPORT HEADER RECORDS                                  READSF 468
      CALL REPHD                                                                READSF 469
c              Set up hourly reports                                            HRr     99
      CALL HourlyReports(201,xx)                                                HRr    100
      MLAST = IAX                                                               HRr    101
C              ADJUST SPACE DATA                                                READSF 484
      BLDVOL = 0.                                                               READSF 485
      BLDARE = 0.                                                               READSF 486
      BLDARG = 0.                                                               -035     1
      BLDVOG = 0.                                                               -035     2
      MZ     = ISPB                                                             READSF 487
C              LOOP OVER ZONES                                                  READSF 488
      DO 10000 IZ=1,NSP                                                         READSF 489
C              SET ZONE NUMBER                                                  READSF 499
      <IZNUM> = IZ                                                              READSF 500
      ZUGFUA = 0.                                                               READSF 501
      ZUGWUA = 0.                                                               READSF 502
      MWF    = <MZWF>                                                           READSF 503
C              SET ASHRAE WEIGHTING FACTOR FLAG                                 READSF 504
      <FC> = (<COND-V0>+<COND-V1>+<COND-V2>)/                                   READSF 505
     1           (1.-<COND-W1>-<COND-W2>)                                       READSF 506
      <ZCONI> = 0.                                                              READSF 507
C            RESET EXTERIOR WALL AND WINDOW DATA FOR THIS SPACE                 READSF 508
      IF( <NEXTS> .GT. 0 )  CALL  EXTPRP(IERRF)                                 READSF 509
C            RESET INTERIOR WALL AND INTERIOR WINDOW DATA FOR THIS SPACE        READSF 510
      IF (<NINTS>.NE.0) CALL IWPRP                                              READSF 511
      IF( IwinReturn .ne. 0 ) RETURN                                            -042L4  87
C              GET U*A FOR UNDERGROUND SURFACES                                 READSF 512
      IF( <MZUG> .GT. 0 )  CALL  UGPRP ( ZUGFUA, ZUGWUA )                       READSF 513
C              CALCULATE BUILDING AREA AND VOLUME                               READSF 514
      ZMULT  = <ZMULT> * <FLOOR-MULT>                                           READSF 515
      IF (<ISPTYPE> .EQ. 1) BLDARE = BLDARE + ZMULT * <ZFLRAR>                  READSF 516
      IF (<ISPTYPE> .EQ. 1 .OR. <ISPTYPE> .EQ. 2)                               -035     3
     $          BLDARG = BLDARG + ZMULT * <ZFLRAR>                              -035     4
      IF (<ISPTYPE> .EQ. 1 .OR. <ISPTYPE> .EQ. 3)                               READSF 517
     1          BLDVOL = BLDVOL + ZMULT * <ZVOL>                                READSF 518
      IF (<ISPTYPE> .EQ. 1 .OR. <ISPTYPE> .EQ. 2 .OR. <ISPTYPE> .EQ. 3)         -035     5
     $          BLDVOG = BLDVOG + ZMULT * <ZVOL>                                -035     6
C              WIND SPEED MULTIPLIER BASED ON TERRAIN PARAMETERS.               READSF 519
C              FREE-STREAM SITE WIND SPEED (AT ZONE HEIGHT) =                   READSF 520
C              WSTMUL * WEATHER STATION WIND SPEED.                             READSF 521
      BLDHT = <ZZ> + <ZVOL>/<ZFLRAR>                                            READSF 522
      <WSTMUL> = (TP1*(AMAX1(BLDHT,0.)/32.8)**TP2)                              -053     1
     $           / (WSTP1*(WSHGT/32.8)**WSTP2) * SHCOEF                         -046r   53
      CALL INFPRP                                                               READSF 524
C              CALCULATE ZONE LIGHT LOAD (WITHOUT SCHEDULE) IN BTU              READSF 525
      <ZQLT> = 0.                                                               LTSYS1  45
      DO IL = 1,5                                                               LTSYS1  46
         <ZQLTSUBZ> = <ZLTKW>/KWBTU                                             LTSYS1  47
         <ZQLT> = <ZQLT> + <ZQLTSUBZ>                                           LTSYS1  48
      ENDDO                                                                     LTSYS1  49
C              DO SAME FOR TASK LIGHTING LOAD                                   READSF 527
      <ZQTLT> = (<ZTLTKW> + <ZTLTWSF>*<ZFLRAR>/1000.)/KWBTU                     LDS2     3
C              CALCULATE ZONE ELEC EQUIP LOAD (NO SCHED) IN BTU                 READSF 529
      DO IL = 1,5                                                               LTSYS1  50
        <ZQEQ1SUBZ> = <EQUIPMENT-KW>/KWBTU                                      -045br 218
      ENDDO                                                                     LTSYS1  52
C              GET OTHER (SOURCE) EQUIP SENSIBLE AND LATENT LOADS               READSF 534
      <ZQEQ2L> = <ZQEQ2>*<ZFEQ2L>                                               READSF 535
      <ZQEQ2S> = <ZQEQ2>*<ZFEQ2S>                                               READSF 536
      IM     = 1                                                                -045br 219
      TZONER = <ZTEMP> + 460.                                                   -045br 220
      PPN    = <ZPPLNO>                                                         READSF 542
C              IF PEOPLE-ACTIVITY IS INPUT, CALCULATE SENSIBLE AND              READSF 543
C              LATENT OCCUPANT LOAD                                             READSF 544
      IF(<ZPPLAC>.EQ.450.)  GOTO 800                                            -023    55
      PPA    = <ZPPLAC> * 0.01                                                  READSF 546
C              SET SPACE TEMPERATURE TO 75 DEG F IN SENSIBLE -                  READSF 547
C              LATENT SPLIT FORMULA                                             READSF 548
      TZ = 75.                                                                  READSF 549
      <ZQPPLS> = (28. + PPA*(266.4-10.25*PPA)+TZ*                               -023    56
     1                   (1.2-PPA*(3.07-.128*PPA)))                             -023    57
      <ZPPLS>  = <ZQPPLS>                                                       -023    58
      <ZQPPLL> = (206. - PPA*(214.9-13.8*PPA)-TZ*                               -023    59
     1                   (6.7-PPA*(4.44-.222*PPA)))                             -023    60
      <ZQPPLL> = AMAX1(0.2*<ZPPLAC>,<ZQPPLL>)                                   -023    61
      <ZPPLL>  = <ZQPPLL>                                                       -023    62
      <ZQPPLS> = <ZQPPLS>*PPN                                                   -023    63
      <ZQPPLL> = <ZQPPLL>*PPN                                                   -023    64
      GO TO 900                                                                 READSF 555
C              OTHERWISE, USE PEOPLE-LATENT, AND PEOPLE-SENSIBLE                READSF 556
  800 <ZQPPLS> = PPN*<ZPPLS>                                                    READSF 557
      <ZQPPLL> = PPN*<ZPPLL>                                                    READSF 558
  900 CONTINUE                                                                  READSF 559
C              SAVE U*A OF UNDERGROUND SURFACES                                 READSF 562
      <ZUGFUA> = ZUGFUA                                                         READSF 563
      <ZUGWUA> = ZUGWUA                                                         READSF 564
      <QZINTS> = 0.                                                             READSF 565
      MZ     = MZ + MZLEN                                                       READSF 566
10000 CONTINUE                                                                  READSF 567
      IF( IREPRT(1,1) .NE. 0 )  CALL  RLVA                                      BIGNM4   1
      IF( IREPRT(1,2) .NE. 0 )  CALL  RLVB                                      BIGNM4   2
      IF( IREPRT(1,3) .NE. 0 )  CALL  RLVC                                      BIGNM4   3
      IF( IREPRT(1,4) .NE. 0 )  CALL  RLVD                                      BIGNM4   4
      IF( IREPRT(1,5) .NE. 0 )  CALL  RLVE                                      BIGNM4   5
      IF( IREPRT(1,6) .NE. 0 )  CALL  RLVF                                      BIGNM4   6
      IF( IREPRT(1,7) .NE. 0 )  CALL  RLVG                                      BIGNM4   7
      IF( IREPRT(1,8) .NE. 0 )  CALL  RLVH                                      BIGNM4   8
      IF( IREPRT(1,9) .NE. 0 )  CALL  RLVI                                      BIGNM4   9
      IF( IREPRT(1,10) .NE. 0 )  CALL  RLVJ                                     BIGNM4  10
      CALL SPMISC                                                               READSF 568
      IF( IwinReturn .ne. 0 ) RETURN                                            -042L4  88
C              PREPARE LDSOUT BUFFER POINTER FOR EACH SPACE                     READSF 569
      MZ     = ISPB                                                             READSF 570
      LLDSB  = 0                                                                READSF 571
      DO 12000 IZ = 1, NSP                                                      READSF 572
      <LDSOUT> = LLDSB                                                          READSF 573
      LLDSB  = LLDSB + L1                                                       READSF 574
      IF(<FEATURE>.EQ.1) LLDSB = LLDSB + 4                                      READSF 575
      NIW1 = <NINTS>                                                            READSF 576
      IF (NIW1 .EQ. 0)  GO TO 12105                                             READSF 577
      DO 12100 IW1 = 1,NIW1                                                     READSF 578
      MI = IA(<MZINT>+IW1-1)                                                    READSF 579
C            INCREM LLDSB FOR SUNSPACE COM WALLS DEFINED IN THIS SPACE          READSF 580
      IF (<MZIN>.EQ.MZ.AND.<IWSSPID>.EQ.1) LLDSB = LLDSB + 4                    READSF 581
12100 CONTINUE                                                                  READSF 582
12105 MZ = MZ + MZLEN                                                           READSF 583
12000 CONTINUE                                                                  READSF 584
      LLDSOU = LLDSB                                                            READSF 585
C            SET UP HOURLY OUTPUT BUFFER.                                       READSF 586
C            SAVE SPACE FOR ONE DAY OF DATA.                                    READSF 587
      IBLDSB = MLAST + 1                                                        READSF 588
      CALL GETBUF(IA,LLDSB*24,MLAST)                                            READSF 589
      IELDSB = MLAST                                                            READSF 590
      BNAREA = BLDARE                                                           READSF 591
      IF (ITYPLS(BGAREA) .EQ. ITYPLS(UNFILD))  BGAREA = BLDARE                  READSF 592
      IF (BNAREA .LE. 0.)  THEN                                                 -035     7
          CALL MSGSIM(-2,N,N,N,N)                                               -035     8
          IF(BGAREA .GT. 0.)  THEN                                              -035     9
            BNAREA = BGAREA                                                     -035    10
            BLDARE = BGAREA                                                     -035    11
          ELSE                                                                  -035    12
            BLDARE = BLDARG                                                     -035    13
            BGAREA = BLDARG                                                     -035    14
            BNAREA = BLDARG                                                     -035    15
            BLDVOL = BLDVOG                                                     -035    16
          ENDIF                                                                 -035    17
          WRITE (IOUTPT,9994)                                                   -035    18
 9994     FORMAT(12x,' Building CONDITIONED area is zero',                      -035    19
     $     ' so an UNCONDITIONED building is being assumed.')                   -035    20
      END IF                                                                    -035    21
C              RESET SHADE GEOMETRY PTRS.                                       GEO1    14
C              NSHTOT IS TOTAL NUMBER OF SHADES (GLOBAL,                        GEO1    15
C              OH/FIN, SETBACK)                                                 GEO1    16
      MH = ISHADB                                                               GEO1    17
      DO IS=1,NSHTOT                                                            GEO1    18
         <MSGEOM> = <MSGEOM> + IGEOB - 1                                        GEO1    19
         MH = MH + MSHLEN                                                       GEO1    20
      ENDDO                                                                     GEO1    21
C              RESET GLOBAL SHADE TRANSMITTANCE SCHEDULE PTRS                   GEO1    22
      MH = ISHADB                                                               GEO1    23
      DO ISHD = 1,NGSHAD                                                        GEO1    24
         <KTR-SCH> = IPTSCH(ISCB,<KTR-SCH>)                                     BIGNAM  44
      MH = MH + MSHLEN                                                          GEO1    26
      ENDDO                                                                     GEO1    27
C              REWRITE INTERIOR WALL DATA                                       READSF 595
      MI     = IIWB                                                             READSF 596
      NIWC   = NIW                                                              READSF 597
      IF( NIW .EQ. 0 )  GO TO 29000                                             READSF 598
      DO  21000  IW = 1 , NIW                                                   READSF 599
      IF(<IW-TYPE>.GT.2) GO TO 20009                                            READSF 600
C            SKIP INT WALLS BET SUNSPACE AND REGULAR SPACE.  HEAT TRANS         READSF 601
C            ACROSS THESE WALLS IS CALCULATED IN SYSTEMS.                       READSF 602
      IF (<IWSSPID>.EQ.1) GO TO 20009                                           READSF 603
      MP = <MIWPROPRL>                                                          READSF 604
      U = 1./((1./<UFACTR>) + <IW-IFR>)                                         READSF 605
      C      = <IWAR> * U                                                       READSF 606
      MZ     = <MZIN>                                                           READSF 607
      ZM1    = <ZMULT>                                                          READSF 608
      MZ1    = MZ                                                               READSF 609
      TZ1    = <ZTEMP>                                                          READSF 610
      MZ     = <MZNEXTTO>                                                       READSF 611
      ZM2    = <ZMULT>                                                          READSF 612
      Q      = C * ( <ZTEMP> - TZ1 )                                            READSF 613
C              FOR MZTO SPACE, STORE LOAD DUE TO INTERIOR WALLS                 READSF 614
      <QZINTS> = <QZINTS> - Q * ZM1                                             READSF 615
      MZ     = MZ1                                                              READSF 616
C              FOR MZFROM SPACE, STORE LOAD DUE TO INTERIOR W@ALLS              READSF 617
      <QZINTS> = <QZINTS> + Q * ZM2                                             READSF 618
20009 CONTINUE                                                                  READSF 619
      MI     = MI + MIWLEN                                                      READSF 620
21000 CONTINUE                                                                  READSF 621
29000 CONTINUE                                                                  READSF 622
      IF ( IREPRT(1,14) .NE. 0 )     CALL  RLVN                                 IREPRT 133
C              IF REQUESTED, DUMP OUT REWRITTEN STANDARD FILE                   READSF 624
C              AND POINTERS                                                     READSF 625
      IF (IREPRT(1,32) .EQ. 0)  GO TO 32000                                     COMB01   3
      WRITE(IOUTPT,31000) LENGTH,NVECT,NSCHED,NWF,NWPAR,NCONS,NGT,NGEO,N        READSF 628
     1GSHAD, NSHTOT,                                                            GEO1    28
     2            NWIN,NDOOR,NEW,NUG,NSP,NIW,NWL,NRB,NHRP,NDESDY,               BLIND   62
     3            ISCB,IWFB,IWPB,ICONSB,IGTB,IGEOB,ISHADB,IWINB,IDRB,           READSF 631
     4       IEWB,IUGB,ISPB,IIWPB,IIWB,IWLB,Irb,ISTFB,ICONB2                    HRr    102
      WRITE(IOUTPT,31001)                         Ihrp,MWFLEN,MRLEN,            HRr    103
     2            MSHLEN,MWNLEN,MDRLEN,MXLEN,MULEN,MZLEN,MIWLEN,Lrb,            HRr    104
     3            Lhrp,MWLLEN,NRUNPD,IDSFLG,BGAREA,IHPP(1),                     HRr    105
     4            IHPP(2),ICPP(1),ICPP(2),LDSTYP,NOTH,NITH,LMTB,NOPSRF,         BLIND   65
     5            NSURF,ISPCDB,IOTHB,ILHB,ISSHDB,NSSHD,IOHFIB,                  BLIND   66
     6            NOHFIN,MSTLEN,LSTFT,NFL,IFLB,MFLLEN,                          -036    10
     7            IIWPB,IZQCMB,IOHFIB,IZLSK,IZLSL,NIWP,NBR                      -036    11
      WRITE(IOUTPT,31050,ERR=99001) (CLOCK(I),I=1,8)                            READSF 640
99001 CONTINUE                                                                  READSF 641
      CALL DUMPIT(20HISPLST              ,ISPLST(1),NSP)                        READSF 642
      CALL DUMPIT(20HTITLE                ,TITLE,50)                            READSF 643
      CALL DUMPIT(20HIREPRT               ,IREPRT(1,1),36)                      IREPRT 136
      CALL DUMPIT(20HLOCALD              ,STALAT,30)                            READSF 645
      CALL DUMPIT(20HDESDYQ               ,DESDYQ,34)                           DDAY1  108
      CALL DUMPIT(20HBRES                 ,BRES,8)                              READSF 647
      CALL DUMPIT(20HIRUNPD              ,IRUNPD,NRUNPD*6)                      READSF 648
      LENGTH = MLAST                                                            READSF 649
      CALL DUMPIT(20HSTANDARD FILE        ,AA(1),LENGTH)                        READSF 650
      CALL DUMPIT(20HGTEMP                ,GTEMP,12)                            READSF 651
      CALL DUMPIT(20HCLEARNESS NUMBERS    ,CLR,12)                              READSF 652
      CALL DUMPIT(20HATM MOISTURE        ,ATMMOI,12)                            READSF 653
      CALL DUMPIT(20HATM TURBIDITY       ,ATMTUR,12)                            READSF 654
31000 FORMAT(/                                                                  -42c     6
     $4X,9HLENGTH = ,I8,4X,9HNVECT =  ,I8,4X,9HNSCHED = ,I8/                    -42c     7
     $4X,9HNWF =    ,I8,4X,9HNWPAR =  ,I8,4X,9HNCONS =  ,I8/                    -42c     8
     $4X,9HNGT =    ,I8,4X,9HNGEO =   ,I8,4X,9HNGSHAD = ,I8/                    -42c     9
     $4X,9HNSHTOT = ,I8,4X,9HNWIN =   ,I8,4X,9HNDOOR =  ,I8/                    -42c    10
     $4X,9HNEW =    ,I8,4X,9HNUG =    ,I8,4X,9HNSP =    ,I8/                    -42c    11
     $4X,9HNIW =    ,I8,4X,9HNWL =    ,I8,4X,9HNRB =    ,I8/                    -42c    12
     $4X,9HNHRP =   ,I8,4X,9HNDESDY = ,I8,4X,9HIsched = ,I8/                    -42c    13
     $4X,9HIWFB =   ,I8,4X,9HIWPB =   ,I8,4X,9HICONSB = ,I8/                    -42c    14
     $4X,9HIGTB =   ,I8,4X,9HIGEOB =  ,I8,4X,9HISHADB = ,I8/                    -42c    15
     $4X,9HIWINB =  ,I8,4X,9HIDRB =   ,I8,4X,9HIEWB =   ,I8/                    -42c    16
     $4X,9HIUGB =   ,I8,4X,9HISPB =   ,I8,4X,9HIIWPB =  ,I8/                    -42c    17
     $4X,9HIIWB =   ,I8,4X,9HIWLB =   ,I8,4X,9HIRBB =   ,I8/                    -42c    18
     $4X,9HISTFB =  ,I8,4X,9HICONB2 = ,I8)                                      -42c    19
31001 FORMAT(                                                                   -42c    20
     $4X,9HIHRB =   ,I8,4X,9HMWFLEN = ,I8,4X,9HMRLEN =  ,I8/                    -42c    21
     $4X,9HMSHLEN = ,I8,4X,9HMWNLEN = ,I8,4X,9HMDRLEN = ,I8/                    -42c    22
     $4X,9HMXLEN =  ,I8,4X,9HMULEN =  ,I8,4X,9HMZLEN =  ,I8/                    -42c    23
     $4X,9HMIWLEN = ,I8,4X,9HMRBLEN = ,I8,4X,9HMHRLEN = ,I8/                    -42c    24
     $4X,9HMWLLEN = ,I8,4X,9HNRUNPD = ,I8,4X,9HIDSFLG = ,I8/                    -42c    25
     $4X,9HBGAREA = ,F10.2,9H  IHPP = ,2I3,4X,9HICPP =    ,2I3/                 -42c    26
     $4X,9HLDSTYP = ,I8,4X,9HNOTH =   ,I8,4X,9HNITH =   ,I8/                    -42c    27
     $4X,9HLMTB =   ,I8,4X,9HNOPSRF = ,I8,4X,9HNSURF =  ,I8/                    -42c    28
     $4X,9HISPCDB = ,I8,4X,9HIOTHB =  ,I8,4X,9HILHB =   ,I8/                    -42c    29
     $4X,9HISSHDB = ,I8,4X,9HNSSHD =  ,I8,4X,9HIOHFIB = ,I8/                    -42c    30
     $4X,9HNOHFIN = ,I8,4X,9HMSTLEN = ,I8,4X,9HLSTFT =  ,I8/                    -42c    31
     $4X,9HNFL =    ,I8,4X,9HIFLB =   ,I8,4X,9HMFLLEN = ,I8/                    -42c    32
     $4X,9HIIWPB=   ,I8,4X,9HIZQCMB=  ,I8,4X,9HIOHFIB = ,I8/                    -42c    33
     $4X,9HIZLSK=   ,I8,4X,9HIZLSL=   ,I8,4X,9HNIWP   = ,I8/                    -42c    34
     $4X,9HNBR  =   ,I8)                                                        -42c    35
31050 FORMAT(1H ,8HCLOCK = ,7A4,2X,I2//)                                        READSF 681
32000 CONTINUE                                                                  READSF 682
C              CHECK IF THE FIRST THREE VERTICES OF AN EXTERIOR                 COLLN   13
C              WALL ARE COLLINEAR (WHICH CAUSES ERROR IN SHADING                COLLN   14
C              CALC IN FFDIF AND SHDWIN). IF SO, RENUMBER VERTICES              COLLN   15
C              SO THAT FIRST THREE ARE NOT COLINEAR.                            COLLN   16
      IF(NEW.EQ.0) GO TO 32200                                                  COLLN   17
      MX = IEWB                                                                 COLLN   18
      DO 32150 IEXT = 1,NEW                                                     COLLN   19
      MG = <MXGEOM>                                                             COLLN   20
      NV = IA(MG)                                                               COLLN   21
      DO IV = 1,NV                                                              COLLN   22
        I1 = IV                                                                 COLLN   23
          IF(I1.GT.NV) I1 = I1 - NV                                             COLLN   24
        I2 = IV + 1                                                             COLLN   25
          IF(I2.GT.NV) I2 = I2 - NV                                             COLLN   26
        I3 = IV + 2                                                             COLLN   27
          IF(I3.GT.NV) I3 = I3 - NV                                             -42c    36
        DO J = 1,3                                                              COLLN   29
          V1(J)= AA(MG+3*(I1-1)+J)                                              COLLN   30
          V2(J)= AA(MG+3*(I2-1)+J)                                              COLLN   31
          V3(J)= AA(MG+3*(I3-1)+J)                                              COLLN   32
        ENDDO                                                                   COLLN   33
        DO J = 1,3                                                              COLLN   34
          V21(J) = V1(J) - V2(J)                                                COLLN   35
          V23(J) = V3(J) - V2(J)                                                COLLN   36
        ENDDO                                                                   COLLN   37
        CALL DCROSS(V21,V23,VNM)                                                COLLN   38
        DVNM = DDOT(VNM,VNM)                                                    COLLN   39
C               COLLINEARITY TEST                                               COLLN   40
        IF(DVNM.GT.0.0001) GO TO 32250                                          COLLN   41
      ENDDO                                                                     COLLN   42
C              NO SUCCESSIVE NON-COLLINEAR VERTICES                             COLLN   43
      CALL MSGSIM(-1,0,0,0,0)                                                   -041Pr   1
      WRITE (IOUTPT,32950) (IA(MX+II-1),II=1,8)                                 COLLN   45
32950 FORMAT(12X,'The polygon shape of EXTERIOR-WALL ',8A4/                     COLLN   46
     $         12X,'is illegal.  Correct shape and try again.')                 COLLN   47
      Call MessageBox(NULL,'An illegal POLYGON was found for an'                -051    92
     &  //' EXTERIOR-WALL (see output file for details) - ABORTING'             -051    93
     &  //char(0),'READSF Errors'//char(0), MB_OK+MB_ICONSTOP                   -051    94
     &  +MB_TASKMODAL )                                                         -051    95
      Return                                                                    -050x   19
32250 CONTINUE                                                                  COLLN   49
C              FOUND THREE SEQUENTIAL NON-COLLINEAR VERTICES.                   COLLN   50
C              IF FIRST THREE NON-COLLINEAR, NOTHING TO DO                      COLLN   51
      IF(IV.EQ.1) GO TO 32100                                                   COLLN   52
C              RENUMBER VERTICES SO THAT NEW VERTICES 1,2 AND                   COLLN   53
C              3 ARE NOT COLLINEAR.                                             COLLN   54
C              VERTICES IN ORIGINAL ORDER                                       COLLN   55
      DO I = 1,NV                                                               COLLN   56
        DO J = 1,3                                                              COLLN   57
          V(I,J) = AA(MG+3*(I-1)+J)                                             COLLN   58
        ENDDO                                                                   COLLN   59
      ENDDO                                                                     COLLN   60
      LV = NV - I1 + 1                                                          COLLN   61
      DO I = 1,NV                                                               COLLN   62
        DO J = 1,3                                                              COLLN   63
          IF(I.LE.LV) THEN                                                      COLLN   64
            AA(MG+3*(I-1)+J) = V(I1-1+I,J)                                      COLLN   65
          ELSE                                                                  COLLN   66
            AA(MG+3*(I-1)+J) = V(I1-1+I-NV,J)                                   COLLN   67
          ENDIF                                                                 COLLN   68
        ENDDO                                                                   COLLN   69
      ENDDO                                                                     COLLN   70
32100 MX = MX + MXLEN                                                           COLLN   71
32150 CONTINUE                                                                  COLLN   72
32200 CONTINUE                                                                  COLLN   73
      IF (IREPRT(1,15) .EQ. 1)  GO TO 81000                                     COMB01   4
      RETURN                                                                    READSF 687
80000 CALL MSGSIM(3,ISTD(1),NAMPRG(1,1),N,N)                                    READSF 688
      Call MessageBox( NULL,'Errors reading LOADS standard file -'              -051    96
     &  //' ABORTING'//char(0),'READSF Errors'//char(0), MB_OK                  -051    97
     &  + MB_ICONSTOP+MB_TASKMODAL+MB_TASKMODAL )                               -051    98
        IwinReturn = 1                                                          -051    99
80900 IERRF  = 1                                                                READSF 689
      RETURN                                                                    READSF 690
81000 CONTINUE                                                                  READSF 691
      IERRF  = 2                                                                READSF 692
      WRITE(IOUTPT,9001)                                                        READSF 693
 9001 FORMAT(1H1////40H  TERMINATION AFTER VERIFICATION REPORTS )               READSF 694
      RETURN                                                                    READSF 695
      END                                                                       READSF 696
      SUBROUTINE REPHD                                                          REPHD    2
C                                                                               REPHD    3
C              WRITE HEADER RECORDS TO REPORT FILE                              REPHD    4
C                                                                               REPHD    5
      COMMON /CLCFLG/ IFSTHR,IPRDFL,IGOLGE,NDD,LDSTYP,IFHRP                     DDAY1    1
      COMMON /CTRL  / VERS(2),IRPFLG(4),IOVRLL(7),IWRTFL,IPROG,                 /CTRL/   2
     1       IFATAL,NAMPRG(3,7),MTRICR                                          /CTRL/   3
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                         /FILES/  3
     2              , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                    /FILES/  4
     3                IHRREP(3), IHRPAS(2)                                      /FILES/  5
      COMMON /INTS  / IZERO,IONE,ITWO,ITHREE,IFOUR,IFIVE,ISIX,                  /INTS/   2
     1                ISEVEN,IEIGHT,ININE,ITEN,                                 /INTS/   3
     2                I11,I12,I13,I14,I15,I16,I17,I18,I19,I20,                  /INTS/   4
     3                I21,I22,I23,I24,I25,I26,I27,I28,I29,I30,                  HVAC     4
     4                I31,I32,I33,I34,I35,I36,I37,I38,I39,I40,                  HVAC     5
     5                I41,I42,I43,I44,I45,I46,I47,I48,I49,I50,                  HVAC     6
     $                I51,I52,I53,I54,I55,I56,I57,I58,I59,I60,                  HVAC6    6
     $                I61,I62,I63,I64,I65,I66,I67,I68,I69,I70,                  HVAC6    7
     $                I71,I72,I73,I74,I75,I76,I77,I78,I79,I80,                  HVAC6    8
     $                I81,I82,I83,I84,I85,I86,I87,I88,I89,I90,                  HVAC6    9
     $                I91,I92,I93,I94,I95,I96,I97,I98,I99,I100                  HVAC6   10
      INTEGER         INTS(101)                                                 HVAC6   11
      EQUIVALENCE(IZERO,INTS(1))                                                /INTS/   7
      COMMON  /IRUNPD/  NRUNPD, JRUNPD, IRUNPD(6,15)                            /IRUNPD/ 2
      COMMON  /REPORT/ IREPRT(4,37),IPRG,IUNIQV(100),IUNIQS(100),IUNIQL         BIGNAM   1
      COMMON  /SIZE/   LENGTH,NVECT,NSCHED,NWF,NWPAR,NCONS,NGT,NWL,NGEO,        BLIND    5
     1                 NGSHAD, NWIN, NDOOR, NEW, NUG, NSP, NIWP, NIW,           /SIZE/   3
     2                 NFL, NDESDY, NBR, NOTH, NITH, NOPSRF,                    HRr     10
     3                 NSURF, NSSHD, NSHTOT                                     GEO1     1
      COMMON /TIME  / IDOY, IDOW, IDSTF, ISCHR, ISCDAY, iDSdates(6),            -044e5r  1
     1                IMO, IDAY, IYR, IHR, CLOCK(10), IDSFLG,                   HOLID1   4
     2                MONDSC(12), MONLEN(12), MONSDA(12), IEODMR                /TIME/   4
      COMMON /TITLE / TITLE(10,5)                                               /TITLE/  2
C                                                                               REPHD   15
      COMMON  /DAYLT/ NDAYCF,IPHS,IZ,IHIT,MHHIT,IL,RHOAV,ATOT,ARHTOT,           /DAYLT/  2
     1                AR(3),AP(3),ARH(3),ARHP(3),NPH,NTH,WC(3),TMULT,           /DAYLT/  3
     2                TSOLNM,TVISDF,FRUP,ISHLOC,NWTOT,RHOCW,RHOFW,WAREA,        /DAYLT/  4
     3                IMREF,PHSUN,THSUN,PHSUND,THSUND,THSMIN,PHSMIN,            /DAYLT/  5
     4                THSMAX,PHSMAX,THSDEL,PHSDEL,H,NTHS,NPHS,NDFC,LWDC,        /DAYLT/  6
     5                BETA,W,IBZ,IWZ,ZENL,JZD,WBACLU(2,2),PF(7,5),              /DAYLT/  7
     6                VIEWVC(3),GLRNDX(2),WDAYIL(2,2),BACLUM(2),ITF(3),         /DAYLT/  8
     7                RDAYIL(2),RBACLU(2),GLRNEW(2),ETACLD,CDIRLW(24),          /DAYLT/  9
     8                CDIFLW(24),ODIFLW(24),SOLIC(12),TFAC,SPHSUN,              /DAYLT/ 10
     9                CPHSUN,PHWN,THWN,SPHWN,CPHWN,TOTIL(2),ATMMOI(12),         /DAYLT/ 11
     1                ATMTUR(12),XRAN,ALFAD,THRAT,PHRAT,SETPNT(2),              /DAYLT/ 12
     2                IZLSG,IZLSH,IZLSJM,IZLSJY,IZDREP,FPHRP(2),ZFTOT,          /DAYLT/ 13
     3                EINTSK(2,12,24),EINTSU(2,12,24),EDIRSK(2,12,24),          VISBL    2
     4                EDIRSU(2,12,24),FLCWSK(2,12),FLCWSU(2,12),                VISBL    3
     5                FLFWSK(2,12),FLFWSU(2,12),GILSK(2,10),GILSU(2,10),        VISBL    4
     6                WLUMSK(2,11,24),WLUMSU(2,11,24),AVWLSK(2,12,24),          VISBL    5
     7                AVWLSU(2,12,24),CHILSK(24),CHILSU(24),OHILSK(24),         VISBL    6
     8                DFSKHR(2,2),DFSUHR(2,2),SFSKHR(2,2),SFSUHR(2,2),          /DAYLT/ 19
     9                BFSKHR(2,2),BFSUHR(2,2),HISUNF,CHISKF,OHISKF,IZLSM        44d5br   1
      COMMON  /DAYL1/  ATMTU, ATMMO, TAU1                                       /DAYLT/ 21
     1               , TVISB, TH, PH, RAY(3), WNORM(3), TVISBR                  /DAYLT/ 22
      COMMON  /LENS/   MWFLEN, MRLEN, MSHLEN, MWNLEN, MDRLEN, MXLEN,            /LENS/   2
     1                 MULEN, MZLEN, MIWLEN, MFLLEN,                            HRr      5
     2                 LMTB, LLDSOU, MSTLEN, LSTFT, MWLLEN                      BLIND    1
      COMMON  /PTRBGN/ ISCB, IWFB, IWPB, ICONSB, IGTB, IWLB, IGEOB,             HRr      6
     1                 ISHADB, IWINB, IDRB, IEWB, IUGB, ISPB, IIWPB,            HRr      7
     2                 IIWB, IFLB, ISPCDB, IOTHB, ILHB, IZQCMB, ISSHDB,         HRr      8
     3                 IOHFIB, IZLSK, IZLSL, ISTFB                              HRr      9
      COMMON        // AA(75 000 000)                                           -048ar   1
      INTEGER          IA(75 000 000)                                           -048ar   2
      EQUIVALENCE  (IA(1), AA(1))                                               //       4
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
C                                                                               REPHD   20
C              INITIALIZE THE REPORT GENERATOR FLAGS                            REPHD   21
      IRPFLG(1) = 0                                                             REPHD   22
C              WRITE FIRST REPORT FILE HEADER RECORD                            REPHD   23
      WRITE (IREPFL) 0,IPROG,(CLOCK(i),i=1,8),VERS,                             REPHDR   3
     $               TITLE,NRUNPD,IRUNPD,IWDID                                  REPHDR   4
C              WRITE HEADER RECORDS FOR VERIFICATION REPORTS                    REPHD   25
      IVRPFL = 0                                                                REPHD   26
      IUNIQL = 0                                                                BIGNAM  45
      IUNIQ = 0                                                                 BIGNAM  46
      CALL FILLN(0,IUNIQV(1),100)                                               BIGNAM  47
      CALL FILLN(0,IUNIQS(1),100)                                               BIGNAM  48
      DO 10 I=1,10                                                              REPHD   27
      IF (IREPRT(1,I) .EQ. 0)  GO TO 10                                         IREPRT 137
      IVRPFL = 1                                                                REPHD   29
      IF (I.NE.3) GOTO 9                                                        REPHD   30
C     SPECIAL CASE FOR REPORT LV-C TO PRODUCE ONE REPORT FOR EACH SPACE         REPHD   31
      DO 8 IZ=1,NSP                                                             REPHD   32
      IUNIQ  = 10000+IZ                                                         -044d1r  1
      WRITE( IREPFL )  IFOUR, IUNIQ, IFOUR, I, IREPRT(1,I)                      IREPRT 138
    8 CONTINUE                                                                  REPHD   35
      GOTO 10                                                                   REPHD   36
    9 WRITE( IREPFL )  IFOUR, I, IFOUR, I, IREPRT(1,I)                          IREPRT 139
   10 CONTINUE                                                                  REPHD   38
      IF (IVRPFL .EQ. 1)  IRPFLG(1) = 1                                         REPHD   39
      IF( IREPRT(1,31) .EQ. 1 )  GOTO  900                                      IREPRT 140
C              WRITE HEADER RECORDS FOR SUMMARY REPORTS                         REPHD   41
C              NR IS 2 IF THERE ARE BOTH DESIGN DAY(S) AND NORMAL               REPHD   44
C              RUN PERIOD(S).  NR IS 1 IF THERE IS ONLY DESIGN DAY(S)           REPHD   45
C              OR ONLY NORMAL RUN PERIOD(S)                                     REPHD   46
      NR = 2                                                                    REPHD   47
      IF(NDESDY.EQ.0.OR.NDESDY.EQ.NRUNPD) NR = 1                                REPHD   48
      DO 120 IR=1,NR                                                            REPHD   49
      IF (IREPRT(1,16) .EQ. 0)  GO TO 20                                        IREPRT 141
      IUNIQ  = 100 + IR                                                         REPHD   51
      NREPRT = 32                                                               REPHD   52
      WRITE( IREPFL )  IFOUR, IUNIQ, IFOUR, NREPRT, IREPRT(1,16)                IREPRT 142
   20 CONTINUE                                                                  REPHD   54
      IF (IREPRT(1,17) .EQ. 0) GOTO 30                                          IREPRT 143
      MZ     = ISPB                                                             REPHD   56
      DO 21 IZ=1,NSP                                                            REPHD   57
      IUNIQ  = 200000+(IR-1)*10000+IZ                                           -035    23
      NREPRT = 33                                                               REPHD   59
      WRITE( IREPFL )  IFOUR, IUNIQ, IFOUR, NREPRT, IREPRT(1,17)                IREPRT 144
   21 MZ     = MZ+MZLEN                                                         REPHD   61
C              END OF ZONE                                                      REPHD   62
   30 IF (IREPRT(1,18) .EQ. 0)  GO TO 40                                        IREPRT 145
      IUNIQ  = 200 + IR                                                         REPHD   64
C                                                                               REPHD   65
      NREPRT = 48                                                               REPHD   66
      WRITE( IREPFL )  IFOUR, IUNIQ, IFOUR, NREPRT, IREPRT(1,18)                IREPRT 146
   40 IF(IREPRT(1,19).EQ.0) GO TO 50                                            IREPRT 147
      IUNIQ  = 300 + IR                                                         REPHD   69
      NREPRT = 11                                                               REPHD   70
      WRITE( IREPFL )  IFOUR, IUNIQ, IFOUR, NREPRT, IREPRT(1,19)                IREPRT 148
   50 IF(IREPRT(1,20).EQ.0) GO TO 60                                            IREPRT 149
      DO 55 IZ=1,NSP                                                            REPHD   73
      IUNIQ = 50000 + (IR-1)*10000 + IZ                                         -035    24
      NREPRT = 37                                                               REPHD   75
      WRITE( IREPFL )  IFOUR, IUNIQ, IFOUR, NREPRT, IREPRT(1,20)                IREPRT 150
   55 CONTINUE                                                                  REPHD   77
   60 IF(IREPRT(1,21).EQ.0) GO TO 80                                            IREPRT 151
      IUNIQ = 800 + IR                                                          REPHD   79
      NREPRT = 49                                                               REPHD   80
      WRITE( IREPFL )  IFOUR, IUNIQ, IFOUR, NREPRT, IREPRT(1,21)                IREPRT 152
      IF (NDAYCF.EQ.0) GO TO 116                                                REPHD   82
C              LS-G                                                             REPHD   83
   80 IF(IREPRT(1,22).EQ.0) GO TO 90                                            IREPRT 153
      NREPRT = 39                                                               REPHD   85
      MZ     = ISPB                                                             REPHD   86
      DO 85 IZ=1,NSP                                                            REPHD   87
      IF (<DAYLIGHTING>.EQ.0) GO TO 85                                          REPHD   88
      IUNIQ  = 90000 + (IR-1) * 10000 + IZ                                      -035    25
      WRITE( IREPFL )  IFOUR, IUNIQ, IFOUR, NREPRT, IREPRT(1,22)                IREPRT 154
   85 MZ     = MZ + MZLEN                                                       REPHD   91
C              LS-H                                                             REPHD   92
   90 IF(IREPRT(1,23).EQ.0) GO TO 100                                           IREPRT 155
      NREPRT = 40                                                               REPHD   94
      MZ     = ISPB                                                             REPHD   95
      DO 95 IZ=1,NSP                                                            REPHD   96
      IF (<DAYLIGHTING>.EQ.0) GO TO 95                                          REPHD   97
      IUNIQ  = 110000 + (IR-1) * 10000 + IZ                                     -035    26
      WRITE( IREPFL )  IFOUR, IUNIQ, IFOUR, NREPRT, IREPRT(1,23)                IREPRT 156
   95 MZ     = MZ + MZLEN                                                       REPHD  100
C              LS-I                                                             REPHD  101
  100 IF(IREPRT(1,24).EQ.0) GO TO 110                                           IREPRT 157
      NREPRT = 41                                                               REPHD  103
      IUNIQ  = 1300 + IR                                                        REPHD  104
      WRITE( IREPFL )  IFOUR, IUNIQ, IFOUR, NREPRT, IREPRT(1,24)                IREPRT 158
C              LS-J                                                             REPHD  106
  110 IF (IREPRT(1,25) .EQ. 0) GOTO 116                                         IREPRT 159
      NREPRT = 42                                                               REPHD  108
      MZ     = ISPB                                                             REPHD  109
      DO 115 IZ=1,NSP                                                           REPHD  110
      IF (<DAYLIGHTING>.EQ.0) GO TO 115                                         REPHD  111
      IUNIQ  = 140000 + (IR-1) * 10000 + IZ                                     -035    27
      WRITE( IREPFL )  IFOUR, IUNIQ, IFOUR, NREPRT, IREPRT(1,25)                IREPRT 160
  115 MZ     = MZ + MZLEN                                                       REPHD  114
C                LS-K                                                           REPHD  115
  116 IF(IREPRT(1,26).EQ.0) GOTO 130                                            IREPRT 161
      NREPRT = 43                                                               REPHD  117
      MZ     = ISPB                                                             REPHD  118
      IEND   = NSP+1                                                            REPHD  119
      DO 125 IZ=1,IEND                                                          REPHD  120
      IUNIQ  = 160000+(IR-1)*10000+IZ                                           -035    28
      WRITE( IREPFL )  IFOUR, IUNIQ, IFOUR, NREPRT, IREPRT(1,26)                IREPRT 162
  125 MZ     = MZ+MZLEN                                                         REPHD  123
  130 CONTINUE                                                                  REPHD  124
C                LS-L                                                           REPHD  125
      IF(IREPRT(1,27) .EQ. 0) GOTO 128                                          44d5br 146
      NREPRT = 53                                                               REPHD  127
      MZ     = ISPB                                                             REPHD  128
      IEND   = NSP                                                              REPHD  129
      DO 127 IZ=1,IEND                                                          REPHD  130
      IUNIQ  = 180000+(IR-1)*10000+IZ                                           -035    29
      WRITE (IREPFL) IFOUR,IUNIQ,IFOUR,NREPRT,IREPRT(1,27)                      IREPRT 164
  127 MZ     = MZ+MZLEN                                                         REPHD  133
C              LS-M                                                             44d5br 147
  128 IF((IREPRT(1,28).NE.0) .AND. (NDAYCF.NE.0) ) THEN                         44d5br 148
        NREPRT = 100                                                            44d5br 149
        MZ     = ISPB                                                           44d5br 150
        DO IZ=1,NSP                                                             44d5br 151
          IF (<DAYLIGHTING>.GT.0) THEN                                          44d5br 152
            IUNIQ  = 310000 + (IR-1) * 10000 + (IZ*2) - 1                       44d5br 153
            WRITE( IREPFL )  IFOUR, IUNIQ, IFOUR, NREPRT, IREPRT(1,28)          44d5br 154
            IF(<NREFP> .EQ. 2) THEN                                             44d5br 155
              IUNIQ  = IUNIQ + 1                                                44d5br 156
              WRITE( IREPFL )  IFOUR, IUNIQ, IFOUR, NREPRT, IREPRT(1,28)        44d5br 157
            ENDIF                                                               44d5br 158
          ENDIF                                                                 44d5br 159
          MZ     = MZ + MZLEN                                                   44d5br 160
        ENDDO                                                                   44d5br 161
      ENDIF                                                                     44d5br 162
  120 CONTINUE                                                                  REPHD  134
      IRPFLG(1) = 1                                                             REPHD  135
C              ---                                                              REPHD  136
C--- PUT IREPRT(1,) ARRAY INTO 0-1 FORM TO BE COMPATIBLE WITH THE REST OF       IREPRT 165
C              --- THE PROGRAM                                                  REPHD  138
C              ---                                                              REPHD  139
  900 DO  920  I = 1 , 32                                                       REPHD  140
      IF( IREPRT(1,I) .GT. 0 )  IREPRT(1,I) = 1                                 IREPRT 166
  920 CONTINUE                                                                  REPHD  142
      RETURN                                                                    REPHD  143
      END                                                                       REPHD  144
      SUBROUTINE RLSA(SPCD)                                                     RLSA     2
C                                                                               RLSA     3
C              WRITE REPORT RECORDS FOR REPORT LS-A, SPACE PEAK                 RLSA     4
C              LOADS SUMMARY                                                    RLSA     5
C                                                                               RLSA     6
      COMMON  /BLDPK/  BLDPK(60), IHPP(2), ICPP(2), HRHPK, HRCPK                -063     1
      DIMENSION IBLDPK(66)                                                      -063     2
      EQUIVALENCE (IBLDPK(1),BLDPK(1))                                          /BLDPK/  4
      COMMON /CLCFLG/ IFSTHR,IPRDFL,IGOLGE,NDD,LDSTYP,IFHRP                     DDAY1    1
      COMMON  /CONST/  DTOR, PIOVR2, PIOVR4, IBLNK, UNDEF, IUNDEF,              /CONST/  2
     1                 UNFILD, URAD, DEFIFR, DEFCFR, DEFINC, KWBTU              /CONST/  3
      REAL             KWBTU                                                    /CONST/  4
      COMMON  /DESTIT/ IDEST(3)                                                 /DESTIT/ 2
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                         /FILES/  3
     2              , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                    /FILES/  4
     3                IHRREP(3), IHRPAS(2)                                      /FILES/  5
      COMMON /INTS  / IZERO,IONE,ITWO,ITHREE,IFOUR,IFIVE,ISIX,                  /INTS/   2
     1                ISEVEN,IEIGHT,ININE,ITEN,                                 /INTS/   3
     2                I11,I12,I13,I14,I15,I16,I17,I18,I19,I20,                  /INTS/   4
     3                I21,I22,I23,I24,I25,I26,I27,I28,I29,I30,                  HVAC     4
     4                I31,I32,I33,I34,I35,I36,I37,I38,I39,I40,                  HVAC     5
     5                I41,I42,I43,I44,I45,I46,I47,I48,I49,I50,                  HVAC     6
     $                I51,I52,I53,I54,I55,I56,I57,I58,I59,I60,                  HVAC6    6
     $                I61,I62,I63,I64,I65,I66,I67,I68,I69,I70,                  HVAC6    7
     $                I71,I72,I73,I74,I75,I76,I77,I78,I79,I80,                  HVAC6    8
     $                I81,I82,I83,I84,I85,I86,I87,I88,I89,I90,                  HVAC6    9
     $                I91,I92,I93,I94,I95,I96,I97,I98,I99,I100                  HVAC6   10
      INTEGER         INTS(101)                                                 HVAC6   11
      EQUIVALENCE(IZERO,INTS(1))                                                /INTS/   7
      COMMON  /IRUNPD/  NRUNPD, JRUNPD, IRUNPD(6,15)                            /IRUNPD/ 2
      COMMON  /LENS/   MWFLEN, MRLEN, MSHLEN, MWNLEN, MDRLEN, MXLEN,            /LENS/   2
     1                 MULEN, MZLEN, MIWLEN, MFLLEN,                            HRr      5
     2                 LMTB, LLDSOU, MSTLEN, LSTFT, MWLLEN                      BLIND    1
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     BLIND    2
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        FLOOR1   3
      COMMON  /PTRBGN/ ISCB, IWFB, IWPB, ICONSB, IGTB, IWLB, IGEOB,             HRr      6
     1                 ISHADB, IWINB, IDRB, IEWB, IUGB, ISPB, IIWPB,            HRr      7
     2                 IIWB, IFLB, ISPCDB, IOTHB, ILHB, IZQCMB, ISSHDB,         HRr      8
     3                 IOHFIB, IZLSK, IZLSL, ISTFB                              HRr      9
      COMMON  /SIZE/   LENGTH,NVECT,NSCHED,NWF,NWPAR,NCONS,NGT,NWL,NGEO,        BLIND    5
     1                 NGSHAD, NWIN, NDOOR, NEW, NUG, NSP, NIWP, NIW,           /SIZE/   3
     2                 NFL, NDESDY, NBR, NOTH, NITH, NOPSRF,                    HRr     10
     3                 NSURF, NSSHD, NSHTOT                                     GEO1     1
      COMMON /TIME  / IDOY, IDOW, IDSTF, ISCHR, ISCDAY, iDSdates(6),            -044e5r  1
     1                IMO, IDAY, IYR, IHR, CLOCK(10), IDSFLG,                   HOLID1   4
     2                MONDSC(12), MONLEN(12), MONSDA(12), IEODMR                /TIME/   4
      COMMON        // AA(75 000 000)                                           -048ar   1
      INTEGER          IA(75 000 000)                                           -048ar   2
      EQUIVALENCE  (IA(1), AA(1))                                               //       4
C                                                                               RLSA    20
      DIMENSION NEWTIT(8),IBLDS(4),ITIM(6,2)                                    RLSA    21
      DIMENSION SPCD(60,1)                                                      -060    13
C                                                                               RLSA    23
      DATA NEWTIT / 4HLS-A,4H Spa,4Hce P,4Heak ,4HLoad,4Hs Su,                  BIGNAM  82
     1              4Hmmar,4Hy    /                                             BIGNAM  83
      DATA IZS / 3HSUM /                                                        RLSA    26
      DATA IBLDS /4HBUIL,4HDING,4H PEA,4HK   /                                  RLSA    27
C                                                                               RLSA    28
C              RESET REPORT TITLE                                               RLSA    29
      IUNIQ = 101                                                               RLSA    30
      IF((NDESDY.NE.0).AND.(NRUNPD.GT.NDESDY).AND.(NDD.LE.0)) IUNIQ=102         RLSA    31
      WRITE (IREPFL) I22,IUNIQ,ISIX,(NEWTIT(II),II=1,8),IBLNK,IBLNK,            RLSA    32
     1               (IBLNK,II=1,7),(IDEST(II),II=1,3)                          RLSA    33
      MZ     = ISPB                                                             RLSA    34
      HTPKS  = 0.                                                               RLSA    35
      CLPKS  = 0.                                                               RLSA    36
      WRITE (IREPFL) IFOUR,IUNIQ,IFOUR,IONE,IZERO                               RLSA    37
      DO 1000 IZ=1,NSP                                                          RLSA    38
      XMUL   = <ZMULT>                                                          RLSA    39
      CALL TIMPRP(SPCD(3,IZ),ITIM(1,1))                                         RLSA    40
      CALL TIMPRP(SPCD(8,IZ),ITIM(1,2))                                         RLSA    41
      HTPK   = SPCD(1,IZ)*0.001                                                 RLSA    42
      CLPK   = SPCD(6,IZ)*0.001                                                 RLSA    43
      HTPKS  = HTPKS + HTPK * <ZMULT> * <FLOOR-MULT>                            RLSA    44
      CLPKS  = CLPKS + CLPK * <ZMULT> * <FLOOR-MULT>                            RLSA    45
      DBHP   = SPCD(4,IZ)                                                       RLSA    46
      WBHP   = SPCD(5,IZ)                                                       RLSA    47
      DBCP   = SPCD(9,IZ)                                                       RLSA    48
      WBCP   = SPCD(10,IZ)                                                      RLSA    49
      WRITE (IREPFL) ITHREE,IUNIQ,ITHREE,IEIGHT                                 RLSA    50
      WRITE (IREPFL) I32,IUNIQ,IONE,ITWO,I28,(<IZNM>,II=1,8),XMUL,              VISBL2  12
     1<FLOOR-MULT>,                                                             RLSA    52
     2     CLPK,(ITIM(I,2),I=1,6),DBCP,WBCP,HTPK,                               RLSA    53
     3     (ITIM(I,1),I=1,6),DBHP,WBHP                                          RLSA    54
      MZ     = MZ + MZLEN                                                       RLSA    55
 1000 CONTINUE                                                                  RLSA    56
      WRITE (IREPFL) IFOUR,IUNIQ,IONE,ITHREE,IZERO                              RLSA    57
      WRITE (IREPFL) ISEVEN,IUNIQ,IONE,IFOUR,ITHREE,IZS,CLPKS,HTPKS             RLSA    58
      CALL TIMPRP(BLDPK(3),ITIM(1,1))                                           RLSA    59
      CALL TIMPRP(BLDPK(8),ITIM(1,2))                                           RLSA    60
      HTPK   = TOTL(BLDPK(11),12)*0.001                                         RLSA    61
      CLPK   = TOTL(BLDPK(25),12)*0.001                                         RLSA    62
      DBHP   = BLDPK(4)                                                         RLSA    63
      WBHP   = BLDPK(5)                                                         RLSA    64
      DBCP   = BLDPK(9)                                                         RLSA    65
      WBCP   = BLDPK(10)                                                        RLSA    66
      WRITE (IREPFL) I26,IUNIQ,IONE,IFIVE,I22,(IBLDS(I),I=1,4),                 RLSA    67
     1     CLPK,(ITIM(I,2),I=1,6),DBCP,WBCP,HTPK,                               RLSA    68
     2     (ITIM(I,1),I=1,6),DBHP,WBHP                                          RLSA    69
      WRITE (IREPFL) ITWO,IUNIQ,ISEVEN                                          RLSA    70
      RETURN                                                                    RLSA    71
      END                                                                       RLSA    72
      SUBROUTINE RLSB(SPCD)                                                     RLSB     2
C                                                                               RLSB     3
C              WRITE REPORT RECORDS FOR REPORT LS-B - COMPONENTS OF             RLSB     4
C              SPACE PEAK LOADS                                                 RLSB     5
C                                                                               RLSB     6
      COMMON /CLCFLG/ IFSTHR,IPRDFL,IGOLGE,NDD,LDSTYP,IFHRP                     DDAY1    1
      COMMON  /CONST/  DTOR, PIOVR2, PIOVR4, IBLNK, UNDEF, IUNDEF,              /CONST/  2
     1                 UNFILD, URAD, DEFIFR, DEFCFR, DEFINC, KWBTU              /CONST/  3
      REAL             KWBTU                                                    /CONST/  4
      COMMON  /DESTIT/ IDEST(3)                                                 /DESTIT/ 2
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                         /FILES/  3
     2              , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                    /FILES/  4
     3                IHRREP(3), IHRPAS(2)                                      /FILES/  5
      COMMON /INTS  / IZERO,IONE,ITWO,ITHREE,IFOUR,IFIVE,ISIX,                  /INTS/   2
     1                ISEVEN,IEIGHT,ININE,ITEN,                                 /INTS/   3
     2                I11,I12,I13,I14,I15,I16,I17,I18,I19,I20,                  /INTS/   4
     3                I21,I22,I23,I24,I25,I26,I27,I28,I29,I30,                  HVAC     4
     4                I31,I32,I33,I34,I35,I36,I37,I38,I39,I40,                  HVAC     5
     5                I41,I42,I43,I44,I45,I46,I47,I48,I49,I50,                  HVAC     6
     $                I51,I52,I53,I54,I55,I56,I57,I58,I59,I60,                  HVAC6    6
     $                I61,I62,I63,I64,I65,I66,I67,I68,I69,I70,                  HVAC6    7
     $                I71,I72,I73,I74,I75,I76,I77,I78,I79,I80,                  HVAC6    8
     $                I81,I82,I83,I84,I85,I86,I87,I88,I89,I90,                  HVAC6    9
     $                I91,I92,I93,I94,I95,I96,I97,I98,I99,I100                  HVAC6   10
      INTEGER         INTS(101)                                                 HVAC6   11
      EQUIVALENCE(IZERO,INTS(1))                                                /INTS/   7
      COMMON  /IRUNPD/  NRUNPD, JRUNPD, IRUNPD(6,15)                            /IRUNPD/ 2
      COMMON  /LENS/   MWFLEN, MRLEN, MSHLEN, MWNLEN, MDRLEN, MXLEN,            /LENS/   2
     1                 MULEN, MZLEN, MIWLEN, MFLLEN,                            HRr      5
     2                 LMTB, LLDSOU, MSTLEN, LSTFT, MWLLEN                      BLIND    1
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     BLIND    2
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        FLOOR1   3
      COMMON  /PTRBGN/ ISCB, IWFB, IWPB, ICONSB, IGTB, IWLB, IGEOB,             HRr      6
     1                 ISHADB, IWINB, IDRB, IEWB, IUGB, ISPB, IIWPB,            HRr      7
     2                 IIWB, IFLB, ISPCDB, IOTHB, ILHB, IZQCMB, ISSHDB,         HRr      8
     3                 IOHFIB, IZLSK, IZLSL, ISTFB                              HRr      9
      COMMON  /SIZE/   LENGTH,NVECT,NSCHED,NWF,NWPAR,NCONS,NGT,NWL,NGEO,        BLIND    5
     1                 NGSHAD, NWIN, NDOOR, NEW, NUG, NSP, NIWP, NIW,           /SIZE/   3
     2                 NFL, NDESDY, NBR, NOTH, NITH, NOPSRF,                    HRr     10
     3                 NSURF, NSSHD, NSHTOT                                     GEO1     1
      COMMON /TIME  / IDOY, IDOW, IDSTF, ISCHR, ISCDAY, iDSdates(6),            -044e5r  1
     1                IMO, IDAY, IYR, IHR, CLOCK(10), IDSFLG,                   HOLID1   4
     2                MONDSC(12), MONLEN(12), MONSDA(12), IEODMR                /TIME/   4
      COMMON        // AA(75 000 000)                                           -048ar   1
      INTEGER          IA(75 000 000)                                           -048ar   2
      EQUIVALENCE  (IA(1), AA(1))                                               //       4
C                                                                               RLSB    19
      DIMENSION NEWTIT(8),ITIM(6,2)                                             RLSB    20
      DIMENSION SPCD(60,1)                                                      -060    14
C                                                                               RLSB    22
      INTEGER AREA,VOL,TZONEF,TZONEC                                            -060    15
C                                                                               RLSB    24
      DATA NEWTIT / 4HLS-B,4H Spa,4Hce P,4Heak ,4HLoad,4H Com,                  BIGNAM  84
     1             4Hpone,4Hnts /                                               BIGNAM  85
C                                                                               RLSB    27
C                                                                               -060    16
      FTOC(F)   = (F-32.)*0.555556 + SIGN(0.5,F-32.)                            -060    17
C                                                                               -060    18
      MZ     = ISPB                                                             RLSB    28
C              RESET REPORT TITLE                                               RLSB    29
      DO 1000 IZ=1,NSP                                                          RLSB    30
      IUNIQ  = 200000+IZ                                                        -035    30
      IF((NDESDY.NE.0).AND.(NRUNPD.GT.NDESDY).AND.(NDD.LE.0))                   RLSB    32
     $  IUNIQ= 210000+IZ                                                        -035    31
      WRITE (IREPFL) I22,IUNIQ,ISIX,(NEWTIT(II),II=1,8),IBLNK,                  BIGNAM  86
     1               (<IZNM>,II=1,8),(IDEST(II),II=1,3)                         BIGNAM  87
      CALL TIMPRP(SPCD(3,IZ),ITIM(1,1))                                         RLSB    36
      CALL TIMPRP(SPCD(8,IZ),ITIM(1,2))                                         RLSB    37
      AR     = <ZFLRAR>                                                         RLSB    38
      VOLUME = <ZVOL>                                                           RLSB    39
      AREA   = IROUND(AR)                                                       RLSB    40
      VOL    = IROUND(VOLUME)                                                   RLSB    41
      MAREA  = IROUND(AR*0.0929)                                                RLSB    42
      MVOL   = IROUND(VOLUME*0.02832)                                           RLSB    43
C GET THE ZONE TEMPERATURE USED FOR THE LOADS CALCULATION                       -060    19
      IM        =1                                                              -060    20
      TZONEF    = IROUND(<ZTEMP>)                                               -045br 221
      TZONEC    = FTOC(FLOAT(TZONEF))                                           -060    23
      WRITE (IREPFL) I14,IUNIQ,IONE,IONE,ITEN,(<IZNM>,II=1,8),                  BIGNAM  89
     1               TZONEF,TZONEC                                              -060    25
      WRITE (IREPFL) ITEN,IUNIQ,IONE,ITWO,ISIX,<ZMULT>,<FLOOR-MULT>,            RLSB    45
     1AREA,MAREA,VOL,MVOL                                                       RLSB    46
      CALL RLSBH(SPCD(1,IZ),ITIM(1,1),IUNIQ)                                    RLSB    47
      CALL RLSBS(SPCD(25,IZ),SPCD(11,IZ),AR,IUNIQ)                              RLSB    48
      WRITE (IREPFL) ITWO,IUNIQ,ISEVEN                                          RLSB    49
      MZ     = MZ + MZLEN                                                       RLSB    50
 1000 CONTINUE                                                                  RLSB    51
      RETURN                                                                    RLSB    52
      END                                                                       RLSB    53
      SUBROUTINE RLSBH(Q,ITIM,IUNIQ)                                            RLSBH    2
C                                                                               -060    26
C DECLARE THE COMMON BLOCKS                                                     -060    27
      COMMON        // AA(75 000 000)                                           -048ar   1
      INTEGER          IA(75 000 000)                                           -048ar   2
      EQUIVALENCE  (IA(1), AA(1))                                               //       4
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     BLIND    2
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        FLOOR1   3
C                                                                               -060    30
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                         /FILES/  3
     2              , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                    /FILES/  4
     3                IHRREP(3), IHRPAS(2)                                      /FILES/  5
      COMMON /INTS  / IZERO,IONE,ITWO,ITHREE,IFOUR,IFIVE,ISIX,                  /INTS/   2
     1                ISEVEN,IEIGHT,ININE,ITEN,                                 /INTS/   3
     2                I11,I12,I13,I14,I15,I16,I17,I18,I19,I20,                  /INTS/   4
     3                I21,I22,I23,I24,I25,I26,I27,I28,I29,I30,                  HVAC     4
     4                I31,I32,I33,I34,I35,I36,I37,I38,I39,I40,                  HVAC     5
     5                I41,I42,I43,I44,I45,I46,I47,I48,I49,I50,                  HVAC     6
     $                I51,I52,I53,I54,I55,I56,I57,I58,I59,I60,                  HVAC6    6
     $                I61,I62,I63,I64,I65,I66,I67,I68,I69,I70,                  HVAC6    7
     $                I71,I72,I73,I74,I75,I76,I77,I78,I79,I80,                  HVAC6    8
     $                I81,I82,I83,I84,I85,I86,I87,I88,I89,I90,                  HVAC6    9
     $                I91,I92,I93,I94,I95,I96,I97,I98,I99,I100                  HVAC6   10
      INTEGER         INTS(101)                                                 HVAC6   11
      EQUIVALENCE(IZERO,INTS(1))                                                /INTS/   7
C                                                                               RLSBH    5
      DIMENSION Q(61),ITIM(6,2),ATEMP(4,2),BTEMP(6,1),                          -060    31
     1CTEMP(6,1),DTEMP(6,1)                                                     -060    32
C                                                                               RLSBH    7
      INTEGER DBTC,WBTC,SOLRADC,DBTH,WBTH,SOLRADH,CLDAMTC,                      -060    33
     1        CLDAMTH                                                           -060    34
      REAL WNDSPZC,WNDSPZH,MWNDSPZC,MWNDSPZH                                    -060    35
C                                                                               -060    36
C                                                                               RLSBH    9
      DATA ATEMP / 4HDRY-,4HBULB,4H TEM,4HP   ,                                 RLSBH   10
     1             4HWET-,4HBULB,4H TEM,4HP    /                                RLSBH   11
      DATA BTEMP / 4HTOT ,4HHORI,4HZONT,4HAL S,4HOLAR,4H RAD /                  -060    37
      DATA CTEMP / 4HCLOU,4HD AM,4HOUNT,4H 0(C,4HLEAR,4H)-10 /                  -060    38
      DATA DTEMP / 4HWIND,4HSPEE,4HD AT,4H SPA,4HCE  ,4H     /                  -060    39
C                                                                               RLSBH   12
      FTOC(F) = (F-32.)*0.555556 + SIGN(0.5,F-32.)                              RLSBH   13
C                                                                               -060    40
C CONVERTS BTU/(HR*FT2) INTO W/M2                                               -060    41
      BTUTOW(B)  = B*3.15248                                                    -060    42
C CONVERTS KNOTS INTO M/S                                                       -060    43
      XKTOMPS(C) = C*0.51444                                                    -060    44
C CONVERTS KNOTS INTO MPH                                                       -060    45
      XKTOMPH(D) = D*0.51444/0.44704                                            -060    46
C                                                                               RLSBH   14
      WRITE (IREPFL) IFOUR,IUNIQ,IONE,ITHREE,IZERO                              RLSBH   15
      WRITE (IREPFL) I16,IUNIQ,IONE,IFOUR,I12,(ITIM(I,2),I=1,6),                RLSBH   16
     1               (ITIM(I,1),I=1,6)                                          RLSBH   17
      DBTC   = IROUND(Q(9))                                                     RLSBH   18
      WBTC   = IROUND(Q(10))                                                    RLSBH   19
      SOLRADC    = IROUND(Q(55))                                                -060    47
      CLDAMTC    = IROUND(Q(56))                                                -060    48
      WNDSPZC    = Q(57)                                                        -060    49
      DBTH   = IROUND(Q(4))                                                     RLSBH   20
      WBTH   = IROUND(Q(5))                                                     RLSBH   21
      SOLRADH    = IROUND(Q(51))                                                -060    50
      CLDAMTH    = IROUND(Q(52))                                                -060    51
      WNDSPZH    = Q(53)                                                        -060    52
      MDBTC  = FTOC(Q(9))                                                       RLSBH   22
      MWBTC  = FTOC(Q(10))                                                      RLSBH   23
      MSOLRADC   = BTUTOW(Q(55))                                                -060    53
      MWNDSPZC   = XKTOMPS(Q(57))                                               -060    54
      MDBTH  = FTOC(Q(4))                                                       RLSBH   24
      MWBTH  = FTOC(Q(5))                                                       RLSBH   25
      MSOLRADH   = BTUTOW(Q(51))                                                -060    55
      MWNDSPZH   = XKTOMPS(Q(53))                                               -060    56
      T1     = TOTL(Q(25),16)                                                   RLSBH   26
      T2     = TOTL(Q(11),12)                                                   RLSBH   27
      IF (T1 .EQ. 0.0 .AND. T2 .EQ. 0.0)  GO TO 30                              RLSBH   28
      IF (T1 .EQ. 0.0)  GO TO 10                                                RLSBH   29
      IF (T2 .EQ. 0.0)  GO TO 20                                                RLSBH   30
      WRITE (IREPFL) I12,IUNIQ,IONE,IFIVE,IEIGHT,(ATEMP(II,1),II=1,4),          RLSBH   31
     1               DBTC,MDBTC,DBTH,MDBTH                                      RLSBH   32
      WRITE (IREPFL) I12,IUNIQ,IONE,IFIVE,IEIGHT,(ATEMP(II,2),II=1,4),          RLSBH   33
     1               WBTC,MWBTC,WBTH,MWBTH                                      RLSBH   34
      WRITE (IREPFL) I14,IUNIQ,IONE,34,ITEN,(BTEMP(II,1),II=1,6),               -060    57
     1               SOLRADC,MSOLRADC,SOLRADH,MSOLRADH                          -060    58
      WRITE (IREPFL) I14,IUNIQ,IONE,40,ITEN,(DTEMP(II,1),II=1,6),               -060    59
     1               WNDSPZC,MWNDSPZC,WNDSPZH,MWNDSPZH                          -060    60
      WRITE (IREPFL) I12,IUNIQ,IONE,43,IEIGHT,(CTEMP(II,1),II=1,6),             -060    61
     1               CLDAMTC, CLDAMTH                                           -060    62
      GO TO 40                                                                  RLSBH   35
   10 CONTINUE                                                                  RLSBH   36
      WRITE (IREPFL) ITEN,IUNIQ,IONE,ISIX,ISIX,(ATEMP(II,1),II=1,4),            RLSBH   37
     1               DBTH,MDBTH                                                 RLSBH   38
      WRITE (IREPFL) ITEN,IUNIQ,IONE,ISIX,ISIX,(ATEMP(II,2),II=1,4),            RLSBH   39
     1               WBTH,MWBTH                                                 RLSBH   40
      WRITE (IREPFL) I12,IUNIQ,IONE,35,IEIGHT,(BTEMP(II,1),II=1,6),             -060    63
     1               SOLRADH,MSOLRADH                                           -060    64
      WRITE (IREPFL) I12,IUNIQ,IONE,41,IEIGHT,(DTEMP(II,1),II=1,6),             -060    65
     1               WNDSPZH,MWNDSPZH                                           -060    66
      WRITE (IREPFL) I11,IUNIQ,IONE,44,ISEVEN,(CTEMP(II,1),II=1,6),             -060    67
     1               CLDAMTH                                                    -060    68
      GO TO 40                                                                  RLSBH   41
   20 CONTINUE                                                                  RLSBH   42
      WRITE (IREPFL) ITEN,IUNIQ,IONE,ISEVEN,ISIX,(ATEMP(II,1),II=1,4),          RLSBH   43
     1               DBTC,MDBTC                                                 RLSBH   44
      WRITE (IREPFL) ITEN,IUNIQ,IONE,ISEVEN,ISIX,(ATEMP(II,2),II=1,4),          RLSBH   45
     1               WBTC,MWBTC                                                 RLSBH   46
      WRITE (IREPFL) I12,IUNIQ,IONE,36,IEIGHT,(BTEMP(II,1),II=1,6),             -060    69
     1               SOLRADC,MSOLRADC                                           -060    70
      WRITE (IREPFL) I12,IUNIQ,IONE,42,IEIGHT,(DTEMP(II,1),II=1,6),             -060    71
     1               WNDSPZC,MWNDSPZC                                           -060    72
      WRITE (IREPFL) I11,IUNIQ,IONE,45,ISEVEN,(CTEMP(II,1),II=1,6),             -060    73
     1               CLDAMTC                                                    -060    74
      GO TO 40                                                                  RLSBH   47
   30 CONTINUE                                                                  RLSBH   48
      WRITE (IREPFL) IEIGHT,IUNIQ,IONE,IEIGHT,IFOUR,(ATEMP(II,1),II=1,4)        RLSBH   49
      WRITE (IREPFL) IEIGHT,IUNIQ,IONE,IEIGHT,IFOUR,(ATEMP(II,2),II=1,4)        RLSBH   50
      WRITE (IREPFL) ITEN,IUNIQ,IONE,37,ISIX,(BTEMP(II,1),II=1,6)               -060    75
      WRITE (IREPFL) ITEN,IUNIQ,IONE,37,ISIX,(DTEMP(II,1),II=1,6)               -060    76
      WRITE (IREPFL) ITEN,IUNIQ,IONE,37,ISIX,(CTEMP(II,1),II=1,6)               -060    77
   40 WRITE (IREPFL) IFOUR,IUNIQ,IONE,ININE,IZERO                               RLSBH   51
      RETURN                                                                    RLSBH   52
      END                                                                       RLSBH   53
      SUBROUTINE RLSBS(AA,BB,AR,IUNIQ)                                          RLSBS    2
      COMMON  /CONST/  DTOR, PIOVR2, PIOVR4, IBLNK, UNDEF, IUNDEF,              /CONST/  2
     1                 UNFILD, URAD, DEFIFR, DEFCFR, DEFINC, KWBTU              /CONST/  3
      REAL             KWBTU                                                    /CONST/  4
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                         /FILES/  3
     2              , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                    /FILES/  4
     3                IHRREP(3), IHRPAS(2)                                      /FILES/  5
      COMMON /INTS  / IZERO,IONE,ITWO,ITHREE,IFOUR,IFIVE,ISIX,                  /INTS/   2
     1                ISEVEN,IEIGHT,ININE,ITEN,                                 /INTS/   3
     2                I11,I12,I13,I14,I15,I16,I17,I18,I19,I20,                  /INTS/   4
     3                I21,I22,I23,I24,I25,I26,I27,I28,I29,I30,                  HVAC     4
     4                I31,I32,I33,I34,I35,I36,I37,I38,I39,I40,                  HVAC     5
     5                I41,I42,I43,I44,I45,I46,I47,I48,I49,I50,                  HVAC     6
     $                I51,I52,I53,I54,I55,I56,I57,I58,I59,I60,                  HVAC6    6
     $                I61,I62,I63,I64,I65,I66,I67,I68,I69,I70,                  HVAC6    7
     $                I71,I72,I73,I74,I75,I76,I77,I78,I79,I80,                  HVAC6    8
     $                I81,I82,I83,I84,I85,I86,I87,I88,I89,I90,                  HVAC6    9
     $                I91,I92,I93,I94,I95,I96,I97,I98,I99,I100                  HVAC6   10
      INTEGER         INTS(101)                                                 HVAC6   11
      EQUIVALENCE(IZERO,INTS(1))                                                /INTS/   7
C                                                                               RLSBS    6
      REAL A(16),B(12),MA(16),MB(12),AA(16),BB(12)                              RLSBS    7
C                                                                               RLSBS    8
      DATA Z /0./                                                               RLSBS    9
C                                                                               RLSBS   10
      CMJH(Z)=Z*KWBTU                                                           RLSBS   11
C                                                                               RLSBS   12
      PER1   = 0.                                                               RLSBS   13
      PER2   = 0.                                                               RLSBS   14
      PER3   = 0.                                                               RLSBS   15
      PER4   = 0.                                                               RLSBS   16
      DO 60 I=1,16                                                              RLSBS   17
      A(I)   = AA(I) * 0.001                                                    RLSBS   18
   60 MA(I)  = CMJH(AA(I))                                                      RLSBS   19
      DO 70 I=1,12                                                              RLSBS   20
      B(I)   = BB(I) * 0.001                                                    RLSBS   21
   70 MB(I)  = CMJH(BB(I))                                                      RLSBS   22
      WRITE (IREPFL) ITEN,IUNIQ,IONE,ITEN,ISIX,A(1),MA(1),Z,Z,B(1),MB(1)        RLSBS   23
      WRITE (IREPFL) ITEN,IUNIQ,IONE,I11,ISIX,A(2),MA(2),Z,Z,B(2),MB(2)         RLSBS   24
      WRITE (IREPFL) ITEN,IUNIQ,IONE,I12,ISIX,A(3),MA(3),Z,Z,B(3),MB(3)         RLSBS   25
      WRITE (IREPFL) ITEN,IUNIQ,IONE,I13,ISIX,A(4),MA(4),Z,Z,B(4),MB(4)         RLSBS   26
      IFM    = 33                                                               RLSBS   27
      WRITE (IREPFL) ITEN,IUNIQ,IONE,IFM,ISIX,A(9),MA(9),Z,Z,B(9),MB(9)         RLSBS   28
      WRITE (IREPFL) ITEN,IUNIQ,IONE,I14,ISIX,A(6),MA(6),Z,Z,B(6),MB(6)         RLSBS   29
      WRITE (IREPFL) ITEN,IUNIQ,IONE,I15,ISIX,A(7),MA(7),Z,Z,B(7),MB(7)         RLSBS   30
      WRITE (IREPFL) ITEN,IUNIQ,IONE,I16,ISIX,A(12),MA(12),A(13),MA(13),        RLSBS   31
     1               B(12),MB(12)                                               RLSBS   32
      WRITE (IREPFL) ITEN,IUNIQ,IONE,I17,ISIX,A(8),MA(8),Z,Z,B(8),MB(8)         RLSBS   33
      WRITE (IREPFL) ITEN,IUNIQ,IONE,I18,ISIX,A(10),MA(10),A(14),MA(14),        RLSBS   34
     1               B(10),MB(10)                                               RLSBS   35
      WRITE (IREPFL) ITEN,IUNIQ,IONE,I19,ISIX,A(11),MA(11),A(15),               RLSBS   36
     1               MA(15),B(11),MB(11)                                        RLSBS   37
      WRITE (IREPFL) ITEN,IUNIQ,IONE,I20,ISIX,A(5),MA(5),A(16),                 RLSBS   38
     1               MA(16),B(5),MB(5)                                          RLSBS   39
      WRITE (IREPFL) IFOUR,IUNIQ,IONE,I21,IZERO                                 RLSBS   40
      T1     = TOTL(A(1),12)                                                    RLSBS   41
      T2     = CMJH(T1)*1000.                                                   RLSBS   42
      T3     = TOTL(A(13),4)                                                    RLSBS   43
      T4     = CMJH(T3)*1000.                                                   RLSBS   44
      T5     = TOTL(B(1),12)                                                    RLSBS   45
      T6     = CMJH(T5)*1000.                                                   RLSBS   46
      WRITE (IREPFL) ITEN,IUNIQ,IONE,I22,ISIX,T1,T2,T3,T4,T5,T6                 RLSBS   47
      ARM     = AR*0.000092903                                                  -060    78
C                                                                               -060    79
      PER1   = T1/AR                                                            -060    80
      PER2   = T2/ARM/1000                                                      -060    81
      PER3   = T3/AR                                                            -060    82
      PER4   = T4/ARM/1000                                                      -060    83
      PER5   = T5/AR                                                            -060    84
      PER6   = T6/ARM/1000                                                      -060    85
      WRITE(IREPFL)ITEN,IUNIQ,IONE,46,ISIX,PER1,PER2,PER3,PER4,PER5,PER6        -060    86
      T1     = T1 + T3                                                          RLSBS   48
      T2     = T2 + T4                                                          RLSBS   49
      WRITE (IREPFL) IEIGHT,IUNIQ,IONE,I23,IFOUR,T1,T2,T5,T6                    RLSBS   50
      IF (AR .EQ. 0.0)  GO TO 200                                               RLSBS   52
      PER1   = (T1/AR)*1000.                                                    RLSBS   53
      PER2   = T2/ARM                                                           RLSBS   54
      PER3   = ABS(T5/AR)*1000.                                                 RLSBS   55
      PER4   = ABS(T6/ARM)                                                      RLSBS   56
  200 WRITE (IREPFL) IEIGHT,IUNIQ,IONE,I24,IFOUR,PER1,PER2,PER3,PER4            RLSBS   57
      WRITE (IREPFL) IFOUR,IUNIQ,IONE,I25,IZERO                                 RLSBS   58
      WRITE (IREPFL) IFOUR,IUNIQ,IONE,I26,IZERO                                 RLSBS   59
      WRITE (IREPFL) IFOUR,IUNIQ,IONE,I27,IZERO                                 RLSBS   60
      WRITE (IREPFL) IFOUR,IUNIQ,IONE,I28,IZERO                                 RLSBS   61
      WRITE (IREPFL) IFOUR,IUNIQ,IONE,I29,IZERO                                 RLSBS   62
      WRITE (IREPFL) IFOUR,IUNIQ,IONE,I30,IZERO                                 RLSBS   63
      WRITE (IREPFL) IFOUR,IUNIQ,IONE,38,IZERO                                  -060    87
      WRITE (IREPFL) IFOUR,IUNIQ,IONE,39,IZERO                                  -060    88
      WRITE (IREPFL) IFOUR,IUNIQ,IONE,I26,IZERO                                 RLSBS   64
      WRITE (IREPFL) IFOUR,IUNIQ,IONE,I25,IZERO                                 RLSBS   65
      RETURN                                                                    RLSBS   66
      END                                                                       RLSBS   67
      SUBROUTINE RLSC                                                           RLSC     2
C                                                                               RLSC     3
C              WRITE REPORT RECORDS FOR REPORT LS-C - BUILDING                  RLSC     4
C              PEAK LOAD COMPONENTS                                             RLSC     5
C                                                                               RLSC     6
      COMMON  /BLDPK/  BLDPK(60), IHPP(2), ICPP(2), HRHPK, HRCPK                -063     1
      DIMENSION IBLDPK(66)                                                      -063     2
      EQUIVALENCE (IBLDPK(1),BLDPK(1))                                          /BLDPK/  4
      COMMON  /BLDVA/  BLDVOL, BLDARE, PATMDS                                   /BLDVA/  2
      COMMON /CLCFLG/ IFSTHR,IPRDFL,IGOLGE,NDD,LDSTYP,IFHRP                     DDAY1    1
      COMMON  /CONST/  DTOR, PIOVR2, PIOVR4, IBLNK, UNDEF, IUNDEF,              /CONST/  2
     1                 UNFILD, URAD, DEFIFR, DEFCFR, DEFINC, KWBTU              /CONST/  3
      REAL             KWBTU                                                    /CONST/  4
      COMMON /CTRL  / VERS(2),IRPFLG(4),IOVRLL(7),IWRTFL,IPROG,                 /CTRL/   2
     1       IFATAL,NAMPRG(3,7),MTRICR                                          /CTRL/   3
      COMMON  /DESTIT/ IDEST(3)                                                 /DESTIT/ 2
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                         /FILES/  3
     2              , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                    /FILES/  4
     3                IHRREP(3), IHRPAS(2)                                      /FILES/  5
      COMMON /INTS  / IZERO,IONE,ITWO,ITHREE,IFOUR,IFIVE,ISIX,                  /INTS/   2
     1                ISEVEN,IEIGHT,ININE,ITEN,                                 /INTS/   3
     2                I11,I12,I13,I14,I15,I16,I17,I18,I19,I20,                  /INTS/   4
     3                I21,I22,I23,I24,I25,I26,I27,I28,I29,I30,                  HVAC     4
     4                I31,I32,I33,I34,I35,I36,I37,I38,I39,I40,                  HVAC     5
     5                I41,I42,I43,I44,I45,I46,I47,I48,I49,I50,                  HVAC     6
     $                I51,I52,I53,I54,I55,I56,I57,I58,I59,I60,                  HVAC6    6
     $                I61,I62,I63,I64,I65,I66,I67,I68,I69,I70,                  HVAC6    7
     $                I71,I72,I73,I74,I75,I76,I77,I78,I79,I80,                  HVAC6    8
     $                I81,I82,I83,I84,I85,I86,I87,I88,I89,I90,                  HVAC6    9
     $                I91,I92,I93,I94,I95,I96,I97,I98,I99,I100                  HVAC6   10
      INTEGER         INTS(101)                                                 HVAC6   11
      EQUIVALENCE(IZERO,INTS(1))                                                /INTS/   7
      COMMON  /IRUNPD/  NRUNPD, JRUNPD, IRUNPD(6,15)                            /IRUNPD/ 2
      COMMON  /SIZE/   LENGTH,NVECT,NSCHED,NWF,NWPAR,NCONS,NGT,NWL,NGEO,        BLIND    5
     1                 NGSHAD, NWIN, NDOOR, NEW, NUG, NSP, NIWP, NIW,           /SIZE/   3
     2                 NFL, NDESDY, NBR, NOTH, NITH, NOPSRF,                    HRr     10
     3                 NSURF, NSSHD, NSHTOT                                     GEO1     1
C                                                                               RLSC    17
      DIMENSION ITIM(6,2),NEWTIT(9)                                             RLSC    18
C                                                                               RLSC    19
      DATA NEWTIT / 4HLS-C,4H Bui,4HLdin,4Hg Pe,4Hak L,4Hoad ,                  BIGNAM  90
     1              4HComp,4Honen,4Hts  /                                       BIGNAM  91
C                                                                               RLSC    22
C              RESET REPORT TITLE                                               RLSC    23
      IUNIQ = 201                                                               RLSC    24
      IF((NDESDY.NE.0).AND.(NRUNPD.GT.NDESDY).AND.(NDD.LE.0)) IUNIQ=202         RLSC    25
      WRITE (IREPFL) I22,IUNIQ,ISIX,(NEWTIT(II),II=1,9),IBLNK,IBLNK,            RLSC    26
     1               (IBLNK,II=1,6),(IDEST(II),II=1,3)                          RLSC    27
      CALL TIMPRP(BLDPK(3),ITIM(1,1))                                           RLSC    28
      CALL TIMPRP(BLDPK(8),ITIM(1,2))                                           RLSC    29
      MAREA  = IROUND(BLDARE*0.0929)                                            RLSC    30
      MVOL   = IROUND(BLDVOL*0.02832)                                           RLSC    31
      NFMT   = 31                                                               RLSC    32
      WRITE (IREPFL) IFOUR,IUNIQ,IONE,NFMT,IZERO                                RLSC    33
      ITOTFA = IROUND(BLDARE)                                                   RLSC    34
      ITOTV  = IROUND(BLDVOL)                                                   RLSC    35
      NFMT   = 32                                                               RLSC    36
      WRITE (IREPFL) IEIGHT,IUNIQ,IONE,NFMT,IFOUR,ITOTFA,MAREA,ITOTV,           RLSC    37
     1               MVOL                                                       RLSC    38
      CALL RLSBH(BLDPK(1),ITIM(1,1),IUNIQ)                                      RLSC    39
      CALL RLSBS(BLDPK(25),BLDPK(11),BLDARE,IUNIQ)                              RLSC    40
      WRITE (IREPFL) ITWO,IUNIQ,ISEVEN                                          RLSC    41
      RETURN                                                                    RLSC    42
      END                                                                       RLSC    43
      SUBROUTINE RLSD                                                           RLSD     2
C                                                                               RLSD     3
C              WRITE REPORT RECORDS FOR LS-D - BUILDING MONTHLY LOADS           RLSD     4
C              SUMMARY                                                          RLSD     5
C                                                                               RLSD     6
      COMMON /CLCFLG/ IFSTHR,IPRDFL,IGOLGE,NDD,LDSTYP,IFHRP                     DDAY1    1
      COMMON  /CONST/  DTOR, PIOVR2, PIOVR4, IBLNK, UNDEF, IUNDEF,              /CONST/  2
     1                 UNFILD, URAD, DEFIFR, DEFCFR, DEFINC, KWBTU              /CONST/  3
      REAL             KWBTU                                                    /CONST/  4
      COMMON /CTRL  / VERS(2),IRPFLG(4),IOVRLL(7),IWRTFL,IPROG,                 /CTRL/   2
     1       IFATAL,NAMPRG(3,7),MTRICR                                          /CTRL/   3
      COMMON  /DESTIT/ IDEST(3)                                                 /DESTIT/ 2
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                         /FILES/  3
     2              , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                    /FILES/  4
     3                IHRREP(3), IHRPAS(2)                                      /FILES/  5
      COMMON /INTS  / IZERO,IONE,ITWO,ITHREE,IFOUR,IFIVE,ISIX,                  /INTS/   2
     1                ISEVEN,IEIGHT,ININE,ITEN,                                 /INTS/   3
     2                I11,I12,I13,I14,I15,I16,I17,I18,I19,I20,                  /INTS/   4
     3                I21,I22,I23,I24,I25,I26,I27,I28,I29,I30,                  HVAC     4
     4                I31,I32,I33,I34,I35,I36,I37,I38,I39,I40,                  HVAC     5
     5                I41,I42,I43,I44,I45,I46,I47,I48,I49,I50,                  HVAC     6
     $                I51,I52,I53,I54,I55,I56,I57,I58,I59,I60,                  HVAC6    6
     $                I61,I62,I63,I64,I65,I66,I67,I68,I69,I70,                  HVAC6    7
     $                I71,I72,I73,I74,I75,I76,I77,I78,I79,I80,                  HVAC6    8
     $                I81,I82,I83,I84,I85,I86,I87,I88,I89,I90,                  HVAC6    9
     $                I91,I92,I93,I94,I95,I96,I97,I98,I99,I100                  HVAC6   10
      INTEGER         INTS(101)                                                 HVAC6   11
      EQUIVALENCE(IZERO,INTS(1))                                                /INTS/   7
      COMMON  /IRUNPD/  NRUNPD, JRUNPD, IRUNPD(6,15)                            /IRUNPD/ 2
      COMMON/MONREP/BCSUM(12),IDYCPK(12),IHRCPK(12),DBCPK(12),                  /MONREP/ 2
     1         WBCPK(12),BCPK(12),BHSUM(12),IDYHPK(12),                         /MONREP/ 3
     2         IHRHPK(12),DBHPK(12),WBHPK(12),BHPK(12),                         /MONREP/ 4
     3                 BESUM(12),BEPK(12),BQCM(6,11),BLSI(4,25)                 /MONREP/ 5
      COMMON  /SIZE/   LENGTH,NVECT,NSCHED,NWF,NWPAR,NCONS,NGT,NWL,NGEO,        BLIND    5
     1                 NGSHAD, NWIN, NDOOR, NEW, NUG, NSP, NIWP, NIW,           /SIZE/   3
     2                 NFL, NDESDY, NBR, NOTH, NITH, NOPSRF,                    HRr     10
     3                 NSURF, NSSHD, NSHTOT                                     GEO1     1
      COMMON /TIME  / IDOY, IDOW, IDSTF, ISCHR, ISCDAY, iDSdates(6),            -044e5r  1
     1                IMO, IDAY, IYR, IHR, CLOCK(10), IDSFLG,                   HOLID1   4
     2                MONDSC(12), MONLEN(12), MONSDA(12), IEODMR                /TIME/   4
C                                                                               RLSD    17
      DIMENSION NEWTIT(9)                                                       RLSD    18
C                                                                               RLSD    19
      DATA NEWTIT / 4HLS-D,4H Bui,4Hldin,4Hg Mo,4Hnthl,4Hy Lo,                  BIGNAM  92
     1              4Hads ,4HSumm,4Hary  /                                      BIGNAM  93
C                                                                               RLSD    22
C              RESET REPORT TITLE                                               RLSD    23
      IUNIQ = 301                                                               RLSD    24
      IF((NDESDY.NE.0).AND.(NRUNPD.GT.NDESDY).AND.(NDD.LE.0)) IUNIQ=302         RLSD    25
      WRITE (IREPFL) I22,IUNIQ,ISIX,(NEWTIT(I),I=1,9),IBLNK,IBLNK,              RLSD    26
     1    (IBLNK,II=1,6),(IDEST(II),II=1,3)                                     RLSD    27
C                                                                               RLSD    28
      HSUM   = 0.                                                               RLSD    29
      CSUM   = 0.                                                               RLSD    30
      ESUM   = 0.                                                               RLSD    31
      HPK    = 0.                                                               RLSD    32
      CPK    = 0.                                                               RLSD    33
      EPK    = 0.                                                               RLSD    34
      WRITE (IREPFL) IFOUR,IUNIQ,IONE,ITWO,IZERO                                RLSD    35
      WRITE (IREPFL) IFOUR,IUNIQ,IONE,IONE,IZERO                                RLSD    36
      DO 100 I=1,12                                                             RLSD    37
      BCSUM(I) = BCSUM(I)*1.0E-6                                                RLSD    39
      BCPK(I) = BCPK(I)*.001                                                    RLSD    40
      BHSUM(I) = BHSUM(I)*1.0E-6                                                RLSD    41
      BHPK(I) = BHPK(I)*.001                                                    RLSD    42
      BESUM(I) = BESUM(I) * KWBTU                                               RLSD    43
      BEPK(I)  = BEPK(I)  * KWBTU                                               RLSD    44
C     IF (BCSUM(I) .EQ. 0.0 .AND. BHSUM(I) .EQ. 0.0)  THEN                      VISBL2  13
C       WRITE (IREPFL) I11,IUNIQ,IONE,ITEN,ISEVEN,MONDSC(I),BCSUM(I),           VISBL2  14
C    1        BCPK(I),BHSUM(I),BHPK(I),BESUM(I),BEPK(I)                         VISBL2  15
C     ELSE IF (BCSUM(I) .EQ. 0.0)  THEN                                         VISBL2  16
C       WRITE(IREPFL) I15,IUNIQ,IONE,IEIGHT,I11,MONDSC(I),BCSUM(I),             VISBL2  17
C    1       BCPK(I),BHSUM(I),IDYHPK(I),IHRHPK(I),DBHPK(I),                     VISBL2  18
C    2       WBHPK(I),BHPK(I),BESUM(I),BEPK(I)                                  VISBL2  19
C     ELSE IF (BHSUM(I) .EQ. 0.0)  THEN                                         VISBL2  20
C       WRITE(IREPFL) I15,IUNIQ,IONE,ININE,I11,MONDSC(I),BCSUM(I),              VISBL2  21
C    1       IDYCPK(I),IHRCPK(I),DBCPK(I),WBCPK(I),                             VISBL2  22
C    2       BCPK(I),BHSUM(I),BHPK(I),BESUM(I),BEPK(I)                          VISBL2  23
C     ELSE                                                                      VISBL2  24
        WRITE(IREPFL)I19,IUNIQ,IONE,ITHREE,I15,MONDSC(I),BCSUM(I),              VISBL2  25
     1       IDYCPK(I),IHRCPK(I),DBCPK(I),WBCPK(I),                             VISBL2  26
     2       BCPK(I),BHSUM(I),IDYHPK(I),IHRHPK(I),DBHPK(I),                     VISBL2  27
     3       WBHPK(I),BHPK(I),BESUM(I),BEPK(I)                                  VISBL2  28
C     ENDIF                                                                     VISBL2  29
      HSUM   = HSUM + BHSUM(I)                                                  RLSD    63
      CSUM   = CSUM + BCSUM(I)                                                  RLSD    64
      ESUM   = ESUM + BESUM(I)                                                  RLSD    65
      IF (CPK .LT. BCPK(I)) CPK = BCPK(I)                                       RLSD    66
      IF (HPK .GT. BHPK(I)) HPK = BHPK(I)                                       RLSD    67
      IF (EPK .LT. BEPK(I)) EPK = BEPK(I)                                       RLSD    68
  100 CONTINUE                                                                  RLSD    69
      WRITE (IREPFL) IFOUR,IUNIQ,IONE,IFOUR,IZERO                               RLSD    70
      WRITE (IREPFL) ISEVEN,IUNIQ,IONE,IFIVE,ITHREE,CSUM,HSUM,ESUM              RLSD    71
      WRITE (IREPFL) ISEVEN,IUNIQ,IONE,ISIX,ITHREE,CPK,HPK,EPK                  RLSD    72
      WRITE (IREPFL) ITWO,IUNIQ,ISEVEN                                          RLSD    73
      RETURN                                                                    RLSD    74
      END                                                                       RLSD    75
      SUBROUTINE  RLSE (IFLAG,ZQCM)                                             RLSE     2
C                                                                               RLSE     3
C              WRITE REPORT RECORDS FOR LS-E -- ZONE MONTHLY                    RLSE     4
C              LOAD COMPONENTS                                                  RLSE     5
C                                                                               RLSE     6
C              IFLAG  1 - WRITE TITLE AND HEADING RECORD                        RLSE     7
C                     2 - WRITE MONTHLY RECORD                                  RLSE     8
C                     3 - WRITE YEARLY TOTALS RECORD                            RLSE     9
C                                                                               RLSE    10
      COMMON /CLCFLG/ IFSTHR,IPRDFL,IGOLGE,NDD,LDSTYP,IFHRP                     DDAY1    1
      COMMON  /CONST/  DTOR, PIOVR2, PIOVR4, IBLNK, UNDEF, IUNDEF,              /CONST/  2
     1                 UNFILD, URAD, DEFIFR, DEFCFR, DEFINC, KWBTU              /CONST/  3
      REAL             KWBTU                                                    /CONST/  4
      COMMON /CTRL  / VERS(2),IRPFLG(4),IOVRLL(7),IWRTFL,IPROG,                 /CTRL/   2
     1       IFATAL,NAMPRG(3,7),MTRICR                                          /CTRL/   3
      COMMON  /DESTIT/ IDEST(3)                                                 /DESTIT/ 2
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                         /FILES/  3
     2              , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                    /FILES/  4
     3                IHRREP(3), IHRPAS(2)                                      /FILES/  5
      COMMON /INTS  / IZERO,IONE,ITWO,ITHREE,IFOUR,IFIVE,ISIX,                  /INTS/   2
     1                ISEVEN,IEIGHT,ININE,ITEN,                                 /INTS/   3
     2                I11,I12,I13,I14,I15,I16,I17,I18,I19,I20,                  /INTS/   4
     3                I21,I22,I23,I24,I25,I26,I27,I28,I29,I30,                  HVAC     4
     4                I31,I32,I33,I34,I35,I36,I37,I38,I39,I40,                  HVAC     5
     5                I41,I42,I43,I44,I45,I46,I47,I48,I49,I50,                  HVAC     6
     $                I51,I52,I53,I54,I55,I56,I57,I58,I59,I60,                  HVAC6    6
     $                I61,I62,I63,I64,I65,I66,I67,I68,I69,I70,                  HVAC6    7
     $                I71,I72,I73,I74,I75,I76,I77,I78,I79,I80,                  HVAC6    8
     $                I81,I82,I83,I84,I85,I86,I87,I88,I89,I90,                  HVAC6    9
     $                I91,I92,I93,I94,I95,I96,I97,I98,I99,I100                  HVAC6   10
      INTEGER         INTS(101)                                                 HVAC6   11
      EQUIVALENCE(IZERO,INTS(1))                                                /INTS/   7
      COMMON  /IRUNPD/  NRUNPD, JRUNPD, IRUNPD(6,15)                            /IRUNPD/ 2
      COMMON  /LENS/   MWFLEN, MRLEN, MSHLEN, MWNLEN, MDRLEN, MXLEN,            /LENS/   2
     1                 MULEN, MZLEN, MIWLEN, MFLLEN,                            HRr      5
     2                 LMTB, LLDSOU, MSTLEN, LSTFT, MWLLEN                      BLIND    1
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     BLIND    2
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        FLOOR1   3
      COMMON  /PTRBGN/ ISCB, IWFB, IWPB, ICONSB, IGTB, IWLB, IGEOB,             HRr      6
     1                 ISHADB, IWINB, IDRB, IEWB, IUGB, ISPB, IIWPB,            HRr      7
     2                 IIWB, IFLB, ISPCDB, IOTHB, ILHB, IZQCMB, ISSHDB,         HRr      8
     3                 IOHFIB, IZLSK, IZLSL, ISTFB                              HRr      9
      COMMON  /SIZE/   LENGTH,NVECT,NSCHED,NWF,NWPAR,NCONS,NGT,NWL,NGEO,        BLIND    5
     1                 NGSHAD, NWIN, NDOOR, NEW, NUG, NSP, NIWP, NIW,           /SIZE/   3
     2                 NFL, NDESDY, NBR, NOTH, NITH, NOPSRF,                    HRr     10
     3                 NSURF, NSSHD, NSHTOT                                     GEO1     1
      COMMON /TIME  / IDOY, IDOW, IDSTF, ISCHR, ISCDAY, iDSdates(6),            -044e5r  1
     1                IMO, IDAY, IYR, IHR, CLOCK(10), IDSFLG,                   HOLID1   4
     2                MONDSC(12), MONLEN(12), MONSDA(12), IEODMR                /TIME/   4
      COMMON        // AA(75 000 000)                                           -048ar   1
      INTEGER          IA(75 000 000)                                           -048ar   2
      EQUIVALENCE  (IA(1), AA(1))                                               //       4
C                                                                               RLSE    24
      DIMENSION NEWTIT(9),ZQCM(6,11,1)                                          BIGNAM  94
      DATA NEWTIT/ 4HLS-E,4H Spa,4Hce M,4Honth,4Hly L,4Hoad ,                   BIGNAM  95
     1             4HComp,4Honen,4Hts  /                                        BIGNAM  96
C                                                                               RLSE    30
      MZ=ISPB                                                                   RLSE    31
C                                                                               RLSE    32
      DO 2000 IZ=1,NSP                                                          RLSE    33
C                                                                               RLSE    34
      IUNIQ = 50000 + IZ                                                        -035    32
      IF((NDESDY.NE.0).AND.(NRUNPD.GT.NDESDY).AND.(NDD.LE.0))                   RLSE    36
     $    IUNIQ = 60000 + IZ                                                    -035    33
C                                                                               RLSE    38
      GO TO (100,200,300),IFLAG                                                 RLSE    39
C                                                                               RLSE    40
  100 CONTINUE                                                                  RLSE    41
C              WRITE TITLE AND HEADING RECORD                                   RLSE    44
      WRITE (IREPFL) I22,IUNIQ,ISIX,(NEWTIT(II),II=1,9),                        BIGNAM  97
     1               (<IZNM>,II=1,8),(IDEST(II),II=1,3)                         BIGNAM  98
      WRITE(IREPFL) IFOUR,IUNIQ,IONE,IONE,IZERO                                 RLSE    47
      GO TO 1000                                                                RLSE    48
C                                                                               RLSE    49
  200 CONTINUE                                                                  RLSE    50
C              MONTHLY RECORD                                                   RLSE    51
C              CALCULATE TOTAL LOAD (SUM OF ALL LOAD COMPONENTS) FOR            RLSE    52
C              SENSIBLE COOLING, LATENT COOLING, AND HEATING                    RLSE    53
      TOTSEN = 0.                                                               RLSE    54
      TOTHT  = 0.                                                               RLSE    55
      DO 210 J=1,11                                                             RLSE    56
      TOTSEN = TOTSEN + ZQCM(1,J,IZ)                                            RLSE    57
      TOTHT  = TOTHT  + ZQCM(3,J,IZ)                                            RLSE    58
  210 CONTINUE                                                                  RLSE    59
C              TOTAL LATENT FROM INFIL, PEOPLE, EQUIP, AND SOURCE               RLSE    60
      TOTLAT = ZQCM(2,5,IZ)+ZQCM(2,8,IZ)+ZQCM(2,10,IZ)+ZQCM(2,11,IZ)            RLSE    61
C              WRITE MONTHLY RECORD                                             RLSE    62
      WRITE(IREPFL) I34,IUNIQ,IONE,ITWO,I30,                                    RLSE    63
     1          (ZQCM(3,J,IZ),J=1,11),TOTHT,                                    RLSE    64
     2          MONDSC(IMO),(ZQCM(1,J,IZ),J=1,11),TOTSEN,                       RLSE    65
     3          ZQCM(2,5,IZ),ZQCM(2,8,IZ),ZQCM(2,10,IZ),ZQCM(2,11,IZ),          RLSE    66
     4            TOTLAT                                                        RLSE    67
C              ZERO MONTHLY PART OF ZQCM ARRAY FOR USE NEXT MONTH               RLSE    68
      DO 230 I=1,3                                                              RLSE    69
      DO 240 J=1,11                                                             RLSE    70
      ZQCM(I,J,IZ)=0.                                                           RLSE    71
  240 CONTINUE                                                                  RLSE    72
  230 CONTINUE                                                                  RLSE    73
      GO TO 1000                                                                RLSE    74
C                                                                               RLSE    75
  300 CONTINUE                                                                  RLSE    76
C              CALCULATE TOTAL ANNUAL LOAD FOR SENSIBLE COOLING,                RLSE    77
C              LATENT COOLING, AND HEATING                                      RLSE    78
      TOTSEN = 0.                                                               RLSE    79
      TOTHT  = 0.                                                               RLSE    80
      DO 310 J=1,11                                                             RLSE    81
      TOTSEN = TOTSEN + ZQCM(4,J,IZ)                                            RLSE    82
      TOTHT  = TOTHT  + ZQCM(6,J,IZ)                                            RLSE    83
  310 CONTINUE                                                                  RLSE    84
      TOTLAT = ZQCM(5,5,IZ)+ZQCM(5,8,IZ)+ZQCM(5,10,IZ)+ZQCM(5,11,IZ)            RLSE    85
C              WRITE ANNUAL RECORD                                              RLSE    86
      WRITE(IREPFL) I33,IUNIQ,IONE,ITHREE,I29,                                  RLSE    87
     1              (ZQCM(6,J,IZ),J=1,11),TOTHT,                                RLSE    88
     2              (ZQCM(4,J,IZ),J=1,11),TOTSEN,                               RLSE    89
     3              ZQCM(5,5,IZ),ZQCM(5,8,IZ),ZQCM(5,10,IZ),                    RLSE    90
     4                ZQCM(5,11,IZ),TOTLAT                                      RLSE    91
C              FINAL RECORD                                                     RLSE    92
      WRITE(IREPFL) ITWO,IUNIQ,ISEVEN                                           RLSE    93
C              ZERO YEARLY PART OF ZQCM ARRAY IF NOT LAST RUN PERIOD            RLSE    94
      IF(JRUNPD.EQ.NRUNPD) GO TO 1000                                           RLSE    95
      DO 330 I=4,6                                                              RLSE    96
      DO 340 J=1,11                                                             RLSE    97
      ZQCM(I,J,IZ) = 0.                                                         RLSE    98
  340 CONTINUE                                                                  RLSE    99
  330 CONTINUE                                                                  RLSE   100
C                                                                               RLSE   101
 1000 CONTINUE                                                                  RLSE   102
      MZ = MZ + MZLEN                                                           RLSE   103
C                                                                               RLSE   104
 2000 CONTINUE                                                                  RLSE   105
      RETURN                                                                    RLSE   106
      END                                                                       RLSE   107
      SUBROUTINE  RLSF(IFLAG)                                                   RLSF     2
C                                                                               RLSF     3
C              WRITE REPORT RECORDS FOR LS-F  --  BUILDING MONTHLY              RLSF     4
C              LOAD COMPONENTS                                                  RLSF     5
C                                                                               RLSF     6
C              IFLAG  1 - WRITE TITLE AND HEADING RECORD                        RLSF     7
C                     2 - WRITE MONTHLY RECORD                                  RLSF     8
C                     3 - WRITE ANNUAL TOTAL RECORD                             RLSF     9
C                                                                               RLSF    10
      COMMON /CLCFLG/ IFSTHR,IPRDFL,IGOLGE,NDD,LDSTYP,IFHRP                     DDAY1    1
      COMMON  /CONST/  DTOR, PIOVR2, PIOVR4, IBLNK, UNDEF, IUNDEF,              /CONST/  2
     1                 UNFILD, URAD, DEFIFR, DEFCFR, DEFINC, KWBTU              /CONST/  3
      REAL             KWBTU                                                    /CONST/  4
      COMMON /CTRL  / VERS(2),IRPFLG(4),IOVRLL(7),IWRTFL,IPROG,                 /CTRL/   2
     1       IFATAL,NAMPRG(3,7),MTRICR                                          /CTRL/   3
      COMMON  /DESTIT/ IDEST(3)                                                 /DESTIT/ 2
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                         /FILES/  3
     2              , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                    /FILES/  4
     3                IHRREP(3), IHRPAS(2)                                      /FILES/  5
      COMMON /INTS  / IZERO,IONE,ITWO,ITHREE,IFOUR,IFIVE,ISIX,                  /INTS/   2
     1                ISEVEN,IEIGHT,ININE,ITEN,                                 /INTS/   3
     2                I11,I12,I13,I14,I15,I16,I17,I18,I19,I20,                  /INTS/   4
     3                I21,I22,I23,I24,I25,I26,I27,I28,I29,I30,                  HVAC     4
     4                I31,I32,I33,I34,I35,I36,I37,I38,I39,I40,                  HVAC     5
     5                I41,I42,I43,I44,I45,I46,I47,I48,I49,I50,                  HVAC     6
     $                I51,I52,I53,I54,I55,I56,I57,I58,I59,I60,                  HVAC6    6
     $                I61,I62,I63,I64,I65,I66,I67,I68,I69,I70,                  HVAC6    7
     $                I71,I72,I73,I74,I75,I76,I77,I78,I79,I80,                  HVAC6    8
     $                I81,I82,I83,I84,I85,I86,I87,I88,I89,I90,                  HVAC6    9
     $                I91,I92,I93,I94,I95,I96,I97,I98,I99,I100                  HVAC6   10
      INTEGER         INTS(101)                                                 HVAC6   11
      EQUIVALENCE(IZERO,INTS(1))                                                /INTS/   7
      COMMON  /IRUNPD/  NRUNPD, JRUNPD, IRUNPD(6,15)                            /IRUNPD/ 2
      COMMON  /LENS/   MWFLEN, MRLEN, MSHLEN, MWNLEN, MDRLEN, MXLEN,            /LENS/   2
     1                 MULEN, MZLEN, MIWLEN, MFLLEN,                            HRr      5
     2                 LMTB, LLDSOU, MSTLEN, LSTFT, MWLLEN                      BLIND    1
      COMMON/MONREP/BCSUM(12),IDYCPK(12),IHRCPK(12),DBCPK(12),                  /MONREP/ 2
     1         WBCPK(12),BCPK(12),BHSUM(12),IDYHPK(12),                         /MONREP/ 3
     2         IHRHPK(12),DBHPK(12),WBHPK(12),BHPK(12),                         /MONREP/ 4
     3                 BESUM(12),BEPK(12),BQCM(6,11),BLSI(4,25)                 /MONREP/ 5
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     BLIND    2
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        FLOOR1   3
      COMMON  /PTRBGN/ ISCB, IWFB, IWPB, ICONSB, IGTB, IWLB, IGEOB,             HRr      6
     1                 ISHADB, IWINB, IDRB, IEWB, IUGB, ISPB, IIWPB,            HRr      7
     2                 IIWB, IFLB, ISPCDB, IOTHB, ILHB, IZQCMB, ISSHDB,         HRr      8
     3                 IOHFIB, IZLSK, IZLSL, ISTFB                              HRr      9
      COMMON  /SIZE/   LENGTH,NVECT,NSCHED,NWF,NWPAR,NCONS,NGT,NWL,NGEO,        BLIND    5
     1                 NGSHAD, NWIN, NDOOR, NEW, NUG, NSP, NIWP, NIW,           /SIZE/   3
     2                 NFL, NDESDY, NBR, NOTH, NITH, NOPSRF,                    HRr     10
     3                 NSURF, NSSHD, NSHTOT                                     GEO1     1
      COMMON /TIME  / IDOY, IDOW, IDSTF, ISCHR, ISCDAY, iDSdates(6),            -044e5r  1
     1                IMO, IDAY, IYR, IHR, CLOCK(10), IDSFLG,                   HOLID1   4
     2                MONDSC(12), MONLEN(12), MONSDA(12), IEODMR                /TIME/   4
      COMMON        // AA(75 000 000)                                           -048ar   1
      INTEGER          IA(75 000 000)                                           -048ar   2
      EQUIVALENCE  (IA(1), AA(1))                                               //       4
C                                                                               RLSF    25
      DIMENSION NEWTIT(9)                                                       -042L1r 34
C                                                                               RLSF    27
      DATA NEWTIT/4HLS-F,4H Bui,4Hldin,4Hg Mo,4Hnthl,4Hy Lo,                    -042L1r 35
     1            4Had C,4Hompo,4Hnent/                                         -042L1r 36
C                                                                               RLSF    32
      IUNIQ = 801                                                               RLSF    33
      IF((NDESDY.NE.0).AND.(NRUNPD.GT.NDESDY).AND.(NDD.LE.0)) IUNIQ=802         RLSF    34
C                                                                               RLSF    35
      GO TO (100,200,300),IFLAG                                                 RLSF    36
C                                                                               RLSF    37
C                                                                               RLSF    38
  100 CONTINUE                                                                  RLSF    39
C              WRITE TITLE AND HEADING RECORD                                   RLSF    40
      WRITE(IREPFL) I22,IUNIQ,ISIX,(NEWTIT(II),II=1,9),                         -042L1r 37
     1               (IBLNK,II=1,8),(IDEST(II),II=1,3)                          -042L1r 38
      WRITE(IREPFL) IFOUR,IUNIQ,IONE,IONE,IZERO                                 RLSF    45
      GO TO 1000                                                                RLSF    46
C                                                                               RLSF    47
  200 CONTINUE                                                                  RLSF    48
C              CALCULATE TOTAL LOAD (SUM OF ALL LOAD COMPONENTS) FOR            RLSF    49
C              SENSIBLE COOLING, LATENT COOLING, AND HEATING                    RLSF    50
      TOTSEN = 0.                                                               RLSF    51
      TOTHT  = 0.                                                               RLSF    52
      DO 210 J=1,11                                                             RLSF    53
      TOTSEN = TOTSEN + BQCM(1,J)                                               RLSF    54
      TOTHT  = TOTHT  + BQCM(3,J)                                               RLSF    55
  210 CONTINUE                                                                  RLSF    56
C              TOTAL LATENT FROM INFIL, PEOPLE, EQUIP, AND SOURCE               RLSF    57
      TOTLAT = BQCM(2,5) + BQCM(2,8) + BQCM(2,10) + BQCM(2,11)                  RLSF    58
C              WRITE MONTHLY RECORD                                             RLSF    59
      WRITE(IREPFL) I34,IUNIQ,IONE,ITWO,I30,                                    RLSF    60
     1      (BQCM(3,J),J=1,11),TOTHT,                                           RLSF    61
     2      MONDSC(IMO),(BQCM(1,J),J=1,11),TOTSEN,                              RLSF    62
     3      BQCM(2,5),BQCM(2,8),BQCM(2,10),BQCM(2,11),TOTLAT                    RLSF    63
C              ZERO MONTHLY PART OF BQCM ARRAY FOR USE NEXT MONTH               RLSF    64
      DO 230 I=1,3                                                              RLSF    65
      DO 240 J=1,11                                                             RLSF    66
      BQCM(I,J) = 0.                                                            RLSF    67
  240 CONTINUE                                                                  RLSF    68
  230 CONTINUE                                                                  RLSF    69
      GO TO 1000                                                                RLSF    70
C                                                                               RLSF    71
  300 CONTINUE                                                                  RLSF    72
C             CALCULATE TOTAL ANNUAL LOAD FOR SENSIBLE COOLING,                 RLSF    73
C             LATENT COOLING, AND HEATING                                       RLSF    74
      TOTSEN = 0.                                                               RLSF    75
      TOTHT  = 0.                                                               RLSF    76
      DO 310 J=1,11                                                             RLSF    77
      TOTSEN = TOTSEN + BQCM(4,J)                                               RLSF    78
      TOTHT  = TOTHT  + BQCM(6,J)                                               RLSF    79
  310 CONTINUE                                                                  RLSF    80
      TOTLAT = BQCM(5,5) + BQCM(5,8) + BQCM(5,10) + BQCM(5,11)                  RLSF    81
C              WRITE ANNUAL COMPONENTS AND TOTALS RECORD                        RLSF    82
      WRITE(IREPFL) I33,IUNIQ,IONE,ITHREE,I29,                                  RLSF    83
     1              (BQCM(6,J),J=1,11),TOTHT,                                   RLSF    84
     2              (BQCM(4,J),J=1,11),TOTSEN,                                  RLSF    85
     3              BQCM(5,5),BQCM(5,8),BQCM(5,10),BQCM(5,11),TOTLAT            RLSF    86
C              FINAL RECORD                                                     RLSF    87
      WRITE(IREPFL) ITWO,IUNIQ,ISEVEN                                           RLSF    88
C                                                                               RLSF    89
 1000 CONTINUE                                                                  RLSF    90
      RETURN                                                                    RLSF    91
      END                                                                       RLSF    92
      SUBROUTINE  RLSG(IFLAG,ZLSG,ZDREP)                                        RLSG     2
C                                                                               RLSG     3
C              WRITE REPORT RECORDS FOR LS-G -- SPACE DAYLIGHTING               RLSG     4
C              SUMMARY                                                          RLSG     5
C                                                                               RLSG     6
C              IFLAG  1 - WRITE TITLE AND HEADING RECORD                        RLSG     7
C                     2 - WRITE MONTHLY RECORD                                  RLSG     8
C                     3 - WRITE YEARLY TOTALS RECORD                            RLSG     9
C                                                                               RLSG    10
      COMMON /CLCFLG/ IFSTHR,IPRDFL,IGOLGE,NDD,LDSTYP,IFHRP                     DDAY1    1
      COMMON  /CONST/  DTOR, PIOVR2, PIOVR4, IBLNK, UNDEF, IUNDEF,              /CONST/  2
     1                 UNFILD, URAD, DEFIFR, DEFCFR, DEFINC, KWBTU              /CONST/  3
      REAL             KWBTU                                                    /CONST/  4
      COMMON  /DAYLT/ NDAYCF,IPHS,IZ,IHIT,MHHIT,IL,RHOAV,ATOT,ARHTOT,           /DAYLT/  2
     1                AR(3),AP(3),ARH(3),ARHP(3),NPH,NTH,WC(3),TMULT,           /DAYLT/  3
     2                TSOLNM,TVISDF,FRUP,ISHLOC,NWTOT,RHOCW,RHOFW,WAREA,        /DAYLT/  4
     3                IMREF,PHSUN,THSUN,PHSUND,THSUND,THSMIN,PHSMIN,            /DAYLT/  5
     4                THSMAX,PHSMAX,THSDEL,PHSDEL,H,NTHS,NPHS,NDFC,LWDC,        /DAYLT/  6
     5                BETA,W,IBZ,IWZ,ZENL,JZD,WBACLU(2,2),PF(7,5),              /DAYLT/  7
     6                VIEWVC(3),GLRNDX(2),WDAYIL(2,2),BACLUM(2),ITF(3),         /DAYLT/  8
     7                RDAYIL(2),RBACLU(2),GLRNEW(2),ETACLD,CDIRLW(24),          /DAYLT/  9
     8                CDIFLW(24),ODIFLW(24),SOLIC(12),TFAC,SPHSUN,              /DAYLT/ 10
     9                CPHSUN,PHWN,THWN,SPHWN,CPHWN,TOTIL(2),ATMMOI(12),         /DAYLT/ 11
     1                ATMTUR(12),XRAN,ALFAD,THRAT,PHRAT,SETPNT(2),              /DAYLT/ 12
     2                IZLSG,IZLSH,IZLSJM,IZLSJY,IZDREP,FPHRP(2),ZFTOT,          /DAYLT/ 13
     3                EINTSK(2,12,24),EINTSU(2,12,24),EDIRSK(2,12,24),          VISBL    2
     4                EDIRSU(2,12,24),FLCWSK(2,12),FLCWSU(2,12),                VISBL    3
     5                FLFWSK(2,12),FLFWSU(2,12),GILSK(2,10),GILSU(2,10),        VISBL    4
     6                WLUMSK(2,11,24),WLUMSU(2,11,24),AVWLSK(2,12,24),          VISBL    5
     7                AVWLSU(2,12,24),CHILSK(24),CHILSU(24),OHILSK(24),         VISBL    6
     8                DFSKHR(2,2),DFSUHR(2,2),SFSKHR(2,2),SFSUHR(2,2),          /DAYLT/ 19
     9                BFSKHR(2,2),BFSUHR(2,2),HISUNF,CHISKF,OHISKF,IZLSM        44d5br   1
      COMMON  /DAYL1/  ATMTU, ATMMO, TAU1                                       /DAYLT/ 21
     1               , TVISB, TH, PH, RAY(3), WNORM(3), TVISBR                  /DAYLT/ 22
      COMMON  /DESTIT/ IDEST(3)                                                 /DESTIT/ 2
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                         /FILES/  3
     2              , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                    /FILES/  4
     3                IHRREP(3), IHRPAS(2)                                      /FILES/  5
      COMMON /INTS  / IZERO,IONE,ITWO,ITHREE,IFOUR,IFIVE,ISIX,                  /INTS/   2
     1                ISEVEN,IEIGHT,ININE,ITEN,                                 /INTS/   3
     2                I11,I12,I13,I14,I15,I16,I17,I18,I19,I20,                  /INTS/   4
     3                I21,I22,I23,I24,I25,I26,I27,I28,I29,I30,                  HVAC     4
     4                I31,I32,I33,I34,I35,I36,I37,I38,I39,I40,                  HVAC     5
     5                I41,I42,I43,I44,I45,I46,I47,I48,I49,I50,                  HVAC     6
     $                I51,I52,I53,I54,I55,I56,I57,I58,I59,I60,                  HVAC6    6
     $                I61,I62,I63,I64,I65,I66,I67,I68,I69,I70,                  HVAC6    7
     $                I71,I72,I73,I74,I75,I76,I77,I78,I79,I80,                  HVAC6    8
     $                I81,I82,I83,I84,I85,I86,I87,I88,I89,I90,                  HVAC6    9
     $                I91,I92,I93,I94,I95,I96,I97,I98,I99,I100                  HVAC6   10
      INTEGER         INTS(101)                                                 HVAC6   11
      EQUIVALENCE(IZERO,INTS(1))                                                /INTS/   7
      COMMON  /IRUNPD/  NRUNPD, JRUNPD, IRUNPD(6,15)                            /IRUNPD/ 2
      COMMON  /LENS/   MWFLEN, MRLEN, MSHLEN, MWNLEN, MDRLEN, MXLEN,            /LENS/   2
     1                 MULEN, MZLEN, MIWLEN, MFLLEN,                            HRr      5
     2                 LMTB, LLDSOU, MSTLEN, LSTFT, MWLLEN                      BLIND    1
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     BLIND    2
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        FLOOR1   3
      COMMON  /PTRBGN/ ISCB, IWFB, IWPB, ICONSB, IGTB, IWLB, IGEOB,             HRr      6
     1                 ISHADB, IWINB, IDRB, IEWB, IUGB, ISPB, IIWPB,            HRr      7
     2                 IIWB, IFLB, ISPCDB, IOTHB, ILHB, IZQCMB, ISSHDB,         HRr      8
     3                 IOHFIB, IZLSK, IZLSL, ISTFB                              HRr      9
      COMMON  /SIZE/   LENGTH,NVECT,NSCHED,NWF,NWPAR,NCONS,NGT,NWL,NGEO,        BLIND    5
     1                 NGSHAD, NWIN, NDOOR, NEW, NUG, NSP, NIWP, NIW,           /SIZE/   3
     2                 NFL, NDESDY, NBR, NOTH, NITH, NOPSRF,                    HRr     10
     3                 NSURF, NSSHD, NSHTOT                                     GEO1     1
      COMMON /TIME  / IDOY, IDOW, IDSTF, ISCHR, ISCDAY, iDSdates(6),            -044e5r  1
     1                IMO, IDAY, IYR, IHR, CLOCK(10), IDSFLG,                   HOLID1   4
     2                MONDSC(12), MONLEN(12), MONSDA(12), IEODMR                /TIME/   4
      COMMON        // AA(75 000 000)                                           -048ar   1
      INTEGER          IA(75 000 000)                                           -048ar   2
      EQUIVALENCE  (IA(1), AA(1))                                               //       4
C                                                                               RLSG    24
      DIMENSION NEWTIT(8),ZLSG(2,14,1),ZDREP(6,1)                               RLSG    25
      DATA NEWTIT/4HLS-G,4H Spa,4Hce D,4Hayli,4Hghti,4Hng S,                    BIGNAM 101
     1            4Humma,4Hry  /                                                BIGNAM 102
C                                                                               RLSG    28
      IZD    = 0                                                                RLSG    29
      MZ     = ISPB                                                             RLSG    30
C                                                                               RLSG    31
      DO 2000 IZ = 1,NSP                                                        RLSG    32
      IF (<DAYLIGHTING>.EQ.0) GO TO 2000                                        RLSG    33
      IZD    = <DAYLIGHTING>                                                    RLSG    34
      IUNIQ  = 90000 + IZ                                                       -035    34
      IF ((NDESDY.NE.0).AND.(NRUNPD.GT.NDESDY).AND.(NDD.LE.0))                  RLSG    36
     $   IUNIQ = 100000 + IZ                                                    -035    35
C                                                                               RLSG    38
      GO TO (100,200,300), IFLAG                                                RLSG    39
C                                                                               RLSG    40
  100 CONTINUE                                                                  RLSG    41
C              WRITE TITLE AND HEADING RECORD                                   RLSG    42
      WRITE(IREPFL) I22,IUNIQ,ISIX,(NEWTIT(II),II=1,8),IBLNK,                   BIGNAM 103
     1              (<IZNM>,II=1,8),(IDEST(II),II=1,3)                          BIGNAM 104
      WRITE(IREPFL) I12,IUNIQ,IONE,IONE,IEIGHT,(<IZNM>,II=1,8)                  BIGNAM 105
      WRITE(IREPFL) IFOUR,IUNIQ,IONE,ITWO,IZERO                                 RLSG    46
      WRITE(IREPFL) IFOUR,IUNIQ,IONE,ITHREE,IZERO                               RLSG    47
      GO TO 1000                                                                RLSG    48
C                                                                               RLSG    49
  200 CONTINUE                                                                  RLSG    50
C              MONTHLY RECORD                                                   RLSG    51
C                                                                               RLSG    52
C              DIVIDE LIGHTING ENERGY REDUCTION QUANTITIES BY MONTHLY           RLSG    53
C              SUM OF LIGHTING SCHEDULE VALUES                                  RLSG    54
      DO 202 I=1,3                                                              RLSG    55
  202 ZLSG(1,I,IZD) = 100.*( ZLSG(1,I,IZD) / (ZDREP(3,IZD) + 0.001) )           RLSG    56
      DO 204 I=4,6                                                              RLSG    57
  204 ZLSG(1,I,IZD) = 100.*( ZLSG(1,I,IZD) / (ZDREP(5,IZD) + 0.001) )           RLSG    58
C              DIVIDE DAYLIGHT ILLUMINANCE SUM, ETC., BY MONTHLY NUMBER         RLSG    59
C              OF SUN-UP HOURS WITH DAYLIGHT-REPORT-SCHEDULE ON                 RLSG    60
      DO 206 I=7,14                                                             RLSG    61
      PCT    = 1.0                                                              RLSG    62
      IF (I.EQ.9.OR.I.EQ.10.OR.I.GE.13) PCT = 100.                              RLSG    63
  206 ZLSG(1,I,IZD) = PCT*( ZLSG(1,I,IZD) / (ZDREP(1,IZD) + 0.001) )            RLSG    64
C              WRITE MONTHLY RECORD                                             RLSG    65
      WRITE(IREPFL) I19,IUNIQ,IONE,IFOUR,I15,MONDSC(IMO),                       RLSG    66
     1              (ZLSG(1,I,IZD),I=1,14)                                      RLSG    67
C              ZERO MONTHLY PART OF ZLSG ARRAY FOR USE NEXT MONTH               RLSG    68
      DO 250 I=1,14                                                             RLSG    69
  250 ZLSG(1,I,IZD) = 0.                                                        RLSG    70
C              ZERO MONTHLY PART OF ZDREP ARRAY                                 RLSG    71
      DO 260 I=1,5,2                                                            RLSG    72
  260 ZDREP(I,IZD) = 0.                                                         RLSG    73
      GO TO 1000                                                                RLSG    74
C                                                                               RLSG    75
  300 CONTINUE                                                                  RLSG    76
C                                                                               RLSG    77
C              YEARLY RECORD                                                    RLSG    78
C                                                                               RLSG    79
C              DIVIDE LIGHTING ENERGY REDUCTION QUANTITIES BY YEARLY            RLSG    80
C              SUM OF LIGHTING SCHEDULE VALUES                                  RLSG    81
      DO 302 I=1,3                                                              RLSG    82
  302 ZLSG(2,I,IZD) = 100.*( ZLSG(2,I,IZD) / (ZDREP(4,IZD) + 0.001) )           RLSG    83
      DO 304 I=4,6                                                              RLSG    84
  304 ZLSG(2,I,IZD) = 100.*( ZLSG(2,I,IZD) / (ZDREP(6,IZD) + 0.001) )           RLSG    85
C              DIVIDE DAYLIGHT ILLUMINANCE SUM, ETC., BY YEARLY NUMBER          RLSG    86
C              OF SUN-UP HOURS WITH DAYLIGHTING-REPORT-SCHEDULE ON              RLSG    87
      DO 306 I=7,14                                                             RLSG    88
      PCT    = 1.0                                                              RLSG    89
      IF (I.EQ.9.OR.I.EQ.10.OR.I.GE.13) PCT = 100.                              RLSG    90
  306 ZLSG(2,I,IZD) = PCT*( ZLSG(2,I,IZD) / (ZDREP(2,IZD) + 0.001) )            RLSG    91
C              WRITE ANNUAL RECORD                                              RLSG    92
      WRITE(IREPFL) I18,IUNIQ,IONE,IFIVE,I14,(ZLSG(2,I,IZD),I=1,14)             RLSG    93
C              FINAL RECORD                                                     RLSG    94
      WRITE(IREPFL) ITWO,IUNIQ,ISEVEN                                           RLSG    95
C              ZERO YEARLY PART OF ZLSG AND ZDREP IF NOT LAST RUN PERIOD        RLSG    96
      IF (JRUNPD.EQ.NRUNPD) GO TO 1000                                          RLSG    97
      DO 350 I=1,14                                                             RLSG    98
  350 ZLSG(2,I,IZD) = 0.                                                        RLSG    99
      DO 360 I=2,6,2                                                            RLSG   100
  360 ZDREP(I,IZD) = 0.                                                         RLSG   101
C                                                                               RLSG   102
 1000 CONTINUE                                                                  RLSG   103
C                                                                               RLSG   104
 2000 MZ     = MZ + MZLEN                                                       RLSG   105
      RETURN                                                                    RLSG   106
      END                                                                       RLSG   107
      SUBROUTINE  RLSH (IFLAG,ZLSH)                                             RLSH     2
C                                                                               RLSH     3
C              WRITE REPORT RECORDS FOR LS-H -- PERCENT LIGHTING ENERGY         RLSH     4
C              REDUCTION BY DAYLIGHTING VS. HOUR OF DAY                         RLSH     5
C                                                                               RLSH     6
C              IFLAG  1 - WRITE TITLE AND HEADING RECORD                        RLSH     7
C                     2 - WRITE MONTHLY RECORD                                  RLSH     8
C                     3 - WRITE YEARLY TOTALS RECORD                            RLSH     9
C                                                                               RLSH    10
      COMMON /CLCFLG/ IFSTHR,IPRDFL,IGOLGE,NDD,LDSTYP,IFHRP                     DDAY1    1
      COMMON  /CONST/  DTOR, PIOVR2, PIOVR4, IBLNK, UNDEF, IUNDEF,              /CONST/  2
     1                 UNFILD, URAD, DEFIFR, DEFCFR, DEFINC, KWBTU              /CONST/  3
      REAL             KWBTU                                                    /CONST/  4
      COMMON  /DAYLT/ NDAYCF,IPHS,IZ,IHIT,MHHIT,IL,RHOAV,ATOT,ARHTOT,           /DAYLT/  2
     1                AR(3),AP(3),ARH(3),ARHP(3),NPH,NTH,WC(3),TMULT,           /DAYLT/  3
     2                TSOLNM,TVISDF,FRUP,ISHLOC,NWTOT,RHOCW,RHOFW,WAREA,        /DAYLT/  4
     3                IMREF,PHSUN,THSUN,PHSUND,THSUND,THSMIN,PHSMIN,            /DAYLT/  5
     4                THSMAX,PHSMAX,THSDEL,PHSDEL,H,NTHS,NPHS,NDFC,LWDC,        /DAYLT/  6
     5                BETA,W,IBZ,IWZ,ZENL,JZD,WBACLU(2,2),PF(7,5),              /DAYLT/  7
     6                VIEWVC(3),GLRNDX(2),WDAYIL(2,2),BACLUM(2),ITF(3),         /DAYLT/  8
     7                RDAYIL(2),RBACLU(2),GLRNEW(2),ETACLD,CDIRLW(24),          /DAYLT/  9
     8                CDIFLW(24),ODIFLW(24),SOLIC(12),TFAC,SPHSUN,              /DAYLT/ 10
     9                CPHSUN,PHWN,THWN,SPHWN,CPHWN,TOTIL(2),ATMMOI(12),         /DAYLT/ 11
     1                ATMTUR(12),XRAN,ALFAD,THRAT,PHRAT,SETPNT(2),              /DAYLT/ 12
     2                IZLSG,IZLSH,IZLSJM,IZLSJY,IZDREP,FPHRP(2),ZFTOT,          /DAYLT/ 13
     3                EINTSK(2,12,24),EINTSU(2,12,24),EDIRSK(2,12,24),          VISBL    2
     4                EDIRSU(2,12,24),FLCWSK(2,12),FLCWSU(2,12),                VISBL    3
     5                FLFWSK(2,12),FLFWSU(2,12),GILSK(2,10),GILSU(2,10),        VISBL    4
     6                WLUMSK(2,11,24),WLUMSU(2,11,24),AVWLSK(2,12,24),          VISBL    5
     7                AVWLSU(2,12,24),CHILSK(24),CHILSU(24),OHILSK(24),         VISBL    6
     8                DFSKHR(2,2),DFSUHR(2,2),SFSKHR(2,2),SFSUHR(2,2),          /DAYLT/ 19
     9                BFSKHR(2,2),BFSUHR(2,2),HISUNF,CHISKF,OHISKF,IZLSM        44d5br   1
      COMMON  /DAYL1/  ATMTU, ATMMO, TAU1                                       /DAYLT/ 21
     1               , TVISB, TH, PH, RAY(3), WNORM(3), TVISBR                  /DAYLT/ 22
      COMMON  /DESTIT/ IDEST(3)                                                 /DESTIT/ 2
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                         /FILES/  3
     2              , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                    /FILES/  4
     3                IHRREP(3), IHRPAS(2)                                      /FILES/  5
      COMMON /INTS  / IZERO,IONE,ITWO,ITHREE,IFOUR,IFIVE,ISIX,                  /INTS/   2
     1                ISEVEN,IEIGHT,ININE,ITEN,                                 /INTS/   3
     2                I11,I12,I13,I14,I15,I16,I17,I18,I19,I20,                  /INTS/   4
     3                I21,I22,I23,I24,I25,I26,I27,I28,I29,I30,                  HVAC     4
     4                I31,I32,I33,I34,I35,I36,I37,I38,I39,I40,                  HVAC     5
     5                I41,I42,I43,I44,I45,I46,I47,I48,I49,I50,                  HVAC     6
     $                I51,I52,I53,I54,I55,I56,I57,I58,I59,I60,                  HVAC6    6
     $                I61,I62,I63,I64,I65,I66,I67,I68,I69,I70,                  HVAC6    7
     $                I71,I72,I73,I74,I75,I76,I77,I78,I79,I80,                  HVAC6    8
     $                I81,I82,I83,I84,I85,I86,I87,I88,I89,I90,                  HVAC6    9
     $                I91,I92,I93,I94,I95,I96,I97,I98,I99,I100                  HVAC6   10
      INTEGER         INTS(101)                                                 HVAC6   11
      EQUIVALENCE(IZERO,INTS(1))                                                /INTS/   7
      COMMON  /IRUNPD/  NRUNPD, JRUNPD, IRUNPD(6,15)                            /IRUNPD/ 2
      COMMON  /LENS/   MWFLEN, MRLEN, MSHLEN, MWNLEN, MDRLEN, MXLEN,            /LENS/   2
     1                 MULEN, MZLEN, MIWLEN, MFLLEN,                            HRr      5
     2                 LMTB, LLDSOU, MSTLEN, LSTFT, MWLLEN                      BLIND    1
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     BLIND    2
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        FLOOR1   3
      COMMON  /PTRBGN/ ISCB, IWFB, IWPB, ICONSB, IGTB, IWLB, IGEOB,             HRr      6
     1                 ISHADB, IWINB, IDRB, IEWB, IUGB, ISPB, IIWPB,            HRr      7
     2                 IIWB, IFLB, ISPCDB, IOTHB, ILHB, IZQCMB, ISSHDB,         HRr      8
     3                 IOHFIB, IZLSK, IZLSL, ISTFB                              HRr      9
      COMMON  /SIZE/   LENGTH,NVECT,NSCHED,NWF,NWPAR,NCONS,NGT,NWL,NGEO,        BLIND    5
     1                 NGSHAD, NWIN, NDOOR, NEW, NUG, NSP, NIWP, NIW,           /SIZE/   3
     2                 NFL, NDESDY, NBR, NOTH, NITH, NOPSRF,                    HRr     10
     3                 NSURF, NSSHD, NSHTOT                                     GEO1     1
      COMMON /TIME  / IDOY, IDOW, IDSTF, ISCHR, ISCDAY, iDSdates(6),            -044e5r  1
     1                IMO, IDAY, IYR, IHR, CLOCK(10), IDSFLG,                   HOLID1   4
     2                MONDSC(12), MONLEN(12), MONSDA(12), IEODMR                /TIME/   4
      COMMON        // AA(75 000 000)                                           -048ar   1
      INTEGER          IA(75 000 000)                                           -048ar   2
      EQUIVALENCE  (IA(1), AA(1))                                               //       4
C                                                                               RLSH    24
      DIMENSION NEWTIT(9), ZLSH(4,25,1), MZLSH(25)                              BIGNAM 106
      DATA NEWTIT /4HLS-H,4H Ene,4Hrgy ,4HRedu,4Hctio,4Hn By,                   BIGNAM 107
     1             4H Day,4Hligh,4Ht   /                                        BIGNAM 108
C                                                                               RLSH    28
      IZD    = 0                                                                RLSH    29
      MZ     = ISPB                                                             RLSH    30
C                                                                               RLSH    31
      DO 2000 IZ = 1,NSP                                                        RLSH    32
      IF (<DAYLIGHTING>.EQ.0) GO TO 2000                                        RLSH    33
      IZD    = <DAYLIGHTING>                                                    RLSH    34
      IUNIQ  = 110000 + IZ                                                      -035    36
      IF ((NDESDY.NE.0).AND.(NRUNPD.GT.NDESDY).AND.(NDD.LE.0))                  RLSH    36
     $    IUNIQ = 120000 + IZ                                                   -035    37
C                                                                               RLSH    38
      GO TO (100,200,300), IFLAG                                                RLSH    39
C                                                                               RLSH    40
  100 CONTINUE                                                                  RLSH    41
C              WRITE TITLE AND HEADING RECORD                                   RLSH    42
      WRITE (IREPFL)I22,IUNIQ,ISIX,(NEWTIT(II),II=1,9),(<IZNM>,II=1,8)          BIGNAM 109
     1               ,(IDEST(II),II=1,3)                                        RLSH    44
      WRITE(IREPFL) I12,IUNIQ,IONE,IONE,IEIGHT,(<IZNM>,II=1,8)                  BIGNAM 110
      WRITE(IREPFL) IFOUR,IUNIQ,IONE,ITWO,IZERO                                 RLSH    46
      GO TO 1000                                                                RLSH    47
C                                                                               RLSH    48
  200 CONTINUE                                                                  RLSH    49
C              MONTHLY RECORD                                                   RLSH    50
C                                                                               RLSH    51
C              DIVIDE MONTHLY LIGHTING ENERGY REDUCTION QUANTITIES BY           RLSH    52
C              SUM OF LIGHTING SCHEDULE VALUES                                  RLSH    53
      DO 202 I=1,25                                                             RLSH    54
  202 MZLSH(I) = INT ( 100.*ZLSH(1,I,IZD)/(ZLSH(3,I,IZD)+0.001) + 0.5 )         RLSH    55
C              WRITE MONTHLY RECORD                                             RLSH    56
      WRITE(IREPFL) I30,IUNIQ,IONE,ITHREE,I26,MONDSC(IMO),                      RLSH    57
     1              (MZLSH(I),I=1,25)                                           RLSH    58
C              ZERO MONTHLY PART OF ZLSH ARRAY FOR USE NEXT MONTH               RLSH    59
      DO 250 I=1,25                                                             RLSH    60
      ZLSH(1,I,IZD) = 0.                                                        RLSH    61
  250 ZLSH(3,I,IZD) = 0.                                                        RLSH    62
      GO TO 1000                                                                RLSH    63
C                                                                               RLSH    64
  300 CONTINUE                                                                  RLSH    65
C              YEARLY RECORD                                                    RLSH    66
C                                                                               RLSH    67
C              DIVIDE YEARLY LIGHTING ENERGY REDUCTION VALUES BY SUM OF         RLSH    68
C              LIGHTING SCHEDULE VALUES                                         RLSH    69
      DO 302 I=1,25                                                             RLSH    70
  302 MZLSH(I) = INT ( 100.*ZLSH(2,I,IZD)/(ZLSH(4,I,IZD)+0.001) + 0.5 )         RLSH    71
C              WRITE YEARLY RECORD                                              RLSH    72
      WRITE(IREPFL) I29,IUNIQ,IONE,IFOUR,I25,(MZLSH(I),I=1,25)                  RLSH    73
C              FINAL RECORD                                                     RLSH    74
      WRITE(IREPFL) ITWO,IUNIQ,ISEVEN                                           RLSH    75
C              ZERO YEARLY PART OF ZLSH ARRAY IF NOT LAST RUN PERIOD            RLSH    76
      IF (JRUNPD.EQ.NRUNPD) GO TO 1000                                          RLSH    77
      DO 350 I=1,25                                                             RLSH    78
      ZLSH(2,I,IZD) = 0.                                                        RLSH    79
  350 ZLSH(4,I,IZD) = 0.                                                        RLSH    80
C                                                                               RLSH    81
 1000 CONTINUE                                                                  RLSH    82
C                                                                               RLSH    83
 2000 MZ     = MZ + MZLEN                                                       RLSH    84
      RETURN                                                                    RLSH    85
      END                                                                       RLSH    86
      SUBROUTINE  RLSI (IFLAG)                                                  RLSI     2
C                                                                               RLSI     3
C              WRITE REPORT RECORDS FOR LS-I --  PERCENT LIGHTING               RLSI     4
C              ENERGY REDUCTION BY DAYLIGHT VS HOUR OF DAY FOR ENTIRE           RLSI     5
C              BUILDING                                                         RLSI     6
C                                                                               RLSI     7
C              IFLAG  1 - WRITE TITLE AND HEADING RECORD                        RLSI     8
C                     2 - WRITE MONTHLY RECORD                                  RLSI     9
C                     3 - WRITE YEARLY TOTALS RECORD                            RLSI    10
C                                                                               RLSI    11
      COMMON /CLCFLG/ IFSTHR,IPRDFL,IGOLGE,NDD,LDSTYP,IFHRP                     DDAY1    1
      COMMON  /CONST/  DTOR, PIOVR2, PIOVR4, IBLNK, UNDEF, IUNDEF,              /CONST/  2
     1                 UNFILD, URAD, DEFIFR, DEFCFR, DEFINC, KWBTU              /CONST/  3
      REAL             KWBTU                                                    /CONST/  4
      COMMON  /DAYLT/ NDAYCF,IPHS,IZ,IHIT,MHHIT,IL,RHOAV,ATOT,ARHTOT,           /DAYLT/  2
     1                AR(3),AP(3),ARH(3),ARHP(3),NPH,NTH,WC(3),TMULT,           /DAYLT/  3
     2                TSOLNM,TVISDF,FRUP,ISHLOC,NWTOT,RHOCW,RHOFW,WAREA,        /DAYLT/  4
     3                IMREF,PHSUN,THSUN,PHSUND,THSUND,THSMIN,PHSMIN,            /DAYLT/  5
     4                THSMAX,PHSMAX,THSDEL,PHSDEL,H,NTHS,NPHS,NDFC,LWDC,        /DAYLT/  6
     5                BETA,W,IBZ,IWZ,ZENL,JZD,WBACLU(2,2),PF(7,5),              /DAYLT/  7
     6                VIEWVC(3),GLRNDX(2),WDAYIL(2,2),BACLUM(2),ITF(3),         /DAYLT/  8
     7                RDAYIL(2),RBACLU(2),GLRNEW(2),ETACLD,CDIRLW(24),          /DAYLT/  9
     8                CDIFLW(24),ODIFLW(24),SOLIC(12),TFAC,SPHSUN,              /DAYLT/ 10
     9                CPHSUN,PHWN,THWN,SPHWN,CPHWN,TOTIL(2),ATMMOI(12),         /DAYLT/ 11
     1                ATMTUR(12),XRAN,ALFAD,THRAT,PHRAT,SETPNT(2),              /DAYLT/ 12
     2                IZLSG,IZLSH,IZLSJM,IZLSJY,IZDREP,FPHRP(2),ZFTOT,          /DAYLT/ 13
     3                EINTSK(2,12,24),EINTSU(2,12,24),EDIRSK(2,12,24),          VISBL    2
     4                EDIRSU(2,12,24),FLCWSK(2,12),FLCWSU(2,12),                VISBL    3
     5                FLFWSK(2,12),FLFWSU(2,12),GILSK(2,10),GILSU(2,10),        VISBL    4
     6                WLUMSK(2,11,24),WLUMSU(2,11,24),AVWLSK(2,12,24),          VISBL    5
     7                AVWLSU(2,12,24),CHILSK(24),CHILSU(24),OHILSK(24),         VISBL    6
     8                DFSKHR(2,2),DFSUHR(2,2),SFSKHR(2,2),SFSUHR(2,2),          /DAYLT/ 19
     9                BFSKHR(2,2),BFSUHR(2,2),HISUNF,CHISKF,OHISKF,IZLSM        44d5br   1
      COMMON  /DAYL1/  ATMTU, ATMMO, TAU1                                       /DAYLT/ 21
     1               , TVISB, TH, PH, RAY(3), WNORM(3), TVISBR                  /DAYLT/ 22
      COMMON  /DESTIT/ IDEST(3)                                                 /DESTIT/ 2
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                         /FILES/  3
     2              , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                    /FILES/  4
     3                IHRREP(3), IHRPAS(2)                                      /FILES/  5
      COMMON /INTS  / IZERO,IONE,ITWO,ITHREE,IFOUR,IFIVE,ISIX,                  /INTS/   2
     1                ISEVEN,IEIGHT,ININE,ITEN,                                 /INTS/   3
     2                I11,I12,I13,I14,I15,I16,I17,I18,I19,I20,                  /INTS/   4
     3                I21,I22,I23,I24,I25,I26,I27,I28,I29,I30,                  HVAC     4
     4                I31,I32,I33,I34,I35,I36,I37,I38,I39,I40,                  HVAC     5
     5                I41,I42,I43,I44,I45,I46,I47,I48,I49,I50,                  HVAC     6
     $                I51,I52,I53,I54,I55,I56,I57,I58,I59,I60,                  HVAC6    6
     $                I61,I62,I63,I64,I65,I66,I67,I68,I69,I70,                  HVAC6    7
     $                I71,I72,I73,I74,I75,I76,I77,I78,I79,I80,                  HVAC6    8
     $                I81,I82,I83,I84,I85,I86,I87,I88,I89,I90,                  HVAC6    9
     $                I91,I92,I93,I94,I95,I96,I97,I98,I99,I100                  HVAC6   10
      INTEGER         INTS(101)                                                 HVAC6   11
      EQUIVALENCE(IZERO,INTS(1))                                                /INTS/   7
      COMMON  /IRUNPD/  NRUNPD, JRUNPD, IRUNPD(6,15)                            /IRUNPD/ 2
      COMMON/MONREP/BCSUM(12),IDYCPK(12),IHRCPK(12),DBCPK(12),                  /MONREP/ 2
     1         WBCPK(12),BCPK(12),BHSUM(12),IDYHPK(12),                         /MONREP/ 3
     2         IHRHPK(12),DBHPK(12),WBHPK(12),BHPK(12),                         /MONREP/ 4
     3                 BESUM(12),BEPK(12),BQCM(6,11),BLSI(4,25)                 /MONREP/ 5
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     BLIND    2
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        FLOOR1   3
      COMMON  /PTRBGN/ ISCB, IWFB, IWPB, ICONSB, IGTB, IWLB, IGEOB,             HRr      6
     1                 ISHADB, IWINB, IDRB, IEWB, IUGB, ISPB, IIWPB,            HRr      7
     2                 IIWB, IFLB, ISPCDB, IOTHB, ILHB, IZQCMB, ISSHDB,         HRr      8
     3                 IOHFIB, IZLSK, IZLSL, ISTFB                              HRr      9
      COMMON  /SIZE/   LENGTH,NVECT,NSCHED,NWF,NWPAR,NCONS,NGT,NWL,NGEO,        BLIND    5
     1                 NGSHAD, NWIN, NDOOR, NEW, NUG, NSP, NIWP, NIW,           /SIZE/   3
     2                 NFL, NDESDY, NBR, NOTH, NITH, NOPSRF,                    HRr     10
     3                 NSURF, NSSHD, NSHTOT                                     GEO1     1
      COMMON /TIME  / IDOY, IDOW, IDSTF, ISCHR, ISCDAY, iDSdates(6),            -044e5r  1
     1                IMO, IDAY, IYR, IHR, CLOCK(10), IDSFLG,                   HOLID1   4
     2                MONDSC(12), MONLEN(12), MONSDA(12), IEODMR                /TIME/   4
      COMMON        // AA(75 000 000)                                           -048ar   1
      INTEGER          IA(75 000 000)                                           -048ar   2
      EQUIVALENCE  (IA(1), AA(1))                                               //       4
C                                                                               RLSI    25
      DIMENSION NEWTIT(9),MBLSI(25),IBLD(2)                                     BIGNAM 111
      DATA NEWTIT /4HLS-I,4H Ene,4Hrgy ,4HRedu,4Hctio,4Hn By,                   BIGNAM 112
     1             4H Day,4Hligh,4Ht   /                                        BIGNAM 113
      DATA IBLD /4HBuil,4Hding/                                                 BIGNAM 114
C                                                                               RLSI    29
C                                                                               RLSI    30
      IUNIQ  = 1301                                                             RLSI    31
      IF ((NDESDY.NE.0).AND.(NRUNPD.GT.NDESDY).AND.(NDD.LE.0))                  RLSI    32
     1    IUNIQ = 1302                                                          RLSI    33
C                                                                               RLSI    34
      GO TO (100,200,300), IFLAG                                                RLSI    35
C                                                                               RLSI    36
  100 CONTINUE                                                                  RLSI    37
C              WRITE TITLE AND HEADING RECORD                                   RLSI    38
      WRITE (IREPFL) I22,IUNIQ,ISIX,(NEWTIT(II),II=1,9),                        BIGNAM 115
     1               (IBLD(II),II=1,2),(IBLNK,II=1,6),(IDEST(II),II=1,3)        BIGNAM 116
      WRITE(IREPFL) IFOUR,IUNIQ,IONE,IONE,IZERO                                 RLSI    41
      WRITE(IREPFL) IFOUR,IUNIQ,IONE,ITWO,IZERO                                 RLSI    42
      GO TO 1000                                                                RLSI    43
C                                                                               RLSI    44
  200 CONTINUE                                                                  RLSI    45
C              MONTHLY RECORD                                                   RLSI    46
C                                                                               RLSI    47
C              DIVIDE BY MONTHLY LIGHTING ENERGY WITHOUT DAYLIGHTING            RLSI    48
      DO 202 I=1,25                                                             RLSI    49
  202 MBLSI(I) = INT( 100. * BLSI(1,I) / (BLSI(3,I) + 0.001) + 0.5 )            RLSI    50
C              WRITE MONTHLY RECORD                                             RLSI    51
      WRITE(IREPFL) I30,IUNIQ,IONE,ITHREE,I26,MONDSC(IMO),                      RLSI    52
     1              (MBLSI(I),I=1,25)                                           RLSI    53
C              ZERO MONTHLY PART OF BLSI ARRAY FOR USE NEXT MONTH               RLSI    54
      DO 250 I=1,25                                                             RLSI    55
      BLSI(1,I) = 0.                                                            RLSI    56
  250 BLSI(3,I) = 0.                                                            RLSI    57
      GO TO 1000                                                                RLSI    58
C                                                                               RLSI    59
  300 CONTINUE                                                                  RLSI    60
C              YEARLY RECORD                                                    RLSI    61
C                                                                               RLSI    62
C              DIVIDE BY YEARLY LIGHTING ENERGY WITHOUT DAYLIGHTING             RLSI    63
      DO 302 I=1,25                                                             RLSI    64
  302 MBLSI(I) = INT( 100. * BLSI(2,I) / (BLSI(4,I) + 0.001) + 0.5 )            RLSI    65
C              WRITE YEARLY RECORD                                              RLSI    66
      WRITE(IREPFL) I29,IUNIQ,IONE,IFOUR,I25,(MBLSI(I),I=1,25)                  RLSI    67
C              FINAL RECORD                                                     RLSI    68
      WRITE(IREPFL) ITWO,IUNIQ,ISEVEN                                           RLSI    69
C              ZERO YEARLY PART OF BLSI IF NOT LAST RUN PERIOD                  RLSI    70
      IF (JRUNPD.EQ.NRUNPD) GO TO 1000                                          RLSI    71
      DO 350 I=1,25                                                             RLSI    72
      BLSI(2,I) = 0.                                                            RLSI    73
  350 BLSI(4,I) = 0.                                                            RLSI    74
C                                                                               RLSI    75
 1000 CONTINUE                                                                  RLSI    76
      RETURN                                                                    RLSI    77
      END                                                                       RLSI    78
      SUBROUTINE  RLSJ (IFLAG,ZLSJM,ZLSJY)                                      RLSJ     2
C                                                                               RLSJ     3
C              WRITE REPORT RECORDS FOR LS-J  --  DAYLIGHT ILLUMINANCE          RLSJ     4
C              FREQUENCY OF OCCURRENCE                                          RLSJ     5
C                                                                               RLSJ     6
C              IFLAG  1 - WRITE TITLE AND HEADING RECORD                        RLSJ     7
C                     2 - WRITE MONTHLY RECORD                                  RLSJ     8
C                     3 - WRITE YEARLY TOTALS RECORD                            RLSJ     9
C                                                                               RLSJ    10
      COMMON /CLCFLG/ IFSTHR,IPRDFL,IGOLGE,NDD,LDSTYP,IFHRP                     DDAY1    1
      COMMON  /CONST/  DTOR, PIOVR2, PIOVR4, IBLNK, UNDEF, IUNDEF,              /CONST/  2
     1                 UNFILD, URAD, DEFIFR, DEFCFR, DEFINC, KWBTU              /CONST/  3
      REAL             KWBTU                                                    /CONST/  4
      COMMON /CTRL  / VERS(2),IRPFLG(4),IOVRLL(7),IWRTFL,IPROG,                 /CTRL/   2
     1       IFATAL,NAMPRG(3,7),MTRICR                                          /CTRL/   3
      COMMON  /DAYLT/ NDAYCF,IPHS,IZ,IHIT,MHHIT,IL,RHOAV,ATOT,ARHTOT,           /DAYLT/  2
     1                AR(3),AP(3),ARH(3),ARHP(3),NPH,NTH,WC(3),TMULT,           /DAYLT/  3
     2                TSOLNM,TVISDF,FRUP,ISHLOC,NWTOT,RHOCW,RHOFW,WAREA,        /DAYLT/  4
     3                IMREF,PHSUN,THSUN,PHSUND,THSUND,THSMIN,PHSMIN,            /DAYLT/  5
     4                THSMAX,PHSMAX,THSDEL,PHSDEL,H,NTHS,NPHS,NDFC,LWDC,        /DAYLT/  6
     5                BETA,W,IBZ,IWZ,ZENL,JZD,WBACLU(2,2),PF(7,5),              /DAYLT/  7
     6                VIEWVC(3),GLRNDX(2),WDAYIL(2,2),BACLUM(2),ITF(3),         /DAYLT/  8
     7                RDAYIL(2),RBACLU(2),GLRNEW(2),ETACLD,CDIRLW(24),          /DAYLT/  9
     8                CDIFLW(24),ODIFLW(24),SOLIC(12),TFAC,SPHSUN,              /DAYLT/ 10
     9                CPHSUN,PHWN,THWN,SPHWN,CPHWN,TOTIL(2),ATMMOI(12),         /DAYLT/ 11
     1                ATMTUR(12),XRAN,ALFAD,THRAT,PHRAT,SETPNT(2),              /DAYLT/ 12
     2                IZLSG,IZLSH,IZLSJM,IZLSJY,IZDREP,FPHRP(2),ZFTOT,          /DAYLT/ 13
     3                EINTSK(2,12,24),EINTSU(2,12,24),EDIRSK(2,12,24),          VISBL    2
     4                EDIRSU(2,12,24),FLCWSK(2,12),FLCWSU(2,12),                VISBL    3
     5                FLFWSK(2,12),FLFWSU(2,12),GILSK(2,10),GILSU(2,10),        VISBL    4
     6                WLUMSK(2,11,24),WLUMSU(2,11,24),AVWLSK(2,12,24),          VISBL    5
     7                AVWLSU(2,12,24),CHILSK(24),CHILSU(24),OHILSK(24),         VISBL    6
     8                DFSKHR(2,2),DFSUHR(2,2),SFSKHR(2,2),SFSUHR(2,2),          /DAYLT/ 19
     9                BFSKHR(2,2),BFSUHR(2,2),HISUNF,CHISKF,OHISKF,IZLSM        44d5br   1
      COMMON  /DAYL1/  ATMTU, ATMMO, TAU1                                       /DAYLT/ 21
     1               , TVISB, TH, PH, RAY(3), WNORM(3), TVISBR                  /DAYLT/ 22
      COMMON  /DESTIT/ IDEST(3)                                                 /DESTIT/ 2
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                         /FILES/  3
     2              , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                    /FILES/  4
     3                IHRREP(3), IHRPAS(2)                                      /FILES/  5
      COMMON /INTS  / IZERO,IONE,ITWO,ITHREE,IFOUR,IFIVE,ISIX,                  /INTS/   2
     1                ISEVEN,IEIGHT,ININE,ITEN,                                 /INTS/   3
     2                I11,I12,I13,I14,I15,I16,I17,I18,I19,I20,                  /INTS/   4
     3                I21,I22,I23,I24,I25,I26,I27,I28,I29,I30,                  HVAC     4
     4                I31,I32,I33,I34,I35,I36,I37,I38,I39,I40,                  HVAC     5
     5                I41,I42,I43,I44,I45,I46,I47,I48,I49,I50,                  HVAC     6
     $                I51,I52,I53,I54,I55,I56,I57,I58,I59,I60,                  HVAC6    6
     $                I61,I62,I63,I64,I65,I66,I67,I68,I69,I70,                  HVAC6    7
     $                I71,I72,I73,I74,I75,I76,I77,I78,I79,I80,                  HVAC6    8
     $                I81,I82,I83,I84,I85,I86,I87,I88,I89,I90,                  HVAC6    9
     $                I91,I92,I93,I94,I95,I96,I97,I98,I99,I100                  HVAC6   10
      INTEGER         INTS(101)                                                 HVAC6   11
      EQUIVALENCE(IZERO,INTS(1))                                                /INTS/   7
      COMMON  /IRUNPD/  NRUNPD, JRUNPD, IRUNPD(6,15)                            /IRUNPD/ 2
      COMMON  /LENS/   MWFLEN, MRLEN, MSHLEN, MWNLEN, MDRLEN, MXLEN,            /LENS/   2
     1                 MULEN, MZLEN, MIWLEN, MFLLEN,                            HRr      5
     2                 LMTB, LLDSOU, MSTLEN, LSTFT, MWLLEN                      BLIND    1
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     BLIND    2
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        FLOOR1   3
      COMMON  /PTRBGN/ ISCB, IWFB, IWPB, ICONSB, IGTB, IWLB, IGEOB,             HRr      6
     1                 ISHADB, IWINB, IDRB, IEWB, IUGB, ISPB, IIWPB,            HRr      7
     2                 IIWB, IFLB, ISPCDB, IOTHB, ILHB, IZQCMB, ISSHDB,         HRr      8
     3                 IOHFIB, IZLSK, IZLSL, ISTFB                              HRr      9
      COMMON  /SIZE/   LENGTH,NVECT,NSCHED,NWF,NWPAR,NCONS,NGT,NWL,NGEO,        BLIND    5
     1                 NGSHAD, NWIN, NDOOR, NEW, NUG, NSP, NIWP, NIW,           /SIZE/   3
     2                 NFL, NDESDY, NBR, NOTH, NITH, NOPSRF,                    HRr     10
     3                 NSURF, NSSHD, NSHTOT                                     GEO1     1
      COMMON /TIME  / IDOY, IDOW, IDSTF, ISCHR, ISCDAY, iDSdates(6),            -044e5r  1
     1                IMO, IDAY, IYR, IHR, CLOCK(10), IDSFLG,                   HOLID1   4
     2                MONDSC(12), MONLEN(12), MONSDA(12), IEODMR                /TIME/   4
      COMMON        // AA(75 000 000)                                           -048ar   1
      INTEGER          IA(75 000 000)                                           -048ar   2
      EQUIVALENCE  (IA(1), AA(1))                                               //       4
C                                                                               RLSJ    25
      DIMENSION IRANGE(8)                                                       RLSJ    26
      DIMENSION NEWTIT(9),ZLSJM(9,2,1),ZLSJY(9,2,1),MZLSJ(2,9,2),SUM(9)         BIGNAM 117
      DATA NEWTIT /4HLS-J,4H Day,4Hligh,4Ht Il,4Hlumi,4Hnanc,4He Fr,            BIGNAM 118
     1             4Heque,4Hncy /                                               BIGNAM 119
C                                                                               RLSJ    31
      IZD    = 0                                                                RLSJ    32
      MZ     = ISPB                                                             RLSJ    33
C                                                                               RLSJ    34
C              INITIALIZES RANGE-INTERVALS DEPENDING ON OUTPUT-UNITS            RLSJ    35
C                                                                               RLSJ    36
      IX     = 10                                                               RLSJ    37
      IF (MTRICR.NE.0)  IX=100                                                  RLSJ    38
      DO 10 II=1,8                                                              RLSJ    39
   10 IRANGE(II) = IX*II                                                        RLSJ    40
      DO 2000 IZ = 1,NSP                                                        RLSJ    41
      IF (<DAYLIGHTING>.EQ.0) GO TO 2000                                        RLSJ    42
      IZD    = <DAYLIGHTING>                                                    RLSJ    43
      IUNIQ  = 140000 + IZ                                                      -035    38
      IF ((NDESDY.NE.0).AND.(NRUNPD.GT.NDESDY).AND.(NDD.LE.0))                  RLSJ    45
     $    IUNIQ = 150000 + IZ                                                   -035    39
      NREFPT = <NREFP>                                                          RLSJ    47
C                                                                               RLSJ    48
      GO TO (100,200,300), IFLAG                                                RLSJ    49
C                                                                               RLSJ    50
  100 CONTINUE                                                                  RLSJ    51
C              WRITE TITLE AND HEADING RECORD                                   RLSJ    52
      WRITE(IREPFL) I22,IUNIQ,ISIX,(NEWTIT(II),II=1,9),                         BIGNAM 120
     1              (<IZNM>,II=1,8),(IDEST(II),II=1,3)                          BIGNAM 121
      WRITE(IREPFL) I12,IUNIQ,IONE,IONE,IEIGHT,(<IZNM>,II=1,8)                  BIGNAM 122
      WRITE (IREPFL) I20,IUNIQ,IONE,ITWO,I16,(IRANGE(II),II=1,8),               RLSJ    56
     1               (IRANGE(II),II=1,8)                                        RLSJ    57
      GO TO 1000                                                                RLSJ    58
C                                                                               RLSJ    59
  200 CONTINUE                                                                  RLSJ    60
C              MONTHLY RECORD                                                   RLSJ    61
C                                                                               RLSJ    62
C              INITIALIZE MZLSJ AT SECOND REF PT                                RLSJ    63
      DO 220 I=1,2                                                              RLSJ    64
      DO 221 J=1,9                                                              RLSJ    65
  221 MZLSJ(I,J,2) = 0                                                          RLSJ    66
  220 CONTINUE                                                                  RLSJ    67
C              FIND TOTAL HOURS                                                 RLSJ    68
      TOTH   = 0.                                                               RLSJ    69
      DO 201 I=1,9                                                              RLSJ    70
  201 TOTH   = TOTH + ZLSJM(I,1,IZD)                                            RLSJ    71
C              FOR EACH REFERENCE PT, CONVERT HOURS IN EACH ILLUMINANCE         RLSJ    72
C              RANGE TO PERCENTAGE                                              RLSJ    73
      DO 202 IL=1,NREFPT                                                        RLSJ    74
      DO 204 I = 1,9                                                            RLSJ    75
      MZLSJ(1,I,IL) = INT(100.*ZLSJM(I,IL,IZD)/(TOTH + 0.001) + 0.5)            RLSJ    76
  204 CONTINUE                                                                  RLSJ    77
  202 CONTINUE                                                                  RLSJ    78
C              FOR EACH REFERENCE PT, FIND PERCENTAGE OF TIME THE LOWER         RLSJ    79
C              LIMIT OF EACH ILLUMINANCE RANGE IS EXCEEDED                      RLSJ    80
      DO 206 IL = 1,NREFPT                                                      RLSJ    81
      DO 208 K=1,9                                                              RLSJ    82
      SUM(K) = 0.                                                               RLSJ    83
      DO 210 I = K,9                                                            RLSJ    84
  210 SUM(K) = SUM(K) + ZLSJM(I,IL,IZD) / (TOTH + 0.001)                        RLSJ    85
      MZLSJ(2,K,IL) = INT ( 100.*SUM(K) + 0.5 )                                 RLSJ    86
  208 CONTINUE                                                                  RLSJ    87
  206 CONTINUE                                                                  RLSJ    88
C              WRITE MONTHLY RECORD                                             RLSJ    89
      WRITE(IREPFL) I41,IUNIQ,IONE,ITHREE,I37,MONDSC(IMO),                      RLSJ    90
     1              (MZLSJ(1,K,1),K=1,9), (MZLSJ(2,K,1),K=1,9),                 RLSJ    91
     2              (MZLSJ(1,K,2),K=1,9), (MZLSJ(2,K,2),K=1,9)                  RLSJ    92
C              ZERO ZLSJM ARRAY FOR USE NEXT MONTH                              RLSJ    93
      DO 252 I = 1,9                                                            RLSJ    94
      DO 254 IL=1,NREFPT                                                        RLSJ    95
      ZLSJM(I,IL,IZD) = 0.                                                      RLSJ    96
  254 CONTINUE                                                                  RLSJ    97
  252 CONTINUE                                                                  RLSJ    98
      GO TO 1000                                                                RLSJ    99
C                                                                               RLSJ   100
  300 CONTINUE                                                                  RLSJ   101
C              YEARLY RECORD                                                    RLSJ   102
C                                                                               RLSJ   103
C              INITIALIZE MZLSJ AT SECOND REF PT                                RLSJ   104
      DO 320 I=1,2                                                              RLSJ   105
      DO 321 J=1,9                                                              RLSJ   106
  321 MZLSJ(I,J,2) = 0                                                          RLSJ   107
  320 CONTINUE                                                                  RLSJ   108
C              FIND TOTAL HOURS                                                 RLSJ   109
      TOTH   = 0.                                                               RLSJ   110
      DO 301 I=1,9                                                              RLSJ   111
  301 TOTH   = TOTH + ZLSJY(I,1,IZD)                                            RLSJ   112
C              FOR EACH REF PT, CONVERT HOURS IN EACH ILLUMINANCE RANGE         RLSJ   113
C              TO PERCENTAGE                                                    RLSJ   114
      DO 302 IL=1,NREFPT                                                        RLSJ   115
      DO 304 I=1,9                                                              RLSJ   116
      MZLSJ(1,I,IL) = INT(100.*ZLSJY(I,IL,IZD)/(TOTH + 0.001) + 0.5)            RLSJ   117
  304 CONTINUE                                                                  RLSJ   118
  302 CONTINUE                                                                  RLSJ   119
C              FOR EACH REF PT, FIND PERCENTAGE OF TIME THE LOWER LIMIT         RLSJ   120
C              OF EACH ILLUMINANCE RANGE IS EXCEEDED                            RLSJ   121
      DO 306 IL=1,NREFPT                                                        RLSJ   122
      DO 308 K=1,9                                                              RLSJ   123
      SUM(K) = 0.                                                               RLSJ   124
      DO 310 I=K,9                                                              RLSJ   125
  310 SUM(K) =SUM(K) + ZLSJY(I,IL,IZD) / (TOTH + 0.001)                         RLSJ   126
      MZLSJ(2,K,IL) = INT ( 100.*SUM(K) + 0.5 )                                 RLSJ   127
  308 CONTINUE                                                                  RLSJ   128
  306 CONTINUE                                                                  RLSJ   129
C              WRITE YEARLY RECORD                                              RLSJ   130
      WRITE(IREPFL) I40,IUNIQ,IONE,IFOUR,I36,                                   RLSJ   131
     1              (MZLSJ(1,K,1),K=1,9), (MZLSJ(2,K,1),K=1,9),                 RLSJ   132
     2              (MZLSJ(1,K,2),K=1,9), (MZLSJ(2,K,2),K=1,9)                  RLSJ   133
C              FINAL RECORD                                                     RLSJ   134
      WRITE(IREPFL) ITWO,IUNIQ,ISEVEN                                           RLSJ   135
C              ZERO ZLSJY IF NOT LAST RUN PERIOD                                RLSJ   136
      IF (JRUNPD.EQ.NRUNPD) GO TO 1000                                          RLSJ   137
      DO 352 I=1,9                                                              RLSJ   138
      DO 354 IL=1,NREFPT                                                        RLSJ   139
      ZLSJY(I,IL,IZD) = 0.                                                      RLSJ   140
  354 CONTINUE                                                                  RLSJ   141
  352 CONTINUE                                                                  RLSJ   142
C                                                                               RLSJ   143
 1000 CONTINUE                                                                  RLSJ   144
 2000 MZ     = MZ + MZLEN                                                       RLSJ   145
      RETURN                                                                    RLSJ   146
      END                                                                       RLSJ   147
      SUBROUTINE RLSK(IFLAG,ZLSK)                                               RLSK     2
C                                                                               RLSK     3
C              WRITE REP RECORDS FOR LS-K -- SPACE FUELS INPUT SUMMARY          RLSK     4
C                                                                               RLSK     5
C              IFLAG  1 - WRITE TITLE AND HEADING RECORD                        RLSK     6
C              IFLAG  2 - WRITE MONTHLY RECORD                                  RLSK     7
C              IFLAG  3 - WRITE YEARLY TOTALS RECORD                            RLSK     8
C                                                                               RLSK     9
      COMMON /CLCFLG/ IFSTHR,IPRDFL,IGOLGE,NDD,LDSTYP,IFHRP                     DDAY1    1
      COMMON  /CONST/  DTOR, PIOVR2, PIOVR4, IBLNK, UNDEF, IUNDEF,              /CONST/  2
     1                 UNFILD, URAD, DEFIFR, DEFCFR, DEFINC, KWBTU              /CONST/  3
      REAL             KWBTU                                                    /CONST/  4
      COMMON  /DESTIT/ IDEST(3)                                                 /DESTIT/ 2
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                         /FILES/  3
     2              , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                    /FILES/  4
     3                IHRREP(3), IHRPAS(2)                                      /FILES/  5
      COMMON /INTS  / IZERO,IONE,ITWO,ITHREE,IFOUR,IFIVE,ISIX,                  /INTS/   2
     1                ISEVEN,IEIGHT,ININE,ITEN,                                 /INTS/   3
     2                I11,I12,I13,I14,I15,I16,I17,I18,I19,I20,                  /INTS/   4
     3                I21,I22,I23,I24,I25,I26,I27,I28,I29,I30,                  HVAC     4
     4                I31,I32,I33,I34,I35,I36,I37,I38,I39,I40,                  HVAC     5
     5                I41,I42,I43,I44,I45,I46,I47,I48,I49,I50,                  HVAC     6
     $                I51,I52,I53,I54,I55,I56,I57,I58,I59,I60,                  HVAC6    6
     $                I61,I62,I63,I64,I65,I66,I67,I68,I69,I70,                  HVAC6    7
     $                I71,I72,I73,I74,I75,I76,I77,I78,I79,I80,                  HVAC6    8
     $                I81,I82,I83,I84,I85,I86,I87,I88,I89,I90,                  HVAC6    9
     $                I91,I92,I93,I94,I95,I96,I97,I98,I99,I100                  HVAC6   10
      INTEGER         INTS(101)                                                 HVAC6   11
      EQUIVALENCE(IZERO,INTS(1))                                                /INTS/   7
      COMMON  /IRUNPD/  NRUNPD, JRUNPD, IRUNPD(6,15)                            /IRUNPD/ 2
      COMMON  /LENS/   MWFLEN, MRLEN, MSHLEN, MWNLEN, MDRLEN, MXLEN,            /LENS/   2
     1                 MULEN, MZLEN, MIWLEN, MFLLEN,                            HRr      5
     2                 LMTB, LLDSOU, MSTLEN, LSTFT, MWLLEN                      BLIND    1
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     BLIND    2
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        FLOOR1   3
      COMMON  /PTRBGN/ ISCB, IWFB, IWPB, ICONSB, IGTB, IWLB, IGEOB,             HRr      6
     1                 ISHADB, IWINB, IDRB, IEWB, IUGB, ISPB, IIWPB,            HRr      7
     2                 IIWB, IFLB, ISPCDB, IOTHB, ILHB, IZQCMB, ISSHDB,         HRr      8
     3                 IOHFIB, IZLSK, IZLSL, ISTFB                              HRr      9
      COMMON  /SIZE/   LENGTH,NVECT,NSCHED,NWF,NWPAR,NCONS,NGT,NWL,NGEO,        BLIND    5
     1                 NGSHAD, NWIN, NDOOR, NEW, NUG, NSP, NIWP, NIW,           /SIZE/   3
     2                 NFL, NDESDY, NBR, NOTH, NITH, NOPSRF,                    HRr     10
     3                 NSURF, NSSHD, NSHTOT                                     GEO1     1
      COMMON /TIME  / IDOY, IDOW, IDSTF, ISCHR, ISCDAY, iDSdates(6),            -044e5r  1
     1                IMO, IDAY, IYR, IHR, CLOCK(10), IDSFLG,                   HOLID1   4
     2                MONDSC(12), MONLEN(12), MONSDA(12), IEODMR                /TIME/   4
      COMMON        // AA(75 000 000)                                           -048ar   1
      INTEGER          IA(75 000 000)                                           -048ar   2
      EQUIVALENCE  (IA(1), AA(1))                                               //       4
C              ---                                                              RLSK    22
C              ---                                                              RLSK    23
C                                                                               RLSK    24
      DIMENSION  ZLSK(2,6,1), NEWTIT(9), NEWTTB(9)                              BIGNAM 123
      DATA NEWTTB /4HLS-K,4H Bui,4Hldin,4Hg In,4Hput ,4HFuel,4Hs Su,            BIGNAM 124
     1             4Hmmar,4Hy   /                                               BIGNAM 125
      DATA NEWTIT/4HLS-K,4H Spa,4Hce I,4Hnput,4H Fue,4Hls S,4Humma,             BIGNAM 126
     1            4Hry  ,4H    /                                                BIGNAM 127
C                                                                               RLSK    30
      IZD    = 0                                                                RLSK    31
      MZ     = ISPB                                                             RLSK    32
      IEND   = NSP+1                                                            RLSK    33
C                                                                               RLSK    34
      DO 2000 IZ=1,IEND                                                         RLSK    35
      IZD    = IZD+1                                                            RLSK    36
      IUNIQ  = 160000+IZ                                                        -035    40
      IF ((NDESDY.NE.0).AND.(NRUNPD.GT.NDESDY).AND.(NDD.LE.0))                  RLSK    38
     $  IUNIQ= 170000+IZ                                                        -035    41
C                                                                               RLSK    40
      GO TO (100,200,300), IFLAG                                                RLSK    41
C                                                                               RLSK    42
  100 CONTINUE                                                                  RLSK    43
C               WRITE TITLE AND HEADING RECORD                                  RLSK    44
      IF( IZ .GT. NSP )  GOTO  115                                              RLSK    45
      WRITE(IREPFL) I22,IUNIQ,ISIX,(NEWTIT(II),II=1,9),                         BIGNAM 128
     1              (<IZNM>,II=1,8),(IDEST(II),II=1,3)                          BIGNAM 129
  110 WRITE(IREPFL) I12,IUNIQ,IONE,IONE,IEIGHT,(<IZNM>,II=1,8)                  BIGNAM 130
      GOTO  120                                                                 RLSK    49
  115 WRITE(IREPFL) I22,IUNIQ,ISIX,(NEWTTB(II),II=1,9),                         BIGNAM 131
     1              (IBLNK,II=1,8),(IDEST(II),II=1,3)                           BIGNAM 132
      WRITE(IREPFL) IFOUR, IUNIQ, IONE, ISIX, IZERO                             RLSK    52
  120 WRITE(IREPFL) IFOUR,IUNIQ,IONE,ITWO,IZERO                                 RLSK    53
      GOTO 1000                                                                 RLSK    54
C                                                                               RLSK    55
  200 CONTINUE                                                                  RLSK    56
C                                                                               RLSK    57
C               CONVERT UNITS TO KW AND MBTU                                    RLSK    58
C                                                                               RLSK    59
      DO 101 I=1,4                                                              RLSK    60
  101 ZLSK(1,I,IZD) = ZLSK(1,I,IZD) * KWBTU                                     RLSK    61
      DO 102 I=5,6                                                              RLSK    62
  102 ZLSK(1,I,IZD)=ZLSK(1,I,IZD)*1.0E-6                                        RLSK    63
C                                                                               RLSK    64
C               MONTHLY RECORD                                                  RLSK    65
C                                                                               RLSK    66
      WRITE(IREPFL) I11,IUNIQ,IONE,ITHREE,ISEVEN,MONDSC(IMO),                   RLSK    67
     1(ZLSK(1,I,IZD),I=1,6)                                                     RLSK    68
C               ZERO MONTHLY PART OF ZLSK ARRAY FOR USE NEXT MONTH              RLSK    69
      DO 250 I=1,6                                                              RLSK    70
  250 ZLSK(1,I,IZD)=0.0                                                         RLSK    71
      GOTO 1000                                                                 RLSK    72
C                                                                               RLSK    73
  300 CONTINUE                                                                  RLSK    74
C                                                                               RLSK    75
C               CONVERT UNITS TO KW AND MBTU                                    RLSK    76
C                                                                               RLSK    77
      DO 301 I=1,4                                                              RLSK    78
  301 ZLSK(2,I,IZD) = ZLSK(2,I,IZD) * KWBTU                                     RLSK    79
      DO 302 I=5,6                                                              RLSK    80
  302 ZLSK(2,I,IZD)=ZLSK(2,I,IZD)*1.0E-6                                        RLSK    81
C                                                                               RLSK    82
C               YEARLY RECORD                                                   RLSK    83
C                                                                               RLSK    84
      WRITE(IREPFL) IFOUR,IUNIQ,IONE,IFOUR,IZERO                                RLSK    85
      WRITE(IREPFL) ITEN,IUNIQ,IONE,IFIVE,ISIX,(ZLSK(2,I,IZD),I=1,6)            RLSK    86
C               FINAL RECORD                                                    RLSK    87
      WRITE(IREPFL) ITWO,IUNIQ,ISEVEN                                           RLSK    88
C               ZERO YEARLY PART OF ZLSK IF NOT LAST RUN PERIOD                 RLSK    89
      IF (JRUNPD.EQ. NRUNPD) GOTO 1000                                          RLSK    90
      DO 350 I=1,6                                                              RLSK    91
  350 ZLSK(2,I,IZD)=0.0                                                         RLSK    92
C                                                                               RLSK    93
 1000 CONTINUE                                                                  RLSK    94
C                                                                               RLSK    95
 2000 MZ     = MZ+MZLEN                                                         RLSK    96
C                                                                               RLSK    97
      RETURN                                                                    RLSK    98
      END                                                                       RLSK    99
      SUBROUTINE RLSL(IFLAG,ZLSL)                                               RLSL     2
C                                                                               RLSL     3
C           WRITE REPORT RECORDS FOR LS-L -- SOLAR AND MANAGEMENT SUMMARY       RLSL     4
C                                                                               RLSL     5
C              IFLAG  1 - WRITE TITLE AND HEADING RECORD                        RLSL     6
C              IFLAG  2 - WRITE MONTHLY RECORD                                  RLSL     7
C              IFLAG  3 - WRITE YEARLY TOTALS RECORD                            RLSL     8
C                                                                               RLSL     9
      COMMON /CLCFLG/ IFSTHR,IPRDFL,IGOLGE,NDD,LDSTYP,IFHRP                     DDAY1    1
      COMMON  /CONST/  DTOR, PIOVR2, PIOVR4, IBLNK, UNDEF, IUNDEF,              /CONST/  2
     1                 UNFILD, URAD, DEFIFR, DEFCFR, DEFINC, KWBTU              /CONST/  3
      REAL             KWBTU                                                    /CONST/  4
      COMMON  /DESTIT/ IDEST(3)                                                 /DESTIT/ 2
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                         /FILES/  3
     2              , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                    /FILES/  4
     3                IHRREP(3), IHRPAS(2)                                      /FILES/  5
      COMMON /HRCNTL/  MOHRS,IYRHRS                                             /HRCNT/  2
      COMMON /INTS  / IZERO,IONE,ITWO,ITHREE,IFOUR,IFIVE,ISIX,                  /INTS/   2
     1                ISEVEN,IEIGHT,ININE,ITEN,                                 /INTS/   3
     2                I11,I12,I13,I14,I15,I16,I17,I18,I19,I20,                  /INTS/   4
     3                I21,I22,I23,I24,I25,I26,I27,I28,I29,I30,                  HVAC     4
     4                I31,I32,I33,I34,I35,I36,I37,I38,I39,I40,                  HVAC     5
     5                I41,I42,I43,I44,I45,I46,I47,I48,I49,I50,                  HVAC     6
     $                I51,I52,I53,I54,I55,I56,I57,I58,I59,I60,                  HVAC6    6
     $                I61,I62,I63,I64,I65,I66,I67,I68,I69,I70,                  HVAC6    7
     $                I71,I72,I73,I74,I75,I76,I77,I78,I79,I80,                  HVAC6    8
     $                I81,I82,I83,I84,I85,I86,I87,I88,I89,I90,                  HVAC6    9
     $                I91,I92,I93,I94,I95,I96,I97,I98,I99,I100                  HVAC6   10
      INTEGER         INTS(101)                                                 HVAC6   11
      EQUIVALENCE(IZERO,INTS(1))                                                /INTS/   7
      COMMON  /IRUNPD/  NRUNPD, JRUNPD, IRUNPD(6,15)                            /IRUNPD/ 2
      COMMON  /LENS/   MWFLEN, MRLEN, MSHLEN, MWNLEN, MDRLEN, MXLEN,            /LENS/   2
     1                 MULEN, MZLEN, MIWLEN, MFLLEN,                            HRr      5
     2                 LMTB, LLDSOU, MSTLEN, LSTFT, MWLLEN                      BLIND    1
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     BLIND    2
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        FLOOR1   3
      COMMON  /PTRBGN/ ISCB, IWFB, IWPB, ICONSB, IGTB, IWLB, IGEOB,             HRr      6
     1                 ISHADB, IWINB, IDRB, IEWB, IUGB, ISPB, IIWPB,            HRr      7
     2                 IIWB, IFLB, ISPCDB, IOTHB, ILHB, IZQCMB, ISSHDB,         HRr      8
     3                 IOHFIB, IZLSK, IZLSL, ISTFB                              HRr      9
      COMMON  /SIZE/   LENGTH,NVECT,NSCHED,NWF,NWPAR,NCONS,NGT,NWL,NGEO,        BLIND    5
     1                 NGSHAD, NWIN, NDOOR, NEW, NUG, NSP, NIWP, NIW,           /SIZE/   3
     2                 NFL, NDESDY, NBR, NOTH, NITH, NOPSRF,                    HRr     10
     3                 NSURF, NSSHD, NSHTOT                                     GEO1     1
      COMMON /TIME  / IDOY, IDOW, IDSTF, ISCHR, ISCDAY, iDSdates(6),            -044e5r  1
     1                IMO, IDAY, IYR, IHR, CLOCK(10), IDSFLG,                   HOLID1   4
     2                MONDSC(12), MONLEN(12), MONSDA(12), IEODMR                /TIME/   4
      COMMON        // AA(75 000 000)                                           -048ar   1
      INTEGER          IA(75 000 000)                                           -048ar   2
      EQUIVALENCE  (IA(1), AA(1))                                               //       4
C              ---                                                              RLSL    23
C              ---                                                              RLSL    24
C                                                                               RLSL    25
      DIMENSION NEWTIT(9),ZLSL(2,3,1)                                           BIGNAM 133
      DATA NEWTIT/4HLS-L,4H Man,4Hagem,4Hent ,4Hand ,4HSola,4Hr Su,             BIGNAM 134
     1            4Hmmar,4Hy   /                                                BIGNAM 135
C                                                                               RLSL    29
      IZD    = 0                                                                RLSL    30
      MZ     = ISPB                                                             RLSL    31
      IEND   = NSP                                                              RLSL    32
C                                                                               RLSL    33
      DO 2000 IZ=1,IEND                                                         RLSL    34
      IZD    = IZD+1                                                            RLSL    35
      IUNIQ  = 180000+IZ                                                        -035    42
      IF ((NDESDY.NE.0).AND.(NRUNPD.GT.NDESDY).AND.(NDD.LE.0))                  RLSL    37
     $  IUNIQ= 190000+IZ                                                        -035    43
C                                                                               RLSL    39
      GO TO (100,200,300), IFLAG                                                RLSL    40
C                                                                               RLSL    41
  100 CONTINUE                                                                  RLSL    42
C                                                                               RLSL    43
C                                                                               RLSL    44
C               WRITE TITLE AND HEADING RECORD                                  RLSL    45
      WRITE(IREPFL) I22,IUNIQ,ISIX,(NEWTIT(II),II=1,9),                         BIGNAM 136
     1              (<IZNM>,II=1,8),(IDEST(II),II=1,3)                          BIGNAM 137
  110 WRITE(IREPFL) I12,IUNIQ,IONE,IONE,IEIGHT,(<IZNM>,II=1,8)                  BIGNAM 138
  120 WRITE(IREPFL) IFOUR,IUNIQ,IONE,ITWO,IZERO                                 RLSL    49
      GOTO 1000                                                                 RLSL    50
C                                                                               RLSL    51
  200 CONTINUE                                                                  RLSL    52
C                                                                               RLSL    53
C                    CONVERT TOTAL SOLAR TO AVERAGE SOLAR TO SPACE              RLSL    54
C                                                                               RLSL    55
      ZLSL(1,2,IZD)=ZLSL(1,2,IZD)*24./FLOAT(MOHRS)                              RLSL    56
C                                                                               RLSL    57
C               MONTHLY RECORD                                                  RLSL    58
C                                                                               RLSL    59
      WRITE(IREPFL) IEIGHT,IUNIQ,IONE,ITHREE,IFOUR,MONDSC(IMO),                 RLSL    60
     1(ZLSL(1,I,IZD),I=1,3)                                                     RLSL    61
C               ZERO MONTHLY PART OF ZLSK ARRAY FOR USE NEXT MONTH              RLSL    62
      DO 250 I=1,3                                                              RLSL    63
  250 ZLSL(1,I,IZD)=0.0                                                         RLSL    64
      GOTO 1000                                                                 RLSL    65
C                                                                               RLSL    66
  300 CONTINUE                                                                  RLSL    67
C                                                                               RLSL    68
C                    CONVERT TOTAL SOLAR TO AVERAGE SOLAR FOR THE YEAR          RLSL    69
C                                                                               RLSL    70
      ZLSL(2,2,IZD)=ZLSL(2,2,IZD)*24./FLOAT(IYRHRS)                             RLSL    71
C               YEARLY RECORD                                                   RLSL    72
C                                                                               RLSL    73
      WRITE(IREPFL)ISEVEN,IUNIQ,IONE,IFOUR,ITHREE,(ZLSL(2,I,IZD),I=1,3)         RLSL    74
C               FINAL RECORD                                                    RLSL    75
      WRITE(IREPFL) ITWO,IUNIQ,ISEVEN                                           RLSL    76
C               ZERO YEARLY PART OF ZLSL IF NOT LAST RUN PERIOD                 RLSL    77
      IF (JRUNPD.EQ. NRUNPD) GOTO 1000                                          RLSL    78
      DO 350 I=1,3                                                              RLSL    79
  350 ZLSL(2,I,IZD)=0.0                                                         RLSL    80
C                                                                               RLSL    81
 1000 CONTINUE                                                                  RLSL    82
C                                                                               RLSL    83
 2000 MZ     = MZ+MZLEN                                                         RLSL    84
      MOHRS  = 0                                                                RLSL    85
      IF (IFLAG.EQ.3) IYRHRS=0                                                  RLSL    86
C                                                                               RLSL    87
      RETURN                                                                    RLSL    88
      END                                                                       RLSL    89
      SUBROUTINE  RLSM (IFLAG,ZLSM)                                             RLSM     2
C                                                                               RLSM     3
C              WRITE REPORT RECORDS FOR LS-M -- ILLUM FROM DAYLIGHT             RLSM     4
C                                               VS. HOUR OF DAY                 RLSM     5
C                                                                               RLSM     6
C              IFLAG  1 - WRITE TITLE AND HEADING RECORD                        RLSM     7
C                     2 - WRITE MONTHLY RECORD                                  RLSM     8
C                     3 - WRITE YEARLY TOTALS RECORD                            RLSM     9
C                                                                               RLSM    10
      COMMON /CLCFLG/ IFSTHR,IPRDFL,IGOLGE,NDD,LDSTYP,IFHRP                     DDAY1    1
      COMMON  /CONST/  DTOR, PIOVR2, PIOVR4, IBLNK, UNDEF, IUNDEF,              /CONST/  2
     1                 UNFILD, URAD, DEFIFR, DEFCFR, DEFINC, KWBTU              /CONST/  3
      REAL             KWBTU                                                    /CONST/  4
      COMMON  /DAYLT/ NDAYCF,IPHS,IZ,IHIT,MHHIT,IL,RHOAV,ATOT,ARHTOT,           /DAYLT/  2
     1                AR(3),AP(3),ARH(3),ARHP(3),NPH,NTH,WC(3),TMULT,           /DAYLT/  3
     2                TSOLNM,TVISDF,FRUP,ISHLOC,NWTOT,RHOCW,RHOFW,WAREA,        /DAYLT/  4
     3                IMREF,PHSUN,THSUN,PHSUND,THSUND,THSMIN,PHSMIN,            /DAYLT/  5
     4                THSMAX,PHSMAX,THSDEL,PHSDEL,H,NTHS,NPHS,NDFC,LWDC,        /DAYLT/  6
     5                BETA,W,IBZ,IWZ,ZENL,JZD,WBACLU(2,2),PF(7,5),              /DAYLT/  7
     6                VIEWVC(3),GLRNDX(2),WDAYIL(2,2),BACLUM(2),ITF(3),         /DAYLT/  8
     7                RDAYIL(2),RBACLU(2),GLRNEW(2),ETACLD,CDIRLW(24),          /DAYLT/  9
     8                CDIFLW(24),ODIFLW(24),SOLIC(12),TFAC,SPHSUN,              /DAYLT/ 10
     9                CPHSUN,PHWN,THWN,SPHWN,CPHWN,TOTIL(2),ATMMOI(12),         /DAYLT/ 11
     1                ATMTUR(12),XRAN,ALFAD,THRAT,PHRAT,SETPNT(2),              /DAYLT/ 12
     2                IZLSG,IZLSH,IZLSJM,IZLSJY,IZDREP,FPHRP(2),ZFTOT,          /DAYLT/ 13
     3                EINTSK(2,12,24),EINTSU(2,12,24),EDIRSK(2,12,24),          VISBL    2
     4                EDIRSU(2,12,24),FLCWSK(2,12),FLCWSU(2,12),                VISBL    3
     5                FLFWSK(2,12),FLFWSU(2,12),GILSK(2,10),GILSU(2,10),        VISBL    4
     6                WLUMSK(2,11,24),WLUMSU(2,11,24),AVWLSK(2,12,24),          VISBL    5
     7                AVWLSU(2,12,24),CHILSK(24),CHILSU(24),OHILSK(24),         VISBL    6
     8                DFSKHR(2,2),DFSUHR(2,2),SFSKHR(2,2),SFSUHR(2,2),          /DAYLT/ 19
     9                BFSKHR(2,2),BFSUHR(2,2),HISUNF,CHISKF,OHISKF,IZLSM        44d5br   1
      COMMON  /DAYL1/  ATMTU, ATMMO, TAU1                                       /DAYLT/ 21
     1               , TVISB, TH, PH, RAY(3), WNORM(3), TVISBR                  /DAYLT/ 22
      COMMON  /DESTIT/ IDEST(3)                                                 /DESTIT/ 2
      COMMON /DESHQ/  IDDFLG,DESHRQ(360),IDDTYP(2)                              DDAY1    2
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                         /FILES/  3
     2              , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                    /FILES/  4
     3                IHRREP(3), IHRPAS(2)                                      /FILES/  5
      COMMON /INTS  / IZERO,IONE,ITWO,ITHREE,IFOUR,IFIVE,ISIX,                  /INTS/   2
     1                ISEVEN,IEIGHT,ININE,ITEN,                                 /INTS/   3
     2                I11,I12,I13,I14,I15,I16,I17,I18,I19,I20,                  /INTS/   4
     3                I21,I22,I23,I24,I25,I26,I27,I28,I29,I30,                  HVAC     4
     4                I31,I32,I33,I34,I35,I36,I37,I38,I39,I40,                  HVAC     5
     5                I41,I42,I43,I44,I45,I46,I47,I48,I49,I50,                  HVAC     6
     $                I51,I52,I53,I54,I55,I56,I57,I58,I59,I60,                  HVAC6    6
     $                I61,I62,I63,I64,I65,I66,I67,I68,I69,I70,                  HVAC6    7
     $                I71,I72,I73,I74,I75,I76,I77,I78,I79,I80,                  HVAC6    8
     $                I81,I82,I83,I84,I85,I86,I87,I88,I89,I90,                  HVAC6    9
     $                I91,I92,I93,I94,I95,I96,I97,I98,I99,I100                  HVAC6   10
      INTEGER         INTS(101)                                                 HVAC6   11
      EQUIVALENCE(IZERO,INTS(1))                                                /INTS/   7
      COMMON  /IRUNPD/  NRUNPD, JRUNPD, IRUNPD(6,15)                            /IRUNPD/ 2
      COMMON  /LENS/   MWFLEN, MRLEN, MSHLEN, MWNLEN, MDRLEN, MXLEN,            /LENS/   2
     1                 MULEN, MZLEN, MIWLEN, MFLLEN,                            HRr      5
     2                 LMTB, LLDSOU, MSTLEN, LSTFT, MWLLEN                      BLIND    1
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     BLIND    2
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        FLOOR1   3
      COMMON  /PTRBGN/ ISCB, IWFB, IWPB, ICONSB, IGTB, IWLB, IGEOB,             HRr      6
     1                 ISHADB, IWINB, IDRB, IEWB, IUGB, ISPB, IIWPB,            HRr      7
     2                 IIWB, IFLB, ISPCDB, IOTHB, ILHB, IZQCMB, ISSHDB,         HRr      8
     3                 IOHFIB, IZLSK, IZLSL, ISTFB                              HRr      9
      COMMON  /SIZE/   LENGTH,NVECT,NSCHED,NWF,NWPAR,NCONS,NGT,NWL,NGEO,        BLIND    5
     1                 NGSHAD, NWIN, NDOOR, NEW, NUG, NSP, NIWP, NIW,           /SIZE/   3
     2                 NFL, NDESDY, NBR, NOTH, NITH, NOPSRF,                    HRr     10
     3                 NSURF, NSSHD, NSHTOT                                     GEO1     1
      COMMON /TIME  / IDOY, IDOW, IDSTF, ISCHR, ISCDAY, iDSdates(6),            -044e5r  1
     1                IMO, IDAY, IYR, IHR, CLOCK(10), IDSFLG,                   HOLID1   4
     2                MONDSC(12), MONLEN(12), MONSDA(12), IEODMR                /TIME/   4
      COMMON        // AA(75 000 000)                                           -048ar   1
      INTEGER          IA(75 000 000)                                           -048ar   2
      EQUIVALENCE  (IA(1), AA(1))                                               //       4
C                                                                               RLSM    25
      DIMENSION NEWTIT(9), ZLSM(4,2,25,1), MZLSM(25), NPT(2)                    RLSM    26
      DATA NEWTIT /4HLS-M,4H Day,4Hligh,4Ht Il,4Hlumi,4Hnanc,                   RLSM    27
     1             4He Re,4Hf Pn,4Ht 1 /                                        RLSM    28
      DATA NPT    /4Ht 1 ,4Ht 2 /                                               RLSM    29
C                                                                               RLSM    30
      IZD    = 0                                                                RLSM    31
      MZ     = ISPB                                                             RLSM    32
C                                                                               RLSM    33
      DO 2000 IZ = 1,NSP                                                        RLSM    34
      IF (<DAYLIGHTING>.EQ.0) GO TO 2000                                        RLSM    35
      IZD    = IZD + 1                                                          RLSM    36
      NIL    = <NREFP>                                                          RLSM    37
      IUNIQ  = 310000 + (IZ*2) - 2                                              RLSM    38
      IF ((NDESDY.NE.0).AND.(NRUNPD.GT.NDESDY).AND.(NDD.LE.0))                  RLSM    39
     $    IUNIQ = 320000 + (IZ*2) - 2                                           RLSM    40
C                                                                               RLSM    41
      GO TO (100,200,300), IFLAG                                                RLSM    42
C                                                                               RLSM    43
  100 CONTINUE                                                                  RLSM    44
C              WRITE TITLE AND HEADING RECORD                                   RLSM    45
      DO IL=1,NIL                                                               RLSM    46
        IUNIQ  = IUNIQ + 1                                                      RLSM    47
        WRITE (IREPFL)I22,IUNIQ,ISIX,(NEWTIT(II),II=1,8),NPT(IL),               RLSM    48
     $               (<IZNM>,II=1,8),(IDEST(II),II=1,3)                         RLSM    49
        WRITE(IREPFL) I13,IUNIQ,IONE,IONE,ININE,(<IZNM>,II=1,8),                RLSM    50
     $               NPT(IL)                                                    RLSM    51
        WRITE(IREPFL) IFOUR,IUNIQ,IONE,ITWO,IZERO                               RLSM    52
      ENDDO                                                                     RLSM    53
      GO TO 1000                                                                RLSM    54
C                                                                               RLSM    55
  200 CONTINUE                                                                  RLSM    56
C              MONTHLY RECORD                                                   RLSM    57
C                                                                               RLSM    58
C              DIVIDE MONTHLY ILLUM QUANTITIES BY TOTAL HOURS                   RLSM    59
C                                                                               RLSM    60
      DO IL=1,NIL                                                               RLSM    61
        IUNIQ  = IUNIQ + 1                                                      RLSM    62
        DO I=1,25                                                               RLSM    63
          MZLSM(I) = INT(ZLSM(1,IL,I,IZD)/(ZLSM(3,IL,I,IZD)+0.001)+0.5)         RLSM    64
        ENDDO                                                                   RLSM    65
C              WRITE MONTHLY RECORD                                             RLSM    66
        WRITE(IREPFL) I30,IUNIQ,IONE,ITHREE,I26,MONDSC(IMO),                    RLSM    67
     1              (MZLSM(I),I=1,25)                                           RLSM    68
C              ZERO MONTHLY PART OF ZLSH ARRAY FOR USE NEXT MONTH               RLSM    69
        DO  I=1,25                                                              RLSM    70
          ZLSM(1,IL,I,IZD) = 0.                                                 RLSM    71
          ZLSM(3,IL,I,IZD) = 0.                                                 RLSM    72
        ENDDO                                                                   RLSM    73
      ENDDO                                                                     RLSM    74
      GO TO 1000                                                                RLSM    75
C                                                                               RLSM    76
  300 CONTINUE                                                                  RLSM    77
C              YEARLY RECORD                                                    RLSM    78
C                                                                               RLSM    79
C              DIVIDE YEARLY ILLUM VALUES BY TOTAL HOURS                        RLSM    80
C                                                                               RLSM    81
      DO IL=1,NIL                                                               RLSM    82
        IUNIQ  = IUNIQ + 1                                                      RLSM    83
        DO I=1,25                                                               RLSM    84
          MZLSM(I) = INT(ZLSM(2,IL,I,IZD)/(ZLSM(4,IL,I,IZD)+0.001)+0.5)         RLSM    85
        ENDDO                                                                   RLSM    86
C              WRITE YEARLY RECORD                                              RLSM    87
        WRITE(IREPFL) I29,IUNIQ,IONE,IFOUR,I25,(MZLSM(I),I=1,25)                RLSM    88
C              FINAL RECORD                                                     RLSM    89
        WRITE(IREPFL) ITWO,IUNIQ,ISEVEN                                         RLSM    90
C              ZERO YEARLY PART OF ZLSH ARRAY IF NOT LAST RUN PERIOD            RLSM    91
        IF (JRUNPD.NE.NRUNPD) THEN                                              RLSM    92
          DO I=1,25                                                             RLSM    93
            ZLSM(2,IL,I,IZD) = 0.                                               RLSM    94
            ZLSM(4,IL,I,IZD) = 0.                                               RLSM    95
          ENDDO                                                                 RLSM    96
        ENDIF                                                                   RLSM    97
      ENDDO                                                                     RLSM    98
C                                                                               RLSM    99
 1000 CONTINUE                                                                  RLSM   100
C                                                                               RLSM   101
 2000 MZ     = MZ + MZLEN                                                       RLSM   102
      RETURN                                                                    RLSM   103
      END                                                                       RLSM   104
      SUBROUTINE RLVA                                                           RLVA     2
C                                                                               RLVA     3
C              REPORT LV-A - GENERAL PROJECT AND BUILDING INPUT                 RLVA     4
C                                                                               RLVA     5
      COMMON  /CONST/  DTOR, PIOVR2, PIOVR4, IBLNK, UNDEF, IUNDEF,              /CONST/  2
     1                 UNFILD, URAD, DEFIFR, DEFCFR, DEFINC, KWBTU              /CONST/  3
      REAL             KWBTU                                                    /CONST/  4
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                         /FILES/  3
     2              , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                    /FILES/  4
     3                IHRREP(3), IHRPAS(2)                                      /FILES/  5
      COMMON /INTS  / IZERO,IONE,ITWO,ITHREE,IFOUR,IFIVE,ISIX,                  /INTS/   2
     1                ISEVEN,IEIGHT,ININE,ITEN,                                 /INTS/   3
     2                I11,I12,I13,I14,I15,I16,I17,I18,I19,I20,                  /INTS/   4
     3                I21,I22,I23,I24,I25,I26,I27,I28,I29,I30,                  HVAC     4
     4                I31,I32,I33,I34,I35,I36,I37,I38,I39,I40,                  HVAC     5
     5                I41,I42,I43,I44,I45,I46,I47,I48,I49,I50,                  HVAC     6
     $                I51,I52,I53,I54,I55,I56,I57,I58,I59,I60,                  HVAC6    6
     $                I61,I62,I63,I64,I65,I66,I67,I68,I69,I70,                  HVAC6    7
     $                I71,I72,I73,I74,I75,I76,I77,I78,I79,I80,                  HVAC6    8
     $                I81,I82,I83,I84,I85,I86,I87,I88,I89,I90,                  HVAC6    9
     $                I91,I92,I93,I94,I95,I96,I97,I98,I99,I100                  HVAC6   10
      INTEGER         INTS(101)                                                 HVAC6   11
      EQUIVALENCE(IZERO,INTS(1))                                                /INTS/   7
      COMMON  /IRUNPD/  NRUNPD, JRUNPD, IRUNPD(6,15)                            /IRUNPD/ 2
      COMMON  /LOCALD/ STALAT, STALON, ITIMZ, BAZIM, BALTIT,                    /LOCALD/ 2
     1                 SSTALA, CSTALA, TSTALA, SBAZIM, CBAZIM                   /LOCALD/ 3
     2                 ,BXORG, BYORG, SHCOEF, TP1, TP2, WSTP1, WSTP2,           /LOCALD/ 4
     3                 WSHGT,WSHGTL(12),ISREFL,IHOLX                            HOLID1   2
      DIMENSION LOCALD(32)                                                      HOLID1   3
      EQUIVALENCE      (LOCALD(1),STALAT)                                       /LOCALD/ 7
      COMMON  /RUNTIM/ IDAYBG, IMONBG, IYRBG,  IDAYND, IMONND, IYRND            /RUNTIM/ 2
      COMMON /TIME  / IDOY, IDOW, IDSTF, ISCHR, ISCDAY, iDSdates(6),            -044e5r  1
     1                IMO, IDAY, IYR, IHR, CLOCK(10), IDSFLG,                   HOLID1   4
     2                MONDSC(12), MONLEN(12), MONSDA(12), IEODMR                /TIME/   4
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
      COMMON        // AA(75 000 000)                                           -048ar   1
      INTEGER          IA(75 000 000)                                           -048ar   2
      EQUIVALENCE  (IA(1), AA(1))                                               //       4
C                                                                               RLVA    15
      DIMENSION ITIMA(12)                                                       RLVA    16
C                                                                               RLVA    17
      DATA ITIMA / 3HEST, 3HCST, 3HMST, 3HPST, 3HAST, 3HHST, 3HEDT,             RLVA    18
     1             3HCDT, 3HMDT, 3HPDT, 3HADT, 3HHDT /                          RLVA    19
C                                                                               RLVA    20
C              WRITE OUT RUN PERIOD DATA                                        RLVA    21
      WRITE (IREPFL) IFOUR, IONE, IONE, IONE, IZERO                             RLVA    22
      DO 11 I=1,NRUNPD                                                          RLVA    23
      IDS    = IRUNPD(2,I)                                                      RLVA    24
      IDE    = IRUNPD(5,I)                                                      RLVA    25
      IMS    = IRUNPD(1,I)                                                      RLVA    26
      IME    = IRUNPD(4,I)                                                      RLVA    27
      IYS    = IRUNPD(3,I)                                                      RLVA    28
      IYE    = IRUNPD(6,I)                                                      RLVA    29
      ID1    = IDOYR(IMS,IDS)                                                   RLVA    30
      ID2    = IDOYR(IME,IDE)                                                   RLVA    31
      IL     = ID2 - ID1 + 1                                                    RLVA    32
      WRITE (IREPFL) I11, IONE, IONE, ITWO, ISEVEN, IDS, MONDSC(IMS),           RLVA    33
     1               IYS, IDE, MONDSC(IME), IYE, IL                             RLVA    34
   11 CONTINUE                                                                  RLVA    35
C              WRITE OUT LOCATION DATA                                          RLVA    36
      WRITE (IREPFL) IFOUR, IONE, IONE, ITHREE, IZERO                           RLVA    37
      ITIMI  = ITIMZ - 4                                                        RLVA    38
      ITIME  = IBLNK                                                            RLVA    39
      IF (ITIMI .GE. 1 .AND. ITIMI .LE. 12)  ITIME = ITIMA(ITIMI)               RLVA    40
      AZIM   = BAZIM/DTOR                                                       RLVA    41
      ALAT   = STALAT/DTOR                                                      RLVA    42
      ALON   = STALON/DTOR                                                      RLVA    43
      WRITE (IREPFL) I15,IONE,IONE,IFOUR,I11,IWDID,                             RLVA    44
     1               ALAT, ALON, BALTIT, ITIMZ, ITIME, AZIM                     RLVA    45
C              TERMINATE REPORT                                                 RLVA    46
      WRITE (IREPFL) ITWO, IONE, ISEVEN                                         RLVA    47
      RETURN                                                                    RLVA    48
      END                                                                       RLVA    49
      SUBROUTINE RLVB                                                           RLVB     2
C                                                                               RLVB     3
C              REPORT LV-B - SPACE SUMMARY VERIFICATION REPORT                  RLVB     4
C                                                                               RLVB     5
      COMMON  /CONST/  DTOR, PIOVR2, PIOVR4, IBLNK, UNDEF, IUNDEF,              /CONST/  2
     1                 UNFILD, URAD, DEFIFR, DEFCFR, DEFINC, KWBTU              /CONST/  3
      REAL             KWBTU                                                    /CONST/  4
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                         /FILES/  3
     2              , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                    /FILES/  4
     3                IHRREP(3), IHRPAS(2)                                      /FILES/  5
      COMMON /INTS  / IZERO,IONE,ITWO,ITHREE,IFOUR,IFIVE,ISIX,                  /INTS/   2
     1                ISEVEN,IEIGHT,ININE,ITEN,                                 /INTS/   3
     2                I11,I12,I13,I14,I15,I16,I17,I18,I19,I20,                  /INTS/   4
     3                I21,I22,I23,I24,I25,I26,I27,I28,I29,I30,                  HVAC     4
     4                I31,I32,I33,I34,I35,I36,I37,I38,I39,I40,                  HVAC     5
     5                I41,I42,I43,I44,I45,I46,I47,I48,I49,I50,                  HVAC     6
     $                I51,I52,I53,I54,I55,I56,I57,I58,I59,I60,                  HVAC6    6
     $                I61,I62,I63,I64,I65,I66,I67,I68,I69,I70,                  HVAC6    7
     $                I71,I72,I73,I74,I75,I76,I77,I78,I79,I80,                  HVAC6    8
     $                I81,I82,I83,I84,I85,I86,I87,I88,I89,I90,                  HVAC6    9
     $                I91,I92,I93,I94,I95,I96,I97,I98,I99,I100                  HVAC6   10
      INTEGER         INTS(101)                                                 HVAC6   11
      EQUIVALENCE(IZERO,INTS(1))                                                /INTS/   7
      COMMON  /LENS/   MWFLEN, MRLEN, MSHLEN, MWNLEN, MDRLEN, MXLEN,            /LENS/   2
     1                 MULEN, MZLEN, MIWLEN, MFLLEN,                            HRr      5
     2                 LMTB, LLDSOU, MSTLEN, LSTFT, MWLLEN                      BLIND    1
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     BLIND    2
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        FLOOR1   3
      COMMON  /PTRBGN/ ISCB, IWFB, IWPB, ICONSB, IGTB, IWLB, IGEOB,             HRr      6
     1                 ISHADB, IWINB, IDRB, IEWB, IUGB, ISPB, IIWPB,            HRr      7
     2                 IIWB, IFLB, ISPCDB, IOTHB, ILHB, IZQCMB, ISSHDB,         HRr      8
     3                 IOHFIB, IZLSK, IZLSL, ISTFB                              HRr      9
      COMMON  /SIZE/   LENGTH,NVECT,NSCHED,NWF,NWPAR,NCONS,NGT,NWL,NGEO,        BLIND    5
     1                 NGSHAD, NWIN, NDOOR, NEW, NUG, NSP, NIWP, NIW,           /SIZE/   3
     2                 NFL, NDESDY, NBR, NOTH, NITH, NOPSRF,                    HRr     10
     3                 NSURF, NSSHD, NSHTOT                                     GEO1     1
      COMMON        // AA(75 000 000)                                           -048ar   1
      INTEGER          IA(75 000 000)                                           -048ar   2
      EQUIVALENCE  (IA(1), AA(1))                                               //       4
C                                                                               RLVB    13
      DIMENSION Z(5), INFILT(3,6)                                               -046r   54
      DATA IEXTT/ 3HEXT /                                                       RLVB    15
      DATA INTT/ 3HINT /                                                        RLVB    16
      DATA INFILT/4HNO-I,4HNFIL,4HT.  ,                                         RLVB    17
     9            4HAIR-,4HCHAN,4HGE  ,                                         RLVB    18
     9            4HCRAC,4HK   ,4H    ,                                         RLVB    19
     9            4HRESI,4HDENT,4HIAL ,                                         BIGNM4  12
     9            4HS-G ,4H    ,4H    ,                                         -046r   55
     9            4HASHR,4HAE E,4HNH  /                                         -046r   56
C---                                                                            RLVB    21
       CALL  FILLN( 0., Z, 5 )                                                  RLVB    22
C                                                                               RLVB    23
      MZ     = ISPB                                                             RLVB    24
      NEXTT  = 0                                                                RLVB    25
      DO 100 IZ=1,NSP                                                           RLVB    26
      IF (<MZEXT> .GT. 0)  NEXTT = NEXTT + 1                                    RLVB    27
      MZ     = MZ + MZLEN                                                       RLVB    28
  100 CONTINUE                                                                  RLVB    29
      NINTT  = NSP - NEXTT                                                      RLVB    30
      WRITE (IREPFL) ISEVEN, ITWO, IONE, IONE, ITHREE, NSP, NEXTT, NINTT        RLVB    31
      WRITE (IREPFL) IFOUR, ITWO, IFOUR, ITWO, IZERO                            RLVB    32
C              Loop over floors                                                 BIGNM4  14
      MFL = IFLB                                                                BIGNM4  15
      DO 1000 IFL=1,NFL                                                         BIGNM4  16
C              Write out floor name                                             BIGNM4  17
      WRITE(IREPFL) I12,ITWO,IONE,IFIVE,IEIGHT,(<IFLNM>,II=1,8)                 BIGNM4  18
C              Loop over spaces on the floor                                    BIGNM4  19
      NSPF = <NFLSP>                                                            BIGNM4  20
      IF (NSPF.EQ.0) GO TO 1000                                                 BIGNM4  21
      DO 500 ISP=1,NSPF                                                         BIGNM4  22
      MZ = <MFLSP> + (ISP-1)*MZLEN                                              BIGNM4  23
      ITYPEE = INTT                                                             RLVB    35
      IF (<MZEXT> .GT. 0)  ITYPEE = IEXTT                                       RLVB    36
      AC = <ZACHG> + (60.*<ZCFMSF>*<ZFLRAR>)/<ZVOL>                             RLVB    37
      WSF = 0.                                                                  BIGNAM 139
      EWSF = 0.                                                                 LTSYS1  56
      DO IL = 1,5                                                               LTSYS1  57
        WSF = WSF + (1000./<ZFLRAR>)*<ZLTKW>                                    BIGNAM 140
         EWSF = EWSF + 1000.*<EQUIPMENT-KW>/<ZFLRAR>                            -045br 222
      ENDDO                                                                     LTSYS1  59
      WSF = WSF + (1000./<ZFLRAR>)*<ZTLTKW> + <ZTLTWSF>                         BIGNAM 141
      SM = <ZMULT>*<FLOOR-MULT>                                                 RLVB    40
C                                                                               FLOOR1  59
      IF (<IZINFC>.LE.1) THEN                                                   BIGNM4  24
        WRITE(IREPFL) I24,ITWO,IONE,ITHREE,I20,(<IZNM>,II=1,8),                 BIGNM4  25
     1                SM,ITYPEE,<ZA>,WSF,<ZPPLNO>,EWSF,                         BIGNM4  26
     2                (INFILT(J,<IZINFC>+1),J=1,3),AC,                          BIGNM4  27
     3                <ZFLRAR>,<ZVOL>                                           BIGNM4  28
      ELSE                                                                      BIGNM4  29
        WRITE(IREPFL) I23,ITWO,IONE,ISIX,I19,(<IZNM>,II=1,8),                   BIGNM4  30
     1                SM,ITYPEE,<ZA>,WSF,<ZPPLNO>,EWSF,                         BIGNM4  31
     2                (INFILT(J,<IZINFC>+1),J=1,3),                             BIGNM4  32
     3                <ZFLRAR>,<ZVOL>                                           BIGNM4  33
      END IF                                                                    BIGNM4  34
      Z(1) = Z(1) + SM*<ZPPLNO>                                                 RLVB    45
      Z(2) = Z(2) + SM*<ZFLRAR>                                                 RLVB    46
      Z(3) = Z(3) + SM*<ZVOL>                                                   RLVB    47
      WRITE (IREPFL) ITHREE, ITWO, ITHREE, IFOUR                                RLVB    49
  500 CONTINUE                                                                  BIGNM4  35
 1000 MFL = MFL + MFLLEN                                                        BIGNM4  36
      WRITE(IREPFL) ISEVEN,ITWO,IONE,IFOUR,ITHREE,(Z(I),I=1,3)                  RLVB    51
C              TERMINATE REPORT                                                 RLVB    52
      WRITE (IREPFL) ITWO, ITWO, ISEVEN                                         RLVB    53
      RETURN                                                                    RLVB    54
      END                                                                       RLVB    55
      SUBROUTINE RLVC                                                           RLVC     2
C                                                                               RLVC     3
C              SPACE DETAIL VERIFICATION REPORT                                 RLVC     4
C                                                                               RLVC     5
      COMMON  /CONST/  DTOR, PIOVR2, PIOVR4, IBLNK, UNDEF, IUNDEF,              /CONST/  2
     1                 UNFILD, URAD, DEFIFR, DEFCFR, DEFINC, KWBTU              /CONST/  3
      REAL             KWBTU                                                    /CONST/  4
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                         /FILES/  3
     2              , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                    /FILES/  4
     3                IHRREP(3), IHRPAS(2)                                      /FILES/  5
      COMMON /INTS  / IZERO,IONE,ITWO,ITHREE,IFOUR,IFIVE,ISIX,                  /INTS/   2
     1                ISEVEN,IEIGHT,ININE,ITEN,                                 /INTS/   3
     2                I11,I12,I13,I14,I15,I16,I17,I18,I19,I20,                  /INTS/   4
     3                I21,I22,I23,I24,I25,I26,I27,I28,I29,I30,                  HVAC     4
     4                I31,I32,I33,I34,I35,I36,I37,I38,I39,I40,                  HVAC     5
     5                I41,I42,I43,I44,I45,I46,I47,I48,I49,I50,                  HVAC     6
     $                I51,I52,I53,I54,I55,I56,I57,I58,I59,I60,                  HVAC6    6
     $                I61,I62,I63,I64,I65,I66,I67,I68,I69,I70,                  HVAC6    7
     $                I71,I72,I73,I74,I75,I76,I77,I78,I79,I80,                  HVAC6    8
     $                I81,I82,I83,I84,I85,I86,I87,I88,I89,I90,                  HVAC6    9
     $                I91,I92,I93,I94,I95,I96,I97,I98,I99,I100                  HVAC6   10
      INTEGER         INTS(101)                                                 HVAC6   11
      EQUIVALENCE(IZERO,INTS(1))                                                /INTS/   7
      COMMON  /LENS/   MWFLEN, MRLEN, MSHLEN, MWNLEN, MDRLEN, MXLEN,            /LENS/   2
     1                 MULEN, MZLEN, MIWLEN, MFLLEN,                            HRr      5
     2                 LMTB, LLDSOU, MSTLEN, LSTFT, MWLLEN                      BLIND    1
      COMMON  /LOCALD/ STALAT, STALON, ITIMZ, BAZIM, BALTIT,                    /LOCALD/ 2
     1                 SSTALA, CSTALA, TSTALA, SBAZIM, CBAZIM                   /LOCALD/ 3
     2                 ,BXORG, BYORG, SHCOEF, TP1, TP2, WSTP1, WSTP2,           /LOCALD/ 4
     3                 WSHGT,WSHGTL(12),ISREFL,IHOLX                            HOLID1   2
      DIMENSION LOCALD(32)                                                      HOLID1   3
      EQUIVALENCE      (LOCALD(1),STALAT)                                       /LOCALD/ 7
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     BLIND    2
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        FLOOR1   3
      COMMON  /PTRBGN/ ISCB, IWFB, IWPB, ICONSB, IGTB, IWLB, IGEOB,             HRr      6
     1                 ISHADB, IWINB, IDRB, IEWB, IUGB, ISPB, IIWPB,            HRr      7
     2                 IIWB, IFLB, ISPCDB, IOTHB, ILHB, IZQCMB, ISSHDB,         HRr      8
     3                 IOHFIB, IZLSK, IZLSL, ISTFB                              HRr      9
      COMMON  /SIZE/   LENGTH,NVECT,NSCHED,NWF,NWPAR,NCONS,NGT,NWL,NGEO,        BLIND    5
     1                 NGSHAD, NWIN, NDOOR, NEW, NUG, NSP, NIWP, NIW,           /SIZE/   3
     2                 NFL, NDESDY, NBR, NOTH, NITH, NOPSRF,                    HRr     10
     3                 NSURF, NSSHD, NSHTOT                                     GEO1     1
      COMMON  /ZWALOC/ XZ0, YZ0, ZZ0, AZ0,  SAZ, CAZ, XW0, YW0, ZW0,            /ZWALOC/ 2
     1                 AW0, TW0,  SAW, CAW, STW, CTW, XW, YW                    /ZWALOC/ 3
      COMMON        // AA(75 000 000)                                           -048ar   1
      INTEGER          IA(75 000 000)                                           -048ar   2
      EQUIVALENCE  (IA(1), AA(1))                                               //       4
C                                                                               RLVC    16
      DIMENSION ILTNAM(4,5),IWLTYP(2,2),NEWTIT(9),INFNAM(3,5)                   -046r   57
      DIMENSION XG(3),NAME1(8),ISRCNM(3,4)                                      BIGNM4  37
      DIMENSION IIWTYP(3,4), YESNO(2)                                           BIGNM4  38
C                                                                               RLVC    20
      DATA NEWTIT /4HLV-C,4H Det,4Hails,4H of ,4HSpac,4He   ,4H    ,            BIGNAM 145
     1             4H    ,4H    /                                               BIGNAM 146
      DATA ILTNAM /4HSUS-, 4HFLUO, 4HR   , 4H    ,                              RLVC    22
     1             4HREC-, 4HFLUO, 4HR-RV, 4H    ,                              RLVC    23
     2             4HREC-, 4HFLUO, 4HR-RS, 4HV   ,                              RLVC    24
     3             4HINCA, 4HND  , 4H    , 4H    ,                              RLVC    25
     4             4HREC-, 4HFLUO, 4HR-NV, 4H     /                             RLVC    26
      DATA IWLTYP / 4HQUIC, 4HK   , 4HDELA, 4HYED /                             RLVC    27
      DATA INFNAM / 4HAIR-, 4HCHAN, 4HGE  , 4HCRAC, 4HK   , 4H    ,             RLVC    28
     1              4HRESI, 4HDENT, 4HIAL , 4HS-G , 4H    , 4H    ,             -046r   58
     2              4HASHR,4HAE E,4HNH  /                                       -046r   59
      DATA ISRCNM / 4HELEC, 4HTRIC, 4H    , 4HGAS , 4H    , 4H    ,             RLVC    30
     1              4HHOT-, 4HWATE, 4HR   ,4HPROC, 4HESS ,4H    /               RLVC    31
      DATA IIWTYP /4HSTAN,4HDARD,4H    ,                                        BIGNM4  39
     .             4HAIR ,4H    ,4H    ,                                        BIGNM4  40
     .             4HADIA,4HBATI,4HC   ,                                        BIGNM4  41
     .             4HINTE,4HRNAL,4H     /                                       BIGNM4  42
      DATA YESNO /4HYES ,4HNO  /                                                RLVC    36
      DATA IBLANK /4H    /                                                      RLVC    37
      DIMENSION NAMFL(8),NOFLR(8)                                               BIGNAM 147
      DATA NOFLR /4HNO-F,4HLOOR,4H    ,4H    ,4H    ,4H    ,4H    ,             BIGNAM 148
     1            4H    /                                                       BIGNAM 149
C                                                                               RLVC    38
C              LOOP OVER THE SPACES.  FOR EACH SPACE                            RLVC    39
C              WRITE OUT A COMPLETE DESCRIPTION OF THE                          RLVC    40
C              SPACE AND ITS ATTACHED SURFACES                                  RLVC    41
C                                                                               RLVC    42
      MZ     = ISPB                                                             RLVC    43
      DO 8000 IZ=1,NSP                                                          RLVC    44
      IUNIQ  = 10000+IZ                                                         -044d1r  2
C              RESET THE REPORT TITLE                                           RLVC    46
      NWDS   = 22                                                               RLVC    47
      WRITE (IREPFL) NWDS,IUNIQ,ISIX,(NEWTIT(II),II=1,9),                       BIGNAM 150
     1               (<IZNM>,II=1,8),(IBLNK,II=1,3)                             BIGNAM 151
C              GET NAME OF PARENT FLOOR                                         FLOOR1  66
      IF(NFL.EQ.0) GO TO 712                                                    FLOOR1  67
      MFL = IFLB                                                                FLOOR1  68
      DO 710 IFL=1,NFL                                                          FLOOR1  69
C              LOOP OVER SPACES IN THIS FLOOR                                   FLOOR1  70
      NSP1 = <NFLSP>                                                            FLOOR1  71
      IF(NSP1.EQ.0) GO TO 710                                                   FLOOR1  72
      DO 700 ISFL=1,NSP1                                                        FLOOR1  73
      MZ1 = <MFLSP> + (ISFL-1)*MZLEN                                            FLOOR1  74
      IF (MZ.EQ.MZ1) GO TO 720                                                  FLOOR1  75
  700 CONTINUE                                                                  FLOOR1  76
  710 MFL = MFL + MFLLEN                                                        FLOOR1  77
C              NO MATCHING FLOOR; SET NAME TO NO-FLOOR                          FLOOR1  78
  712 DO 715 II=1,8                                                             BIGNAM 152
  715 NAMFL(II) = NOFLR(II)                                                     FLOOR1  80
      GO TO 750                                                                 FLOOR1  81
  720 DO 740 II=1,8                                                             FIX2     1
  740 NAMFL(II) = <IFLNM>                                                       FLOOR1  83
  750 CONTINUE                                                                  FLOOR1  84
      WRITE (IREPFL) I20,IUNIQ,IONE,IONE,I16,                                   BIGNAM 153
     1 (IA(MZ+II-1),II=1,8),(NAMFL(II),II=1,8)                                  BIGNAM 154
C              FILL ZWALOC FOR USE IN COORDINATE TRANSFORMATIONS                RLVC    53
      XZ0    = <ZX>                                                             RLVC    54
      YZ0    = <ZY>                                                             RLVC    55
      ZZ0    = <ZZ>                                                             RLVC    56
      AZ0    = <ZA>*DTOR                                                        RLVC    57
      SAZ    = SIN(AZ0)                                                         RLVC    58
      CAZ    = COS(AZ0)                                                         RLVC    59
      ZH     = <ZVOL>/<ZFLRAR>                                                  RLVC    60
      SM = <ZMULT>*<FLOOR-MULT>                                                 RLVC    61
C              WRITE OUT SIZE AND LOCATION DATA                                 RLVC    62
      WRITE(IREPFL) I12,IUNIQ,IONE,ITWO,IEIGHT,XZ0,YZ0,ZZ0,                     RLVC    63
     1 <ZA>, SM, ZH, <ZFLRAR>, <ZVOL>                                           RLVC    64
C              WRITE OUT THE NUMBER OF EXTERIOR, INTERIOR, AND                  RLVC    65
C              UNDERGROUND SURFACES IN THE SPACE                                RLVC    66
      NINTER = <NINTS>                                                          RLVC    67
      NEXTS  = <NEXTS>                                                          RLVC    68
      NSUG   = <NSUG>                                                           RLVC    69
      NSURF  = NEXTS + NSUG + NINTER                                            RLVC    70
      IDAYL = 2                                                                 RLVC    71
      IF (<DAYLIGHTING>.EQ.1) IDAYL = 1                                         RLVC    72
      ISSP = 2                                                                  RLVC    73
      IF (<SUNSPACE>.EQ.1) ISSP = 1                                             RLVC    74
      WRITE (IREPFL) ITEN,IUNIQ,IONE,ITHREE,ISIX,NSURF,                         RLVC    75
     1 NEXTS,NINTER,NSUG,YESNO(IDAYL),YESNO(ISSP)                               RLVC    76
C              WRITE OUT THE NUMBER OF WINDOWS AND DOORS                        RLVC    77
      NGLAS  = 0                                                                RLVC    78
      NDR    = 0                                                                RLVC    79
      IF (NEXTS .EQ. 0)  GO TO 160                                              RLVC    80
      MX     = <MZEXT>                                                          RLVC    81
      DO 150 IEX = 1,NEXTS                                                      RLVC    82
      NGLAS  = NGLAS + <NWIN>                                                   RLVC    83
      NDR    = NDR + <NDOOR>                                                    RLVC    84
  150 MX     = MX + MXLEN                                                       RLVC    85
  160 NTOT   = NGLAS + NDR                                                      RLVC    86
C              COUNT INTERIOR WINDOWS                                           RLVC    87
      NGLINT = 0                                                                RLVC    88
      IF (NINTER.EQ.0) GO TO 180                                                RLVC    89
      DO 170 IW1 = 1,NINTER                                                     RLVC    90
      MI = IA(<MZINT>+IW1-1)                                                    RLVC    91
      NGLINT = NGLINT + <NIWIN>                                                 RLVC    92
  170 CONTINUE                                                                  RLVC    93
  180 NTOT = NTOT + NGLINT                                                      RLVC    94
      WRITE (IREPFL) IEIGHT,IUNIQ,IONE,IFOUR,IFOUR,                             RLVC    95
     1 NTOT,NGLAS,NDR,NGLINT                                                    RLVC    96
C              WRITE OUT FLOOR WEIGHT AND CALC TEMPERATURE                      RLVC    97
      IM     = 1                                                                RLVC    98
      TZ = <ZTEMP>                                                              -045br 223
      WRITE(IREPFL) ISIX,IUNIQ,IONE,IFIVE,ITWO,                                 RLVC    99
     1 <ZFLRWT>,TZ                                                              BIGNM4  44
C              WRITE OUT INFILTRATION INPUT                                     RLVC   101
      NSC    = <KZINF>                                                          RLVC   102
      IZINFC = <IZINFC>                                                         RLVC   103
      IF (IZINFC.EQ.0) GO TO 201                                                BIGNM4  45
      NSC = NSC - 11                                                            BIGNM4  46
      IF (NSC.LE.0) THEN                                                        BIGNM4  47
          CALL FILLN(IBLNK,NAMFL(1),8)                                          BIGNM4  48
      ELSE                                                                      BIGNM4  49
          II=1                                                                  BIGNM4  50
          CALL MOVEN(<SCHEDULE-NAME>,NAMFL(1),8)                                BIGNM4  51
      END IF                                                                    BIGNM4  52
      ACH = 0.                                                                  BIGNM4  53
      ACH = <ZACHG> + <ZCFMSA>*60./<ZVOL>                                       BIGNM4  54
      CFMSF = 0.                                                                BIGNM4  55
      CFMSF = <ZCFMSF> + <ZACHG>*<ZVOL>/(60.*<ZFLRAR>)                          BIGNM4  56
      IF (IZINFC.EQ.1) THEN                                                     BIGNM4  57
          WRITE (IREPFL) I17,IUNIQ,IONE,ISIX,I13,                               BIGNM4  58
     1        (NAMFL(II),II=1,8),(INFNAM(II,IZINFC),II=1,3),                    BIGNM4  59
     2        CFMSF,ACH                                                         BIGNM4  60
      ELSE IF (IZINFC.EQ.4) THEN                                                BIGNM4  61
          WRITE (IREPFL) ITEN,IUNIQ,IONE,I24,ISIX,                              BIGNM4  62
     1        (INFNAM(II,IZINFC),II=1,3),<HOR-LEAK-FRAC>,                       BIGNM4  63
     2        <NEUTRAL-LEVEL>,<FRAC-LEAK-AREA>                                  BIGNM4  64
      ELSE IF (IZINFC.EQ.2) THEN                                                BIGNM4  65
          WRITE (IREPFL) I16,IUNIQ,IONE,I25,I12,                                BIGNM4  66
     1        (NAMFL(II),II=1,8),(INFNAM(II,IZINFC),II=1,3),                    BIGNM4  67
     2        <ZHTNEU>                                                          BIGNM4  68
      ELSE IF (IZINFC.EQ.3) THEN                                                BIGNM4  69
          WRITE (IREPFL) ITEN,IUNIQ,IONE,I26,ISIX,                              BIGNM4  70
     1        (INFNAM(II,IZINFC),II=1,3),<INF-COEF-CONS>,                       BIGNM4  71
     2        <INF-COEF-WNDSPD>,<INF-COEF-DTEMP>                                BIGNM4  72
      ELSE IF (IZINFC.EQ.5) THEN                                                -046r   60
          WRITE (IREPFL) I11,IUNIQ,IONE,I31,ISEVEN,                             -046r   61
     1        (INFNAM(II,IZINFC),II=1,3),<FLOW-COEF>,<WIND-COEF>,               -046r   62
     2        <STACK-COEF>,<PRESSURE-EXP>                                       -046r   63
      END IF                                                                    BIGNM4  73
C              WRITE OUT OCCUPANT DATA                                          RLVC   119
  201 NSC    = <PEOPLE-SCHEDULE>                                                -045br 224
      IF (NSC .EQ. 0)  GO TO 203                                                RLVC   121
      NSC = NSC - 11                                                            BIGNM4  74
      ARPRP  = 0.0                                                              RLVC   123
      PPLS = 0.                                                                 BIGNM4  75
      PPLL = 0.                                                                 BIGNM4  76
      IF (<ZPPLNO>.GT.0.) THEN                                                  BIGNM4  77
          ARPRP = <ZFLRAR>/<ZPPLNO>                                             BIGNM4  78
          PPLS = <ZQPPLS>/<ZPPLNO>                                              BIGNM4  79
          PPLL = <ZQPPLL>/<ZPPLNO>                                              BIGNM4  80
      END IF                                                                    BIGNM4  81
      WRITE(IREPFL) I16,IUNIQ,IONE,ISEVEN,I12,                                  BIGNM4  82
     1 (<SCHEDULE-NAME>,II=1,8), <ZPPLNO>, ARPRP,                               BIGNM4  83
     2 PPLS,PPLL                                                                BIGNM4  84
C              WRITE OUT LIGHTING INFORMATION                                   RLVC   132
  203 DO IL=1,5                                                                 BIGNM4  85
          NSC = <LIGHTING-SCHEDUL>                                              -045br 225
          IF (NSC.EQ.0) GO TO 205                                               BIGNM4  87
          IF (IL.EQ.1) THEN                                                     BIGNM4  88
              WRITE(IREPFL) ITHREE,IUNIQ,ITHREE,I14                             BIGNM4  89
              WRITE(IREPFL) IFOUR,IUNIQ,IFOUR,IEIGHT,IZERO                      BIGNM4  90
          END IF                                                                BIGNM4  91
          NSC = NSC - 11                                                        BIGNM4  92
          IZLFXT = <IZLFXT>                                                     BIGNM4  93
          WSF = 1000.*<ZLTKW>/<ZFLRAR>                                          BIGNM4  94
          WRITE(IREPFL) I19,IUNIQ,IONE,I27,I15,                                 BIGNM4  95
     1        (<SCHEDULE-NAME>,II=1,8),(ILTNAM(II,IZLFXT),II=1,4),              BIGNM4  96
     2        WSF, <ZLTKW>, <LIGHT-TO-SPACE>                                    -045br 226
      END DO                                                                    BIGNM4  98
C              WRITE OUT TASK LIGHTING DATA                                     RLVC   141
  205 NSC    = <TASK-LIGHT-SCH>                                                 -045br 227
      IF (NSC .EQ. 0)  GO TO 207                                                RLVC   143
      NSC = NSC - 11                                                            BIGNM4  99
      WRITE (IREPFL) ITHREE,IUNIQ,ITHREE,ITEN                                   RLVC   145
      TLKW = <ZQTLT>*KWBTU                                                      BIGNM4 100
      TLWSF = TLKW*1000./<ZFLRAR>                                               BIGNM4 101
      WRITE (IREPFL) I14,IUNIQ,IONE,ININE,ITEN,                                 BIGNM4 102
     1    (<SCHEDULE-NAME>,II=1,8),TLWSF,TLKW                                   BIGNM4 103
C              WRITE OUT ELECTRIC EQUIPMENT INPUT                               RLVC   148
  207 DO IL=1,5                                                                 BIGNM4 104
          NSC = <EQUIP-SCHEDULE>                                                -045br 228
          IF (NSC.EQ.0) GO TO 209                                               BIGNM4 106
          IF (IL.EQ.1) THEN                                                     BIGNM4 107
              WRITE(IREPFL) ITHREE,IUNIQ,ITHREE,I14                             BIGNM4 108
              WRITE(IREPFL) IFOUR,IUNIQ,IFOUR,ITEN,IZERO                        BIGNM4 109
          END IF                                                                BIGNM4 110
          NSC = NSC - 11                                                        BIGNM4 111
          WSF = 1000.*<EQUIPMENT-KW>/<ZFLRAR>                                   -045br 229
          WRITE(IREPFL) I16,IUNIQ,IONE,I28,I12,                                 BIGNM4 113
     1        (<SCHEDULE-NAME>,II=1,8),WSF,<EQUIPMENT-KW>,                      -045br 230
     2        <EQUIP-SENSIBLE>,<EQUIP-LATENT>                                   -045br 231
      END DO                                                                    BIGNM4 116
C              WRITE OUT OTHER EQUIPMENT DATA                                   RLVC   156
  209 NSC    = <SOURCE-SCHEDULE>                                                -045br 232
      IF (NSC .EQ. 0)  GO TO 211                                                RLVC   158
      NSC = NSC - 11                                                            BIGNM4 117
      WRITE (IREPFL) ITHREE,IUNIQ,ITHREE,ITEN                                   RLVC   160
      ISCTYP = <SOURCE-TYPE>                                                    -045br 233
      WRITE (IREPFL) I18,IUNIQ,IONE,I11,I14,                                    BIGNM4 118
     1 (<SCHEDULE-NAME>,II=1,8), (ISRCNM(II,ISCTYP),II=1,3),                    BIGNM4 119
     2 <ZQEQ2>, <ZFEQ2S>, <ZFEQ2L>                                              RLVC   164
C              WRITE OUT INTERIOR SURFACE DATA                                  RLVC   165
  211 NINTS  = <NINTS>                                                          RLVC   166
      IF (NINTS .EQ. 0)  GO TO 240                                              RLVC   167
      WRITE (IREPFL) ITHREE,IUNIQ,ITHREE,IEIGHT                                 RLVC   168
      WRITE (IREPFL) IFOUR,IUNIQ,IFOUR,I12,IZERO                                RLVC   169
      MZINTS = <MZINT> - 1                                                      RLVC   170
      DO IW=1,NINTS                                                             BIGNM4 120
          MI = IA(MZINTS+IW)                                                    BIGNM4 121
          MP = <MIWPROPRL>                                                      BIGNM4 122
C              U-VALUE INCLUDING BOTH AIR FILMS                                 BIGNM4 123
          UFACIW = <UFACTR>                                                     BIGNM4 124
          IF(<NRESF>.NE.0) UFACIW = 1./(1./<UFACTR>+<IW-IFR>)                   BIGNM4 125
          WRITE(IREPFL) I22,IUNIQ,IONE,I13,I18,                                 BIGNM4 126
     1        (<IWNM>,II=1,8),<IWAR>,(<IPRPNM>,II=1,8),                         BIGNM4 127
     2        UFACIW                                                            BIGNM4 128
      END DO                                                                    BIGNM4 129
      WRITE(IREPFL) ITHREE,IUNIQ,ITHREE,ISIX                                    BIGNM4 130
      WRITE(IREPFL) IFOUR,IUNIQ,IFOUR,I29,IZERO                                 BIGNM4 131
      DO IW=1,NINTS                                                             BIGNM4 132
          MI = IA(MZINTS+IW)                                                    BIGNM4 133
          CALL FILLN(IBLANK,NAME1(1),8)                                         BIGNM4 134
          MZFROM = <MZIN>                                                       BIGNM4 135
          MZTO = <MZNEXTTO>                                                     BIGNM4 136
          MZ1 = 0                                                               BIGNM4 137
          IF (MZFROM.EQ.MZ) THEN                                                BIGNM4 138
              MZ1 = MZTO                                                        BIGNM4 139
          ELSE IF (MZTO.EQ.MZ) THEN                                             BIGNM4 140
              MZ1 = MZFROM                                                      BIGNM4 141
          END IF                                                                BIGNM4 142
          IF (MZ1.GT.0 .AND. MZ1.NE.MZ) THEN                                    BIGNM4 143
              MZ2 = MZ                                                          BIGNM4 144
              MZ = MZ1                                                          BIGNM4 145
              DO II=1,8                                                         BIGNM4 146
                  NAME1(II) = <IZNM>                                            BIGNM4 147
              END DO                                                            BIGNM4 148
              MZ = MZ2                                                          BIGNM4 149
          END IF                                                                BIGNM4 150
          MP = <MIWPROPRL>                                                      BIGNM4 151
          IWTYP = <IW-TYPE>                                                     BIGNM4 152
          ITYP = 2                                                              BIGNM4 153
          IF (<NRESF>.EQ.0) ITYP = 1                                            BIGNM4 154
          WRITE(IREPFL) I25,IUNIQ,IONE,I30,I21,                                 BIGNM4 155
     1        (<IWNM>,II=1,8),(IWLTYP(II,ITYP),II=1,2),                         BIGNM4 156
     2        (IIWTYP(II,IWTYP),II=1,3),(NAME1(II),II=1,8)                      BIGNM4 157
      END DO                                                                    BIGNM4 158
  240 CONTINUE                                                                  RLVC   199
C              WRITE OUT EXTERIOR SURFACE DATA                                  RLVC   200
      IF (NEXTS .EQ. 0)  GO TO 400                                              RLVC   201
      MX     = <MZEXT>                                                          RLVC   202
      WRITE (IREPFL) ITHREE,IUNIQ,ITHREE,ININE                                  RLVC   203
      WRITE (IREPFL) IFOUR,IUNIQ,IFOUR,I14,IZERO                                RLVC   204
      DO 350 IEX=1,NEXTS                                                        RLVC   205
      MP     = <MXPROPRL>                                                       LDS1    20
      ITYP   = 1                                                                RLVC   207
      IF (<NRESF> .GT. 0)  ITYP = 2                                             RLVC   208
      WRITE(IREPFL) I25,IUNIQ,IONE,I15,I21,                                     BIGNM4 159
     1    (<IXSNM>,II=1,8),<XSMULT>,<XGSARE>,                                   BIGNM4 160
     2    (<IPRPNM>,II=1,8),<UFACTR>,(IWLTYP(II,ITYP),II=1,2)                   BIGNM4 161
  350 MX     = MX + MXLEN                                                       RLVC   218
      MX     = <MZEXT>                                                          RLVC   219
      WRITE (IREPFL) ITHREE,IUNIQ,ITHREE,ININE                                  RLVC   220
      WRITE (IREPFL) IFOUR,IUNIQ,IFOUR,I16,IZERO                                RLVC   221
      DO 360 IEX=1,NEXTS                                                        RLVC   222
      MG = <MXGEOM> + 3                                                         GEO1    31
      XG(1) = <X>                                                               GEO1    32
      XG(2) = <Y>                                                               GEO1    33
      XG(3) = <Z>                                                               GEO1    34
      WRITE(IREPFL) I20,IUNIQ,IONE,I17,I16,                                     BIGNM4 162
     1    (<IXSNM>,II=1,8),<AEW>,<TEW>,(XG(II),II=1,3),                         BIGNM4 163
     2    <XEW>,<YEW>,<ZEW>                                                     BIGNM4 164
  360 MX     = MX + MXLEN                                                       RLVC   230
  400 CONTINUE                                                                  RLVC   231
C              WRITE OUT UNDERGROUND SURFACE DATA                               RLVC   232
      IF (NSUG .EQ. 0)  GO TO 500                                               RLVC   233
      MU     = <MZUG>                                                           RLVC   234
      WRITE (IREPFL) ITHREE,IUNIQ,ITHREE,ITEN                                   RLVC   235
      WRITE (IREPFL) IFOUR,IUNIQ,IFOUR,I18,IZERO                                RLVC   236
      DO 450 IU=1,NSUG                                                          RLVC   237
      MP     = <MUGPROPRL>                                                      LDS1    21
      WRITE(IREPFL) I23,IUNIQ,IONE,I19,I19,                                     BIGNM4 165
     1    (<IUGNAM>,II=1,8),<UGMULT>,<UGAREA>,                                  BIGNM4 166
     2    (<IPRPNM>,II=1,8),<UFACTR>                                            BIGNM4 167
  450 MU     = MU + MULEN                                                       RLVC   242
  500 CONTINUE                                                                  RLVC   243
C              WRITE OUT WINDOW DATA                                            RLVC   244
      IF (NEXTS .EQ. 0)  GO TO 600                                              RLVC   245
      IF (NGLAS .EQ. 0)  GO TO 600                                              RLVC   246
      MX     = <MZEXT>                                                          RLVC   247
      WRITE (IREPFL) ITHREE,IUNIQ,ITHREE,ITEN                                   RLVC   248
       WRITE (IREPFL) IFOUR,IUNIQ,IFOUR,I20,IZERO                               BIGNM4 168
      DO 550 IEX=1,NEXTS                                                        RLVC   251
      NWN    = <NWIN>                                                           RLVC   252
      IF (NWN .EQ. 0)  GO TO 550                                                RLVC   253
      MWI    = <MXWIN>                                                          RLVC   254
      DO 540 IWN=1,NWN                                                          RLVC   256
      MR     = <MWIPRP>                                                         RLVC   259
C              outside film resistance at 7.5 mph                               RLVC   260
      ro = 1./3.3476                                                            RLVC   261
      if (<IGTYP>.EQ.-1) then                                                   WLIB1   61
       shc = <GSHACO>                                                           RLVC   263
       npanes = 1                                                               BIGNM4 169
       uw = 1./(ro + 1./<GCON>)                                                 RLVC   265
       tvis = <VIS-TRANS>                                                       RLVC   266
       tsol = <CAM1> + <CAM2> + <CAM3> + <CAM4>                                 BIGNM4 170
      else                                                                      RLVC   267
       shc = <SHDCOF>                                                           RLVC   268
       npanes = <NLAYER>                                                        RLVC   269
       uw = 1./(ro + 5.67826/<UCENTER-BARE> + 0.68)                             RLVC   270
       tvis = <TVANG1>                                                          RLVC   271
       tsol = <TRANG1>                                                          BIGNM4 171
      endif                                                                     RLVC   272
      WRITE(IREPFL) I22,IUNIQ,IONE,I21,I18,(<IWINM>,II=1,8),                    BIGNM4 172
     1    <GMULT>,<WIAREA>,<WWI>,<HWI>,<WSETBK>,                                BIGNM4 173
     2    npanes,uw,shc,tvis,tsol                                               BIGNM4 174
  540 MWI    = MWI + MWNLEN                                                     RLVC   276
  550 MX     = MX + MXLEN                                                       RLVC   277
      MX     = <MZEXT>                                                          RLVC   279
      WRITE (IREPFL) ITHREE,IUNIQ,ITHREE,ITEN                                   RLVC   280
      WRITE(IREPFL) IFOUR,IUNIQ,IFOUR,I22,IZERO                                 BIGNM4 175
      IFMT   = 23                                                               RLVC   282
      DO 590 IEX=1,NEXTS                                                        RLVC   283
      NWN    = <NWIN>                                                           RLVC   284
      IF (NWN .EQ. 0)  GO TO 590                                                RLVC   285
      MWI    = <MXWIN>                                                          RLVC   286
      DO 580 IWN = 1,NWN                                                        RLVC   287
      MG = <MWIGEOM> + 3                                                        GEO1    35
      XG(1) = <X>                                                               GEO1    36
      XG(2) = <Y>                                                               GEO1    37
      XG(3) = <Z>                                                               GEO1    38
      WRITE(IREPFL) I25,IUNIQ,IONE,I23,I21,                                     BIGNM4 176
     1    (<IWINM>,II=1,8),(<IXSNM>,II=1,8),(XG(II),II=1,3),                    BIGNM4 177
     2    <XW>,<YW>                                                             BIGNM4 178
  580 MWI    = MWI + MWNLEN                                                     RLVC   305
  590 MX     = MX + MXLEN                                                       RLVC   306
  600 CONTINUE                                                                  RLVC   307
C              TERMINATE REPORT                                                 RLVC   308
      WRITE (IREPFL) ITWO,IUNIQ,ISEVEN                                          RLVC   309
 8000 MZ     = MZ + MZLEN                                                       RLVC   310
      RETURN                                                                    RLVC   311
      END                                                                       RLVC   312
      SUBROUTINE RLVD                                                           RLVD     2
C                                                                               RLVD     3
C              EXTERIOR WALL VERIFICATION REPORT                                RLVD     4
C                                                                               RLVD     5
      COMMON  /CONST/  DTOR, PIOVR2, PIOVR4, IBLNK, UNDEF, IUNDEF,              /CONST/  2
     1                 UNFILD, URAD, DEFIFR, DEFCFR, DEFINC, KWBTU              /CONST/  3
      REAL             KWBTU                                                    /CONST/  4
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                         /FILES/  3
     2              , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                    /FILES/  4
     3                IHRREP(3), IHRPAS(2)                                      /FILES/  5
      COMMON /INTS  / IZERO,IONE,ITWO,ITHREE,IFOUR,IFIVE,ISIX,                  /INTS/   2
     1                ISEVEN,IEIGHT,ININE,ITEN,                                 /INTS/   3
     2                I11,I12,I13,I14,I15,I16,I17,I18,I19,I20,                  /INTS/   4
     3                I21,I22,I23,I24,I25,I26,I27,I28,I29,I30,                  HVAC     4
     4                I31,I32,I33,I34,I35,I36,I37,I38,I39,I40,                  HVAC     5
     5                I41,I42,I43,I44,I45,I46,I47,I48,I49,I50,                  HVAC     6
     $                I51,I52,I53,I54,I55,I56,I57,I58,I59,I60,                  HVAC6    6
     $                I61,I62,I63,I64,I65,I66,I67,I68,I69,I70,                  HVAC6    7
     $                I71,I72,I73,I74,I75,I76,I77,I78,I79,I80,                  HVAC6    8
     $                I81,I82,I83,I84,I85,I86,I87,I88,I89,I90,                  HVAC6    9
     $                I91,I92,I93,I94,I95,I96,I97,I98,I99,I100                  HVAC6   10
      INTEGER         INTS(101)                                                 HVAC6   11
      EQUIVALENCE(IZERO,INTS(1))                                                /INTS/   7
      COMMON  /LENS/   MWFLEN, MRLEN, MSHLEN, MWNLEN, MDRLEN, MXLEN,            /LENS/   2
     1                 MULEN, MZLEN, MIWLEN, MFLLEN,                            HRr      5
     2                 LMTB, LLDSOU, MSTLEN, LSTFT, MWLLEN                      BLIND    1
      COMMON  /LOCALD/ STALAT, STALON, ITIMZ, BAZIM, BALTIT,                    /LOCALD/ 2
     1                 SSTALA, CSTALA, TSTALA, SBAZIM, CBAZIM                   /LOCALD/ 3
     2                 ,BXORG, BYORG, SHCOEF, TP1, TP2, WSTP1, WSTP2,           /LOCALD/ 4
     3                 WSHGT,WSHGTL(12),ISREFL,IHOLX                            HOLID1   2
      DIMENSION LOCALD(32)                                                      HOLID1   3
      EQUIVALENCE      (LOCALD(1),STALAT)                                       /LOCALD/ 7
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     BLIND    2
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        FLOOR1   3
      COMMON  /PTRBGN/ ISCB, IWFB, IWPB, ICONSB, IGTB, IWLB, IGEOB,             HRr      6
     1                 ISHADB, IWINB, IDRB, IEWB, IUGB, ISPB, IIWPB,            HRr      7
     2                 IIWB, IFLB, ISPCDB, IOTHB, ILHB, IZQCMB, ISSHDB,         HRr      8
     3                 IOHFIB, IZLSK, IZLSL, ISTFB                              HRr      9
      COMMON  /SIZE/   LENGTH,NVECT,NSCHED,NWF,NWPAR,NCONS,NGT,NWL,NGEO,        BLIND    5
     1                 NGSHAD, NWIN, NDOOR, NEW, NUG, NSP, NIWP, NIW,           /SIZE/   3
     2                 NFL, NDESDY, NBR, NOTH, NITH, NOPSRF,                    HRr     10
     3                 NSURF, NSSHD, NSHTOT                                     GEO1     1
      COMMON        // AA(75 000 000)                                           -048ar   1
      INTEGER          IA(75 000 000)                                           -048ar   2
      EQUIVALENCE  (IA(1), AA(1))                                               //       4
      DIMENSION IWLTYP(2,2)                                                     RLVD    15
C                                                                               BIGNM4 179
C                                                                               BIGNM4 180
      DIMENSION TT(14,6),WW(6),IAZNME(4,15),                                    -031     1
     $          MZPNT(8192),AZIMTH(8192),MXPNT(8192)                            -42c    37
      DIMENSION FI(6)                                                           RLVD    18
      DATA  FI/ 5.5267, 4.6613, 4.3765, 3.7028, 3.6313, 3.3476 /                RLVD    19
C     FI HOLDS THE 6 FILM COEFFICIENTS WHEN WIND SPEED IS 7.5 MPH               RLVD    20
C                                                                               RLVD    21
      DATA IAZNME/4HNORT,4HH   ,2*4H    ,4HNORT,4HH-EA,4HST  ,4H    ,           RLVD    22
     1             4HEAST,3*4H    ,4HSOUT,4HH-EA,4HST  ,4H    ,                 RLVD    23
     2             4HSOUT,4HH   ,2*4H    ,4HSOUT,4HH-WE,4HST  ,4H    ,          RLVD    24
     3             4HWEST,3*4H    ,4HNORT,4HH-WE,4HST  ,4H    ,                 RLVD    25
     4             4HFLOO, 4HR   , 2*4H    ,                                    RLVD    26
     5             4HROOF,         3*4H    ,                                    RLVD    27
     6             4HALL ,4HWALL,4HS    ,4H    ,                                RLVD    28
     7             4H    ,4HWALL,4HS+RO,4HOFS ,                                 RLVD    29
     8             4H    ,4HUNDE,4HRGRN,4HD    ,                                RLVD    30
     9             4HBUIL,4HDING,4H    ,4H    ,                                 RLVD    31
     1             4HUNDE,4HRGRN,4HD   ,4HS   /                                 RLVD    32
      DO 5 I = 1,14                                                             RLVD    33
      DO 5 J = 1,6                                                              RLVD    34
    5 TT(I,J)=0.0                                                               RLVD    35
C                                                                               RLVD    36
      DATA IWLTYP /4HQUIC, 4HK   , 4HDELA, 4HYED /                              RLVD    37
C                                                                               RLVD    38
C              WRITE OUT NUMBERS                                                RLVD    48
       WRITE (IREPFL) IFIVE, IFOUR, IONE, IONE, IONE, NEW                       BIGNM4 181
      IF (NEW .EQ. 0)  GO TO 300                                                RLVD    51
C              WRITE HEADER                                                     RLVD    52
      WRITE(IREPFL)IFOUR,IFOUR,IFOUR,IFOUR,IZERO                                RLVD    53
C              SAVE POINTERS AND AZIMUTH FOR ALL EXT. WALLS                     RLVD    54
      MZ     = ISPB                                                             RLVD    55
      K      = 0                                                                RLVD    56
      DO 1000 ISP=1,NSP                                                         RLVD    57
      IF (<MZEXT>.EQ.0) GO TO 1000                                              RLVD    58
      MX     = <MZEXT>                                                          RLVD    59
      NW     = <NEXTS>                                                          RLVD    60
      DO 500 IEX=1,NW                                                           RLVD    61
      K      = K+1                                                              RLVD    62
      IEWTYP = <IEWTYPE>                                                        RLVD    63
      IF (IEWTYP .NE. 1 .AND. IEWTYP .NE. 2) GO TO 497                          RLVD    64
C               SPECIAL CASE FOR ROOF OR FLOORS                                 RLVD    65
      AZIMTH(K)=999                                                             RLVD    66
      IF(IEWTYP.EQ.2) AZIMTH(K)=9999                                            RLVD    67
      GOTO 498                                                                  RLVD    68
C               SAVE AZIMTH FOR ALL WALLS                                       RLVD    69
  497 CONTINUE                                                                  RLVD    70
      AZIMTH(K) = <AEW> + <ZA> + BAZIM/DTOR                                     RLVD    71
C              If it exists, add this SPACE's parent FLOOR AZ                   -034     1
      IF(NFL .gt. 0)  THEN                                                      -034     2
        DO IFLR=1,NFL                                                           -034     3
          MFL = IFLB + (IFLR-1)*MFLLEN                                          -034     4
          IF(<NFLSP> .GT. 0)  THEN                                              -034     5
            IF((MZ .GE. <MFLSP>) .and.                                          -034     6
     $         (MZ .LE. <MFLSP>+(<NFLSP>-1)*MZLEN)) THEN                        -034     7
              AZIMTH(K) = AZIMTH(K) + <AFL>                                     -034     8
              GOTO 100                                                          -034     9
            ENDIF                                                               -034    10
          ENDIF                                                                 -034    11
        ENDDO                                                                   -034    12
      ENDIF                                                                     -034    13
C              If TILT of wall <0 then wall points opposite direction           -034    14
  100 IF(<TEW> .LT. 0.)  AZIMTH(K) = AZIMTH(K) + 180                            -034    15
C               ADD 360 DEGREES IF AZIMTH IS NEGATIVE                           RLVD    72
      IF(AZIMTH(K).LT.0) AZIMTH(K)=AZIMTH(K)+360.                               RLVD    73
C              SHIFT AZIMUTH 22.5 DEGREES                                       RLVD    74
      AZIMTH(K)=AMOD(AZIMTH(K)+22.5,360.)                                       RLVD    75
C               SAVE POINTERS FOR ZONE AND WALL                                 RLVD    76
  498 CONTINUE                                                                  RLVD    77
      MXPNT(K)=MX                                                               RLVD    78
      MZPNT(K)=MZ                                                               RLVD    79
  500 MX     = MX+MXLEN                                                         RLVD    80
 1000 MZ     = MZ+MZLEN                                                         RLVD    81
C                                                                               RLVD    82
C               SORT AZIMTH                                                     RLVD    83
C                                                                               RLVD    84
      IEND   = NEW-1                                                            RLVD    85
      DO 2000 I=1,IEND                                                          RLVD    86
      DO 2000 J=I,NEW                                                           RLVD    87
      IF (AZIMTH(I).LE. AZIMTH(J)) GOTO 2000                                    RLVD    88
      TEMP   = AZIMTH(I)                                                        RLVD    89
      AZIMTH(I)=AZIMTH(J)                                                       RLVD    90
      AZIMTH(J)=TEMP                                                            RLVD    91
      ITEMP  = MXPNT(I)                                                         RLVD    92
      MXPNT(I)=MXPNT(J)                                                         RLVD    93
      MXPNT(J)=ITEMP                                                            RLVD    94
      ITEMP  = MZPNT(I)                                                         RLVD    95
      MZPNT(I)=MZPNT(J)                                                         RLVD    96
      MZPNT(J)=ITEMP                                                            RLVD    97
 2000 CONTINUE                                                                  RLVD    98
C                                                                               RLVD    99
C                 LOOP OVER ALL EXTERIOR SURFACES                               RLVD   100
C              CALCULATE WALL,GLASS,AND TOT AREAS. WALL,GLASS, AND TOT U        RLVD   101
C                                                                               RLVD   102
      MX     = IEWB                                                             RLVD   103
      DO 5000 IEX=1,NEW                                                         RLVD   104
C                 INIT WW ARRAY                                                 RLVD   105
C                 WW(1)=GLASS AREA                                              RLVD   106
C          In following, WINDOW = glass + frame (if present)                    RLVD   107
C          WW(2)=WALL AREA (EXCLUDING WINDOWS)                                  RLVD   108
C          WW(3)=TOTAL AREA -- WINDOWS + WALL                                   RLVD   109
C          WW(4)=U-VALUE -- WINDOWS [area-weighted average]                     RLVD   110
C          WW(5)=U-VALUE -- WALL (EXCL WINS)                                    RLVD   111
C          WW(6)=U-VALUE -- WALL + WINDOWS [area-weighted average]              RLVD   112
      DO 4000 I=1,6                                                             RLVD   113
      WW(I)  = 0.0                                                              RLVD   114
 4000 CONTINUE                                                                  RLVD   115
C                 SET UP STANDARD FILE POINTERS                                 RLVD   116
      MX     = MXPNT(IEX)                                                       RLVD   117
      MZ     = MZPNT(IEX)                                                       RLVD   118
      IEWTYP = <IEWTYPE>                                                        RLVD   119
      MP     = <MXPROPRL>                                                       LDS1    22
      MWP = <MPEXPAR>                                                           RLVD   121
      MWI    = <MXWIN>                                                          RLVD   122
C              AVERAGE OA FILM RESISTANCE                                       RLVD   123
      RO = 1./3.3476                                                            -044c7   2
      IF(IEWTYP.LT.3) GOTO 4500                                                 RLVD   125
C               SET UAIR FOR AIR GAP IN TROMBE WALL                             RLVD   126
      IM     = 1                                                                RLVD   127
      TZONER = <ZTEMP>+460.                                                     RLVD   128
      UC1    = .685*TZONER**3/(.1111+1./<EMISSIVITY>)                           RLVD   129
      UC2    = .25                                                              RLVD   130
      IF(<MXSSURF>.NE.0) HTW = SQRT(<XGSARE>)                                   RLVD   131
      IF(IEWTYP.EQ.3) UC2=                                                      RLVD   132
     1CONVEC(TZONER,<TGIN>,TZONER,1.,HTW,<CHANNEL-WIDTH>)                       RLVD   133
      UAIR   = UC1+UC2                                                          RLVD   134
C               SPECIAL CASE FOR TROMBE WALL                                    RLVD   135
      MR     = <MWIPRP>                                                         RLVD   136
      if(<IGTYP>.EQ.-1) then                                                    WLIB1   63
      UT     = 1./(RO+(1./<GCON>)+(1./<UFACTR>)+(1./UAIR))                      RLVD   138
      else                                                                      RLVD   139
        ut = 1./(ro + 5.67826/<UCENTER-BARE> + 0.68                             RLVD   140
     1              + 1./<UFACTR> + 1./UAIR)                                    RLVD   141
      endif                                                                     RLVD   142
      WW(2)  = <XSMULT>*<XGSARE>                                                RLVD   143
      WW(3)  = WW(2)                                                            RLVD   144
      WW(6)  = UT*WW(3)                                                         RLVD   145
      WW(5)  = WW(6)                                                            RLVD   146
      GOTO 4600                                                                 RLVD   147
C                                                                               RLVD   148
C              PROCESS WALLS,FLOOR, OR ROOF                                     RLVD   149
C                                                                               RLVD   150
C                                                                               RLVD   151
 4500 CONTINUE                                                                  RLVD   152
C              LOOP OVER WINDOWS                                                RLVD   153
      NWIN2  = <NWIN>                                                           RLVD   154
      IF(NWIN2.EQ.0) GO TO 4511                                                 RLVD   155
      SUMU   = 0.0                                                              RLVD   156
      DO 4510 IW=1,NWIN2                                                        RLVD   157
      MR     = <MWIPRP>                                                         RLVD   158
      if(<IGTYP>.EQ.-1) then                                                    WLIB1   64
      UW     = 1./(RO+(1./<GCON>))                                              RLVD   160
      else                                                                      RLVD   161
        uw = 1./(ro + 5.67826/<UCENTER-BARE> + 0.68)                            RLVD   162
      endif                                                                     RLVD   163
      TOTMUL = <GMULT>*<XSMULT>*<FLOOR-MULT>*<ZMULT>                            RLVD   164
C           window area (incl frame) and frame area                             RLVD   165
      area = (<HWI>+2.*<FRAME-WIDTH>)*(<WWI>+2.*<FRAME-WIDTH>)                  RLVD   166
      afr  = area - <HWI>*<WWI>                                                 RLVD   167
      WW(1) = WW(1) + AREA*TOTMUL                                               RLVD   168
       ac   = 2*(<HWI> + <WWI> + 4*<FRAME-WIDTH>) * <CURB-HEIGHT>               -044d5 955
       sumu = sumu + totmul*(<HWI>*<WWI>*uw                                     -044d5 956
     $             + afr/(RO+1./(<FRAME-UVAL>+0.00001))                         -044d5 957
     $             + ac/(RO+1./(<CURB-CONDUCT>+0.00001)))                       -044d5 958
 4510 MWI    = MWI+MWNLEN                                                       RLVD   171
C                                                                               RLVD   172
      IF(WW(1).GT.0) WW(4)=SUMU/WW(1)                                           RLVD   173
 4511 CONTINUE                                                                  RLVD   174
C               CALCULATE WALL,ROOF, OR FLOOR OPAQUE VALUES                     RLVD   175
 4600 TOTMUL = <XSMULT>*<FLOOR-MULT>*<ZMULT>*<XGSARE>                           RLVD   176
      WW(2) = TOTMUL - WW(1)                                                    RLVD   177
      WW(3) = TOTMUL                                                            RLVD   178
      IF(AZIMTH(IEX).EQ.999.) III=9                                             RLVD   179
      IF(AZIMTH(IEX).EQ.9999.) III=10                                           RLVD   180
      IF (AZIMTH(IEX) .LT. 999.) III = IFIX((AZIMTH(IEX)-22.5)/45.)+1           RLVD   181
      WW(5)  = 1./(0.4+1./<UFACTR>)                                             RLVD   182
      WW(6)  = (WW(1)*WW(4)+WW(2)*WW(5))/WW(3)                                  RLVD   183
C                                                                               RLVD   184
C               WRITE TO REPORT FILE                                            RLVD   185
C                                                                               RLVD   186
      WRITE(IREPFL) I29,IFOUR,IONE,IFIVE,I25,(<IXSNM>,II=1,8),                  BIGNM4 182
     1              WW(4),WW(1),WW(5),WW(2),WW(6),WW(3),                        BIGNM4 183
     2              IAZNME(1,III),IAZNME(2,III),IAZNME(3,III),                  BIGNM4 184
     3              (<IZNM>,II=1,8)                                             BIGNM4 185
      WRITE(IREPFL)ITHREE,IFOUR,ITHREE,IFOUR                                    RLVD   190
C                                                                               RLVD   191
C               ACCUMULATE TOTALS BY AZIMTH, ROOF, OR FLOOR INDEX               RLVD   192
C                                                                               RLVD   193
      DO 4700 I=1,3                                                             RLVD   194
      TT(III,I)=TT(III,I)+WW(I)                                                 RLVD   195
C               KEEP TOTAL FOR WALLS IN TT(11,I)                                RLVD   196
      IF(IEWTYP.EQ.0) TT(11,I)=TT(11,I)+WW(I)                                   RLVD   197
C               KEEP TOTAL FOR WALLS AND ROOF IN TT(12,I)                       RLVD   198
      IF( IEWTYP .NE. 1 )  TT(12,I) = TT(12,I) + WW(I)                          RLVD   199
C               KEEP OVERALL BUILDING TOTALS IN TT(14,I)                        RLVD   200
      TT(14,I)=TT(14,I)+WW(I)                                                   RLVD   201
 4700 CONTINUE                                                                  RLVD   202
      DO 4710 I=4,6                                                             RLVD   203
      TT(III,I)=TT(III,I)+WW(I)*WW(I-3)                                         RLVD   204
      IF(IEWTYP.EQ.0) TT(11,I)=TT(11,I)+WW(I)*WW(I-3)                           RLVD   205
      IF( IEWTYP .NE. 1 )  TT(12,I) = TT(12,I) + WW(I)*WW(I-3)                  RLVD   206
      TT(14,I)=TT(14,I)+WW(I)*WW(I-3)                                           RLVD   207
 4710 CONTINUE                                                                  RLVD   208
 5000 MX     = MX+MXLEN                                                         RLVD   209
C                                                                               RLVD   210
C               REPEAT CALCULATIONS FOR UNDERGROUND SURFACES                    RLVD   211
C                                                                               RLVD   212
  300 CONTINUE                                                                  RLVD   213
      MZ     = ISPB                                                             RLVD   214
      DO 4900 ISP=1,NSP                                                         RLVD   215
      NUG1   = <NSUG>                                                           RLVD   216
      IF(NUG1.EQ.0) GOTO 4900                                                   RLVD   217
      MU     = <MZUG>                                                           RLVD   218
      DO 4850 IG=1,NUG1                                                         RLVD   219
      MP     = <MUGPROPRL>                                                      LDS1    23
      WW(1)  = 0.                                                               RLVD   221
      WW(4)  = 0.                                                               RLVD   222
      WW(2) = <UGAREA>*<UGMULT>*<FLOOR-MULT>*<ZMULT>                            RLVD   223
      WW(3)  = WW(2)                                                            RLVD   224
      WW(5)  = <UFACTR>                                                         RLVD   225
      WW(6)  = WW(5)                                                            RLVD   226
      WRITE(IREPFL) I29,IFOUR,IONE,IFIVE,I25,(<IUGNAM>,II=1,8),                 BIGNM4 186
     1              WW(4),WW(1),WW(5),WW(2),WW(6),WW(3),                        BIGNM4 187
     2              IAZNME(1,15),IAZNME(2,15),IAZNME(3,15),                     BIGNM4 188
     3              (<IZNM>,II=1,8)                                             BIGNM4 189
C                                                                               RLVD   230
C               ACCUMULATE UNDERGROUN FLOOR TOTALS                              RLVD   231
C                                                                               RLVD   232
      DO 4840 I=1,3                                                             RLVD   233
      TT(13,I)=TT(13,I)+WW(I)                                                   RLVD   234
      TT(14,I)=TT(14,I)+WW(I)                                                   RLVD   235
 4840 CONTINUE                                                                  RLVD   236
      DO 4845 I=4,6                                                             RLVD   237
      TT(13,I)=TT(13,I)+WW(I)*WW(I-3)                                           RLVD   238
      TT(14,I)=TT(14,I)+WW(I)*WW(I-3)                                           RLVD   239
 4845 CONTINUE                                                                  RLVD   240
C                                                                               RLVD   241
 4850 MU     = MU+MULEN                                                         RLVD   242
C                                                                               RLVD   243
 4900 MZ     = MZ+MZLEN                                                         RLVD   244
C                                                                               RLVD   245
C              SPACE TO NEW PAGE AND PRINT SECOND HEADER                        RLVD   246
C                                                                               RLVD   247
      WRITE(IREPFL)ITWO,IFOUR,ITWO                                              RLVD   248
      WRITE(IREPFL)IFOUR,IFOUR,IFOUR,ITWO,IZERO                                 RLVD   249
C                                                                               RLVD   250
C              CALCULATE AND PRINT SUMMARY TOTALS                               RLVD   251
C                                                                               RLVD   252
      DO 6000 I=1,14                                                            RLVD   253
      IF(TT(I,3).LE.0) GOTO 6000                                                RLVD   254
      WW(4)  = 0.                                                               RLVD   255
      IF(TT(I,1).GT.0) WW(4)=TT(I,4)/TT(I,1)                                    RLVD   256
      WW(5)  = 0.                                                               RLVD   257
      IF (TT(I,2).GT.0) WW(5)=TT(I,5)/TT(I,2)                                   RLVD   258
      WW(6)  = 0.                                                               RLVD   259
      IF(TT(I,3).GT.0.) WW(6)=TT(I,6)/TT(I,3)                                   RLVD   260
      WRITE(IREPFL)I14,IFOUR,IONE,ITHREE,ITEN,(IAZNME(II,I),II=1,4)             RLVD   261
     1             ,WW(4),WW(5),WW(6),TT(I,1),TT(I,2),TT(I,3)                   RLVD   262
 6000 CONTINUE                                                                  RLVD   263
C                                                                               RLVD   264
C                  TERMNATE REPORT                                              RLVD   265
C                                                                               RLVD   266
      WRITE(IREPFL)ITWO,IFOUR,ISEVEN                                            RLVD   267
      RETURN                                                                    RLVD   268
      END                                                                       RLVD   269
      SUBROUTINE RLVE                                                           RLVE     2
C                                                                               RLVE     3
C              UNDERGROUND SURFACE VERIFICATION REPORT                          RLVE     4
C                                                                               RLVE     5
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                         /FILES/  3
     2              , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                    /FILES/  4
     3                IHRREP(3), IHRPAS(2)                                      /FILES/  5
      COMMON /INTS  / IZERO,IONE,ITWO,ITHREE,IFOUR,IFIVE,ISIX,                  /INTS/   2
     1                ISEVEN,IEIGHT,ININE,ITEN,                                 /INTS/   3
     2                I11,I12,I13,I14,I15,I16,I17,I18,I19,I20,                  /INTS/   4
     3                I21,I22,I23,I24,I25,I26,I27,I28,I29,I30,                  HVAC     4
     4                I31,I32,I33,I34,I35,I36,I37,I38,I39,I40,                  HVAC     5
     5                I41,I42,I43,I44,I45,I46,I47,I48,I49,I50,                  HVAC     6
     $                I51,I52,I53,I54,I55,I56,I57,I58,I59,I60,                  HVAC6    6
     $                I61,I62,I63,I64,I65,I66,I67,I68,I69,I70,                  HVAC6    7
     $                I71,I72,I73,I74,I75,I76,I77,I78,I79,I80,                  HVAC6    8
     $                I81,I82,I83,I84,I85,I86,I87,I88,I89,I90,                  HVAC6    9
     $                I91,I92,I93,I94,I95,I96,I97,I98,I99,I100                  HVAC6   10
      INTEGER         INTS(101)                                                 HVAC6   11
      EQUIVALENCE(IZERO,INTS(1))                                                /INTS/   7
      COMMON  /LENS/   MWFLEN, MRLEN, MSHLEN, MWNLEN, MDRLEN, MXLEN,            /LENS/   2
     1                 MULEN, MZLEN, MIWLEN, MFLLEN,                            HRr      5
     2                 LMTB, LLDSOU, MSTLEN, LSTFT, MWLLEN                      BLIND    1
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     BLIND    2
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        FLOOR1   3
      COMMON  /PTRBGN/ ISCB, IWFB, IWPB, ICONSB, IGTB, IWLB, IGEOB,             HRr      6
     1                 ISHADB, IWINB, IDRB, IEWB, IUGB, ISPB, IIWPB,            HRr      7
     2                 IIWB, IFLB, ISPCDB, IOTHB, ILHB, IZQCMB, ISSHDB,         HRr      8
     3                 IOHFIB, IZLSK, IZLSL, ISTFB                              HRr      9
      COMMON  /SIZE/   LENGTH,NVECT,NSCHED,NWF,NWPAR,NCONS,NGT,NWL,NGEO,        BLIND    5
     1                 NGSHAD, NWIN, NDOOR, NEW, NUG, NSP, NIWP, NIW,           /SIZE/   3
     2                 NFL, NDESDY, NBR, NOTH, NITH, NOPSRF,                    HRr     10
     3                 NSURF, NSSHD, NSHTOT                                     GEO1     1
      COMMON        // AA(75 000 000)                                           -048ar   1
      INTEGER          IA(75 000 000)                                           -048ar   2
      EQUIVALENCE  (IA(1), AA(1))                                               //       4
C                                                                               RLVE    13
C              WRITE OUT NUMBER OF UG SURFACES                                  RLVE    14
      WRITE (IREPFL) IFIVE, IFIVE, IONE, IONE, IONE, NUG                        RLVE    15
      IF (NUG .EQ. 0)  GO TO 200                                                RLVE    16
C              WRITE OUT HEADER                                                 RLVE    17
      WRITE (IREPFL) IFOUR, IFIVE, IFOUR, ITWO, IZERO                           RLVE    18
C              LOOP OVER UNDERGROUND WALLS, WRITING OUT DATA                    RLVE    19
C              TO REPFILE                                                       RLVE    20
      MU     = IUGB                                                             RLVE    21
      DO 100 IU=1,NUG                                                           RLVE    22
      MP     = <MUGPROPRL>                                                      LDS1    24
      WRITE (IREPFL) I23, IFIVE, IONE, ITHREE, I19,                             BIGNM4 190
     1 (<IUGNAM>,II=1,8), <UGMULT>, <UGAREA>, (<IPRPNM>,II=1,8),                BIGNM4 191
     2 <UFACTR>                                                                 RLVE    26
  100 MU     = MU + MULEN                                                       RLVE    27
C              TERMINATE REPORT                                                 RLVE    28
  200 WRITE (IREPFL) ITWO, IFIVE, ISEVEN                                        RLVE    29
      RETURN                                                                    RLVE    30
      END                                                                       RLVE    31
      SUBROUTINE RLVF                                                           RLVF     2
C                                                                               RLVF     3
C              INTERIOR WALL VERIFICATION REPORT                                RLVF     4
C                                                                               RLVF     5
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                         /FILES/  3
     2              , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                    /FILES/  4
     3                IHRREP(3), IHRPAS(2)                                      /FILES/  5
      COMMON /INTS  / IZERO,IONE,ITWO,ITHREE,IFOUR,IFIVE,ISIX,                  /INTS/   2
     1                ISEVEN,IEIGHT,ININE,ITEN,                                 /INTS/   3
     2                I11,I12,I13,I14,I15,I16,I17,I18,I19,I20,                  /INTS/   4
     3                I21,I22,I23,I24,I25,I26,I27,I28,I29,I30,                  HVAC     4
     4                I31,I32,I33,I34,I35,I36,I37,I38,I39,I40,                  HVAC     5
     5                I41,I42,I43,I44,I45,I46,I47,I48,I49,I50,                  HVAC     6
     $                I51,I52,I53,I54,I55,I56,I57,I58,I59,I60,                  HVAC6    6
     $                I61,I62,I63,I64,I65,I66,I67,I68,I69,I70,                  HVAC6    7
     $                I71,I72,I73,I74,I75,I76,I77,I78,I79,I80,                  HVAC6    8
     $                I81,I82,I83,I84,I85,I86,I87,I88,I89,I90,                  HVAC6    9
     $                I91,I92,I93,I94,I95,I96,I97,I98,I99,I100                  HVAC6   10
      INTEGER         INTS(101)                                                 HVAC6   11
      EQUIVALENCE(IZERO,INTS(1))                                                /INTS/   7
      COMMON  /LENS/   MWFLEN, MRLEN, MSHLEN, MWNLEN, MDRLEN, MXLEN,            /LENS/   2
     1                 MULEN, MZLEN, MIWLEN, MFLLEN,                            HRr      5
     2                 LMTB, LLDSOU, MSTLEN, LSTFT, MWLLEN                      BLIND    1
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     BLIND    2
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        FLOOR1   3
      COMMON  /PTRBGN/ ISCB, IWFB, IWPB, ICONSB, IGTB, IWLB, IGEOB,             HRr      6
     1                 ISHADB, IWINB, IDRB, IEWB, IUGB, ISPB, IIWPB,            HRr      7
     2                 IIWB, IFLB, ISPCDB, IOTHB, ILHB, IZQCMB, ISSHDB,         HRr      8
     3                 IOHFIB, IZLSK, IZLSL, ISTFB                              HRr      9
      COMMON  /SIZE/   LENGTH,NVECT,NSCHED,NWF,NWPAR,NCONS,NGT,NWL,NGEO,        BLIND    5
     1                 NGSHAD, NWIN, NDOOR, NEW, NUG, NSP, NIWP, NIW,           /SIZE/   3
     2                 NFL, NDESDY, NBR, NOTH, NITH, NOPSRF,                    HRr     10
     3                 NSURF, NSSHD, NSHTOT                                     GEO1     1
      COMMON        // AA(75 000 000)                                           -048ar   1
      INTEGER          IA(75 000 000)                                           -048ar   2
      EQUIVALENCE  (IA(1), AA(1))                                               //       4
C                                                                               RLVF    13
      DIMENSION NAME(8)                                                         BIGNM4 192
      DIMENSION IWLTYP(2,2), IIWTYP(4,4)                                        RLVF    15
      DATA IBLANK /4H    /                                                      RLVF    16
      DATA IWLTYP / 4HQUIC, 4HK   , 4HDELA, 4HYED  /                            RLVF    17
      DATA IIWTYP / 4HSTAN, 4HDARD, 4H    , 4H    ,                             RLVF    18
     1              4HAIR , 4H    , 4H    , 4H    ,                             RLVF    19
     2              4HADIA, 4HBATI, 4HC   , 4H    ,                             RLVF    20
     3              4HINTE, 4HRNAL, 4H    , 4H     /                            RLVF    21
C                                                                               RLVF    22
      DO 10 II=1,4                                                              RLVF    23
   10 NAME(II) = IBLANK                                                         RLVF    24
C                                                                               RLVF    25
C              WRITE OUT NUMBER OF INTERIOR WALLS                               RLVF    26
      WRITE (IREPFL) IFIVE, ISIX, IONE, IONE, IONE, NIW                         RLVF    27
      IF (NIW .EQ. 0)  GO TO 200                                                RLVF    28
C              WRITE OUT HEADER                                                 RLVF    29
      WRITE (IREPFL) IFOUR, ISIX, IFOUR, ITWO, IZERO                            RLVF    30
      MI = IIWB                                                                 BIGNM4 193
      DO IW=1,NIW                                                               BIGNM4 194
          MP = <MIWPROPRL>                                                      BIGNM4 195
          IWTYP = <IW-TYPE>                                                     BIGNM4 196
          IF (<NRESF>.EQ.0) THEN                                                BIGNM4 197
              ITYP = 1                                                          BIGNM4 198
          ELSE                                                                  BIGNM4 199
              ITYP = 2                                                          BIGNM4 200
          END IF                                                                BIGNM4 201
          WRITE(IREPFL) I28,ISIX,IONE,ITHREE,I24,(<IWNM>,II=1,8),               BIGNM4 202
     1        <IWAR>,(<IPRPNM>,II=1,8),(IWLTYP(II,ITYP),II=1,2),                BIGNM4 203
     2        (IIWTYP(II,IWTYP),II=1,4),<UFACTR>                                BIGNM4 204
          MI = MI + MIWLEN                                                      BIGNM4 205
      END DO                                                                    BIGNM4 206
      WRITE(IREPFL) ITHREE,ISIX,ITHREE,ITEN                                     BIGNM4 207
      WRITE(IREPFL) IFOUR,ISIX,IFOUR,IFOUR,IZERO                                BIGNM4 208
      MI = IIWB                                                                 BIGNM4 209
      DO IW=1,NIW                                                               BIGNM4 210
          CALL FILLN(IBLANK,NAME(1),8)                                          BIGNM4 211
          MZ = <MZNEXTTO>                                                       BIGNM4 212
          IF (MZ.GT.0) THEN                                                     BIGNM4 213
              DO II=1,8                                                         BIGNM4 214
                  NAME(II) = <IZNM>                                             BIGNM4 215
              END DO                                                            BIGNM4 216
          END IF                                                                BIGNM4 217
          MZ = <MZIN>                                                           BIGNM4 218
          WRITE(IREPFL) I28,ISIX,IONE,IFIVE,I24,(<IWNM>,II=1,8),                BIGNM4 219
     1        (<IZNM>,II=1,8),(NAME(II),II=1,8)                                 BIGNM4 220
          MI = MI + MIWLEN                                                      BIGNM4 221
      END DO                                                                    BIGNM4 222
C              TERMINATE REPORT                                                 RLVF    48
  200 WRITE (IREPFL) ITWO, ISIX, ISEVEN                                         RLVF    49
      RETURN                                                                    RLVF    50
      END                                                                       RLVF    51
      SUBROUTINE RLVG                                                           RLVG     2
C                                                                               RLVG     3
C              SCHEDULE VERIFICATION REPORT                                     RLVG     4
C                                                                               RLVG     5
      COMMON  /CONST/  DTOR, PIOVR2, PIOVR4, IBLNK, UNDEF, IUNDEF,              /CONST/  2
     1                 UNFILD, URAD, DEFIFR, DEFCFR, DEFINC, KWBTU              /CONST/  3
      REAL             KWBTU                                                    /CONST/  4
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                         /FILES/  3
     2              , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                    /FILES/  4
     3                IHRREP(3), IHRPAS(2)                                      /FILES/  5
      COMMON /INTS  / IZERO,IONE,ITWO,ITHREE,IFOUR,IFIVE,ISIX,                  /INTS/   2
     1                ISEVEN,IEIGHT,ININE,ITEN,                                 /INTS/   3
     2                I11,I12,I13,I14,I15,I16,I17,I18,I19,I20,                  /INTS/   4
     3                I21,I22,I23,I24,I25,I26,I27,I28,I29,I30,                  HVAC     4
     4                I31,I32,I33,I34,I35,I36,I37,I38,I39,I40,                  HVAC     5
     5                I41,I42,I43,I44,I45,I46,I47,I48,I49,I50,                  HVAC     6
     $                I51,I52,I53,I54,I55,I56,I57,I58,I59,I60,                  HVAC6    6
     $                I61,I62,I63,I64,I65,I66,I67,I68,I69,I70,                  HVAC6    7
     $                I71,I72,I73,I74,I75,I76,I77,I78,I79,I80,                  HVAC6    8
     $                I81,I82,I83,I84,I85,I86,I87,I88,I89,I90,                  HVAC6    9
     $                I91,I92,I93,I94,I95,I96,I97,I98,I99,I100                  HVAC6   10
      INTEGER         INTS(101)                                                 HVAC6   11
      EQUIVALENCE(IZERO,INTS(1))                                                /INTS/   7
      COMMON  /LENS/   MWFLEN, MRLEN, MSHLEN, MWNLEN, MDRLEN, MXLEN,            /LENS/   2
     1                 MULEN, MZLEN, MIWLEN, MFLLEN,                            HRr      5
     2                 LMTB, LLDSOU, MSTLEN, LSTFT, MWLLEN                      BLIND    1
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     BLIND    2
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        FLOOR1   3
      COMMON  /PTRBGN/ ISCB, IWFB, IWPB, ICONSB, IGTB, IWLB, IGEOB,             HRr      6
     1                 ISHADB, IWINB, IDRB, IEWB, IUGB, ISPB, IIWPB,            HRr      7
     2                 IIWB, IFLB, ISPCDB, IOTHB, ILHB, IZQCMB, ISSHDB,         HRr      8
     3                 IOHFIB, IZLSK, IZLSL, ISTFB                              HRr      9
      COMMON  /SIZE/   LENGTH,NVECT,NSCHED,NWF,NWPAR,NCONS,NGT,NWL,NGEO,        BLIND    5
     1                 NGSHAD, NWIN, NDOOR, NEW, NUG, NSP, NIWP, NIW,           /SIZE/   3
     2                 NFL, NDESDY, NBR, NOTH, NITH, NOPSRF,                    HRr     10
     3                 NSURF, NSSHD, NSHTOT                                     GEO1     1
      COMMON        // AA(75 000 000)                                           -048ar   1
      INTEGER          IA(75 000 000)                                           -048ar   2
      EQUIVALENCE  (IA(1), AA(1))                                               //       4
C                                                                               RLVG    14
      DIMENSION IDW(10),IDW1(10),ISLF(10),NDG(10),IVPG(10),IDOUT(10)            DDAY1  109
      DIMENSION ITYPNM(3,12)                                                    BIGNM4 223
C                                                                               RLVG    17
      DATA IDW /3HSUN, 3HMON, 3HTUE, 3HWED, 3HTHU, 3HFRI, 3HSAT,                RLVG    18
     1          3HHOL, 3HHDD, 3HCDD /                                           DDAY1  110
      DATA ITYPNM / 4HON/O,4HFF  ,4H    ,  4HFRAC,4HTION,4H    ,                BIGNM4 224
     1              4HMULT,4HIPLI,4HER  ,  4HTEMP,4HERAT,4HURE ,                BIGNM4 225
     2              4HRADI,4HATIO,4HN   ,  4HON/O,4HFF/T,4HEMP ,                BIGNM4 226
     3              4HON/O,4HFF/F,4HLAG ,  4HFRAC,4H/DES,4HIGN ,                BIGNM4 227
     4              4HEXP-,4HFRAC,4HTION,  4HFLAG,4H    ,4H    ,                BIGNM4 228
     5              4HRESE,4HT-TE,4HMP  ,  4HRESE,4HT-RA,4HTIO /                BIGNM4 229
C                                                                               RLVG    20
C              WRITE OUT NUMBER OF SCHEDULES                                    RLVG    21
      WRITE (IREPFL) IFIVE, ISEVEN, IONE, IONE, IONE, NSCHED                    RLVG    22
      IF (NSCHED .EQ. 0)  GO TO 600                                             RLVG    23
C              LOOP THROUGH THE SCHEDULES                                       RLVG    24
      NSC    = ISCB                                                             RLVG    25
      DO 400 ISCH=1,NSCHED                                                      RLVG    26
C              WRITE OUT THE NAME                                               RLVG    27
      WRITE (IREPFL) ITHREE, ISEVEN, ITHREE, IFOUR                              BIGNM4 230
      WRITE (IREPFL) I15, ISEVEN, IONE, ITWO, I11,                              BIGNM4 231
     1 (<SCHEDULE-NAME>,II=1,8),(ITYPNM(II,<SCH-TYPE>),II=1,3)                  BIGNM4 232
C              LOOP THROUGH THE WEEK SCHEDULES FOR THIS SCHEDULE                RLVG    31
      NSCB   = <NUM-OF-WEEKS>                                                   RLVG    32
      NWB    = <FIRST-WEEK>                                                     RLVG    33
      DO 300 J=1,NSCB                                                           RLVG    34
      DO 20 K=1,10                                                              DDAY1  111
      ISLF(K) = 0                                                               RLVG    36
      NDG(K) = 0                                                                RLVG    37
      IDW1(K) = 0                                                               RLVG    38
   20 IVPG(K) = 0                                                               RLVG    39
      NG     = 0                                                                RLVG    40
C              WRITE OUT END PERIOD OF THIS WEEK SCHEDULE                       RLVG    41
      WRITE (IREPFL) ITHREE, ISEVEN, ITHREE, ITWO                               RLVG    42
      WRITE (IREPFL) ISIX, ISEVEN, IONE, ITHREE, ITWO,                          RLVG    43
     1 <END-DAY>, <END-MONTH>                                                   RLVG    44
C              SORT DAY OF WEEK ACCORDING TO SCHED VECTOR POINTER               RLVG    45
      NN     = 0                                                                RLVG    46
      DO 70 I1=1,10                                                             DDAY1  112
      JJ     = I1                                                               RLVG    48
      IVP    = <WEEK-DAYS>                                                      RLVG    49
      IF (ISLF(I1) .EQ. 1)  GO TO 70                                            RLVG    50
      ISLF(I1) = 1                                                              RLVG    51
      NG     = NG + 1                                                           RLVG    52
      NDG(NG) = 1                                                               RLVG    53
      IVPG(NG) = IVP                                                            RLVG    54
      NN     = NN + 1                                                           RLVG    55
      IDW1(NN) = I1                                                             RLVG    56
      N2     = I1 + 1                                                           RLVG    57
      DO 50 I2=N2,10                                                            DDAY1  113
      JJ     = I2                                                               RLVG    59
      IVP1   = <WEEK-DAYS>                                                      RLVG    60
      IF (IVP1 .NE. IVP)  GO TO 50                                              RLVG    61
      ISLF(I2) = 1                                                              RLVG    62
      NN     = NN + 1                                                           RLVG    63
      IDW1(NN) = I2                                                             RLVG    64
      NDG(NG) = NDG(NG) + 1                                                     RLVG    65
   50 CONTINUE                                                                  RLVG    66
   70 CONTINUE                                                                  RLVG    67
C              WRITE OUT THE DAILY SCHEDULE INFORMATION                         RLVG    68
C              FOR THIS WEEK SCHEDULE                                           RLVG    69
      M1     = 0                                                                RLVG    70
      DO 200 K=1,NG                                                             RLVG    71
      NOUT   = NDG(K)                                                           RLVG    72
      DO 110 K1=1,10                                                            DDAY1  114
  110 IDOUT(K1) = IBLNK                                                         RLVG    74
      DO 120 K1=1,NOUT                                                          RLVG    75
      IBLAH  = IDW1(M1+K1)                                                      RLVG    76
      IDOUT(K1) = IDW(IBLAH)                                                    RLVG    77
  120 CONTINUE                                                                  RLVG    78
      M1     = M1 + NOUT                                                        RLVG    79
      MS     = IVPG(K)                                                          RLVG    80
      NWDS   = 36                                                               RLVG    81
      NVAL   = 32                                                               RLVG    82
      WRITE (IREPFL) ITHREE, ISEVEN, ITHREE, I11                                RLVG    83
      IF (<SCH-TYPE>.EQ.1 .OR. <SCH-TYPE>.EQ.7) THEN                            BIGNM4 233
          WRITE(IREPFL) NWDS,ISEVEN,IONE,IFIVE,NVAL,                            BIGNM4 234
     1        (IDOUT(II),II=1,8),(AA(MS+II),II=1,24)                            BIGNM4 235
      ELSE IF (<SCH-TYPE>.EQ.2 .OR. <SCH-TYPE>.EQ.3                             BIGNM4 236
     1    .OR. <SCH-TYPE>.EQ.8 .OR. <SCH-TYPE>.EQ.9) THEN                       BIGNM4 237
          WRITE(IREPFL) NWDS,ISEVEN,IONE,IFOUR,NVAL,                            BIGNM4 238
     1        (IDOUT(II),II=1,8),(AA(MS+II),II=1,24)                            BIGNM4 239
      ELSE IF (<SCH-TYPE>.EQ.4 .OR. <SCH-TYPE>.EQ.6) THEN                       BIGNM4 240
          WRITE(IREPFL) NWDS,ISEVEN,IONE,ISIX,NVAL,                             BIGNM4 241
     1        (IDOUT(II),II=1,8),(AA(MS+II),II=1,24)                            BIGNM4 242
      ELSE IF (<SCH-TYPE>.EQ.11) THEN                                           BIGNM4 243
          WRITE(IREPFL) I22,ISEVEN,IONE,ISEVEN,I18,                             BIGNM4 244
     1        (IDOUT(II),II=1,8),(AA(MS+II),II=1,10)                            BIGNM4 245
      ELSE IF (<SCH-TYPE>.EQ.12) THEN                                           BIGNM4 246
          WRITE(IREPFL) I22,ISEVEN,IONE,IEIGHT,I18,                             BIGNM4 247
     1        (IDOUT(II),II=1,8),(AA(MS+II),II=1,10)                            BIGNM4 248
      ELSE IF (<SCH-TYPE>.EQ.5) THEN                                            BIGNM4 249
          WRITE(IREPFL) NWDS,ISEVEN,IONE,ININE,NVAL,                            BIGNM4 250
     1        (IDOUT(II),II=1,8),(AA(MS+II),II=1,24)                            BIGNM4 251
      ELSE IF (<SCH-TYPE>.EQ.10) THEN                                           BIGNM4 252
          WRITE(IREPFL) NWDS,ISEVEN,IONE,ITEN,NVAL,                             BIGNM4 253
     1        (IDOUT(II),II=1,8),(AA(MS+II),II=1,24)                            BIGNM4 254
      END IF                                                                    BIGNM4 255
  200 CONTINUE                                                                  RLVG    86
  300 NWB    = NWB + 12                                                         DDAY1  115
  400 NSC    = NSC + 13                                                         BIGNM4 256
C              CLOSE REPORT                                                     RLVG    89
  600 WRITE (IREPFL) ITWO, ISEVEN, ISEVEN                                       RLVG    90
      RETURN                                                                    RLVG    91
      END                                                                       RLVG    92
      SUBROUTINE RLVH                                                           RLVH     2
C                                                                               RLVH     3
C              WINDOW VERIFICATION REPORT                                       RLVH     4
C                                                                               RLVH     5
      COMMON  /CONST/  DTOR, PIOVR2, PIOVR4, IBLNK, UNDEF, IUNDEF,              /CONST/  2
     1                 UNFILD, URAD, DEFIFR, DEFCFR, DEFINC, KWBTU              /CONST/  3
      REAL             KWBTU                                                    /CONST/  4
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                         /FILES/  3
     2              , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                    /FILES/  4
     3                IHRREP(3), IHRPAS(2)                                      /FILES/  5
      COMMON /INTS  / IZERO,IONE,ITWO,ITHREE,IFOUR,IFIVE,ISIX,                  /INTS/   2
     1                ISEVEN,IEIGHT,ININE,ITEN,                                 /INTS/   3
     2                I11,I12,I13,I14,I15,I16,I17,I18,I19,I20,                  /INTS/   4
     3                I21,I22,I23,I24,I25,I26,I27,I28,I29,I30,                  HVAC     4
     4                I31,I32,I33,I34,I35,I36,I37,I38,I39,I40,                  HVAC     5
     5                I41,I42,I43,I44,I45,I46,I47,I48,I49,I50,                  HVAC     6
     $                I51,I52,I53,I54,I55,I56,I57,I58,I59,I60,                  HVAC6    6
     $                I61,I62,I63,I64,I65,I66,I67,I68,I69,I70,                  HVAC6    7
     $                I71,I72,I73,I74,I75,I76,I77,I78,I79,I80,                  HVAC6    8
     $                I81,I82,I83,I84,I85,I86,I87,I88,I89,I90,                  HVAC6    9
     $                I91,I92,I93,I94,I95,I96,I97,I98,I99,I100                  HVAC6   10
      INTEGER         INTS(101)                                                 HVAC6   11
      EQUIVALENCE(IZERO,INTS(1))                                                /INTS/   7
      COMMON  /LENS/   MWFLEN, MRLEN, MSHLEN, MWNLEN, MDRLEN, MXLEN,            /LENS/   2
     1                 MULEN, MZLEN, MIWLEN, MFLLEN,                            HRr      5
     2                 LMTB, LLDSOU, MSTLEN, LSTFT, MWLLEN                      BLIND    1
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     BLIND    2
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        FLOOR1   3
      COMMON  /PTRBGN/ ISCB, IWFB, IWPB, ICONSB, IGTB, IWLB, IGEOB,             HRr      6
     1                 ISHADB, IWINB, IDRB, IEWB, IUGB, ISPB, IIWPB,            HRr      7
     2                 IIWB, IFLB, ISPCDB, IOTHB, ILHB, IZQCMB, ISSHDB,         HRr      8
     3                 IOHFIB, IZLSK, IZLSL, ISTFB                              HRr      9
      COMMON  /SIZE/   LENGTH,NVECT,NSCHED,NWF,NWPAR,NCONS,NGT,NWL,NGEO,        BLIND    5
     1                 NGSHAD, NWIN, NDOOR, NEW, NUG, NSP, NIWP, NIW,           /SIZE/   3
     2                 NFL, NDESDY, NBR, NOTH, NITH, NOPSRF,                    HRr     10
     3                 NSURF, NSSHD, NSHTOT                                     GEO1     1
      COMMON        // AA(75 000 000)                                           -048ar   1
      INTEGER          IA(75 000 000)                                           -048ar   2
      EQUIVALENCE  (IA(1), AA(1))                                               //       4
C                                                                               RLVH    14
      WRITE(IREPFL) IFIVE,IEIGHT,IONE,IONE,IONE,NWIN                            BIGNM4 257
      IF (NWIN .EQ. 0)  GO TO 300                                               RLVH    28
C              WRITE HEADER                                                     RLVH    29
      WRITE (IREPFL) IFOUR, IEIGHT, IFOUR, ITWO, IZERO                          RLVH    30
C              LOOP OVER WINDOWS AND PRINT OUT SIZE AND POS INFO                RLVH    31
C              outside film resistance at 7.5 mph                               RLVH    32
      ro = 1./3.3476                                                            RLVH    33
      MWI    = IWINB                                                            RLVH    34
      DO 100 IWN=1,NWIN                                                         RLVH    35
      AREA = <HWI>*<WWI>                                                        RLVH    36
      frarea=(<HWI>+2.*<FRAME-WIDTH>)*(<WWI>+2.*<FRAME-WIDTH>)                  RLVH    37
     .             - area                                                       RLVH    38
      fruval = 1./(1./(<FRAME-UVAL>+0.0001) + ro)                               RLVH    39
      carea = 2*(<HWI> + <WWI> + 4*<FRAME-WIDTH>) * <CURB-HEIGHT>               -044d5 959
      cuval = 1./(1./(<CURB-CONDUCT>+0.0001) + ro)                              -044d5 960
      WRITE(IREPFL) I22,IEIGHT,IONE,ITHREE,I18,                                 -044d5 961
     1              (<IWINM>,II=1,8),<GMULT>,AREA,<HWI>,                        -044d5 962
     2              <WWI>,<XW>,<YW>,frarea,carea,fruval,cuval                   -044d5 963
  100 MWI    = MWI + MWNLEN                                                     RLVH    43
C              WRITE SECOND HEADER                                              RLVH    44
      WRITE (IREPFL) ITHREE, IEIGHT, ITHREE, IEIGHT                             RLVH    45
      WRITE (IREPFL) IFOUR, IEIGHT, IFOUR, IFOUR, IZERO                         RLVH    46
C              LOOP OVER WINDOWS AND PRINT OUT REMAINING DATA                   RLVH    47
      MWI    = IWINB                                                            RLVH    48
      DO 200 IWN = 1,NWIN                                                       RLVH    49
      MR     = <MWIPRP>                                                         RLVH    50
      if(<IGTYP>.EQ.-1) then                                                    WLIB1   65
       shc = <GSHACO>                                                           RLVH    52
       npanes = 1                                                               BIGNM4 261
       uw = 1./(ro + 1./<GCON>)                                                 RLVH    54
       tvis = <VIS-TRANS>                                                       RLVH    55
       tsol = <CAM1> + <CAM2> + <CAM3> + <CAM4>                                 BIGNM4 262
      else                                                                      RLVH    56
       shc = <SHDCOF>                                                           RLVH    57
       npanes = <NLAYER>                                                        RLVH    58
       uw = 1./(ro + 5.67826/<UCENTER-BARE> + 0.68)                             RLVH    59
       tvis = <TVANG1>                                                          RLVH    60
       tsol = <TRANG1>                                                          BIGNM4 263
      endif                                                                     RLVH    61
      ROratio=1.0                                                               -044d5 964
      IF (<SURFACE-RO-RATIO>.GT.1.0) ROratio=<SURFACE-RO-RATIO>                 -044d5 965
      uw=uw*ROratio                                                             -044d5 966
      WRITE(IREPFL) I19,IEIGHT,IONE,IFIVE,I15,(<IWINM>,II=1,8),                 -044d5 967
     $              <WSETBK>,shc,npanes,uw,tvis,tsol,ROratio                    -044d5 968
  200 MWI    = MWI + MWNLEN                                                     RLVH    65
C              TERMINATE REPORT                                                 RLVH    66
  300 WRITE (IREPFL) ITWO, IEIGHT, ISEVEN                                       RLVH    67
      RETURN                                                                    RLVH    68
      END                                                                       RLVH    69
      SUBROUTINE RLVI                                                           RLVI     2
C                                                                               RLVI     3
C              CONSTRUCTION VERIFICATION REPORT                                 RLVI     4
C                                                                               RLVI     5
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                         /FILES/  3
     2              , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                    /FILES/  4
     3                IHRREP(3), IHRPAS(2)                                      /FILES/  5
      COMMON /INTS  / IZERO,IONE,ITWO,ITHREE,IFOUR,IFIVE,ISIX,                  /INTS/   2
     1                ISEVEN,IEIGHT,ININE,ITEN,                                 /INTS/   3
     2                I11,I12,I13,I14,I15,I16,I17,I18,I19,I20,                  /INTS/   4
     3                I21,I22,I23,I24,I25,I26,I27,I28,I29,I30,                  HVAC     4
     4                I31,I32,I33,I34,I35,I36,I37,I38,I39,I40,                  HVAC     5
     5                I41,I42,I43,I44,I45,I46,I47,I48,I49,I50,                  HVAC     6
     $                I51,I52,I53,I54,I55,I56,I57,I58,I59,I60,                  HVAC6    6
     $                I61,I62,I63,I64,I65,I66,I67,I68,I69,I70,                  HVAC6    7
     $                I71,I72,I73,I74,I75,I76,I77,I78,I79,I80,                  HVAC6    8
     $                I81,I82,I83,I84,I85,I86,I87,I88,I89,I90,                  HVAC6    9
     $                I91,I92,I93,I94,I95,I96,I97,I98,I99,I100                  HVAC6   10
      INTEGER         INTS(101)                                                 HVAC6   11
      EQUIVALENCE(IZERO,INTS(1))                                                /INTS/   7
      COMMON  /LENS/   MWFLEN, MRLEN, MSHLEN, MWNLEN, MDRLEN, MXLEN,            /LENS/   2
     1                 MULEN, MZLEN, MIWLEN, MFLLEN,                            HRr      5
     2                 LMTB, LLDSOU, MSTLEN, LSTFT, MWLLEN                      BLIND    1
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     BLIND    2
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        FLOOR1   3
      COMMON  /PTRBGN/ ISCB, IWFB, IWPB, ICONSB, IGTB, IWLB, IGEOB,             HRr      6
     1                 ISHADB, IWINB, IDRB, IEWB, IUGB, ISPB, IIWPB,            HRr      7
     2                 IIWB, IFLB, ISPCDB, IOTHB, ILHB, IZQCMB, ISSHDB,         HRr      8
     3                 IOHFIB, IZLSK, IZLSL, ISTFB                              HRr      9
      COMMON  /SIZE/   LENGTH,NVECT,NSCHED,NWF,NWPAR,NCONS,NGT,NWL,NGEO,        BLIND    5
     1                 NGSHAD, NWIN, NDOOR, NEW, NUG, NSP, NIWP, NIW,           /SIZE/   3
     2                 NFL, NDESDY, NBR, NOTH, NITH, NOPSRF,                    HRr     10
     3                 NSURF, NSSHD, NSHTOT                                     GEO1     1
      COMMON        // AA(75 000 000)                                           -048ar   1
      INTEGER          IA(75 000 000)                                           -048ar   2
      EQUIVALENCE  (IA(1), AA(1))                                               //       4
C                                                                               RLVI    13
      DIMENSION IWLTYP(2,2)                                                     RLVI    14
C                                                                               RLVI    15
      DATA IWLTYP /4HQUIC, 4HK   , 4HDELA, 4HYED /                              RLVI    16
C                                                                               RLVI    17
C              COUNT NUMBER OF DELAYED AND QUICK CONSTRUCTIONS                  RLVI    18
      ND     = 0                                                                RLVI    19
      NQ     = 0                                                                RLVI    20
      IF (NCONS .EQ. 0)  GO TO 60                                               RLVI    21
      MP     = ICONSB                                                           RLVI    22
      DO 10 ICNS=1,NCONS                                                        RLVI    23
      NRESF  = <NRESF>                                                          RLVI    24
      IF (NRESF .GT. 0)  ND = ND + 1                                            RLVI    25
      MP     = MP + <MPLEN>                                                     RLVI    26
   10 CONTINUE                                                                  RLVI    27
C              WRITE OUT NUMBERS                                                RLVI    28
      NQ     = NCONS - ND                                                       RLVI    29
   60 WRITE (IREPFL) ISEVEN, ININE, IONE, IONE, ITHREE,                         RLVI    30
     1 NCONS, ND, NQ                                                            RLVI    31
      IF (NCONS .EQ. 0)  GO TO 200                                              RLVI    32
C              WRITE HEADER                                                     RLVI    33
      WRITE (IREPFL) IFOUR, ININE, IFOUR, ITWO, IZERO                           RLVI    34
C              LOOP OVER CONSTRUCTIONS AND PRINT OUT DATA                       RLVI    35
      MP     = ICONSB                                                           RLVI    36
      DO 100 ICNS=1,NCONS                                                       RLVI    37
      ITYP   = 1                                                                RLVI    38
      NRESF  = <NRESF>                                                          RLVI    39
      IF (NRESF .GT. 0)  ITYP = 2                                               RLVI    40
      WRITE (IREPFL) I18, ININE, IONE, ITHREE, I14,                             -042L4  89
     1 (<IPRPNM>,II=1,8), <UFACTR>, <SURABSO>, <ISURRO>,                        -042L4  90
     2 (IWLTYP(II,ITYP),II=1,2), NRESF                                          -042L4  91
      MP     = MP + <MPLEN>                                                     RLVI    44
  100 CONTINUE                                                                  RLVI    45
C              END REPORT                                                       RLVI    46
  200 WRITE (IREPFL) ITWO, ININE, ISEVEN                                        RLVI    47
      RETURN                                                                    RLVI    48
      END                                                                       RLVI    49
      SUBROUTINE RLVJ                                                           RLVJ     2
C                                                                               RLVJ     3
C              GLOBAL SHADE VERIFICATION REPORT                                 RLVJ     4
C                                                                               RLVJ     5
      COMMON  /CONST/  DTOR, PIOVR2, PIOVR4, IBLNK, UNDEF, IUNDEF,              /CONST/  2
     1                 UNFILD, URAD, DEFIFR, DEFCFR, DEFINC, KWBTU              /CONST/  3
      REAL             KWBTU                                                    /CONST/  4
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                         /FILES/  3
     2              , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                    /FILES/  4
     3                IHRREP(3), IHRPAS(2)                                      /FILES/  5
      COMMON /INTS  / IZERO,IONE,ITWO,ITHREE,IFOUR,IFIVE,ISIX,                  /INTS/   2
     1                ISEVEN,IEIGHT,ININE,ITEN,                                 /INTS/   3
     2                I11,I12,I13,I14,I15,I16,I17,I18,I19,I20,                  /INTS/   4
     3                I21,I22,I23,I24,I25,I26,I27,I28,I29,I30,                  HVAC     4
     4                I31,I32,I33,I34,I35,I36,I37,I38,I39,I40,                  HVAC     5
     5                I41,I42,I43,I44,I45,I46,I47,I48,I49,I50,                  HVAC     6
     $                I51,I52,I53,I54,I55,I56,I57,I58,I59,I60,                  HVAC6    6
     $                I61,I62,I63,I64,I65,I66,I67,I68,I69,I70,                  HVAC6    7
     $                I71,I72,I73,I74,I75,I76,I77,I78,I79,I80,                  HVAC6    8
     $                I81,I82,I83,I84,I85,I86,I87,I88,I89,I90,                  HVAC6    9
     $                I91,I92,I93,I94,I95,I96,I97,I98,I99,I100                  HVAC6   10
      INTEGER         INTS(101)                                                 HVAC6   11
      EQUIVALENCE(IZERO,INTS(1))                                                /INTS/   7
      COMMON  /LENS/   MWFLEN, MRLEN, MSHLEN, MWNLEN, MDRLEN, MXLEN,            /LENS/   2
     1                 MULEN, MZLEN, MIWLEN, MFLLEN,                            HRr      5
     2                 LMTB, LLDSOU, MSTLEN, LSTFT, MWLLEN                      BLIND    1
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     BLIND    2
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        FLOOR1   3
      COMMON  /PTRBGN/ ISCB, IWFB, IWPB, ICONSB, IGTB, IWLB, IGEOB,             HRr      6
     1                 ISHADB, IWINB, IDRB, IEWB, IUGB, ISPB, IIWPB,            HRr      7
     2                 IIWB, IFLB, ISPCDB, IOTHB, ILHB, IZQCMB, ISSHDB,         HRr      8
     3                 IOHFIB, IZLSK, IZLSL, ISTFB                              HRr      9
      COMMON  /SIZE/   LENGTH,NVECT,NSCHED,NWF,NWPAR,NCONS,NGT,NWL,NGEO,        BLIND    5
     1                 NGSHAD, NWIN, NDOOR, NEW, NUG, NSP, NIWP, NIW,           /SIZE/   3
     2                 NFL, NDESDY, NBR, NOTH, NITH, NOPSRF,                    HRr     10
     3                 NSURF, NSSHD, NSHTOT                                     GEO1     1
      COMMON        // AA(75 000 000)                                           -048ar   1
      INTEGER          IA(75 000 000)                                           -048ar   2
      EQUIVALENCE  (IA(1), AA(1))                                               //       4
C                                                                               RLVJ    14
C              COUNT NUMBER OF RECTANGULAR AND OTHER SHADES                     RLVJ    15
      NRECT  = 0                                                                RLVJ    16
      NOTHER = 0                                                                RLVJ    17
      IF (NGSHAD .EQ. 0)  GO TO 60                                              RLVJ    18
      MH     = ISHADB                                                           RLVJ    19
      DO 10 ISH=1,NGSHAD                                                        RLVJ    20
      MG     = <MSGEOM>                                                         RLVJ    21
      IF (<KOSE> .EQ. 2) NRECT = NRECT + 1                                      RLVJ    22
   10 MH     = MH + MSHLEN                                                      RLVJ    23
      NOTHER = NGSHAD - NRECT                                                   RLVJ    24
C              WRITE OUT NUMBERS                                                RLVJ    25
   60 WRITE (IREPFL) ISEVEN, ITEN, IONE, IONE, ITHREE,                          RLVJ    26
     1 NGSHAD, NRECT, NOTHER                                                    RLVJ    27
      IF (NGSHAD .EQ. 0)  GO TO 200                                             RLVJ    28
C              WRITE OUT HEADER                                                 RLVJ    29
      WRITE (IREPFL) IFOUR, ITEN, IFOUR, ITWO, IZERO                            RLVJ    30
C              LOOP OVER SHADES AND PRINT INFORMATION                           RLVJ    31
      MH     = ISHADB                                                           RLVJ    32
      DO 100 ISH=1,NGSHAD                                                       RLVJ    33
      MG     = <MSGEOM>                                                         RLVJ    34
      IF (<KOSE> .NE. 2)  GO TO 100                                             RLVJ    35
      X      = <X>                                                              RLVJ    36
      Y      = <Y>                                                              RLVJ    37
      Z      = <Z>                                                              RLVJ    38
      MG     = MG + 3                                                           RLVJ    39
      H      = <X>                                                              RLVJ    40
      W      = <Y>                                                              RLVJ    41
      AZ     = <Z>                                                              RLVJ    42
      MG     = MG + 3                                                           RLVJ    43
      TILT   = <X>                                                              RLVJ    44
      WRITE (IREPFL) I16, ITEN, IONE, ITHREE, I12,                              RLVJ    45
     1 (IBLNK,II=1,4), <TRANSM>, H, W, AZ, TILT, X, Y, Z                        RLVJ    46
  100 MH     = MH + MSHLEN                                                      RLVJ    47
C              TERMINATE REPORT                                                 RLVJ    48
  200 WRITE (IREPFL) ITWO, ITEN, ISEVEN                                         RLVJ    49
      RETURN                                                                    RLVJ    50
      END                                                                       RLVJ    51
      SUBROUTINE  RLVN                                                          RLVN     2
C                                                                               RLVN     3
C--- WRITE OUT GEOMETRY DATA                                                    RLVN     4
C                                                                               RLVN     5
      COMMON /CTRL  / VERS(2),IRPFLG(4),IOVRLL(7),IWRTFL,IPROG,                 /CTRL/   2
     1       IFATAL,NAMPRG(3,7),MTRICR                                          /CTRL/   3
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                         /FILES/  3
     2              , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                    /FILES/  4
     3                IHRREP(3), IHRPAS(2)                                      /FILES/  5
      COMMON  /LENS/   MWFLEN, MRLEN, MSHLEN, MWNLEN, MDRLEN, MXLEN,            /LENS/   2
     1                 MULEN, MZLEN, MIWLEN, MFLLEN,                            HRr      5
     2                 LMTB, LLDSOU, MSTLEN, LSTFT, MWLLEN                      BLIND    1
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     BLIND    2
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        FLOOR1   3
      COMMON  /PTRBGN/ ISCB, IWFB, IWPB, ICONSB, IGTB, IWLB, IGEOB,             HRr      6
     1                 ISHADB, IWINB, IDRB, IEWB, IUGB, ISPB, IIWPB,            HRr      7
     2                 IIWB, IFLB, ISPCDB, IOTHB, ILHB, IZQCMB, ISSHDB,         HRr      8
     3                 IOHFIB, IZLSK, IZLSL, ISTFB                              HRr      9
      COMMON  /SIZE/   LENGTH,NVECT,NSCHED,NWF,NWPAR,NCONS,NGT,NWL,NGEO,        BLIND    5
     1                 NGSHAD, NWIN, NDOOR, NEW, NUG, NSP, NIWP, NIW,           /SIZE/   3
     2                 NFL, NDESDY, NBR, NOTH, NITH, NOPSRF,                    HRr     10
     3                 NSURF, NSSHD, NSHTOT                                     GEO1     1
      COMMON /TIME  / IDOY, IDOW, IDSTF, ISCHR, ISCDAY, iDSdates(6),            -044e5r  1
     1                IMO, IDAY, IYR, IHR, CLOCK(10), IDSFLG,                   HOLID1   4
     2                MONDSC(12), MONLEN(12), MONSDA(12), IEODMR                /TIME/   4
      COMMON /TITLE / TITLE(10,5)                                               /TITLE/  2
      COMMON        // AA(75 000 000)                                           -048ar   1
      INTEGER          IA(75 000 000)                                           -048ar   2
      EQUIVALENCE  (IA(1), AA(1))                                               //       4
C                                                                               RLVN    15
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
      WRITE(IOUTPT,1001,ERR=99001) ((TITLE(I,J),I=1,10),J=1,2),                 RLVN    16
     1                             (VERS(I),I=1,2),                             RLVN    17
     2            (CLOCK(I),I=1,8),((TITLE(I,J),I=1,10),J=3,5)                  RLVN    18
99001 CONTINUE                                                                  RLVN    19
 1001 FORMAT(1H1,20A4,' DOE-',2A4,2X,7A4,3HRUN,I3 / 1X,30A4)                    -041m    5
      WRITE ( IOUTPT, 1004 ) (IWDID(I),I=1,5)                                   -042L1r 40
 1004 FORMAT(45H REPORT- LV-N Building Coordinate Geometry   ,                  -042L1r 41
     $        44X,18H    WEATHER FILE- ,5A4 / 1X, 129(1H-) /                    -042L1r 42
     2      ' SPACE................... (SPACE ORIGIN)',/,                       RLVN    24
     3      '     WALL................ (VERTEX1) (VERTEX2) (...)',/,            RLVN    25
     4      '         WINDOW.......... (VERTEX1) (VERTEX2) (...)',/,            RLVN    26
     5      1X, 129(1H-),/ )                                                    RLVN    27
      II = 1                                                                    RLVN    28
      MZ = ISPB                                                                 RLVN    29
      IF ( NSP .EQ. 0 )     GOTO  50900                                         RLVN    30
          DO  40990  IZ = 1 , NSP                                               RLVN    31
              NEXTS = <NEXTS>                                                   RLVN    32
              MX    = <MZEXT>                                                   RLVN    33
               CALL  RLVN1( 0, <IZNM>, 1, <ZX> )                                RLVN    34
C--- EXTERIOR WALLS                                                             RLVN    35
              IF ( NEXTS .EQ. 0 )     GOTO  30995                               RLVN    36
                  DO  30990  IEXT = 1 , NEXTS                                   RLVN    37
                      MG = <MXGEOM>                                             RLVN    38
                       CALL  RLVN1( 1, <IXSNM>, <KOSE>, <X> )                   RLVN    39
                      NWN = <NWIN>                                              RLVN    40
                      MWI = <MXWIN>                                             RLVN    41
                      IF ( NWN .EQ. 0 )     GOTO  30990                         RLVN    42
                          DO  20010  IWN = 1 , NWN                              RLVN    43
                              MG = <MWIGEOM>                                    RLVN    44
                               CALL  RLVN1( 2, <IWINM>, <KOSE>, <X> )           RLVN    45
                              MWI = MWI + MWNLEN                                RLVN    46
20010                     CONTINUE                                              RLVN    47
30990             MX = MX + MXLEN                                               RLVN    48
30995         CONTINUE                                                          RLVN    49
C--- INTERIOR WALLS                                                             RLVN    50
              NIWS = <NINTS>                                                    -072     2
              IF (NIWS.EQ.0) GOTO 6000                                          -072     3
                  DO 6010 IW = 1, NIWS                                          -072     4
                  MI = IA(<MZINT>+IW-1)                                         RLVN    54
                  MG = <MIWGEOM>                                                RLVN    55
                   CALL RLVN1(1,<IWNM>,<KOSE>,<X>)                              RLVN    56
                  NWN = <NIWIN>                                                 RLVN    57
                  IF (NWN.EQ.0) GO TO 6010                                      RLVN    58
                    MWI = <MIWIN>                                               RLVN    59
                    DO 6020 IWN = 1,NWN                                         RLVN    60
                    MG = <MWIGEOM>                                              RLVN    61
                     CALL RLVN1(2,<IWINM>,<KOSE>,<X>)                           RLVN    62
 6020               MWI = MWI + MWNLEN                                          RLVN    63
 6010             CONTINUE                                                      RLVN    64
 6000         CONTINUE                                                          RLVN    65
C--- UNDERGROUND WALLS                                                          RLVN    66
C--- SKIP FOR NOW; GEOMETRY IN BLDG COORD SYS NOT PRESENT;                      RLVN    67
C--- ONLY AREA IS USED, WHICH IS CALCULATED BY POLYICK IN BDL                   RLVN    68
C              NUW = <NSUG>                                                     RLVN    69
C              IF (NUW.EQ.0) GOTO 7000                                          RLVN    70
C                  MU = <MZUG>                                                  RLVN    71
C                  DO 7010 IUW = 1, NUW                                         RLVN    72
C                  MG = <MUGEOM>                                                RLVN    73
C                   CALL RLVN1(1,<IUGNAM>,<KOSE>,<X>)                           RLVN    74
C 7010             MU = MU + MULEN                                              RLVN    75
C 7000         CONTINUE                                                         RLVN    76
40900         MZ = MZ + MZLEN                                                   RLVN    77
40990     CONTINUE                                                              RLVN    78
50900 CONTINUE                                                                  RLVN    79
      RETURN                                                                    RLVN    80
      END                                                                       RLVN    81
      SUBROUTINE  RLVN1 ( INDENT, NAME4, NV, XYZ )                              RLVN    82
C                                                                               RLVN    83
C--- PRINT GEOMETRY ENTRIES                                                     RLVN    84
C                                                                               RLVN    85
      INTEGER  INDENT, NAME4(4), NV                                             RLVN    86
      REAL     XYZ(3,NV)                                                        RLVN    87
C                                                                               RLVN    88
      COMMON /CTRL  / VERS(2),IRPFLG(4),IOVRLL(7),IWRTFL,IPROG,                 /CTRL/   2
     1       IFATAL,NAMPRG(3,7),MTRICR                                          /CTRL/   3
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                         /FILES/  3
     2              , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                    /FILES/  4
     3                IHRREP(3), IHRPAS(2)                                      /FILES/  5
      COMMON/UNITT/VKONV(300),DUMLOG(4),JUNITT(4,300,2)                         UNITS1   1
      DIMENSION IUNITT(4,300)                                                   UNITS1   2
      EQUIVALENCE (IUNITT,JUNITT)                                               /UNITT/  4
C                                                                               RLVN    92
      REAL     XXX(3,4)                                                         RLVN    93
      INTEGER  KCLPAR, KCRPAR, KCSP, NAME6(6)                                   RLVN    94
        DATA   KCLPAR, KCRPAR, KCSP / 1H( , 1H), 4H     /                       RLVN    95
C                                                                               RLVN    96
       CALL  RLVN2( INDENT, NAME4, NAME6 )                                      RLVN    97
      DO  600  I1 = 1 , NV , 4                                                  RLVN    98
          I2 = MIN( I1+3, NV )                                                  RLVN    99
          K2 = 0                                                                RLVN   100
          DO  220  I = I1 , I2                                                  RLVN   101
              K2 = K2 + 1                                                       RLVN   102
              DO  210  L = 1 , 3                                                RLVN   103
                  XXX(L,K2) = XYZ(L,I)                                          RLVN   104
                  IF ( MTRICR .NE. 0 ) XXX(L,K2) = XXX(L,K2) * VKONV(15)        RLVN   105
210           CONTINUE                                                          RLVN   106
220       CONTINUE                                                              RLVN   107
          WRITE ( IOUTPT, 3 )  NAME6,                                           RLVN   108
     1          ( KCLPAR, ( XXX(J,K),  J=1,3 ), KCRPAR,  K=1,K2 )               RLVN   109
3         FORMAT( 1X,6A4,1X, A1,F7.1,2F8.1,A1, 1X, A1,F7.1,2F8.1,A1, 1X,        RLVN   110
     1                       A1,F7.1,2F8.1,A1, 1X, A1,F7.1,2F8.1,A1 )           RLVN   111
          IF ( I1 .NE. 1 )    GOTO  600                                         RLVN   112
              DO  300  III = 1 , 6                                              RLVN   113
                  NAME6(III) = KCSP                                             RLVN   114
300           CONTINUE                                                          RLVN   115
600   CONTINUE                                                                  RLVN   116
      RETURN                                                                    RLVN   117
      END                                                                       RLVN   118
      SUBROUTINE  RLVN2 ( INDENT, NAME4, NAME6 )                                RLVN   119
C                                                                               RLVN   120
C--- COPY NAME4(1-4) TO NAME6(1-6) , CONVERT TRAILING BLANKS TO ....            RLVN   121
C                                                                               RLVN   122
      INTEGER  INDENT, NAME4(4), NAME6(6)                                       RLVN   123
      INTEGER  KCSP, KCDOTS                                                     RLVN   124
        DATA   KCSP /4H    /, KCDOTS /4H..../                                   RLVN   125
C                                                                               RLVN   126
      NAME6(1) = KCSP                                                           RLVN   127
      NAME6(2) = KCSP                                                           RLVN   128
      NAME6(5) = KCSP                                                           RLVN   129
      NAME6(6) = KCSP                                                           RLVN   130
      DO  140  I = 1 , 4                                                        RLVN   131
          NAME6(I+INDENT) = NAME4(I)                                            RLVN   132
140   CONTINUE                                                                  RLVN   133
      DO  200  J = 1 , 6                                                        RLVN   134
          I = 7 - J                                                             RLVN   135
          IF ( NAME6(I) .NE. KCSP )     GOTO  300                               RLVN   136
               NAME6(I) = KCDOTS                                                RLVN   137
200   CONTINUE                                                                  RLVN   138
300   CONTINUE                                                                  RLVN   139
      RETURN                                                                    RLVN   140
      END                                                                       RLVN   141
      SUBROUTINE  SHADOW                                                        SHADOW   2
C                                                                               SHADOW   3
C              CALCULATE SHADOW RATIOS FOR EXTERIOR SURFACE                     SHADOW   4
C              AND ITS ATTACHMENTS.  THIS ROUTINE IS                            SHADOW   5
C              CALLED ONCE EACH HOUR FOR ONE DAY PER MONTH.                     SHADOW   6
C                                                                               SHADOW   7
      COMMON  /LENS/   MWFLEN, MRLEN, MSHLEN, MWNLEN, MDRLEN, MXLEN,            /LENS/   2
     1                 MULEN, MZLEN, MIWLEN, MFLLEN,                            HRr      5
     2                 LMTB, LLDSOU, MSTLEN, LSTFT, MWLLEN                      BLIND    1
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     BLIND    2
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        FLOOR1   3
      COMMON  /PTRBGN/ ISCB, IWFB, IWPB, ICONSB, IGTB, IWLB, IGEOB,             HRr      6
     1                 ISHADB, IWINB, IDRB, IEWB, IUGB, ISPB, IIWPB,            HRr      7
     2                 IIWB, IFLB, ISPCDB, IOTHB, ILHB, IZQCMB, ISSHDB,         HRr      8
     3                 IOHFIB, IZLSK, IZLSL, ISTFB                              HRr      9
      COMMON  /SHADWF/ ISDINF, LSHSTR, ISHSTB, KMAX                             /SHADWF/ 2
      COMMON  /SIZE/   LENGTH,NVECT,NSCHED,NWF,NWPAR,NCONS,NGT,NWL,NGEO,        BLIND    5
     1                 NGSHAD, NWIN, NDOOR, NEW, NUG, NSP, NIWP, NIW,           /SIZE/   3
     2                 NFL, NDESDY, NBR, NOTH, NITH, NOPSRF,                    HRr     10
     3                 NSURF, NSSHD, NSHTOT                                     GEO1     1
      COMMON  /SUND/   ISUNUP, GUNDOG, HORANG, TDECLN, EQTIME, SOLCON,          /SUND/   2
     1                 ATMEXT, SKYDFF, RAYCOS(3), RDN,                          /SUND/   3
     2                 BSUN, DECLN, CD, SD, FSUNUP                              /SUND/   4
      COMMON /TIME  / IDOY, IDOW, IDSTF, ISCHR, ISCDAY, iDSdates(6),            -044e5r  1
     1                IMO, IDAY, IYR, IHR, CLOCK(10), IDSFLG,                   HOLID1   4
     2                MONDSC(12), MONLEN(12), MONSDA(12), IEODMR                /TIME/   4
      COMMON        // AA(75 000 000)                                           -048ar   1
      INTEGER          IA(75 000 000)                                           -048ar   2
      EQUIVALENCE  (IA(1), AA(1))                                               //       4
C                                                                               SHADOW  16
      IF (NEW .EQ. 0)  RETURN                                                   SHADOW  17
      MX     = IEWB                                                             SHADOW  18
      J      = IHR                                                              SHADOW  19
      JJ     = IHR                                                              SHADOW  20
C              LOOP ON EXTERNAL WALLS .                                         SHADOW  21
      DO  9000  IEXT = 1 , NEW                                                  SHADOW  22
C              IF SUN IS DOWN, GO SET ALL SHADOW RATIOS TO 0                    SHADOW  23
      IF( ISUNUP .EQ. 0 )  GO TO 1000                                           SHADOW  24
      MG     = <MXGEOM>                                                         SHADOW  25
      MGX = MG                                                                  SHADOW  26
      IF ((MG .NE. 0) .AND. (<XGSARE> .GT. 0.))  GO TO 300                      SHADOW  27
C              IF NO GEOMETRY, SET UNSHADED AREA TO A                           SHADOW  28
C              LARGE NUMBER.  THIS WILL CAUSE SHADOW RATIOS                     SHADOW  29
C              TO COME OUT ZERO.                                                SHADOW  30
      XUNSHA = 1.7E38                                                           SHADOW  31
      GO TO 400                                                                 SHADOW  32
  300 XUNSHA = <XGSARE>                                                         SHADOW  33
      MH     = <MXSHAD>                                                         SHADOW  34
C              CHECK FOR GLOBAL OR WALL SHADES.  IF NONE, SKIP                  SHADOW  35
C              TO ATTACHMENT LOOP.                                              SHADOW  36
      IF( ( (MH+NGSHAD) .EQ. 0 ) .OR. (<KOSE> .LT. 3 )                          GEO1    39
     1       )  GO TO 400                                                       SHADOW  38
C              ENTER THE WALL IN THE SHADOW ARRAYS                              SHADOW  39
      NXDIV  = <NXSXDIV>                                                        SHADOW  40
      CALL  SHDWIN (<KOSE>,<X>,NXDIV,AA(ISHSTB))                                SHADOW  41
C              IF WALL FACING AWAY FROM SUN, GO SET SHADOW                      SHADOW  42
C              RATIOS TO ZERO.                                                  SHADOW  43
      IF( ISDINF .EQ. 0 )  GO TO 1000                                           SHADOW  44
C               FINS AND OVERHANGS ON THIS WALL                                 GEO1    40
      IF(MH .GT. 0) CALL SHDWS(<NXSHAD>,MSHLEN,NXDIV,AA(ISHSTB))                GEO2     1
C               GLOBAL SHADES (BUILDING-SHADES, FIXED-SHADES                    GEO1    41
C               AND SELF-SHADES)                                                GEO1    42
      MH     = ISHADB                                                           SHADOW  48
      IF( NGSHAD .GT. 0 )  CALL  SHDWS(NGSHAD,MSHLEN,NXDIV,AA(ISHSTB))          SHADOW  49
C              CALCULATE THE UNSHADED AREA                                      SHADOW  52
      CALL  SHDWAR (XUNSHA,NXDIV,AA(ISHSTB))                                    SHADOW  53
C              LOOP ON WINDOWS                                                  SHADOW  54
  400 SUMATT = 0.                                                               SHADOW  55
      NWN    = <NWIN>                                                           SHADOW  56
      IF (NWN .EQ. 0)  GO TO 610                                                SHADOW  57
      MWI    = <MXWIN>                                                          SHADOW  58
      DO 600 IWN = 1,NWN                                                        SHADOW  59
      MG     = <MWIGEOM>                                                        SHADOW  60
      IF ((MG .NE. 0) .AND. (<WIAREA> .GT. 0.))  GO TO 500                      SHADOW  61
C              ZERO THE SHADOW RATIOS IF THE WINDOW HAS                         SHADOW  62
C              NO GEOMETRY                                                      SHADOW  63
  450 <WGOLGE> = 0.                                                             SHADOW  64
      SUMATT = SUMATT  +  <WIAREA> * <GMULT>                                    SHADOW  65
      GO TO  600                                                                SHADOW  66
C              THERE IS A GEOMETRY.  INITIALIZE UNSHADED AREA                   SHADOW  67
  500 AUNSHA = <WIAREA>                                                         SHADOW  68
      AUNSH1 = AUNSHA                                                           SHADOW  69
C               PTR TO FINS AND OVERHANGS                                       GEO1    43
      MH     = <MXSHAD>                                                         SHADOW  70
C               PTR TO WINDOW SETBACK SHADES                                    GEO1    44
      MHA    = <MWISHADE>                                                       SHADOW  71
C               SKIP SHADING CALCULATION IF NO FINS/OVERHANGS,                  GEO1    45
C               SETBACK SHADES OR GLOBAL SHADES                                 GEO1    46
      IF( ( (MH+MHA+NGSHAD) .EQ. 0 ) .OR. (<KOSE> .LT. 3 )                      GEO1    47
     1             )  GO TO 450                                                 SHADOW  75
C              ENTER WINDOW INTO SHADOW ARRAYS                                  SHADOW  76
      NXDIV  = <NWIXDIV>                                                        SHADOW  77
      CALL  SHDWIN (<KOSE>,<X>,NXDIV,AA(ISHSTB))                                SHADOW  78
C              IF WINDOW POINTS AWAY FROM SUN, SKIP SHADOW CALC                 SHADOW  79
      IF( ISDINF .EQ. 0 )  GO TO 450                                            SHADOW  80
C               FINS AND OVERHANGS ON PARENT WALL                               GEO1    48
      IF(MH .GT. 0) CALL SHDWS(<NXSHAD>,MSHLEN,NXDIV,AA(ISHSTB))                GEO2     2
C               GLOBAL SHADES (BUILDING-SHADES, FIXED-SHADES                    GEO1    49
C               AND SELF-SHADES)                                                GEO1    50
      MH     = ISHADB                                                           SHADOW  84
      IF( NGSHAD .GT. 0 )  CALL  SHDWS(NGSHAD,MSHLEN,NXDIV,AA(ISHSTB))          SHADOW  85
C              GET UNSHADED AREA DUE TO WALL AND GLOBAL SHADES                  SHADOW  88
      CALL  SHDWAR (AUNSH1,NXDIV,AA(ISHSTB))                                    SHADOW  89
C               WINDOW SETBACK SHADES                                           GEO1    51
      MH     = MHA                                                              SHADOW  91
      IF(MH .GT. 0) CALL SHDWS(<NWISHADE>,MSHLEN,NXDIV,AA(ISHSTB))              GEO2     3
C              GET TOTAL UNSHADED AREA                                          SHADOW  93
      CALL  SHDWAR (AUNSHA,NXDIV,AA(ISHSTB))                                    SHADOW  94
C              CALCULATE RATIO OF SHADED TO TOTAL AREA FOR WINDOW               SHADOW  95
      <WGOLGE> = AMAX1( 0., (<WIAREA>-AUNSHA) / <WIAREA> )                      SHADOW  96
C              SUM TOTAL UNSHADED AREA OF ATTACHMENTS DUE TO WALL               SHADOW  97
C              AND GLOBAL SHADES                                                SHADOW  98
      SUMATT = SUMATT  +  AUNSH1 * <GMULT>                                      SHADOW  99
  600 MWI    = MWI + MWNLEN                                                     SHADOW 100
C              LOOP OVER DOORS                                                  SHADOW 101
  610 ND     = <NDOOR>                                                          SHADOW 102
      IF (ND .EQ. 0)  GO TO 800                                                 SHADOW 103
      MD     = <MXDOOR>                                                         SHADOW 104
      DO 700 ID=1,ND                                                            SHADOW 105
      MG     = <MDRGEOM>                                                        SHADOW 106
      IF ((MG .NE.0) .AND. (<DRAREA> .GT. 0.))  GO TO 650                       SHADOW 107
  620 <DRGOLGE> = 0.                                                            SHADOW 108
      SUMATT = SUMATT + <DRAREA>*<DRMULT>                                       SHADOW 109
      GO TO 700                                                                 SHADOW 110
  650 AUNSHA = <DRAREA>                                                         SHADOW 111
      AUNSH1 = AUNSHA                                                           SHADOW 112
C               PTR TO DOOR SETBACK SHADES                                      GEO1    52
      MHA    = <MDRSHADE>                                                       SHADOW 113
      IF( ( (MH+MHA+NGSHAD) .EQ. 0 ) .OR. (<KOSE> .LT. 3 ) )                    GEO1    53
     1          GOTO  620                                                       SHADOW 115
      NXDIV  = <NDRXDIV>                                                        SHADOW 116
      CALL SHDWIN(<KOSE>,<X>,NXDIV,AA(ISHSTB))                                  SHADOW 117
      IF (ISDINF .EQ. 0)  GO TO 620                                             SHADOW 118
C               FINS AND OVERHANGS ON PARENT WALL                               GEO1    54
      MH     = <MXSHAD>                                                         SHADOW 120
      IF(MH .GT. 0) CALL SHDWS(<NXSHAD>,MSHLEN,NXDIV,AA(ISHSTB))                GEO2     4
C               GLOBAL SHADES (BUILDING-SHADES, FIXED-SHADES                    GEO1    55
C               AND SELF-SHADES)                                                GEO1    56
      MH     = ISHADB                                                           SHADOW 122
      IF (NGSHAD .GT. 0)  CALL SHDWS(NGSHAD,MSHLEN,NXDIV,AA(ISHSTB))            SHADOW 123
      CALL SHDWAR(AUNSH1,NXDIV,AA(ISHSTB))                                      SHADOW 126
C               DOOR SETBACK SHADES                                             GEO1    57
      MH     = MHA                                                              SHADOW 127
      IF (MH .GT. 0) CALL SHDWS(<NDRSHADE>,MSHLEN,NXDIV,AA(ISHSTB))             GEO2     5
      CALL SHDWAR(AUNSHA,NXDIV,AA(ISHSTB))                                      SHADOW 129
      <DRGOLGE> = AMAX1(0.,(<DRAREA>-AUNSHA)/<DRAREA>)                          SHADOW 130
      SUMATT = SUMATT + AUNSH1*<DRMULT>                                         SHADOW 131
  700 MD     = MD + MDRLEN                                                      SHADOW 132
C              CALCULATE RATIO OF SHADED TO TOTAL AREA FOR WALL                 SHADOW 133
  800 <XGOLGE> = AMAX1( 0., (<XSAREA>-(XUNSHA-SUMATT))                          SHADOW 134
     1                            /<XSAREA> )                                   SHADOW 135
      MX     = MX + MXLEN                                                       SHADOW 136
      GO TO 9000                                                                SHADOW 137
C              SUN DOWN.  ZERO SHADOW RATIOS                                    SHADOW 138
 1000 NWN    = <NWIN>                                                           SHADOW 139
      IF (NWN .EQ. 0)  GO TO 1200                                               SHADOW 140
      MWI    = <MXWIN>                                                          SHADOW 141
      DO 1100 IWI=1,NWN                                                         SHADOW 142
      <WGOLGE> = 0.                                                             SHADOW 143
 1100 MWI    = MWI + MWNLEN                                                     SHADOW 144
 1200 ND     = <NDOOR>                                                          SHADOW 145
      IF (ND .EQ. 0)  GO TO 1700                                                SHADOW 146
      MD     = <MXDOOR>                                                         SHADOW 147
      DO 1300 ID=1,ND                                                           SHADOW 148
      <DRGOLGE> = 0.                                                            SHADOW 149
 1300 MD     = MD + MDRLEN                                                      SHADOW 150
 1700 <XGOLGE> = 0.                                                             SHADOW 151
      MX     = MX + MXLEN                                                       SHADOW 152
 9000 CONTINUE                                                                  SHADOW 153
      RETURN                                                                    SHADOW 154
      END                                                                       SHADOW 155
      SUBROUTINE  SHDPAR ( XVERTF, YVERTF,  KOSEF, ARECI )                      SHDPAR   2
C                                                                               SHDPAR   3
C              CALCULATE AREA OF A POLYGON IN SHADOW CALCULATIONS               SHDPAR   4
C                                                                               SHDPAR   5
      REAL XVERTF(120),YVERTF(120)                                              -42c    38
C                                                                               SHDPAR   7
      AREA   = 0.                                                               SHDPAR   8
      XL     = XVERTF( KOSEF)                                                   SHDPAR   9
      YL     = YVERTF( KOSEF)                                                   SHDPAR  10
      DO 150 I=1, KOSEF                                                         SHDPAR  11
      XF     = XVERTF(I)                                                        SHDPAR  12
      YF     = YVERTF(I)                                                        SHDPAR  13
      AREA   = AREA-XF*YL+XL*YF                                                 SHDPAR  14
      XL     = XF                                                               SHDPAR  15
      YL     = YF                                                               SHDPAR  16
  150 CONTINUE                                                                  SHDPAR  17
      ARECI  = AREA*0.5                                                         SHDPAR  18
      RETURN                                                                    SHDPAR  19
      END                                                                       SHDPAR  20
      SUBROUTINE  SHDWAR (AR,NXDIV,SHDAR)                                       SHDWAR   2
C                                                                               SHDWAR   3
C              CALCULATE UNSHADED AREA OF A RECEIVING POLYGON                   SHDWAR   4
C                                                                               SHDWAR   5
      COMMON /INTSUN/ IVEC,ISPEW                                                /INTSUN/ 2
      COMMON  /SHDWC/  DELTAX, A0, A, B0, B, SMALP,                             /SHDWC/  2
     1                 NEP(1000),XVERTF(120),YVERTF(120),ROTMAT(3,3),           -42c     2
     2                 XO, YO, ZO, S, C                                         /SHDWC/  4
C                                                                               SHDWAR   8
      DIMENSION SHDAR(2,NXDIV,1)                                                SHDWAR   9
C                                                                               SHDWAR  10
C              INITIALIZE UNSHADED AREA                                         SHDWAR  11
      UNSHAR = 0.                                                               SHDWAR  12
C              LOOP OVER BARS                                                   SHDWAR  13
      DO 100 I=1,NXDIV                                                          SHDWAR  14
      NEQ    = NEP(I)                                                           SHDWAR  15
C              INITIALIZE RELATIVE LIGHTING LEVEL TO SMALP,                     SHDWAR  16
C              THAT IS DARK.  THE EFFECT OF THIS IS REMOVED                     SHDWAR  17
C              AT THE TOP POINT OF EACH BAR, WHICH WAS INITIALIZED              SHDWAR  18
C              TO 1/SMALP IN SHDWIN.                                            SHDWAR  19
      AP     = SMALP                                                            SHDWAR  20
      IF (ISPEW.EQ.1) AP = 1.                                                   SHDWAR  21
C              INITIALIZE BEGINNING END POINT TO THE BOTTOM OF THE              SHDWAR  22
C              WORKING SPACE                                                    SHDWAR  23
      EO     = B0                                                               SHDWAR  24
C              LOOP OVER THE CROSSING POINTS (END POINTS) OF                    SHDWAR  25
C              EACH BAR                                                         SHDWAR  26
      DO 80 J=2,NEQ                                                             SHDWAR  27
      EN     = SHDAR(1,I,J)                                                     SHDWAR  28
C              SUM THE UNSHADED AREA ALONG EACH BAR, ASSUMING                   SHDWAR  29
C              UNIT BAR WIDTH                                                   SHDWAR  30
      enmeo = en - eo                                                           SHDWAR  31
      if(abs(enmeo).lt.0.01) enmeo = 0.                                         SHDWAR  32
      unshar = unshar + ap*enmeo                                                SHDWAR  33
      EO     = EN                                                               SHDWAR  34
C              RESET THE RELATIVE LIGHTING LEVEL                                SHDWAR  35
      AP     = AP*SHDAR(2,I,J)                                                  SHDWAR  36
   80 CONTINUE                                                                  SHDWAR  37
  100 CONTINUE                                                                  SHDWAR  38
C              CORRECT FOR NON UNIT WIDTH OF BARS                               SHDWAR  39
      AR     = UNSHAR*DELTAX                                                    SHDWAR  40
      RETURN                                                                    SHDWAR  41
      END                                                                       SHDWAR  42
      SUBROUTINE  SHDWIN (  KOSEF, XYZ, NXDIV, SHDAR  )                         SHDWIN   2
C                                                                               SHDWIN   3
C              INITIALIZE SHADOW CALCULATION ARRAYS                             SHDWIN   4
C              WITH RECEIVING POLYGON                                           SHDWIN   5
C                                                                               SHDWIN   6
C              KOSEF IS THE NUMBER OF VERTICES OF A                             SHDWIN   7
C              RECEIVING POLYGON                                                SHDWIN   8
C                                                                               SHDWIN   9
C              XYZ CONTAINS THE COORDINATES OF THE VERTICES                     SHDWIN  10
C              OF THE RP                                                        SHDWIN  11
C                                                                               SHDWIN  12
C              NXDIV IS THE NUMBER OF BARS USED TO DIVIDE                       SHDWIN  13
C              THE RP                                                           SHDWIN  14
C                                                                               SHDWIN  15
      COMMON /INTSUN/ IVEC,ISPEW                                                /INTSUN/ 2
      COMMON  /SHADWF/ ISDINF, LSHSTR, ISHSTB, KMAX                             /SHADWF/ 2
      COMMON  /SHDWC/  DELTAX, A0, A, B0, B, SMALP,                             /SHDWC/  2
     1                 NEP(1000),XVERTF(120),YVERTF(120),ROTMAT(3,3),           -42c     2
     2                 XO, YO, ZO, S, C                                         /SHDWC/  4
      COMMON  /SUND/   ISUNUP, GUNDOG, HORANG, TDECLN, EQTIME, SOLCON,          /SUND/   2
     1                 ATMEXT, SKYDFF, RAYCOS(3), RDN,                          /SUND/   3
     2                 BSUN, DECLN, CD, SD, FSUNUP                              /SUND/   4
C                                                                               SHDWIN  20
      DIMENSION XYZ(3,KOSEF), SHDAR(2,NXDIV,1)                                  SHDWIN  21
C                                                                               SHDWIN  22
C              SET MAX NUMBER OF BAR CROSSING POINTS                            SHDWIN  23
C              FOR PRESENT STORAGE                                              SHDWIN  24
      KMAX   = LSHSTR/(2*NXDIV)                                                 SHDWIN  25
C              COPY RECEIVING POLYGON INTO XVERTF, YVERTF                       SHDWIN  26
      DO  200  K = 1 ,  KOSEF                                                   SHDWIN  27
      XVERTF(K) = XYZ(1,K)                                                      SHDWIN  28
      YVERTF(K) = XYZ(2,K)                                                      SHDWIN  29
  200 CONTINUE                                                                  SHDWIN  30
C              THE COORDINATES, WITH RESPECT TO THE XYZ SYSTEM,                 SHDWIN  31
C              OF THE ORIGIN OF THE XP YP ZP SYSTEM, ARE                        SHDWIN  32
C              GIVEN BY THE FOLLOWIN STATEMENTS                                 SHDWIN  33
      Z32    = XYZ(3,3) - XYZ(3,2)                                              SHDWIN  34
      DOTADJ = (XVERTF(2)-XVERTF(1))*(XVERTF(2)-XVERTF(3))+                     SHDWIN  35
     1         ( YVERTF(2) - YVERTF(1) )  *  (YVERTF(2) - YVERTF(3) )           SHDWIN  36
     2       - ( XYZ(3,2) - XYZ(3,1) )  *  Z32                                  SHDWIN  37
      DOTSLF = (XVERTF(2)-XVERTF(3))*(XVERTF(2)-XVERTF(3))+                     SHDWIN  38
     1       (YVERTF(2)-YVERTF(3))*(YVERTF(2)-YVERTF(3))+                       SHDWIN  39
     2       Z32 * Z32                                                          SHDWIN  40
      ORMEW  = DOTADJ/DOTSLF                                                    SHDWIN  41
      XO     = ORMEW*(XVERTF(3)-XVERTF(2))+XVERTF(2)                            SHDWIN  42
      YO     = ORMEW*(YVERTF(3)-YVERTF(2))+YVERTF(2)                            SHDWIN  43
      ZO     = ORMEW * Z32  +  XYZ(3,2)                                         SHDWIN  44
C              COMPUTATION OF THE ROT@ATION MATRIX                              SHDWIN  45
      X32    = XVERTF(3)-XVERTF(2)                                              SHDWIN  46
      Y32    = YVERTF(3)-YVERTF(2)                                              SHDWIN  47
      XP1O   = XVERTF(1)-XO                                                     SHDWIN  48
      YP1O   = YVERTF(1)-YO                                                     SHDWIN  49
      ZP1O   = XYZ(3,1)  -  ZO                                                  SHDWIN  50
      AP1O   = SQRT (XP1O*XP1O+YP1O*YP1O+ZP1O*ZP1O)                             SHDWIN  51
      A32    = SQRT(X32*X32+Y32*Y32+Z32*Z32)                                    SHDWIN  52
C              ROTMAT IS THE ROTATION MATRIX                                    SHDWIN  53
      ROTMAT(1,1) = X32/A32                                                     SHDWIN  54
      ROTMAT(1,2) = Y32/A32                                                     SHDWIN  55
      ROTMAT(1,3) = Z32/A32                                                     SHDWIN  56
      ROTMAT(2,1) = XP1O/AP1O                                                   SHDWIN  57
      ROTMAT(2,2) = YP1O/AP1O                                                   SHDWIN  58
      ROTMAT(2,3) = ZP1O/AP1O                                                   SHDWIN  59
      ROTMAT(3,1) = ROTMAT(1,2)*ROTMAT(2,3)-ROTMAT(1,3)*ROTMAT(2,2)             SHDWIN  60
      ROTMAT(3,2) = ROTMAT(1,3)*ROTMAT(2,1)-ROTMAT(1,1)*ROTMAT(2,3)             SHDWIN  61
      ROTMAT(3,3) = ROTMAT(1,1)*ROTMAT(2,2)-ROTMAT(2,1)*ROTMAT(1,2)             SHDWIN  62
C              INITIALIZE THE COORDINATES OF THE SIDES (THE SCAN                SHDWIN  63
C              LIMITS) OF THE RECTANGLE THAT ENCLOSES THE RP.                   SHDWIN  64
C              THIS IS THE RECTANGLE THAT WILL BE DIVIDED INTO                  SHDWIN  65
C              BARS FOR THE SHADING CALCULATION.                                SHDWIN  66
      A0     = 0.0                                                              SHDWIN  67
      A      = 0.0                                                              SHDWIN  68
      B0     = 0.0                                                              SHDWIN  69
      B      = 0.0                                                              SHDWIN  70
C              TRANSFORM THE RECEIVING POLYGON VERTICES FROM THE                SHDWIN  71
C              XYZ SYSTEM TO THE XP YP ZP SYSTEM                                SHDWIN  72
      DO 110 I = 1, KOSEF                                                       SHDWIN  73
      X      = XVERTF(I)-XO                                                     SHDWIN  74
      Y      = YVERTF(I)-YO                                                     SHDWIN  75
      Z      = XYZ(3,I) - ZO                                                    SHDWIN  76
      XVERTF(I) = ROTMAT(1,1)*X+ROTMAT(1,2)*Y+ROTMAT(1,3)*Z                     SHDWIN  77
      YVERTF(I) = ROTMAT(2,1)*X+ROTMAT(2,2)*Y+ROTMAT(2,3)*Z                     SHDWIN  78
C              CALCULATE SCAN LIMITS FOR ENCLOSURE OF RP                        SHDWIN  79
      IF(XVERTF(I).GT.A)A = XVERTF(I)                                           SHDWIN  80
      IF( XVERTF(I) .LT. A0 )  A0 = XVERTF(I)                                   SHDWIN  81
      IF(YVERTF(I).GT.B)B = YVERTF(I)                                           SHDWIN  82
      IF( YVERTF(I) .LT. B0 )  B0 = YVERTF(I)                                   SHDWIN  83
  110 CONTINUE                                                                  SHDWIN  84
C              SET WIDTH OF A BAR                                               SHDWIN  85
      DELTAX = ( A - A0 ) / FLOAT( NXDIV )                                      SHDWIN  86
C              INITIALIZE THE BARS TO HAVE TWO END POINTS,                      SHDWIN  87
C              THE TOP AND BOTTOM OF THE RECTANGLE.  INITIALIZE                 SHDWIN  88
C              THE LIGHTING LOADS OF THE END POINTS.                            SHDWIN  89
      ALARGP = 1. / SMALP                                                       SHDWIN  90
      DO  1100  I = 1 , NXDIV                                                   SHDWIN  91
      NEP(I) = 2                                                                SHDWIN  92
      SHDAR(1,I,1) = B0                                                         SHDWIN  93
      SHDAR(1,I,2) = B                                                          SHDWIN  94
      SHDAR(2,I,1) = SMALP                                                      SHDWIN  95
      SHDAR(2,I,2) = ALARGP                                                     SHDWIN  96
 1100 CONTINUE                                                                  SHDWIN  97
C              TRANSFORM THE Z COMPONENT OF THE SOLAR DIRECTION                 SHDWIN  98
C              VECTOR FROM THE XYZ SYSTEM TO THE XP YP ZP SYSTEM                SHDWIN  99
      ZS     = ROTMAT(3,1)*RAYCOS(1)+ROTMAT(3,2)*RAYCOS(2)+ROTMAT(3,3)*         SHDWIN 100
     1RAYCOS(3)                                                                 SHDWIN 101
C            CORRECT FOR CASE WHEN SOLAR TRANSFER FACTORS ARE BEING             SHDWIN 102
C            CALCULATED FOR A SUNSPACE (SEE SUBR. IWSTF)                        SHDWIN 103
      ZS = ZS*FLOAT(IVEC)                                                       SHDWIN 104
C              IF THE ZP COMPONENT OF THE SOLAR DIRECTION                       SHDWIN 105
C              VECTOR IS NEGATIVE, THE RECEIVING POLYGON                        SHDWIN 106
C              IS FACING AWAY FROM THE SUN.  THE FOLLOWING                      SHDWIN 107
C              STATEMENT MAKES THIS TEST.  NOTE THAT THE                        SHDWIN 108
C              ANGULAR SIZE OF THE SUNS RADIUS, SEEN FROM                       SHDWIN 109
C              THE EARTH, IS .0046 RADIANS.  THE FLAG ISDINF                    SHDWIN 110
C              IS SET TO ZERO IF THE RP IS FACING AWAY FROM                     SHDWIN 111
C              THE SUN.                                                         SHDWIN 112
      IF(ZS.LT..0092) GO TO 650                                                 SHDWIN 113
C              THE RECEIVING POLYGON IS ENTERED INTO THE                        SHDWIN 114
C              ARRAYS ENDPNT AND PRMPNT AS A HOLE IN THE                        SHDWIN 115
C              RECTANGLE BOUNDED BY A0,A,B0,B BY USING                          SHDWIN 116
C              1/SMALP AS THE PERMEABILITY.                                     SHDWIN 117
      CALL  SHDWUN (XVERTF,YVERTF,KOSEF,1./SMALP,NXDIV,SHDAR)                   SHDWIN 118
C              TRANSFORM THE X AND Y COMPONENTS OF THE                          SHDWIN 119
C              SOLAR DIRECTION VECTOR FROM THE XYZ SYSTEM                       SHDWIN 120
C              TO THE XP YP ZP SYSTEM.                                          SHDWIN 121
      XS     = ROTMAT(1,1)*RAYCOS(1)+ROTMAT(1,2)*RAYCOS(2)+ROTMAT(1,3)*         SHDWIN 122
     1RAYCOS(3)                                                                 SHDWIN 123
      YS     = ROTMAT(2,1)*RAYCOS(1)+ROTMAT(2,2)*RAYCOS(2)+ROTMAT(2,3)*         SHDWIN 124
     1RAYCOS(3)                                                                 SHDWIN 125
      C      = XS/ZS                                                            SHDWIN 126
      S      = YS/ZS                                                            SHDWIN 127
      ISDINF = 1                                                                SHDWIN 128
      GO TO 900                                                                 SHDWIN 129
  650 ISDINF = 0                                                                SHDWIN 130
  900 CONTINUE                                                                  SHDWIN 131
      RETURN                                                                    SHDWIN 132
      END                                                                       SHDWIN 133
      SUBROUTINE  SHDWS(NSHADE,LENSHD,NXDIV,SHDAR)                              SHDWS    2
C                                                                               SHDWS    3
C              FOR ONE RECEIVING POLYGON, PROCESS NSHADE                        SHDWS    4
C              SHADING POLYGONS POINTED TO BY MH.  CLIP THE                     SHDWS    5
C              PORTION OF THE SHADING POLYGONS BELOW THE RP.                    SHDWS    6
C              PROJECT THE SP ALONG THE SUNS RAY TO THE RP.                     SHDWS    7
C              MERGE THE RESULTING SHADOW POLGONS INTO THE                      SHDWS    8
C              SHADOW ARRAYS.                                                   SHDWS    9
C                                                                               SHDWS   10
      COMMON  /LENS/   MWFLEN, MRLEN, MSHLEN, MWNLEN, MDRLEN, MXLEN,            /LENS/   2
     1                 MULEN, MZLEN, MIWLEN, MFLLEN,                            HRr      5
     2                 LMTB, LLDSOU, MSTLEN, LSTFT, MWLLEN                      BLIND    1
      COMMON /INTSUN/ IVEC,ISPEW                                                /INTSUN/ 2
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     BLIND    2
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        FLOOR1   3
      COMMON  /SHADWF/ ISDINF, LSHSTR, ISHSTB, KMAX                             /SHADWF/ 2
      COMMON  /SHDWC/  DELTAX, A0, A, B0, B, SMALP,                             /SHDWC/  2
     1                 NEP(1000),XVERTF(120),YVERTF(120),ROTMAT(3,3),           -42c     2
     2                 XO, YO, ZO, S, C                                         /SHDWC/  4
      COMMON /TIME  / IDOY, IDOW, IDSTF, ISCHR, ISCDAY, iDSdates(6),            -044e5r  1
     1                IMO, IDAY, IYR, IHR, CLOCK(10), IDSFLG,                   HOLID1   4
     2                MONDSC(12), MONLEN(12), MONSDA(12), IEODMR                /TIME/   4
      COMMON        // AA(75 000 000)                                           -048ar   1
      INTEGER          IA(75 000 000)                                           -048ar   2
      EQUIVALENCE  (IA(1), AA(1))                                               //       4
C                                                                               SHDWS   18
      COMMON /CFFDIF/IFFDIF                                                     SHDWS   19
      DIMENSION  X1(150), Y1(150), SHDAR(2,NXDIV,1)                             -042f    1
      LOGICAL  LUND, PUND                                                       SHDWS   21
C                                                                               SHDWS   22
C              LOOP OVER NSHADE SHADING POLYGONS                                SHDWS   23
      DO  1000  ISHADE = 1 , NSHADE                                             SHDWS   24
C              GET THE POINTER TO THE SP GEOMETRY                               SHDWS   25
      MGS    = <MSGEOM>                                                         SHDWS   26
C            FOR SUNSPACE SOLAR TRANSFER FACTOR CALC, GEOMETRY                  SHDWS   27
C            PTR IS THAT FOR AN EXTERIOR WINDOW (SEE SUBR. IWSTF)               SHDWS   28
      IF (ISPEW.NE.0) MGS = MH                                                  SHDWS   29
C           PREVENT EXT WALL WHICH IS SELF-SHADE FROM SHADING ITSELF            SHDWS   30
C           OR ASSOCIATED INTERIOR WINDOW                                       SHDWS   31
      IF (MGS.EQ.MGX) GO TO 900                                                 SHDWS   32
      MG     = MGS                                                              SHDWS   33
C              PICK UP THE NUMBER OF SP VERTICES FROM GEOMETRY                  SHDWS   34
      NVS    = <KOSE>                                                           SHDWS   35
C              PICK UP COORDINATES OF LAST VERTEX AND TRANSFORM                 SHDWS   36
C              TO THE PRIME SYSTEM                                              SHDWS   37
      MG     = MGS + NVS + NVS + NVS - 3                                        SHDWS   38
      X      = <X> - XO                                                         SHDWS   39
      Y      = <Y> - YO                                                         SHDWS   40
      Z      = <Z> - ZO                                                         SHDWS   41
      XL      = ROTMAT(1,1)*X+ROTMAT(1,2)*Y+ROTMAT(1,3)*Z                       SHDWS   42
      YL      = ROTMAT(2,1)*X+ROTMAT(2,2)*Y+ROTMAT(2,3)*Z                       SHDWS   43
      ZL      = ROTMAT(3,1)*X+ROTMAT(3,2)*Y+ROTMAT(3,3)*Z                       SHDWS   44
C            CORRECT FOR CASE WHEN SOLAR TRANSFER FACTORS ARE BEING             SHDWS   45
C            CALCULATED FOR A SUNSPACE (SEE SUBR. IWSTF)                        SHDWS   46
      ZL = ZL*FLOAT(IVEC)                                                       SHDWS   47
C              CHECK TO SEE IF THE LAST VERTEX IS BELOW THE RP                  SHDWS   48
      LUND   = ZL .LE. 0.                                                       SHDWS   49
C              INITIALIZE THE NEW VERTEX COUNTER AND SET THE                    SHDWS   50
C              GEOMETRY POINTER TO THE FIRST (PRESENT) VERTEX                   SHDWS   51
      K      = 0                                                                SHDWS   52
      MG     = MGS                                                              SHDWS   53
C              LOOP OVER (PRESENT) SP VERTICES                                  SHDWS   54
      DO  400  I = 1 , NVS                                                      SHDWS   55
C              TRANSFORM THE PRESENT VERTICES TO THE PRIME SYSTEM               SHDWS   56
      X      = <X> - XO                                                         SHDWS   57
      Y      = <Y> - YO                                                         SHDWS   58
      Z      = <Z> - ZO                                                         SHDWS   59
      XP      = ROTMAT(1,1)*X+ROTMAT(1,2)*Y+ROTMAT(1,3)*Z                       SHDWS   60
      YP      = ROTMAT(2,1)*X+ROTMAT(2,2)*Y+ROTMAT(2,3)*Z                       SHDWS   61
      ZP      = ROTMAT(3,1)*X+ROTMAT(3,2)*Y+ROTMAT(3,3)*Z                       SHDWS   62
C            CORRECT FOR CASE WHEN SOLAR TRANSFER FACTORS ARE BEING             SHDWS   63
C            CALCULATED FOR A SUNSPACE (SEE SUBR. IWSTF)                        SHDWS   64
      ZP = ZP*FLOAT(IVEC)                                                       SHDWS   65
C              CHECK FOR PRESENT VERTEX BELOW RP                                SHDWS   66
      PUND   = ZP .LE. 0.                                                       SHDWS   67
C              IF PRESENT AND LAST VERTEX ARE BOTH BELOW THE                    SHDWS   68
C              RP, GO SET LAST VERTEX = PRESENT VERTEX AND DO                   SHDWS   69
C              NOT INCREMENT THE NEW VERTEX COUNTER.  THAT IS,                  SHDWS   70
C              CLIP OFF THE PRESENT VERTEX.                                     SHDWS   71
      IF( PUND .AND. LUND )  GO TO 380                                          SHDWS   72
C              IF BOTH ARE ABOVE THE RP, GO STORE THE PROJECTION                SHDWS   73
C              OF THE PRESENT VERTEX IN X1,Y1, AND INCREMENT THE                SHDWS   74
C              NEW VERTEX COUNTER.                                              SHDWS   75
      IF( .NOT.( PUND .OR. LUND ) )  GO TO 370                                  SHDWS   76
C              IF ONE IS ABOVE THE RP AND ONE IS BELOW,                         SHDWS   77
C              INTERPOLATE TO FIND THE CROSSING POINT AND                       SHDWS   78
C              STORE THIS AS A NEW VERTEX.                                      SHDWS   79
      K      = K + 1                                                            SHDWS   80
      X1(K)  = (ZP*XL - ZL*XP) / (ZP - ZL)                                      SHDWS   81
      Y1(K)  = (ZP*YL - ZL*YP) / (ZP - ZL)                                      SHDWS   82
C              IF THE PRESENT VERTEX IS ABOVE AND THE LAST                      SHDWS   83
C              BELOW, WE MUST ALSO STORE THE PROJECTION OF                      SHDWS   84
C              THE PRESENT VERTEX AS A NEW VERTEX.                              SHDWS   85
      IF( PUND ) GO TO 380                                                      SHDWS   86
C              PROJECT THE PRESENT VERTEX ONTO THE RP.                          SHDWS   87
C              STORE RESULT AND INCREMENT THE NEW                               SHDWS   88
C              VERTEX COUNTER.                                                  SHDWS   89
  370 K      = K + 1                                                            SHDWS   90
      X1(K)  = XP - C*ZP                                                        SHDWS   91
      Y1(K)  = YP - S*ZP                                                        SHDWS   92
C              RESET LAST VERTEX TO BE THE PRESENT VERTEX                       SHDWS   93
C              AND CONTINUE                                                     SHDWS   94
  380 XL     = XP                                                               SHDWS   95
      YL     = YP                                                               SHDWS   96
      ZL     = ZP                                                               SHDWS   97
      LUND   = PUND                                                             SHDWS   98
      MG     = MG + 3                                                           SHDWS   99
  400 CONTINUE                                                                  SHDWS  100
C              STORE SHADOW POLYGON IN THE SHADOW ARRAYS                        SHDWS  101
C              NEP, ENDPNT, AND PRMPNT.                                         SHDWS  102
      IF (K.LE.0.AND.ISPEW.EQ.0) GO TO 500                                      SHDWS  103
      TRANS  = <TRANSM>                                                         SHDWS  104
C              IF DEFINED, USE SHADING-SCHEDULE TO GET                          SHDWS  105
C              TRANSMITTANCE (UNLESS IFFDIF, SET IN FFDIF, =1,                  SHDWS  106
C              WHICH MEANS DIFFUSE SHADING IS BEING CALCULATED,                 SHDWS  107
C              IN WHICH CASE SCHADING-SCHEDULE IS IGNORED AND                   SHDWS  108
C              TRANSMITTANCE VALUE IS USED).                                    SHDWS  109
      IF(  ( <KTR-SCH> .NE. 0 )  .AND.   ( LENSHD .EQ. MSHLEN )  .AND.          SHDWS  110
     1 (ISCHR.GT.0).AND.(IFFDIF.NE.1) )                                         SHDWS  111
     1          TRANS = AA(IA(<KTR-SCH>)+ISCHR)                                 SHDWS  112
C            WHEN CALCULATING SUNSPACE SOLAR TRANSFER FACTORS (SEE              SHDWS  113
C            SUBR. IWSTF), SET TRANSMITTIVITY TO OPAQUE                         SHDWS  114
      IF (ISPEW.NE.0) TRANS = 0.                                                SHDWS  115
      CALL  SHDWUN ( X1, Y1, K, TRANS, NXDIV, SHDAR )                           SHDWS  116
  500 CONTINUE                                                                  SHDWS  117
  900 MH = MH + LENSHD                                                          SHDWS  118
 1000 CONTINUE                                                                  SHDWS  119
      RETURN                                                                    SHDWS  120
      END                                                                       SHDWS  121
      SUBROUTINE  SHDWUN (XV,YV,NV,PM,NXDIV,SHDAR)                              SHDWUN   2
C                                                                               SHDWUN   3
C              UNION ANOTHER SHADOW POLYGON INTO ARRAY SHDAR.                   SHDWUN   4
C              SHDAR(1,,) STORES THE CROSSING POINTS FOR EVERY SHADOW           SHDWUN   5
C              POLYGON WITH EACH BAR.  SHDAR(2,,) STORES A FACTOR FOR           SHDWUN   6
C              EACH CROSSING POINT, WHICH WHEN MULTIPLIED BY THE                SHDWUN   7
C              FACTOR FOR THE PREVIOUS CROSSING POINT ON THE BAR,               SHDWUN   8
C              GIVES THE RELATIVE SOLAR INTENSITY FOR THE PRESENT               SHDWUN   9
C              CROSSING POINT.                                                  SHDWUN  10
C                                                                               SHDWUN  11
      COMMON /INTSUN/ IVEC,ISPEW                                                /INTSUN/ 2
      COMMON  /SHADWF/ ISDINF, LSHSTR, ISHSTB, KMAX                             /SHADWF/ 2
      COMMON  /SHDWC/  DELTAX, A0, A, B0, B, SMALP,                             /SHDWC/  2
     1                 NEP(1000),XVERTF(120),YVERTF(120),ROTMAT(3,3),           -42c     2
     2                 XO, YO, ZO, S, C                                         /SHDWC/  4
      COMMON        // AA(75 000 000)                                           -048ar   1
      INTEGER          IA(75 000 000)                                           -048ar   2
      EQUIVALENCE  (IA(1), AA(1))                                               //       4
C              XV AND YV CONTAIN VERTICES OF THE SHADOW POLYGON                 SHDWUN  16
      DIMENSION XV(1),YV(1),SHDAR(2,NXDIV,1)                                    SHDWUN  17
C              DEFINE A FUNCTION THAT FINDS THE INDEX OF A                      SHDWUN  18
C              SHADOW POLYGON VERTEX GIVEN Q, THE X-COORD OF                    SHDWUN  19
C              THE VERTEX                                                       SHDWUN  20
      IQNT(Q) = (Q-A0)/DELTAX+.5                                                SHDWUN  21
C              DEFINE A SECOND FUNCTION THAT FINDS THE X-COORD                  SHDWUN  22
C              OF THE MID-POINT OF A BAR GIVEN THE INDEX OF THE                 SHDWUN  23
C              BAR                                                              SHDWUN  24
      QNTZ(M) = (FLOAT(M)-.5)*DELTAX+A0                                         SHDWUN  25
C              WHEN AN EXT WIN IS SP, REVERSE SHDAR EVEN IF IMAGE OF            SHDWUN  26
C              EXT WIN HAS MISSED THE RP                                        SHDWUN  27
      IF (NV.LE.0.AND.ISPEW.EQ.1) GO TO 120                                     SHDWUN  28
C              MAKE SURE P, THE TRANSMITTIVITY, IS GREATER THAN ZERO            SHDWUN  29
      P      = AMAX1( PM, SMALP )                                               SHDWUN  30
C              SMALL AND SMALP ARE SMALL NUMBERS USED INSTEAD                   SHDWUN  31
C              OF ZERO TO PREVENT DIVIDE BY ZERO ERRORS                         SHDWUN  32
      SMALL  = DELTAX*.000001                                                   SHDWUN  33
C               GET THE AREA OF THE SHADOW POLYGON                              SHDWUN  34
      CALL SHDPAR ( XV, YV, NV, AREA )                                          SHDWUN  35
C              IF THE POLGON VERTICES ARE CLOCKWISE, THE                        SHDWUN  36
C              RECIPROCAL OF P IS USED                                          SHDWUN  37
      IF (AREA .LT. 0.0)  P = 1./P                                              SHDWUN  38
C              INITIALIZE XT AND YT, THE TAIL VERTICES, TO THE                  SHDWUN  39
C              LAST VERTEX OF THE POLYGON                                       SHDWUN  40
      XT     = XV(NV)                                                           SHDWUN  41
      YT     = YV(NV)                                                           SHDWUN  42
C               LOOP OVER THE VERTICES OF THE POLYGON                           SHDWUN  43
      DO 100 I = 1,NV                                                           SHDWUN  44
C              SET XH AND YH, THE HEAD VERTICES, TO THE PRESENT                 SHDWUN  45
C              VERTEX COORDINATES                                               SHDWUN  46
      XH     = XV(I)                                                            SHDWUN  47
      YH     = YV(I)                                                            SHDWUN  48
      IF(XH.LT.XT)GO TO 10                                                      SHDWUN  49
C              HEAD IS GREATER THAN TAIL.  WE ARE AT THE BOTTOM OF              SHDWUN  50
C              THE POLYGON.  GET THE BAR INDICES OF THE HEAD AND                SHDWUN  51
C              TAIL. POINTS ABOVE THIS WILL BE IN THE SHADOW                    SHDWUN  52
C              POLYGON, SO SET AP TO P, THE TRANSMITTIVITY.                     SHDWUN  53
      NH     = IQNT(XH)                                                         SHDWUN  54
      NT     = IQNT(XT)+1                                                       SHDWUN  55
      AP     = P                                                                SHDWUN  56
      ONE    = SMALL                                                            SHDWUN  57
      GO TO 20                                                                  SHDWUN  58
   10 CONTINUE                                                                  SHDWUN  59
C              HEAD IS LESS THAN TAIL.  GET THE BAR INDICES OF                  SHDWUN  60
C              THE HEAD AND TAIL.  SINCE WE ARE AT THE TOP OF THE               SHDWUN  61
C              POLYGON, POINTS ABOVE WILL BE OUT OF THE SHADOW,                 SHDWUN  62
C              SO REMOVE THE EFFECT OF THE SHADOW BY SETTING AP                 SHDWUN  63
C              EQUAL TO 1/P .                                                   SHDWUN  64
      NH     = IQNT(XT)                                                         SHDWUN  65
      NT     = IQNT(XH)+1                                                       SHDWUN  66
      AP     = 1./P                                                             SHDWUN  67
      ONE    = -SMALL                                                           SHDWUN  68
   20 CONTINUE                                                                  SHDWUN  69
C              MAKE SURE THE HEAD AND TAIL VERTICES ARE WITHIN                  SHDWUN  70
C              THE WORKING SPACE                                                SHDWUN  71
      NH     = MIN0(NXDIV,NH)                                                   SHDWUN  72
      NT     = MAX0(1,NT)                                                       SHDWUN  73
      IF(NH.LT.NT) GO TO 95                                                     SHDWUN  74
C              LOOP OVER THE BARS BETWEEN THE HEAD AND TAIL                     SHDWUN  75
      DO 90 J = NT,NH                                                           SHDWUN  76
C              USE THE EQUATION OF A STRAIGHT LINE TO FIND                      SHDWUN  77
C              THE Y COORD OF THE CROSSING POINT OF THE SHADOW                  SHDWUN  78
C              POLYGON WITH THE MID-POINT OF THE BAR                            SHDWUN  79
      Y      = (QNTZ(J)-XT)*(YH-YT)/(XH-XT+ONE)+YT                              SHDWUN  80
C              MAKE SURE Y IS WITHIN THE WORKING SPACE                          SHDWUN  81
      Y      = AMAX1(B0,AMIN1(B,Y))                                             SHDWUN  82
C              INCREMENT THE NUMBER OF END POINTS OF THE BAR                    SHDWUN  83
      K      = NEP(J)                                                           SHDWUN  84
      NEP(J) = K+1                                                              SHDWUN  85
C              CHECK FOR ENOUGH STORAGE FOR SHADOW ARRAYS                       SHDWUN  86
      IF (K .LT. KMAX)  GO TO 70                                                SHDWUN  87
      KMAX = K+1                                                                SHDWUN  88
      LSHSTR = 2*NXDIV*KMAX                                                     SHDWUN  89
      CALL CKAA(IA,LSHSTR)                                                      SHDWUN  90
   70 CONTINUE                                                                  SHDWUN  91
C              LOOP THROUGH THE ENDPOINTS OF THE BAR.  IF Y IS                  SHDWUN  92
C              BELOW THE CURRENT ENDPOINT, REINDEX THE ENDPOINT.                SHDWUN  93
C              WHEN IT BECOMES GREATER THAN THE CURRENT ENDPOINT,               SHDWUN  94
C              GO DEFINE A NEW SHDAR.                                           SHDWUN  95
      IF(Y.GE.SHDAR(1,J,K))GO TO 80                                             SHDWUN  96
      SHDAR(1,J,K+1) = SHDAR(1,J,K)                                             SHDWUN  97
      SHDAR(2,J,K+1) = SHDAR(2,J,K)                                             SHDWUN  98
      K      = K-1                                                              SHDWUN  99
      IF(K.GE.1)GO TO 70                                                        SHDWUN 100
   80 SHDAR(1,J,K+1) = Y                                                        SHDWUN 101
      SHDAR(2,J,K+1) = AP                                                       SHDWUN 102
   90 CONTINUE                                                                  SHDWUN 103
   95 CONTINUE                                                                  SHDWUN 104
C              SET TAIL TO HEAD AND PROCEED AROUND THE POLYGON                  SHDWUN 105
      XT     = XH                                                               SHDWUN 106
      YT     = YH                                                               SHDWUN 107
  100 CONTINUE                                                                  SHDWUN 108
C      DO 9000 J=1,NXDIV                                                        SHDWUN 109
C      PRINT 9100, J,(SHDAR(1,J,K),K=1,10),NEP(J),(SHDAR(2,J,K),K=1,10)         SHDWUN 110
C 9100 FORMAT ( * J=*,I2,1X,10E10.2/* N=*,I2,1X,10E10.2/)                       SHDWUN 111
C 9000 CONTINUE                                                                 SHDWUN 112
C              FOR SUNSPACE INTERIOR SOLAR CALCULATION, WHEN EXT WINDOW         SHDWUN 113
C              IS A SENDING POLYGON, REVERSE SHDAR(2,,) VALUES SO THAT          SHDWUN 114
C              BACKGROUND IS DARK AND IMAGE OF WINDOW IS LIGHT                  SHDWUN 115
      IF (ISPEW.EQ.0) GO TO 200                                                 SHDWUN 116
  120 DO 150 J=1,NXDIV                                                          SHDWUN 117
      SHDAR(2,J,1) = 1.                                                         SHDWUN 118
      NP = NEP(J)-1                                                             SHDWUN 119
      DO 170 K=2,NP                                                             SHDWUN 120
      SHDAR(2,J,K) = 1./SHDAR(2,J,K)                                            SHDWUN 121
  170 CONTINUE                                                                  SHDWUN 122
  150 CONTINUE                                                                  SHDWUN 123
C      DO 9200 J=1,NXDIV                                                        SHDWUN 124
C      PRINT 9300, J,(SHDAR(1,J,K),K=1,10),NEP(J),(SHDAR(2,J,K),K=1,10)         SHDWUN 125
C 9300 FORMAT (* J=*,I2,1X,10E10.2/* N=*,I2,1X,10E10.2/)                        SHDWUN 126
C 9200 CONTINUE                                                                 SHDWUN 127
  200 CONTINUE                                                                  SHDWUN 128
      RETURN                                                                    SHDWUN 129
      END                                                                       SHDWUN 130
      SUBROUTINE SKYEM                                                          SKYEM    2
C                                                                               SKYEM    3
C              CALLED FROM WDTSUN. CALCULATES INFRARED EMISSIVITY               SKYEM    4
C              OF THE SKY AS A FUNCTION OF SURFACE DEWPOINT TEMP                SKYEM    5
C              (A MEASURE OF ATMOSPHERIC MOISTURE CONTENT) AND                  SKYEM    6
C              CLOUD AMOUNT. THE CORRELATION USED IS FROM THE                   SKYEM    7
C              TARP PROGRAM (G. WALTON, THERMAL ANALYSIS RESEARCH               SKYEM    8
C              PROGRAM REFERENCE MANUAL, NBSIR 83-2655, 1983).                  SKYEM    9
C                                                                               SKYEM   10
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                         /FILES/  3
     2              , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                    /FILES/  4
     3                IHRREP(3), IHRPAS(2)                                      /FILES/  5
      COMMON /TIME  / IDOY, IDOW, IDSTF, ISCHR, ISCDAY, iDSdates(6),            -044e5r  1
     1                IMO, IDAY, IYR, IHR, CLOCK(10), IDSFLG,                   HOLID1   4
     2                MONDSC(12), MONLEN(12), MONSDA(12), IEODMR                /TIME/   4
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
C                                                                               SKYEM   14
C              dewpoint temperature (deg C)                                     SKYEM   15
      dptc = (DPT-32.)/1.8                                                      SKYEM   16
C              dewpoint temperature (deg K)                                     SKYEM   17
      dptk = dptc + 273.                                                        SKYEM   18
C              clear sky emissivity                                             SKYEM   19
      esky = 0.787 + .764*alog(dptk/273.)                                       SKYEM   20
C              correction for clouds                                            SKYEM   21
      clfac = 1. + cldamt*(.0224-.0035*cldamt+.00028*cldamt*cldamt)             SKYEM   22
      esky = esky*clfac                                                         SKYEM   23
C                                                                               SKYEM   24
      RETURN                                                                    SKYEM   25
      END                                                                       SKYEM   26
      SUBROUTINE  SPMISC                                                        SPMISC   2
C                                                                               SPMISC   3
C            CALLED BY READSF.  GETS MISCELLANEOUS SPACE INFO                   SPMISC   4
C            REQUIRED BY THE SUNSPACE CALCULATION.                              SPMISC   5
C            SEE DESCRIPTION BELOW OF ZONE LOOPS 1, 2 AND 3.                    SPMISC   6
C              A -COMMON WALL- BELOW IS DEFINED AS A STANDARD                   SPMISC   7
C              INTERIOR-WALL BETWEEN A SUNSPACE (SUNSPACE=YES) AND              SPMISC   8
C              A NON-SUNSPACE (SUNSPACE=NO).                                    SPMISC   9
C                                                                               SPMISC  10
      COMMON  /LENS/   MWFLEN, MRLEN, MSHLEN, MWNLEN, MDRLEN, MXLEN,            /LENS/   2
     1                 MULEN, MZLEN, MIWLEN, MFLLEN,                            HRr      5
     2                 LMTB, LLDSOU, MSTLEN, LSTFT, MWLLEN                      BLIND    1
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                         /FILES/  3
     2              , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                    /FILES/  4
     3                IHRREP(3), IHRPAS(2)                                      /FILES/  5
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     BLIND    2
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        FLOOR1   3
      COMMON  /PTRBGN/ ISCB, IWFB, IWPB, ICONSB, IGTB, IWLB, IGEOB,             HRr      6
     1                 ISHADB, IWINB, IDRB, IEWB, IUGB, ISPB, IIWPB,            HRr      7
     2                 IIWB, IFLB, ISPCDB, IOTHB, ILHB, IZQCMB, ISSHDB,         HRr      8
     3                 IOHFIB, IZLSK, IZLSL, ISTFB                              HRr      9
      COMMON  /SIZE/   LENGTH,NVECT,NSCHED,NWF,NWPAR,NCONS,NGT,NWL,NGEO,        BLIND    5
     1                 NGSHAD, NWIN, NDOOR, NEW, NUG, NSP, NIWP, NIW,           /SIZE/   3
     2                 NFL, NDESDY, NBR, NOTH, NITH, NOPSRF,                    HRr     10
     3                 NSURF, NSSHD, NSHTOT                                     GEO1     1
      COMMON  /REPORT/ IREPRT(4,37),IPRG,IUNIQV(100),IUNIQS(100),IUNIQL         BIGNAM   1
      COMMON        // AA(75 000 000)                                           -048ar   1
      INTEGER          IA(75 000 000)                                           -048ar   2
      EQUIVALENCE  (IA(1), AA(1))                                               //       4
      COMMON /WCTRL/  IwinReturn, Imsgflg                                       /WCTRL/  2
c              For DLLs, delete Win_MB and enable msgbox.fi                     /WCTRL/  3
#ifndef _DLL                                                                 /* -051     1 */ 
      COMMON /WIN_MB/ MB_OK,MB_ICONSTOP,MB_ICONEXCLAMATION,MB_TASKMODAL,        -051     2
     &                MB_ICONINFORMATION                                        -051     3
#else                                                                        /* -051     4 */ 
      include 'msgbox.fi'                                                       -051     5
#endif                                                                       /* -051     6 */ 
      DIMENSION INADJ(8),IIWTYP(4,4)                                            -042L4  93
      DATA IIWTYP/4HSTAN,4HDARD,4H    ,4H    ,                                  SPMISC  19
     .            4HAIR ,4H    ,4H    ,4H    ,                                  SPMISC  20
     .            4HADIA,4HBATI,4HC   ,4H    ,                                  SPMISC  21
     .            4HINTE,4HRNAL,4H    ,4H     /                                 SPMISC  22
C                                                                               SPMISC  23
C            ZONE LOOP NO. 1  --  FIND NO. OF EXT WINS IN EACH SPACE,           SPMISC  24
C            SET FLAG IDENTIFYING INT WALLS BET SUNSPACE AND REGULAR            SPMISC  25
C            SPACE, SET <SUNSPACE> TO 2 FOR NON-SUNSPACES ADJACENT TO           SPMISC  26
C            A SUNSPACE, FIND TOT LENGTH (LSTFT) OF SOLAR TRANSFER              SPMISC  27
C            FACTOR ARRAYS.                                                     SPMISC  28
C                                                                               SPMISC  29
      MZ = ISPB                                                                 SPMISC  31
      DO 28000 IZ = 1,NSP                                                       SPMISC  32
C            FIND NO. OF EXT WINS IN THE SPACE                                  SPMISC  33
      <NEXWIN> = 0                                                              SPMISC  34
      NEW1 = <NEXTS>                                                            SPMISC  35
      IF (NEW1.EQ.0) GO TO 28500                                                SPMISC  36
      MX = <MZEXT>                                                              SPMISC  37
      DO 28100 IEW1 = 1,NEW1                                                    SPMISC  38
      IF (<IEWTYPE>.GT.2) GO TO 28100                                           SPMISC  39
      <NEXWIN> = <NEXWIN> + <NWIN>                                              SPMISC  40
C              ERROR FOR MULTIPLIER ON SUNSP EXT WALL WITH WINDOWS              SPMISC  41
      IF (<SUNSPACE>.NE.1.OR.<XSMULT>.EQ.1.0.OR.<NWIN>.EQ.0)                    SPMISC  42
     .   GO TO 28040                                                            SPMISC  43
      CALL MSGSIM(-1,0,0,0,0)                                                   SPMISC  44
      WRITE(IOUTPT,28020) (<IXSNM>,II=1,8),(<IZNM>,II=1,8),<XSMULT>             -042L4  94
28020 FORMAT(                                                                   -042L4  95
     $12X,'EXTERIOR-WALL ',8A4,', in SUNSPACE ',8A4,','/                        -042L4  96
     $12X,', has a MULTIPLIER of ',F8.1,'.  The MULTIPLIER on an'/              -042L4  97
     $12X,'EXTERIOR-WALL (with WINDOWS) in a SUNSPACE should be 1.0.')          -042L4  98
      Call MessageBox(NULL,'Error of MULTIPLIER not 1.0 on SUNSPACE'            -051   100
     &  //' wall -  ABORTING'//char(0),'SPMISC Errors'//char(0), MB_OK          -051   101
     &  + MB_ICONSTOP+MB_TASKMODAL )                                            -051   102
      Return                                                                    -050x   20
28040 CONTINUE                                                                  SPMISC  51
28100 MX = MX + MXLEN                                                           SPMISC  52
28500 CONTINUE                                                                  SPMISC  53
      ISSP = <SUNSPACE>                                                         SPMISC  54
C              INITIALIZE NO. OF COMMON WALLS WITH CONVECTION (FOR              SPMISC  59
C              A SUNSPACE OR NON-SUNSPACE)                                      SPMISC  60
      NWCONV = 0                                                                SPMISC  61
      NIW1 = <NINTS>                                                            SPMISC  62
C              CHANGE THIS SPACE FROM SUNSPACE TO NON-SUNSPACE IF IT            SPMISC  63
C              HAS NO COMMON WALLS                                              SPMISC  64
      NCOMW0 = 0                                                                SPMISC  65
      IF (NIW1.EQ.0.OR.ISSP.NE.1) GO TO 28553                                   SPMISC  66
      DO 28551 IW1 = 1,NIW1                                                     SPMISC  67
      MI = IA(<MZINT>+IW1-1)                                                    SPMISC  68
      IF (<IW-TYPE>.NE.1) GO TO 28551                                           SPMISC  69
      MZADJ = <MZIN>                                                            SPMISC  70
      IF (MZ.EQ.<MZIN>) MZADJ = <MZNEXTTO>                                      SPMISC  71
      MZSAV = MZ                                                                SPMISC  72
      MZ = MZADJ                                                                SPMISC  73
      ISSPAJ = <SUNSPACE>                                                       SPMISC  74
      MZ = MZSAV                                                                SPMISC  75
      IF ((ISSP.EQ.1.AND.ISSPAJ.NE.1).OR.(ISSP.NE.1.AND.ISSPAJ.EQ.1))           SPMISC  76
     1   NCOMW0 = NCOMW0 + 1                                                    SPMISC  77
28551 CONTINUE                                                                  SPMISC  78
28553 CONTINUE                                                                  SPMISC  79
      IF (ISSP.NE.1.OR.NCOMW0.GE.1) GO TO 28554                                 SPMISC  80
      <SUNSPACE> = 0                                                            SPMISC  81
      ISSP = 0                                                                  SPMISC  82
      CALL MSGSIM(-3,0,0,0,0)                                                   SPMISC  83
      WRITE (IOUTPT,28552) (<IZNM>,II=1,8)                                      -042L4  99
28552 FORMAT(                                                                   -042L4 100
     $12X,'SPACE ',8A4,', which was input as a SUNSPACE, has no'/               -042L4 101
     $12X,'STANDARD INTERIOR-WALLs, will be changed to a'/                      -042L4 102
     $12X,'NON-SUNSPACE.  (A SPACE must have at least one'/                     -042L4 103
     $12X,'STANDARD INTERIOR-WALL to be considered a SUNSPACE.)')               -042L4 104
28554 CONTINUE                                                                  SPMISC  90
      IF (NIW1.EQ.0) GO TO 28800                                                SPMISC  91
C                                                                               SPMISC  92
C            ----INTERIOR WALL LOOP----                                         SPMISC  93
C                                                                               SPMISC  94
      DO 28600 IW1 = 1,NIW1                                                     SPMISC  95
      MI = IA(<MZINT>+IW1-1)                                                    SPMISC  96
C            INIT NO. OF SOLAR TRANSFER BLOCKS                                  SPMISC  97
      <NIWLSTF> = 0                                                             SPMISC  98
C            SET INT WALL ID, <IWSSPID>.                                        SPMISC  99
      MZADJ = <MZIN>                                                            SPMISC 100
      IF (MZ.EQ.<MZIN>) MZADJ = <MZNEXTTO>                                      SPMISC 101
      MZSAV = MZ                                                                SPMISC 102
      MZ = MZADJ                                                                SPMISC 103
      ISSPAJ = <SUNSPACE>                                                       SPMISC 104
      <IWSSPID> = 0                                                             SPMISC 105
      IF (<IW-TYPE>.NE.1) GO TO 28550                                           SPMISC 106
      IF ((ISSP.EQ.1.AND.ISSPAJ.NE.1).OR.(ISSP.NE.1.AND.ISSPAJ.EQ.1))           SPMISC 107
     .   <IWSSPID> = 1                                                          SPMISC 108
28550 CONTINUE                                                                  SPMISC 109
      IF (<IWSSPID>.EQ.0) GO TO 28568                                           SPMISC 110
C              INCREMENT NO. OF COMMON WALLS WITH CONVECTION                    SPMISC 111
      MP = <MIWPROP>                                                            SPMISC 112
      MWP = <MPEXPAR>                                                           SPMISC 113
      IF (MWP.EQ.0) GO TO 28568                                                 SPMISC 114
      IF (<AIR-FLOW-TYPE>.GE.2) NWCONV = NWCONV + 1                             SPMISC 115
28568 CONTINUE                                                                  SPMISC 116
      IF (<IWSSPID>.EQ.1.AND.<SUNSPACE>.EQ.0) <SUNSPACE> = 2                    SPMISC 117
C              SAVE MULTIPLIER AND NAME OF THIS SPACE                           SPMISC 118
      DO 28570 II = 1,8                                                         -042L4 105
28570 INADJ(II) = <IZNM>                                                        -042L4 106
      ZMNXT = <ZMULT>                                                           SPMISC 121
      ISSPAJ = <SUNSPACE>                                                       SPMISC 122
      MZ = MZSAV                                                                SPMISC 123
C              INTERIOR WINDOW MESSAGES                                         SPMISC 124
      IF (MZ.NE.<MZIN>) GO TO 28590                                             SPMISC 125
      NIWN1 = <NIWIN>                                                           SPMISC 126
      IF (NIWN1.EQ.0) GO TO 28590                                               SPMISC 127
C                                                                               SPMISC 128
C              ----INTERIOR WINDOW LOOP----                                     SPMISC 129
C                                                                               SPMISC 130
      MWI = <MIWIN>                                                             SPMISC 131
      DO 28589 IWN1 = 1,NIWN1                                                   SPMISC 132
      IF (<IW-TYPE>.EQ.1) GO TO 28581                                           SPMISC 133
      IWTYP = <IW-TYPE>                                                         SPMISC 134
      CALL MSGSIM(-3,0,0,0,0)                                                   SPMISC 135
      WRITE(IOUTPT,98581) (<IWINM>,II=1,8),(<IWNM>,II=1,8),                     -042L4 107
     .   (IIWTYP(II,IWTYP),II=1,4)                                              -042L4 108
98581 FORMAT(                                                                   -042L4 109
     $12X,'WINDOW ',8A4,' is on an INTERIOR WALL ',8A4/                         -042L4 110
     $12X,'of TYPE = ',8A4/                                                     -042L4 111
     $12X,'thus, this WINDOW will be ignored.')                                 -042L4 112
      GO TO 28589                                                               SPMISC 142
28581 IF (ISSP.NE.1.OR.ISSPAJ.NE.1) GO TO 28583                                 SPMISC 143
      CALL MSGSIM(-3,0,0,0,0)                                                   SPMISC 144
      WRITE(IOUTPT,98582) (<IWINM>,II=1,8),(<IWNM>,II=1,8)                      -042L4 113
98582 FORMAT(                                                                   -042L4 114
     $12X,'WINDOW ',8A4,' is on INTERIOR WALL ',8A4/                            -042L4 115
     $12X,'which is between two SUNSPACES.'/                                    -042L4 116
     $12X,'As a result this WINDOW will be ignored.')                           -042L4 117
      GO TO 28589                                                               SPMISC 150
28583 IF (ISSP.NE.0.OR.ISSPAJ.NE.0) GO TO 28589                                 SPMISC 151
      CALL MSGSIM(-3,0,0,0,0)                                                   SPMISC 152
      WRITE(IOUTPT,98583) (<IWINM>,II=1,8), (<IWNM>,II=1,8)                     -042L4 118
98583 FORMAT(                                                                   -042L4 119
     $12X,'WINDOW ',8A4,' is on INTERIOR WALL ',8A4/                            -042L4 120
     $12X,'which is between two non-SUNSPACES.  As a result'/                   -042L4 121
     $12X,'this WINDOW will be ignored.  Heat transfer will'/                   -042L4 122
     $12X,'be calculated only for WINDOWS in a STANDARD-TYPE'/                  -042L4 123
     $12X,'INTERIOR-WALL between a SUNSPACE and a non-SUNSPACE')                -042L4 124
C                                                                               SPMISC 160
28589 MWI = MWI + MWNLEN                                                        SPMISC 161
28590 CONTINUE                                                                  SPMISC 162
C            SKIP TO NEXT INT WALL IF THIS IS NOT A SUNSPACE                    SPMISC 163
      IF (ISSP.NE.1) GO TO 28600                                                SPMISC 164
C              CAUTION FOR COMMON WALL NOT DEFINED IN A SUNSPACE                SPMISC 167
      IF (<IWSSPID>.NE.1.OR.MZ.EQ.<MZIN>) GO TO 28650                           SPMISC 168
      CALL MSGSIM(-3,0,0,0,0)                                                   SPMISC 169
      WRITE(IOUTPT,28640) (<IWNM>,II=1,8),(<IZNM>,II=1,8),                      -042L4 125
     .  (INADJ(II),II=1,8),(INADJ(II),II=1,8)                                   -042L4 126
28640 FORMAT(                                                                   -042L4 127
     $12X,'INTERIOR-WALL ',8A4,' is between SUNSPACE ',8A4/                     -042L4 128
     $12X,'and SPACE ',8A4/                                                     -042L4 129
     $12X,'Since the INTERIOR-WALL was defined in ',8A4,' it'/                  -042L4 130
     $12X,'is important that SPACE be correctly positioned with'/               -042L4 131
     $12X,'respect to the SUNSPACE to obtain an accurate calculation'/          -042L4 132
     $12X,'of solar radiation incident on the WALL from exterior'/              -042L4 133
     $12X,'WINDOWS in the SUNSPACE.')                                           -042L4 134
28650 CONTINUE                                                                  SPMISC 180
C              WARNING IF MULTIPLIER OF ADJACENT SPACE IS NOT 1                 SPMISC 181
      IF (ZMNXT.EQ.1.0.OR.ISSPAJ.NE.2) GO TO 28600                              SPMISC 182
      CALL MSGSIM(-2,0,0,0,0)                                                   SPMISC 183
      WRITE(IOUTPT,28770)                                                       -042L4 135
     .   (INADJ(II),II=1,4), (<IZNM>,II=1,8), ZMNXT                             -042L4 136
28770 FORMAT(                                                                   -042L4 137
     $12X,'SPACE ',8A4,', which is NEXT-TO SUNSPACE ',8A4,','/                  -042L4 138
     $12X,'has a MULTIPLIER of ',F5.1,'.'/                                      -042L4 139
     $12X,'A MULTIPLIER different from 1.0 may cause an inaccurate'/            -042L4 140
     $12X,'calculation of heat transfer from the SUNSPACE.')                    -042L4 141
28600 CONTINUE                                                                  SPMISC 191
28800 CONTINUE                                                                  SPMISC 192
C            IF THIS IS A SUNSP, INCREMENT TOT LENGTH OF STF ARRAYS             SPMISC 193
      IF (NWCONV.LE.1) GO TO 28805                                              SPMISC 195
      CALL MSGSIM(-1,0,0,0,0)                                                   SPMISC 196
      WRITE (IOUTPT,28802) (<IZNM>,II=1,8),NWCONV                               -042L4 142
28802 FORMAT(                                                                   -042L4 143
     $12X,'SPACE ',8A4,' has ',I3,' SUNSPACE common WALLs with'/                -042L4 144
     $12X,'convective heat transfer (AIR-FLOW-TYPE=FORCED-RECIRC,'/             -042L4 145
     $12X,'FORCED-OA-PREHT,FREE-RECIRC or FREE-DOORWAY).  At most one'/         -042L4 146
     $12X,'common WALL with convective transfer is allowed in a SPACE.')        -042L4 147
      Call MessageBox( NULL,'Two walls with convection in SUNSPACE '            -051   103
     &  //'  ABORTING'//char(0),'SPMISC Errors'//char(0), MB_OK                 -051   104
     &  + MB_ICONSTOP+MB_TASKMODAL )                                            -051   105
      Return                                                                    -050x   21
28805 CONTINUE                                                                  SPMISC 204
28000 MZ = MZ + MZLEN                                                           SPMISC 205
C                                                                               SPMISC 211
C            ZONE LOOP NO. 2 -- FOR SUNSPACE COMMON WALLS, GET NET AREA         SPMISC 212
C            EXCLUDING WINDOWS. FOR COMMON WALLS AND WINDOWS, GET PTR           SPMISC 213
C            TO BEGINNING OF STF BLOCKS (SEE SUBR. IWSOL FOR STRUCTURE          SPMISC 214
C            OF STF BLOCK)                                                      SPMISC 215
C                                                                               SPMISC 216
      LSTFT = 0                                                                 -036    16
      ISTFB = MLAST + 1                                                         -036    17
      MST = ISTFB                                                               SPMISC 217
      MZ = ISPB                                                                 SPMISC 218
      DO 30000 IZ = 1,NSP                                                       SPMISC 219
C            SKIP IF NOT A SUNSP                                                SPMISC 220
      IF (<SUNSPACE>.NE.1) GO TO 30000                                          SPMISC 221
C              SKIP IF NO EXT WINS IN THIS SPACE                                SPMISC 222
      IF (<NEXWIN>.EQ.0) GO TO 30000                                            SPMISC 223
      NEW1 = <NEXTS>                                                            SPMISC 224
      MX = <MZEXT>                                                              SPMISC 225
C            INIT EXT WIN CTR                                                   SPMISC 226
      JEXWIN = 0                                                                SPMISC 227
C                                                                               SPMISC 228
C            ----EXT WALL LOOP----                                              SPMISC 229
C                                                                               SPMISC 230
      DO 30900 IEW1 = 1,NEW1                                                    SPMISC 231
      NW1 = <NWIN>                                                              SPMISC 232
      IF (NW1.EQ.0) GO TO 30900                                                 SPMISC 233
C            SKIP SPECIAL EXT WALLS (TROMBE WALL, ETC)                          SPMISC 234
      IF (<IEWTYPE>.GT.2) GO TO 30900                                           SPMISC 235
      MWI = <MXWIN>                                                             SPMISC 236
C                                                                               SPMISC 237
C            ----EXT WINDOW LOOP----                                            SPMISC 238
C                                                                               SPMISC 239
      DO 30800 IW1 = 1,NW1                                                      SPMISC 240
      JEXWIN = JEXWIN + 1                                                       SPMISC 241
C            INIT CTR OF COMMON WALL SURFACES (INT WIN, OPAQUE PART OF          SPMISC 242
C            INT WALL) IN THIS SUNSP                                            SPMISC 243
      JIS = 0                                                                   SPMISC 244
C              CAUTION FOR MULT NOT 1 ON WINDOW IN SUNSP EXTERIOR-WALL          SPMISC 245
      IF (<GMULT>.EQ.1.0) GO TO 30200                                           SPMISC 246
      CALL MSGSIM(-3,0,0,0,0)                                                   SPMISC 247
      WRITE(IOUTPT,30100) (<IWINM>,II=1,8),(<IXSNM>,II=1,8),<GMULT>             -042L4 148
30100 FORMAT(                                                                   -042L4 149
     $12X,'WINDOW ',8A4,', in SUNSPACE EXTERIOR-WALL ',8A4/                     -042L4 150
     $12X,'has MULTIPLIER = ',F8.1/                                             -042L4 151
     $12X,'A MULTIPLIER different from 1.0 may cause an inaccurate'/            -042L4 152
     $12X,'calculation of the amount of solar radiation from this'/             -042L4 153
     $12X,'WINDOW which strikes the INTERIOR-WALLs of the SUNSPACE.')           -042L4 154
30200 CONTINUE                                                                  SPMISC 255
C              ERROR FOR SUNSP EXTERIOR WIN WITH SOL-TRANS-SCH BUT NO           SPMISC 256
C              SHADING-SCHEDULE                                                 SPMISC 257
      IF (<SOL-TRANS-SCH>.EQ.0) GO TO 30250                                     SPMISC 258
      IF (<KGCURT>.NE.0) GO TO 30250                                            SPMISC 259
      CALL MSGSIM(-1,0,0,0,0)                                                   SPMISC 260
      WRITE (IOUTPT,30240) (<IWINM>,II=1,8),(<IXSNM>,II=1,8)                    -042L4 155
30240 FORMAT(12X,7HWINDOW ,8A4,28H, IN SUNSPACE EXTERIOR-WALL ,8A4/             -042L4 156
     1 12X,44HHAS A SOL-TRANS-SCH BUT NO SHADING-SCHEDULE. /                    -042L4 157
     2 12X,43HSPECIFY A SHADING-SCHEDULE FOR THIS WINDOW. )                     -042L4 158
      Call MessageBox( NULL,'Missing SHADING-SCHEDULE on SUNSPACE '             -051   106
     &  //'WINDOW -  ABORTING'//char(0),'SPMISC Errors'//char(0), MB_OK         -051   107
     &  + MB_ICONSTOP+MB_TASKMODAL )                                            -051   108
      Return                                                                    -050x   22
30250 CONTINUE                                                                  SPMISC 266
C              WARNING IF SHADING-COEF RATHER THAN GLASS-TYPE-CODE USED         SPMISC 267
C              FOR A SUNSPACE EXTERIOR WINDOW                                   SPMISC 268
      MR = <MWIPRP>                                                             SPMISC 269
      IF (<GSHACO>.EQ.1.) GO TO 30270                                           SPMISC 270
      CALL MSGSIM(-2,0,0,0,0)                                                   SPMISC 271
      WRITE (IOUTPT,30260) (<IWINM>,II=1,8),(<IXSNM>,II=1,8)                    -042L4 159
30260 FORMAT(                                                                   -042L4 160
     $12X,'WINDOW ',8A4,', in SUNSPACE EXTERIOR-WALL ',8A4/                     -042L4 161
     $12X,'has SHADING-COEF specified rather than GLASS-TYPE-CODE.'/            -042L4 162
     $12X,'This may cause an inaccurate calculation of the solar'/              -042L4 163
     $12X,'radiation distribution in the SUNSPACE.')                            -042L4 164
30270 CONTINUE                                                                  SPMISC 278
      NIW1 = <NINTS>                                                            SPMISC 279
      IF (NIW1.EQ.0) GO TO 30000                                                SPMISC 280
C              SAVE EXTERIOR WINDOW POINTER                                     SPMISC 281
      MWIEXT = MWI                                                              SPMISC 282
C                                                                               SPMISC 283
C            ----INT WALL LOOP----                                              SPMISC 284
C                                                                               SPMISC 285
      DO 30700 IW2 = 1,NIW1                                                     SPMISC 286
      MI = IA(<MZINT>+IW2-1)                                                    SPMISC 287
C            SKIP IF THIS IS NOT A COMMON WALL                                  SPMISC 288
      IF (<IWSSPID>.NE.1) GO TO 30700                                           SPMISC 289
      NIWN1 = <NIWIN>                                                           SPMISC 290
      IF (NIWN1.EQ.0) GO TO 30650                                               SPMISC 291
      MWI = <MIWIN>                                                             SPMISC 292
C                                                                               SPMISC 293
C            ----INT WINDOW LOOP----                                            SPMISC 294
C                                                                               SPMISC 295
      DO 30600 IWN1 = 1,NIWN1                                                   SPMISC 296
      JIS = JIS + 1                                                             SPMISC 297
C            PTR TO BEG OF SOLAR TRANSFER BLOCKS FOR THIS INT WIN               SPMISC 298
C            AND NO. OF BLOCKS                                                  SPMISC 299
      <MIWNSTF> = MST + (JIS-1)*MSTLEN*<NEXWIN>                                 SPMISC 300
      <NIWNSTF> = <NEXWIN>                                                      SPMISC 301
C              DEBUG PRINT                                                      SPMISC 302
      IF(IREPRT(1,35).NE.0)                                                     IREPRT 167
     1  WRITE(IOUTPT,30599) (<IWINM>,II=1,4),IZ,MZ,NEW1,MR,NW1,IW1,             SPMISC 304
     2   JEXWIN,JIS,NIW1,MI,NIWN1,MWIEXT,MWI,IWN1,NIWN1,MST,MSTLEN,             SPMISC 305
     3   <NEXWIN>,<MIWNSTF>,<NIWNSTF>                                           SPMISC 306
30599 FORMAT(22H SPMISC -- INT WINDOW  ,4A4/                                    SPMISC 307
     1      48H IZ,MZ,NEW1,MR,NW1,IW1                          ,6I10/           SPMISC 308
     2      48H JEXWIN,JIS,NIW1,MI,NIWN1,MWIEXT                ,6I10/           SPMISC 309
     3      48H MWI,IWN1,NIWN1,MST,MSTLEN,NEXWIN               ,6I10/           SPMISC 310
     4      48H MIWNSTF,NIWNSTF                                ,2I10)           SPMISC 311
30600 MWI = MWI + MWNLEN                                                        SPMISC 312
30650 CONTINUE                                                                  SPMISC 313
C            PTR TO BEG OF STF BLOCKS AND NO. OF BLOCKS FOR THE OPAQUE          SPMISC 314
C            PART OF THIS INT WALL                                              SPMISC 315
      JIS = JIS + 1                                                             SPMISC 316
      <MIWLSTF> = MST + (JIS-1)*MSTLEN*<NEXWIN>                                 SPMISC 317
      <NIWLSTF> = <NEXWIN>                                                      SPMISC 318
30700 CONTINUE                                                                  SPMISC 319
      MWI = MWIEXT                                                              SPMISC 320
30800 MWI = MWI + MWNLEN                                                        SPMISC 321
30900 MX = MX + MXLEN                                                           SPMISC 322
      MST = MST + <NEXWIN>*JIS*MSTLEN                                           SPMISC 323
      LSTFT = LSTFT + <NEXWIN>*JIS*MSTLEN                                       -036    18
30000 MZ = MZ + MZLEN                                                           SPMISC 324
C           Allocate space for STF arrays                                       -036    19
      IF (LSTFT.NE.0) CALL GETBUF(IA,LSTFT,MLAST)                               -036    20
C                                                                               SPMISC 325
C            ZONE LOOP NO. 3 -- FIND <ARZ> = TOTAL INSIDE SURFACE AREA          SPMISC 326
C            OF EACH SPACE, <SABSARZ> = AREA * (SOLAR ABSORPTANCE) SUM          SPMISC 327
C            FOR ALL INSIDE SURFACES, <ABSFLR> = AREA-WEIGHTED SOLAR            SPMISC 328
C            ABSORPTANCE OF THE INSIDE FLOOR SURFACE, AND <SABSARW> =           SPMISC 329
C            AREA * (SOLAR ABSORPTANCE) SUM FOR THE INSIDE OF EACH              SPMISC 330
C            EXTERIOR WALL.  THESE QUANTITIES ARE USED IN CALCULATING           SPMISC 331
C            INTERIOR SOLAR IRRADIANCE FOR SUNSPACES (SEE SUBR. IWSOL)          SPMISC 332
C                                                                               SPMISC 333
      MZ = ISPB                                                                 SPMISC 334
      DO 33000 IZ = 1,NSP                                                       SPMISC 335
      AFLR = 0.                                                                 SPMISC 336
      <ABSFLR> = 0.                                                             SPMISC 337
      <ARZ> = 0.                                                                SPMISC 338
      NEW1 = <NEXTS>                                                            SPMISC 339
      IF (NEW1.EQ.0) GO TO 33150                                                SPMISC 340
      MX = <MZEXT>                                                              SPMISC 341
C                                                                               SPMISC 342
C            EXT WALL LOOP                                                      SPMISC 343
C                                                                               SPMISC 344
      DO 33100 IEW1 = 1,NEW1                                                    SPMISC 345
      AR = <XGSARE>*<XSMULT>                                                    SPMISC 346
      ARNET = <XSAREA>*<XSMULT>                                                 SPMISC 347
      <ARZ> = <ARZ> + AR                                                        SPMISC 348
      ANETAB = ARNET * <EW-INS-SOL-ABS>                                         SPMISC 349
      IF (<IEWTYPE>.EQ.1) AFLR = AFLR + AR                                      SPMISC 350
      IF (<IEWTYPE>.EQ.1) <ABSFLR> = <ABSFLR> + ANETAB                          SPMISC 351
      <SABSARZ> = <SABSARZ> + ANETAB                                            SPMISC 352
C            SKIP SPECIAL EXT WALLS                                             SPMISC 353
      IF (<IEWTYPE>.GT.2) GO TO 33100                                           SPMISC 354
      NEWIN1 = <NWIN>                                                           SPMISC 355
      IF (NEWIN1.EQ.0) GO TO 33250                                              SPMISC 356
      MWI = <MXWIN>                                                             SPMISC 357
C                                                                               SPMISC 358
C            ----EXT WINDOW LOOP----                                            SPMISC 359
C                                                                               SPMISC 360
      DO 33200 IEWIN1 = 1,NEWIN1                                                SPMISC 361
      AR = <WIAREA>*<GMULT>*<XSMULT>                                            SPMISC 362
      MR = <MWIPRP>                                                             SPMISC 363
C            EFFECTIVE ABSORPTANCE = DIFFUSE TRANSMITTANCE + ABSORPTANCE        SPMISC 364
      ABSAR = AR * (<CAM9> + <CAM10> + <CAM15>)*<GSHACO>                        SPMISC 365
      <SABSARW> = <SABSARW> + ABSAR                                             SPMISC 366
      IF (<IEWTYPE>.EQ.1) <ABSFLR> = <ABSFLR> + ABSAR                           SPMISC 367
      <SABSARZ> = <SABSARZ> + ABSAR                                             SPMISC 368
33200 MWI = MWI + MWNLEN                                                        SPMISC 369
33250 CONTINUE                                                                  SPMISC 370
      NDR1 = <NDOOR>                                                            SPMISC 371
      IF (NDR1.EQ.0) GO TO 33100                                                SPMISC 372
      MD = <MXDOOR>                                                             SPMISC 373
C                                                                               SPMISC 374
C            ----DOOR LOOP----                                                  SPMISC 375
C                                                                               SPMISC 376
      DO 33300 IDR1 = 1,NDR1                                                    SPMISC 377
      ABSAR = <DRAREA>*<DRMULT>*<XSMULT>*<DR-INS-SOL-ABS>                       SPMISC 378
      <SABSARW> = <SABSARW> + ABSAR                                             SPMISC 379
      <SABSARZ> = <SABSARZ> + ABSAR                                             SPMISC 380
      IF (<IEWTYPE>.EQ.1) <ABSFLR> = <ABSFLR> + ABSAR                           SPMISC 381
33300 MD = MD + MDRLEN                                                          SPMISC 382
33100 MX = MX + MXLEN                                                           SPMISC 383
33150 CONTINUE                                                                  SPMISC 384
C                                                                               SPMISC 385
                                                                                SPMISC 386
      NIW1 = <NINTS>                                                            SPMISC 387
      IF (NIW1.EQ.0) GO TO 33450                                                SPMISC 388
C                                                                               SPMISC 389
C            ----INT WALL LOOP----                                              SPMISC 390
C                                                                               SPMISC 391
      DO 33400 IW1 = 1,NIW1                                                     SPMISC 392
      MI = IA(<MZINT>+IW1-1)                                                    SPMISC 393
C              GET MULTIPLIER ON ADJACENT SPACE                                 SPMISC 394
      MZSAV = MZ                                                                SPMISC 395
      MZADJ = <MZNEXTTO>                                                        SPMISC 396
      IF (MZ.NE.<MZIN>) MZADJ = <MZIN>                                          SPMISC 397
      MZ = MZADJ                                                                SPMISC 398
        if ( MZ .gt. 0 )    then                                                -072     5
           ZMNEXT = <ZMULT>                                                     -072     6
        else                                                                    -072     7
           ZMNEXT = 1.0                                                         -072     8
        endif                                                                   -072     9
      MZ = MZSAV                                                                SPMISC 400
      ABS = <IW-INS-SOL-ABS1>                                                   SPMISC 401
      IF (MZ.NE.<MZIN>) ABS = <IW-INS-SOL-ABS2>                                 SPMISC 402
      <ARZ> = <ARZ> + <IWAR>*ZMNEXT                                             SPMISC 403
      <SABSARZ> = <SABSARZ> + ABS*<IWARNET>*ZMNEXT                              SPMISC 404
C            IWFLR IS 1 IF THIS INT WALL IS A FLOOR IN THIS SPACE               SPMISC 405
      IWFLR = 0                                                                 SPMISC 406
      IF ((MZ.EQ.<MZIN>.AND.<IWTYPE>.EQ.1).OR.                                  SPMISC 407
     .    (MZ.NE.<MZIN>.AND.<IWTYPE>.EQ.2)) IWFLR = 1                           SPMISC 408
      IF (IWFLR.EQ.1) AFLR = AFLR + <IWAR>*ZMNEXT                               SPMISC 409
      IF (IWFLR.EQ.1) <ABSFLR> = <ABSFLR> + ABS*<IWARNET>*ZMNEXT                SPMISC 410
      NIWN1 = <NIWIN>                                                           SPMISC 411
      IF (NIWN1.EQ.0) GO TO 33400                                               SPMISC 412
      MWI = <MIWIN>                                                             SPMISC 413
C                                                                               SPMISC 414
C            ----INT WINDOW LOOP----                                            SPMISC 415
C                                                                               SPMISC 416
      DO 33500 IIWN1 = 1,NIWN1                                                  SPMISC 417
      MR = <MWIPRP>                                                             SPMISC 418
      AR = <WIAREA> * <GMULT> * ZMNEXT                                          SPMISC 419
      if(<IGTYP>.EQ.-1) then                                                    WLIB1   67
      ABSAR = AR * (<CAM9> + <CAM10> + <CAM15>) * <GSHACO>                      SPMISC 421
      else                                                                      SPMISC 422
C              glazing is from window-4 library                                 SPMISC 423
      abst = 0.                                                                 SPMISC 424
      absar = 0.                                                                WLIB1   68
      nlay = <NLAYER>                                                           SPMISC 425
      do il = 1,nlay                                                            SPMISC 426
      abst = abst + <ABSHEMIS>                                                  SPMISC 427
      enddo                                                                     SPMISC 428
      absar = ar*(<TRHEMIS>+abst)                                               SPMISC 429
      endif                                                                     SPMISC 430
C                                                                               SPMISC 431
      if(IREPRT(1,35).ne.0.and.IREPRT(1,8).ne.0)                                IREPRT 168
     .  write(ioutpt,33999) <IGTYP>,nlay,abst,ar,                               SPMISC 433
     .  <TRHEMIS>,absar                                                         SPMISC 434
33999 format(' spmisc: igtyp,nlay,abst,ar,trhemis,absar=',2i5,4f10.3)           SPMISC 435
C                                                                               SPMISC 436
      <SABSARZ> = <SABSARZ> + ABSAR                                             SPMISC 437
      IF (IWFLR.EQ.1) <ABSFLR> = <ABSFLR> + ABSAR                               SPMISC 438
C              WARNING IF WINDOW MULTIPLIER NOT 1                               SPMISC 439
      IF (<SUNSPACE>.NE.1.OR.<GMULT>.EQ.1.0) GO TO 33500                        SPMISC 440
      CALL MSGSIM(-2,0,0,0,0)                                                   SPMISC 441
      WRITE(IOUTPT,33520) (<IWINM>,II=1,8), (<IWNM>,II=1,8), <GMULT>            -042L4 165
33520 FORMAT(                                                                   -042L4 166
     $12X,'WINDOW ',8A4,' on INTERIOR WALL ',8A4,' has'/                        -042L4 167
     $12X,'MULTIPLIER =',F5.1,'.  A MULTIPLIER different from 1.0 may'/         -042L4 168
     $12X,'cause inaccurate solar radiation transmission calculation.')         -042L4 169
33500 MWI = MWI + MWNLEN                                                        SPMISC 447
33400 CONTINUE                                                                  SPMISC 448
33450 CONTINUE                                                                  SPMISC 449
C                                                                               SPMISC 450
      NUG1 = <NSUG>                                                             SPMISC 451
      IF (NUG1.EQ.0) GO TO 33650                                                SPMISC 452
      MU = <MZUG>                                                               SPMISC 453
C                                                                               SPMISC 454
C            ----UNDERGROUND SURFACE LOOP----                                   SPMISC 455
C                                                                               SPMISC 456
      DO 33600 IUG1 = 1,NUG1                                                    SPMISC 457
      AR = <UGAREA> * <UGMULT>                                                  SPMISC 458
      <ARZ> = <ARZ> + AR                                                        SPMISC 459
      ABSAR = AR * <UG-INS-SOL-ABS>                                             SPMISC 460
      IF (<IUGTYPE>.EQ.1) AFLR = AFLR + AR                                      SPMISC 461
      IF (<IUGTYPE>.EQ.1) <ABSFLR> = <ABSFLR> + ABSAR                           SPMISC 462
33600 MU = MU + MULEN                                                           SPMISC 463
C                                                                               SPMISC 464
33650 CONTINUE                                                                  SPMISC 465
      <ABSFLR> = <ABSFLR> / (AFLR + 0.0001)                                     SPMISC 466
C              IF NO FLOOR, DEFAULT TO 0.7                                      SPMISC 467
      IF (AFLR.LE.0.0) <ABSFLR> = 0.7                                           SPMISC 468
33000 MZ = MZ + MZLEN                                                           SPMISC 469
      RETURN                                                                    SPMISC 470
      END                                                                       SPMISC 471
      SUBROUTINE  SUN1                                                          SUN1     2
C                                                                               SUN1     3
C              CALCULATES DAILY DATA ON SOLAR RADIATION                         SUN1     4
C                                                                               SUN1     5
      COMMON  /LOCALD/ STALAT, STALON, ITIMZ, BAZIM, BALTIT,                    /LOCALD/ 2
     1                 SSTALA, CSTALA, TSTALA, SBAZIM, CBAZIM                   /LOCALD/ 3
     2                 ,BXORG, BYORG, SHCOEF, TP1, TP2, WSTP1, WSTP2,           /LOCALD/ 4
     3                 WSHGT,WSHGTL(12),ISREFL,IHOLX                            HOLID1   2
      DIMENSION LOCALD(32)                                                      HOLID1   3
      EQUIVALENCE      (LOCALD(1),STALAT)                                       /LOCALD/ 7
      COMMON  /SUND/   ISUNUP, GUNDOG, HORANG, TDECLN, EQTIME, SOLCON,          /SUND/   2
     1                 ATMEXT, SKYDFF, RAYCOS(3), RDN,                          /SUND/   3
     2                 BSUN, DECLN, CD, SD, FSUNUP                              /SUND/   4
      COMMON /TIME  / IDOY, IDOW, IDSTF, ISCHR, ISCDAY, iDSdates(6),            -044e5r  1
     1                IMO, IDAY, IYR, IHR, CLOCK(10), IDSFLG,                   HOLID1   4
     2                MONDSC(12), MONLEN(12), MONSDA(12), IEODMR                /TIME/   4
C                                                                               SUN1     9
C              GET SIN,COS OF DAY OF YEAR/365                                   SUN1    10
      C1     = COS( .01721*FLOAT( IDOY ) )                                      SUN1    11
      S1     = SIN( .01721*FLOAT( IDOY ) )                                      SUN1    12
      S2     = 2.*S1*C1                                                         SUN1    13
      C2     = C1*C1-S1*S1                                                      SUN1    14
      C3     = C1*C2-S1*S2                                                      SUN1    15
      S3     = C1*S2+S1*C2                                                      SUN1    16
C              CALC TANGENT OF DECLINATION ANGLE                                SUN1    17
      DECLN = .00527-.4001*C1-.003996*C2-.004240*C3+.0672*S1                    SUN1    18
      TDECLN = TAN(DECLN)                                                       SUN1    19
C              CALC EQUATION OF TIME                                            SUN1    20
      EQTIME = .696E-4+.706E-2*C1-.0533*C2-.157E-2*C3-.122*S1-.156*S2           SUN1    21
     1         -.556E-2 * S3                                                    SUN1    22
C              CALC MODIFIED SOLAR CONSTANT (NOTE: THIS                         SUN1    23
C              DIFFERS FROM ACTUAL SOLAR CONSTANT)                              SUN1    24
      SOLCON = 368.44+24.52*C1-1.14*C2-1.09*C3+.58*S1-.18*S2+.28*S3             SUN1    25
C              IF SOUTHERN HEMISPHERE, SHIFT AIRMASS AND ATMOSPHERIC            SUN1    26
C              EXTINCTION CURVES BY 6 MONTHS.                                   SUN1    27
      IF (STALAT .GE. 0.)  GO TO 10                                             SUN1    28
      C1 = -C1                                                                  SUN1    29
      S1 = -S1                                                                  SUN1    30
      C3 = -C3                                                                  SUN1    31
      S3 = -S3                                                                  SUN1    32
   10 CONTINUE                                                                  SUN1    33
C              CALC ATMOSPHERIC EXTINCTION COEFFICIENT                          SUN1    34
      ATMEXT = .1717-.0344*C1+.0032*C2+.0024*C3-.0043*S1-.0008*S3               SUN1    35
C              CALCULATE SKY DIFFUSIVITY                                        SUN1    36
      SKYDFF = .0905-.0410*C1+.0073*C2+.0015*C3-.0034*S1+.0004*S2               SUN1    37
     1         - .0006*S3                                                       SUN1    38
C              CALC HOUR ANGLE OF SUNRISE                                       SUN1    39
c              Hour angle of sunrise                                            -38e     1
      TT = TSTALA * TDECLN                                                      -38e     2
      IF (ABS(TT) .LT. 1.) THEN                                                 -38e     3
        GUNDOG = ACOS(-TT)                                                      -38e     4
        IF (GUNDOG .LT. 0.)  GUNDOG = -GUNDOG                                   -38e     5
      ELSE                                                                      -38e     6
c              above the Arctic or below the Antarctic Circle                   -38e     7
        IF (TT .LT. 0.)  THEN                                                   -38e     8
          GUNDOG = 0.                                                           -38e     9
        ELSE                                                                    -38e    10
          GUNDOG = 3.141592654                                                  -38e    11
        ENDIF                                                                   -38e    12
      ENDIF                                                                     -38e    13
      DECLN = ATAN(TDECLN)                                                      SUN1    41
      CD = COS(DECLN)                                                           SUN1    42
      SD = SIN(DECLN)                                                           SUN1    43
      RETURN                                                                    SUN1    44
      END                                                                       SUN1    45
      SUBROUTINE  SUN3                                                          SUN3     2
C                                                                               SUN3     3
C              CALCULATES SOLAR DATA WHICH DEPENDS                              SUN3     4
C              ON ORIENTATION OF A SURFACE                                      SUN3     5
C                                                                               SUN3     6
      COMMON  /FILES / ISTNDF,ICTRL,IWEATH,ITDV,IDSNFL,ILDSO,ISYSO,             -044     1
     1                IREPFL,IHDFIL,IHRHDF,IOUTPT,IOVRL                         /FILES/  3
     2              , IPLTO, IPPFIL, ICECHR, ICECDT, ICECPR,                    /FILES/  4
     3                IHRREP(3), IHRPAS(2)                                      /FILES/  5
      COMMON  /REPORT/ IREPRT(4,37),IPRG,IUNIQV(100),IUNIQS(100),IUNIQL         BIGNAM   1
      COMMON  /LOCALD/ STALAT, STALON, ITIMZ, BAZIM, BALTIT,                    /LOCALD/ 2
     1                 SSTALA, CSTALA, TSTALA, SBAZIM, CBAZIM                   /LOCALD/ 3
     2                 ,BXORG, BYORG, SHCOEF, TP1, TP2, WSTP1, WSTP2,           /LOCALD/ 4
     3                 WSHGT,WSHGTL(12),ISREFL,IHOLX                            HOLID1   2
      DIMENSION LOCALD(32)                                                      HOLID1   3
      EQUIVALENCE      (LOCALD(1),STALAT)                                       /LOCALD/ 7
      COMMON  /DAYLT/ NDAYCF,IPHS,IZ,IHIT,MHHIT,IL,RHOAV,ATOT,ARHTOT,           /DAYLT/  2
     1                AR(3),AP(3),ARH(3),ARHP(3),NPH,NTH,WC(3),TMULT,           /DAYLT/  3
     2                TSOLNM,TVISDF,FRUP,ISHLOC,NWTOT,RHOCW,RHOFW,WAREA,        /DAYLT/  4
     3                IMREF,PHSUN,THSUN,PHSUND,THSUND,THSMIN,PHSMIN,            /DAYLT/  5
     4                THSMAX,PHSMAX,THSDEL,PHSDEL,H,NTHS,NPHS,NDFC,LWDC,        /DAYLT/  6
     5                BETA,W,IBZ,IWZ,ZENL,JZD,WBACLU(2,2),PF(7,5),              /DAYLT/  7
     6                VIEWVC(3),GLRNDX(2),WDAYIL(2,2),BACLUM(2),ITF(3),         /DAYLT/  8
     7                RDAYIL(2),RBACLU(2),GLRNEW(2),ETACLD,CDIRLW(24),          /DAYLT/  9
     8                CDIFLW(24),ODIFLW(24),SOLIC(12),TFAC,SPHSUN,              /DAYLT/ 10
     9                CPHSUN,PHWN,THWN,SPHWN,CPHWN,TOTIL(2),ATMMOI(12),         /DAYLT/ 11
     1                ATMTUR(12),XRAN,ALFAD,THRAT,PHRAT,SETPNT(2),              /DAYLT/ 12
     2                IZLSG,IZLSH,IZLSJM,IZLSJY,IZDREP,FPHRP(2),ZFTOT,          /DAYLT/ 13
     3                EINTSK(2,12,24),EINTSU(2,12,24),EDIRSK(2,12,24),          VISBL    2
     4                EDIRSU(2,12,24),FLCWSK(2,12),FLCWSU(2,12),                VISBL    3
     5                FLFWSK(2,12),FLFWSU(2,12),GILSK(2,10),GILSU(2,10),        VISBL    4
     6                WLUMSK(2,11,24),WLUMSU(2,11,24),AVWLSK(2,12,24),          VISBL    5
     7                AVWLSU(2,12,24),CHILSK(24),CHILSU(24),OHILSK(24),         VISBL    6
     8                DFSKHR(2,2),DFSUHR(2,2),SFSKHR(2,2),SFSUHR(2,2),          /DAYLT/ 19
     9                BFSKHR(2,2),BFSUHR(2,2),HISUNF,CHISKF,OHISKF,IZLSM        44d5br   1
      COMMON  /DAYL1/  ATMTU, ATMMO, TAU1                                       /DAYLT/ 21
     1               , TVISB, TH, PH, RAY(3), WNORM(3), TVISBR                  /DAYLT/ 22
      COMMON  /CONST/  DTOR, PIOVR2, PIOVR4, IBLNK, UNDEF, IUNDEF,              /CONST/  2
     1                 UNFILD, URAD, DEFIFR, DEFCFR, DEFINC, KWBTU              /CONST/  3
      REAL             KWBTU                                                    /CONST/  4
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     BLIND    2
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        FLOOR1   3
      COMMON  /SUND/   ISUNUP, GUNDOG, HORANG, TDECLN, EQTIME, SOLCON,          /SUND/   2
     1                 ATMEXT, SKYDFF, RAYCOS(3), RDN,                          /SUND/   3
     2                 BSUN, DECLN, CD, SD, FSUNUP                              /SUND/   4
      COMMON /TIME  / IDOY, IDOW, IDSTF, ISCHR, ISCDAY, iDSdates(6),            -044e5r  1
     1                IMO, IDAY, IYR, IHR, CLOCK(10), IDSFLG,                   HOLID1   4
     2                MONDSC(12), MONLEN(12), MONSDA(12), IEODMR                /TIME/   4
      COMMON  /WALLV/  SOLI,XGOLGE,FILMU,PCO,Q,T,CFM,C2,C3,                     /WALLV/  2
     1                 SUMXDT,SUMYDT,DT,XSXCMP,XSQCMP,ETA,                      /WALLV/  3
     2                 BG,RDIR,RDIF,RTOT,FFS,FFG,SOLDF1,SOLDF2,                 /WALLV/  4
     3                 SOLDF3,SOLDF4,SOLDF5,FFS0,FFG0,QIREW,MWDIR,              -044d5   1
     4                 ANGINCD                                                  -044d5   2
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
      COMMON        // AA(75 000 000)                                           -048ar   1
      INTEGER          IA(75 000 000)                                           -048ar   2
      EQUIVALENCE  (IA(1), AA(1))                                               //       4
      DIMENSION F1(8,3),F2(8,3),EPSL(7)                                         SUN3    18
      EQUIVALENCE (GH,SOLRAD),(DH,BSCC),(COSZ,RAYCOS(3)),(COSA,GAMMA),          SUN3    19
     1 (COSI,ETA)                                                               SUN3    20
      DATA DB0/434./                                                            SUN3    21
      DATA AW,ZWAW,PIHMAW,PIHPAW/.4363323,.872665,1.134464,2.007129/            SUN3    22
      DATA EPSL/1.056,1.253,1.586,2.134,3.230,5.980,10.080/                     SUN3    23
      DATA F1/-.011,-.038, .166, .419, .710, .857, .734, .421,                  SUN3    24
     1         .748,1.115, .909, .646, .025,-.370,-.073,-.661,                  SUN3    25
     2        -.080,-.109,-.179,-.262,-.290,-.279,-.228, .097/                  SUN3    26
      DATA F2/-.048,-.023, .062, .140, .243, .267, .231, .119,                  SUN3    27
     1         .073, .106,-.021,-.167,-.511,-.792,-1.18,-2.125,                 SUN3    28
     2        -.024,-.037,-.050,-.042,-.004, .076, .199, .446/                  SUN3    29
C                                                                               SUN3    30
      WT     = <XSTLT>                                                          SUN3    31
C              CALC DIFFUSE RADIATION REFLECTED FROM GROUND                     SUN3    32
      BG     =  <GNDREF>  * ( BSCC + RDNCC*RAYCOS(3) )                          SUN3    33
      IF (IFX.GE.7)  BG = <GNDREF>*SOLRAD                                       LDS2     5
C              CALCULATE ETA, THE COSINE OF THE ANGLE BETWEEN                   SUN3    35
C              THE SOLAR DIRECTION AND THE SURFACE OUTWARD                      SUN3    36
C              NORMAL.  GET GAMMA, THE COSINE OF THE WALL TILT.                 SUN3    37
      IF( ABS( WT )  .GT. 0.002 )  GO TO 110                                    SUN3    38
C              TILT = 0                                                         SUN3    39
      GAMMA  = 1.                                                               SUN3    40
      SWT = 0.                                                                  SUN3    41
      ETA    = RAYCOS(3)                                                        SUN3    42
      GO TO 240                                                                 SUN3    43
  110 IF( ABS( WT-1.5708 ) .GT. 0.002 )  GO TO 130                              SUN3    44
C              TILT = 90 DEG                                                    SUN3    45
      GAMMA  = 0.                                                               SUN3    46
      SWT    = 1.                                                               SUN3    47
      GO TO 140                                                                 SUN3    48
C              OTHERWISE                                                        SUN3    49
  130 GAMMA  = <CXSTLT>                                                         SUN3    50
      SWT    = <SXSTLT>                                                         SUN3    51
  140 WA     = <XSAZM>                                                          SUN3    52
      IF( ABS( WA ) .GT. 0.002 )  GO TO 150                                     SUN3    53
C              AZIMUTH = 0                                                      SUN3    54
      SWA    = 0.                                                               SUN3    55
      CWA    = 1.                                                               SUN3    56
      GO TO 230                                                                 SUN3    57
  150 IF( ABS( WA-1.5708 ) .GT. 0.002 )  GO TO 160                              SUN3    58
C              AZIMUTH = 90 DEG                                                 SUN3    59
      SWA    = 1.                                                               SUN3    60
      CWA    = 0.                                                               SUN3    61
      GO TO 230                                                                 SUN3    62
  160 IF( ABS( WA-3.1416 ) .GT. 0.002 )  GO TO 170                              SUN3    63
C              AZIMUTH = 180 DEG                                                SUN3    64
      SWA    = 0.                                                               SUN3    65
      CWA    = -1.                                                              SUN3    66
      GO TO 230                                                                 SUN3    67
  170 IF (ABS(WA-4.7124) .GT. 0.002) GO TO 180                                  SUN3    68
C              AZIMUTH = 270 DEGREES                                            SUN3    69
      SWA    = -1.                                                              SUN3    70
      CWA    = 0.                                                               SUN3    71
      GO TO 230                                                                 SUN3    72
C              OTHERWISE                                                        SUN3    73
  180 SWA    = <SXSAZM>                                                         SUN3    74
      CWA    = <CXSAZM>                                                         SUN3    75
C              CALCULATE ETA IN GENERAL CASE                                    SUN3    76
  230 ETA    = (RAYCOS(1)*SWA+RAYCOS(2)*CWA)*SWT+RAYCOS(3)*GAMMA                SUN3    77
C              ETA < 0 MEANS NO DIRECT SOLAR                                    SUN3    78
  240 IF( ETA .GT. 0. )  GO TO 260                                              SUN3    79
      RDIR   = 0.                                                               SUN3    80
      GO TO 270                                                                 SUN3    81
C              CALCULATE DIRECT RADIATION ON WALL                               SUN3    82
  260 RDIR   = RDNCC * ETA                                                      SUN3    83
  270 CONTINUE                                                                  VISBL 1090
C              CALCULATE DIFFUSE RADIATION ON WALL                              VISBL 1091
C                                                                               SUN3    89
C            PEREZ MODEL FOR DIFFUSE RADIATION ON SLOPED SURFACES.              SUN3    90
C            SEE R. PEREZ, R. SEALS, P. INEICHEN, R. STEWART, AND               SUN3    91
C            D. MENICUCCI, "A NEW SIMPLIFIED VERSION OF THE PEREZ               SUN3    92
C            DIFFUSE IRRADIANCE MODEL FOR TILTED SURFACES", SOLAR               SUN3    93
C            ENERGY 39,221-231,1987.  COMMUNICATED BY A. ZELENKA,               SUN3    94
C            SWISS METEOROLOGICAL INSTITUTE, ZURICH, VIA ISIDORE                SUN3    95
C            MARCUS OF EMPA, DUBENDORF, SWITZERLAND.                            SUN3    96
C                                                                               SUN3    97
C            PARAMETER LIST                            DOE-2 VARIABLE           SUN3    98
C            --------------                            --------------           SUN3    99
C            GH    = GLOBAL HORIZONTAL (MEAS OR CALC)  SOLRAD                   SUN3   100
C            DH    = DIFFUSE    "        "        "    BSCC                     SUN3   101
C            COSI  = COS(INCIDENCE ANGLE OF DIR BEAM)  ETA                      SUN3   102
C            COSA  = COS(SURFACE TILT ANGLE)           GAMMA                    SUN3   103
C            ZD    = SOLAR ZENITH ANGLE (DEGREES)                               SUN3   104
C            DB0   = ANNUAL AVERAGE SOLAR CONSTANT (BTUH/SF)                    SUN3   105
C            AM    = RELATIVE AIRMASS (KASTEN)                                  SUN3   106
C                                                                               SUN3   107
C                                                                               SUN3   108
      FFS0 = 0.                                                                 SUN3   109
      IF(DH.LE.0.) GO TO 7                                                      SUN3   110
C                                                                               SUN3   111
      Z = PIOVR2 - PHSUN                                                        SUN3   112
      ZD = 90.0 - PHSUND                                                        SUN3   113
      THC = ACOS(COSI)                                                          SUN3   114
C                                                                               SUN3   115
C            RELATIVE AIR MASS (BALTIT/3281 IS BUILDING ALT IN KM)              SUN3   116
C                                                                               SUN3   117
      AMH = 1.0-.1*BALTIT/3281.                                                 SUN3   118
      AM  = AMH/COSZ                                                            SUN3   119
      IF(ZD.GT.75.) AM = AMH/(COSZ + 0.15*(93.885-ZD)**(-1.235))                SUN3   120
C                                                                               SUN3   121
C            MODEL PARAMETERS                                                   SUN3   122
C                                                                               SUN3   123
      DB = (GH-DH)/COSZ                                                         SUN3   124
      EPS = (DB+DH)/DH                                                          SUN3   125
      DELT = DH*AM/DB0                                                          SUN3   126
C                                                                               SUN3   127
C            CIRCUMSOLAR (F1P) AND HORIZON (F2P) BRIGHTENING COEFFS             SUN3   128
C                                                                               SUN3   129
      DO 1 K=1,7                                                                SUN3   130
      IF(EPS.LT.EPSL(K)) GO TO 2                                                SUN3   131
    1 CONTINUE                                                                  SUN3   132
    2 F1P = F1(K,1) + F1(K,2)*DELT + F1(K,3)*Z                                  SUN3   133
      F2P = F2(K,1) + F2(K,2)*DELT + F2(K,3)*Z                                  SUN3   134
C                                                                               SUN3   135
C            GEOMETRY OF (ALSO PARTLY HIDDEN) 25-DEG HELIOS ON SLOPE            SUN3   136
C            NOTE: COSI<0 ALLOWED                                               SUN3   137
C                                                                               SUN3   138
      IF(Z.LT.PIHMAW) THEN                                                      SUN3   139
        GHIH=COSZ                                                               SUN3   140
        PSIH=1.                                                                 SUN3   141
      ELSE                                                                      SUN3   142
        PSIH=(PIHPAW-Z)/ZWAW                                                    SUN3   143
        GHIH=PSIH*SIN(AW*PSIH)                                                  SUN3   144
      END IF                                                                    SUN3   145
C                                                                               SUN3   146
      IF(THC.GT.PIHPAW) THEN                                                    SUN3   147
        GHIC=0.                                                                 SUN3   148
      ELSE                                                                      SUN3   149
        IF(THC.GT.PIHMAW) THEN                                                  SUN3   150
          PSIC=(PIHPAW-THC)/ZWAW                                                SUN3   151
          GHIC=PSIH*PSIC*SIN(AW*PSIC)                                           SUN3   152
        ELSE                                                                    SUN3   153
          GHIC=PSIH*COSI                                                        SUN3   154
        END IF                                                                  SUN3   155
      END IF                                                                    SUN3   156
C                                                                               SUN3   157
C            SKY FORM FACTOR (WITHOUT SHADING) FOR THIS WALL AND FOR            SUN3   158
C            WINDOWS AND DOORS IN THIS WALL                                     SUN3   159
C                                                                               SUN3   160
C              (for TILT <0 assume symetric about 0 - AZ independent)           -030    27
      FFS0 = 0.5*(1.+COSA)*(1.-F1P) + GHIC*F1P/GHIH + F2P*ABS(<SXSTLT>)         -030    28
C                                                                               SUN3   162
    7 CONTINUE                                                                  SUN3   163
C                                                                               SUN3   164
C            GROUND FORM FACTOR (WITHOUT SHADING)                               SUN3   165
C                                                                               SUN3   166
      FFG0 = 0.5*(1.0-GAMMA)                                                    SUN3   167
C                                                                               SUN3   168
C            FORM FACTORS WITH SHADING FOR THIS WALL (FORM FACS FOR             SUN3   169
C            WINDOWS AND DOORS W/SHADING CALCD IN CALWIN, CALEXT)               SUN3   170
C            HERE, EWSKYFF AND EWGNDFF ARE RATIOS OF SHADED TO                  SUN3   171
C            UNSHADED INCIDENT RADIATION (SEE SUBR FFDIF)                       SUN3   172
      FFS = FFS0*<EWSKYFF>                                                      VISBL 1092
      FFG = FFG0*<EWGNDFF>                                                      VISBL 1093
  320 RDIF   = FFS*BSCC + FFG*BG                                                SUN3   175
C                                                                               SUN3   178
      IF (IREPRT(1,35).NE.0.AND.IREPRT(1,6).NE.0)                               IREPRT 169
     1 WRITE(IOUTPT,997) IHR,<EWSKYFF>,<EWGNDFF>,FFS0,FFG0,FFS,FFG,             SUN3   180
     1  GAMMA,BSCC,BG,RDIF,RDIR                                                 SUN3   181
  997 FORMAT(/,60H SUN3--IHR,-SKY-,-GND-,FS0,FG0,FFS,FFG,GM,BSCC,BG,RDIF        SUN3   182
     1,RDIR ,/,I3,11F10.3)                                                      SUN3   183
C                                                                               SUN3   184
      RETURN                                                                    SUN3   185
      END                                                                       SUN3   186
      FUNCTION SUN4(G,I)                                                        SUN4     2
      DIMENSION AC0(5,4)                                                        SUN4     3
      DATA AC0/                                                                 SUN4     4
     +   0.35004,-0.91877,0.98234,1.99380,-1.61263,                             SUN4     5
     +   0.05009,0.77294,-0.32141,-1.46610,0.70276,                             SUN4     6
     +   0.0,0.0,0.0,0.0,0.0,                                                   SUN4     7
     +   0.03309,0.65597,-0.47879,-0.54086,0.79880/                             SUN4     8
      IF (ABS(G) .GT. 0.01) GO TO 10                                            SUN4     9
      SUN4 = AC0(1,I)                                                           SUN4    10
      RETURN                                                                    SUN4    11
 10   IF (ABS(1.0 - G) .GT. 0.01) GO TO 20                                      SUN4    12
      SUN4 = AC0(1,I) + AC0(2,I) + AC0(3,I) + AC0(4,I) + AC0(5,I)               SUN4    13
      RETURN                                                                    SUN4    14
 20   SUN4 = AC0(1,I) + G * (AC0(2,I) + G * (AC0(3,I)                           SUN4    15
     +                + G * (AC0(4,I) + G * AC0(5,I))))                         SUN4    16
      RETURN                                                                    SUN4    17
      END                                                                       SUN4    18
      FUNCTION SUN5(T,ST,CT,I,J)                                                SUN5     2
      DIMENSION AC(6,6,4),AC1(36),AC2(36),AC3(36),AC4(36)                       SUN5     3
      EQUIVALENCE (AC1(1),AC(1,1,1)),(AC2(1),AC(1,1,2))                         SUN5     4
      EQUIVALENCE (AC3(1),AC(1,1,3)),(AC4(1),AC(1,1,4))                         SUN5     5
      DATA AC1/                                                                 SUN5     6
     +   12.59366,-9.98191,-12.43478,1.97836,0.22468,1.31937,                   SUN5     7
     +   -45.91168,24.70555,55.56074,-7.48768,-13.21372,-0.59821,               SUN5     8
     +   38.85154,-18.81266,-48.52338,6.38312,12.75533,-0.20961,                SUN5     9
     +   14.07018,-14.32047,-11.48533,3.35534,-2.42560,3.05463,                 SUN5    10
     +   9.40857,-8.62898,-8.01371,1.50318,-1.76986,1.59468,                    SUN5    11
     +   -9.90177,12.19602,7.03467,-3.01013,2.67383,-2.78174/                   SUN5    12
      DATA AC2/                                                                 SUN5    13
     +   -2.51850,-2.44570,2.97276,4.38031,-0.64668,-1.79720,                   SUN5    14
     +   15.34737,8.24591,-16.39636,-16.73744,7.31595,1.25147,                  SUN5    15
     +   -13.53230,-7.08930,13.86531,13.90832,-6.64658,-0.22778,                SUN5    16
     +   -3.28912,-0.59460,2.14594,5.29699,-1.14064,-4.49897,                   SUN5    17
     +   -0.80291,-1.89539,0.42349,2.94920,0.93730,-2.48558,                    SUN5    18
     +   2.93086,-0.56222,-2.02903,-3.81694,1.67449,4.08144/                    SUN5    19
      DATA AC3/                                                                 SUN5    20
     +   -3.64173,6.77614,2.19944,-3.51753,1.29415,0.37652,                     SUN5    21
     +   2.57133,-10.14488,-6.09258,12.13594,0.47518,0.01927,                   SUN5    22
     +   -0.66146,6.23738,5.41890,-10.00503,-1.20689,-0.22249,                  SUN5    23
     +   -4.09269,7.54185,3.31742,-5.61234,2.3063,1.69307,                      SUN5    24
     +   -4.11279,6.56826,2.72881,-2.72996,1.22243,0.79489,                     SUN5    25
     +   2.60907,-5.37163,-2.34564,4.77569,-2.21816,-1.71126/                   SUN5    26
      DATA AC4/                                                                 SUN5    27
     +   -6.59626,5.92150,7.26777,-2.85477,-0.73989,0.09030,                    SUN5    28
     +   27.21083,-21.90986,-33.04084,12.14584,6.23686,-1.03645,                SUN5    29
     +   -23.59562,18.57469,29.20569,-10.33853,-5.97613,1.03758,                SUN5    30
     +   -6.32428,7.08691,5.96799,-2.73926,0.95072,-0.18174,                    SUN5    31
     +   -4.56006,4.27596,4.87285,-1.74926,-0.34463,0.04908,                    SUN5    32
     +   3.65081,-4.89544,-2.54840,1.82048,-1.52749,0.27046/                    SUN5    33
      IF (ABS(T - 1.5708) .GT. 0.01) GO TO 10                                   SUN5    34
      SUN5 = AC(1,I,J) + AC(2,I,J) - AC(5,I,J) - AC(6,I,J)                      SUN5    35
      RETURN                                                                    SUN5    36
 10   IF (T .GT. 0.01) GO TO 20                                                 SUN5    37
      SUN5 = AC(1,I,J) + AC(3,I,J) + AC(5,I,J)                                  SUN5    38
      RETURN                                                                    SUN5    39
C              THE FOLLOWING IS A1+A2*SIN(T)+A3*COS(T)+A4*SIN(2T)+              SUN5    40
C              A5*COS(2T)+A6*SIN(3T) REWRITTEN FOR SPEED USING                  SUN5    41
C              SIN(2T)=2*SIN(T)*COS(T), COS(2T)=1-2*SIN(T)**2, AND              SUN5    42
C              SIN(3T)=3*SIN(T)-4*SIN(T)**3                                     SUN5    43
   20 SUN5=AC(1,I,J) + AC(5,I,J) + AC(3,I,J)*CT + ST*(AC(2,I,J) +               SUN5    44
     & 3.*AC(6,I,J) + 2.*(AC(4,I,J)*CT-ST*(AC(5,I,J)+2.*AC(6,I,J)*ST)))         SUN5    45
      RETURN                                                                    SUN5    46
      END                                                                       SUN5    47
      SUBROUTINE SWITCH(A, B, C, D)                                             SWITCH   2
C                                                                               SWITCH   3
C              EXCHANGE A WITH B AND C WITH D                                   SWITCH   4
C                                                                               SWITCH   5
      Q      = B                                                                SWITCH   6
      B      = A                                                                SWITCH   7
      A      = Q                                                                SWITCH   8
      Q      = D                                                                SWITCH   9
      D      = C                                                                SWITCH  10
      C      = Q                                                                SWITCH  11
      RETURN                                                                    SWITCH  12
      END                                                                       SWITCH  13
      SUBROUTINE TCYCLE(TE,TL,TIMTE,TIMTL,TCYC)                                 DDAY1  116
C                                                                               TCYCLE   3
C              CALCULATES 24 HOUR TEMPERATURE CYCLES USING COSINE               TCYCLE   4
C              ASSUMES HOUR OF LOW IS AFTER HOUR OF HIGH                        TCYCLE   5
C                                                                               TCYCLE   6
      DIMENSION TCYC(24)                                                        DDAY1  117
      TRANG  = 0.5*(TL-TE)                                                      TCYCLE  10
      TAV    = 0.5*(TL+TE)                                                      TCYCLE  11
C              IS THIS A STEADY STATE CYCLE?                                    TCYCLE  12
      IF (ABS(TRANG) .GT. 0.001) GO TO 11                                       TCYCLE  13
      DO 1 I = 1,24                                                             TCYCLE  14
      TCYC(I) = TAV                                                             DDAY1  118
    1 CONTINUE                                                                  TCYCLE  16
      RETURN                                                                    TCYCLE  17
C              FIRST RANGE IN RADIANS                                           TCYCLE  18
   11 OMEGR  = 3.14159/(TIMTL-TIMTE)                                            TCYCLE  19
C              SECOND RANGE IN RADIANS                                          TCYCLE  20
      OMEGF  = 3.14159/(24.-TIMTL+TIMTE)                                        TCYCLE  21
      DO 2 I = 1,24                                                             TCYCLE  22
      TIM    = FLOAT(I)                                                         TCYCLE  23
      IF (TIM .GT. TIMTL) GO TO 15                                              TCYCLE  24
      IF (TIM .LE. TIMTE) GO TO 13                                              TCYCLE  25
C              FIRST PARTIAL CYCLE (FROM TIME OF HIGH                           TCYCLE  26
C              TO TIME OF LOW)                                                  TCYCLE  27
      TCYC(I) = TAV - TRANG*COS(OMEGR*(TIM-TIMTE))                              DDAY1  119
      GO TO 2                                                                   TCYCLE  29
C              SECOND PARTIAL CYCLE (FROM TIME OF LOW                           TCYCLE  30
C              TO TIME OF HIGH)                                                 TCYCLE  31
C              ELIMINATE TIME RESET AT MIDNIGHT                                 TCYCLE  32
   13 TIM    = TIM + 24.                                                        TCYCLE  33
   15 TCYC(I) = TAV + TRANG*COS(OMEGF*(TIM-TIMTL))                              DDAY1  120
    2 CONTINUE                                                                  TCYCLE  35
      RETURN                                                                    TCYCLE  36
      END                                                                       TCYCLE  37
      SUBROUTINE TIMPRP(PackedTime,IOUT)                                        -048c    5
C                                                                               TIMPRP   3
C              PREPARE TIME DATA FOR OUTPUT REPORTS                             TIMPRP   4
C                                                                               TIMPRP   5
      COMMON  /CONST/  DTOR, PIOVR2, PIOVR4, IBLNK, UNDEF, IUNDEF,              /CONST/  2
     1                 UNFILD, URAD, DEFIFR, DEFCFR, DEFINC, KWBTU              /CONST/  3
      REAL             KWBTU                                                    /CONST/  4
      COMMON /INTS  / IZERO,IONE,ITWO,ITHREE,IFOUR,IFIVE,ISIX,                  /INTS/   2
     1                ISEVEN,IEIGHT,ININE,ITEN,                                 /INTS/   3
     2                I11,I12,I13,I14,I15,I16,I17,I18,I19,I20,                  /INTS/   4
     3                I21,I22,I23,I24,I25,I26,I27,I28,I29,I30,                  HVAC     4
     4                I31,I32,I33,I34,I35,I36,I37,I38,I39,I40,                  HVAC     5
     5                I41,I42,I43,I44,I45,I46,I47,I48,I49,I50,                  HVAC     6
     $                I51,I52,I53,I54,I55,I56,I57,I58,I59,I60,                  HVAC6    6
     $                I61,I62,I63,I64,I65,I66,I67,I68,I69,I70,                  HVAC6    7
     $                I71,I72,I73,I74,I75,I76,I77,I78,I79,I80,                  HVAC6    8
     $                I81,I82,I83,I84,I85,I86,I87,I88,I89,I90,                  HVAC6    9
     $                I91,I92,I93,I94,I95,I96,I97,I98,I99,I100                  HVAC6   10
      INTEGER         INTS(101)                                                 HVAC6   11
      EQUIVALENCE(IZERO,INTS(1))                                                /INTS/   7
      COMMON /TIME  / IDOY, IDOW, IDSTF, ISCHR, ISCDAY, iDSdates(6),            -044e5r  1
     1                IMO, IDAY, IYR, IHR, CLOCK(10), IDSFLG,                   HOLID1   4
     2                MONDSC(12), MONLEN(12), MONSDA(12), IEODMR                /TIME/   4
C                                                                               TIMPRP   9
      DIMENSION IOUT(6),INTH(10),IAM(4)                                         TIMPRP  10
C                                                                               TIMPRP  11
      DATA INTH / 1H0,1H1,1H2,1H3,1H4,1H5,1H6,1H7,1H8,1H9 /                     TIMPRP  12
      DATA IAM / 4HAM  ,4HNOON, 4HPM  ,4HMDNT /                                 TIMPRP  13
C                                                                               TIMPRP  14
C              PUT MONTH IN IOUT(1), DAY IN IOUT(2-3), HOUR IN                  TIMPRP  15
C              IOUT(4-5), AND AM, PM, NOON, OR MDNT IN IOUT(6)                  TIMPRP  16
C                                                                               TIMPRP  17
      DO 10 I=1,6                                                               TIMPRP  18
   10 IOUT(I) = IBLNK                                                           TIMPRP  19
                                                                                -048c    6
C              Packed time is passed as real; convert to integer                -048c    7
      IN = Int(PackedTime + 0.1)                                                -048c    8
                                                                                -048c    9
      IF (IN .EQ. 0)  RETURN                                                    TIMPRP  20
      I      = IN                                                               TIMPRP  21
      J1     = I/1024                                                           TIMPRP  22
      IOUT(1) = MONDSC(J1)                                                      TIMPRP  23
      J1     = MOD(I,32)                                                        TIMPRP  24
      IF (J1-12) 210,220,230                                                    TIMPRP  25
  210 IOUT(6) = IAM(1)                                                          TIMPRP  26
      GO TO 300                                                                 TIMPRP  27
  220 IOUT(6) = IAM(2)                                                          TIMPRP  28
      GO TO 300                                                                 TIMPRP  29
  230 IOUT(6) = IAM(3)                                                          TIMPRP  30
      J1     = J1 - 12                                                          TIMPRP  31
      IF (J1 .EQ. 12)  IOUT(6) = IAM(4)                                         TIMPRP  32
  300 J2     = (J1/10)                                                          TIMPRP  33
      J1     = MOD(J1,10)                                                       TIMPRP  34
      IOUT(4) = INTH(J2+1)                                                      TIMPRP  35
      IF (IOUT(4) .EQ. INTH(1))  IOUT(4) = IBLNK                                TIMPRP  36
      IOUT(5) = INTH(J1+1)                                                      TIMPRP  37
      J1     = MOD(I,1024)/32                                                   TIMPRP  38
      J2     = (J1/10)                                                          TIMPRP  39
      J1     = MOD(J1,10)                                                       TIMPRP  40
      IOUT(2) = INTH(J2+1)                                                      TIMPRP  41
      IF (IOUT(2) .EQ. INTH(1))  IOUT(2) = IBLNK                                TIMPRP  42
      IOUT(3) = INTH(J1+1)                                                      TIMPRP  43
      RETURN                                                                    TIMPRP  44
      END                                                                       TIMPRP  45
      FUNCTION  TOTL ( X, N )                                                   TOTL     2
C                                                                               TOTL     3
C              RETURN SUM OF X(1), X(2), ... , X(N)                             TOTL     4
C                                                                               TOTL     5
      DIMENSION  X(N)                                                           TOTL     6
      T      = 0.                                                               TOTL     7
      DO  200  I = 1 , N                                                        TOTL     8
      T      = T + X(I)                                                         TOTL     9
  200 CONTINUE                                                                  TOTL    10
      TOTL   = T                                                                TOTL    11
      RETURN                                                                    TOTL    12
      END                                                                       TOTL    13
      SUBROUTINE  UGPRP ( ZUGFUA, ZUGWUA )                                      UGPRP    2
C                                                                               UGPRP    3
C              CALCULATE U*A FOR UNDERGROUND WALLS                              UGPRP    4
C              AND FLOORS                                                       UGPRP    5
C                                                                               UGPRP    6
      COMMON /CLCFLG/ IFSTHR,IPRDFL,IGOLGE,NDD,LDSTYP,IFHRP                     DDAY1    1
      COMMON  /CONST/  DTOR, PIOVR2, PIOVR4, IBLNK, UNDEF, IUNDEF,              /CONST/  2
     1                 UNFILD, URAD, DEFIFR, DEFCFR, DEFINC, KWBTU              /CONST/  3
      REAL             KWBTU                                                    /CONST/  4
      COMMON  /LENS/   MWFLEN, MRLEN, MSHLEN, MWNLEN, MDRLEN, MXLEN,            /LENS/   2
     1                 MULEN, MZLEN, MIWLEN, MFLLEN,                            HRr      5
     2                 LMTB, LLDSOU, MSTLEN, LSTFT, MWLLEN                      BLIND    1
      COMMON  /PNTRS/  MWF,MWP,MP,MR,MG,MH,MWI,MD,MX,MU,MZ,MI,                  /PNTRS/  2
     1                 MWL,                                                     BLIND    2
     1                 MLH, MSS, MOHFIN, MLAST, MGX, MFL                        FLOOR1   3
      COMMON  /PTRBGN/ ISCB, IWFB, IWPB, ICONSB, IGTB, IWLB, IGEOB,             HRr      6
     1                 ISHADB, IWINB, IDRB, IEWB, IUGB, ISPB, IIWPB,            HRr      7
     2                 IIWB, IFLB, ISPCDB, IOTHB, ILHB, IZQCMB, ISSHDB,         HRr      8
     3                 IOHFIB, IZLSK, IZLSL, ISTFB                              HRr      9
      COMMON  /SURFD/  NV, AREA, PERIM, AZIM, TILT, H, W                        /SURFD/  2
      COMMON        // AA(75 000 000)                                           -048ar   1
      INTEGER          IA(75 000 000)                                           -048ar   2
      EQUIVALENCE  (IA(1), AA(1))                                               //       4
C                                                                               UGPRP   14
      MU     = <MZUG>                                                           UGPRP   15
      NSUG   = <NSUG>                                                           UGPRP   16
      DO  1000  IU = 1 , NSUG                                                   UGPRP   17
      MP     = <MUGPROPRL>                                                      LDS1    25
      AREA   = <UGAREA>                                                         UGPRP   19
      IF (<U-EFFECTIVE>.LT.0.) <U-EFFECTIVE> = <UFACTR>                         UGPRP   20
C              SET INITIAL ZONE CONDUCTANCE                                     UGPRP   21
      <ZCONI> = <ZCONI> + <U-EFFECTIVE>*<UGMULT>*AREA                           UGPRP   22
      IF( <IUGTYPE> - 2 ) 300, 400, 500                                         UGPRP   23
  300 ZUGFUA = ZUGFUA + AREA*<UGMULT>*<U-EFFECTIVE>                             UGPRP   24
      GO TO 900                                                                 UGPRP   25
  400 ZUGWUA = ZUGWUA + AREA*<UGMULT>*<U-EFFECTIVE>                             UGPRP   26
      GO TO 900                                                                 UGPRP   27
  500 CONTINUE                                                                  UGPRP   28
  900 MU     = MU + MULEN                                                       UGPRP   29
 1000 CONTINUE                                                                  UGPRP   30
      RETURN                                                                    UGPRP   31
      END                                                                       UGPRP   32
      FUNCTION WBF(H, PB)                                                       WBF      2
C                                                                               WBF      3
C              FINDS WET BULB TEMPERATURE WHEN ENTHALPY                         WBF      4
C              AND PRESSURE ARE GIVEN                                           WBF      5
C                                                                               WBF      6
      IF (PB.NE.29.92) GO TO 2                                                  WBF      7
      IF (H .LE. 0)  GO TO 2                                                    WBF      8
C              IF STANDARD PRESSURE, AND ENTHALPY POSITIVE                      WBF      9
C              DO SIMPLE CALC                                                   WBF     10
      Y      = ALOG(H)                                                          WBF     11
      IF (H.GT.11.758) GO TO 3                                                  WBF     12
      WBF    = 0.6041+3.4841*Y+1.3601*Y*Y+0.97307*Y*Y*Y                         WBF     13
      GO TO 4                                                                   WBF     14
    3 WBF    = 30.9185-39.68200*Y+20.5841*Y*Y-1.758*Y*Y*Y                       WBF     15
      GO TO 4                                                                   WBF     16
C              OTHERWISE ITERATE                                                WBF     17
    2 WB1    = 150.                                                             WBF     18
      PV1 = PPWVM1(WB1)                                                         WBF     19
      W1     = 0.622*PV1/(PB-PV1)                                               WBF     20
      X1     = 0.24*WB1+(1061.+0.444*WB1)*W1                                    WBF     21
      Y1     = H-X1                                                             WBF     22
    9 WB2    = WB1-1.                                                           WBF     23
      PV2 = PPWVM1(WB2)                                                         WBF     24
      W2     = 0.622*PV2/(PB-PV2)                                               WBF     25
      X2     = 0.24*WB2+(1061.+0.444*WB2)*W2                                    WBF     26
      Y2     = H-X2                                                             WBF     27
      IF (Y1*Y2) 6,7,8                                                          WBF     28
    8 WB1    = WB2                                                              WBF     29
      Y1     = Y2                                                               WBF     30
      GO TO 9                                                                   WBF     31
    7 IF (Y1) 10,11,10                                                          WBF     32
   11 WBF    = WB1                                                              WBF     33
      GO TO 4                                                                   WBF     34
   10 WBF    = WB2                                                              WBF     35
      GO TO 4                                                                   WBF     36
    6 Z      = ABS(Y1/Y2)                                                       WBF     37
      WBF    = (WB2*Z+WB1)/(1.+Z)                                               WBF     38
    4 RETURN                                                                    WBF     39
      END                                                                       WBF     40
      SUBROUTINE WDTSUN                                                         WDTSUN   2
C                                                                               WDTSUN   3
C              CALCULATE WEATHER AND SUN HOURLY DATA                            WDTSUN   4
C                                                                               WDTSUN   5
      COMMON /CLCFLG/ IFSTHR,IPRDFL,IGOLGE,NDD,LDSTYP,IFHRP                     DDAY1    1
      COMMON  /INFPAR/ PTWV,DUMG(8),PSE                                         /INFPAR/ 2
      COMMON  /LOCALD/ STALAT, STALON, ITIMZ, BAZIM, BALTIT,                    /LOCALD/ 2
     1                 SSTALA, CSTALA, TSTALA, SBAZIM, CBAZIM                   /LOCALD/ 3
     2                 ,BXORG, BYORG, SHCOEF, TP1, TP2, WSTP1, WSTP2,           /LOCALD/ 4
     3                 WSHGT,WSHGTL(12),ISREFL,IHOLX                            HOLID1   2
      DIMENSION LOCALD(32)                                                      HOLID1   3
      EQUIVALENCE      (LOCALD(1),STALAT)                                       /LOCALD/ 7
      COMMON  /SUND/   ISUNUP, GUNDOG, HORANG, TDECLN, EQTIME, SOLCON,          /SUND/   2
     1                 ATMEXT, SKYDFF, RAYCOS(3), RDN,                          /SUND/   3
     2                 BSUN, DECLN, CD, SD, FSUNUP                              /SUND/   4
      COMMON /TIME  / IDOY, IDOW, IDSTF, ISCHR, ISCDAY, iDSdates(6),            -044e5r  1
     1                IMO, IDAY, IYR, IHR, CLOCK(10), IDSFLG,                   HOLID1   4
     2                MONDSC(12), MONLEN(12), MONSDA(12), IEODMR                /TIME/   4
      COMMON  /WEATH / IWDID(5),LRECX,WLAT,WLONG,LTIMZ,IFX,IWSIZ,               /WEATH/  2
     1                 CLRNES,TGNDR,WBT,DBT,PATM,CLDAMT,ISNOW,IRAIN,            /WEATH/  3
     2                 IWNDDR,HUMRAT,DENSTY,ENTHAL,DIFSOL,DIRSOL,SOLRAD,        /WEATH/  4
     3                 ICLDTY,WNDSPD,IDUMMY,DPT,WNDDRR,CLDCOV,RDNCC,            /WEATH/  5
     4                 BSCC,SKYA,DBTR,GTEMP(12),CLR(12),ESKY,EGND,IWINTR        /WEATH/  6
C                                                                               WDTSUN  12
      IF (NDD .GT. 0)  GO TO 50                                                 WDTSUN  13
C              IF NOT DESIGN DAY, GET WEATHER DATA FROM                         WDTSUN  14
C              THE HOURLY WEATHER FILE                                          WDTSUN  15
      CALL WEATHI                                                               WDTSUN  16
C            DEWPOINT TEMPERATURE                                               WDTSUN  17
      DPT = DEWPT(HUMRAT,PATM)                                                  WDTSUN  18
      GO TO 60                                                                  WDTSUN  19
C              OTHERWISE, GET DESIGN DAY WEATHER                                WDTSUN  20
   50 CALL DESWTH                                                               WDTSUN  21
   60 CONTINUE                                                                  WDTSUN  22
C            SKY INFRARED EMISSIVITY                                            WDTSUN  23
      CALL SKYEM                                                                WDTSUN  24
C              CONVERT WIND DIRECTION FROM 16THS OF CIRCLE                      WDTSUN  25
C              TO RADIANS                                                       WDTSUN  26
      WNDDRR = FLOAT( IWNDDR ) * .39269908                                      WDTSUN  27
C              CALCULATE PRESSURE DUE TO WIND VELOCITY                          WDTSUN  28
      PTWV = .000638*WNDSPD*WNDSPD                                              WDTSUN  29
C              CALCULATE HOUR ANGLE                                             WDTSUN  30
      HORANG = .2618 * (FLOAT(IHR-12+ITIMZ) + EQTIME - 0.5) - STALON            WDTSUN  31
C              SET TEST TO BE THE HOUR ANGLE OF THE BIN EDGE                    WDTSUN  32
C              NEAREST NOON.                                                    WDTSUN  33
      TEST = HORANG + .1309                                                     WDTSUN  34
      IF (IHR .GE. 12)  TEST = HORANG - .1309                                   WDTSUN  35
C              IF SUN IS DOWN, SKIP                                             WDTSUN  36
      IF ( ABS(TEST) .GT. ABS(GUNDOG) )  GO TO 1800                             WDTSUN  37
C              SUN IS UP.  SET FLAG                                             WDTSUN  38
      ISUNUP = 1                                                                WDTSUN  39
C              TEST TO SEE IF THIS HOUR BIN CONTAINS SUNRISE                    WDTSUN  40
C              OR SUNSET                                                        WDTSUN  41
      FSUNUP = 1.                                                               WDTSUN  42
      DIFF = ABS(GUNDOG) - ABS(TEST)                                            WDTSUN  43
      IF ((DIFF .LT. 0.) .OR. (DIFF .GE. 0.2618))  GO TO 200                    WDTSUN  44
C              RESET THE HOUR ANGLE HALF WAY BETWEEN SUNRISE OR                 WDTSUN  45
C              SUNSET AND THE BIN EDGE NEAREST NOON.                            WDTSUN  46
      IF (IHR .LT. 12)  HORANG = HORANG + 0.5*(.2618-DIFF)                      WDTSUN  47
      IF (IHR .GE. 12)  HORANG = HORANG - 0.5*(.2618-DIFF)                      WDTSUN  48
C              SET FSUNUP TO BE THE FRACTION OF THE HOUR                        WDTSUN  49
C              THE SUN WAS UP                                                   WDTSUN  50
      FSUNUP = 3.8197*DIFF                                                      WDTSUN  51
  200 CONTINUE                                                                  WDTSUN  52
      CHCD   = COS( HORANG ) * CD                                               WDTSUN  53
      SHCD   = SIN( HORANG ) * CD                                               WDTSUN  54
      CLSD   = SD * CSTALA                                                      WDTSUN  55
      CHCDSC = CHCD*SSTALA - CLSD                                               WDTSUN  56
C              CALCULATE SOLAR DIRECTION COSINE                                 WDTSUN  57
      RAYCOS(1) = CHCDSC*SBAZIM - SHCD*CBAZIM                                   WDTSUN  58
      RAYCOS(2) = -CHCDSC*CBAZIM - SHCD*SBAZIM                                  WDTSUN  59
      RAYCOS(3) = SSTALA*SD + CSTALA*CHCD                                       WDTSUN  60
      IF (RAYCOS(3) .LT. 0.001)  GO TO 1800                                     WDTSUN  61
      IF ((IFX.GE.5).AND.(NDD.LE.0)) GO TO 2000                                 WDTSUN  62
C              CALCULATE DIRECT NORMAL AND DIFFUSE RADIATION                    WDTSUN  63
C              FOR SKY WITH NO CLOUDS                                           WDTSUN  64
C     IBM MACHINE PROBLEM WITH EXPONENT UNDERFLOW FOR EXP( ).                   WDTSUN  65
C     PROBABLE CAUSE< RAYCOS(3) VERY SMALL --> ARGUMENT VERY LARGE.             WDTSUN  66
C     FIX<  CHECK ARGUMENT FOR LARGE NEGATIVE NUMBER. RDN=0 IF SO.              WDTSUN  67
      ARGUE = -ATMEXT / RAYCOS(3)                                               WDTSUN  68
C              AIR MASS CORRECTION FOR SOLAR ALTITUDE < 15 DEG                  WDTSUN  69
      IF(RAYCOS(3).LT.0.2588)                                                   WDTSUN  70
     1 ARGUE = -ATMEXT /                                                        WDTSUN  71
     2 (RAYCOS(3)+0.15*(93.885-57.296*ACOS(RAYCOS(3)))**(-1.253))               WDTSUN  72
      IF(ARGUE .LT. -50.0)  GOTO 1                                              WDTSUN  73
      RDN = SOLCON * CLRNES * EXP( ARGUE )                                      WDTSUN  74
      GO TO 2                                                                   WDTSUN  75
C1    WRITE (6,3)                                                               WDTSUN  76
C3    FORMAT (' >>>>NOTE< WILL HAVE EXPONENT UNDERFLOW.  RESULT 0')             WDTSUN  77
C   LET'S NOT PRINT OUT ANY MESSAGES (JUST A NUSIANCE <)                        WDTSUN  78
 1    CONTINUE                                                                  WDTSUN  79
      RDN = 0.0                                                                 WDTSUN  80
 2    CONTINUE                                                                  WDTSUN  81
      BSUN   = RDN * SKYDFF / ( CLRNES*CLRNES )                                 WDTSUN  82
C              GET CLDCOV, THE CLOUD COVER MODIFIER                             WDTSUN  83
      CALL  CCM                                                                 WDTSUN  84
      IF (CLDAMT .LE. 0.001) CLDCOV = 1.0                                       WDTSUN  85
C              GET DIRECT NORMAL AND DIFFUSE FOR                                WDTSUN  86
C              A CLOUDY SKY                                                     WDTSUN  87
      SOLRAD = (RDN*RAYCOS(3)+BSUN)*CLDCOV*FSUNUP                               WDTSUN  88
      RDNCC = FSUNUP*RDN*(1.-0.1*CLDAMT)                                        WDTSUN  89
      BSCC   = SOLRAD - RDNCC*RAYCOS(3)                                         WDTSUN  90
      BSCC   = AMAX1(BSCC,0.)                                                   WDTSUN  91
      GO TO 3000                                                                WDTSUN  92
C              SUN DOWN                                                         WDTSUN  93
 1800 ISUNUP = 0                                                                WDTSUN  94
      RDN    = 0.                                                               WDTSUN  95
      BSUN   = 0.                                                               WDTSUN  96
      CLDCOV = 0.                                                               WDTSUN  97
      RDNCC  = 0.                                                               WDTSUN  98
      BSCC   = 0.                                                               WDTSUN  99
      SOLRAD = 0.                                                               WDTSUN 100
      DIRSOL = 0.                                                               WDTSUN 101
      DIFSOL = 0.                                                               WDTSUN 102
      RAYCOS(3) = 0.                                                            WDTSUN 103
      GO TO 3000                                                                WDTSUN 104
 2000 CONTINUE                                                                  WDTSUN 105
C              USE MEASURED SOLAR DATA                                          WDTSUN 106
      RDN    = 0.                                                               WDTSUN 107
      BSUN   = 0.                                                               WDTSUN 108
      RDNCC  = DIRSOL                                                           WDTSUN 109
      BSCC   = SOLRAD - DIRSOL*RAYCOS(3)                                        WDTSUN 110
      IF (IFX.GE.7)  BSCC=DIFSOL                                                WDTSUN 111
      IF (BSCC .LT. 0.)  BSCC = 0.                                              WDTSUN 112
 3000 CONTINUE                                                                  WDTSUN 113
      RETURN                                                                    WDTSUN 114
      END                                                                       WDTSUN 115
      SUBROUTINE WRITEN(IFILE,ARRAY,NUMBER)                                     WRITEN   2
C                                                                               WRITEN   3
C                 THIS ROUTINE JUST DOES AN ORDINARY BINARY WRITE               WRITEN   4
C                                                                               WRITEN   5
C                                                                               WRITEN   6
      DIMENSION ARRAY(NUMBER)                                                   WRITEN   7
      WRITE (IFILE) ARRAY                                                       WRITEN   8
      RETURN                                                                    WRITEN   9
      END                                                                       WRITEN  10
